uint64_t sub_1D579E058(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatSubgroupData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

void sub_1D579E0D0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1D579E208(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3();
    a4();
    v6 = sub_1D5AADB48();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1D579E278()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1D579E448(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D579E47C()
{
  sub_1D579E4C8();
  return sub_1D5AAE91C();
}

unint64_t sub_1D579E4C8()
{
  unint64_t result;

  result = qword_1ED9D00E8;
  if (!qword_1ED9D00E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BadgeOriginationType, &type metadata for BadgeOriginationType);
    atomic_store(result, (unint64_t *)&qword_1ED9D00E8);
  }
  return result;
}

uint64_t AutoSubscribedTagListData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D57AD8D0(0, &qword_1ED9CD6C0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AD92C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void SessionObserver.observeValue(forKeyPath:of:change:context:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  void *v5;
  objc_class *ObjectType;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  objc_super v20;
  _QWORD v21[3];
  uint64_t v22;

  ObjectType = (objc_class *)swift_getObjectType();
  if (!a2)
  {
LABEL_10:
    sub_1D57C54D4(a3, (uint64_t)v21);
    v12 = v22;
    if (v22)
    {
      v13 = __swift_project_boxed_opaque_existential_1(v21, v22);
      v14 = *(_QWORD *)(v12 - 8);
      MEMORY[0x1E0C80A78](v13);
      v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v14 + 16))(v16);
      v17 = sub_1D5AAEDCC();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      if (!a4)
      {
LABEL_13:
        v20.receiver = v5;
        v20.super_class = ObjectType;
        objc_msgSendSuper2(&v20, sel_observeValueForKeyPath_ofObject_change_context_, a2, v17, a4, a5);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      v17 = 0;
      if (!a4)
        goto LABEL_13;
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_1D57C5A30();
    a4 = (void *)sub_1D5AAE784();
    goto LABEL_13;
  }
  if ((a1 != 0x656D617266 || a2 != (void *)0xE500000000000000) && (sub_1D5AAEDE4() & 1) == 0)
  {
    a2 = (void *)sub_1D5AAE7FC();
    goto LABEL_10;
  }
  sub_1D57C54D4(a3, (uint64_t)v21);
  if (v22)
  {
    sub_1D57A02FC();
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1D57B80E4(v19);

    }
  }
  else
  {
    sub_1D57C5484((uint64_t)v21);
  }
}

uint64_t sub_1D579E880()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D579E904()
{
  return sub_1D5AADB3C();
}

uint64_t type metadata accessor for TrackerConfiguration()
{
  return objc_opt_self();
}

uint64_t static UserNotificationSettingsManager.shared.getter()
{
  if (qword_1ED9CD8B0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t AutoSubscribedData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1D57AA394(0, &qword_1ED9CD698, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AA350();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t SessionObserver.sceneSessionIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sceneSessionIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DebugAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1D579EB14()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AAD710();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D579EBC8()
{
  sub_1D579EC14();
  return sub_1D5AAE91C();
}

unint64_t sub_1D579EC14()
{
  unint64_t result;

  result = qword_1ED9D0010;
  if (!qword_1ED9D0010)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedGroupLayoutPath, &type metadata for FeedGroupLayoutPath);
    atomic_store(result, (unint64_t *)&qword_1ED9D0010);
  }
  return result;
}

uint64_t sub_1D579EC58(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD v5[5];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v2 = type metadata accessor for FlushAnalyticsBatchesStartupTask();
  result = sub_1D5AAE058();
  if (result)
  {
    v4 = result;
    v5[3] = v2;
    v5[4] = sub_1D57A84D4(&qword_1ED9C7318, 255, (uint64_t (*)(uint64_t))type metadata accessor for FlushAnalyticsBatchesStartupTask, (uint64_t)&protocol conformance descriptor for FlushAnalyticsBatchesStartupTask);
    v5[0] = v4;
    sub_1D5AAE1F0();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t destroy for IssueData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D579ED30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D579EDB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D579EE70()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t SubscribedSportsListData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D57AB600(0, &qword_1ED9D0D18, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AB5BC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57AB568();
    sub_1D57AB65C(&qword_1ED9D0C60, (uint64_t (*)(void))sub_1D57CACA0, MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D579F0B4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D579F1C8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AppSessionObserver()
{
  return objc_opt_self();
}

uint64_t sub_1D579F2DC()
{
  sub_1D579F328();
  return sub_1D5AAE91C();
}

unint64_t sub_1D579F328()
{
  unint64_t result;

  result = qword_1ED9C8D78;
  if (!qword_1ED9C8D78)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NetworkEventType, &type metadata for NetworkEventType);
    atomic_store(result, (unint64_t *)&qword_1ED9C8D78);
  }
  return result;
}

uint64_t sub_1D579F36C()
{
  sub_1D579F3B8();
  return sub_1D5AAE91C();
}

unint64_t sub_1D579F3B8()
{
  unint64_t result;

  result = qword_1ED9C93F0;
  if (!qword_1ED9C93F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DeviceOrientation, &type metadata for DeviceOrientation);
    atomic_store(result, (unint64_t *)&qword_1ED9C93F0);
  }
  return result;
}

uint64_t sub_1D579F3FC()
{
  sub_1D579F448();
  return sub_1D5AAE91C();
}

unint64_t sub_1D579F448()
{
  unint64_t result;

  result = qword_1ED9CA4A8;
  if (!qword_1ED9CA4A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InterfaceOrientation, &type metadata for InterfaceOrientation);
    atomic_store(result, (unint64_t *)&qword_1ED9CA4A8);
  }
  return result;
}

uint64_t sub_1D579F48C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D579F530()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D579F610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v0 = sub_1D5AAD878();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))((char *)&v9 - v5, *MEMORY[0x1E0DB57E8], v0);
  type metadata accessor for Settings.Analytics.Debugging.Jitter();
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v7 = sub_1D5AAD824();
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  qword_1ED9CD8F8 = v7;
  return result;
}

uint64_t sub_1D579F71C()
{
  sub_1D579F768();
  return sub_1D5AAE91C();
}

unint64_t sub_1D579F768()
{
  unint64_t result;

  result = qword_1ED9CF5F8;
  if (!qword_1ED9CF5F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PrivateUserType, &type metadata for PrivateUserType);
    atomic_store(result, (unint64_t *)&qword_1ED9CF5F8);
  }
  return result;
}

uint64_t sub_1D579F7AC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  id v5;
  id v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB5E4(0, &qword_1ED9CC768);
  result = sub_1D5AAE058();
  if (result)
  {
    v4 = result;
    v5 = objc_allocWithZone((Class)type metadata accessor for PrivacyValidationProvider());
    v6 = sub_1D5854864(v4);
    result = sub_1D57A84D4(&qword_1ED9CDDA8, 255, (uint64_t (*)(uint64_t))type metadata accessor for PrivacyValidationProvider, (uint64_t)&unk_1D5AB9778);
    *a2 = v6;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D579F85C()
{
  sub_1D579F8A8();
  return sub_1D5AAE91C();
}

unint64_t sub_1D579F8A8()
{
  unint64_t result;

  result = qword_1ED9CC4E0;
  if (!qword_1ED9CC4E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewType, &type metadata for ViewType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4E0);
  }
  return result;
}

uint64_t sub_1D579F8EC()
{
  sub_1D57B1F4C(0, &qword_1ED9CE0E8, (uint64_t (*)(uint64_t))sub_1D57C596C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1D5AAE2C8();
}

uint64_t sub_1D579F958()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for PrivacySampler()
{
  return objc_opt_self();
}

uint64_t sub_1D579FB00(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57C5894(0, &qword_1ED9CC8A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CBAB0();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DynamicEndpoint.init(appConfigurationManager:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = FCDefaultsReadEndpointEnvironment();
  return v1;
}

uint64_t type metadata accessor for TrackerAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for NotificationReceiptReporter()
{
  return objc_opt_self();
}

uint64_t MutedTagListData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D57AD520(0, &qword_1ED9CD8E8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AD57C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for FeedLayoutTracker()
{
  return objc_opt_self();
}

uint64_t FeedLayoutResult.LayoutPath.analyticsLayoutPath.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  char v9;
  uint64_t v10;

  v2 = v1;
  v4 = sub_1D5AAE484();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if ((_DWORD)result == *MEMORY[0x1E0D5A9A0])
  {
    v9 = 0;
LABEL_7:
    *a1 = v9;
    return result;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5A998])
  {
    v9 = 1;
    goto LABEL_7;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5A9A8])
  {
    v9 = 2;
    goto LABEL_7;
  }
  result = sub_1D5AAEDD8();
  __break(1u);
  return result;
}

uint64_t sub_1D579FEC0()
{
  sub_1D579FF0C();
  return sub_1D5AAE91C();
}

unint64_t sub_1D579FF0C()
{
  unint64_t result;

  result = qword_1ED9CBAE8;
  if (!qword_1ED9CBAE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CellularRadioAccessTechnology, &type metadata for CellularRadioAccessTechnology);
    atomic_store(result, (unint64_t *)&qword_1ED9CBAE8);
  }
  return result;
}

uint64_t sub_1D579FF50()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1D57A001C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED9C67A8;
  if (!qword_1ED9C67A8)
  {
    v1 = sub_1D5AAD818();
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DB54F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED9C67A8);
  }
  return result;
}

uint64_t sub_1D57A0064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1D5AAD878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57A0338(0, (unint64_t *)&unk_1ED9C6F68);
  v5[2] = 1;
  v5[3] = 50;
  v5[1] = 50;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1D5AAD8C0();
  qword_1ED9C6F58 = result;
  return result;
}

uint64_t sub_1D57A0154()
{
  sub_1D57A01A0();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A01A0()
{
  unint64_t result;

  result = qword_1ED9CEED0;
  if (!qword_1ED9CEED0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TextSize, &type metadata for TextSize);
    atomic_store(result, (unint64_t *)&qword_1ED9CEED0);
  }
  return result;
}

uint64_t sub_1D57A01E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;

  v5 = sub_1D5AAD878();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D5AAD818();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57A16A8();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB54D8], v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E8], v5);
  result = sub_1D5AAD8B4();
  *a4 = result;
  return result;
}

unint64_t sub_1D57A02FC()
{
  unint64_t result;

  result = qword_1ED9CC7A8;
  if (!qword_1ED9CC7A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CC7A8);
  }
  return result;
}

void sub_1D57A0338(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1D5AAD8CC();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1D57A0380()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AAD668();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t WebAccessTagListData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D57AD6F8(0, &qword_1ED9CD6A0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AD754();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for FactoryAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1D57A0570(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57C5AC8();
  result = sub_1D5AAE058();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D57BB598(0, (unint64_t *)&unk_1ED9D1078);
    result = sub_1D5AAE064();
    if (v5)
    {
      type metadata accessor for HeartbeatEventService();
      swift_allocObject();
      return sub_1D58ED3E0(v3, &v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t PaidSubscribedTagListData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D57AB1FC(0, &qword_1ED9CD6C8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AB1B8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void *sub_1D57A07A4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  void *result;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1D57BB5E4(0, (unint64_t *)&unk_1ED9CC770);
  result = (void *)sub_1D5AAE058();
  if (result)
  {
    objc_msgSend(result, sel_addAppSessionObserver_, v2);
    return (void *)swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D57A0824()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D57A08F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB5E4(0, &qword_1ED9CC768);
  result = sub_1D5AAE058();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for TrackerConfiguration();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1E9A31AC8;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D57A098C()
{
  sub_1D57A09D8();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A09D8()
{
  unint64_t result;

  result = qword_1ED9C7630;
  if (!qword_1ED9C7630)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewAction, &type metadata for ViewAction);
    atomic_store(result, (unint64_t *)&qword_1ED9C7630);
  }
  return result;
}

uint64_t sub_1D57A0A1C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57C5780(0, &qword_1ED9CEFE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CA96C();
  sub_1D5AAEEC8();
  type metadata accessor for HeartbeatData();
  sub_1D57CAE08(&qword_1ED9CEB50, (uint64_t)&protocol conformance descriptor for HeartbeatData);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FeedJournalEntryData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  sub_1D57C56C8(0, &qword_1ED9D0D80, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57C8850();
  sub_1D5AAEEC8();
  v14 = v9;
  v13 = 0;
  sub_1D57C5B68();
  sub_1D57C5B04(&qword_1ED9D0C98, (uint64_t (*)(void))sub_1D589C6F8, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v12 = 1;
    sub_1D5AAED84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D57A0C88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for PrivacySaltProvider()
{
  return objc_opt_self();
}

uint64_t sub_1D57A0D64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D57A0E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v0 = sub_1D5AADDDC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5AADD7C();
  *v3 = 11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CF8430], v0);
  return sub_1D5AADD70();
}

void AppData.init(client:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1D5AADECC();
  v6 = v5;
  v7 = sub_1D5AADEB4();
  v9 = v8;

  *a2 = v4;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v9;
}

uint64_t sub_1D57A0F1C()
{
  sub_1D57C5CCC(0, (unint64_t *)&qword_1ED9CC630, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1D5AAE2C8();
}

uint64_t SubscribedTagListData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D57ADAEC(0, &qword_1ED9CD6A8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57ADAA8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D57A10D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AAD710();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D57A114C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9CDDB8);
  result = sub_1D5AAE064();
  if (v6[3])
  {
    v4 = type metadata accessor for RollingTimestampConfigurationProvider();
    swift_allocObject();
    v5 = sub_1D57A7564(v6, 15.0);
    a2[3] = v4;
    result = sub_1D57A84D4(&qword_1ED9CEE60, 255, (uint64_t (*)(uint64_t))type metadata accessor for RollingTimestampConfigurationProvider, (uint64_t)&unk_1D5ADF1C0);
    a2[4] = result;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D57A1220()
{
  sub_1D57A126C();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A126C()
{
  unint64_t result;

  result = qword_1ED9C75A8;
  if (!qword_1ED9C75A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CacheState, &type metadata for CacheState);
    atomic_store(result, (unint64_t *)&qword_1ED9C75A8);
  }
  return result;
}

uint64_t sub_1D57A12B0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D57A1350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1D5AAD878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57A0338(0, (unint64_t *)&unk_1ED9C6F68);
  v5[3] = 10;
  v5[2] = 5;
  v5[1] = 20;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1D5AAD8C0();
  qword_1ED9CF090 = result;
  return result;
}

uint64_t FeedJournalEntry.analyticsData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  double v5;

  v2 = sub_1D5AAE454();
  v3 = sub_1D586F2DC(v2);
  swift_bridgeObjectRelease();
  result = sub_1D5AAE460();
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v5 < 9.22337204e18)
  {
    *a1 = v3;
    a1[1] = (uint64_t)v5;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D57A14E0()
{
  sub_1D57A152C();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A152C()
{
  unint64_t result;

  result = qword_1ED9CD470;
  if (!qword_1ED9CD470)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdJournalEntryStatus, &type metadata for AdJournalEntryStatus);
    atomic_store(result, (unint64_t *)&qword_1ED9CD470);
  }
  return result;
}

uint64_t sub_1D57A1570(_QWORD *a1)
{
  _BYTE v2[40];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1ED9CD8B0 != -1)
    swift_once();
  sub_1D57A84D4(qword_1ED9CE040, 255, (uint64_t (*)(uint64_t))type metadata accessor for UserNotificationSettingsManager, (uint64_t)&protocol conformance descriptor for UserNotificationSettingsManager);
  sub_1D5AAE22C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1D57A1618()
{
  sub_1D57A1664();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A1664()
{
  unint64_t result;

  result = qword_1ED9CD188;
  if (!qword_1ED9CD188)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdCreativeType, &type metadata for AdCreativeType);
    atomic_store(result, (unint64_t *)&qword_1ED9CD188);
  }
  return result;
}

void sub_1D57A16A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C67B0)
  {
    sub_1D5AAD818();
    sub_1D57A001C();
    v0 = sub_1D5AAD8CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C67B0);
  }
}

uint64_t sub_1D57A1708()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D57A17F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

NewsAnalytics::BundleSubscriptionStatus_optional __swiftcall BundleSubscriptionStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::BundleSubscriptionStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1D57A18F4(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB5E4(0, &qword_1ED9CC768);
  result = sub_1D5AAE058();
  if (result)
  {
    v2 = result;
    type metadata accessor for DynamicEndpoint();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = FCDefaultsReadEndpointEnvironment();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for HeartbeatAssembly()
{
  return objc_opt_self();
}

void sub_1D57A19A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57B663C(255, &qword_1ED9CE138);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57A1A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

void sub_1D57A1AE8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1D57A1BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

void sub_1D57A1CA8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1D57A1D88@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
}

void sub_1D57A1ED8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      if (v2 <= 0x3F)
      {
        sub_1D57A8C9C();
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1D57A2010()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
    if (v1 <= 0x3F)
    {
      sub_1D57A8D40();
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_1D57A212C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1D57A23B0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                      if (v10 <= 0x3F)
                        swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1D57A2670()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                      if (v10 <= 0x3F)
                        swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1D57A2930()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                          if (v12 <= 0x3F)
                            swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1D57A2C68()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
                            if (v13 <= 0x3F)
                            {
                              sub_1D579E208(319, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
                              if (v14 <= 0x3F)
                              {
                                sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                                if (v15 <= 0x3F)
                                  swift_initStructMetadata();
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1D57A3034()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1D57A3298()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              if (v6 <= 0x3F)
              {
                sub_1D57A8C9C();
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
                          if (v12 <= 0x3F)
                            swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1D57A35B0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  char v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v4 = "(";
  v5 = MEMORY[0x1E0DE9D38] + 64;
  v6 = MEMORY[0x1E0DE9D48] + 64;
  result = sub_1D5AADD34();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v7 = &v3;
    result = sub_1D5AAD710();
    if (v2 <= 0x3F)
    {
      v8 = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

id sub_1D57A3678(_QWORD *a1)
{
  id result;
  id v2;
  objc_class *v3;
  char *v4;
  objc_super v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AAD968();
  result = (id)sub_1D5AAE058();
  if (result)
  {
    v2 = result;
    v3 = (objc_class *)type metadata accessor for AppSessionObserver();
    v4 = (char *)objc_allocWithZone(v3);
    *(_QWORD *)&v4[OBJC_IVAR____TtC13NewsAnalytics18AppSessionObserver_appSessionManager] = v2;
    v5.receiver = v4;
    v5.super_class = v3;
    return objc_msgSendSuper2(&v5, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for FlushAnalyticsBatchesStartupTask()
{
  return objc_opt_self();
}

void sub_1D57A3728(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void *), uint64_t a5, void (*a6)(void))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v10 = a3 + 16;
  swift_beginAccess();
  v11 = MEMORY[0x1D8279758](v10);
  if (v11)
  {
    v12 = (char *)v11;
    if (a2)
    {
      v13 = a2;
      sub_1D5AAEA0C();
      sub_1D57B34CC();
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1D5AB0170;
      sub_1D57E6B18(0, (unint64_t *)&qword_1ED9CD090);
      sub_1D5AAEBEC();
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 64) = sub_1D57B356C();
      *(_QWORD *)(v14 + 32) = 0;
      *(_QWORD *)(v14 + 40) = 0xE000000000000000;
      sub_1D57B3530();
      v15 = (void *)sub_1D5AAEAA8();
      sub_1D5AAE328();
      swift_bridgeObjectRelease();

      a4(a2);
    }
    else
    {
      if (a1)
      {
        v19 = swift_unknownObjectRetain();
        ((void (*)(uint64_t))a6)(v19);
      }
      else
      {
        sub_1D5AAEA0C();
        sub_1D57B3530();
        v20 = (void *)sub_1D5AAEAA8();
        sub_1D5AAE328();

        objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC13NewsAnalytics25PrivacyValidationProvider_appConfigurationManager], sel_possiblyUnfetchedAppConfiguration);
        a6();
      }

      swift_unknownObjectRelease();
    }
  }
  else
  {
    v16 = sub_1D5AAE040();
    sub_1D5854D14();
    v17 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x1E0DB3590], v16);
    a4(v17);

  }
}

uint64_t sub_1D57A399C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v6[4];

  v0 = sub_1D5AAE070();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AAE094();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1D5AAE364();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB36E0], v0);
  sub_1D5AAE238();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_1D57A3A90()
{
  sub_1D57A3ADC();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A3ADC()
{
  unint64_t result;

  result = qword_1ED9C8D98;
  if (!qword_1ED9C8D98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OsInstallVariant, &type metadata for OsInstallVariant);
    atomic_store(result, (unint64_t *)&qword_1ED9C8D98);
  }
  return result;
}

uint64_t sub_1D57A3B20()
{
  sub_1D57A3B6C();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A3B6C()
{
  unint64_t result;

  result = qword_1ED9CA490;
  if (!qword_1ED9CA490)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupFormationReason, &type metadata for GroupFormationReason);
    atomic_store(result, (unint64_t *)&qword_1ED9CA490);
  }
  return result;
}

_QWORD *sub_1D57A3BB0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  id v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB5E4(0, &qword_1ED9CC768);
  result = (_QWORD *)sub_1D5AAE058();
  if (result)
  {
    v4 = objc_msgSend(result, sel_possiblyUnfetchedAppConfiguration);
    swift_unknownObjectRelease();
    v5 = type metadata accessor for TimestampJitterFactory();
    result = (_QWORD *)swift_allocObject();
    result[2] = v4;
    a2[3] = v5;
    a2[4] = &off_1E9A49CB0;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D57A3C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  v5 = sub_1D5AAD878();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D5AAD884();
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, _QWORD))(v11 + 104))((char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800]);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E0], v5);
  sub_1D57CC14C();
  v13[0] = 0;
  v13[1] = 0;
  swift_allocObject();
  result = sub_1D5AAD8D8();
  *a4 = result;
  return result;
}

uint64_t Tracker.chain(path:identifier:dynamicDataIdentifier:)()
{
  uint64_t v0;

  EventPath.rawValue.getter();
  v0 = sub_1D5AADF44();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EventPath.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57A3E3C + 4 * word_1D5AD203C[*v0]))(0x7472656C61, 0xE500000000000000);
}

uint64_t sub_1D57A3E3C()
{
  return 0x656C6369747261;
}

unint64_t sub_1D57A3E54()
{
  return 0xD000000000000014;
}

uint64_t sub_1D57A4410()
{
  return 0x656C7A7A7570;
}

uint64_t sub_1D57A4424()
{
  return 0x74756374726F6873;
}

uint64_t sub_1D57A4444()
{
  return 0x6E65746E49707061;
}

uint64_t initializeBufferWithCopyOfBuffer for UserBundleSubscriptionContextData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t FeedJournalGroupResultData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[2];
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  sub_1D57C566C(0, &qword_1ED9D0DC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v14 = *(_QWORD *)(v1 + 24);
  v15 = v8;
  v13 = *(unsigned __int8 *)(v1 + 32);
  v12[1] = *(_QWORD *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57C713C();
  sub_1D5AAEEC8();
  v21 = 0;
  v9 = v16;
  sub_1D5AAECF4();
  if (!v9)
  {
    v10 = v13;
    v20 = 1;
    sub_1D5AAECF4();
    v19 = v10;
    v18 = 2;
    sub_1D57C6E1C();
    sub_1D5AAED6C();
    v17 = 3;
    sub_1D5AAED84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D57A4644()
{
  sub_1D57A4690();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A4690()
{
  unint64_t result;

  result = qword_1ED9CC558;
  if (!qword_1ED9CC558)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupType, &type metadata for GroupType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC558);
  }
  return result;
}

uint64_t sub_1D57A46D4()
{
  sub_1D57A4720();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A4720()
{
  unint64_t result;

  result = qword_1ED9CC4A0;
  if (!qword_1ED9CC4A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserType, &type metadata for UserType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4A0);
  }
  return result;
}

uint64_t sub_1D57A4764(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  sub_1D5AADB84();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1D5AADCF8();
  result = sub_1D5AAE058();
  if (result)
  {
    sub_1D5AADC44();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D57A47F0()
{
  sub_1D57A483C();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A483C()
{
  unint64_t result;

  result = qword_1ED9CAE20;
  if (!qword_1ED9CAE20)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ContentEnvironmentType, &type metadata for ContentEnvironmentType);
    atomic_store(result, (unint64_t *)&qword_1ED9CAE20);
  }
  return result;
}

id sub_1D57A4880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  uint64_t v14;

  v5 = sub_1D5AADC68();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v14 - v10);
  v12 = (void *)swift_unknownObjectRetain();
  sub_1D57B59BC(v12, v11);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 16))(v9, v11, v5);
  swift_retain();
  sub_1D5AAE28C();
  swift_release();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v11, v5);
  return objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC13NewsAnalytics25PrivacyValidationProvider_appConfigurationManager), sel_addAppConfigObserver_, a3);
}

_QWORD *_s13NewsAnalytics33FractionalCohortMembershipDetailsVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D57A49E0()
{
  sub_1D57A4A2C();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A4A2C()
{
  unint64_t result;

  result = qword_1ED9C7BA8;
  if (!qword_1ED9C7BA8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupLocation, &type metadata for GroupLocation);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BA8);
  }
  return result;
}

uint64_t sub_1D57A4A70(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AADBFC();
  result = sub_1D5AAE058();
  if (result)
  {
    v2 = sub_1D5AADBF0();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D57A4AD8(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for FeedJournalGroupResultData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1D57A4C04(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57C0C24(0, (unint64_t *)&unk_1ED9D0DE0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t HeartbeatData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1D57C5838(0, &qword_1ED9CEFC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CAF94();
  sub_1D5AAEEC8();
  v9[15] = 0;
  sub_1D5AAED3C();
  if (!v1)
  {
    type metadata accessor for HeartbeatData();
    v9[14] = 1;
    sub_1D5AAD710();
    sub_1D57A8DE4(&qword_1ED9CE508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1D5AAED6C();
    v9[13] = 2;
    sub_1D5AAED3C();
    v9[12] = 3;
    sub_1D5AAED3C();
    v9[11] = 4;
    sub_1D5AAED3C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57A4FE8()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  char v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  _BYTE v16[40];

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext];
  v3 = objc_msgSend(v2, sel_userInfo);
  v15 = objc_msgSend(v3, sel_onboardingVersionNumber);

  if (v15)
  {
    v4 = OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_onboardingVersion;
    v5 = *(void **)&v1[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_onboardingVersion];
    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7A0);
    v6 = v5;
    v7 = sub_1D5AAEA9C();

    if ((v7 & 1) != 0)
    {

    }
    else
    {
      v8 = *(void **)&v1[v4];
      *(_QWORD *)&v1[v4] = v15;
      v9 = v15;

      v10 = objc_msgSend(v2, sel_userInfo);
      sub_1D5AADBF0();
      *(_QWORD *)(swift_allocObject() + 16) = v10;
      v11 = v10;
      sub_1D5AADF14();
      swift_release();
      swift_release();
      sub_1D57BCF08((uint64_t)&v1[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_appExtensionCommunicator], (uint64_t)v16);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v11;
      *(_QWORD *)(v12 + 24) = v1;
      sub_1D57BFBB0((uint64_t)v16, v12 + 32);
      v13 = v11;
      v14 = v1;
      sub_1D5AADB9C();

      swift_release();
    }
  }
}

uint64_t sub_1D57A51C4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v15[16];

  v7 = sub_1D5AAD878();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1D5AAD884();
  MEMORY[0x1E0C80A78](v11);
  (*(void (**)(_BYTE *, _QWORD))(v13 + 104))(&v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB57E0], v7);
  v15[15] = a2;
  sub_1D57A0338(0, (unint64_t *)&qword_1ED9C6F60);
  swift_allocObject();
  result = sub_1D5AAD8D8();
  *a5 = result;
  return result;
}

uint64_t sub_1D57A5304(uint64_t a1)
{
  uint64_t v1;
  __int128 v3[2];

  sub_1D57B6254(a1, (uint64_t)v3);
  v1 = swift_allocObject();
  sub_1D57ADBD0(v3, v1 + 16);
  sub_1D5AADCF8();
  swift_allocObject();
  return sub_1D5AADCEC();
}

uint64_t sub_1D57A5378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1D5AAD878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D5AAD884();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD))(v6 + 104))((char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800]);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_1D57A0338(0, &qword_1ED9C67B8);
  swift_allocObject();
  result = sub_1D5AAD8D8();
  qword_1ED9C67A0 = result;
  return result;
}

uint64_t type metadata accessor for DynamicEndpoint()
{
  return objc_opt_self();
}

_QWORD *sub_1D57A54CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57B5C60(0, &qword_1ED9CE1B8, (void (*)(uint64_t))sub_1D57CC0FC);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1D57CC0FC();
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1D57A55F4()
{
  sub_1D57A5640();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A5640()
{
  unint64_t result;

  result = qword_1ED9C7BF0;
  if (!qword_1ED9C7BF0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DevicePlatform, &type metadata for DevicePlatform);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BF0);
  }
  return result;
}

uint64_t sub_1D57A5684(_QWORD *a1)
{
  return AdCreativeData.encode(to:)(a1);
}

uint64_t AdCreativeData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D57A579C(0, &qword_1ED9CD6E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A583C();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D57A57F8();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57A579C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A583C();
    v7 = a3(a1, &type metadata for AdCreativeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A57F8()
{
  unint64_t result;

  result = qword_1ED9CCD68;
  if (!qword_1ED9CCD68)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdCreativeType, &type metadata for AdCreativeType);
    atomic_store(result, (unint64_t *)&qword_1ED9CCD68);
  }
  return result;
}

unint64_t sub_1D57A583C()
{
  unint64_t result;

  result = qword_1ED9CD168;
  if (!qword_1ED9CD168)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE8738, &type metadata for AdCreativeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD168);
  }
  return result;
}

uint64_t sub_1D57A5880(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, unsigned int *a4)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a2(0);
  __swift_allocate_value_buffer(v6, a3);
  v7 = __swift_project_value_buffer(v6, (uint64_t)a3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v7, *a4, v6);
}

uint64_t sub_1D57A58D8@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

int *NetworkEventData.init(startTime:dnsDuration:connectDuration:requestDuration:responseDuration:responseSize:cacheState:statusCode:errorCode:eventType:wifiReachabilityStatus:cellularRadioAccessTechnology:respondingPop:isProxyConnection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char *a11, char a12, char *a13, uint64_t a14, uint64_t a15, char a16)
{
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  int *result;
  _QWORD *v27;

  v22 = *a7;
  v23 = *a11;
  v24 = *a13;
  v25 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a9, a1, v25);
  result = (int *)type metadata accessor for NetworkEventData();
  *(_QWORD *)(a9 + result[5]) = a2;
  *(_QWORD *)(a9 + result[6]) = a3;
  *(_QWORD *)(a9 + result[7]) = a4;
  *(_QWORD *)(a9 + result[8]) = a5;
  *(_QWORD *)(a9 + result[9]) = a6;
  *(_BYTE *)(a9 + result[10]) = v22;
  *(_QWORD *)(a9 + result[11]) = a8;
  *(_QWORD *)(a9 + result[12]) = a10;
  *(_BYTE *)(a9 + result[13]) = v23;
  *(_BYTE *)(a9 + result[14]) = a12;
  *(_BYTE *)(a9 + result[15]) = v24;
  v27 = (_QWORD *)(a9 + result[16]);
  *v27 = a14;
  v27[1] = a15;
  *(_BYTE *)(a9 + result[17]) = a16;
  return result;
}

uint64_t sub_1D57A5A88@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
}

void sub_1D57A5C34()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      if (v2 <= 0x3F)
      {
        sub_1D57A8C9C();
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t sub_1D57A5DA8(_QWORD *a1)
{
  return FeedGroupLayoutData.encode(to:)(a1);
}

uint64_t FeedGroupLayoutData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D57A5EC0(0, &qword_1ED9D0D70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A5F60();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D57A5F1C();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57A5EC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A5F60();
    v7 = a3(a1, &type metadata for FeedGroupLayoutData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A5F1C()
{
  unint64_t result;

  result = qword_1ED9D0008;
  if (!qword_1ED9D0008)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedGroupLayoutPath, &type metadata for FeedGroupLayoutPath);
    atomic_store(result, (unint64_t *)&qword_1ED9D0008);
  }
  return result;
}

unint64_t sub_1D57A5F60()
{
  unint64_t result;

  result = qword_1ED9CFFE0;
  if (!qword_1ED9CFFE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8BE8, &type metadata for FeedGroupLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFE0);
  }
  return result;
}

uint64_t sub_1D57A5FA4(_QWORD *a1)
{
  return BadgeOriginationData.encode(to:)(a1);
}

uint64_t BadgeOriginationData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D57A60BC(0, &qword_1ED9D0D78, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A615C();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D57A6118();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57A60BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A615C();
    v7 = a3(a1, &type metadata for BadgeOriginationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A6118()
{
  unint64_t result;

  result = qword_1ED9D00E0;
  if (!qword_1ED9D00E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BadgeOriginationType, &type metadata for BadgeOriginationType);
    atomic_store(result, (unint64_t *)&qword_1ED9D00E0);
  }
  return result;
}

unint64_t sub_1D57A615C()
{
  unint64_t result;

  result = qword_1ED9D00C0;
  if (!qword_1ED9D00C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3D58, &type metadata for BadgeOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D00C0);
  }
  return result;
}

uint64_t sub_1D57A61A0(_QWORD *a1)
{
  return SportsData.encode(to:)(a1);
}

uint64_t SportsData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D57A62B8(0, &qword_1ED9D0D28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A6358();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57A6314();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57A62B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A6358();
    v7 = a3(a1, &type metadata for SportsData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A6314()
{
  unint64_t result;

  result = qword_1ED9CFC50;
  if (!qword_1ED9CFC50)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsTagListData, &type metadata for SportsTagListData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC50);
  }
  return result;
}

unint64_t sub_1D57A6358()
{
  unint64_t result;

  result = qword_1ED9CF1F0;
  if (!qword_1ED9CF1F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB39AC, &type metadata for SportsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF1F0);
  }
  return result;
}

uint64_t sub_1D57A639C(_QWORD *a1)
{
  return TextSizeData.encode(to:)(a1);
}

uint64_t TextSizeData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D57A64B4(0, &qword_1ED9CEFB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A6554();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D57A6510();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57A64B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A6554();
    v7 = a3(a1, &type metadata for TextSizeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A6510()
{
  unint64_t result;

  result = qword_1ED9CEEC8;
  if (!qword_1ED9CEEC8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TextSize, &type metadata for TextSize);
    atomic_store(result, (unint64_t *)&qword_1ED9CEEC8);
  }
  return result;
}

unint64_t sub_1D57A6554()
{
  unint64_t result;

  result = qword_1ED9CEAF0;
  if (!qword_1ED9CEAF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC61D0, &type metadata for TextSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEAF0);
  }
  return result;
}

uint64_t sub_1D57A6598@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  _BYTE v18[24];
  uint64_t v19;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, (unint64_t *)&unk_1ED9D0740);
  result = sub_1D5AAE064();
  if (v19)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    MEMORY[0x1E0C80A78](v4);
    v6 = (_QWORD *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    v8 = *v6;
    v9 = type metadata accessor for PrivacySaltProvider();
    v17[3] = v9;
    v17[4] = &off_1E9A53AD8;
    v17[0] = v8;
    v10 = type metadata accessor for PrivacySampler();
    v11 = (_QWORD *)swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v9);
    MEMORY[0x1E0C80A78](v12);
    v14 = (_QWORD *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    v16 = *v14;
    v11[5] = v9;
    v11[6] = &off_1E9A53AD8;
    v11[2] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &off_1E9A4D610;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D57A6730(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57A6824(0, &qword_1ED9CE180, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A6880();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1D57A6824(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A6880();
    v7 = a3(a1, &type metadata for AdUserData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A6880()
{
  unint64_t result;

  result = qword_1ED9CDA20;
  if (!qword_1ED9CDA20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABADFC, &type metadata for AdUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA20);
  }
  return result;
}

uint64_t sub_1D57A68C4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  __int128 v6;
  uint64_t v7;
  _QWORD v8[4];

  v3 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1D57BB5E4(0, (unint64_t *)&unk_1ED9CC770);
  result = sub_1D5AAE058();
  if (result)
  {
    v5 = (void *)result;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1D57BB598(0, &qword_1ED9CEF08);
    result = sub_1D5AAE064();
    if (v7)
    {
      sub_1D57ADBD0(&v6, (uint64_t)v8);
      objc_msgSend(v5, sel_addObserver_, v3);
      __swift_project_boxed_opaque_existential_1(v8, v8[3]);
      sub_1D5AAE5EC();
      swift_unknownObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D57A69E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;

  v2 = sub_1D5AADFD4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1D5AAE04C();
  if (v56 == 2)
  {
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if ((v56 & 1) != 0)
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5AADD7C();
    result = sub_1D5AAE058();
    if (!result)
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v7 = result;
    v8 = sub_1D57A54CC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_1D57A54CC((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = &v8[2 * v10];
    v12 = MEMORY[0x1E0CF83D0];
    v11[4] = v7;
    v11[5] = v12;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5AADDD0();
    result = sub_1D5AAE058();
    if (!result)
      goto LABEL_53;
    v13 = result;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1D57A54CC(0, v8[2] + 1, 1, v8);
    v15 = v8[2];
    v14 = v8[3];
    if (v15 >= v14 >> 1)
      v8 = sub_1D57A54CC((_QWORD *)(v14 > 1), v15 + 1, 1, v8);
    v8[2] = v15 + 1;
    v16 = &v8[2 * v15];
    v17 = MEMORY[0x1E0CF8420];
    v16[4] = v13;
    v16[5] = v17;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for ExternalAnalyticsEventProcessor();
    result = sub_1D5AAE058();
    if (!result)
      goto LABEL_54;
    v18 = result;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1D57A54CC(0, v8[2] + 1, 1, v8);
    v20 = v8[2];
    v19 = v8[3];
    if (v20 >= v19 >> 1)
      v8 = sub_1D57A54CC((_QWORD *)(v19 > 1), v20 + 1, 1, v8);
    v21 = sub_1D57A84D4(&qword_1ED9C7498, 255, (uint64_t (*)(uint64_t))type metadata accessor for ExternalAnalyticsEventProcessor, (uint64_t)&protocol conformance descriptor for ExternalAnalyticsEventProcessor);
    v8[2] = v20 + 1;
    v22 = &v8[2 * v20];
    v22[4] = v18;
    v22[5] = v21;
    type metadata accessor for ValidationEventProcessor();
    v23 = swift_allocObject();
    sub_1D5AAE004();
    swift_allocObject();
    *(_QWORD *)(v23 + 16) = sub_1D5AADFF8();
    *v5 = sub_1D58D84E8;
    v5[1] = 0;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB2FF8], v2);
    sub_1D5AADFE0();
    v25 = v8[2];
    v24 = v8[3];
    if (v25 >= v24 >> 1)
      v8 = sub_1D57A54CC((_QWORD *)(v24 > 1), v25 + 1, 1, v8);
    v26 = sub_1D57A84D4(&qword_1ED9C6D00, 255, (uint64_t (*)(uint64_t))type metadata accessor for ValidationEventProcessor, (uint64_t)&protocol conformance descriptor for ValidationEventProcessor);
    v8[2] = v25 + 1;
    v27 = &v8[2 * v25];
    v27[4] = v23;
    v27[5] = v26;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for SharedItemEventProcessor();
    result = sub_1D5AAE058();
    if (!result)
      goto LABEL_55;
    v28 = result;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1D57A54CC(0, v8[2] + 1, 1, v8);
    v30 = v8[2];
    v29 = v8[3];
    if (v30 >= v29 >> 1)
      v8 = sub_1D57A54CC((_QWORD *)(v29 > 1), v30 + 1, 1, v8);
    v31 = sub_1D57A84D4(&qword_1ED9CDCE8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SharedItemEventProcessor, (uint64_t)&unk_1D5AC539C);
    v8[2] = v30 + 1;
    v32 = &v8[2 * v30];
    v32[4] = v28;
    v32[5] = v31;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D57BB598(0, &qword_1ED9CE0D0);
    result = sub_1D5AAE064();
    v33 = v56;
    if (!v56)
      goto LABEL_56;
    v34 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1D57A54CC(0, v8[2] + 1, 1, v8);
    v36 = v8[2];
    v35 = v8[3];
    if (v36 >= v35 >> 1)
      v8 = sub_1D57A54CC((_QWORD *)(v35 > 1), v36 + 1, 1, v8);
    v37 = *(_QWORD *)(v34 + 8);
    v8[2] = v36 + 1;
    v38 = &v8[2 * v36];
    v38[4] = v33;
    v38[5] = v37;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1D5AAE04C();
  if (v56 == 2)
    goto LABEL_50;
  if ((v56 & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for PortraitEventProcessor();
    result = sub_1D5AAE058();
    if (!result)
    {
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      return result;
    }
    v39 = result;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1D57A54CC(0, v8[2] + 1, 1, v8);
    v41 = v8[2];
    v40 = v8[3];
    if (v41 >= v40 >> 1)
      v8 = sub_1D57A54CC((_QWORD *)(v40 > 1), v41 + 1, 1, v8);
    v42 = sub_1D57A84D4(&qword_1ED9CAE28, 255, (uint64_t (*)(uint64_t))type metadata accessor for PortraitEventProcessor, (uint64_t)&protocol conformance descriptor for PortraitEventProcessor);
    v8[2] = v41 + 1;
    v43 = &v8[2 * v41];
    v43[4] = v39;
    v43[5] = v42;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D57BB598(0, &qword_1ED9CDDA0);
    result = sub_1D5AAE064();
    v44 = v56;
    if (!v56)
      goto LABEL_58;
    v45 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1D57A54CC(0, v8[2] + 1, 1, v8);
    v47 = v8[2];
    v46 = v8[3];
    if (v47 >= v46 >> 1)
      v8 = sub_1D57A54CC((_QWORD *)(v46 > 1), v47 + 1, 1, v8);
    v48 = *(_QWORD *)(v45 + 8);
    v8[2] = v47 + 1;
    v49 = &v8[2 * v47];
    v49[4] = v44;
    v49[5] = v48;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9CD9C8);
  result = sub_1D5AAE064();
  v50 = v56;
  if (!v56)
    goto LABEL_51;
  v51 = v57;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = sub_1D57A54CC(0, v8[2] + 1, 1, v8);
  v53 = v8[2];
  v52 = v8[3];
  if (v53 >= v52 >> 1)
    v8 = sub_1D57A54CC((_QWORD *)(v52 > 1), v53 + 1, 1, v8);
  v54 = *(_QWORD *)(v51 + 8);
  v8[2] = v53 + 1;
  v55 = &v8[2 * v53];
  v55[4] = v50;
  v55[5] = v54;
  return (uint64_t)v8;
}

uint64_t sub_1D57A71B8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AADA70();
  result = sub_1D5AAE058();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D5AADD7C();
    result = sub_1D5AAE058();
    if (result)
    {
      v4 = result;
      type metadata accessor for FlushAnalyticsBatchesStartupTask();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v3;
      *(_QWORD *)(result + 24) = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D57A7268(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57A735C(0, &qword_1ED9CD088, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A73B8();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1D57A735C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A73B8();
    v7 = a3(a1, &type metadata for AdPlacementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A73B8()
{
  unint64_t result;

  result = qword_1ED9CD198;
  if (!qword_1ED9CD198)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC15C8, &type metadata for AdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD198);
  }
  return result;
}

uint64_t sub_1D57A73FC(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D5AAE4A8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D57A74D4()
{
  sub_1D57A7520();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57A7520()
{
  unint64_t result;

  result = qword_1ED9CC458;
  if (!qword_1ED9CC458)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedType, &type metadata for FeedType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC458);
  }
  return result;
}

uint64_t sub_1D57A7564(_QWORD *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = sub_1D5AAD710();
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  MEMORY[0x1E0C80A78](v6);
  v25 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1D5AADC20();
  v8 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D5AADD34();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57C590C();
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v2 + 64) = v15;
  sub_1D57B6254((uint64_t)a1, v2 + 16);
  *(double *)(v2 + 56) = a2;
  v17 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v16);
  sub_1D5AADC14();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  v20 = v2 + OBJC_IVAR____TtC13NewsAnalytics37RollingTimestampConfigurationProvider_lastConfig;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20, v14, v11);
  sub_1D57B35B0();
  *(_QWORD *)(v20 + *(int *)(v21 + 48)) = v19;
  v22 = v25;
  sub_1D5AAD704();
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v3 + OBJC_IVAR____TtC13NewsAnalytics37RollingTimestampConfigurationProvider_lastConfigRollDate, v22, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1D57A773C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1D5AAE250();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartbeatEventService();
  sub_1D5AAE214();
  sub_1D5AAE01C();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A00], v0);
  sub_1D5AAE034();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t FeedConfigData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  int v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  sub_1D57C57DC(0, &qword_1ED9D0D40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v12 = *(unsigned __int8 *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v11[2] = *(_QWORD *)(v1 + 32);
  v11[3] = v8;
  v11[1] = *(_QWORD *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CABBC();
  sub_1D5AAEEC8();
  v19 = 0;
  v9 = v13;
  sub_1D5AAECF4();
  if (!v9)
  {
    v18 = v12;
    v17 = 1;
    sub_1D57C9D80();
    sub_1D5AAED6C();
    v16 = 2;
    sub_1D5AAED84();
    v15 = 3;
    sub_1D5AAED84();
    v14 = 4;
    sub_1D5AAED84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void static TagData.obfuscated(tag:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;

  v4 = objc_msgSend(a1, sel_asSports);
  if (v4)
  {
    v5 = v4;
    v6 = (unint64_t)objc_msgSend(v4, sel_sportsType);
    if (v6 > 0xB || ((1 << v6) & 0xFE7) != 0)
    {
      v7 = objc_msgSend(a1, sel_identifier);
      v8 = sub_1D5AAE820();
      v10 = v9;

      swift_unknownObjectRelease();
    }
    else
    {
      v13 = objc_msgSend(v5, sel_topLevelGroupsTagIdentifiers);
      if (v13)
      {
        v14 = v13;
        v15 = (char *)sub_1D5AAE94C();

        v25 = v15;
        swift_bridgeObjectRetain();
        sub_1D59A2158(&v25);
        swift_bridgeObjectRelease();
        if (*((_QWORD *)v25 + 2))
        {
          v8 = *((_QWORD *)v25 + 4);
          v10 = *((_QWORD *)v25 + 5);
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          swift_release();
          goto LABEL_6;
        }
        swift_release();
      }
      v16 = objc_msgSend(v5, sel_topLevelSportTagIdentifier);
      if (v16)
      {
        v17 = v16;
        v8 = sub_1D5AAE820();
        v10 = v18;
        swift_unknownObjectRelease();

      }
      else
      {
        sub_1D57B5C60(0, (unint64_t *)&qword_1ED9CCA30, (void (*)(uint64_t))sub_1D57C5570);
        v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_1D5AB0170;
        v20 = objc_msgSend(a1, sel_identifier);
        v21 = sub_1D5AAE820();
        v23 = v22;

        *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v19 + 64) = sub_1D57B356C();
        *(_QWORD *)(v19 + 32) = v21;
        *(_QWORD *)(v19 + 40) = v23;
        sub_1D57B3530();
        v24 = (void *)sub_1D5AAEAA8();
        sub_1D5AAEA24();
        sub_1D5AAE328();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

        v8 = 0;
        v10 = 0xE000000000000000;
      }
    }
  }
  else
  {
    v11 = objc_msgSend(a1, sel_identifier);
    v8 = sub_1D5AAE820();
    v10 = v12;

  }
LABEL_6:
  *a2 = v8;
  a2[1] = v10;
}

uint64_t sub_1D57A7CF8()
{
  sub_1D5AAE07C();
  type metadata accessor for ChannelDataFactory();
  sub_1D5AAE214();
  swift_release();
  swift_release();
  sub_1D5AAE07C();
  type metadata accessor for ScienceDataFactory();
  sub_1D5AAE214();
  swift_release();
  return swift_release();
}

uint64_t sub_1D57A7EE0()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for UserNotificationSettingsManager();
  v0 = swift_allocObject();
  sub_1D57C5D10();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1D5AAE268();
  sub_1D5AAE25C();
  sub_1D57A19A0(0, &qword_1ED9D0BE8, MEMORY[0x1E0DB3BF0]);
  swift_allocObject();
  result = sub_1D5AAE10C();
  *(_QWORD *)(v0 + 24) = result;
  off_1ED9CD728 = (_UNKNOWN *)v0;
  return result;
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56))
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

void sub_1D57A7FCC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
        if (v3 <= 0x3F)
        {
          sub_1D57A8C9C();
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1D57A8140()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
                            if (v13 <= 0x3F)
                              swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1D57A8494(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for HeartbeatEventService();
    result = MEMORY[0x1D8279680](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D57A84D4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1D8279680](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for HeartbeatEventService()
{
  return objc_opt_self();
}

Swift::Void __swiftcall AppSessionObserver.startAppSession(withUserIDReset:)(NSNumber withUserIDReset)
{
  void *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  -[objc_class BOOLValue](withUserIDReset.super.super.isa, sel_BOOLValue);
  sub_1D57B3530();
  v1 = (void *)sub_1D5AAEAC0();
  sub_1D57B5C60(0, (unint64_t *)&qword_1ED9CCA30, (void (*)(uint64_t))sub_1D57C5570);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D5AB0170;
  v3 = sub_1D5AAD95C();
  v4 = MEMORY[0x1E0DEAFD8];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v2 + 64) = v4;
  *(_BYTE *)(v2 + 32) = v3 & 1;
  sub_1D5AAEA24();
  sub_1D5AAE328();

  swift_bridgeObjectRelease();
  sub_1D5AAD920();
}

uint64_t sub_1D57A863C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[16];

  v5 = sub_1D5AAD878();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1D5AAD884();
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(_BYTE *, _QWORD))(v11 + 104))(&v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E0], v5);
  v13[15] = 0;
  sub_1D57A8760();
  swift_allocObject();
  result = sub_1D5AAD8D8();
  *a4 = result;
  return result;
}

void sub_1D57A8760()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C6F60)
  {
    v0 = sub_1D5AAD8CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C6F60);
  }
}

void sub_1D57A87BC(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_1D5AAD734();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B663C(0, &qword_1ED9D0CB0);
  v8 = sub_1D5AAE058();
  if (v8)
  {
    v9 = (void *)v8;
    v10 = type metadata accessor for PrivacySaltProvider();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v9;
    v12 = v9;
    v13 = objc_msgSend(v12, sel_sportsUserID);
    if (v13)
    {
      v14 = v13;
      v15 = sub_1D5AAE820();
      v17 = v16;

    }
    else
    {
      sub_1D5AAD728();
      v15 = sub_1D5AAD71C();
      v17 = v18;

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    v11[3] = v15;
    v11[4] = v17;
    a2[3] = v10;
    a2[4] = &off_1E9A53AD8;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D57A891C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v10 = sub_1D5AAD884();
  v0 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D5AAD878();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57CC1A4(0, (unint64_t *)&unk_1ED9CF100, (void (*)(void))sub_1D57CC628);
  v9[1] = v7;
  v16 = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB57E8], v3);
  sub_1D57C5618(0, &qword_1ED9CE758, &qword_1ED9CF0F8);
  sub_1D5883964(0, &qword_1ED9CF0F8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D5ABD090;
  v15 = 0;
  sub_1D5AAD890();
  v14 = 1;
  sub_1D5AAD890();
  v13 = 2;
  sub_1D5AAD890();
  v12 = 3;
  sub_1D5AAD890();
  v11 = 4;
  sub_1D5AAD890();
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E0DB5800], v10);
  sub_1D57CC66C();
  result = sub_1D5AAD8A8();
  qword_1ED9CF060 = result;
  return result;
}

uint64_t sub_1D57A8BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v5;
  id v6;
  uint64_t result;

  v5 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (v6)
  {
    sub_1D5AAE820();

  }
  sub_1D57B3530();
  result = sub_1D5AAEAB4();
  *a4 = result;
  return result;
}

void sub_1D57A8C9C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED9C72D0)
  {
    sub_1D5AADFB0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0];
    sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    sub_1D57A8DE4(&qword_1ED9C7300, v0, MEMORY[0x1E0CF86D0]);
    v1 = sub_1D5AADB48();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED9C72D0);
  }
}

void sub_1D57A8D40()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED9C72C8)
  {
    sub_1D5AADF98();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670];
    sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1D57A8DE4(&qword_1ED9C72F0, v0, MEMORY[0x1E0CF8680]);
    v1 = sub_1D5AADB48();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED9C72C8);
  }
}

uint64_t sub_1D57A8DE4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1D8279680](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D57A8E24(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1D5AADF98();
    result = MEMORY[0x1D8279680](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D57A8E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1D58DA1A4;
  *(_QWORD *)(v5 + 24) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D5AADA64();
  swift_release();
  swift_release();
  return swift_release();
}

void SessionObserver.window.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  swift_beginAccess();
  v3 = swift_unknownObjectWeakAssign();
  v4 = (void *)MEMORY[0x1D8279758](v3);
  if (v4)
  {
    v5 = v4;
    sub_1D57B80E4(v4);
    v6 = (void *)sub_1D5AAE7FC();
    objc_msgSend(v5, sel_addObserver_forKeyPath_options_context_, v1, v6, 1, 0);

    sub_1D57BBBE8();
    a1 = v5;
  }

}

uint64_t initializeWithCopy for FeedConfigData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t DynamicEndpoint.name.getter()
{
  uint64_t v0;
  uint64_t result;

  result = 0x316F6D6564;
  switch(*(_QWORD *)(v0 + 24))
  {
    case 1:
      result = 0x69746375646F7270;
      break;
    case 2:
      result = 0x676E6967617473;
      break;
    case 3:
      result = 24945;
      break;
    case 4:
      result = 1953719668;
      break;
    case 5:
      result = 0x3164756F6C6369;
      break;
    case 6:
      result = 0x6C65766564;
      break;
    case 7:
      result = 0x786F62646E6173;
      break;
    case 8:
      return result;
    case 9:
      result = 0x326F6D6564;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t DynamicEndpoint.endpointURL(contentType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;

  v5 = sub_1D5AAD668();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v33 - v10;
  sub_1D57CC7FC();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v33 - v16;
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      v18 = objc_msgSend(*(id *)(v2 + 16), sel_appConfiguration);
      if ((objc_msgSend(v18, sel_respondsToSelector_, sel_appAnalyticsEndpointUrlForEnvironment_) & 1) == 0)
        goto LABEL_15;
      v19 = objc_msgSend(v18, sel_appAnalyticsEndpointUrlForEnvironment_, *(_QWORD *)(v2 + 24));
      goto LABEL_4;
    case 5:
      v22 = objc_msgSend(*(id *)(v2 + 16), sel_appConfiguration);
      if ((objc_msgSend(v22, sel_respondsToSelector_, sel_appAnalyticsNotificationReceiptEndpointUrlForEnvironment_) & 1) == 0)goto LABEL_15;
      v23 = objc_msgSend(v22, sel_appAnalyticsNotificationReceiptEndpointUrlForEnvironment_, *(_QWORD *)(v2 + 24));
      if (v23)
      {
        v24 = v23;
        sub_1D5AAD650();

        v25 = 0;
      }
      else
      {
        v25 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, v25, 1, v5);
      sub_1D5A7ECEC((uint64_t)v17, a2);
      return swift_unknownObjectRelease();
    case 6:
      v26 = objc_msgSend((id)objc_opt_self(), sel_appAnalyticsSportsEventsBaseURLForConfiguration_, objc_msgSend(*(id *)(v2 + 16), sel_appConfiguration));
      swift_unknownObjectRelease();
      if (v26)
      {
        sub_1D5AAD650();

        v27 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v27(v15, v9, v5);
        v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v28((uint64_t)v15, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) != 1)
        {
          v27(v11, v15, v5);
          v27((char *)a2, v11, v5);
          v29 = a2;
          v30 = 0;
          return v28(v29, v30, 1, v5);
        }
      }
      else
      {
        v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v28((uint64_t)v15, 1, 1, v5);
      }
      sub_1D57E6C28((uint64_t)v15);
      v29 = a2;
      v30 = 1;
      return v28(v29, v30, 1, v5);
    case 7:
      v31 = objc_msgSend(*(id *)(v2 + 16), sel_appConfiguration);
      if ((objc_msgSend(v31, sel_respondsToSelector_, sel_appAnalyticsAppHealthEndpointUrlForEnvironment_) & 1) == 0)goto LABEL_15;
      v19 = objc_msgSend(v31, sel_appAnalyticsAppHealthEndpointUrlForEnvironment_, *(_QWORD *)(v2 + 24));
      goto LABEL_4;
    case 8:
      v32 = objc_msgSend(*(id *)(v2 + 16), sel_appConfiguration);
      if ((objc_msgSend(v32, sel_respondsToSelector_, sel_appAnalyticsAppHeartbeatEndpointUrlForEnvironment_) & 1) != 0)
      {
        v19 = objc_msgSend(v32, sel_appAnalyticsAppHeartbeatEndpointUrlForEnvironment_, *(_QWORD *)(v2 + 24));
LABEL_4:
        v20 = v19;
        sub_1D5AAD650();
        swift_unknownObjectRelease();

        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(a2, 0, 1, v5);
      }
      else
      {
LABEL_15:
        swift_unknownObjectRelease();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, 1, 1, v5);
      }
    default:
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, 1, 1, v5);
  }
}

uint64_t sub_1D57A953C(_QWORD *a1)
{
  return PrivateUserData.encode(to:)(a1);
}

uint64_t PrivateUserData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];
  char v10;
  char v11;

  sub_1D57A9684(0, &qword_1ED9CE750, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v9 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A9724();
  sub_1D5AAEEC8();
  v11 = 0;
  v7 = v9[1];
  sub_1D5AAED3C();
  if (!v7)
  {
    v10 = 1;
    sub_1D57A96E0();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1D57A9684(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A9724();
    v7 = a3(a1, &type metadata for PrivateUserData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A96E0()
{
  unint64_t result;

  result = qword_1ED9CF5F0;
  if (!qword_1ED9CF5F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PrivateUserType, &type metadata for PrivateUserType);
    atomic_store(result, (unint64_t *)&qword_1ED9CF5F0);
  }
  return result;
}

unint64_t sub_1D57A9724()
{
  unint64_t result;

  result = qword_1ED9CF5D8;
  if (!qword_1ED9CF5D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF1E0, &type metadata for PrivateUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF5D8);
  }
  return result;
}

uint64_t sub_1D57A9768(_QWORD *a1)
{
  return AdJournalEntryData.encode(to:)(a1);
}

uint64_t AdJournalEntryData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1D57A98D0(0, &qword_1ED9CD6F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A99B4();
  sub_1D5AAEEC8();
  v16 = v9;
  v15 = 0;
  sub_1D57A992C();
  sub_1D5AAED6C();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1D57A9970();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1D57A98D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A99B4();
    v7 = a3(a1, &type metadata for AdJournalEntryData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A992C()
{
  unint64_t result;

  result = qword_1ED9CD468;
  if (!qword_1ED9CD468)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdJournalEntryStatus, &type metadata for AdJournalEntryStatus);
    atomic_store(result, (unint64_t *)&qword_1ED9CD468);
  }
  return result;
}

unint64_t sub_1D57A9970()
{
  unint64_t result;

  result = qword_1ED9CD3A8;
  if (!qword_1ED9CD3A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdJournalEntryError, &type metadata for AdJournalEntryError);
    atomic_store(result, (unint64_t *)&qword_1ED9CD3A8);
  }
  return result;
}

unint64_t sub_1D57A99B4()
{
  unint64_t result;

  result = qword_1ED9CD2A0;
  if (!qword_1ED9CD2A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2AA8, &type metadata for AdJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD2A0);
  }
  return result;
}

uint64_t sub_1D57A99F8(_QWORD *a1)
{
  return ScienceExperimentData.encode(to:)(a1);
}

uint64_t ScienceExperimentData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1D57A9B40(0, &qword_1ED9CE1B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A9B9C();
  sub_1D5AAEEC8();
  v13 = 0;
  v9 = v11[3];
  sub_1D5AAECF4();
  if (!v9)
  {
    v12 = 1;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57A9B40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A9B9C();
    v7 = a3(a1, &type metadata for ScienceExperimentData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A9B9C()
{
  unint64_t result;

  result = qword_1ED9CDC00;
  if (!qword_1ED9CDC00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABAFDC, &type metadata for ScienceExperimentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDC00);
  }
  return result;
}

uint64_t sub_1D57A9BE0(_QWORD *a1)
{
  return AppBadgeData.encode(to:)(a1);
}

uint64_t AppBadgeData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1D57A9D34(0, &qword_1ED9D0D38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(unsigned __int8 *)(v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A9DD4();
  sub_1D5AAEEC8();
  v14 = 0;
  sub_1D5AAED48();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_1D57A9D90();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1D57A9D34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A9DD4();
    v7 = a3(a1, &type metadata for AppBadgeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A9D90()
{
  unint64_t result;

  result = qword_1ED9D00D8;
  if (!qword_1ED9D00D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BadgeOriginationData, &type metadata for BadgeOriginationData);
    atomic_store(result, (unint64_t *)&qword_1ED9D00D8);
  }
  return result;
}

unint64_t sub_1D57A9DD4()
{
  unint64_t result;

  result = qword_1ED9CF248;
  if (!qword_1ED9CF248)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF9F8, &type metadata for AppBadgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF248);
  }
  return result;
}

uint64_t sub_1D57A9E18(_QWORD *a1)
{
  return AdFeedData.encode(to:)(a1);
}

uint64_t AdFeedData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D57A9F30(0, &qword_1ED9CE170, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A9F8C();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D57AEF34();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57A9F30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57A9F8C();
    v7 = a3(a1, &type metadata for AdFeedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57A9F8C()
{
  unint64_t result;

  result = qword_1ED9CD9D0;
  if (!qword_1ED9CD9D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5938, &type metadata for AdFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD9D0);
  }
  return result;
}

uint64_t sub_1D57A9FD0(_QWORD *a1)
{
  return OrientationData.encode(to:)(a1);
}

uint64_t OrientationData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1D57AA138(0, &qword_1ED9CC8E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AA21C();
  sub_1D5AAEEC8();
  v16 = v9;
  v15 = 0;
  sub_1D57AA1D8();
  sub_1D5AAED6C();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1D57AA194();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1D57AA138(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AA21C();
    v7 = a3(a1, &type metadata for OrientationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57AA194()
{
  unint64_t result;

  result = qword_1ED9CA4A0;
  if (!qword_1ED9CA4A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InterfaceOrientation, &type metadata for InterfaceOrientation);
    atomic_store(result, (unint64_t *)&qword_1ED9CA4A0);
  }
  return result;
}

unint64_t sub_1D57AA1D8()
{
  unint64_t result;

  result = qword_1ED9C93E8;
  if (!qword_1ED9C93E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DeviceOrientation, &type metadata for DeviceOrientation);
    atomic_store(result, (unint64_t *)&qword_1ED9C93E8);
  }
  return result;
}

unint64_t sub_1D57AA21C()
{
  unint64_t result;

  result = qword_1ED9C81A0;
  if (!qword_1ED9C81A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8720, &type metadata for OrientationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C81A0);
  }
  return result;
}

uint64_t sub_1D57AA260(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57AA394(0, &qword_1ED9CC918, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AA350();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D57AA350()
{
  unint64_t result;

  result = qword_1ED9C98F8;
  if (!qword_1ED9C98F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE92B8, &type metadata for AutoSubscribedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C98F8);
  }
  return result;
}

void sub_1D57AA394(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AA350();
    v7 = a3(a1, &type metadata for AutoSubscribedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1D57AA3F0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1D57AA674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  _QWORD v15[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = *(void **)(a5 + OBJC_IVAR____TtC13NewsAnalytics25PrivacyValidationProvider_appConfigurationManager);
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = sub_1D57C59C0;
  v13[6] = v10;
  v15[4] = sub_1D57C7228;
  v15[5] = v13;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1D57A4AD8;
  v15[3] = &block_descriptor_0;
  v14 = _Block_copy(v15);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_fetchAppConfigurationIfNeededWithCompletion_, v14);
  _Block_release(v14);
}

uint64_t sub_1D57AA7B0()
{
  sub_1D57AA7FC();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57AA7FC()
{
  unint64_t result;

  result = qword_1ED9CB248;
  if (!qword_1ED9CB248)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BundleSubscriptionStatus, &type metadata for BundleSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1ED9CB248);
  }
  return result;
}

uint64_t sub_1D57AA840()
{
  id v0;

  sub_1D5AADED8();
  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  return sub_1D5AADEC0();
}

uint64_t type metadata accessor for SessionObserver()
{
  return objc_opt_self();
}

void *sub_1D57AA8A8(_QWORD *a1)
{
  void *result;
  id v2;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB5E4(0, &qword_1ED9C8F38);
  result = (void *)sub_1D5AAE058();
  if (result)
  {
    v2 = objc_msgSend(result, sel_accessQueue);
    sub_1D5AADC38();
    sub_1D5AADC2C();
    sub_1D5AADB24();
    sub_1D5AADB18();
    sub_1D5AAD968();
    swift_allocObject();
    v3 = sub_1D5AAD950();
    swift_unknownObjectRelease();
    return (void *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D57AA998()
{
  swift_getObjectType();
  return sub_1D5AAD7E8();
}

uint64_t AppSessionStartEvent.Model.subscriptionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 24));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v3[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AppSessionStartEvent.Model.notificationSettingsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 40));
  v4 = *v3;
  v5 = *((_BYTE *)v3 + 8);
  v6 = *((_BYTE *)v3 + 9);
  v7 = *((_BYTE *)v3 + 10);
  v8 = *((_BYTE *)v3 + 11);
  v9 = *((_BYTE *)v3 + 12);
  LOWORD(v3) = *(_WORD *)((char *)v3 + 13);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = v6;
  *(_BYTE *)(a1 + 10) = v7;
  *(_BYTE *)(a1 + 11) = v8;
  *(_BYTE *)(a1 + 12) = v9;
  *(_WORD *)(a1 + 13) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AppSessionStartEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CDB30);
}

void sub_1D57AABF8()
{
  if (qword_1ED9CF068 != -1)
    swift_once();
  sub_1D57B423C();
  sub_1D5AAD7F4();
  __asm { BR              X10 }
}

uint64_t type metadata accessor for UserNotificationSettingsManager()
{
  return objc_opt_self();
}

id Assembly.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR___NYAssembly_assemblies;
  sub_1D57C55C4();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D5ABA5C0;
  v4 = type metadata accessor for DebugAssembly();
  v5 = swift_allocObject();
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = sub_1D57A8DE4(&qword_1ED9CF288, (uint64_t (*)(uint64_t))type metadata accessor for DebugAssembly, (uint64_t)&unk_1D5ACB89C);
  *(_QWORD *)(v3 + 32) = v5;
  v6 = type metadata accessor for FactoryAssembly();
  v7 = swift_allocObject();
  *(_QWORD *)(v3 + 96) = v6;
  *(_QWORD *)(v3 + 104) = sub_1D57A8DE4(&qword_1ED9CF538, (uint64_t (*)(uint64_t))type metadata accessor for FactoryAssembly, (uint64_t)&unk_1D5AC1428);
  *(_QWORD *)(v3 + 72) = v7;
  v8 = type metadata accessor for HeartbeatAssembly();
  v9 = swift_allocObject();
  *(_QWORD *)(v3 + 136) = v8;
  *(_QWORD *)(v3 + 144) = sub_1D57A8DE4(&qword_1ED9CE478, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatAssembly, (uint64_t)&unk_1D5AB5874);
  *(_QWORD *)(v3 + 112) = v9;
  v10 = type metadata accessor for TrackerAssembly();
  v11 = swift_allocObject();
  *(_QWORD *)(v3 + 176) = v10;
  *(_QWORD *)(v3 + 184) = sub_1D57A8DE4((unint64_t *)&unk_1ED9CF820, (uint64_t (*)(uint64_t))type metadata accessor for TrackerAssembly, (uint64_t)&unk_1D5ABF294);
  *(_QWORD *)(v3 + 152) = v11;
  *(_QWORD *)&v0[v2] = v3;
  v13.receiver = v0;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t sub_1D57AAEF0()
{
  uint64_t v0;

  sub_1D5AAE820();
  sub_1D5AAEE80();
  sub_1D5AAE874();
  v0 = sub_1D5AAEE98();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D57AAF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1D5AAE250();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AAE07C();
  sub_1D57BB598(0, &qword_1ED9CEE08);
  sub_1D5AAE220();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A00], v0);
  sub_1D5AAE034();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1D5AAE088();
  sub_1D5AAE208();
  return swift_release();
}

uint64_t sub_1D57AB080(_QWORD *a1)
{
  return PaidSubscribedTagListData.encode(to:)(a1);
}

uint64_t PaidSubscribedTagListData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D57AB1FC(0, &qword_1ED9CC968, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AB1B8();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D57AB1B8()
{
  unint64_t result;

  result = qword_1ED9CB5E0;
  if (!qword_1ED9CB5E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADEB40, &type metadata for PaidSubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5E0);
  }
  return result;
}

void sub_1D57AB1FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AB1B8();
    v7 = a3(a1, &type metadata for PaidSubscribedTagListData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57AB258(_QWORD *a1)
{
  return SportsTagListData.encode(to:)(a1);
}

uint64_t SportsTagListData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D57AB390(0, &qword_1ED9D0D50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AB3EC();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57AB390(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AB3EC();
    v7 = a3(a1, &type metadata for SportsTagListData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57AB3EC()
{
  unint64_t result;

  result = qword_1ED9CFC38;
  if (!qword_1ED9CFC38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC17F8, &type metadata for SportsTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC38);
  }
  return result;
}

uint64_t sub_1D57AB430(_QWORD *a1)
{
  return SubscribedSportsListData.encode(to:)(a1);
}

uint64_t SubscribedSportsListData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D57AB600(0, &qword_1ED9D0DB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AB5BC();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57AB568();
  sub_1D57AB65C(&qword_1ED9D0C58, (uint64_t (*)(void))sub_1D57CACE4, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57AB568()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9D0C50)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9D0C50);
  }
}

unint64_t sub_1D57AB5BC()
{
  unint64_t result;

  result = qword_1ED9D0810;
  if (!qword_1ED9D0810)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF63C, &type metadata for SubscribedSportsListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0810);
  }
  return result;
}

void sub_1D57AB600(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AB5BC();
    v7 = a3(a1, &type metadata for SubscribedSportsListData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57AB65C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D57AB568();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D57AB6C0(_QWORD *a1)
{
  return ContentEnvironmentData.encode(to:)(a1);
}

uint64_t ContentEnvironmentData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D57AB7D8(0, &qword_1ED9CC940, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AB878();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D57AB834();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57AB7D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AB878();
    v7 = a3(a1, &type metadata for ContentEnvironmentData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57AB834()
{
  unint64_t result;

  result = qword_1ED9CAE18;
  if (!qword_1ED9CAE18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ContentEnvironmentType, &type metadata for ContentEnvironmentType);
    atomic_store(result, (unint64_t *)&qword_1ED9CAE18);
  }
  return result;
}

unint64_t sub_1D57AB878()
{
  unint64_t result;

  result = qword_1ED9CADE8;
  if (!qword_1ED9CADE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD074C, &type metadata for ContentEnvironmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CADE8);
  }
  return result;
}

void sub_1D57AB8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __int128 v41;
  __int128 v42;

  sub_1D57ABC2C(0, &qword_1ED9C6FF0, (void (*)(void))sub_1D57CB4A4);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  sub_1D57ABC2C(0, &qword_1ED9C6F90, (void (*)(void))sub_1D57C9F00);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v27 - v13;
  swift_beginAccess();
  v15 = MEMORY[0x1D8279758](a3 + 16);
  if (v15)
  {
    v16 = (void *)v15;
    if (a2 == 3)
    {
      sub_1D5894308();
      sub_1D5AADAE8();
      v36 = sub_1D57CB4A4();
      sub_1D5AADAE8();
      v39 = 0x6E776F6E6B6E75;
      v40 = 0xE700000000000000;
      sub_1D57C9F00();
      v38 = v6;
      sub_1D5AADA40();
      v33 = OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager;
      sub_1D57BD7B0();
      v32 = v17;
      v18 = sub_1D5AADB54();
      v37 = v11;
      v19 = v18;
      v20 = *(_QWORD *)(v18 - 8);
      v21 = *(_QWORD *)(v20 + 72);
      v22 = *(unsigned __int8 *)(v20 + 80);
      v35 = v7;
      v23 = (v22 + 32) & ~v22;
      v30 = v22 | 7;
      v31 = v23 + v21;
      v24 = swift_allocObject();
      v29 = xmmword_1D5AB0170;
      *(_OWORD *)(v24 + 16) = xmmword_1D5AB0170;
      v34 = v12;
      v25 = *MEMORY[0x1E0CF8168];
      v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 104);
      v28(v24 + v23, v25, v19);
      swift_retain();
      sub_1D5AADBB4();
      swift_release();
      swift_bridgeObjectRelease();
      v39 = 0;
      v40 = 0xE000000000000000;
      v41 = xmmword_1D5ABB820;
      v42 = xmmword_1D5ABB820;
      sub_1D5AADA40();
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = v29;
      v28(v26 + v23, v25, v19);
      sub_1D5AADBB4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v38);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v37);
    }

  }
}

void sub_1D57ABC2C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1D5AADA4C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t NotificationSettingsData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v13;
  char v14;
  void (*v15)(char *, uint64_t);
  char v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  char v23;
  uint64_t v24;

  sub_1D57B45F0(0, &qword_1ED9CD6B8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B45AC();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1D57B4558();
  v23 = 0;
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1D5AAECD0();
  v10 = v24;
  LOBYTE(v24) = 1;
  swift_bridgeObjectRetain();
  v11 = sub_1D5AAECAC();
  LOBYTE(v24) = 2;
  v22 = sub_1D5AAECAC();
  LOBYTE(v24) = 3;
  v21 = sub_1D5AAECAC();
  LOBYTE(v24) = 4;
  v20 = sub_1D5AAECAC();
  LOBYTE(v24) = 5;
  v19 = sub_1D5AAECAC();
  LOBYTE(v24) = 6;
  v18 = sub_1D5AAEC64();
  LOBYTE(v24) = 7;
  v13 = sub_1D5AAEC64();
  HIDWORD(v17) = v11 & 1;
  v21 &= 1u;
  v22 &= 1u;
  v14 = v20 & 1;
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16 = v19 & 1;
  v15(v9, v6);
  *(_QWORD *)a2 = v10;
  *(_BYTE *)(a2 + 8) = BYTE4(v17);
  *(_BYTE *)(a2 + 9) = v22;
  *(_BYTE *)(a2 + 10) = v21;
  *(_BYTE *)(a2 + 11) = v14;
  *(_BYTE *)(a2 + 12) = v16;
  *(_BYTE *)(a2 + 13) = v18;
  *(_BYTE *)(a2 + 14) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t UserBundleSubscriptionContextData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  unsigned __int8 v30;

  sub_1D57BA3A0(0, &qword_1ED9CC848, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BA35C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v29 = 0;
    sub_1D57C79C4();
    sub_1D5AAECD0();
    v10 = v30;
    v28 = 1;
    v11 = sub_1D5AAEC58();
    v14 = v13;
    v23 = v11;
    v27 = 2;
    swift_bridgeObjectRetain();
    v22 = sub_1D5AAECAC();
    v26 = 3;
    v20 = sub_1D5AAECAC();
    v21 = v10;
    v25 = 4;
    v15 = sub_1D5AAEC58();
    v17 = v16;
    v19 = v15;
    v24 = 5;
    swift_bridgeObjectRetain();
    v18 = sub_1D5AAEC64();
    v22 &= 1u;
    v20 &= 1u;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_BYTE *)a2 = v21;
    *(_QWORD *)(a2 + 8) = v23;
    *(_QWORD *)(a2 + 16) = v14;
    *(_BYTE *)(a2 + 24) = v22;
    *(_BYTE *)(a2 + 25) = v20;
    *(_QWORD *)(a2 + 32) = v19;
    *(_QWORD *)(a2 + 40) = v17;
    *(_BYTE *)(a2 + 48) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t AppSessionStartEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  char *v13;
  char v14;
  char v15;
  char v16;
  int *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  __int16 v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  __int16 v35;
  char *v36;
  uint64_t v37;
  _DWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  char v48;
  _BYTE v49[456];
  _OWORD v50[3];
  __int128 v51;
  uint64_t v52;
  __int16 v53;
  uint64_t started;

  v40 = a2;
  v4 = sub_1D5AADF98();
  v43 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57C5724(0, &qword_1ED9CE150, MEMORY[0x1E0DED048]);
  v42 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v38 - v9;
  started = type metadata accessor for AppSessionStartEvent.Model(0);
  MEMORY[0x1E0C80A78](started);
  v45 = a1;
  v46 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57C8A74();
  v41 = v10;
  sub_1D5AAEEB0();
  if (v2)
  {
    v44 = v2;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    LODWORD(v46) = 0;
  }
  else
  {
    v39 = v8;
    LOBYTE(v50[0]) = 0;
    sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v13 = v46;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v46, v6, v4);
    v49[0] = 1;
    sub_1D57C6AF8();
    sub_1D5AAECD0();
    v14 = BYTE8(v50[1]);
    v15 = BYTE9(v50[1]);
    v16 = v51;
    v17 = (int *)started;
    v18 = &v13[*(int *)(started + 20)];
    *v18 = v50[0];
    *(_OWORD *)(v18 + 8) = *(_OWORD *)((char *)v50 + 8);
    v18[24] = v14;
    v18[25] = v15;
    *((_OWORD *)v18 + 2) = v50[2];
    v18[48] = v16;
    v49[0] = 2;
    sub_1D57C963C();
    sub_1D5AAECD0();
    v19 = *((_QWORD *)&v50[2] + 1);
    v20 = &v13[v17[6]];
    *(_QWORD *)v20 = *(_QWORD *)&v50[0];
    *(_OWORD *)(v20 + 8) = *(_OWORD *)((char *)v50 + 8);
    *(_OWORD *)(v20 + 24) = *(_OWORD *)((char *)&v50[1] + 8);
    *((_QWORD *)v20 + 5) = v19;
    *((_QWORD *)v20 + 6) = v51;
    v49[0] = 3;
    sub_1D57CB2EC();
    sub_1D5AAEC7C();
    v21 = &v13[v17[7]];
    v22 = v50[1];
    *(_OWORD *)v21 = v50[0];
    *((_OWORD *)v21 + 1) = v22;
    *((_OWORD *)v21 + 2) = v50[2];
    v49[0] = 4;
    sub_1D57CB41C();
    sub_1D5AAEC7C();
    v23 = &v13[v17[8]];
    v24 = v50[1];
    *(_OWORD *)v23 = v50[0];
    *((_OWORD *)v23 + 1) = v24;
    *((_OWORD *)v23 + 2) = v50[2];
    v49[0] = 5;
    sub_1D57C99A0();
    sub_1D5AAEC7C();
    v25 = v52;
    v26 = v53;
    v27 = &v13[v17[9]];
    v28 = v50[1];
    *(_OWORD *)v27 = v50[0];
    *((_OWORD *)v27 + 1) = v28;
    v29 = v51;
    *((_OWORD *)v27 + 2) = v50[2];
    *((_OWORD *)v27 + 3) = v29;
    *((_QWORD *)v27 + 8) = v25;
    *((_WORD *)v27 + 36) = v26;
    v49[0] = 6;
    sub_1D57C76D8();
    sub_1D5AAECD0();
    v38[1] = 1;
    v30 = BYTE8(v50[0]);
    v31 = BYTE9(v50[0]);
    v32 = BYTE10(v50[0]);
    v33 = BYTE11(v50[0]);
    v34 = BYTE12(v50[0]);
    v35 = *(_WORD *)((char *)v50 + 13);
    v36 = &v13[v17[10]];
    *(_QWORD *)v36 = *(_QWORD *)&v50[0];
    v36[8] = v30;
    v36[9] = v31;
    v36[10] = v32;
    v36[11] = v33;
    v36[12] = v34;
    *(_WORD *)(v36 + 13) = v35;
    v49[455] = 7;
    sub_1D57C82D0();
    sub_1D5AAEC7C();
    sub_1D5975960((uint64_t)v50, (uint64_t)v49);
    sub_1D5975960((uint64_t)v49, (uint64_t)&v13[v17[11]]);
    v48 = 8;
    sub_1D57C91AC();
    sub_1D5AAECD0();
    *(_DWORD *)&v13[v17[12]] = v47;
    v48 = 9;
    sub_1D57C74F4();
    sub_1D5AAEC7C();
    v44 = 0;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v42);
    v37 = (uint64_t)v46;
    *(_QWORD *)&v46[*(int *)(started + 52)] = v47;
    sub_1D57C898C(v37, v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    return sub_1D57C8950(v37);
  }
  return result;
}

uint64_t sub_1D57ACAB8()
{
  sub_1D5AAEE80();
  GroupType.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D57ACB18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = GroupType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t GroupType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57ACB6C + 4 * word_1D5ADAD52[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D57ACB6C()
{
  return 0x64657461727563;
}

uint64_t sub_1D57ACE10()
{
  return 0x756F59726F66;
}

unint64_t sub_1D57ACE24()
{
  return 0xD000000000000010;
}

uint64_t sub_1D57ACE30()
{
  return 0x6F7661466F747561;
}

uint64_t sub_1D57ACE50()
{
  return 0x697242796C696164;
}

unint64_t sub_1D57ACE74()
{
  return 0xD000000000000012;
}

uint64_t sub_1D57ACE8C()
{
  return 0x4E70556F69647561;
}

uint64_t sub_1D57ACEB0()
{
  return 0x726F466F69647561;
}

unint64_t sub_1D57ACED0()
{
  return 0xD000000000000013;
}

uint64_t sub_1D57ACEE8()
{
  return 0x59726F4665726F6DLL;
}

uint64_t sub_1D57ACF08()
{
  return 0x6F6C6C6F4677656ELL;
}

uint64_t sub_1D57ACF28()
{
  return 0x745374736574616CLL;
}

unint64_t sub_1D57ACF8C()
{
  return 0xD000000000000010;
}

unint64_t sub_1D57ACF98()
{
  return 0xD000000000000013;
}

uint64_t sub_1D57ACFB0()
{
  return 0x6C6C6177796170;
}

void sub_1D57ACFC4()
{
  JUMPOUT(0x1D57ACFD8);
}

uint64_t sub_1D57ACFE4()
{
  return 0x7374726F7053796DLL;
}

uint64_t sub_1D57AD060()
{
  return 0x536C656E6E616863;
}

unint64_t sub_1D57AD084()
{
  return 0xD000000000000017;
}

uint64_t sub_1D57AD09C()
{
  return 0x536F546F72746E69;
}

uint64_t sub_1D57AD0C0()
{
  return 0x63537374726F7073;
}

uint64_t sub_1D57AD0E4()
{
  return 0x63537374726F7073;
}

uint64_t sub_1D57AD108()
{
  return 0x74537374726F7073;
}

uint64_t sub_1D57AD12C()
{
  return 0x72427374726F7073;
}

unint64_t sub_1D57AD150()
{
  return 0xD000000000000010;
}

uint64_t sub_1D57AD15C()
{
  return 0x76457374726F7073;
}

uint64_t sub_1D57AD180()
{
  return 0x6F427374726F7073;
}

unint64_t sub_1D57AD1A4()
{
  return 0xD000000000000010;
}

unint64_t sub_1D57AD1B0()
{
  return 0xD000000000000016;
}

unint64_t sub_1D57AD1C8()
{
  return 0xD000000000000013;
}

unint64_t sub_1D57AD1FC()
{
  return 0xD000000000000010;
}

uint64_t sub_1D57AD208()
{
  return 0x694C656C7A7A7570;
}

uint64_t sub_1D57AD224()
{
  return 0x7241656C7A7A7570;
}

unint64_t sub_1D57AD248()
{
  return 0xD000000000000015;
}

uint64_t sub_1D57AD264()
{
  return 0x6546656C7A7A7570;
}

void sub_1D57AD288()
{
  JUMPOUT(0x1D57AD29CLL);
}

unint64_t sub_1D57AD2A8()
{
  return 0xD000000000000010;
}

uint64_t sub_1D57AD2B4()
{
  return 0x4664656546676174;
}

unint64_t sub_1D57AD2DC()
{
  return 0xD000000000000010;
}

uint64_t sub_1D57AD2E8()
{
  return 0x5265746144676174;
}

uint64_t sub_1D57AD328()
{
  return 0x694C7374726F7073;
}

uint64_t sub_1D57AD34C()
{
  return 0x614D7374726F7073;
}

uint64_t sub_1D57AD38C()
{
  return 0x7974696E69666661;
}

uint64_t sub_1D57AD3A4()
{
  return 0x65726F736E6F7073;
}

uint64_t sub_1D57AD3C8()
{
  return 0x6F74536465766173;
}

uint64_t sub_1D57AD3E8(_QWORD *a1)
{
  return MutedTagListData.encode(to:)(a1);
}

uint64_t MutedTagListData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D57AD520(0, &qword_1ED9CE198, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AD57C();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57AD520(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AD57C();
    v7 = a3(a1, &type metadata for MutedTagListData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57AD57C()
{
  unint64_t result;

  result = qword_1ED9CDAD0;
  if (!qword_1ED9CDAD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB25C4, &type metadata for MutedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDAD0);
  }
  return result;
}

uint64_t sub_1D57AD5C0(_QWORD *a1)
{
  return WebAccessTagListData.encode(to:)(a1);
}

uint64_t WebAccessTagListData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D57AD6F8(0, &qword_1ED9C6F10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AD754();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57AD6F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AD754();
    v7 = a3(a1, &type metadata for WebAccessTagListData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57AD754()
{
  unint64_t result;

  result = qword_1ED9C6A40;
  if (!qword_1ED9C6A40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE458, &type metadata for WebAccessTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6A40);
  }
  return result;
}

uint64_t sub_1D57AD798(_QWORD *a1)
{
  return AutoSubscribedTagListData.encode(to:)(a1);
}

uint64_t AutoSubscribedTagListData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D57AD8D0(0, &qword_1ED9CC958, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AD92C();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57AD8D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AD92C();
    v7 = a3(a1, &type metadata for AutoSubscribedTagListData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57AD92C()
{
  unint64_t result;

  result = qword_1ED9CB588;
  if (!qword_1ED9CB588)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD78F0, &type metadata for AutoSubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB588);
  }
  return result;
}

uint64_t sub_1D57AD970(_QWORD *a1)
{
  return SubscribedTagListData.encode(to:)(a1);
}

uint64_t SubscribedTagListData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D57ADAEC(0, &qword_1ED9CC938, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57ADAA8();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D57ADAA8()
{
  unint64_t result;

  result = qword_1ED9CAB10;
  if (!qword_1ED9CAB10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF43C, &type metadata for SubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CAB10);
  }
  return result;
}

void sub_1D57ADAEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57ADAA8();
    v7 = a3(a1, &type metadata for SubscribedTagListData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57ADB48(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57ADBE8();
  result = sub_1D5AAE064();
  if (v4)
  {
    type metadata accessor for ScienceDataFactory();
    v2 = swift_allocObject();
    sub_1D57ADBD0(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D57ADBD0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1D57ADBE8()
{
  unint64_t result;

  result = qword_1ED9CC648;
  if (!qword_1ED9CC648)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CC648);
  }
  return result;
}

uint64_t type metadata accessor for ScienceDataFactory()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for StartMethodData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for NetworkEventData(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AAD710();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v9 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v10 = a3[10];
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
    v11 = a3[12];
    *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
    v12 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
    v13 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1D57ADD94(_QWORD *a1)
{
  return ViewData.encode(to:)(a1);
}

uint64_t ViewData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  sub_1D57ADF34(0, &qword_1ED9CC9B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - v6;
  v8 = *(unsigned __int8 *)(v1 + 16);
  v16 = *(unsigned __int8 *)(v1 + 17);
  v17 = v8;
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1D57ADFD4();
  sub_1D5AAEEC8();
  v22 = 0;
  sub_1D5AAED3C();
  if (!v2)
  {
    v13 = v16;
    v21 = v17;
    v20 = 1;
    sub_1D57ADF90();
    sub_1D5AAED6C();
    v19 = v13;
    v18 = 2;
    sub_1D57AE018();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

void sub_1D57ADF34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57ADFD4();
    v7 = a3(a1, &type metadata for ViewData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57ADF90()
{
  unint64_t result;

  result = qword_1ED9CC4D8;
  if (!qword_1ED9CC4D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewType, &type metadata for ViewType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4D8);
  }
  return result;
}

unint64_t sub_1D57ADFD4()
{
  unint64_t result;

  result = qword_1ED9CC4B0;
  if (!qword_1ED9CC4B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB95C, &type metadata for ViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4B0);
  }
  return result;
}

unint64_t sub_1D57AE018()
{
  unint64_t result;

  result = qword_1ED9C7628;
  if (!qword_1ED9C7628)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewAction, &type metadata for ViewAction);
    atomic_store(result, (unint64_t *)&qword_1ED9C7628);
  }
  return result;
}

uint64_t SessionObserver.init(sessionManager:aggregateStateModeProvider:cloudContext:client:kind:fsidProvider:appExtensionCommunicator:userInfo:tabiDataProvider:liveActivityCountDataProvider:userEmbeddingDataProvider:offlineProvider:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1D57AE094(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (uint64_t (*)(uint64_t, uint64_t, void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59490B4);
}

uint64_t sub_1D57AE094(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t, uint64_t, void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v21;

  ObjectType = swift_getObjectType();
  v21 = a13(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, v13, ObjectType);
  swift_release();

  swift_unknownObjectRelease();
  return v21;
}

uint64_t sub_1D57AE158@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v11, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
}

void sub_1D57AE444()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
                          if (v12 <= 0x3F)
                            swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedJournalEntryData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *initializeWithCopy for HeartbeatEvent.Model(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (int *)type metadata accessor for HeartbeatData();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AAD710();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = v5[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v5[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v5[8];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HeartbeatEvent.Model(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for HeartbeatData() + 20);
  v3 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for HeartbeatData()
{
  uint64_t result;

  result = qword_1ED9CE448;
  if (!qword_1ED9CE448)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D57AE924(_QWORD *a1)
{
  return UserSubscriptionContextData.encode(to:)(a1);
}

uint64_t UserSubscriptionContextData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];
  char v11;
  char v12;

  sub_1D57AEA9C(0, &qword_1ED9CC980, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  v10[0] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AEBB0();
  sub_1D5AAEEC8();
  v12 = 0;
  sub_1D5AAED48();
  if (!v2)
  {
    v10[1] = v10[0];
    v11 = 1;
    sub_1D57AEB5C();
    sub_1D57AEAF8(&qword_1ED9CC688, (uint64_t (*)(void))sub_1D57CA78C, MEMORY[0x1E0DEAF10]);
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1D57AEA9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AEBB0();
    v7 = a3(a1, &type metadata for UserSubscriptionContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57AEAF8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D57AEB5C();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D57AEB5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CC680)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CC680);
  }
}

unint64_t sub_1D57AEBB0()
{
  unint64_t result;

  result = qword_1ED9CB7D0;
  if (!qword_1ED9CB7D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACEAB0, &type metadata for UserSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB7D0);
  }
  return result;
}

uint64_t sub_1D57AEBF4(_QWORD *a1)
{
  return AppData.encode(to:)(a1);
}

uint64_t AppData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1D57AED3C(0, &qword_1ED9CC998, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AED98();
  sub_1D5AAEEC8();
  v13 = 0;
  v9 = v11[3];
  sub_1D5AAED3C();
  if (!v9)
  {
    v12 = 1;
    sub_1D5AAED3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57AED3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AED98();
    v7 = a3(a1, &type metadata for AppData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57AED98()
{
  unint64_t result;

  result = qword_1ED9CC3B0;
  if (!qword_1ED9CC3B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB53E8, &type metadata for AppData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3B0);
  }
  return result;
}

uint64_t sub_1D57AEDDC(_QWORD *a1)
{
  return FeedData.encode(to:)(a1);
}

uint64_t FeedData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  sub_1D57AEF78(0, &qword_1ED9CC9A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v12[0] = *((_QWORD *)v1 + 2);
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AEFD4();
  sub_1D5AAEEC8();
  v15 = v9;
  v14 = 0;
  sub_1D57AEF34();
  sub_1D5AAED6C();
  if (!v2)
  {
    v13 = 1;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D57AEF34()
{
  unint64_t result;

  result = qword_1ED9CC450;
  if (!qword_1ED9CC450)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedType, &type metadata for FeedType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC450);
  }
  return result;
}

void sub_1D57AEF78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57AEFD4();
    v7 = a3(a1, &type metadata for FeedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57AEFD4()
{
  unint64_t result;

  result = qword_1ED9CC428;
  if (!qword_1ED9CC428)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE410, &type metadata for FeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC428);
  }
  return result;
}

uint64_t SubscriptionData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  sub_1D57B23AC(0, &qword_1ED9CD080, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B2408();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v28) = 0;
    v10 = sub_1D5AAECDC();
    LOBYTE(v28) = 1;
    v11 = sub_1D5AAECDC();
    v27 = 2;
    sub_1D57C7DFC();
    sub_1D5AAECD0();
    v13 = v28;
    v27 = 3;
    sub_1D57C73F4();
    v26 = v13;
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v14 = v28;
    v27 = 4;
    sub_1D57C7284();
    v25 = v14;
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v15 = v28;
    v27 = 5;
    sub_1D57C836C();
    v24 = v15;
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v16 = v28;
    v27 = 6;
    sub_1D57C9B24();
    v23 = v16;
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    v22 = v11;
    v17 = v28;
    LOBYTE(v28) = 7;
    swift_bridgeObjectRetain();
    v21 = sub_1D5AAECDC();
    LOBYTE(v28) = 8;
    LODWORD(v16) = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v18 = v22;
    *(_DWORD *)a2 = v10;
    *(_DWORD *)(a2 + 4) = v18;
    v19 = v25;
    *(_QWORD *)(a2 + 8) = v26;
    *(_QWORD *)(a2 + 16) = v19;
    v20 = v23;
    *(_QWORD *)(a2 + 24) = v24;
    *(_QWORD *)(a2 + 32) = v20;
    *(_QWORD *)(a2 + 40) = v17;
    *(_DWORD *)(a2 + 48) = v21;
    *(_DWORD *)(a2 + 52) = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_1D57AF588()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
    if (v1 <= 0x3F)
    {
      sub_1D57A8C9C();
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                            if (v13 <= 0x3F)
                            {
                              sub_1D579E208(319, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
                              if (v14 <= 0x3F)
                              {
                                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                                if (v15 <= 0x3F)
                                {
                                  sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                                  if (v16 <= 0x3F)
                                  {
                                    sub_1D579E208(319, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
                                    if (v17 <= 0x3F)
                                    {
                                      sub_1D579E208(319, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                                      if (v18 <= 0x3F)
                                      {
                                        sub_1D579E208(319, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
                                        if (v19 <= 0x3F)
                                        {
                                          sub_1D579E208(319, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
                                          if (v20 <= 0x3F)
                                          {
                                            sub_1D579E208(319, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
                                            if (v21 <= 0x3F)
                                            {
                                              sub_1D579E208(319, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
                                              if (v22 <= 0x3F)
                                              {
                                                sub_1D579E208(319, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                                                if (v23 <= 0x3F)
                                                {
                                                  sub_1D579E208(319, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
                                                  if (v24 <= 0x3F)
                                                  {
                                                    sub_1D579E208(319, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
                                                    if (v25 <= 0x3F)
                                                    {
                                                      sub_1D579E208(319, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
                                                      if (v26 <= 0x3F)
                                                      {
                                                        sub_1D579E208(319, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
                                                        if (v27 <= 0x3F)
                                                        {
                                                          sub_1D579E208(319, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
                                                          if (v28 <= 0x3F)
                                                          {
                                                            sub_1D579E208(319, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
                                                            if (v29 <= 0x3F)
                                                            {
                                                              sub_1D579E208(319, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
                                                              if (v30 <= 0x3F)
                                                              {
                                                                sub_1D579E208(319, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
                                                                if (v31 <= 0x3F)
                                                                {
                                                                  sub_1D579E208(319, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
                                                                  if (v32 <= 0x3F)
                                                                  {
                                                                    sub_1D579E208(319, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
                                                                    if (v33 <= 0x3F)
                                                                      swift_initStructMetadata();
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t UserNotificationSettingsManager.getSettings()()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1D5AAE100();
  swift_release();
  return v0;
}

uint64_t sub_1D57AFDD4(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AAD968();
  result = sub_1D5AAE058();
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AADED8();
  result = sub_1D5AAE058();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB5E4(0, &qword_1ED9C7008);
  result = sub_1D5AAE058();
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  sub_1D5AADA70();
  sub_1D5AADDB8();
  v4 = (void *)sub_1D5AADDAC();
  if (qword_1ED9CCCC0 != -1)
    swift_once();
  sub_1D57A84D4(&qword_1ED9C8218, v3, (uint64_t (*)(uint64_t))type metadata accessor for TrackerAssembly, (uint64_t)&unk_1D5ABF254);
  sub_1D5AAD7F4();
  v5 = (void *)sub_1D5AADDA0();

  if (qword_1ED9CD0B8 != -1)
    swift_once();
  sub_1D5AAD7F4();
  v6 = (void *)sub_1D5AADD88();

  if (qword_1ED9CF0A0 != -1)
    swift_once();
  sub_1D5AAD7F4();
  sub_1D5AADD94();

  sub_1D5AADE18();
  swift_allocObject();
  sub_1D5AADE0C();
  return sub_1D5AADA58();
}

uint64_t sub_1D57B0070()
{
  swift_beginAccess();
  swift_retain();
  sub_1D5AAE280();
  return swift_release();
}

char *sub_1D57B00D0(uint64_t a1)
{
  return sub_1D57B00E4(a1);
}

char *sub_1D57B00E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  id v58;
  void *v59;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  id v68;
  void *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  _QWORD *v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  int v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  void (*v122)(char *, uint64_t);
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  void (*v137)(char *, char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  char v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  id v159;
  id v160;
  void *v161;
  uint64_t v162;
  unsigned __int8 v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  _QWORD *v172;
  uint64_t v173;
  _OWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  void *v180;
  id v181;
  char *v182;
  uint64_t v183;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  char *v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(char *, char *, char *);
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  id v235;
  uint64_t v236;
  int v237;
  void *v238;
  unsigned __int8 v239;
  unsigned __int8 v240;
  unsigned __int8 v241;
  unsigned __int8 v242;
  unsigned __int8 v243;
  unsigned __int8 v244;
  unsigned __int8 v245;
  char v246[8];
  uint64_t v247;
  uint64_t v248;
  char v249;
  char v250;
  char *v251;
  uint64_t v252;
  char v253;
  _QWORD v254[7];
  char v255[8];
  char *v256;
  uint64_t v257;
  unsigned __int8 v258;
  unsigned __int8 v259;
  char *v260;
  char *v261;
  unsigned __int8 v262;
  uint64_t v263[58];
  id v264[58];
  _QWORD v265[7];
  _QWORD v266[6];
  char v267;
  _QWORD v268[6];
  char v269;
  uint64_t v270;

  v270 = *MEMORY[0x1E0C80C00];
  v202 = type metadata accessor for SportsSessionEndEvent.Model(0);
  MEMORY[0x1E0C80A78](v202);
  v203 = (uint64_t)&v185 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B1FB8(0, &qword_1ED9CD0D0, (void (*)(uint64_t))type metadata accessor for AppSessionEndEvent, (void (*)(void))sub_1D57C92F4);
  v198 = *(_QWORD *)(v3 - 8);
  v199 = v3;
  MEMORY[0x1E0C80A78](v3);
  v197 = (char *)&v185 - v4;
  v5 = sub_1D5AADFB0();
  v204 = *(_QWORD *)(v5 - 8);
  v205 = v5;
  MEMORY[0x1E0C80A78](v5);
  v208 = (char *)&v185 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D5AAD734();
  v212 = *(_QWORD *)(v7 - 8);
  v213 = v7;
  MEMORY[0x1E0C80A78](v7);
  v211 = (char *)&v185 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D5AADF98();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670];
  v228 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v209 = (char *)&v185 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v207 = (char *)&v185 - v13;
  v200 = type metadata accessor for AppSessionEndEvent.Model(0);
  MEMORY[0x1E0C80A78](v200);
  v201 = (uint64_t)&v185 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D5AAD9C8();
  v221 = *(_QWORD *)(v15 - 8);
  v222 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v215 = (char *)&v185 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v214 = (char *)&v185 - v18;
  v19 = sub_1D5AAD980();
  v226 = *(_QWORD *)(v19 - 8);
  v227 = v19;
  MEMORY[0x1E0C80A78](v19);
  v225 = (char *)&v185 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CD0F8, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22);
  v224 = (char *)&v185 - v23;
  sub_1D57B1F4C(0, &qword_1ED9D0EC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7F58], v21);
  MEMORY[0x1E0C80A78](v24);
  v230 = (char *)&v185 - v25;
  sub_1D57B1F4C(0, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v21);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v185 - v27;
  v29 = sub_1D5AAD710();
  v30 = *(char **)(v29 - 8);
  v232 = v29;
  v233 = v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v229 = (char *)&v185 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v223 = (char *)&v185 - v33;
  v234 = (char *)sub_1D5AAD9E0();
  v231 = *((_QWORD *)v234 - 1);
  MEMORY[0x1E0C80A78](v234);
  v35 = (char *)&v185 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1D5AAD4C4();
  v217 = *(_QWORD *)(v36 - 8);
  v218 = v36;
  MEMORY[0x1E0C80A78](v36);
  v216 = (uint64_t *)((char *)&v185 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D57B201C();
  v219 = v38;
  v39 = MEMORY[0x1E0C80A78](v38);
  v206 = (char *)&v185 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x1E0C80A78](v39);
  v210 = (char *)&v185 - v42;
  MEMORY[0x1E0C80A78](v41);
  v220 = (char *)&v185 - v43;
  v44 = sub_1D5AADFD4();
  v45 = *(char **)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v47 = (uint64_t *)((char *)&v185 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v48 = sub_1D5AADE60();
  if (v48 != 6 && v48)
    return (char *)MEMORY[0x1E0DEE9D8];
  sub_1D5AADE9C();
  v50 = v49;
  swift_bridgeObjectRelease();
  if (v50)
    return (char *)MEMORY[0x1E0DEE9D8];
  v194 = v9;
  sub_1D5AAE004();
  swift_allocObject();
  v51 = sub_1D5AADFF8();
  *v47 = sub_1D58D84E8;
  v47[1] = 0;
  (*((void (**)(_QWORD *, _QWORD, uint64_t))v45 + 13))(v47, *MEMORY[0x1E0DB2FF8], v44);
  sub_1D5AADFE0();
  v52 = (void *)objc_opt_self();
  v196 = a1;
  sub_1D5AADE90();
  sub_1D58D9918();
  v53 = (void *)sub_1D5AAE934();
  swift_bridgeObjectRelease();
  v264[0] = 0;
  v54 = objc_msgSend(v52, sel_dataWithJSONObject_options_error_, v53, 0, v264);

  v55 = v264[0];
  if (!v54)
  {
    v59 = v55;
    sub_1D5AAD608();

    swift_willThrow();
    goto LABEL_9;
  }
  v45 = (char *)sub_1D5AAD698();
  v57 = v56;

  sub_1D57B1F4C(0, &qword_1ED9CD078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7F88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D58D9980();
  v58 = v235;
  sub_1D5AADFEC();
  if (v58)
  {
    sub_1D57E69C4((uint64_t)v45, v57);
LABEL_9:
    swift_release();
    return v45;
  }
  v235 = 0;
  v189 = v57;
  v190 = (uint64_t)v45;
  v191 = v51;
  v45 = (char *)v264[0];
  v61 = v196;
  sub_1D5AADE6C();
  v62 = (void *)sub_1D5AAE784();
  swift_bridgeObjectRelease();
  v264[0] = 0;
  v63 = objc_msgSend(v52, (SEL)&selRef_engagementCohortsExpField + 1, v62, 0, v264);

  v64 = v264[0];
  if (!v63)
  {
    v69 = v64;
    swift_bridgeObjectRelease();
    sub_1D5AAD608();

    swift_willThrow();
    sub_1D57E69C4(v190, v189);
    goto LABEL_9;
  }
  v65 = sub_1D5AAD698();
  v67 = v66;

  sub_1D58D9A10();
  v68 = v235;
  sub_1D5AADFEC();
  if (v68)
  {
    sub_1D57E69C4(v65, v67);
    swift_bridgeObjectRelease();
    sub_1D57E69C4(v190, v189);
    goto LABEL_9;
  }
  memcpy(v263, v264, sizeof(v263));
  v70 = v45;
  v71 = *((_QWORD *)v45 + 2);
  v235 = 0;
  v188 = v70;
  if (v71)
  {
    v186 = v65;
    v187 = v67;
    v72 = &v70[(*(unsigned __int8 *)(v231 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v231 + 80)];
    v73 = *(_QWORD *)(v231 + 72);
    v192 = *(void (**)(char *, char *, char *))(v231 + 16);
    v193 = v73;
    swift_bridgeObjectRetain();
    v195 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v74 = (uint64_t)v230;
    while (1)
    {
      v192(v35, v72, v234);
      sub_1D5AAD9A4();
      v75 = sub_1D5AAD998();
      v76 = *(_QWORD *)(v75 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75) != 1)
        break;
      sub_1D57C03D0(v74, &qword_1ED9D0EC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7F58]);
      v77 = v225;
      sub_1D5AAD9B0();
      v78 = (uint64_t)v224;
      sub_1D5AAD974();
      (*(void (**)(char *, uint64_t))(v226 + 8))(v77, v227);
      v79 = v228;
      v80 = v194;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v228 + 48))(v78, 1, v194) != 1)
      {
        sub_1D5AADF74();
        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
        goto LABEL_24;
      }
      sub_1D57C03D0(v78, (unint64_t *)&qword_1ED9CD0F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670]);
      v81 = 1;
LABEL_25:
      v61 = v196;
      v83 = v232;
      v82 = v233;
      (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v233 + 7))(v28, v81, 1, v232);
      (*(void (**)(char *, char *))(v231 + 8))(v35, v234);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v82 + 6))(v28, 1, v83) == 1)
      {
        sub_1D57C03D0((uint64_t)v28, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
        v74 = (uint64_t)v230;
      }
      else
      {
        v84 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v82 + 4);
        v85 = v223;
        v84(v223, v28, v83);
        v84(v229, v85, v83);
        v86 = v195;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v86 = (_QWORD *)sub_1D58734A4(0, v86[2] + 1, 1, v86);
        v74 = (uint64_t)v230;
        v88 = v86[2];
        v87 = v86[3];
        v195 = v86;
        if (v88 >= v87 >> 1)
          v195 = (_QWORD *)sub_1D58734A4(v87 > 1, v88 + 1, 1, v195);
        v89 = (char *)v195;
        v195[2] = v88 + 1;
        v84(&v89[((v233[80] + 32) & ~(unint64_t)v233[80])+ *((_QWORD *)v233 + 9) * v88], v229, v232);
        v61 = v196;
      }
      v72 += v193;
      if (!--v71)
      {
        v90 = v188;
        swift_bridgeObjectRelease();
        v65 = v186;
        v67 = v187;
        v91 = v195;
        goto LABEL_33;
      }
    }
    sub_1D5AAD98C();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v75);
    sub_1D5AAD6E0();
LABEL_24:
    v81 = 0;
    goto LABEL_25;
  }
  v91 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v90 = v70;
LABEL_33:
  v92 = v220;
  v234 = &v220[*(int *)(v219 + 48)];
  sub_1D58D85A4(v220, v234, v61, (uint64_t)v91);
  swift_bridgeObjectRelease();
  sub_1D5AAD4F4();
  swift_allocObject();
  v93 = sub_1D5AAD4E8();
  v94 = v216;
  *v216 = sub_1D58D8F68;
  v94[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v217 + 104))(v94, *MEMORY[0x1E0CAE148], v218);
  sub_1D5AAD4D0();
  v95 = sub_1D5AADE60();
  v96 = v190;
  switch(v95)
  {
    case 0:
      v230 = (char *)v93;
      v186 = v65;
      v187 = v67;
      v98 = *((_QWORD *)v90 + 2);
      if (v98)
      {
        v99 = &v90[(*(unsigned __int8 *)(v231 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v231 + 80)];
        v100 = *(_QWORD *)(v231 + 72);
        swift_bridgeObjectRetain();
        v101 = v214;
        while (1)
        {
          sub_1D5AAD9D4();
          v102 = sub_1D5AAD9BC();
          v104 = v103;
          (*(void (**)(char *, uint64_t))(v221 + 8))(v101, v222);
          if (v102 == 0xD000000000000012 && v104 == 0x80000001D5AEEDC0)
            break;
          v105 = sub_1D5AAEDE4();
          swift_bridgeObjectRelease();
          if ((v105 & 1) != 0)
            goto LABEL_52;
          v99 += v100;
          if (!--v98)
          {
            swift_bridgeObjectRelease_n();
            v92 = v220;
            goto LABEL_55;
          }
        }
LABEL_51:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
LABEL_53:
        sub_1D58D9A54(v263);
        swift_release();
        sub_1D57E69C4(v186, v187);
        sub_1D57E69C4(v190, v189);
        swift_release();
        sub_1D5820E20((uint64_t)v220, (uint64_t (*)(_QWORD))sub_1D57B201C);
        return (char *)MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRelease();
LABEL_55:
      if ((sub_1D5AADE84() & 1) != 0)
        v114 = 7;
      else
        v114 = 4;
      LODWORD(v227) = v114;
      v115 = v211;
      sub_1D5AAD728();
      v231 = sub_1D5AAD71C();
      v229 = v116;
      (*(void (**)(char *, uint64_t))(v212 + 8))(v115, v213);
      v117 = v219;
      v118 = v210;
      v119 = &v210[*(int *)(v219 + 48)];
      v120 = v232;
      v121 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v233 + 2);
      v121(v210, v92, v232);
      v121(v119, v234, v120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5AADF80();
      v122 = (void (*)(char *, uint64_t))*((_QWORD *)v233 + 1);
      v122(v118, v120);
      v233 = &v118[*(int *)(v117 + 48)];
      v123 = v233;
      v124 = v220;
      v121(v118, v220, v120);
      v125 = v234;
      v121(v123, v234, v120);
      v126 = *(int *)(v117 + 48);
      v127 = v206;
      v128 = &v206[v126];
      v121(v206, v124, v120);
      v121(v128, v125, v120);
      sub_1D5AADFA4();
      v122(v127, v120);
      v122(v233, v120);
      v129 = v263[26];
      v130 = v263[27];
      v266[0] = v263[25];
      v266[1] = v263[26];
      v266[2] = v263[27];
      v266[3] = v263[28];
      v266[4] = v263[29];
      v266[5] = v263[30];
      v267 = v263[31];
      v234 = (char *)v263[25];
      sub_1D58D9DD8(v263[25], v263[26], v263[27]);
      v45 = (char *)sub_1D5AADE6C();
      v131 = v235;
      sub_1D58D905C((uint64_t)v266, (uint64_t)v45, (uint64_t)v255);
      v235 = v131;
      if (v131)
      {
        swift_release();
        sub_1D57E69C4(v186, v187);
        sub_1D57E69C4(v190, v189);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1D58D9A54(v263);
        sub_1D58D9D0C((uint64_t)v234, v129, v130);
LABEL_65:
        (*(void (**)(char *, uint64_t))(v204 + 8))(v208, v205);
        (*(void (**)(char *, uint64_t))(v228 + 8))(v207, v194);
        goto LABEL_66;
      }
      swift_bridgeObjectRelease();
      sub_1D58D9D0C((uint64_t)v234, v129, v130);
      LODWORD(v231) = v255[0];
      v229 = v256;
      LODWORD(v226) = v258;
      LODWORD(v225) = v259;
      v224 = v260;
      v232 = v257;
      v233 = v261;
      LODWORD(v223) = v262;
      v141 = v263[47];
      v142 = v263[48];
      v265[0] = v263[47];
      v265[1] = v263[48];
      v265[2] = v263[49];
      v265[3] = v263[50];
      v265[4] = v263[51];
      v265[5] = v263[52];
      v265[6] = v263[53];
      v234 = (char *)v263[52];
      sub_1D58DA048(v263[47], v263[48]);
      v45 = (char *)sub_1D5AADE6C();
      v143 = v235;
      sub_1D58D9260((uint64_t)v265, v254);
      v235 = v143;
      if (v143)
      {
        swift_release();
        sub_1D57E69C4(v186, v187);
        sub_1D57E69C4(v190, v189);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1D58D9A54(v263);
        sub_1D58D9D7C(v141, v142);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
      swift_bridgeObjectRelease();
      sub_1D58D9D7C(v141, v142);
      v154 = v254[0];
      v221 = v254[2];
      v222 = v254[1];
      v155 = v254[3];
      v156 = v254[4];
      v234 = (char *)v254[5];
      v157 = v254[6];
      v45 = (char *)v263[55];
      v158 = LODWORD(v263[56]) | ((unint64_t)(WORD2(v263[56]) | (BYTE6(v263[56]) << 16)) << 32);
      swift_bridgeObjectRetain();
      sub_1D5AADE6C();
      v159 = v235;
      sub_1D58D9464((uint64_t)v45, v158, (uint64_t)&v238);
      if (v159)
      {
        swift_release();
        sub_1D57E69C4(v186, v187);
        sub_1D57E69C4(v190, v189);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1D58D9A54(v263);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v204 + 8))(v208, v205);
        (*(void (**)(char *, uint64_t))(v228 + 8))(v207, v194);
LABEL_66:
        sub_1D5820E20((uint64_t)v220, (uint64_t (*)(_QWORD))sub_1D57B201C);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v235 = v238;
        LODWORD(v219) = v239;
        LODWORD(v218) = v240;
        LODWORD(v217) = v241;
        LODWORD(v216) = v242;
        LODWORD(v215) = v243;
        LODWORD(v214) = v244;
        LODWORD(v213) = v245;
        v162 = LODWORD(v263[54]);
        v163 = BYTE4(v263[54]);
        sub_1D5AADE6C();
        v246[0] = v163;
        sub_1D58D9604(v162 | ((unint64_t)v163 << 32), &v237);
        swift_bridgeObjectRelease();
        LODWORD(v212) = v237;
        v165 = v263[57];
        swift_bridgeObjectRetain();
        sub_1D5AADE6C();
        sub_1D58D9758(v165, &v236);
        swift_bridgeObjectRelease();
        sub_1D58DA0A4((uint64_t)v246);
        sub_1D58D9A54(v263);
        swift_bridgeObjectRelease();
        v166 = v236;
        v167 = v201;
        (*(void (**)(uint64_t, char *, uint64_t))(v228 + 32))(v201, v207, v194);
        v168 = (int *)v200;
        (*(void (**)(uint64_t, char *, uint64_t))(v204 + 32))(v167 + *(int *)(v200 + 20), v208, v205);
        v169 = v167 + v168[6];
        *(_BYTE *)v169 = v231;
        v170 = v232;
        *(_QWORD *)(v169 + 8) = v229;
        *(_QWORD *)(v169 + 16) = v170;
        *(_BYTE *)(v169 + 24) = v226;
        *(_BYTE *)(v169 + 25) = (_BYTE)v225;
        v171 = v233;
        *(_QWORD *)(v169 + 32) = v224;
        *(_QWORD *)(v169 + 40) = v171;
        *(_BYTE *)(v169 + 48) = (_BYTE)v223;
        v172 = (_QWORD *)(v167 + v168[7]);
        *v172 = v154;
        v173 = v221;
        v172[1] = v222;
        v172[2] = v173;
        v172[3] = v155;
        v172[4] = v156;
        v172[5] = v234;
        v172[6] = v157;
        v174 = (_OWORD *)(v167 + v168[8]);
        *v174 = xmmword_1D5AC5810;
        v174[1] = 0u;
        v174[2] = 0u;
        v174[3] = 0u;
        *(_OWORD *)((char *)v174 + 58) = 0u;
        v175 = v167 + v168[9];
        *(_QWORD *)v175 = v235;
        *(_BYTE *)(v175 + 8) = v219;
        *(_BYTE *)(v175 + 9) = v218;
        *(_BYTE *)(v175 + 10) = v217;
        *(_BYTE *)(v175 + 11) = (_BYTE)v216;
        *(_BYTE *)(v175 + 12) = (_BYTE)v215;
        *(_BYTE *)(v175 + 13) = (_BYTE)v214;
        *(_BYTE *)(v175 + 14) = v213;
        *(_DWORD *)(v167 + v168[10]) = v212;
        *(_BYTE *)(v167 + v168[11]) = v227;
        sub_1D58DA128((uint64_t)v246, v167 + v168[12], (unint64_t *)&qword_1ED9CE4B0, (uint64_t)&type metadata for UserEventStorageData);
        *(_QWORD *)(v167 + v168[13]) = v166;
        v176 = v167 + v168[14];
        *(_QWORD *)v176 = 0x6E776F6E6B6E75;
        *(_QWORD *)(v176 + 8) = 0xE700000000000000;
        v177 = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)(v176 + 16) = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)(v176 + 24) = v177;
        *(_BYTE *)(v176 + 32) = 0;
        *(_OWORD *)(v176 + 40) = 0u;
        *(_OWORD *)(v176 + 56) = 0u;
        *(_OWORD *)(v176 + 72) = 0u;
        *(_OWORD *)(v176 + 88) = 0u;
        *(_QWORD *)(v167 + v168[15]) = 0;
        v178 = v167 + v168[16];
        *(_DWORD *)v178 = 0;
        *(_BYTE *)(v178 + 4) = 1;
        sub_1D57A8DE4(qword_1ED9CD2D8, type metadata accessor for AppSessionEndEvent.Model, (uint64_t)&protocol conformance descriptor for AppSessionEndEvent.Model);
        sub_1D5AAD4DC();
        v179 = objc_allocWithZone((Class)sub_1D5AADE48());
        v180 = (void *)sub_1D5AADE54();
        sub_1D5AADE6C();
        v181 = (id)sub_1D58D9E60((uint64_t)v180);
        swift_bridgeObjectRelease();

        sub_1D5AADE9C();
        sub_1D5AADE60();
        type metadata accessor for AppSessionEndEvent(0);
        sub_1D57C92F4();
        v182 = v197;
        sub_1D5AADA88();
        sub_1D5AADD64();
        sub_1D57B1F4C(0, &qword_1ED9CD710, (uint64_t (*)(uint64_t))sub_1D58D9E0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v45 = (char *)swift_allocObject();
        *((_OWORD *)v45 + 1) = xmmword_1D5AB0170;
        v183 = v199;
        *((_QWORD *)v45 + 7) = v199;
        *((_QWORD *)v45 + 8) = sub_1D58D9FCC(&qword_1ED9CD0C8, &qword_1ED9CD0D0, (void (*)(uint64_t))type metadata accessor for AppSessionEndEvent, (void (*)(void))sub_1D57C92F4);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v45 + 4);
        (*(void (**)(uint64_t *, char *, uint64_t))(v198 + 32))(boxed_opaque_existential_1, v182, v183);
        swift_release();
        sub_1D57E69C4(v186, v187);
        sub_1D57E69C4(v190, v189);
        swift_release();
        sub_1D5820E20(v201, type metadata accessor for AppSessionEndEvent.Model);
        sub_1D5820E20((uint64_t)v220, (uint64_t (*)(_QWORD))sub_1D57B201C);
      }
      return v45;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
      swift_bridgeObjectRelease();
      sub_1D58D9A54(v263);
      swift_release();
      sub_1D57E69C4(v65, v67);
      v97 = v96;
      goto LABEL_35;
    case 6:
      v230 = (char *)v93;
      v186 = v65;
      v187 = v67;
      v106 = *((_QWORD *)v90 + 2);
      if (v106)
      {
        v107 = &v90[(*(unsigned __int8 *)(v231 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v231 + 80)];
        v108 = *(_QWORD *)(v231 + 72);
        swift_bridgeObjectRetain();
        v109 = v215;
        do
        {
          sub_1D5AAD9D4();
          v110 = sub_1D5AAD9BC();
          v112 = v111;
          (*(void (**)(char *, uint64_t))(v221 + 8))(v109, v222);
          if (v110 == 0xD000000000000015 && v112 == 0x80000001D5AEEDA0)
            goto LABEL_51;
          v113 = sub_1D5AAEDE4();
          swift_bridgeObjectRelease();
          if ((v113 & 1) != 0)
          {
LABEL_52:
            swift_bridgeObjectRelease_n();
            goto LABEL_53;
          }
          v107 += v108;
          --v106;
        }
        while (v106);
        swift_bridgeObjectRelease_n();
        v92 = v220;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v132 = v211;
      sub_1D5AAD728();
      v231 = sub_1D5AAD71C();
      (*(void (**)(char *, uint64_t))(v212 + 8))(v132, v213);
      v133 = v210;
      v134 = &v210[*(int *)(v219 + 48)];
      v135 = v232;
      v136 = v233;
      v137 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v233 + 2);
      v137(v210, v92, v232);
      v137(v134, v234, v135);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5AADF80();
      (*((void (**)(char *, uint64_t))v136 + 1))(v133, v135);
      v138 = v263[26];
      v139 = v263[27];
      v268[0] = v263[25];
      v268[1] = v263[26];
      v268[2] = v263[27];
      v268[3] = v263[28];
      v268[4] = v263[29];
      v268[5] = v263[30];
      v269 = v263[31];
      v234 = (char *)v263[25];
      sub_1D58D9DD8(v263[25], v263[26], v263[27]);
      v45 = (char *)sub_1D5AADE6C();
      v140 = v235;
      sub_1D58D905C((uint64_t)v268, (uint64_t)v45, (uint64_t)v246);
      v235 = v140;
      if (v140)
      {
        swift_release();
        sub_1D57E69C4(v186, v187);
        sub_1D57E69C4(v190, v189);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1D58D9A54(v263);
        sub_1D58D9D0C((uint64_t)v234, v138, v139);
        (*(void (**)(char *, uint64_t))(v228 + 8))(v209, v194);
        goto LABEL_66;
      }
      swift_bridgeObjectRelease();
      sub_1D58D9A54(v263);
      sub_1D58D9D0C((uint64_t)v234, v138, v139);
      LODWORD(v234) = v246[0];
      v144 = v247;
      v145 = v248;
      v146 = v249;
      v147 = v250;
      v148 = v252;
      v233 = v251;
      v149 = v253;
      v150 = v203;
      (*(void (**)(uint64_t, char *, uint64_t))(v228 + 32))(v203, v209, v194);
      v151 = v202;
      v152 = v150 + *(int *)(v202 + 20);
      *(_BYTE *)v152 = (_BYTE)v234;
      *(_QWORD *)(v152 + 8) = v144;
      *(_QWORD *)(v152 + 16) = v145;
      *(_BYTE *)(v152 + 24) = v146;
      *(_BYTE *)(v152 + 25) = v147;
      *(_QWORD *)(v152 + 32) = v233;
      *(_QWORD *)(v152 + 40) = v148;
      *(_BYTE *)(v152 + 48) = v149;
      *(_QWORD *)(v150 + *(int *)(v151 + 24)) = MEMORY[0x1E0DEE9D8];
      sub_1D57B1F4C(0, &qword_1ED9CD710, (uint64_t (*)(uint64_t))sub_1D58D9E0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v45 = (char *)swift_allocObject();
      *((_OWORD *)v45 + 1) = xmmword_1D5AB0170;
      sub_1D57A8DE4(&qword_1EFF4BE38, type metadata accessor for SportsSessionEndEvent.Model, (uint64_t)&protocol conformance descriptor for SportsSessionEndEvent.Model);
      v153 = v235;
      sub_1D5AAD4DC();
      if (v153)
      {
        *((_QWORD *)v45 + 2) = 0;
        swift_release();
        swift_release();
        sub_1D57E69C4(v186, v187);
        sub_1D57E69C4(v190, v189);
        swift_release();
        sub_1D5820E20(v150, type metadata accessor for SportsSessionEndEvent.Model);
        goto LABEL_66;
      }
      v160 = objc_allocWithZone((Class)sub_1D5AADE48());
      v161 = (void *)sub_1D5AADE54();
      sub_1D5AADE6C();
      v235 = (id)sub_1D58D9E60((uint64_t)v161);
      swift_bridgeObjectRelease();

      v234 = (char *)sub_1D5AADE9C();
      sub_1D5AADE60();
      sub_1D57B1FB8(0, &qword_1EFF4BE40, (void (*)(uint64_t))type metadata accessor for SportsSessionEndEvent, (void (*)(void))sub_1D58D9FB0);
      *((_QWORD *)v45 + 7) = v164;
      *((_QWORD *)v45 + 8) = sub_1D58D9FCC(&qword_1EFF4BE50, &qword_1EFF4BE40, (void (*)(uint64_t))type metadata accessor for SportsSessionEndEvent, (void (*)(void))sub_1D58D9FB0);
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)v45 + 4);
      type metadata accessor for SportsSessionEndEvent(0);
      sub_1D58D9FB0();
      sub_1D5AADA88();
      swift_release();
      sub_1D57E69C4(v186, v187);
      sub_1D57E69C4(v190, v189);
      swift_release();
      sub_1D5820E20(v203, type metadata accessor for SportsSessionEndEvent.Model);
      sub_1D5820E20((uint64_t)v220, (uint64_t (*)(_QWORD))sub_1D57B201C);
      return v45;
    default:
      swift_bridgeObjectRelease();
      sub_1D58D9A54(v263);
      swift_release();
      sub_1D57E69C4(v65, v67);
      v97 = v190;
LABEL_35:
      sub_1D57E69C4(v97, v189);
      swift_release();
      sub_1D5820E20((uint64_t)v92, (uint64_t (*)(_QWORD))sub_1D57B201C);
      return (char *)MEMORY[0x1E0DEE9D8];
  }
}

uint64_t type metadata accessor for AppSessionEndEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CCE18);
}

void sub_1D57B1F4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t type metadata accessor for SportsSessionEndEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9D0FB0);
}

void sub_1D57B1FB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1D5AADAAC();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1D57B201C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED9D0EB8)
  {
    sub_1D5AAD710();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED9D0EB8);
  }
}

uint64_t _s13NewsAnalytics8ViewDataVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D57B20B4(_QWORD *a1)
{
  return SubscriptionData.encode(to:)(a1);
}

uint64_t SubscriptionData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD v18[4];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;

  sub_1D57B23AC(0, &qword_1ED9CC910, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v24 = *(_DWORD *)(v1 + 4);
  v7 = *(_QWORD *)(v1 + 8);
  v22 = *(_QWORD *)(v1 + 16);
  v23 = v7;
  v8 = *(_QWORD *)(v1 + 24);
  v20 = *(_QWORD *)(v1 + 32);
  v21 = v8;
  v19 = *(_QWORD *)(v1 + 40);
  v18[3] = *(_DWORD *)(v1 + 48);
  v9 = a1[3];
  v10 = a1;
  v12 = (char *)v18 - v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1D57B2408();
  v13 = v5;
  sub_1D5AAEEC8();
  LOBYTE(v26) = 0;
  sub_1D5AAED78();
  if (!v2)
  {
    v14 = v22;
    v15 = v23;
    v16 = v21;
    LOBYTE(v26) = 1;
    sub_1D5AAED78();
    v26 = v15;
    v25 = 2;
    sub_1D57B24D4();
    sub_1D5AAED6C();
    v26 = v14;
    v25 = 3;
    sub_1D57B2490();
    sub_1D5AAED6C();
    v26 = v16;
    v25 = 4;
    sub_1D57B244C();
    sub_1D5AAED6C();
    v26 = v20;
    v25 = 5;
    sub_1D57B2518();
    sub_1D5AAED6C();
    v26 = v19;
    v25 = 6;
    sub_1D57B255C();
    sub_1D5AAED18();
    LOBYTE(v26) = 7;
    sub_1D5AAED78();
    LOBYTE(v26) = 8;
    sub_1D5AAED78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v13);
}

void sub_1D57B23AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57B2408();
    v7 = a3(a1, &type metadata for SubscriptionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57B2408()
{
  unint64_t result;

  result = qword_1ED9C8F50;
  if (!qword_1ED9C8F50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE43A4, &type metadata for SubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8F50);
  }
  return result;
}

unint64_t sub_1D57B244C()
{
  unint64_t result;

  result = qword_1ED9CB5F8;
  if (!qword_1ED9CB5F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaidSubscribedTagListData, &type metadata for PaidSubscribedTagListData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5F8);
  }
  return result;
}

unint64_t sub_1D57B2490()
{
  unint64_t result;

  result = qword_1ED9CB5A0;
  if (!qword_1ED9CB5A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AutoSubscribedTagListData, &type metadata for AutoSubscribedTagListData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5A0);
  }
  return result;
}

unint64_t sub_1D57B24D4()
{
  unint64_t result;

  result = qword_1ED9CAB28;
  if (!qword_1ED9CAB28)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribedTagListData, &type metadata for SubscribedTagListData);
    atomic_store(result, (unint64_t *)&qword_1ED9CAB28);
  }
  return result;
}

unint64_t sub_1D57B2518()
{
  unint64_t result;

  result = qword_1ED9C6A58;
  if (!qword_1ED9C6A58)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WebAccessTagListData, &type metadata for WebAccessTagListData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6A58);
  }
  return result;
}

unint64_t sub_1D57B255C()
{
  unint64_t result;

  result = qword_1ED9CDAE8;
  if (!qword_1ED9CDAE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MutedTagListData, &type metadata for MutedTagListData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDAE8);
  }
  return result;
}

uint64_t sub_1D57B25A0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v3 = sub_1D5AAD734();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a2, sel_adsUserID);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1D5AAE820();
    v11 = v10;

  }
  else
  {
    sub_1D5AAD728();
    v9 = sub_1D5AAD71C();
    v11 = v12;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v18[0] = v9;
  v18[1] = v11;
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = sub_1D5AADB54();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x1E0CF8168], v13);
  sub_1D57B2740();
  sub_1D5AADAF4();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D57B2740()
{
  unint64_t result;

  result = qword_1ED9C67F0;
  if (!qword_1ED9C67F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdUserData, &type metadata for AdUserData);
    atomic_store(result, (unint64_t *)&qword_1ED9C67F0);
  }
  return result;
}

uint64_t sub_1D57B2784@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57B27A4(a1);
}

uint64_t sub_1D57B27A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  void *v10;
  _QWORD v12[3];
  unsigned __int8 v13;

  v2 = sub_1D5AADC20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED9CD738 != -1)
    swift_once();
  if ((sub_1D5AAD830() & 1) != 0)
  {
    if (qword_1EFF47080 != -1)
      swift_once();
    sub_1D59FD418();
    sub_1D5AAD7F4();
    v6 = v13;
    if (qword_1EFF47088 != -1)
      swift_once();
    sub_1D5AAD7F4();
    v7 = v12[2];
    if (qword_1EFF47090 != -1)
      swift_once();
    sub_1D5AAD7F4();
    if (v6)
    {
      v8 = v12[1];
      *v5 = v7;
      v5[1] = v8;
      v9 = (unsigned int *)MEMORY[0x1E0CF8240];
    }
    else
    {
      v9 = (unsigned int *)MEMORY[0x1E0CF8248];
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *v9, v2);
    return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(v3 + 32))(a1, v5, v2);
  }
  else
  {
    v10 = (void *)swift_unknownObjectRetain();
    return sub_1D57B29C0(v10, a1);
  }
}

uint64_t sub_1D57B29C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_1D5AADC20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (unint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_isAnalyticsJitterEnabled) & 1) != 0
    && !objc_msgSend(a1, sel_isAnalyticsJitterEnabled))
  {
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(a2, *MEMORY[0x1E0CF8248], v4);
  }
  else
  {
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_analyticsJitterLowerBound) & 1) != 0)
    {
      objc_msgSend(a1, sel_analyticsJitterLowerBound);
      v9 = v8;
    }
    else
    {
      v9 = 0xC082C00000000000;
    }
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_analyticsJitterUpperBound) & 1) != 0)
    {
      objc_msgSend(a1, sel_analyticsJitterUpperBound);
      v11 = v10;
    }
    else
    {
      v11 = 0x4082C00000000000;
    }
    swift_unknownObjectRelease();
    *v7 = v9;
    v7[1] = v11;
    (*(void (**)(unint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CF8240], v4);
    return (*(uint64_t (**)(uint64_t, unint64_t *, uint64_t))(v5 + 32))(a2, v7, v4);
  }
}

void sub_1D57B2B54(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = a3 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1D8279758](v6);
  if (v7)
  {
    v8 = (void *)v7;
    if (a2 == 1)
      sub_1D57B2BD4(objc_msgSend(a4, sel_sportsOnboardingState) == (id)1);

  }
}

void sub_1D57B2BD4(char a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext), sel_localRegionProvider);
  if (v3)
  {
    v4 = v3;
    v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    *(_BYTE *)(v6 + 24) = a1 & 1;
    v8[4] = sub_1D57B6304;
    v8[5] = v6;
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 1107296256;
    v8[2] = sub_1D57B6298;
    v8[3] = &block_descriptor_3;
    v7 = _Block_copy(v8);
    swift_release();
    objc_msgSend(v4, sel_fetchRegions_, v7);
    _Block_release(v7);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1D57B64C0(MEMORY[0x1E0DEE9D8], a1 & 1);
  }
}

uint64_t sub_1D57B2D00(_QWORD *a1)
{
  return DeviceData.encode(to:)(a1);
}

uint64_t DeviceData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  int v15;
  int v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;

  sub_1D57B2F14(0, &qword_1ED9CC890, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v14 - v6;
  v8 = *(unsigned __int8 *)(v1 + 16);
  v15 = *(unsigned __int8 *)(v1 + 17);
  v16 = v8;
  v9 = *(_QWORD *)(v1 + 24);
  v14[2] = *(_QWORD *)(v1 + 32);
  v14[3] = v9;
  v10 = *(_QWORD *)(v1 + 48);
  v14[0] = *(_QWORD *)(v1 + 40);
  v14[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B2FF8();
  sub_1D5AAEEC8();
  v24 = 0;
  v11 = v17;
  sub_1D5AAED3C();
  if (!v11)
  {
    v12 = v15;
    v23 = v16;
    v22 = 1;
    sub_1D57B2FB4();
    sub_1D5AAED6C();
    v21 = v12;
    v20 = 2;
    sub_1D57B2F70();
    sub_1D5AAED6C();
    v19 = 3;
    sub_1D5AAED3C();
    v18 = 4;
    sub_1D5AAED3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D57B2F14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57B2FF8();
    v7 = a3(a1, &type metadata for DeviceData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57B2F70()
{
  unint64_t result;

  result = qword_1ED9C8D90;
  if (!qword_1ED9C8D90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OsInstallVariant, &type metadata for OsInstallVariant);
    atomic_store(result, (unint64_t *)&qword_1ED9C8D90);
  }
  return result;
}

unint64_t sub_1D57B2FB4()
{
  unint64_t result;

  result = qword_1ED9C7BE8;
  if (!qword_1ED9C7BE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DevicePlatform, &type metadata for DevicePlatform);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BE8);
  }
  return result;
}

unint64_t sub_1D57B2FF8()
{
  unint64_t result;

  result = qword_1ED9C75B0;
  if (!qword_1ED9C75B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3D20, &type metadata for DeviceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C75B0);
  }
  return result;
}

double sub_1D57B303C(uint64_t a1)
{
  return sub_1D57B305C(a1);
}

double sub_1D57B305C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  double v19;
  double v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  double v48;
  _QWORD *v50;
  os_unfair_lock_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;

  v2 = v1;
  v54 = a1;
  sub_1D57B35B0();
  v52 = v3;
  MEMORY[0x1E0C80A78](v3);
  v53 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADC20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D5AADD34();
  v55 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D5AAD710();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v50 - v17;
  v51 = (os_unfair_lock_t)(v2[8] + 16);
  os_unfair_lock_lock(v51);
  sub_1D5AAD704();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, (uint64_t)v2 + OBJC_IVAR____TtC13NewsAnalytics37RollingTimestampConfigurationProvider_lastConfigRollDate, v12);
  sub_1D5AAD6C8();
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v16, v12);
  v21(v18, v12);
  if (v20 <= 15.0)
  {
    sub_1D57B3530();
    v37 = (void *)sub_1D5AAEAC0();
    sub_1D57B34CC();
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1D5ABF230;
    v40 = (char *)v2 + OBJC_IVAR____TtC13NewsAnalytics37RollingTimestampConfigurationProvider_lastConfig;
    swift_beginAccess();
    v41 = v55;
    v32 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
    v32(v11, v40, v9);
    v42 = sub_1D5AADD28();
    v44 = v43;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v9);
    *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v31 + 64) = sub_1D57B356C();
    *(_QWORD *)(v31 + 32) = v42;
    *(_QWORD *)(v31 + 40) = v44;
    v28 = v52;
    v38 = *(_QWORD *)&v40[*(int *)(v52 + 48)];
  }
  else
  {
    v22 = v2[5];
    v23 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v22);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    sub_1D5AADC14();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v26 = (char *)v2 + OBJC_IVAR____TtC13NewsAnalytics37RollingTimestampConfigurationProvider_lastConfig;
    swift_beginAccess();
    v27 = v55;
    (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v26, v11, v9);
    v28 = v52;
    *(_QWORD *)&v26[*(int *)(v52 + 48)] = v25;
    swift_endAccess();
    sub_1D57B3530();
    v29 = sub_1D5AAEAC0();
    v50 = v2;
    v30 = (void *)v29;
    sub_1D57B34CC();
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1D5ABF230;
    v32 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v32(v11, v26, v9);
    v33 = sub_1D5AADD28();
    v35 = v34;
    v36 = *(void (**)(char *, uint64_t))(v27 + 8);
    v37 = v30;
    v2 = v50;
    v36(v11, v9);
    *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v31 + 64) = sub_1D57B356C();
    *(_QWORD *)(v31 + 32) = v33;
    *(_QWORD *)(v31 + 40) = v35;
    v38 = *(_QWORD *)&v26[*(int *)(v28 + 48)];
  }
  v39 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v31 + 96) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v31 + 104) = v39;
  *(_QWORD *)(v31 + 72) = v38;
  sub_1D5AAEA24();
  sub_1D5AAE328();

  swift_bridgeObjectRelease();
  v45 = (char *)v2 + OBJC_IVAR____TtC13NewsAnalytics37RollingTimestampConfigurationProvider_lastConfig;
  swift_beginAccess();
  v46 = *(int *)(v28 + 48);
  v47 = v53;
  v32(v53, v45, v9);
  v48 = *(double *)&v45[v46];
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v54, v47, v9);
  os_unfair_lock_unlock(v51);
  return v48;
}

void sub_1D57B34CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CCA30)
  {
    sub_1D57E6B18(255, (unint64_t *)&qword_1ED9CCA40);
    v0 = sub_1D5AAEDB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CCA30);
  }
}

unint64_t sub_1D57B3530()
{
  unint64_t result;

  result = qword_1ED9CC7B0;
  if (!qword_1ED9CC7B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CC7B0);
  }
  return result;
}

unint64_t sub_1D57B356C()
{
  unint64_t result;

  result = qword_1ED9CC650;
  if (!qword_1ED9CC650)
  {
    result = MEMORY[0x1D8279680](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED9CC650);
  }
  return result;
}

void sub_1D57B35B0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED9CEAC0)
  {
    sub_1D5AADD34();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED9CEAC0);
  }
}

uint64_t destroy for NetworkEventData(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t SessionObserver.sessionDidStart(withSessionID:sourceApplication:url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v6 = v5;
  *(_QWORD *)&v62 = a4;
  v69 = a2;
  v67 = a1;
  v70 = sub_1D5AAD710();
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v66 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D5AADEF0();
  v64 = *(_QWORD *)(v10 - 8);
  v65 = v10;
  MEMORY[0x1E0C80A78](v10);
  v63 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57ABC2C(0, &qword_1ED9C6F90, (void (*)(void))sub_1D57C9F00);
  v60 = *(_QWORD *)(v12 - 8);
  v61 = v12;
  MEMORY[0x1E0C80A78](v12);
  v59 = (char *)&v58 - v13;
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D57B1F4C(0, &qword_1ED9D0C10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7AB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v58 - v16;
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9C6F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v14);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v58 - v19;
  v21 = sub_1D5AAD668();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57CC7A0(a5, (uint64_t)v20);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21);
  v26 = MEMORY[0x1E0DEA968];
  if (v25 == 1)
  {
    sub_1D57C03D0((uint64_t)v20, (unint64_t *)&qword_1ED9C6F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v27 = v62;
  }
  else
  {
    v58 = a3;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
    v28 = (void *)sub_1D5AAEAC0();
    sub_1D57C02F0(0, (unint64_t *)&qword_1ED9CCA30, (unint64_t *)&qword_1ED9CCA40, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v29 = swift_allocObject();
    v30 = (_QWORD *)v29;
    *(_OWORD *)(v29 + 16) = xmmword_1D5ABF230;
    if (v6[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind])
    {
      if (v6[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind] == 1)
      {
        v31 = 0xE500000000000000;
        v32 = 0x6F69647561;
      }
      else
      {
        v32 = 0x7274656D656C6574;
        v31 = 0xE900000000000079;
      }
    }
    else
    {
      v31 = 0xE300000000000000;
      v32 = 7368801;
    }
    *(_QWORD *)(v29 + 56) = v26;
    v33 = sub_1D57B356C();
    v30[8] = v33;
    v30[4] = v32;
    v30[5] = v31;
    v34 = sub_1D5AAD62C();
    v30[12] = MEMORY[0x1E0DEA968];
    v30[13] = v33;
    v30[9] = v34;
    v30[10] = v35;
    sub_1D5AAEA24();
    sub_1D5AAE328();

    swift_bridgeObjectRelease();
    sub_1D5946844(MEMORY[0x1E0DEE9D8]);
    v36 = *MEMORY[0x1E0DB7AB0];
    v37 = sub_1D5AAE370();
    v38 = *(_QWORD *)(v37 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 104))(v17, v36, v37);
    v39 = v37;
    v26 = MEMORY[0x1E0DEA968];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v17, 0, 1, v39);
    sub_1D5AAE1A8();
    swift_bridgeObjectRelease();
    sub_1D57C03D0((uint64_t)v17, &qword_1ED9D0C10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7AB8]);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    v27 = v62;
    a3 = v58;
  }
  sub_1D57C9F4C((uint64_t)v6, a3, v27, &v71);
  v40 = v71;
  v41 = v72;
  sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
  v42 = (void *)sub_1D5AAEAC0();
  sub_1D57C02F0(0, (unint64_t *)&qword_1ED9CCA30, (unint64_t *)&qword_1ED9CCA40, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v43 = swift_allocObject();
  v44 = v43;
  v62 = xmmword_1D5AB0170;
  *(_OWORD *)(v43 + 16) = xmmword_1D5AB0170;
  if (v6[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind])
  {
    if (v6[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind] == 1)
    {
      v45 = 0xE500000000000000;
      v46 = 0x6F69647561;
    }
    else
    {
      v46 = 0x7274656D656C6574;
      v45 = 0xE900000000000079;
    }
  }
  else
  {
    v45 = 0xE300000000000000;
    v46 = 7368801;
  }
  *(_QWORD *)(v43 + 56) = v26;
  *(_QWORD *)(v43 + 64) = sub_1D57B356C();
  *(_QWORD *)(v44 + 32) = v46;
  *(_QWORD *)(v44 + 40) = v45;
  sub_1D5AAEA24();
  sub_1D5AAE328();

  swift_bridgeObjectRelease();
  if (v41)
  {
    v71 = v40;
    v72 = v41;
    sub_1D57C9F00();
    v47 = v59;
    sub_1D5AADA40();
    sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v48 = sub_1D5AADB54();
    v49 = *(_QWORD *)(v48 - 8);
    v50 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = v62;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v49 + 104))(v51 + v50, *MEMORY[0x1E0CF8168], v48);
    sub_1D5AADBB4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v47, v61);
  }
  sub_1D57A4FE8();
  *(_QWORD *)(swift_allocObject() + 16) = v6;
  v52 = v6;
  sub_1D5AADB9C();
  swift_release();
  v54 = v63;
  v53 = v64;
  v55 = v65;
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v63, *MEMORY[0x1E0CF8550], v65);
  v56 = v66;
  sub_1D5AAD704();
  sub_1D5AADBC0();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v56, v70);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
  sub_1D5AADBF0();
  type metadata accessor for AppSessionResumeEvent(0);
  sub_1D57A8DE4(&qword_1ED9CA738, type metadata accessor for AppSessionResumeEvent, (uint64_t)&protocol conformance descriptor for AppSessionResumeEvent);
  sub_1D5AADF50();
  return swift_release();
}

uint64_t sub_1D57B3DCC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1D57B1F4C(0, &qword_1ED9D0DF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1D5AAE1E4();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D5AB0170;
  sub_1D57B1F4C(0, &qword_1ED9D0DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FB0], v0);
  v2 = sub_1D5AAE1CC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1D5ACE110;
  v7 = (char *)(v6 + v5);
  *(_QWORD *)v7 = 0x6E676961706D6163;
  *((_QWORD *)v7 + 1) = 0xEB0000000064695FLL;
  v8 = *MEMORY[0x1E0DB3F90];
  v9 = *(void (**)(void))(v3 + 104);
  ((void (*)(char *, uint64_t, uint64_t))v9)(v7, v8, v2);
  strcpy(&v7[v4], "campaign_type");
  *(_WORD *)&v7[v4 + 14] = -4864;
  v9();
  v10 = &v7[2 * v4];
  *(_QWORD *)v10 = 0x6576697461657263;
  *((_QWORD *)v10 + 1) = 0xEB0000000064695FLL;
  v9();
  v11 = &v7[3 * v4];
  *(_QWORD *)v11 = 0x724664656E65706FLL;
  *((_QWORD *)v11 + 1) = 0xEA00000000006D6FLL;
  v9();
  v12 = &v7[4 * v4];
  *(_QWORD *)v12 = 0x6E656B6F7471;
  *((_QWORD *)v12 + 1) = 0xE600000000000000;
  v9();
  v13 = &v7[5 * v4];
  *(_QWORD *)v13 = 0xD000000000000010;
  *((_QWORD *)v13 + 1) = 0x80000001D5AF0930;
  v9();
  v14 = (uint64_t *)&v7[6 * v4];
  *v14 = sub_1D5AAE820();
  v14[1] = v15;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v9)(v14, v8, v2);
  v16 = sub_1D57B4058(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D82785B8](42, 0xE100000000000000, 0, 0, 0, 0, 0, 0, v6, v16);
  return v1;
}

unint64_t sub_1D57B4058(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1D5949E6C();
  v2 = (_QWORD *)sub_1D5AAEC28();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1D5948F70(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D57B416C()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  if (qword_1ED9CCCB0 != -1)
    swift_once();
  v2 = objc_msgSend(*(id *)(v1 + 16), sel_possiblyUnfetchedAppConfiguration);
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_adInstrumentationEnabled) & 1) != 0)
    objc_msgSend(v2, sel_adInstrumentationEnabled);
  swift_unknownObjectRelease();
  sub_1D57B423C();
  return sub_1D5AAD80C() & 1;
}

unint64_t sub_1D57B423C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED9C6990;
  if (!qword_1ED9C6990)
  {
    v1 = type metadata accessor for TrackerConfiguration();
    result = MEMORY[0x1D8279680](&unk_1D5ABBF50, v1);
    atomic_store(result, (unint64_t *)&qword_1ED9C6990);
  }
  return result;
}

uint64_t sub_1D57B4280(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1D57B1F4C(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D57B42C8(_QWORD *a1)
{
  return NotificationSettingsData.encode(to:)(a1);
}

uint64_t NotificationSettingsData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  _DWORD v14[7];
  char v15;
  uint64_t v16;

  sub_1D57B45F0(0, &qword_1ED9CC950, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v14 - v7;
  v9 = *v1;
  v10 = *((unsigned __int8 *)v1 + 8);
  v14[5] = *((unsigned __int8 *)v1 + 9);
  v14[6] = v10;
  v11 = *((unsigned __int8 *)v1 + 10);
  v14[3] = *((unsigned __int8 *)v1 + 11);
  v14[4] = v11;
  v12 = *((unsigned __int8 *)v1 + 12);
  v14[1] = *((unsigned __int8 *)v1 + 13);
  v14[2] = v12;
  v14[0] = *((unsigned __int8 *)v1 + 14);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B45AC();
  sub_1D5AAEEC8();
  v16 = v9;
  v15 = 0;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  if (!v2)
  {
    LOBYTE(v16) = 1;
    sub_1D5AAED48();
    LOBYTE(v16) = 2;
    sub_1D5AAED48();
    LOBYTE(v16) = 3;
    sub_1D5AAED48();
    LOBYTE(v16) = 4;
    sub_1D5AAED48();
    LOBYTE(v16) = 5;
    sub_1D5AAED48();
    LOBYTE(v16) = 6;
    sub_1D5AAED00();
    LOBYTE(v16) = 7;
    sub_1D5AAED00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1D57B4558()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CC6B0)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CC6B0);
  }
}

unint64_t sub_1D57B45AC()
{
  unint64_t result;

  result = qword_1ED9CB3F0;
  if (!qword_1ED9CB3F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6EDC, &type metadata for NotificationSettingsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB3F0);
  }
  return result;
}

void sub_1D57B45F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57B45AC();
    v7 = a3(a1, &type metadata for NotificationSettingsData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t _s13NewsAnalytics8FeedDataVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D57B4680(_QWORD *a1)
{
  return NetworkEventData.encode(to:)(a1);
}

uint64_t NetworkEventData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  sub_1D57B4A88(0, &qword_1ED9CC908, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B4B6C();
  sub_1D5AAEEC8();
  v14 = 0;
  sub_1D5AAD710();
  sub_1D57A8DE4(&qword_1ED9CE508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NetworkEventData();
    v14 = 1;
    sub_1D5AAED84();
    v14 = 2;
    sub_1D5AAED84();
    v14 = 3;
    sub_1D5AAED84();
    v14 = 4;
    sub_1D5AAED84();
    v14 = 5;
    sub_1D5AAED84();
    v14 = *(_BYTE *)(v3 + v10[10]);
    v13 = 6;
    sub_1D57B4BB0();
    sub_1D5AAED6C();
    v14 = 7;
    sub_1D5AAED84();
    v14 = 8;
    sub_1D5AAED84();
    v14 = *(_BYTE *)(v3 + v10[13]);
    v13 = 9;
    sub_1D57B4B28();
    sub_1D5AAED6C();
    v14 = 10;
    sub_1D5AAED48();
    v14 = *(_BYTE *)(v3 + v10[15]);
    v13 = 11;
    sub_1D57B4AE4();
    sub_1D5AAED6C();
    v14 = 12;
    sub_1D5AAED3C();
    v14 = 13;
    sub_1D5AAED48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t type metadata accessor for NetworkEventData()
{
  uint64_t result;

  result = qword_1ED9CFA58;
  if (!qword_1ED9CFA58)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D57B4A88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57B4B6C();
    v7 = a3(a1, &type metadata for NetworkEventData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57B4AE4()
{
  unint64_t result;

  result = qword_1ED9CBAE0;
  if (!qword_1ED9CBAE0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CellularRadioAccessTechnology, &type metadata for CellularRadioAccessTechnology);
    atomic_store(result, (unint64_t *)&qword_1ED9CBAE0);
  }
  return result;
}

unint64_t sub_1D57B4B28()
{
  unint64_t result;

  result = qword_1ED9C8D70;
  if (!qword_1ED9C8D70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NetworkEventType, &type metadata for NetworkEventType);
    atomic_store(result, (unint64_t *)&qword_1ED9C8D70);
  }
  return result;
}

unint64_t sub_1D57B4B6C()
{
  unint64_t result;

  result = qword_1ED9C8D48;
  if (!qword_1ED9C8D48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6E84, &type metadata for NetworkEventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8D48);
  }
  return result;
}

unint64_t sub_1D57B4BB0()
{
  unint64_t result;

  result = qword_1ED9C75A0;
  if (!qword_1ED9C75A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CacheState, &type metadata for CacheState);
    atomic_store(result, (unint64_t *)&qword_1ED9C75A0);
  }
  return result;
}

uint64_t sub_1D57B4BF4(_QWORD *a1)
{
  return UserData.encode(to:)(a1);
}

uint64_t UserData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char v14;
  _QWORD v16[2];
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  sub_1D57B4EA8(0, &qword_1ED9CC9B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = *(unsigned __int8 *)(v1 + 16);
  v20 = *(unsigned __int8 *)(v1 + 17);
  v21 = v7;
  v19 = *(_QWORD *)(v1 + 24);
  v8 = *(_DWORD *)(v1 + 32);
  v17 = *(_DWORD *)(v1 + 40);
  v18 = v8;
  v9 = *(_QWORD *)(v1 + 48);
  v16[0] = *(_QWORD *)(v1 + 56);
  v16[1] = v9;
  v10 = a1[3];
  v11 = a1;
  v13 = (char *)v16 - v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1D57B4F48();
  sub_1D5AAEEC8();
  v31 = 0;
  sub_1D5AAED3C();
  if (!v2)
  {
    v14 = v20;
    v30 = 1;
    sub_1D5AAED00();
    v29 = v14;
    v28 = 2;
    sub_1D57B4F04();
    sub_1D5AAED6C();
    v27 = 3;
    sub_1D5AAED84();
    v26 = 4;
    sub_1D5AAED78();
    v25 = 5;
    sub_1D5AAED60();
    v24 = 6;
    sub_1D5AAED78();
    v23 = 7;
    sub_1D5AAED60();
    v22 = 8;
    sub_1D5AAED3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v13, v5);
}

void sub_1D57B4EA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57B4F48();
    v7 = a3(a1, &type metadata for UserData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57B4F04()
{
  unint64_t result;

  result = qword_1ED9CC498;
  if (!qword_1ED9CC498)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserType, &type metadata for UserType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC498);
  }
  return result;
}

unint64_t sub_1D57B4F48()
{
  unint64_t result;

  result = qword_1ED9CC468;
  if (!qword_1ED9CC468)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0880, &type metadata for UserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC468);
  }
  return result;
}

uint64_t _s13NewsAnalytics24NotificationSettingsDataVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_WORD *)(a1 + 13) = *(_WORD *)(a2 + 13);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *initializeWithCopy for AppData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for JourneyMessageFailureReasonData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D57B5120(_QWORD *a1)
{
  return GroupData.encode(to:)(a1);
}

uint64_t GroupData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD v21[4];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char v39;

  sub_1D57B5744(0, &qword_1ED9CC9C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v21 - v5;
  v7 = *v1;
  LODWORD(v35) = v1[1];
  v8 = *((_QWORD *)v1 + 1);
  v33 = *((_QWORD *)v1 + 2);
  v34 = v8;
  v38 = *((_DWORD *)v1 + 6);
  v32 = *((_DWORD *)v1 + 7);
  v9 = *((_QWORD *)v1 + 4);
  v30 = *((_QWORD *)v1 + 5);
  v31 = v9;
  v10 = *((_QWORD *)v1 + 6);
  v11 = *((_QWORD *)v1 + 7);
  v28 = *((_QWORD *)v1 + 8);
  v29 = v10;
  v26 = *((_QWORD *)v1 + 9);
  v27 = v11;
  v25 = v1[80];
  v12 = *((_QWORD *)v1 + 12);
  v23 = *((_QWORD *)v1 + 11);
  v24 = v12;
  v22 = *((_QWORD *)v1 + 13);
  v21[3] = v1[112];
  v13 = *((_QWORD *)v1 + 15);
  v14 = *((_QWORD *)v1 + 16);
  v15 = a1[3];
  v16 = a1;
  v18 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v15);
  sub_1D57B5858();
  sub_1D5AAEEC8();
  LOBYTE(v37) = v7;
  v39 = 0;
  sub_1D57B58E0();
  v19 = v36;
  sub_1D5AAED6C();
  if (v19)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  v36 = v14;
  LOBYTE(v37) = (_BYTE)v35;
  v39 = 1;
  sub_1D57B5814();
  sub_1D5AAED6C();
  LOBYTE(v37) = 2;
  sub_1D5AAED3C();
  LOBYTE(v37) = 3;
  sub_1D5AAED78();
  LOBYTE(v37) = 4;
  sub_1D5AAED78();
  v37 = v31;
  v39 = 5;
  sub_1D57B5700(0, (unint64_t *)&qword_1ED9CC6B0);
  sub_1D57B5694((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  v35 = v6;
  sub_1D5AAED18();
  v37 = v30;
  v39 = 6;
  sub_1D5AAED18();
  v37 = v29;
  v39 = 7;
  sub_1D5AAED18();
  LOBYTE(v37) = 8;
  sub_1D5AAECF4();
  v37 = v26;
  v39 = 9;
  sub_1D5AAED18();
  LOBYTE(v37) = v25;
  v39 = 10;
  sub_1D57B589C();
  sub_1D5AAED18();
  LOBYTE(v37) = 11;
  sub_1D5AAECF4();
  LOBYTE(v37) = 12;
  sub_1D5AAED0C();
  v37 = v13;
  v39 = 13;
  sub_1D57B5700(0, &qword_1ED9C6EA0);
  sub_1D57B57A0(&qword_1ED9C6EA8, (uint64_t (*)(void))sub_1D57C69E0, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED18();
  v37 = v36;
  v39 = 14;
  sub_1D57B5924();
  sub_1D5AAED18();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v35, v18);
}

uint64_t sub_1D57B5638(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1D57B4558();
    v8 = a2;
    result = MEMORY[0x1D8279680](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D57B5694(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1D57B5700(255, (unint64_t *)&qword_1ED9CC6B0);
    v8 = a2;
    result = MEMORY[0x1D8279680](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D57B5700(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1D5AAE97C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1D57B5744(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57B5858();
    v7 = a3(a1, &type metadata for GroupData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57B57A0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D57B5700(255, &qword_1ED9C6EA0);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D57B5814()
{
  unint64_t result;

  result = qword_1ED9CC550;
  if (!qword_1ED9CC550)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupType, &type metadata for GroupType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC550);
  }
  return result;
}

unint64_t sub_1D57B5858()
{
  unint64_t result;

  result = qword_1ED9CC518;
  if (!qword_1ED9CC518)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0CF0, &type metadata for GroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC518);
  }
  return result;
}

unint64_t sub_1D57B589C()
{
  unint64_t result;

  result = qword_1ED9CA488;
  if (!qword_1ED9CA488)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupFormationReason, &type metadata for GroupFormationReason);
    atomic_store(result, (unint64_t *)&qword_1ED9CA488);
  }
  return result;
}

unint64_t sub_1D57B58E0()
{
  unint64_t result;

  result = qword_1ED9C7BA0;
  if (!qword_1ED9C7BA0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupLocation, &type metadata for GroupLocation);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BA0);
  }
  return result;
}

unint64_t sub_1D57B5924()
{
  unint64_t result;

  result = qword_1ED9CF280;
  if (!qword_1ED9CF280)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AuxiliaryData, &type metadata for AuxiliaryData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF280);
  }
  return result;
}

uint64_t initializeWithCopy for UserData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D57B59BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v20;
  uint64_t v21;

  v4 = sub_1D5AADC8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
  {
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_analyticsDenylistDescriptorsInternal) & 1) == 0)
      goto LABEL_12;
    v8 = objc_msgSend(a1, sel_analyticsDenylistDescriptorsInternal);
  }
  else if (NFSeedBuild())
  {
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_analyticsDenylistDescriptorsSeed) & 1) == 0)
      goto LABEL_12;
    v8 = objc_msgSend(a1, sel_analyticsDenylistDescriptorsSeed);
  }
  else
  {
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_analyticsDenylistDescriptorsPublic) & 1) == 0)
      goto LABEL_12;
    v8 = objc_msgSend(a1, sel_analyticsDenylistDescriptorsPublic);
  }
  v9 = v8;
  if (!v9)
  {
LABEL_12:
    v10 = MEMORY[0x1E0DEE9D8];
    v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v11)
      goto LABEL_11;
    goto LABEL_13;
  }
  v10 = sub_1D5AAE94C();

  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
LABEL_13:
  v20 = a2;
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1D57B5C44(0, v11, 0);
  v12 = v21;
  v13 = v10 + 40;
  do
  {
    swift_bridgeObjectRetain();
    sub_1D5AADC80();
    v21 = v12;
    v15 = *(_QWORD *)(v12 + 16);
    v14 = *(_QWORD *)(v12 + 24);
    if (v15 >= v14 >> 1)
    {
      sub_1D57B5C44(v14 > 1, v15 + 1, 1);
      v12 = v21;
    }
    v13 += 16;
    *(_QWORD *)(v12 + 16) = v15 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v15, v7, v4);
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  a2 = v20;
LABEL_18:
  v16 = sub_1D57B5CAC(v12);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v16;
  v17 = *MEMORY[0x1E0CF82A8];
  v18 = sub_1D5AADC68();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(a2, v17, v18);
}

size_t sub_1D57B5C44(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_1D5AAB1B8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

void sub_1D57B5C60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1D5AAEDB4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1D57B5CAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v2 = sub_1D5AADC8C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_1D57B6020(&qword_1ED9CD9A8, MEMORY[0x1E0CF82F0]);
  result = sub_1D5AAE9A0();
  v15 = result;
  if (v9)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v13(v6, v11, v2);
      sub_1D57B5DCC((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v15;
  }
  return result;
}

uint64_t sub_1D57B5DCC(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1D5AADC8C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_1D57B6020(&qword_1ED9CD9A8, MEMORY[0x1E0CF82F0]);
  swift_bridgeObjectRetain();
  v30 = a2;
  v11 = sub_1D5AAE7B4();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v26 = v2;
    v27 = a1;
    v28 = ~v12;
    v16 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v29 = v16;
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v16 + 16);
    while (1)
    {
      v19 = v14;
      v20 = v18;
      v18(v9, *(_QWORD *)(v14 + 48) + v17 * v13, v6);
      sub_1D57B6020(&qword_1ED9CEAB8, MEMORY[0x1E0CF82F8]);
      v21 = sub_1D5AAE7F0();
      v22 = *(void (**)(char *, uint64_t))(v29 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v13 = (v13 + 1) & v28;
      v14 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v26;
        a1 = v27;
        v7 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v30, v6);
    v20(v27, *(_QWORD *)(*v26 + 48) + v17 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = v30;
    v18(v9, v30, v6);
    v31 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D57B6060((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D57B6020(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1D5AADC8C();
    result = MEMORY[0x1D8279680](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D57B6060(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1D5AADC8C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1D58AA7C4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D58AAB24();
      goto LABEL_12;
    }
    sub_1D58AAD44();
  }
  v12 = *v3;
  sub_1D57B6020(&qword_1ED9CD9A8, MEMORY[0x1E0CF82F0]);
  v13 = sub_1D5AAE7B4();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1D57B6020(&qword_1ED9CEAB8, MEMORY[0x1E0CF82F8]);
      v18 = sub_1D5AAE7F0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1D5AAEE20();
  __break(1u);
  return result;
}

uint64_t sub_1D57B6254(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D57B6298(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1D57B663C(0, &qword_1ED9CC6F8);
  v2 = sub_1D5AAE94C();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

char *sub_1D57B6304(unint64_t a1)
{
  uint64_t v1;

  return sub_1D57B6310(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

char *sub_1D57B6310(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *result;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1D5AAEC04();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    result = sub_1D57C0AFC(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v21 = a2;
    v9 = 0;
    v7 = v22;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1D8278F6C](v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_identifier);
      v13 = sub_1D5AAE820();
      v15 = v14;

      v17 = *(_QWORD *)(v22 + 16);
      v16 = *(_QWORD *)(v22 + 24);
      if (v17 >= v16 >> 1)
        sub_1D57C0AFC((char *)(v16 > 1), v17 + 1, 1);
      ++v9;
      *(_QWORD *)(v22 + 16) = v17 + 1;
      v18 = v22 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
    }
    while (v6 != v9);
    a2 = v21;
  }
  swift_beginAccess();
  v19 = MEMORY[0x1D8279758](a2 + 16);
  if (v19)
  {
    v20 = (void *)v19;
    sub_1D57B64C0(v7, a3 & 1);

  }
  return (char *)swift_bridgeObjectRelease();
}

void sub_1D57B64C0(uint64_t a1, char a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  unsigned __int8 v7;
  uint64_t v8;
  id v9;

  swift_getObjectType();
  v4 = sub_1D5AADBF0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_isDiagnosticSubmissionAllowed);

  }
  else
  {
    v7 = 0;
  }
  sub_1D59C5F8C(0, &qword_1ED9D10B0, &qword_1ED9CE138, 0x1E0CEC758, sub_1D59C5F68);
  sub_1D5AAE304();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = a1;
  *(_BYTE *)(v8 + 32) = v7;
  *(_BYTE *)(v8 + 33) = a2 & 1;
  swift_bridgeObjectRetain();
  swift_retain();
  v9 = (id)sub_1D5AAE25C();
  sub_1D5AAE2A4();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1D57B663C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t FormatContent.Resolved.groupedAuxiliaryData.getter@<X0>(char **a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  unint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  int v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  unint64_t v78;
  int64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int64_t v97;
  unint64_t v98;
  int64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void (*v109)(char *, unint64_t, uint64_t);
  char *v110;
  int v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  char *v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char **v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  int64_t v134;
  char *v135;
  int64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int64_t v145;
  char *v146;
  char *v147;
  int64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char *v155;
  uint64_t v156;
  id *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  id *v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;

  v123 = a1;
  v132 = sub_1D5AAE700();
  v133 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v131 = (char *)&v120 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1D5AAE6E8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (id *)((char *)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v8 = (id *)((char *)&v120 - v7);
  v9 = sub_1D5AAE730();
  v166 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v161 = (char *)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v120 - v12;
  v152 = sub_1D5AAE718();
  v14 = *(_QWORD *)(v152 - 8);
  v15 = MEMORY[0x1E0C80A78](v152);
  v155 = (char *)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v147 = (char *)&v120 - v17;
  sub_1D57B76A8(0, &qword_1ED9CEF18, (void (*)(uint64_t))sub_1D57B75EC);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v19);
  v151 = (uint64_t)&v120 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v146 = (char *)&v120 - v25;
  MEMORY[0x1E0C80A78](v24);
  v144 = (uint64_t)&v120 - v26;
  v142 = sub_1D5AAE604();
  v143 = *(_QWORD *)(v142 - 8);
  v27 = MEMORY[0x1E0C80A78](v142);
  v140 = (char *)&v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v135 = (char *)&v120 - v29;
  v126 = sub_1D5AAE670();
  v30 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v127 = (char *)&v120 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1D5AAE5C8();
  v124 = *(_QWORD *)(result + 16);
  if (!v124)
  {
LABEL_103:
    result = swift_bridgeObjectRelease();
    v35 = (char *)MEMORY[0x1E0DEE9D8];
    goto LABEL_104;
  }
  v150 = v21;
  v33 = 0;
  v34 = result + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  v165 = *MEMORY[0x1E0D5F7C8];
  v35 = (char *)MEMORY[0x1E0DEE9D8];
  v160 = v2;
  v163 = v9;
  v164 = v3;
  v162 = v6;
  v157 = v8;
  v158 = v13;
  v36 = v14;
  v37 = v152;
  v156 = v36;
  v122 = v30;
  v121 = result;
  v120 = v34;
  while (1)
  {
    if (v33 >= *(_QWORD *)(result + 16))
      goto LABEL_113;
    v38 = *(_QWORD *)(v30 + 72);
    v125 = v33;
    (*(void (**)(char *, unint64_t, uint64_t))(v30 + 16))(v127, v34 + v38 * v33, v126);
    result = sub_1D5AAE658();
    v138 = *(_QWORD *)(result + 16);
    if (v138)
      break;
    swift_bridgeObjectRelease();
    v40 = v37;
LABEL_52:
    result = sub_1D5AAE664();
    v129 = *(_QWORD *)(result + 16);
    if (v129)
    {
      v78 = 0;
      v130 = result + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
      v128 = result;
      while (1)
      {
        if (v78 >= *(_QWORD *)(result + 16))
          goto LABEL_111;
        v80 = *(_QWORD *)(v133 + 72);
        v134 = v78;
        (*(void (**)(char *, unint64_t, uint64_t))(v133 + 16))(v131, v130 + v80 * v78, v132);
        result = sub_1D5AAE6F4();
        v139 = *(_QWORD *)(result + 16);
        if (v139)
          break;
LABEL_54:
        swift_bridgeObjectRelease();
        v79 = v134 + 1;
        (*(void (**)(char *, uint64_t))(v133 + 8))(v131, v132);
        v78 = v79;
        result = v128;
        if (v79 == v129)
          goto LABEL_100;
      }
      v81 = 0;
      v138 = result + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
      v137 = result;
LABEL_59:
      if (v81 >= *(_QWORD *)(result + 16))
        goto LABEL_108;
      v141 = v81 + 1;
      (*(void (**)(char *, unint64_t, uint64_t))(v143 + 16))(v140, v138 + *(_QWORD *)(v143 + 72) * v81, v142);
      result = sub_1D5AAE5F8();
      v154 = 0;
      v82 = *(_QWORD *)(result + 64);
      v145 = result + 64;
      v83 = 1 << *(_BYTE *)(result + 32);
      if (v83 < 64)
        v84 = ~(-1 << v83);
      else
        v84 = -1;
      v85 = v84 & v82;
      v148 = (unint64_t)(v83 + 63) >> 6;
      v149 = result;
      v136 = v148 - 1;
      v86 = v156;
      while (!v85)
      {
        v97 = v154 + 1;
        if (__OFADD__(v154, 1))
        {
          __break(1u);
          goto LABEL_103;
        }
        if (v97 < v148)
        {
          v98 = *(_QWORD *)(v145 + 8 * v97);
          if (v98)
            goto LABEL_72;
          v99 = v154 + 2;
          ++v154;
          if (v97 + 1 < v148)
          {
            v98 = *(_QWORD *)(v145 + 8 * v99);
            if (v98)
              goto LABEL_75;
            v154 = v97 + 1;
            if (v97 + 2 < v148)
            {
              v98 = *(_QWORD *)(v145 + 8 * (v97 + 2));
              if (v98)
              {
                v97 += 2;
                goto LABEL_72;
              }
              v99 = v97 + 3;
              v154 = v97 + 2;
              if (v97 + 3 < v148)
              {
                v98 = *(_QWORD *)(v145 + 8 * v99);
                if (!v98)
                {
                  while (1)
                  {
                    v97 = v99 + 1;
                    if (__OFADD__(v99, 1))
                      goto LABEL_110;
                    if (v97 >= v148)
                    {
                      v154 = v136;
                      goto LABEL_86;
                    }
                    v98 = *(_QWORD *)(v145 + 8 * v97);
                    ++v99;
                    if (v98)
                      goto LABEL_72;
                  }
                }
LABEL_75:
                v97 = v99;
LABEL_72:
                v87 = v40;
                v159 = (v98 - 1) & v98;
                v88 = __clz(__rbit64(v98)) + (v97 << 6);
                v154 = v97;
LABEL_68:
                v89 = v150;
                v90 = *(_QWORD *)(v149 + 56);
                v91 = (_QWORD *)(*(_QWORD *)(v149 + 48) + 16 * v88);
                v92 = v91[1];
                *(_QWORD *)v150 = *v91;
                *((_QWORD *)v89 + 1) = v92;
                v93 = v90 + *(_QWORD *)(v86 + 72) * v88;
                sub_1D57B75EC();
                v94 = v86;
                v96 = v95;
                (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(&v89[*(int *)(v95 + 48)], v93, v87);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v89, 0, 1, v96);
                swift_bridgeObjectRetain();
                v6 = v162;
                v13 = v158;
                goto LABEL_87;
              }
            }
          }
        }
LABEL_86:
        v87 = v40;
        sub_1D57B75EC();
        v96 = v100;
        v89 = v150;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v150, 1, 1, v100);
        v159 = 0;
LABEL_87:
        v101 = (uint64_t)v89;
        v102 = v151;
        sub_1D57B7654(v101, v151);
        sub_1D57B75EC();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 48))(v102, 1, v96) == 1)
        {
          swift_release();
          (*(void (**)(char *, uint64_t))(v143 + 8))(v140, v142);
          v81 = v141;
          v40 = v87;
          result = v137;
          if (v141 == v139)
            goto LABEL_54;
          goto LABEL_59;
        }
        swift_bridgeObjectRelease();
        v103 = v102 + *(int *)(v96 + 48);
        v40 = v87;
        (*(void (**)(char *, uint64_t, uint64_t))(v156 + 32))(v155, v103, v87);
        v104 = sub_1D5AAE70C();
        v105 = *(_QWORD *)(v104 + 16);
        if (v105)
        {
          v106 = (*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80);
          v153 = v104;
          v107 = v104 + v106;
          v108 = *(_QWORD *)(v166 + 72);
          v109 = *(void (**)(char *, unint64_t, uint64_t))(v166 + 16);
          v110 = v161;
          v109(v161, v104 + v106, v9);
          while (1)
          {
            sub_1D5AAE724();
            v111 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v6, v2);
            if (v111 == v165)
            {
              (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
              v112 = objc_msgSend(*v6, sel_identifier);
              v113 = sub_1D5AAE820();
              v115 = v114;

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v35 = sub_1D5873168(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
              v117 = *((_QWORD *)v35 + 2);
              v116 = *((_QWORD *)v35 + 3);
              if (v117 >= v116 >> 1)
                v35 = sub_1D5873168((char *)(v116 > 1), v117 + 1, 1, v35);
              *((_QWORD *)v35 + 2) = v117 + 1;
              v118 = &v35[16 * v117];
              *((_QWORD *)v118 + 4) = v113;
              *((_QWORD *)v118 + 5) = v115;
              swift_unknownObjectRelease();
              v110 = v161;
              v9 = v163;
              (*(void (**)(char *, uint64_t))(v166 + 8))(v161, v163);
              v2 = v160;
              v3 = v164;
              v6 = v162;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v166 + 8))(v110, v9);
              (*(void (**)(id *, uint64_t))(v3 + 8))(v6, v2);
            }
            v107 += v108;
            if (!--v105)
              break;
            v109(v110, v107, v9);
          }
          swift_bridgeObjectRelease();
          v8 = v157;
          v13 = v158;
          v40 = v152;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v86 = v156;
        result = (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v155, v40);
        v85 = v159;
      }
      v87 = v40;
      v159 = (v85 - 1) & v85;
      v88 = __clz(__rbit64(v85)) | (v154 << 6);
      goto LABEL_68;
    }
LABEL_100:
    v37 = v40;
    swift_bridgeObjectRelease();
    v119 = v125 + 1;
    v30 = v122;
    (*(void (**)(char *, uint64_t))(v122 + 8))(v127, v126);
    v33 = v119;
    result = v121;
    v34 = v120;
    if (v119 == v124)
    {
      result = swift_bridgeObjectRelease();
LABEL_104:
      if (!*((_QWORD *)v35 + 2))
      {
        result = swift_bridgeObjectRelease();
        v35 = 0;
      }
      *v123 = v35;
      return result;
    }
  }
  v39 = 0;
  v137 = result + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
  v136 = result;
LABEL_7:
  if (v39 >= *(_QWORD *)(result + 16))
    goto LABEL_109;
  v139 = v39 + 1;
  (*(void (**)(char *, unint64_t, uint64_t))(v143 + 16))(v135, v137 + *(_QWORD *)(v143 + 72) * v39, v142);
  result = sub_1D5AAE5F8();
  v153 = 0;
  v41 = *(_QWORD *)(result + 64);
  v141 = result + 64;
  v148 = result;
  v42 = 1 << *(_BYTE *)(result + 32);
  if (v42 < 64)
    v43 = ~(-1 << v42);
  else
    v43 = -1;
  v44 = v43 & v41;
  v145 = (unint64_t)(v42 + 63) >> 6;
  v134 = v145 - 1;
  v45 = v156;
  while (1)
  {
    v47 = v146;
    if (v44)
    {
      v48 = __clz(__rbit64(v44));
      v49 = (v44 - 1) & v44;
      v50 = v48 | (v153 << 6);
      goto LABEL_16;
    }
    v58 = v153 + 1;
    if (__OFADD__(v153, 1))
      break;
    if (v58 < v145)
    {
      v59 = *(_QWORD *)(v141 + 8 * v58);
      if (v59)
        goto LABEL_20;
      v60 = v153 + 2;
      ++v153;
      if (v58 + 1 < v145)
      {
        v59 = *(_QWORD *)(v141 + 8 * v60);
        if (v59)
          goto LABEL_24;
        v153 = v58 + 1;
        if (v58 + 2 < v145)
        {
          v59 = *(_QWORD *)(v141 + 8 * (v58 + 2));
          if (v59)
          {
            v58 += 2;
            goto LABEL_20;
          }
          v60 = v58 + 3;
          v153 = v58 + 2;
          if (v58 + 3 < v145)
          {
            v59 = *(_QWORD *)(v141 + 8 * v60);
            if (v59)
            {
LABEL_24:
              v58 = v60;
LABEL_20:
              v47 = v146;
LABEL_21:
              v49 = (v59 - 1) & v59;
              v50 = __clz(__rbit64(v59)) + (v58 << 6);
              v153 = v58;
LABEL_16:
              v51 = *(_QWORD *)(v148 + 56);
              v52 = (_QWORD *)(*(_QWORD *)(v148 + 48) + 16 * v50);
              v53 = v52[1];
              *(_QWORD *)v47 = *v52;
              *((_QWORD *)v47 + 1) = v53;
              v54 = v51 + *(_QWORD *)(v45 + 72) * v50;
              sub_1D57B75EC();
              v55 = v45;
              v57 = v56;
              (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(&v47[*(int *)(v56 + 48)], v54, v152);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v47, 0, 1, v57);
              swift_bridgeObjectRetain();
              v6 = v162;
              v13 = v158;
              goto LABEL_37;
            }
            v47 = v146;
            while (1)
            {
              v58 = v60 + 1;
              if (__OFADD__(v60, 1))
                goto LABEL_112;
              if (v58 >= v145)
                break;
              v59 = *(_QWORD *)(v141 + 8 * v58);
              ++v60;
              if (v59)
                goto LABEL_21;
            }
            v153 = v134;
          }
        }
      }
    }
    sub_1D57B75EC();
    v57 = v61;
    v47 = v146;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v146, 1, 1, v61);
    v49 = 0;
LABEL_37:
    v62 = (uint64_t)v47;
    v63 = v144;
    sub_1D57B7654(v62, v144);
    sub_1D57B75EC();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v63, 1, v57) == 1)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v143 + 8))(v135, v142);
      v39 = v139;
      v40 = v152;
      result = v136;
      if (v139 != v138)
        goto LABEL_7;
      swift_bridgeObjectRelease();
      goto LABEL_52;
    }
    v154 = v49;
    swift_bridgeObjectRelease();
    v64 = v63 + *(int *)(v57 + 48);
    v46 = v152;
    (*(void (**)(char *, uint64_t, uint64_t))(v156 + 32))(v147, v64, v152);
    v65 = sub_1D5AAE70C();
    v66 = *(_QWORD *)(v65 + 16);
    if (v66)
    {
      v67 = *(unsigned __int8 *)(v166 + 80);
      v149 = v65;
      v68 = v65 + ((v67 + 32) & ~v67);
      v159 = *(_QWORD *)(v166 + 72);
      v69 = *(void (**)(char *, uint64_t, uint64_t))(v166 + 16);
      v69(v13, v68, v9);
      while (1)
      {
        sub_1D5AAE724();
        v70 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v8, v2);
        if (v70 == v165)
        {
          (*(void (**)(id *, uint64_t))(v3 + 96))(v8, v2);
          v71 = objc_msgSend(*v8, sel_identifier);
          v72 = sub_1D5AAE820();
          v74 = v73;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v35 = sub_1D5873168(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
          v76 = *((_QWORD *)v35 + 2);
          v75 = *((_QWORD *)v35 + 3);
          if (v76 >= v75 >> 1)
            v35 = sub_1D5873168((char *)(v75 > 1), v76 + 1, 1, v35);
          *((_QWORD *)v35 + 2) = v76 + 1;
          v77 = &v35[16 * v76];
          *((_QWORD *)v77 + 4) = v72;
          *((_QWORD *)v77 + 5) = v74;
          swift_unknownObjectRelease();
          v13 = v158;
          v9 = v163;
          (*(void (**)(char *, uint64_t))(v166 + 8))(v158, v163);
          v3 = v164;
          v8 = v157;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v166 + 8))(v13, v9);
          (*(void (**)(id *, uint64_t))(v3 + 8))(v8, v2);
        }
        v68 += v159;
        if (!--v66)
          break;
        v69(v13, v68, v9);
      }
      swift_bridgeObjectRelease();
      v6 = v162;
      v46 = v152;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v45 = v156;
    result = (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v147, v46);
    v44 = v154;
  }
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
  return result;
}

void sub_1D57B75EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED9CE4F0)
  {
    sub_1D5AAE718();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED9CE4F0);
  }
}

uint64_t sub_1D57B7654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57B76A8(0, &qword_1ED9CEF18, (void (*)(uint64_t))sub_1D57B75EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D57B76A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1D5AAEACC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t initializeWithCopy for DeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for UserBundleSubscriptionContextData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AppSessionStartEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[8] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[9] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SubscriptionData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  v4 = a2[4];
  a1[3] = a2[3];
  a1[4] = v4;
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  v13 = (_QWORD *)(a1 + v8);
  v14 = (_QWORD *)(a2 + v8);
  *v13 = *v14;
  v15 = v14[2];
  v13[1] = v14[1];
  v13[2] = v15;
  v16 = v14[4];
  v13[3] = v14[3];
  v13[4] = v16;
  v13[5] = v14[5];
  v13[6] = v14[6];
  v67 = a3;
  v68 = a2;
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    *v18 = *v19;
    v18[1] = v20;
    v21 = v19[3];
    v18[2] = v19[2];
    v18[3] = v21;
    v22 = v19[5];
    v18[4] = v19[4];
    v18[5] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v23;
    *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
  }
  v24 = v67[8];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(v68 + v24);
  v27 = v26[1];
  if (v27)
  {
    *v25 = *v26;
    v25[1] = v27;
    v28 = v26[3];
    v25[2] = v26[2];
    v25[3] = v28;
    v29 = v26[5];
    v25[4] = v26[4];
    v25[5] = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v30 = *((_OWORD *)v26 + 1);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v30;
    *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
  }
  v31 = v67[9];
  v32 = a1 + v31;
  v33 = v68 + v31;
  v34 = *(_QWORD *)(v33 + 8);
  if (v34 == 1)
  {
    v35 = *(_OWORD *)(v33 + 48);
    *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
    *(_OWORD *)(v32 + 48) = v35;
    *(_OWORD *)(v32 + 58) = *(_OWORD *)(v33 + 58);
    v36 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_OWORD *)(v32 + 16) = v36;
  }
  else
  {
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *(_QWORD *)(v32 + 8) = v34;
    *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
    v37 = *(_QWORD *)(v33 + 32);
    *(_QWORD *)(v32 + 24) = *(_QWORD *)(v33 + 24);
    *(_QWORD *)(v32 + 32) = v37;
    v38 = *(_QWORD *)(v33 + 48);
    *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
    *(_QWORD *)(v32 + 48) = v38;
    v39 = *(_QWORD *)(v33 + 64);
    *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
    *(_QWORD *)(v32 + 64) = v39;
    *(_BYTE *)(v32 + 72) = *(_BYTE *)(v33 + 72);
    *(_BYTE *)(v32 + 73) = *(_BYTE *)(v33 + 73);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v40 = v67[10];
  v41 = v67[11];
  v42 = a1 + v40;
  v43 = v68 + v40;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_DWORD *)(v42 + 8) = *(_DWORD *)(v43 + 8);
  *(_BYTE *)(v42 + 12) = *(_BYTE *)(v43 + 12);
  *(_WORD *)(v42 + 13) = *(_WORD *)(v43 + 13);
  v44 = (char *)(a1 + v41);
  v45 = (char *)(v68 + v41);
  v46 = *(_QWORD *)(v68 + v41 + 8);
  swift_bridgeObjectRetain();
  if (v46)
  {
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v44[16] = v45[16];
    v66 = *((_QWORD *)v45 + 4);
    *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
    *((_QWORD *)v44 + 4) = v66;
    *((_QWORD *)v44 + 5) = *((_QWORD *)v45 + 5);
    v44[48] = v45[48];
    v47 = *((_QWORD *)v45 + 8);
    *((_QWORD *)v44 + 7) = *((_QWORD *)v45 + 7);
    *((_QWORD *)v44 + 8) = v47;
    v44[72] = v45[72];
    v48 = *((_QWORD *)v45 + 11);
    *((_QWORD *)v44 + 10) = *((_QWORD *)v45 + 10);
    *((_QWORD *)v44 + 11) = v48;
    *((_WORD *)v44 + 48) = *((_WORD *)v45 + 48);
    v49 = *((_QWORD *)v45 + 14);
    *((_QWORD *)v44 + 13) = *((_QWORD *)v45 + 13);
    *((_QWORD *)v44 + 14) = v49;
    v44[120] = v45[120];
    *((_OWORD *)v44 + 8) = *((_OWORD *)v45 + 8);
    *((_QWORD *)v44 + 18) = *((_QWORD *)v45 + 18);
    v44[152] = v45[152];
    *((_QWORD *)v44 + 20) = *((_QWORD *)v45 + 20);
    *((_DWORD *)v44 + 42) = *((_DWORD *)v45 + 42);
    v44[172] = v45[172];
    *(_WORD *)(v44 + 173) = *(_WORD *)(v45 + 173);
    *((_WORD *)v44 + 88) = *((_WORD *)v45 + 88);
    v50 = *((_QWORD *)v45 + 24);
    *((_QWORD *)v44 + 23) = *((_QWORD *)v45 + 23);
    *((_QWORD *)v44 + 24) = v50;
    *((_QWORD *)v44 + 25) = *((_QWORD *)v45 + 25);
    v51 = *((_QWORD *)v45 + 27);
    *((_QWORD *)v44 + 26) = *((_QWORD *)v45 + 26);
    *((_QWORD *)v44 + 27) = v51;
    v52 = *((_QWORD *)v45 + 29);
    *((_QWORD *)v44 + 28) = *((_QWORD *)v45 + 28);
    *((_QWORD *)v44 + 29) = v52;
    v65 = *((_QWORD *)v45 + 31);
    *((_QWORD *)v44 + 30) = *((_QWORD *)v45 + 30);
    *((_QWORD *)v44 + 31) = v65;
    v44[256] = v45[256];
    v53 = *((_QWORD *)v45 + 34);
    *((_QWORD *)v44 + 33) = *((_QWORD *)v45 + 33);
    *((_QWORD *)v44 + 34) = v53;
    v44[288] = v45[288];
    *((_QWORD *)v44 + 35) = *((_QWORD *)v45 + 35);
    v64 = *((_QWORD *)v45 + 38);
    *((_QWORD *)v44 + 37) = *((_QWORD *)v45 + 37);
    *((_QWORD *)v44 + 38) = v64;
    v54 = *((_QWORD *)v45 + 40);
    *((_QWORD *)v44 + 39) = *((_QWORD *)v45 + 39);
    *((_QWORD *)v44 + 40) = v54;
    *((_QWORD *)v44 + 41) = *((_QWORD *)v45 + 41);
    v44[336] = v45[336];
    v55 = *((_QWORD *)v45 + 44);
    *((_QWORD *)v44 + 43) = *((_QWORD *)v45 + 43);
    *((_QWORD *)v44 + 44) = v55;
    v56 = *((_QWORD *)v45 + 46);
    *((_QWORD *)v44 + 45) = *((_QWORD *)v45 + 45);
    *((_QWORD *)v44 + 46) = v56;
    v57 = *((_QWORD *)v45 + 48);
    *((_QWORD *)v44 + 47) = *((_QWORD *)v45 + 47);
    *((_QWORD *)v44 + 48) = v57;
    v44[392] = v45[392];
    v44[393] = v45[393];
    v58 = *((_QWORD *)v45 + 51);
    *((_QWORD *)v44 + 50) = *((_QWORD *)v45 + 50);
    *((_QWORD *)v44 + 51) = v58;
    v59 = *((_QWORD *)v45 + 53);
    *((_QWORD *)v44 + 52) = *((_QWORD *)v45 + 52);
    *((_QWORD *)v44 + 53) = v59;
    v60 = *((_QWORD *)v45 + 54);
    v61 = *((_QWORD *)v45 + 55);
    *((_QWORD *)v44 + 54) = v60;
    *((_QWORD *)v44 + 55) = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v44, v45, 0x1C0uLL);
  }
  v62 = v67[13];
  *(_DWORD *)(a1 + v67[12]) = *(_DWORD *)(v68 + v67[12]);
  *(_QWORD *)(a1 + v62) = *(_QWORD *)(v68 + v62);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for GroupData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for GroupData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D57B800C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1D57BB598(0, &qword_1ED9CD8E0);
  result = sub_1D5AAE064();
  if (v4)
  {
    sub_1D57ADBD0(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1D57A8494(&qword_1ED9CED58, (uint64_t)&unk_1D5AC74F8);
    sub_1D5AAE22C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D57B80E4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  sub_1D57B83F8();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = 0;
  v34 = 0xE000000000000000;
  objc_msgSend(a1, sel_frame);
  v29 = v5;
  v30 = v6;
  v31 = v7;
  v32 = v8;
  type metadata accessor for CGRect(0);
  sub_1D5AAEBEC();
  v9 = v33;
  v10 = v34;
  v23 = v34;
  v24 = v33;
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager);
  sub_1D5AADBF0();
  v29 = v9;
  v30 = v10;
  sub_1D57BD7B0();
  v22 = v11;
  v12 = sub_1D5AADB54();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = swift_allocObject();
  v21 = xmmword_1D5AB0170;
  *(_OWORD *)(v15 + 16) = xmmword_1D5AB0170;
  v16 = *MEMORY[0x1E0CF8168];
  v17 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 104);
  v17(v15 + v14, v16, v12);
  sub_1D57B83B4();
  sub_1D5AADF2C();
  swift_bridgeObjectRelease();
  swift_release();
  v29 = v24;
  v30 = v23;
  v18 = v26;
  sub_1D5AADA40();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = v21;
  v17(v19 + v14, v16, v12);
  sub_1D5AADBB4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v18, v28);
}

uint64_t destroy for StartMethodData()
{
  return swift_bridgeObjectRelease();
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1D57B8370(a1, &qword_1ED9CC798);
}

void sub_1D57B8370(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

unint64_t sub_1D57B83B4()
{
  unint64_t result;

  result = qword_1ED9C7658;
  if (!qword_1ED9C7658)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WindowData, &type metadata for WindowData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7658);
  }
  return result;
}

void sub_1D57B83F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C6FE0)
  {
    sub_1D57B83B4();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C6FE0);
  }
}

uint64_t sub_1D57B8450(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v17 = sub_1D5AADA34();
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D5AADBE4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF81F0];
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D5AADDF4();
  v16 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v18 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B1F4C(0, (unint64_t *)&unk_1ED9CCA00, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D5ABF230;
  sub_1D5AADBCC();
  sub_1D5AADBD8();
  v23 = v9;
  sub_1D57A84D4(&qword_1ED9C72E8, 255, v4, MEMORY[0x1E0CF8200]);
  sub_1D57B1F4C(0, &qword_1ED9CC670, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D57B4280(&qword_1ED9CC678, &qword_1ED9CC670, v4);
  v19 = v6;
  sub_1D5AAEB2C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9CE410);
  result = sub_1D5AAE064();
  if (!v24)
  {
    __break(1u);
    goto LABEL_6;
  }
  v15 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9CD9C0);
  result = sub_1D5AAE064();
  if (!v22)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7FE0];
  sub_1D57B1F4C(0, (unint64_t *)&unk_1ED9CC9E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1D5AB1850;
  sub_1D5AADA28();
  sub_1D5AADA10();
  sub_1D5AADA1C();
  v21 = v12;
  sub_1D57A84D4(&qword_1ED9C6F80, 255, v11, MEMORY[0x1E0CF7FF0]);
  sub_1D57B1F4C(0, &qword_1ED9CC660, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D57B4280(&qword_1ED9CC668, &qword_1ED9CC660, v11);
  sub_1D5AAEB2C();
  sub_1D5AADB78();
  swift_allocObject();
  sub_1D5AADB6C();
  v13 = v18;
  sub_1D5AADDE8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AAD968();
  result = sub_1D5AAE058();
  if (result)
  {
    v14 = sub_1D5AAD92C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    return v14;
  }
LABEL_7:
  __break(1u);
  return result;
}

_QWORD *NotificationReceiptReporter.init(log:contentType:)(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;

  v3 = v2;
  v27 = a2;
  v5 = sub_1D5AADDDC();
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D5AADC20();
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D5AADA34();
  MEMORY[0x1E0C80A78](v9);
  v34 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D5AADBE4();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1D5AADFBC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[5] = (id)NewsCoreUserDefaults();
  v2[3] = a1;
  sub_1D5AAE004();
  swift_allocObject();
  v38 = a1;
  v2[4] = sub_1D5AADFF8();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB2FD8], v12);
  sub_1D5AADFC8();
  v33 = sub_1D5AADBFC();
  sub_1D5AAD9F8();
  v32 = sub_1D5AAD9EC();
  sub_1D5AAD9EC();
  sub_1D5AADD10();
  swift_allocObject();
  v31 = sub_1D5AADD04();
  v39 = MEMORY[0x1E0DEE9D8];
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF81F0];
  sub_1D57A8DE4(&qword_1ED9C72E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF81F0], MEMORY[0x1E0CF8200]);
  v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1D57B1F4C(0, &qword_1ED9CC670, v16, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D57B4280(&qword_1ED9CC678, &qword_1ED9CC670, v16);
  sub_1D5AAEB2C();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7FE0];
  sub_1D57B1F4C(0, (unint64_t *)&unk_1ED9CC9E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1D5AB1850;
  sub_1D5AADA28();
  sub_1D5AADA10();
  sub_1D5AADA1C();
  v39 = v19;
  sub_1D57A8DE4(&qword_1ED9C6F80, v18, MEMORY[0x1E0CF7FF0]);
  sub_1D57B1F4C(0, &qword_1ED9CC660, v18, v17);
  sub_1D57B4280(&qword_1ED9CC668, &qword_1ED9CC660, v18);
  sub_1D5AAEB2C();
  sub_1D5AADB78();
  swift_allocObject();
  sub_1D5AADB6C();
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v35, *MEMORY[0x1E0CF8248], v37);
  sub_1D5AADE30();
  swift_allocObject();
  sub_1D5AADE24();
  v3[2] = sub_1D5AADB90();
  swift_retain();
  v20 = sub_1D57B8DDC();
  if (v20)
  {
    v21 = v20;
    sub_1D5AADDD0();
    sub_1D5AADED8();
    v22 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v23 = sub_1D5AADEC0();
    sub_1D5AADDB8();
    swift_retain();
    v24 = sub_1D5AADDAC();
    MEMORY[0x1D82781A4](v23, v21, v27, v24);
    sub_1D5AADB84();
    swift_retain();
    sub_1D5AADC44();
    swift_release();
    swift_release();
    sub_1D5AADB84();
    sub_1D5AADD7C();
    (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v28, *MEMORY[0x1E0CF8438], v30);
    sub_1D5AADD70();
    sub_1D5AADC44();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();

  return v3;
}

uint64_t sub_1D57B8DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  void *v22;
  id v23;
  char *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t EndpointEnvironment;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  char *v40;

  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9C6F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v35 - v4;
  v6 = sub_1D5AAD668();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v35 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v39 = (char *)&v35 - v15;
  MEMORY[0x1E0C80A78](v14);
  v40 = (char *)&v35 - v16;
  v17 = (id)NewsCoreUserDefaults();
  v18 = (void *)sub_1D5AAE7FC();
  v19 = objc_msgSend(v17, sel_stringForKey_, v18);

  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_7;
  }
  v37 = v13;
  v38 = v10;
  sub_1D5AAE820();

  sub_1D5AAD65C();
  swift_bridgeObjectRelease();
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v20(v5, 1, v6) == 1)
  {
LABEL_7:
    sub_1D57E6C28((uint64_t)v5);
    sub_1D5AAEA24();
    sub_1D5AAE328();

    return 0;
  }
  v21 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v21(v40, v5, v6);
  v22 = (void *)sub_1D5AAE7FC();
  v23 = objc_msgSend(v17, sel_stringForKey_, v22);

  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v3, 1, 1, v6);
    goto LABEL_9;
  }
  v36 = v21;
  sub_1D5AAE820();

  sub_1D5AAD65C();
  swift_bridgeObjectRelease();
  if (v20(v3, 1, v6) == 1)
  {
LABEL_9:
    sub_1D57E6C28((uint64_t)v3);
    sub_1D5AAEA24();
    sub_1D5AAE328();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v40, v6);
    return 0;
  }
  v24 = v39;
  v25 = v3;
  v26 = v36;
  v36(v39, v25, v6);
  EndpointEnvironment = FCDefaultsReadEndpointEnvironment();
  v28 = FCEndpointEnvironment.name.getter(EndpointEnvironment);
  v30 = v29;

  v31 = v37;
  v26(v37, v40, v6);
  v32 = v38;
  v26(v38, v24, v6);
  type metadata accessor for NotificationReceiptReporterEndpoint();
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v28;
  *(_QWORD *)(v33 + 24) = v30;
  v26((char *)(v33+ OBJC_IVAR____TtC13NewsAnalyticsP33_73410A717757B42F2A6F1BC37191285735NotificationReceiptReporterEndpoint_defaultURL), v31, v6);
  v26((char *)(v33+ OBJC_IVAR____TtC13NewsAnalyticsP33_73410A717757B42F2A6F1BC37191285735NotificationReceiptReporterEndpoint_notificationReceiptURL), v32, v6);
  return v33;
}

uint64_t FCEndpointEnvironment.name.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x316F6D6564;
  switch(a1)
  {
    case 1:
      result = 0x69746375646F7270;
      break;
    case 2:
      result = 0x676E6967617473;
      break;
    case 3:
      result = 24945;
      break;
    case 4:
      result = 1953719668;
      break;
    case 5:
      result = 0x3164756F6C6369;
      break;
    case 6:
      result = 0x6C65766564;
      break;
    case 7:
      result = 0x786F62646E6173;
      break;
    case 8:
      return result;
    case 9:
      result = 0x326F6D6564;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t type metadata accessor for NotificationReceiptReporterEndpoint()
{
  uint64_t result;

  result = qword_1ED9D0B20;
  if (!qword_1ED9D0B20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D57B9304@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB5E4(0, &qword_1ED9CC768);
  result = sub_1D5AAE058();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1D57BB598(0, &qword_1ED9CFF98);
    result = sub_1D5AAE064();
    if (v21)
    {
      v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
      MEMORY[0x1E0C80A78](v6);
      v8 = (_QWORD *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      v10 = *v8;
      v11 = type metadata accessor for PrivacySampler();
      v19[3] = v11;
      v19[4] = &off_1E9A4D610;
      v19[0] = v10;
      v12 = type metadata accessor for SportsSyncEventPrivacySampler();
      v13 = (_QWORD *)swift_allocObject();
      v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v11);
      MEMORY[0x1E0C80A78](v14);
      v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      v18 = *v16;
      v13[6] = v11;
      v13[7] = &off_1E9A4D610;
      v13[2] = v5;
      v13[3] = v18;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_1E9A45918;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1D57B94F0(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  id v67;
  char v68;

  v4 = sub_1D5AAE820();
  v6 = v5;
  if (v4 == sub_1D5AAE820() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  v9 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_15:

    v20 = 1;
    goto LABEL_16;
  }
  v10 = sub_1D5AAE820();
  v12 = v11;
  if (v10 == sub_1D5AAE820() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v15 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_18:

    v20 = 2;
    goto LABEL_16;
  }
  v16 = sub_1D5AAE820();
  v18 = v17;
  if (v16 == sub_1D5AAE820() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_20:

    v20 = 3;
    goto LABEL_16;
  }
  v21 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    goto LABEL_20;
  v22 = sub_1D5AAE820();
  v24 = v23;
  if (v22 == sub_1D5AAE820() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
LABEL_25:

    v20 = 4;
    goto LABEL_16;
  }
  v26 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    goto LABEL_25;
  v27 = sub_1D5AAE820();
  v29 = v28;
  if (v27 == sub_1D5AAE820() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:

    v20 = 5;
    goto LABEL_16;
  }
  v31 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
    goto LABEL_30;
  v32 = sub_1D5AAE820();
  v34 = v33;
  if (v32 == sub_1D5AAE820() && v34 == v35)
  {
    swift_bridgeObjectRelease_n();
LABEL_35:

    v20 = 6;
    goto LABEL_16;
  }
  v36 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
    goto LABEL_35;
  v37 = sub_1D5AAE820();
  v39 = v38;
  if (v37 == sub_1D5AAE820() && v39 == v40)
  {
    swift_bridgeObjectRelease_n();
LABEL_40:

    v20 = 7;
    goto LABEL_16;
  }
  v41 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v41 & 1) != 0)
    goto LABEL_40;
  v42 = sub_1D5AAE820();
  v44 = v43;
  if (v42 == sub_1D5AAE820() && v44 == v45)
  {
    swift_bridgeObjectRelease_n();
LABEL_45:

    v20 = 8;
    goto LABEL_16;
  }
  v46 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v46 & 1) != 0)
    goto LABEL_45;
  v47 = sub_1D5AAE820();
  v49 = v48;
  if (v47 == sub_1D5AAE820() && v49 == v50)
  {
    swift_bridgeObjectRelease_n();
LABEL_50:

    v20 = 9;
    goto LABEL_16;
  }
  v51 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v51 & 1) != 0)
    goto LABEL_50;
  v52 = sub_1D5AAE820();
  v54 = v53;
  if (v52 == sub_1D5AAE820() && v54 == v55)
  {
    swift_bridgeObjectRelease_n();
LABEL_55:

    v20 = 10;
    goto LABEL_16;
  }
  v56 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v56 & 1) != 0)
    goto LABEL_55;
  v57 = sub_1D5AAE820();
  v59 = v58;
  if (v57 == sub_1D5AAE820() && v59 == v60)
  {
    swift_bridgeObjectRelease_n();
LABEL_60:

    v20 = 11;
    goto LABEL_16;
  }
  v61 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v61 & 1) != 0)
    goto LABEL_60;
  v62 = sub_1D5AAE820();
  v64 = v63;
  v68 = 12;
  if (v62 != sub_1D5AAE820() || v64 != v65)
  {
    if ((sub_1D5AAEDE4() & 1) != 0)
      v66 = 12;
    else
      v66 = 0;
    v68 = v66;
  }
  v67 = a1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v68;
LABEL_16:
  *a2 = v20;
}

unint64_t sub_1D57B9B24()
{
  unint64_t result;

  result = qword_1ED9CEB08;
  if (!qword_1ED9CEB08)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TextSizeData, &type metadata for TextSizeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB08);
  }
  return result;
}

void sub_1D57B9B68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CEA78)
  {
    sub_1D57B9B24();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CEA78);
  }
}

_QWORD *sub_1D57B9BC0(_QWORD *a1)
{
  _QWORD *result;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B9CCC();
  result = (_QWORD *)sub_1D5AAE058();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B663C(0, &qword_1ED9CC748);
  result = (_QWORD *)sub_1D5AAE058();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B663C(0, (unint64_t *)&unk_1ED9CC750);
  result = (_QWORD *)sub_1D5AAE058();
  if (result)
  {
    v5 = result;
    type metadata accessor for ChannelDataFactory();
    result = (_QWORD *)swift_allocObject();
    result[2] = v3;
    result[3] = v4;
    result[4] = v5;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_1D57B9CCC()
{
  unint64_t result;

  result = qword_1ED9CC780;
  if (!qword_1ED9CC780)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CC780);
  }
  return result;
}

uint64_t type metadata accessor for ChannelDataFactory()
{
  return objc_opt_self();
}

uint64_t sub_1D57B9D40@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  _QWORD v4[3];
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, (unint64_t *)&unk_1EFF4AAA0);
  result = sub_1D5AAE064();
  if (v5)
  {
    __swift_project_boxed_opaque_existential_1(v4, v5);
    *a2 = sub_1D5AAE3F4() & 1;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D57B9DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1D57BA0E0();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B9F40();
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = sub_1D5AADB54();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E0CF8168], v5);
  sub_1D57BA09C();
  sub_1D5AADD1C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1D57B9F40()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t);
  _QWORD v14[5];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = *(id *)(v0 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_client);
  v3 = sub_1D5AADECC();
  v5 = v4;
  v6 = sub_1D5AADEB4();
  v8 = v7;

  sub_1D57BCF08(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_appExtensionCommunicator, (uint64_t)v15);
  v9 = v16;
  if (v16)
  {
    v10 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v14[3] = &type metadata for AppData;
    v14[4] = sub_1D57BA09C();
    v11 = (_QWORD *)swift_allocObject();
    v14[0] = v11;
    v11[2] = v3;
    v11[3] = v5;
    v11[4] = v6;
    v11[5] = v8;
    v12 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v14, v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_1D57BCEB4((uint64_t)v15);
  }
  v15[0] = v3;
  v15[1] = v5;
  v15[2] = v6;
  v16 = v8;
  sub_1D57BA09C();
  return sub_1D5AADA40();
}

unint64_t sub_1D57BA09C()
{
  unint64_t result;

  result = qword_1ED9CC3C8;
  if (!qword_1ED9CC3C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppData, &type metadata for AppData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3C8);
  }
  return result;
}

void sub_1D57BA0E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C6FF8)
  {
    sub_1D57BA09C();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C6FF8);
  }
}

uint64_t sub_1D57BA138(_QWORD *a1)
{
  return UserBundleSubscriptionContextData.encode(to:)(a1);
}

uint64_t UserBundleSubscriptionContextData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  sub_1D57BA3A0(0, &qword_1ED9CC990, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v13 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v18 = *((_QWORD *)v1 + 2);
  v19 = v10;
  LODWORD(v10) = v1[24];
  v16 = v1[25];
  v17 = v10;
  v11 = *((_QWORD *)v1 + 4);
  v14 = *((_QWORD *)v1 + 5);
  v15 = v11;
  v13[1] = v1[48];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BA35C();
  sub_1D5AAEEC8();
  v26 = v9;
  v25 = 0;
  sub_1D57BA3FC();
  sub_1D5AAED6C();
  if (!v2)
  {
    v24 = 1;
    sub_1D5AAECF4();
    v23 = 2;
    sub_1D5AAED48();
    v22 = 3;
    sub_1D5AAED48();
    v21 = 4;
    sub_1D5AAECF4();
    v20 = 5;
    sub_1D5AAED00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D57BA35C()
{
  unint64_t result;

  result = qword_1ED9CBE00;
  if (!qword_1ED9CBE00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC19F8, &type metadata for UserBundleSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CBE00);
  }
  return result;
}

void sub_1D57BA3A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57BA35C();
    v7 = a3(a1, &type metadata for UserBundleSubscriptionContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57BA3FC()
{
  unint64_t result;

  result = qword_1ED9CB240;
  if (!qword_1ED9CB240)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BundleSubscriptionStatus, &type metadata for BundleSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1ED9CB240);
  }
  return result;
}

uint64_t sub_1D57BA440(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  _BYTE *v8;
  char *v9;
  _BYTE v10[24];
  uint64_t v11;
  _BYTE v12[24];
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;
  _BYTE v16[24];
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _BYTE v20[40];
  _BYTE v21[24];
  uint64_t v22;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AADBFC();
  result = sub_1D5AAE058();
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9CEE30);
  result = sub_1D5AAE064();
  if (!v22)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC700);
  result = sub_1D5AAE058();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v4 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AADED8();
  result = sub_1D5AAE058();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v5 = (void *)result;
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, (unint64_t *)&qword_1ED9D0B60);
  result = sub_1D5AAE064();
  if (!v19)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1D57ADBD0(&v18, (uint64_t)v20);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B663C(0, &qword_1ED9D0CB0);
  result = sub_1D5AAE058();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v7 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9D01D8);
  result = sub_1D5AAE064();
  if (!v17)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9D0AD0);
  result = sub_1D5AAE064();
  if (!v15)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9D0A98);
  result = sub_1D5AAE064();
  if (!v13)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9CEF08);
  result = sub_1D5AAE064();
  if (v11)
  {
    v8 = objc_allocWithZone((Class)type metadata accessor for SessionObserver());
    v9 = sub_1D58939E8(v3, (uint64_t)v21, v4, v5, 0, v6, (uint64_t)v20, v7, (uint64_t)v16, (uint64_t)v14, (uint64_t)v12, (uint64_t)v10, v8);
    swift_release();

    return (uint64_t)v9;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1D57BA7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t);
  void (*v12)(_BYTE *, uint64_t, uint64_t);
  void (*v13)(_BYTE *, uint64_t);
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t);
  void (*v18)(_BYTE *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t);
  _BYTE *v26;
  uint64_t v27;
  _BYTE v29[12];
  unsigned int v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t);
  void (*v35)(_BYTE *);
  unsigned int v36;
  void (*v37)(_BYTE *, uint64_t, uint64_t);
  void (*v38)(_BYTE *, uint64_t);
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;

  v1 = v0;
  v2 = sub_1D5AAE310();
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  MEMORY[0x1E0C80A78](v2);
  v31 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = sub_1D5AAE070();
  v4 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1D5AAE250();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D5AAE07C();
  sub_1D5AAD968();
  sub_1D5AAE214();
  swift_release();
  v10 = *MEMORY[0x1E0DB4A18];
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 104);
  v11(v9, v10, v6);
  v12 = v11;
  sub_1D5AAE034();
  swift_release();
  swift_release();
  v13 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v13(v9, v6);
  sub_1D5AAE07C();
  type metadata accessor for AppSessionObserver();
  sub_1D5AAE214();
  swift_release();
  sub_1D5AAE028();
  swift_release();
  v30 = v10;
  v37 = v12;
  v12(v9, v10, v6);
  sub_1D5AAE034();
  swift_release();
  swift_release();
  v13(v9, v6);
  v38 = v13;
  sub_1D5AAE07C();
  sub_1D5AADA70();
  swift_retain();
  v39 = v1;
  sub_1D5AAE214();
  swift_release();
  swift_release();
  v12(v9, v10, v6);
  sub_1D5AAE034();
  swift_release();
  swift_release();
  v13(v9, v6);
  sub_1D5AAE088();
  type metadata accessor for FlushAnalyticsBatchesStartupTask();
  sub_1D5AAE214();
  swift_release();
  swift_release();
  sub_1D5AAE094();
  __swift_project_boxed_opaque_existential_1(v42, v43);
  sub_1D5AAE1FC();
  v36 = *MEMORY[0x1E0DB36E0];
  v35 = *(void (**)(_BYTE *))(v4 + 104);
  v15 = v40;
  v14 = v41;
  v35(v40);
  sub_1D5AAE238();
  v34 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v34(v15, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  sub_1D5AAE07C();
  sub_1D5AAE220();
  swift_release();
  v16 = v30;
  v17 = v37;
  v37(v9, v30, v6);
  sub_1D5AAE034();
  swift_release();
  swift_release();
  v18 = v38;
  v38(v9, v6);
  sub_1D5AAE07C();
  sub_1D57BB598(0, &qword_1ED9CE0C8);
  sub_1D5AAE220();
  swift_release();
  swift_release();
  sub_1D5AAE07C();
  sub_1D57BB598(0, &qword_1ED9CD9C0);
  sub_1D5AAE220();
  swift_release();
  swift_release();
  sub_1D5AAE07C();
  sub_1D57BB598(0, &qword_1ED9CDDB8);
  sub_1D5AAE220();
  swift_release();
  swift_release();
  sub_1D5AAE07C();
  sub_1D57BB598(0, &qword_1ED9CE410);
  sub_1D5AAE220();
  swift_release();
  v17(v9, v16, v6);
  sub_1D5AAE034();
  swift_release();
  swift_release();
  v18(v9, v6);
  sub_1D5AAE07C();
  sub_1D57BB5E4(0, &qword_1ED9C8F38);
  sub_1D5AAE214();
  swift_release();
  v17(v9, v16, v6);
  sub_1D5AAE034();
  swift_release();
  swift_release();
  v18(v9, v6);
  sub_1D5AAE07C();
  type metadata accessor for SessionObserver();
  sub_1D5AAE214();
  swift_release();
  sub_1D5AAE028();
  swift_release();
  v19 = *MEMORY[0x1E0DB4A00];
  v17(v9, v19, v6);
  sub_1D5AAE034();
  swift_release();
  swift_release();
  v18(v9, v6);
  sub_1D5AAE088();
  sub_1D5AADBFC();
  sub_1D5AAE214();
  swift_release();
  sub_1D5AAE028();
  swift_release();
  v30 = v19;
  v17(v9, v19, v6);
  sub_1D5AAE034();
  swift_release();
  swift_release();
  v18(v9, v6);
  sub_1D5AAE07C();
  sub_1D5AADCF8();
  sub_1D5AAE214();
  swift_release();
  v17(v9, v19, v6);
  sub_1D5AAE034();
  swift_release();
  swift_release();
  v18(v9, v6);
  sub_1D5AAE088();
  swift_retain();
  sub_1D5AAE220();
  swift_release();
  swift_release();
  v20 = *MEMORY[0x1E0DB5028];
  v21 = v31;
  v22 = v32;
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v32 + 104);
  v24 = v33;
  v23(v31, v20, v33);
  sub_1D5AAE010();
  swift_release();
  swift_release();
  v25 = *(void (**)(_BYTE *, uint64_t))(v22 + 8);
  v25(v21, v24);
  sub_1D5AAE07C();
  sub_1D5AAE220();
  swift_release();
  v23(v21, v20, v24);
  sub_1D5AAE010();
  swift_release();
  swift_release();
  v25(v21, v24);
  sub_1D5AAE07C();
  sub_1D5AADF68();
  sub_1D5AAE214();
  swift_release();
  v37(v9, v30, v6);
  sub_1D5AAE034();
  swift_release();
  swift_release();
  v38(v9, v6);
  sub_1D5AAE07C();
  sub_1D57BB598(0, (unint64_t *)&unk_1ED9C6CF0);
  sub_1D5AAE220();
  swift_release();
  swift_release();
  sub_1D5AAE088();
  sub_1D5AADD7C();
  sub_1D5AAE214();
  swift_release();
  swift_release();
  sub_1D5AAE088();
  sub_1D5AADDD0();
  swift_retain();
  sub_1D5AAE214();
  swift_release();
  swift_release();
  swift_release();
  sub_1D5AAE07C();
  type metadata accessor for PortraitEventProcessor();
  sub_1D5AAE214();
  swift_release();
  swift_release();
  sub_1D5AAE088();
  type metadata accessor for ExternalAnalyticsEventProcessor();
  sub_1D5AAE214();
  swift_release();
  swift_release();
  sub_1D5AAE088();
  sub_1D57BB598(0, &qword_1ED9C6F78);
  sub_1D5AAE220();
  swift_release();
  swift_release();
  sub_1D5AAE088();
  sub_1D57BB598(0, (unint64_t *)&unk_1ED9C7570);
  sub_1D5AAE220();
  swift_release();
  swift_release();
  sub_1D5AAE088();
  sub_1D5AADED8();
  sub_1D5AAE214();
  swift_release();
  swift_release();
  sub_1D5AAE088();
  sub_1D57BB5E4(0, &qword_1ED9C7008);
  sub_1D5AAE214();
  swift_release();
  swift_release();
  sub_1D5AAE088();
  type metadata accessor for SharedItemEventProcessor();
  sub_1D5AAE214();
  swift_release();
  swift_release();
  sub_1D5AAE094();
  __swift_project_boxed_opaque_existential_1(v42, v43);
  sub_1D57BB598(0, &qword_1ED9CD8E0);
  v26 = v40;
  v27 = v41;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v35)(v40, v36, v41);
  sub_1D5AAE244();
  v34(v26, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  sub_1D5AAE07C();
  sub_1D57BB598(0, &qword_1ED9D0AD8);
  sub_1D5AAE220();
  swift_release();
  swift_release();
  sub_1D5AAE088();
  sub_1D57BB598(0, (unint64_t *)&unk_1ED9D0740);
  sub_1D5AAE220();
  swift_release();
  swift_release();
  sub_1D5AAE088();
  sub_1D57BB598(0, &qword_1ED9CFF98);
  sub_1D5AAE220();
  swift_release();
  return swift_release();
}

uint64_t sub_1D57BB598(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1D57BB5E4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1D57BB634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1D57C0414();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57BB7BC();
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = sub_1D5AADB54();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E0CF8168], v5);
  sub_1D57BBA08();
  sub_1D5AADD1C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t destroy for DeviceData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D57BB7BC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  char v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  _QWORD v27[2];
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = (id)MEMORY[0x1D82792F0]();
  v3 = sub_1D5AAE820();
  v5 = v4;

  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_currentDevice);
  UIDevice.devicePlatform.getter((char *)v27);

  v8 = v27[0];
  if (objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
    v9 = 1;
  else
    v9 = 2;
  v10 = (id)NSSNTPBAnalyticsOsVersionValue();
  v11 = sub_1D5AAE820();
  v13 = v12;

  v14 = objc_msgSend(v6, sel_currentDevice);
  v15 = objc_msgSend(v14, sel_na_buildVersion);

  if (v15)
  {
    v16 = sub_1D5AAE820();
    v18 = v17;

    sub_1D57BCF08(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_appExtensionCommunicator, (uint64_t)v27);
    v19 = v30;
    if (v30)
    {
      v25 = v11;
      v20 = v31;
      __swift_project_boxed_opaque_existential_1(v27, v30);
      v26[3] = &type metadata for DeviceData;
      v26[4] = sub_1D57BBA08();
      v21 = swift_allocObject();
      v26[0] = v21;
      *(_QWORD *)(v21 + 16) = v3;
      *(_QWORD *)(v21 + 24) = v5;
      *(_BYTE *)(v21 + 32) = v8;
      *(_BYTE *)(v21 + 33) = v9;
      *(_QWORD *)(v21 + 40) = v25;
      *(_QWORD *)(v21 + 48) = v13;
      *(_QWORD *)(v21 + 56) = v16;
      *(_QWORD *)(v21 + 64) = v18;
      v24 = v3;
      v22 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = v20;
      v11 = v25;
      v22(v26, v19, v23);
      v3 = v24;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    }
    else
    {
      sub_1D57BCEB4((uint64_t)v27);
    }
    v27[0] = v3;
    v27[1] = v5;
    v28 = v8;
    v29 = v9;
    v30 = v11;
    v31 = v13;
    v32 = v16;
    v33 = v18;
    sub_1D57BBA08();
    sub_1D5AADA40();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1D57BBA08()
{
  unint64_t result;

  result = qword_1ED9C75C8;
  if (!qword_1ED9C75C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DeviceData, &type metadata for DeviceData);
    atomic_store(result, (unint64_t *)&qword_1ED9C75C8);
  }
  return result;
}

uint64_t UIDevice.devicePlatform.getter@<X0>(char *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t result;
  char v9;
  BOOL v10;
  char v12;

  v3 = objc_msgSend(v1, sel_systemName);
  v4 = sub_1D5AAE820();
  v6 = v5;

  v7 = v4 == 5459817 && v6 == 0xE300000000000000;
  if (v7 || (sub_1D5AAEDE4() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v9 = 1;
  }
  else
  {
    v10 = v4 == 0x534F64615069 && v6 == 0xE600000000000000;
    if (v10 || (sub_1D5AAEDE4() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v9 = 2;
    }
    else if (v4 == 0x534F63616DLL && v6 == 0xE500000000000000)
    {
      result = swift_bridgeObjectRelease();
      v9 = 3;
    }
    else
    {
      v12 = sub_1D5AAEDE4();
      result = swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        v9 = 3;
      else
        v9 = 0;
    }
  }
  *a1 = v9;
  return result;
}

void sub_1D57BBBE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  unint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  __int128 v26;
  char *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  sub_1D57BBEEC();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_window;
  swift_beginAccess();
  v7 = (void *)MEMORY[0x1D8279758](v6);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_windowScene);

    if (v9)
    {
      v10 = objc_msgSend(v9, sel_interfaceOrientation);

      v11 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
      v12 = objc_msgSend(v11, sel_orientation);
      v33 = v3;
      v13 = (unint64_t)v12;

      if (v13 >= 7)
        v14 = 0;
      else
        v14 = v13;
      if ((unint64_t)v10 >= 5)
        v15 = 0;
      else
        v15 = 0x304020100uLL >> (8 * v10);
      v29 = v15;
      v30 = v14;
      v32 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager);
      sub_1D5AADBF0();
      v34 = v14;
      v35 = v15;
      sub_1D57BD7B0();
      v28 = v16;
      v17 = sub_1D5AADB54();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(unsigned __int8 *)(v18 + 80);
      v27 = v5;
      v20 = (v19 + 32) & ~v19;
      v21 = swift_allocObject();
      v26 = xmmword_1D5AB0170;
      *(_OWORD *)(v21 + 16) = xmmword_1D5AB0170;
      v22 = *MEMORY[0x1E0CF8168];
      v31 = v2;
      v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104);
      v23(v21 + v20, v22, v17);
      sub_1D57CA528();
      sub_1D5AADF2C();
      swift_bridgeObjectRelease();
      swift_release();
      v34 = v30;
      v35 = v29;
      v24 = v27;
      sub_1D5AADA40();
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = v26;
      v23(v25 + v20, v22, v17);
      sub_1D5AADBB4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v31);
    }
  }
}

void sub_1D57BBEEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C6F88)
  {
    sub_1D57CA528();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C6F88);
  }
}

uint64_t type metadata accessor for SessionObserverURLHandler()
{
  return objc_opt_self();
}

id sub_1D57BBF64()
{
  uint64_t v0;
  void *v1;
  id result;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext);
  result = objc_msgSend(v1, sel_bundleSubscriptionManager);
  if (result)
  {
    v3 = objc_msgSend(result, sel_cachedSubscription);
    swift_unknownObjectRelease();
    _s13NewsAnalytics15SessionObserverC27bundleSubscriptionDidExpireyySo08FCBundleF0CF_0(v3);

    result = objc_msgSend(v1, sel_bundleSubscriptionManager);
    if (result)
    {
      objc_msgSend(result, sel_addObserver_, v0);
      return (id)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s13NewsAnalytics15SessionObserverC27bundleSubscriptionDidExpireyySo08FCBundleF0CF_0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(unint64_t, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36[8];
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;

  sub_1D57C08B8();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  UserBundleSubscriptionContextData.init(bundleSubscription:)(a1, (uint64_t)v36);
  v5 = v36[0];
  v6 = v37;
  v7 = v38;
  v28 = v38;
  v29 = v37;
  v8 = v39;
  v9 = v40;
  v26 = v40;
  v27 = v39;
  v10 = v41;
  v11 = v42;
  v24 = v42;
  v25 = v41;
  LOBYTE(a1) = v43;
  v30 = v36[0];
  v31 = v43;
  v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager);
  sub_1D5AADBF0();
  v36[0] = v5;
  v37 = v6;
  v38 = v7;
  v39 = v8;
  v40 = v9;
  v41 = v10;
  v42 = v11;
  v43 = a1;
  sub_1D57BD7B0();
  v23 = v12;
  v13 = sub_1D5AADB54();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = swift_allocObject();
  v22 = xmmword_1D5AB0170;
  *(_OWORD *)(v16 + 16) = xmmword_1D5AB0170;
  v17 = *MEMORY[0x1E0CF8168];
  v18 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 104);
  v18(v16 + v15, v17, v13);
  sub_1D57BC2E0();
  sub_1D5AADF2C();
  swift_bridgeObjectRelease();
  swift_release();
  v36[0] = v30;
  v37 = v29;
  v38 = v28;
  v39 = v27;
  v40 = v26;
  v41 = v25;
  v42 = v24;
  v43 = v31;
  v19 = v32;
  sub_1D5AADA40();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v22;
  v18(v20 + v15, v17, v13);
  sub_1D5AADBB4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v19, v35);
}

uint64_t destroy for UserBundleSubscriptionContextData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D57BC2E0()
{
  unint64_t result;

  result = qword_1ED9CBE18;
  if (!qword_1ED9CBE18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserBundleSubscriptionContextData, &type metadata for UserBundleSubscriptionContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CBE18);
  }
  return result;
}

void UserBundleSubscriptionContextData.init(bundleSubscription:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  char v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned __int8 v19;

  v4 = objc_msgSend(a1, sel_unprotectedSubscriptionState);
  if ((unint64_t)v4 >= 4)
  {
    sub_1D5AAEBF8();
    __break(1u);
  }
  else
  {
    v5 = (char)v4;
    v6 = objc_msgSend(a1, sel_bundlePurchaseID);
    if (v6)
    {
      v7 = v6;
      v8 = sub_1D5AAE820();
      v10 = v9;

    }
    else
    {
      v8 = 0;
      v10 = 0;
    }
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(a1, sel_isPurchaser);
    v12 = objc_msgSend(a1, sel_isAmplifyUser);
    v13 = objc_msgSend(a1, sel_servicesBundlePurchaseID);
    if (v13)
    {
      v14 = v13;
      v15 = sub_1D5AAE820();
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    v18 = 0x3030201u >> (8 * v5);
    swift_bridgeObjectRetain();
    v19 = objc_msgSend(a1, sel_isPaidBundleViaOfferActivated);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    *(_BYTE *)a2 = v18;
    *(_QWORD *)(a2 + 8) = v8;
    *(_QWORD *)(a2 + 16) = v10;
    *(_BYTE *)(a2 + 24) = v11;
    *(_BYTE *)(a2 + 25) = v12;
    *(_QWORD *)(a2 + 32) = v15;
    *(_QWORD *)(a2 + 40) = v17;
    *(_BYTE *)(a2 + 48) = v19;
  }
}

id sub_1D57BC4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id result;
  void *v9;
  unsigned __int8 v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  char *v31;

  v1 = v0;
  sub_1D57C0910();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext);
  result = objc_msgSend(v7, sel_purchaseController);
  if (result)
  {
    v9 = result;
    v27 = v6;
    v28 = v4;
    v29 = v3;
    v10 = objc_msgSend(result, sel_isPaidSubscriber);

    result = objc_msgSend(v7, sel_purchaseController);
    if (result)
    {
      v11 = result;
      v12 = FCPurchaseController.purchaseSources.getter();
      v25 = v12;

      v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager);
      sub_1D5AADBF0();
      v30 = v10;
      v31 = v12;
      sub_1D57BD7B0();
      v24 = v13;
      v14 = sub_1D5AADB54();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v23 = v16 + *(_QWORD *)(v15 + 72);
      v17 = swift_allocObject();
      v22 = xmmword_1D5AB0170;
      *(_OWORD *)(v17 + 16) = xmmword_1D5AB0170;
      v18 = *MEMORY[0x1E0CF8168];
      v19 = *(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 104);
      v19(v17 + v16, v18, v14);
      sub_1D57BC90C();
      sub_1D5AADF2C();
      swift_bridgeObjectRelease();
      swift_release();
      v30 = v10;
      v31 = v25;
      v20 = v27;
      sub_1D5AADA40();
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v22;
      v19(v21 + v16, v18, v14);
      sub_1D5AADBB4();
      swift_bridgeObjectRelease();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v20, v29);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

char *FCPurchaseController.purchaseSources.getter()
{
  void *v0;
  char *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  if (objc_msgSend(v0, sel_isPaidSubscriberFromWeb))
  {
    v1 = sub_1D5873074(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v3 = *((_QWORD *)v1 + 2);
    v2 = *((_QWORD *)v1 + 3);
    if (v3 >= v2 >> 1)
      v1 = sub_1D5873074((char *)(v2 > 1), v3 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v3 + 1;
    v1[v3 + 32] = 3;
  }
  else
  {
    v1 = (char *)MEMORY[0x1E0DEE9D8];
  }
  if (objc_msgSend(v0, sel_isPaidSubscriberFromNews))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_1D5873074(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
    v5 = *((_QWORD *)v1 + 2);
    v4 = *((_QWORD *)v1 + 3);
    if (v5 >= v4 >> 1)
      v1 = sub_1D5873074((char *)(v4 > 1), v5 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v5 + 1;
    v1[v5 + 32] = 2;
  }
  if (objc_msgSend(v0, sel_isPaidSubscriberFromAppStore))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_1D5873074(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
    v7 = *((_QWORD *)v1 + 2);
    v6 = *((_QWORD *)v1 + 3);
    if (v7 >= v6 >> 1)
      v1 = sub_1D5873074((char *)(v6 > 1), v7 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v7 + 1;
    v1[v7 + 32] = 1;
  }
  return v1;
}

unint64_t sub_1D57BC90C()
{
  unint64_t result;

  result = qword_1ED9CB7E8;
  if (!qword_1ED9CB7E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserSubscriptionContextData, &type metadata for UserSubscriptionContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB7E8);
  }
  return result;
}

Swift::Void __swiftcall SessionObserver.pushNotificationSettingsData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  unsigned __int8 v14;
  id v15;
  unsigned __int8 v16;
  id v17;
  unsigned __int8 v18;
  id v19;
  unsigned int v20;
  id v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t *, uint64_t, uint64_t);
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  void (*v42)(uint64_t);
  unsigned int v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  char v57;
  unsigned __int8 v58;
  unsigned __int8 v59;
  unsigned __int8 v60;
  char v61;
  char v62;
  char v63;
  ValueMetadata *v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  unsigned __int8 v68;
  unsigned __int8 v69;
  unsigned __int8 v70;
  char v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;

  sub_1D57C0968();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v0;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext);
  v7 = objc_msgSend(v6, sel_subscriptionController);
  if (!v7)
  {
    __break(1u);
    goto LABEL_10;
  }
  v8 = v7;
  v50 = v3;
  v51 = v2;
  v9 = objc_msgSend(v7, sel_subscribedTagIDsWithNotificationsEnabled);

  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v52 = sub_1D5AAE94C();

  v10 = (id)NewsCoreUserDefaults();
  v11 = (void *)sub_1D5AAE7FC();
  v55 = objc_msgSend(v10, sel_BOOLForKey_, v11);

  v12 = objc_msgSend(v6, sel_userInfo);
  v53 = objc_msgSend(v12, sel_newIssueNotificationsEnabled);

  v13 = objc_msgSend(v6, sel_userInfo);
  v14 = objc_msgSend(v13, sel_marketingNotificationsEnabled);

  v15 = objc_msgSend(v6, sel_userInfo);
  v16 = objc_msgSend(v15, sel_endOfAudioTrackNotificationsEnabled);

  v17 = objc_msgSend(v6, sel_newsletterManager);
  if (!v17)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v18 = objc_msgSend(v17, sel_isSubscribed);
  swift_unknownObjectRelease();
  v19 = objc_msgSend(v6, sel_newsletterManager);
  if (!v19)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v20 = objc_msgSend(v19, sel_isOptedIntoIssues);
  swift_unknownObjectRelease();
  v21 = objc_msgSend(v6, sel_userInfo);
  v22 = objc_msgSend(v21, sel_puzzleNotificationsEnabled);

  sub_1D57BCF08(v54 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_appExtensionCommunicator, (uint64_t)&v66);
  v23 = v74;
  v49 = v5;
  if (v74)
  {
    v24 = v22;
    v25 = v75;
    __swift_project_boxed_opaque_existential_1(&v66, v74);
    v64 = &type metadata for NotificationSettingsData;
    v65 = sub_1D57BCF64();
    v56 = v52;
    v26 = v53;
    v57 = v53;
    v58 = v14;
    v59 = v16;
    v60 = v18;
    v61 = v20;
    v62 = v55;
    v63 = v24;
    v27 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 8);
    swift_bridgeObjectRetain();
    v28 = v25;
    v22 = v24;
    v27(&v56, v23, v28);
    v29 = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  }
  else
  {
    sub_1D57BCEB4((uint64_t)&v66);
    v26 = v53;
    v29 = v18;
  }
  v43 = v22;
  v54 = *(_QWORD *)(v54 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager);
  sub_1D5AADBF0();
  v30 = v52;
  v66 = v52;
  v67 = v26;
  v68 = v14;
  v69 = v16;
  v70 = v29;
  v48 = v20;
  v71 = v20;
  v72 = v55;
  v73 = v22;
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v47 = v31;
  v32 = sub_1D5AADB54();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(_QWORD *)(v33 + 72);
  v35 = *(unsigned __int8 *)(v33 + 80);
  v36 = (v35 + 32) & ~v35;
  v45 = v35 | 7;
  v46 = v36 + v34;
  v37 = swift_allocObject();
  v44 = xmmword_1D5AB0170;
  *(_OWORD *)(v37 + 16) = xmmword_1D5AB0170;
  v41 = *MEMORY[0x1E0CF8168];
  v42 = *(void (**)(uint64_t))(v33 + 104);
  v42(v37 + v36);
  sub_1D57BCF64();
  sub_1D5AADF2C();
  swift_bridgeObjectRelease();
  swift_release();
  v66 = v30;
  v67 = v53;
  v68 = v14;
  v69 = v16;
  v70 = v29;
  v71 = v48;
  v72 = v55;
  v73 = v43;
  v38 = v49;
  sub_1D5AADA40();
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v44;
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v39 + v36, v41, v32);
  sub_1D5AADBB4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v51);
}

uint64_t destroy for GroupSectionData()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D57BCEB4(uint64_t a1)
{
  uint64_t v2;

  sub_1D57B1F4C(0, (unint64_t *)&unk_1ED9D0B70, (uint64_t (*)(uint64_t))sub_1D57C6950, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57BCF08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57B1F4C(0, (unint64_t *)&unk_1ED9D0B70, (uint64_t (*)(uint64_t))sub_1D57C6950, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D57BCF64()
{
  unint64_t result;

  result = qword_1ED9CB408;
  if (!qword_1ED9CB408)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSettingsData, &type metadata for NotificationSettingsData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB408);
  }
  return result;
}

uint64_t sub_1D57BCFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  NSUserDefaults v11;

  sub_1D57C09C0();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11.super.isa = (Class)(id)NewsCoreUserDefaults();
  ContentEnvironmentType.init(userDefaults:)(v11);
  sub_1D57BD4E0();
  sub_1D5AADA40();
  sub_1D57BD7B0();
  v5 = sub_1D5AADB54();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E0CF8168], v5);
  sub_1D5AADBB4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

NewsAnalytics::ContentEnvironmentType __swiftcall ContentEnvironmentType.init(userDefaults:)(NSUserDefaults userDefaults)
{
  char *v1;
  Class isa;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  NewsAnalytics::ContentEnvironmentType result;
  char v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;

  isa = userDefaults.super.isa;
  v3 = v1;
  v4 = -[objc_class stringForKey:](userDefaults.super.isa, sel_stringForKey_, *MEMORY[0x1E0D583A8], userDefaults._container_);
  if (!v4)
    goto LABEL_8;
  v5 = v4;
  v6 = sub_1D5AAE820();
  v8 = v7;

  if (sub_1D5AAE820() == v6 && v9 == v8)
  {

    result = swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  v11 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:

LABEL_10:
    v13 = 1;
    goto LABEL_11;
  }
  if (sub_1D5AAE820() == v6 && v14 == v8)
  {

    v13 = 2;
    result = swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  v16 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    swift_bridgeObjectRelease();

    v13 = 2;
    goto LABEL_11;
  }
  if (sub_1D5AAE820() == v6 && v17 == v8)
  {

    result = swift_bridgeObjectRelease_n();
    v13 = 3;
    goto LABEL_11;
  }
  v19 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
    swift_bridgeObjectRelease();

    v13 = 3;
    goto LABEL_11;
  }
  if (sub_1D5AAE820() == v6 && v20 == v8)
  {
LABEL_28:

    result = swift_bridgeObjectRelease_n();
    v13 = 4;
    goto LABEL_11;
  }
  v21 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    goto LABEL_30;
  if (sub_1D5AAE820() == v6 && v22 == v8)
    goto LABEL_28;
  v23 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    goto LABEL_30;
  if (sub_1D5AAE820() == v6 && v24 == v8)
    goto LABEL_28;
  v25 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_30;
  if (sub_1D5AAE820() == v6 && v26 == v8)
    goto LABEL_28;
  v27 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
    goto LABEL_30;
  if (sub_1D5AAE820() == v6 && v28 == v8)
    goto LABEL_28;
  v29 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
  {
LABEL_30:
    swift_bridgeObjectRelease();
LABEL_31:

    v13 = 4;
    goto LABEL_11;
  }
  if (sub_1D5AAE820() == v6 && v30 == v8)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_31;
  }
  v31 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v31 & 1) != 0)
    v13 = 4;
  else
    v13 = 0;
LABEL_11:
  *v3 = v13;
  return result;
}

unint64_t sub_1D57BD4E0()
{
  unint64_t result;

  result = qword_1ED9CAE00;
  if (!qword_1ED9CAE00)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ContentEnvironmentData, &type metadata for ContentEnvironmentData);
    atomic_store(result, (unint64_t *)&qword_1ED9CAE00);
  }
  return result;
}

uint64_t sub_1D57BD524(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D57C0A18();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57BDA68(a3);
  sub_1D57BD7B0();
  v9 = sub_1D5AADB54();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x1E0CF8168], v9);
  sub_1D57BDA24();
  sub_1D5AADD1C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D57BD670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1D57BD9CC();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57BD804();
  sub_1D57BD7B0();
  v5 = sub_1D5AADB54();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E0CF8168], v5);
  sub_1D57BD940();
  sub_1D5AADD1C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1D57BD7B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CC9F0)
  {
    sub_1D5AADB54();
    v0 = sub_1D5AAEDB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CC9F0);
  }
}

uint64_t sub_1D57BD804()
{
  uint64_t v1;
  unint64_t v2;

  swift_getObjectType();
  if (qword_1ED9CE528 != -1)
    swift_once();
  sub_1D57BD984();
  sub_1D5AAD7F4();
  if (qword_1ED9CF0C0 != -1)
    swift_once();
  sub_1D5AAD7F4();
  if (v2 > 1)
    sub_1D59E4D10(v1, v2);
  sub_1D57BD940();
  return sub_1D5AADA40();
}

unint64_t sub_1D57BD940()
{
  unint64_t result;

  result = qword_1ED9CF260;
  if (!qword_1ED9CF260)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppBadgeData, &type metadata for AppBadgeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF260);
  }
  return result;
}

unint64_t sub_1D57BD984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED9C6918;
  if (!qword_1ED9C6918)
  {
    v1 = type metadata accessor for SessionObserver();
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SessionObserver, v1);
    atomic_store(result, (unint64_t *)&qword_1ED9C6918);
  }
  return result;
}

void sub_1D57BD9CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CF118)
  {
    sub_1D57BD940();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CF118);
  }
}

unint64_t sub_1D57BDA24()
{
  unint64_t result;

  result = qword_1ED9CD908;
  if (!qword_1ED9CD908)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScienceExperimentData, &type metadata for ScienceExperimentData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD908);
  }
  return result;
}

uint64_t sub_1D57BDA68(void *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;

  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_engagementCohortsExpField) & 1) != 0)
  {
    v2 = objc_msgSend(a1, sel_engagementCohortsExpField);
    if (v2)
    {
      v3 = v2;
      sub_1D5AAE820();

    }
  }
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_conversionCohortsExpField) & 1) != 0)
  {
    v4 = objc_msgSend(a1, sel_conversionCohortsExpField);
    if (v4)
    {
      v5 = v4;
      sub_1D5AAE820();

    }
  }
  sub_1D57BDA24();
  return sub_1D5AADA40();
}

uint64_t sub_1D57BDB94()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t result;
  uint64_t v4;
  char *v5;

  v1 = *(void **)&v0[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext];
  v2 = objc_msgSend(objc_msgSend(v1, sel_configurationManager), sel_configuration);
  result = swift_unknownObjectRelease();
  if (v2)
  {
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v0;
    *(_QWORD *)(v4 + 24) = v2;
    v5 = v0;
    swift_unknownObjectRetain();
    sub_1D5AADB9C();
    swift_unknownObjectRelease();
    swift_release();
    objc_msgSend(objc_msgSend(v1, sel_configurationManager), sel_addObserver_, v5);
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D57BDCA4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext);
  v2 = objc_msgSend(v1, sel_subscriptionController);
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = v2;
  v4 = objc_msgSend(v1, sel_shortcutList);
  sub_1D57BE8B8(v3, v4);

  v5 = objc_msgSend(v1, sel_subscriptionController);
  if (!v5)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v6 = v5;
  sub_1D57BE2DC(v5);

  v7 = objc_msgSend(v1, sel_subscriptionController);
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = v7;
  sub_1D57BDDE4(v7);

  v9 = objc_msgSend(v1, sel_subscriptionController);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_addObserver_, v0);

    v11 = objc_msgSend(v1, sel_shortcutList);
    objc_msgSend(v11, sel_addObserver_, v0);

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1D57BDDE4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;

  sub_1D57ABC2C(0, &qword_1ED9CF110, (void (*)(void))sub_1D57BE028);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x1E0C80A78](v3);
  v19 = (char *)&v16 - v4;
  sub_1D57BE06C(a1, &v23);
  v5 = v23;
  v18 = v23;
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager);
  sub_1D5AADBF0();
  v23 = v5;
  sub_1D57BD7B0();
  v17 = v6;
  v7 = sub_1D5AADB54();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  v16 = xmmword_1D5AB0170;
  *(_OWORD *)(v10 + 16) = xmmword_1D5AB0170;
  v11 = *MEMORY[0x1E0CF8168];
  v12 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 104);
  v12(v10 + v9, v11, v7);
  sub_1D57BE028();
  sub_1D5AADF2C();
  swift_bridgeObjectRelease();
  swift_release();
  v13 = v19;
  v23 = v18;
  sub_1D5AADA40();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v16;
  v12(v14 + v9, v11, v7);
  sub_1D5AADBB4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v22);
}

unint64_t sub_1D57BE028()
{
  unint64_t result;

  result = qword_1ED9D0828;
  if (!qword_1ED9D0828)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribedSportsListData, &type metadata for SubscribedSportsListData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0828);
  }
  return result;
}

uint64_t sub_1D57BE06C@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  void *v24;
  char **v25;
  unint64_t v26;
  uint64_t v27[2];

  v4 = objc_msgSend(a1, sel_cachedSubscribedTags);
  if (v4)
  {
    v5 = v4;
    sub_1D57BF5E0();
    v6 = sub_1D5AAE94C();

    if (!(v6 >> 62))
      goto LABEL_3;
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
    if (!(MEMORY[0x1E0DEE9D8] >> 62))
    {
LABEL_3:
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      v24 = a1;
      v25 = a2;
      if (v7)
        goto LABEL_4;
LABEL_22:
      v10 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_23:

      result = swift_bridgeObjectRelease_n();
      *v25 = v10;
      return result;
    }
  }
  swift_bridgeObjectRetain();
  result = sub_1D5AAEC04();
  v7 = result;
  v24 = a1;
  v25 = a2;
  if (!result)
    goto LABEL_22;
LABEL_4:
  if (v7 >= 1)
  {
    v9 = 0;
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v26 = v6 & 0xC000000000000001;
    do
    {
      if (v26)
      {
        v11 = (void *)MEMORY[0x1D8278F6C](v9, v6);
      }
      else
      {
        v11 = *(void **)(v6 + 8 * v9 + 32);
        swift_unknownObjectRetain();
      }
      v12 = objc_msgSend(v11, sel_asSports);
      if (v12)
      {
        v13 = v12;
        v14 = v6;
        v15 = (void *)swift_unknownObjectRetain();
        static TagData.obfuscated(tag:)(v15, v27);
        swift_unknownObjectRelease();
        v17 = v27[0];
        v16 = v27[1];
        v18 = objc_msgSend(v13, sel_topLevelGroupsTagIdentifiers);
        if (v18)
        {
          v19 = v18;
          v20 = sub_1D5AAE94C();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

        }
        else
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v20 = 0;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1D5873274(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
        v22 = *((_QWORD *)v10 + 2);
        v21 = *((_QWORD *)v10 + 3);
        if (v22 >= v21 >> 1)
          v10 = sub_1D5873274((char *)(v21 > 1), v22 + 1, 1, v10);
        *((_QWORD *)v10 + 2) = v22 + 1;
        v23 = &v10[24 * v22];
        *((_QWORD *)v23 + 4) = v17;
        *((_QWORD *)v23 + 5) = v16;
        *((_QWORD *)v23 + 6) = v20;
        v6 = v14;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v9;
    }
    while (v7 != v9);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D57BE2DC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t, uint64_t);
  char *v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;

  sub_1D57ABC2C(0, &qword_1ED9C6FA8, (void (*)(void))sub_1D57BE524);
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  MEMORY[0x1E0C80A78](v3);
  v18 = (char *)&v15 - v4;
  sub_1D57BE568(a1, (uint64_t)&v24);
  LODWORD(a1) = v24;
  v17 = v24;
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager);
  sub_1D5AADBF0();
  v23 = (int)a1;
  sub_1D57BD7B0();
  v16 = v5;
  v6 = sub_1D5AADB54();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  v15 = xmmword_1D5AB0170;
  *(_OWORD *)(v9 + 16) = xmmword_1D5AB0170;
  v10 = *MEMORY[0x1E0CF8168];
  v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 104);
  v11(v9 + v8, v10, v6);
  sub_1D57BE524();
  sub_1D5AADF2C();
  swift_bridgeObjectRelease();
  swift_release();
  v22 = v17;
  v12 = v18;
  sub_1D5AADA40();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v15;
  v11(v13 + v8, v10, v6);
  sub_1D5AADBB4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v21);
}

unint64_t sub_1D57BE524()
{
  unint64_t result;

  result = qword_1ED9C9910;
  if (!qword_1ED9C9910)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AutoSubscribedData, &type metadata for AutoSubscribedData);
    atomic_store(result, (unint64_t *)&qword_1ED9C9910);
  }
  return result;
}

void sub_1D57BE568(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  uint64_t i;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;

  v4 = objc_msgSend(a1, sel_subscriptions);
  if (!v4)
  {

LABEL_40:
    LODWORD(v33) = 0;
    goto LABEL_41;
  }
  v5 = v4;
  v34 = a1;
  sub_1D57BE87C();
  isUniquelyReferenced_nonNull_native = sub_1D5AAE94C();

  if (isUniquelyReferenced_nonNull_native >> 62)
    goto LABEL_31;
  v7 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = a2; v7; i = a2)
  {
    v8 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    a2 = 4;
    v37 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    v38 = isUniquelyReferenced_nonNull_native;
    v36 = v7;
    while (1)
    {
      v10 = v8
          ? (id)MEMORY[0x1D8278F6C](a2 - 4, isUniquelyReferenced_nonNull_native)
          : *(id *)(isUniquelyReferenced_nonNull_native + 8 * a2);
      v11 = v10;
      v12 = a2 - 3;
      if (__OFADD__(a2 - 4, 1))
        break;
      v13 = objc_msgSend(v10, sel_subscriptionOrigin);
      if (v9[2])
      {
        v14 = (uint64_t)v13;
        v15 = sub_1D5A9E2A8((uint64_t)v13);
        if ((v16 & 1) != 0)
        {
          v17 = *(_QWORD *)(v9[7] + 8 * v15);
          v18 = v17 + 1;
          if (__OFADD__(v17, 1))
            goto LABEL_28;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v20 = sub_1D5A9E2A8(v14);
          v21 = v9[2];
          v22 = (v19 & 1) == 0;
          v23 = v21 + v22;
          if (__OFADD__(v21, v22))
            goto LABEL_29;
          v24 = v19;
          if (v9[3] >= v23)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              if ((v19 & 1) == 0)
                goto LABEL_18;
            }
            else
            {
              sub_1D58E5AC4();
              if ((v24 & 1) == 0)
                goto LABEL_18;
            }
          }
          else
          {
            sub_1D58E5814(v23, isUniquelyReferenced_nonNull_native);
            v25 = sub_1D5A9E2A8(v14);
            if ((v24 & 1) != (v26 & 1))
              goto LABEL_43;
            v20 = v25;
            if ((v24 & 1) == 0)
            {
LABEL_18:
              v9[(v20 >> 6) + 8] |= 1 << v20;
              v27 = 8 * v20;
              *(_QWORD *)(v9[6] + v27) = v14;
              *(_QWORD *)(v9[7] + v27) = v18;
              v28 = v9[2];
              v29 = __OFADD__(v28, 1);
              v30 = v28 + 1;
              if (v29)
                goto LABEL_30;
              v9[2] = v30;
              goto LABEL_23;
            }
          }
          *(_QWORD *)(v9[7] + 8 * v20) = v18;
LABEL_23:

          swift_bridgeObjectRelease();
          v7 = v36;
          v8 = v37;
          isUniquelyReferenced_nonNull_native = v38;
          goto LABEL_6;
        }
      }

LABEL_6:
      ++a2;
      if (v12 == v7)
        goto LABEL_33;
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain_n();
    v7 = sub_1D5AAEC04();
    swift_bridgeObjectRelease();
  }
  v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_33:
  swift_bridgeObjectRelease_n();
  if (!v9[2])
    goto LABEL_38;
  v31 = sub_1D5A9E2A8(3);
  a2 = i;
  if ((v32 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  v33 = *(_QWORD *)(v9[7] + 8 * v31);

  swift_bridgeObjectRelease();
  if (v33 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v33 <= 0x7FFFFFFF)
    {
LABEL_41:
      *(_DWORD *)a2 = v33;
      return;
    }
    __break(1u);
LABEL_38:

    swift_bridgeObjectRelease();
    LODWORD(v33) = 0;
    a2 = i;
    goto LABEL_41;
  }
  __break(1u);
LABEL_43:
  type metadata accessor for FCSubscriptionOrigin(0);
  sub_1D5AAEE2C();
  __break(1u);
}

unint64_t sub_1D57BE87C()
{
  unint64_t result;

  result = qword_1ED9CC708;
  if (!qword_1ED9CC708)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CC708);
  }
  return result;
}

id sub_1D57BE8B8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id result;
  void *v8;
  void *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(unint64_t, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  __int128 v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;

  sub_1D57ABC2C(0, (unint64_t *)&unk_1ED9C6F98, (void (*)(void))sub_1D57BEC00);
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v28 - v6;
  result = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext), sel_purchaseController);
  if (result)
  {
    v8 = result;
    v9 = *(void **)(v2 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_fsidProvider);
    swift_unknownObjectRetain();
    sub_1D57BEC44(a1, a2, v8, v9, (unint64_t)&v43);
    v10 = v43;
    v11 = v44;
    v36 = v44;
    v37 = v43;
    v12 = v45;
    v13 = v46;
    v34 = v46;
    v35 = v45;
    v14 = v47;
    v15 = v48;
    v32 = v48;
    v33 = v47;
    v16 = v49;
    v31 = v49;
    v18 = v50;
    v17 = v51;
    v38 = v50;
    v39 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager);
    sub_1D5AADBF0();
    v43 = v10;
    v44 = v11;
    v45 = v12;
    v46 = v13;
    v47 = v14;
    v48 = v15;
    v49 = v16;
    v50 = v18;
    v51 = v17;
    sub_1D57BD7B0();
    v30 = v19;
    v20 = sub_1D5AADB54();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v29 = v22 + *(_QWORD *)(v21 + 72);
    v23 = swift_allocObject();
    v28 = xmmword_1D5AB0170;
    *(_OWORD *)(v23 + 16) = xmmword_1D5AB0170;
    v24 = *MEMORY[0x1E0CF8168];
    v25 = *(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 104);
    v25(v23 + v22, v24, v20);
    sub_1D57BEC00();
    sub_1D5AADF2C();
    swift_bridgeObjectRelease();
    swift_release();
    v43 = v37;
    v44 = v36;
    v45 = v35;
    v46 = v34;
    v47 = v33;
    v48 = v32;
    v49 = v31;
    v50 = v38;
    v51 = v17;
    v26 = v40;
    sub_1D5AADA40();
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = v28;
    v25(v27 + v22, v24, v20);
    sub_1D5AADBB4();
    swift_bridgeObjectRelease();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v26, v42);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t destroy for SubscriptionData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D57BEC00()
{
  unint64_t result;

  result = qword_1ED9C8F70;
  if (!qword_1ED9C8F70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionData, &type metadata for SubscriptionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8F70);
  }
  return result;
}

id sub_1D57BEC44@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, unint64_t a5@<X8>)
{
  void (**v8)(char **, unint64_t);
  uint64_t v9;
  char **p_name;
  id v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  id result;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  char **v23;
  id v24;
  void *v25;
  id v26;
  unsigned __int8 v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL4 v35;
  uint64_t v36;
  char *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  void *v46;
  int v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  _QWORD *v56;
  id v57;
  void *v58;
  uint64_t v59;
  _QWORD *v60;
  _DWORD *v61;
  id v62;
  _DWORD *v63;
  void *v64;
  void (**v65)(char **, unint64_t);
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  id v74;
  char v75[32];
  _OWORD v76[2];
  __int128 v77;
  uint64_t v78;

  v66 = a4;
  v67 = a2;
  v71 = sub_1D5AAD614();
  v8 = *(void (***)(char **, unint64_t))(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  p_name = (char **)((char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v72 = a1;
  v11 = objc_msgSend(a1, sel_cachedSubscribedTags);
  if (v11)
  {
    v12 = v11;
    sub_1D57BF5E0();
    v13 = sub_1D5AAE94C();

  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  v64 = a3;
  if (v13 >> 62)
    goto LABEL_80;
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain();
LABEL_6:
  v63 = (_DWORD *)a5;
  v65 = v8;
  if (v14)
  {
    if (v14 >= 1)
    {
      v16 = 0;
      v73 = 0;
      v17 = 0;
      a5 = v13 & 0xC000000000000001;
      while (1)
      {
        if (a5)
        {
          v19 = (void *)MEMORY[0x1D8278F6C](v16, v13);
        }
        else
        {
          v19 = *(void **)(v13 + 8 * v16 + 32);
          swift_unknownObjectRetain();
        }
        v8 = (void (**)(char **, unint64_t))objc_msgSend(v19, sel_asChannel);
        swift_unknownObjectRelease();
        if (v8)
        {
          swift_unknownObjectRelease();
          v18 = __OFADD__(v17++, 1);
          if (v18)
          {
            __break(1u);
LABEL_78:
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            swift_bridgeObjectRetain();
            result = (id)sub_1D5AAEC04();
            v14 = (uint64_t)result;
            goto LABEL_6;
          }
        }
        else
        {
          v20 = objc_msgSend(v19, sel_asTopic);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          if (v20)
          {
            v18 = __OFADD__(v73++, 1);
            if (v18)
            {
              __break(1u);
              goto LABEL_19;
            }
          }
        }
        if (v14 == ++v16)
          goto LABEL_20;
      }
    }
    goto LABEL_87;
  }
LABEL_19:
  v73 = 0;
  v17 = 0;
LABEL_20:
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v67, sel_orderedShortcuts);
  sub_1D5AAE9F4();
  v62 = v21;

  sub_1D57C0A70();
  a5 = v71;
  sub_1D5AAEAD8();
  if (v78)
  {
    v68 = 0;
    v70 = 0;
    v8 = (void (**)(char **, unint64_t))(MEMORY[0x1E0DEE9B8] + 8);
    v69 = v14;
    while (1)
    {
      sub_1D5845180(&v77, v76);
      sub_1D57E6B64((uint64_t)v76, (uint64_t)v75);
      sub_1D58C73A8();
      if (swift_dynamicCast())
      {
        v22 = v74;
        if (objc_msgSend(v74, sel_shortcutType))
        {

        }
        else
        {
          v23 = p_name;
          p_name = &MediaEngageCompletedEventQueryItemsGenerator.name;
          v24 = objc_msgSend(v22, sel_identifier);
          sub_1D5AAE820();

          v25 = (void *)sub_1D5AAE7FC();
          swift_bridgeObjectRelease();
          v26 = objc_msgSend(v72, sel_subscribedTagForTagID_, v25);

          if (v26)
          {
            v27 = objc_msgSend(v26, sel_isSports);
            swift_unknownObjectRelease();

            if ((v27 & 1) != 0)
            {
              a5 = v71;
              if (__OFADD__(v70, 1))
                goto LABEL_78;
              ++v70;
            }
            else
            {
              v18 = __OFADD__(v68++, 1);
              a5 = v71;
              if (v18)
                goto LABEL_79;
            }
          }
          else
          {

            a5 = v71;
          }
          p_name = v23;
          v14 = v69;
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
      sub_1D5AAEAD8();
      if (!v78)
        goto LABEL_34;
    }
  }
  v70 = 0;
  v68 = 0;
LABEL_34:
  v65[1](p_name, a5);

  v28 = objc_msgSend(v72, sel_mutedTagIDs);
  if (v28)
  {
    v29 = v28;
    v71 = sub_1D5AAE94C();

  }
  else
  {
    v71 = MEMORY[0x1E0DEE9D8];
  }
  result = objc_msgSend(v66, sel_feldsparID);
  if (result)
  {
    v30 = result;
    v31 = sub_1D5AAE820();
    v33 = v32;

    *(_QWORD *)&v77 = v31;
    *((_QWORD *)&v77 + 1) = v33;
    sub_1D57BF634();
    v34 = sub_1D5AAEB08();
    result = (id)swift_bridgeObjectRelease();
    if (v34 < 0)
    {
      v18 = __OFSUB__(0, v34);
      v34 = -v34;
      if (v18)
        goto LABEL_89;
    }
    v35 = v34 % 100 < 94;
    if (v14)
      goto LABEL_41;
LABEL_56:
    LODWORD(v65) = v35;
    v37 = (char *)MEMORY[0x1E0DEE9D8];
    goto LABEL_57;
  }
  v35 = 0;
  if (!v14)
    goto LABEL_56;
LABEL_41:
  if (v14 < 1)
  {
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  LODWORD(v65) = v35;
  swift_bridgeObjectRetain();
  v36 = 0;
  v37 = (char *)MEMORY[0x1E0DEE9D8];
  do
  {
    if ((v13 & 0xC000000000000001) != 0)
    {
      v38 = (void *)MEMORY[0x1D8278F6C](v36, v13);
    }
    else
    {
      v38 = *(void **)(v13 + 8 * v36 + 32);
      swift_unknownObjectRetain();
    }
    if (objc_msgSend(v38, sel_isSports))
    {
      swift_unknownObjectRelease();
    }
    else
    {
      v39 = objc_msgSend(v38, sel_identifier);
      v40 = sub_1D5AAE820();
      v42 = v41;
      swift_unknownObjectRelease();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v37 = sub_1D5873168(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
      v44 = *((_QWORD *)v37 + 2);
      v43 = *((_QWORD *)v37 + 3);
      if (v44 >= v43 >> 1)
        v37 = sub_1D5873168((char *)(v43 > 1), v44 + 1, 1, v37);
      *((_QWORD *)v37 + 2) = v44 + 1;
      v45 = &v37[16 * v44];
      *((_QWORD *)v45 + 4) = v40;
      *((_QWORD *)v45 + 5) = v42;
    }
    ++v36;
  }
  while (v14 != v36);
  swift_bridgeObjectRelease();
LABEL_57:
  result = (id)swift_bridgeObjectRelease();
  v46 = v64;
  v47 = v73;
  v48 = v68;
  if (v17 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if (v73 < (uint64_t)0xFFFFFFFF80000000 || v17 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_82;
  if (v73 > 0x7FFFFFFF)
  {
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  swift_bridgeObjectRetain();
  result = objc_msgSend(v72, sel_portraitExcludedAutoFavoriteTagIDs);
  if (!result)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v49 = result;
  v50 = sub_1D5AAE94C();

  if ((v65 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v51 = v71;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v51 = 0;
  }
  v52 = v51;
  swift_bridgeObjectRetain();
  result = (id)swift_bridgeObjectRelease();
  if (v48 > 0x7FFFFFFF)
    goto LABEL_84;
  if (v70 < (uint64_t)0xFFFFFFFF80000000 || v48 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_85;
  if (v70 > 0x7FFFFFFF)
  {
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  v53 = objc_msgSend(v46, sel_allPurchasedTagIDs);
  if (v53)
  {

    result = objc_msgSend(v46, sel_allPurchasedTagIDs);
    if (!result)
    {
LABEL_91:
      __break(1u);
      return result;
    }
    v54 = result;
    v55 = sub_1D5AAE994();

    v56 = sub_1D57BF500(v55);
    swift_bridgeObjectRelease();
  }
  else
  {
    v56 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v57 = objc_msgSend(v46, sel_webAccessOptedInTagIDs);
  if (v57)
  {
    v58 = v57;
    v59 = sub_1D5AAE994();

    v60 = sub_1D57BF500(v59);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease();
    v60 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  result = (id)swift_bridgeObjectRelease_n();
  v61 = v63;
  *v63 = v17;
  v61[1] = v47;
  *((_QWORD *)v61 + 1) = v37;
  *((_QWORD *)v61 + 2) = v50;
  *((_QWORD *)v61 + 3) = v56;
  *((_QWORD *)v61 + 4) = v60;
  *((_QWORD *)v61 + 5) = v52;
  v61[12] = v70;
  v61[13] = v48;
  return result;
}

_QWORD *sub_1D57BF500(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1D58C75E8();
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1D58C73E4((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1D58C75E0();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

unint64_t sub_1D57BF5E0()
{
  unint64_t result;

  result = qword_1ED9CC710;
  if (!qword_1ED9CC710)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CC710);
  }
  return result;
}

unint64_t sub_1D57BF634()
{
  unint64_t result;

  result = qword_1ED9C6E98;
  if (!qword_1ED9C6E98)
  {
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED9C6E98);
  }
  return result;
}

void sub_1D57BF678()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  unsigned int v4;
  id v5;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_addObserver_selector_name_object_, v0, sel_contentSizeCategoryDidChange, *MEMORY[0x1E0DC48E8], 0);

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_isDiagnosticSubmissionAllowed);

    if (v4)
    {
      *(_QWORD *)(swift_allocObject() + 16) = v0;
      v5 = v0;
      sub_1D5AAE31C();
      swift_release();
    }
  }
}

uint64_t sub_1D57BF76C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t result;
  __int128 v5;
  __int128 v6;

  switch(a2)
  {
    case 0:
    case 3:
      return result;
    case 1:
      type metadata accessor for AppSessionStartEvent(0);
      sub_1D57A8DE4((unint64_t *)&qword_1ED9CA3C0, type metadata accessor for AppSessionStartEvent, (uint64_t)&protocol conformance descriptor for AppSessionStartEvent);
      v5 = 0u;
      v6 = 0u;
      sub_1D5AADB0C();
      sub_1D57C5484((uint64_t)&v5);
      type metadata accessor for AppSessionEndEvent(0);
      sub_1D57A8DE4(&qword_1ED9C96B0, type metadata accessor for AppSessionEndEvent, (uint64_t)&protocol conformance descriptor for AppSessionEndEvent);
      sub_1D5AADB00();
      __swift_project_boxed_opaque_existential_1(a3, a3[3]);
      result = sub_1D5AAE514();
      if ((result & 1) != 0)
      {
        type metadata accessor for OfflineModeStartEvent(0);
        sub_1D57A8DE4(&qword_1EFF4DCB8, type metadata accessor for OfflineModeStartEvent, (uint64_t)&protocol conformance descriptor for OfflineModeStartEvent);
        v5 = 0u;
        v6 = 0u;
        sub_1D5AADB0C();
        sub_1D57C5484((uint64_t)&v5);
        type metadata accessor for OfflineModeEndEvent(0);
        sub_1D57A8DE4((unint64_t *)&unk_1EFF4DCA8, type metadata accessor for OfflineModeEndEvent, (uint64_t)&protocol conformance descriptor for OfflineModeEndEvent);
        result = sub_1D5AADB00();
      }
      break;
    case 2:
      __swift_project_boxed_opaque_existential_1(a3, a3[3]);
      if ((sub_1D5AAE514() & 1) != 0)
      {
        type metadata accessor for OfflineModeEndEvent(0);
        sub_1D57A8DE4((unint64_t *)&unk_1EFF4DCA8, type metadata accessor for OfflineModeEndEvent, (uint64_t)&protocol conformance descriptor for OfflineModeEndEvent);
        v5 = 0u;
        v6 = 0u;
        sub_1D5AADB0C();
        sub_1D57C5484((uint64_t)&v5);
      }
      type metadata accessor for AppSessionEndEvent(0);
      sub_1D57A8DE4(&qword_1ED9C96B0, type metadata accessor for AppSessionEndEvent, (uint64_t)&protocol conformance descriptor for AppSessionEndEvent);
      v5 = 0u;
      v6 = 0u;
      sub_1D5AADB0C();
      result = sub_1D57C5484((uint64_t)&v5);
      break;
    default:
      result = sub_1D5AAEBF8();
      __break(1u);
      break;
  }
  return result;
}

void sub_1D57BFA4C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  _BYTE v8[40];

  v1 = *(void **)&v0[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext];
  v2 = objc_msgSend(v1, sel_userInfo);
  sub_1D5AADBF0();
  *(_QWORD *)(swift_allocObject() + 16) = v2;
  v3 = v2;
  sub_1D5AADF14();
  swift_release();
  swift_release();
  sub_1D57BCF08((uint64_t)&v0[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_appExtensionCommunicator], (uint64_t)v8);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v0;
  sub_1D57BFBB0((uint64_t)v8, v4 + 32);
  v5 = v3;
  v6 = v0;
  sub_1D5AADB9C();

  swift_release();
  v7 = objc_msgSend(v1, sel_userInfo);
  objc_msgSend(v7, sel_addObserver_, v6);

}

uint64_t sub_1D57BFBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57C02F0(0, (unint64_t *)&unk_1ED9D0B70, (unint64_t *)&qword_1ED9D0B60, (uint64_t)&protocol descriptor for AppExtensionSessionDataCommunicatorType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1D57BFC14(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id result;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  void *v32;
  id v33;
  void *v34;
  unsigned int v35;
  id v36;
  void *v37;
  unsigned int v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  void (*v51)(_QWORD *, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  _QWORD v74[5];
  _QWORD v75[2];
  char v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;

  sub_1D57C0860();
  v68 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v67 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B1F4C(0, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v60 - v12;
  v73 = sub_1D5AAD710();
  v14 = *(_QWORD *)(v73 - 8);
  v15 = MEMORY[0x1E0C80A78](v73);
  v72 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v60 - v18;
  MEMORY[0x1E0C80A78](v17);
  v71 = (char *)&v60 - v20;
  result = objc_msgSend(a2, sel_feldsparID);
  if (!result)
    return result;
  v22 = result;
  v66 = a1;
  v70 = sub_1D5AAE820();
  v64 = v23;

  v24 = objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_onboardingVersion), sel_integerValue);
  v25 = objc_msgSend(a2, sel_userStartDate);
  v65 = a4;
  if (v25)
  {
    v26 = v25;
    sub_1D5AAD6F8();

    v27 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v28 = v73;
    v27(v13, v19, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v13, 0, 1, v28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v28) != 1)
    {
      v27(v71, v13, v73);
      goto LABEL_7;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v13, 1, 1, v73);
  }
  sub_1D5AAD704();
  sub_1D57C03D0((uint64_t)v13, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
LABEL_7:
  sub_1D5AAD6BC();
  sub_1D5AAD6B0();
  v69 = objc_msgSend(a2, sel_isUsingPlaceholderFSID);
  if ((uint64_t)v24 <= 0)
    LODWORD(v29) = 1;
  else
    LODWORD(v29) = 2;
  result = (id)sub_1D5AAD6EC();
  v31 = v30 * 1000.0;
  if ((~COERCE__INT64(v30 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v31 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    return result;
  }
  v32 = (void *)objc_opt_self();
  v33 = objc_msgSend(v32, sel_ageGroup);
  if (v33)
  {
    v34 = v33;
    v35 = objc_msgSend(v33, sel_intValue);

  }
  else
  {
    v35 = 0;
  }
  v36 = objc_msgSend(v32, sel_gender);
  if (v36)
  {
    v37 = v36;
    v38 = objc_msgSend(v36, sel_intValue);

  }
  else
  {
    v38 = 0;
  }
  v63 = v9;
  v39 = objc_msgSend((id)objc_opt_self(), sel_sharedAccount);
  v40 = objc_msgSend(v39, sel_contentStoreFrontID);

  v61 = v38;
  v41 = sub_1D5AAE820();
  v43 = v42;
  if (v40)

  v44 = v70;
  v45 = v41;
  v62 = v14;
  sub_1D57BCF08(v65, (uint64_t)v75);
  v46 = v78;
  if (v78)
  {
    LODWORD(v65) = v29;
    v29 = v79;
    v60 = __swift_project_boxed_opaque_existential_1(v75, v78);
    v74[3] = &type metadata for UserData;
    v74[4] = sub_1D57C0350();
    v47 = swift_allocObject();
    v74[0] = v47;
    v48 = v64;
    *(_QWORD *)(v47 + 16) = v44;
    *(_QWORD *)(v47 + 24) = v48;
    *(_BYTE *)(v47 + 32) = v69;
    *(_BYTE *)(v47 + 33) = v65;
    *(_QWORD *)(v47 + 40) = (uint64_t)v31;
    *(_DWORD *)(v47 + 48) = v35;
    *(_DWORD *)(v47 + 52) = 1065353216;
    v49 = v61;
    *(_DWORD *)(v47 + 56) = v61;
    *(_DWORD *)(v47 + 60) = 1065353216;
    v50 = v45;
    *(_QWORD *)(v47 + 64) = v45;
    *(_QWORD *)(v47 + 72) = v43;
    v51 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v29 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v52 = v29;
    LOBYTE(v29) = v65;
    v51(v74, v46, v52);
    v44 = v70;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  }
  else
  {
    sub_1D57C03D0((uint64_t)v75, (unint64_t *)&unk_1ED9D0B70, (uint64_t (*)(uint64_t))sub_1D57C6950);
    v48 = v64;
    v49 = v61;
    v50 = v45;
  }
  v75[0] = v44;
  v75[1] = v48;
  v76 = v69;
  v77 = v29;
  v78 = (uint64_t)v31;
  v79 = v35 | 0x3F80000000000000;
  v80 = v49;
  v81 = 1065353216;
  v82 = v50;
  v83 = v43;
  sub_1D57C0350();
  v53 = v67;
  sub_1D5AADA40();
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v54 = sub_1D5AADB54();
  v55 = *(_QWORD *)(v54 - 8);
  v56 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v55 + 104))(v57 + v56, *MEMORY[0x1E0CF8168], v54);
  sub_1D5AADD1C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v53, v68);
  v58 = *(void (**)(char *, uint64_t))(v62 + 8);
  v59 = v73;
  v58(v72, v73);
  return (id)((uint64_t (*)(char *, uint64_t))v58)(v71, v59);
}

uint64_t destroy for UserData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D57C02F0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1D57E6B18(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1D57C0350()
{
  unint64_t result;

  result = qword_1ED9CC480;
  if (!qword_1ED9CC480)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserData, &type metadata for UserData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC480);
  }
  return result;
}

uint64_t sub_1D57C0394(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1D57B76A8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1D57C03D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1D57B1F4C(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1D57C0414()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C6FD8)
  {
    sub_1D57BBA08();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C6FD8);
  }
}

uint64_t sub_1D57C046C(uint64_t a1)
{
  uint64_t v2;

  sub_1D57B1F4C(0, &qword_1ED9C67D0, (uint64_t (*)(uint64_t))sub_1D57C0654, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57C04C0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v12)(char *, char *, uint64_t);
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57B1F4C(0, &qword_1ED9C67D0, (uint64_t (*)(uint64_t))sub_1D57C0654, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v15 - v1;
  sub_1D57C0654();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - v9;
  sub_1D57C06AC((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    return sub_1D57C046C((uint64_t)v2);
  v12 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v12(v10, v2, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = swift_allocObject();
  v12((char *)(v14 + v13), v8, v4);
  sub_1D5AADB9C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

void sub_1D57C0654()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C67C8)
  {
    sub_1D57C6204();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C67C8);
  }
}

uint64_t sub_1D57C06AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[2];

  swift_getObjectType();
  v2 = sub_1D5AAD50C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9CCCD8 != -1)
    swift_once();
  sub_1D57BD984();
  sub_1D5AAD7F4();
  sub_1D5AAD500();
  sub_1D57BF634();
  v6 = sub_1D5AAEAF0();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    v13[0] = v6;
    v13[1] = v8;
    sub_1D57C6204();
    sub_1D5AADA40();
    sub_1D57C0654();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
  else
  {
    sub_1D57C0654();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
    return swift_bridgeObjectRelease();
  }
}

void sub_1D57C0860()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C6FD0)
  {
    sub_1D57C0350();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C6FD0);
  }
}

void sub_1D57C08B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C6FC0)
  {
    sub_1D57BC2E0();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C6FC0);
  }
}

void sub_1D57C0910()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C6FB8)
  {
    sub_1D57BC90C();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C6FB8);
  }
}

void sub_1D57C0968()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CCCE0)
  {
    sub_1D57BCF64();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CCCE0);
  }
}

void sub_1D57C09C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C6FB0)
  {
    sub_1D57BD4E0();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C6FB0);
  }
}

void sub_1D57C0A18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CD970)
  {
    sub_1D57BDA24();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CD970);
  }
}

unint64_t sub_1D57C0A70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED9CF050;
  if (!qword_1ED9CF050)
  {
    v1 = sub_1D5AAD614();
    result = MEMORY[0x1D8279680](MEMORY[0x1E0CAFB80], v1);
    atomic_store(result, (unint64_t *)&qword_1ED9CF050);
  }
  return result;
}

unint64_t sub_1D57C0AB8()
{
  unint64_t result;

  result = qword_1ED9CFF78;
  if (!qword_1ED9CFF78)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FormatSubgroupData, &type metadata for FormatSubgroupData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFF78);
  }
  return result;
}

char *sub_1D57C0AFC(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1D57C0B18(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1D57C0B18(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57C0C24(0, (unint64_t *)&qword_1ED9CCA20);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void sub_1D57C0C24(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1D5AAEDB4();
    if (!v4)
      atomic_store(v3, a2);
  }
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *__swift_memcpy15_8(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)((char *)result + 7) = *(uint64_t *)((char *)a2 + 7);
  *result = v2;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t destroy for FormatSubgroupData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatSubgroupData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D57C0ED0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D57C0EF4()
{
  unsigned __int8 *v0;

  return sub_1D57C0EFC(*v0);
}

uint64_t sub_1D57C0EFC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C0F3C + 4 * byte_1D5AE0B38[a1]))(0x636F4C70756F7267, 0xED00006E6F697461);
}

uint64_t sub_1D57C0F3C()
{
  return 0x70795470756F7267;
}

uint64_t sub_1D57C0F58()
{
  return 0x444970756F7267;
}

uint64_t sub_1D57C0F70()
{
  return 0x756F4370756F7267;
}

uint64_t sub_1D57C0F8C()
{
  return 0x736F5070756F7267;
}

unint64_t sub_1D57C0FA4()
{
  return 0xD000000000000011;
}

unint64_t sub_1D57C107C()
{
  return 0xD000000000000014;
}

uint64_t sub_1D57C10D8()
{
  unsigned __int8 *v0;

  return sub_1D57C10E0(*v0);
}

uint64_t sub_1D57C10E0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D57C111C + 4 * byte_1D5AC1850[a1]))(0xD000000000000018, 0x80000001D5AEE8D0);
}

unint64_t sub_1D57C111C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1D57C1190()
{
  unsigned __int8 *v0;

  return sub_1D57C1198(*v0);
}

uint64_t sub_1D57C1198(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C11C8 + 4 * byte_1D5AB06E8[a1]))(0x444972657375, 0xE600000000000000);
}

unint64_t sub_1D57C11C8()
{
  return 0xD000000000000011;
}

unint64_t sub_1D57C1288()
{
  return 0xD000000000000010;
}

uint64_t sub_1D57C12A4()
{
  unsigned __int8 *v0;

  return sub_1D57C12AC(*v0);
}

uint64_t sub_1D57C12AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C12DC + 4 * byte_1D5AD6D30[a1]))(0x734449676174, 0xE600000000000000);
}

unint64_t sub_1D57C12DC()
{
  return 0xD00000000000001DLL;
}

uint64_t storeEnumTagSinglePayload for FormatSubgroupData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1D57C13D4()
{
  unsigned __int8 *v0;

  return sub_1D57C13DC(*v0);
}

uint64_t sub_1D57C13DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C1414 + 4 * byte_1D5AE6C10[a1]))(0x6D69547472617473, 0xE900000000000065);
}

uint64_t sub_1D57C1414()
{
  return 0x7461727544736E64;
}

uint64_t sub_1D57C1434()
{
  return 0x447463656E6E6F63;
}

unint64_t sub_1D57C1468()
{
  return 0xD000000000000010;
}

uint64_t sub_1D57C1484()
{
  return 0x65736E6F70736572;
}

uint64_t sub_1D57C14A4()
{
  return 0x6174536568636163;
}

uint64_t sub_1D57C14C4()
{
  return 0x6F43737574617473;
}

uint64_t sub_1D57C14E0()
{
  return 0x646F43726F727265;
}

uint64_t sub_1D57C14F4()
{
  return 0x707954746E657665;
}

unint64_t sub_1D57C1508()
{
  return 0xD000000000000016;
}

uint64_t destroy for FeedData()
{
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for GroupData()
{
  return &type metadata for GroupData;
}

uint64_t sub_1D57C1598()
{
  unsigned __int8 *v0;

  return sub_1D57C15A0(*v0);
}

uint64_t sub_1D57C15A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C15DC + 4 * byte_1D5AE4200[a1]))(0x436C656E6E616863, 0xEC000000746E756FLL);
}

uint64_t sub_1D57C15DC()
{
  return 0x756F436369706F74;
}

unint64_t sub_1D57C15F8()
{
  return 0xD000000000000011;
}

uint64_t storeEnumTagSinglePayload for GroupData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1D57C16F8 + 4 * byte_1D5AE0B4C[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1D57C172C + 4 * byte_1D5AE0B47[v4]))();
}

uint64_t sub_1D57C172C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C1734(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C173CLL);
  return result;
}

uint64_t sub_1D57C1748(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C1750);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1D57C1754(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C175C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroupType()
{
  return &type metadata for GroupType;
}

ValueMetadata *type metadata accessor for CompetingGroupPersonalizationListData()
{
  return &type metadata for CompetingGroupPersonalizationListData;
}

ValueMetadata *type metadata accessor for TagData()
{
  return &type metadata for TagData;
}

uint64_t type metadata accessor for FeedGroupLayoutEvent2(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CE4C0);
}

uint64_t sub_1D57C17AC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C17E4 + 4 * byte_1D5AE3B9C[*v0]))(0x6F4D656369766564, 0xEB000000006C6564);
}

uint64_t sub_1D57C17E4()
{
  return 0x6C50656369766564;
}

unint64_t sub_1D57C1808()
{
  return 0xD000000000000010;
}

uint64_t sub_1D57C1824()
{
  return 0x6F6973726556736FLL;
}

uint64_t sub_1D57C1840()
{
  return 0x656C646E7542736FLL;
}

uint64_t getEnumTagSinglePayload for GroupData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t getEnumTagSinglePayload for SubscribeButtonExposureEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

_BYTE *sub_1D57C1940(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for SubscriptionData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D57C1994 + 4 * byte_1D5AE420E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D57C19C8 + 4 * byte_1D5AE4209[v4]))();
}

uint64_t sub_1D57C19C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C19D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C19D8);
  return result;
}

uint64_t sub_1D57C19E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C19ECLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D57C19F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C19F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for UserData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UserData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D57C1AE4 + 4 * byte_1D5AB06F6[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D57C1B18 + 4 * byte_1D5AB06F1[v4]))();
}

uint64_t sub_1D57C1B18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C1B20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C1B28);
  return result;
}

uint64_t sub_1D57C1B34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C1B3CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D57C1B40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C1B48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s12AppIconBadgeV18AppIconBadgeSourceOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t getEnumTagSinglePayload for GroupType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xAF)
    goto LABEL_17;
  if (a2 + 81 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 81) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 81;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 81;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 81;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x52;
  v8 = v6 - 82;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1D57C1C38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FeedType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t FeedType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C1C8C + 4 * byte_1D5AE2EF3[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D57C1C8C()
{
  return 0x756F59726F66;
}

uint64_t sub_1D57C1CA0()
{
  return 0x656E697A6167616DLL;
}

unint64_t sub_1D57C1CCC()
{
  return 0xD000000000000010;
}

unint64_t sub_1D57C1CEC()
{
  return 0xD000000000000011;
}

uint64_t sub_1D57C1E90()
{
  return 0x76457374726F7073;
}

ValueMetadata *type metadata accessor for GroupFormationReason()
{
  return &type metadata for GroupFormationReason;
}

uint64_t storeEnumTagSinglePayload for NetworkEventData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1D57C1F0C + 4 * byte_1D5AE6C23[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1D57C1F40 + 4 * byte_1D5AE6C1E[v4]))();
}

uint64_t sub_1D57C1F40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C1F48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C1F50);
  return result;
}

uint64_t sub_1D57C1F5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C1F64);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1D57C1F68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C1F70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for ReplicaAdvertisementViewEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t type metadata accessor for AudioEngageEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C88A0);
}

uint64_t storeEnumTagSinglePayload for GroupType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 81 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 81) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xAF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xAE)
    return ((uint64_t (*)(void))((char *)&loc_1D57C206C + 4 * byte_1D5ADADFB[v4]))();
  *a1 = a2 + 81;
  return ((uint64_t (*)(void))((char *)sub_1D57C20A0 + 4 * byte_1D5ADADF6[v4]))();
}

uint64_t sub_1D57C20A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C20A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C20B0);
  return result;
}

uint64_t sub_1D57C20BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C20C4);
  *(_BYTE *)result = a2 + 81;
  return result;
}

uint64_t sub_1D57C20C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C20D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s12AppIconBadgeV18AppIconBadgeSourceOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1D57C2124()
{
  _BYTE *v0;

  if (*v0)
    return 0x646C697542707061;
  else
    return 0x6973726556707061;
}

uint64_t storeEnumTagSinglePayload for UserBundleSubscriptionContextData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D57C21BC + 4 * byte_1D5AC185B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D57C21F0 + 4 * byte_1D5AC1856[v4]))();
}

uint64_t sub_1D57C21F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C21F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C2200);
  return result;
}

uint64_t sub_1D57C220C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C2214);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D57C2218(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C2220(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for MediaType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1D57C22BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57C22EC + 4 * byte_1D5AC7FC0[*v0]))();
}

void sub_1D57C22EC(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61697274;
  a1[1] = 0xE500000000000000;
}

void sub_1D57C2304(_QWORD *a1@<X8>)
{
  *a1 = 0x6269726373627573;
  a1[1] = 0xEA00000000006465;
}

void sub_1D57C2324(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "notSubscribed");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1D57C234C()
{
  unsigned __int8 *v0;

  return sub_1D57C2354(*v0);
}

uint64_t sub_1D57C2354(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C238C + 4 * byte_1D5AD0930[a1]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1D57C238C()
{
  return 0xD000000000000021;
}

uint64_t type metadata accessor for FollowingViewEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9B30);
}

uint64_t type metadata accessor for ArticleUnlikeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CFCB8);
}

uint64_t type metadata accessor for ArticleShareEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9260);
}

uint64_t type metadata accessor for UnfollowTagEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C90F0);
}

uint64_t type metadata accessor for EmailSignupEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8A30);
}

uint64_t type metadata accessor for EOAFeedViewEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CF998);
}

uint64_t type metadata accessor for ArticleViewEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8678);
}

uint64_t type metadata accessor for ArticleSaveEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8500);
}

uint64_t type metadata accessor for ArticleLikeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8388);
}

uint64_t type metadata accessor for PuzzleViewEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CF600);
}

uint64_t type metadata accessor for FollowTagEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C7C10);
}

ValueMetadata *type metadata accessor for AdCreativeType()
{
  return &type metadata for AdCreativeType;
}

uint64_t type metadata accessor for FeedViewEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C7A08);
}

uint64_t storeEnumTagSinglePayload for DeviceData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D57C25B4 + 4 * byte_1D5AE3BA6[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D57C25E8 + 4 * byte_1D5AE3BA1[v4]))();
}

uint64_t sub_1D57C25E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C25F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C25F8);
  return result;
}

uint64_t sub_1D57C2604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C260CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D57C2610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C2618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for InterfaceOrientation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1D57C26B4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6570795477656976;
  if (*v0 != 1)
    v1 = 0x6974634177656976;
  if (*v0)
    return v1;
  else
    return 0x7373655377656976;
}

uint64_t sub_1D57C2720()
{
  _BYTE *v0;

  if (*v0)
    return 0x6573616863727570;
  else
    return 0x6168637275507369;
}

uint64_t sub_1D57C2770()
{
  return sub_1D5AAD7E8();
}

unint64_t _s12AppIconBadgeV18AppIconBadgeSourceOwxx(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s12AppIconBadgeV18AppIconBadgeSourceOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GroupData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

__n128 GroupData.init(groupLocation:groupType:groupID:groupCount:groupPosition:groupedArticleIDs:groupedIssueIDs:groupedTagIDs:curatedSubtype:layoutIDs:formationReason:groupBackingTagId:personalizationScore:competingGroups:groupedAuxiliaryData:)@<Q0>(_BYTE *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12, char *a13, __n128 a14, uint64_t a15, char a16, uint64_t a17, uint64_t *a18)
{
  __n128 result;
  char v19;
  char v20;
  uint64_t v21;

  result = a14;
  v19 = *a2;
  v20 = *a13;
  v21 = *a18;
  *(_BYTE *)a9 = *a1;
  *(_BYTE *)(a9 + 1) = v19;
  *(_QWORD *)(a9 + 8) = a3;
  *(_QWORD *)(a9 + 16) = a4;
  *(_DWORD *)(a9 + 24) = a5;
  *(_DWORD *)(a9 + 28) = a6;
  *(_QWORD *)(a9 + 32) = a7;
  *(_QWORD *)(a9 + 40) = a8;
  *(_OWORD *)(a9 + 48) = a10;
  *(_QWORD *)(a9 + 64) = a11;
  *(_QWORD *)(a9 + 72) = a12;
  *(_BYTE *)(a9 + 80) = v20;
  *(__n128 *)(a9 + 88) = a14;
  *(_QWORD *)(a9 + 104) = a15;
  *(_BYTE *)(a9 + 112) = a16 & 1;
  *(_QWORD *)(a9 + 120) = a17;
  *(_QWORD *)(a9 + 128) = v21;
  return result;
}

uint64_t storeEnumTagSinglePayload for ViewData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D57C2914 + 4 * byte_1D5ADB7E9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D57C2948 + 4 * byte_1D5ADB7E4[v4]))();
}

uint64_t sub_1D57C2948(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C2950(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C2958);
  return result;
}

uint64_t sub_1D57C2964(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C296CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D57C2970(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C2978(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for CacheState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t dispatch thunk of TrackerConfigurationType.adInstrumentationEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D57C2A1C()
{
  return sub_1D5AAD7F4();
}

uint64_t storeEnumTagSinglePayload for GroupFormationReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D57C2A74 + 4 * byte_1D5ABD7BE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D57C2AA8 + 4 * byte_1D5ABD7B9[v4]))();
}

uint64_t sub_1D57C2AA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C2AB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C2AB8);
  return result;
}

uint64_t sub_1D57C2AC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C2ACCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D57C2AD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C2AD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroupLocation()
{
  return &type metadata for GroupLocation;
}

uint64_t getEnumTagSinglePayload for NetworkEventData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for StartMethodData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1D57C2B48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ViewType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ViewType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C2B9C + 4 * byte_1D5AD7E88[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D57C2B9C()
{
  return 1684366694;
}

uint64_t sub_1D57C2BAC()
{
  return 0x656C6369747261;
}

uint64_t sub_1D57C2BC0()
{
  return 6710384;
}

uint64_t sub_1D57C2BD0()
{
  return 0x6E69776F6C6C6F66;
}

uint64_t sub_1D57C2BEC()
{
  return 0x746567646977;
}

uint64_t sub_1D57C2C00()
{
  return 0x686372616573;
}

uint64_t sub_1D57C2C14()
{
  return 0x6C61646F6DLL;
}

uint64_t sub_1D57C2C28()
{
  return 0x6C6C6F72635368;
}

unint64_t sub_1D57C2C3C()
{
  return 0xD000000000000010;
}

uint64_t sub_1D57C2C58()
{
  return 0x7474656C7377656ELL;
}

uint64_t sub_1D57C2C74()
{
  return 0x656C7A7A7570;
}

uint64_t sub_1D57C2C88()
{
  return 0x74756374726F6873;
}

void sub_1D57C2CA8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE300000000000000;
  v5 = 7824750;
  if (v2 != 1)
  {
    v5 = 0x6E696E7275746572;
    v4 = 0xE900000000000067;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

ValueMetadata *type metadata accessor for UserData()
{
  return &type metadata for UserData;
}

uint64_t sub_1D57C2D14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TextSize.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t TextSize.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C2D70 + 4 * byte_1D5AE46F0[*v0]))(0x6669636570736E75, 0xEB00000000646569);
}

uint64_t sub_1D57C2D70()
{
  return 0x616D536172747865;
}

uint64_t sub_1D57C2D90()
{
  return 0x6C6C616D73;
}

uint64_t sub_1D57C2DA4()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1D57C2DB8()
{
  return 0x656772616CLL;
}

uint64_t sub_1D57C2DCC()
{
  return 0x72614C6172747865;
}

uint64_t sub_1D57C2DE8()
{
  return 0x7478456172747865;
}

unint64_t sub_1D57C2E0C()
{
  return 0xD000000000000014;
}

uint64_t storeEnumTagSinglePayload for FeedData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D57C2EF8 + 4 * byte_1D5ABE2A1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D57C2F2C + 4 * byte_1D5ABE29C[v4]))();
}

uint64_t sub_1D57C2F2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C2F34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C2F3CLL);
  return result;
}

uint64_t sub_1D57C2F48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C2F50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D57C2F54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C2F5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for PuzzleLayout(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1D57C2FF8()
{
  _BYTE *v0;

  if (*v0)
    return 0x444964656566;
  else
    return 0x6570795464656566;
}

ValueMetadata *type metadata accessor for AppData()
{
  return &type metadata for AppData;
}

uint64_t storeEnumTagSinglePayload for FractionalCohortMembershipDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FractionalCohortMembershipDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

NewsAnalytics::CompetingGroupPersonalizationListData __swiftcall CompetingGroupPersonalizationListData.init(name:personalizationScore:)(Swift::String name, Swift::Double personalizationScore)
{
  uint64_t v2;
  NewsAnalytics::CompetingGroupPersonalizationListData result;

  *(Swift::String *)v2 = name;
  *(Swift::Double *)(v2 + 16) = personalizationScore;
  result.name = name;
  result.personalizationScore = personalizationScore;
  return result;
}

double CompetingGroupPersonalizationListData.personalizationScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t storeEnumTagSinglePayload for UserSubscriptionContextData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D57C312C + 4 * byte_1D5ACE925[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D57C3160 + 4 * byte_1D5ACE920[v4]))();
}

uint64_t sub_1D57C3160(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C3168(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C3170);
  return result;
}

uint64_t sub_1D57C317C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C3184);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D57C3188(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C3190(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsData()
{
  return &type metadata for NotificationSettingsData;
}

uint64_t storeEnumTagSinglePayload for NotificationSettingsData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D57C31F8 + 4 * byte_1D5AD6D3D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D57C322C + 4 * byte_1D5AD6D38[v4]))();
}

uint64_t sub_1D57C322C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C3234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C323CLL);
  return result;
}

uint64_t sub_1D57C3248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C3250);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D57C3254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C325C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C3268@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D0750, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CE5E8, a1);
}

uint64_t sub_1D57C328C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57C32BC + 4 * byte_1D5AD1194[*v0]))();
}

void sub_1D57C32BC(_QWORD *a1@<X8>)
{
  *a1 = 0x69746375646F7270;
  a1[1] = 0xEA00000000006E6FLL;
}

void sub_1D57C32DC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x676E6967617473;
  a1[1] = v1;
}

void sub_1D57C32F4(_QWORD *a1@<X8>)
{
  *a1 = 24945;
  a1[1] = 0xE200000000000000;
}

void sub_1D57C3304(_QWORD *a1@<X8>)
{
  *a1 = 1953719668;
  a1[1] = 0xE400000000000000;
}

uint64_t storeEnumTagSinglePayload for ContentEnvironmentData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C3358 + 4 * byte_1D5AD05CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C3378 + 4 * byte_1D5AD05CF[v4]))();
}

_BYTE *sub_1D57C3358(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C3378(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C3380(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C3388(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C3390(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C3398(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for StartMethodData.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t sub_1D57C33F4()
{
  return 1701869940;
}

uint64_t sub_1D57C3404@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CE4B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CE5A8, a1);
}

uint64_t sub_1D57C3428@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D0388, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D0368, a1);
}

uint64_t sub_1D57C344C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57C347C + 4 * byte_1D5ABD7B4[*v0]))();
}

void sub_1D57C347C(_QWORD *a1@<X8>)
{
  *a1 = 1869903201;
  a1[1] = 0xE400000000000000;
}

void sub_1D57C3490(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6C6F4664726168;
  a1[1] = 0xEA0000000000776FLL;
}

void sub_1D57C34B0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x64657461727563;
  a1[1] = v1;
}

void sub_1D57C34C8(_QWORD *a1@<X8>)
{
  *a1 = 1869048929;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1D57C34DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD7B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CD798, a1);
}

uint64_t sub_1D57C3500@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DeviceOrientation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t DeviceOrientation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C3554
                                                            + 4 * asc_1D5AD3250[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D57C3554()
{
  return 0x7469617274726F70;
}

unint64_t sub_1D57C356C()
{
  return 0xD000000000000012;
}

uint64_t sub_1D57C3588()
{
  return 0x70616373646E616CLL;
}

uint64_t sub_1D57C35C0()
{
  return 0x705565636166;
}

uint64_t sub_1D57C35D4()
{
  return 0x6E776F4465636166;
}

void sub_1D57C35EC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x6C616E7265746E69;
  if (v2 != 1)
    v4 = 0x6C616E7265747865;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE800000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1D57C3640@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = NetworkEventType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t NetworkEventType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C3694 + 4 * byte_1D5ADAB80[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D57C3694()
{
  return 7234659;
}

uint64_t sub_1D57C36A4()
{
  return 0x6F437070416E6463;
}

uint64_t sub_1D57C36C4()
{
  return 1937208931;
}

uint64_t sub_1D57C36D4()
{
  return 0x63696C6275506B63;
}

uint64_t sub_1D57C36F0()
{
  return 0x7461766972506B63;
}

unint64_t sub_1D57C3710()
{
  return 0xD000000000000011;
}

ValueMetadata *type metadata accessor for NetworkEventType()
{
  return &type metadata for NetworkEventType;
}

uint64_t sub_1D57C388C()
{
  return sub_1D57BD670();
}

void sub_1D57C3894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D57AB8BC(a1, a2, v2);
}

void sub_1D57C389C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D57B2B54(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1D57C38A4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6570795472657375;
  else
    return 0x444972657375;
}

uint64_t storeEnumTagSinglePayload for OrientationData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D57C3928 + 4 * byte_1D5AB85AB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D57C395C + 4 * byte_1D5AB85A6[v4]))();
}

uint64_t sub_1D57C395C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C3964(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C396CLL);
  return result;
}

uint64_t sub_1D57C3978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C3980);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D57C3984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C398C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D57C3998()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0xD000000000000011;
}

uint64_t sub_1D57C39D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCD78, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCB10, a1);
}

uint64_t sub_1D57C39FC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C3A2C + 4 * byte_1D5AC40A0[*v0]))(0x444964726F636572, 0xE800000000000000);
}

uint64_t sub_1D57C3A2C()
{
  return 0x656372756F73;
}

uint64_t sub_1D57C3A40()
{
  return 0x6174536863746566;
}

uint64_t sub_1D57C3A64()
{
  return 0x646E456863746566;
}

uint64_t sub_1D57C3A84()
{
  return 0x446873696C627570;
}

uint64_t sub_1D57C3AA4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57C3AD4 + 4 * byte_1D5AC2024[*v0]))();
}

void sub_1D57C3AD4(_QWORD *a1@<X8>)
{
  *a1 = 5459817;
  a1[1] = 0xE300000000000000;
}

void sub_1D57C3AE8(_QWORD *a1@<X8>)
{
  *a1 = 0x534F64615069;
  a1[1] = 0xE600000000000000;
}

void sub_1D57C3B00(_QWORD *a1@<X8>)
{
  *a1 = 0x534F63616DLL;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1D57C3B18()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57C3B48 + 4 * byte_1D5AE1DB4[*v0]))();
}

void sub_1D57C3B48(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656C6369747261;
  a1[1] = v1;
}

void sub_1D57C3B60(_QWORD *a1@<X8>)
{
  *a1 = 1684366694;
  a1[1] = 0xE400000000000000;
}

void sub_1D57C3B74(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "endOfArticle");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1D57C3B98()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0x6461427070417369;
}

ValueMetadata *type metadata accessor for SessionData()
{
  return &type metadata for SessionData;
}

uint64_t sub_1D57C3BF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ViewAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ViewAction.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C3C44 + 4 * byte_1D5AB6358[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D57C3C44()
{
  return 0x636E75614C707061;
}

uint64_t sub_1D57C3C60()
{
  return 0x6570697773;
}

uint64_t sub_1D57C3C74()
{
  return 0x656E696C64616568;
}

uint64_t sub_1D57C3C94()
{
  return 0x7061546575737369;
}

uint64_t sub_1D57C3CAC()
{
  return 0x6B6E696C70656564;
}

uint64_t sub_1D57C3CC4()
{
  return 0x6E6164726F666661;
}

unint64_t sub_1D57C3CE8()
{
  return 0xD000000000000011;
}

uint64_t sub_1D57C3E18()
{
  return 0x6E65746E49707061;
}

ValueMetadata *type metadata accessor for DeviceData()
{
  return &type metadata for DeviceData;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ViewData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ViewData()
{
  return &type metadata for ViewData;
}

ValueMetadata *type metadata accessor for FeedData()
{
  return &type metadata for FeedData;
}

ValueMetadata *type metadata accessor for Role()
{
  return &type metadata for Role;
}

ValueMetadata *type metadata accessor for UserBundleSubscriptionContextData()
{
  return &type metadata for UserBundleSubscriptionContextData;
}

uint64_t sub_1D57C3EEC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57C3F1C + 4 * byte_1D5ACF324[*v0]))();
}

void sub_1D57C3F1C(_QWORD *a1@<X8>)
{
  *a1 = 1768319351;
  a1[1] = 0xE400000000000000;
}

void sub_1D57C3F30(_QWORD *a1@<X8>)
{
  *a1 = 1851881335;
  a1[1] = 0xE400000000000000;
}

void sub_1D57C3F44(_QWORD *a1@<X8>)
{
  *a1 = 0x47356E617777;
  a1[1] = 0xE600000000000000;
}

void sub_1D57C3F5C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "notReachable");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

ValueMetadata *type metadata accessor for CellularRadioAccessTechnology()
{
  return &type metadata for CellularRadioAccessTechnology;
}

uint64_t sub_1D57C3F90()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C3FC4 + 4 * byte_1D5AE9370[*v0]))(0x6D614E70756F7267, 0xE900000000000065);
}

uint64_t sub_1D57C3FC4()
{
  return 0x4E72657474696D65;
}

uint64_t sub_1D57C3FE4()
{
  return 0x74757074756FLL;
}

uint64_t sub_1D57C3FF8()
{
  return 0x6E6F697461727564;
}

uint64_t storeEnumTagSinglePayload for PaidSubscribedTagListData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C4054 + 4 * byte_1D5ADE9C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C4074 + 4 * byte_1D5ADE9C5[v4]))();
}

_BYTE *sub_1D57C4054(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C4074(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C407C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4084(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C408C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4094(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D57C40A0()
{
  return 0x734449676174;
}

uint64_t storeEnumTagSinglePayload for AutoSubscribedTagListData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C40F4 + 4 * byte_1D5AD7770[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C4114 + 4 * byte_1D5AD7775[v4]))();
}

_BYTE *sub_1D57C40F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C4114(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C411C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4124(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C412C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4134(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t storeEnumTagSinglePayload for SubscribedSportsListData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C4180 + 4 * byte_1D5ABF4C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C41A0 + 4 * byte_1D5ABF4C5[v4]))();
}

_BYTE *sub_1D57C4180(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C41A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C41A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C41B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C41B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C41C0(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D57C41CC()
{
  return 0x694C7374726F7073;
}

uint64_t type metadata accessor for SportsSessionStartEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CE600);
}

uint64_t sub_1D57C41FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1ED9D0778, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D0758, a1);
}

uint64_t storeEnumTagSinglePayload for SubscribedTagListData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C4260 + 4 * byte_1D5ABF2C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C4280 + 4 * byte_1D5ABF2C5[v4]))();
}

_BYTE *sub_1D57C4260(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C4280(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4288(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4290(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4298(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C42A0(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t type metadata accessor for SportsSessionEndEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9D0518);
}

uint64_t sub_1D57C42C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CED50, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CED38, a1);
}

uint64_t type metadata accessor for FeedGapExpansionEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9D03B8);
}

uint64_t sub_1D57C42F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D03B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D0390, a1);
}

uint64_t storeEnumTagSinglePayload for WebAccessTagListData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C435C + 4 * byte_1D5ADE2E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C437C + 4 * byte_1D5ADE2E5[v4]))();
}

_BYTE *sub_1D57C435C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C437C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4384(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C438C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4394(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C439C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D57C43A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57C43D8 + 4 * byte_1D5ADF6BA[*v0]))();
}

void sub_1D57C43D8(_QWORD *a1@<X8>)
{
  *a1 = 0x7469617274726F70;
  a1[1] = 0xE800000000000000;
}

void sub_1D57C43F4(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001D5AEB940;
}

void sub_1D57C4414(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "landscapeLeft");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t getEnumTagSinglePayload for FeedJournalEntryData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for FeedJournalEntryData()
{
  return &type metadata for FeedJournalEntryData;
}

uint64_t sub_1D57C44A8()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F697461727564;
  else
    return 0x73655270756F7267;
}

void sub_1D57C44EC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE400000000000000;
  v5 = 1937204590;
  if (v2 != 1)
  {
    v5 = 0x7972756372656DLL;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t storeEnumTagSinglePayload for BadgeOriginationData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C4584 + 4 * byte_1D5AC3BDA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C45A4 + 4 * byte_1D5AC3BDF[v4]))();
}

_BYTE *sub_1D57C4584(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C45A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C45AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C45B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C45BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C45C4(_DWORD *result)
{
  *result = 0;
  return result;
}

unint64_t sub_1D57C45D0()
{
  return 0xD000000000000014;
}

uint64_t sub_1D57C45EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57C461C + 4 * byte_1D5AE7CDC[*v0]))();
}

void sub_1D57C461C(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C696166;
  a1[1] = 0xE600000000000000;
}

void sub_1D57C4634(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x676E69646E6570;
  a1[1] = v1;
}

void sub_1D57C464C(_QWORD *a1@<X8>)
{
  *a1 = 0x6564726163736964;
  a1[1] = 0xE900000000000064;
}

ValueMetadata *type metadata accessor for AdJournalEntryStatus()
{
  return &type metadata for AdJournalEntryStatus;
}

void sub_1D57C46A4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE400000000000000;
  v5 = 1953718630;
  if (v2 != 1)
  {
    v5 = 0x6568636163;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 2003790963;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

ValueMetadata *type metadata accessor for FeedGroupLayoutPath()
{
  return &type metadata for FeedGroupLayoutPath;
}

ValueMetadata *type metadata accessor for FeedGroupLayoutData()
{
  return &type metadata for FeedGroupLayoutData;
}

NewsAnalytics::FeedGroupLayoutData __swiftcall FeedGroupLayoutData.init(layoutPath:)(NewsAnalytics::FeedGroupLayoutData layoutPath)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)layoutPath.layoutPath;
  return layoutPath;
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C475C + 4 * byte_1D5AC8A6A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C477C + 4 * byte_1D5AC8A6F[v4]))();
}

_BYTE *sub_1D57C475C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C477C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4784(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C478C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4794(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C479C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D57C47A8()
{
  return 0x615074756F79616CLL;
}

uint64_t type metadata accessor for AdJournalEntryEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CD3B0);
}

uint64_t sub_1D57C47D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD7E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD7C0, a1);
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D57C4848 + 4 * byte_1D5AE1661[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D57C487C + 4 * byte_1D5AE165C[v4]))();
}

uint64_t sub_1D57C487C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C4884(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C488CLL);
  return result;
}

uint64_t sub_1D57C4898(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C48A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D57C48A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C48AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for LiveActivityDismissal(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for AdJournalEntryError()
{
  return &type metadata for AdJournalEntryError;
}

unint64_t sub_1D57C4958()
{
  return 0xD00000000000001BLL;
}

ValueMetadata *type metadata accessor for AggregateStateMode()
{
  return &type metadata for AggregateStateMode;
}

ValueMetadata *type metadata accessor for AdJournalEntryData()
{
  return &type metadata for AdJournalEntryData;
}

NewsAnalytics::AdJournalEntryData __swiftcall AdJournalEntryData.init(status:error:)(NewsAnalytics::AdJournalEntryStatus status, NewsAnalytics::AdJournalEntryError_optional error)
{
  _BYTE *v2;
  char v3;
  NewsAnalytics::AdJournalEntryData result;

  v3 = *(_BYTE *)error.value;
  *v2 = *(_BYTE *)status;
  v2[1] = v3;
  result.status = status;
  return result;
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D57C49F4 + 4 * byte_1D5AE292F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D57C4A28 + 4 * byte_1D5AE292A[v4]))();
}

uint64_t sub_1D57C4A28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C4A30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C4A38);
  return result;
}

uint64_t sub_1D57C4A44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C4A4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D57C4A50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C4A58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C4A64()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F727265;
  else
    return 0x737574617473;
}

uint64_t storeEnumTagSinglePayload for SportsTagListData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C4AD8 + 4 * byte_1D5AC1680[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C4AF8 + 4 * byte_1D5AC1685[v4]))();
}

_BYTE *sub_1D57C4AD8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C4AF8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4B00(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4B08(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4B10(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4B18(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t storeEnumTagSinglePayload for MutedTagListData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C4B64 + 4 * byte_1D5AB2450[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C4B84 + 4 * byte_1D5AB2455[v4]))();
}

_BYTE *sub_1D57C4B64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C4B84(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4B8C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4B94(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4B9C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4BA4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedConfigSource()
{
  return &type metadata for FeedConfigSource;
}

uint64_t sub_1D57C4BC4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D57BD524(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1D57C4BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D57BF76C(a1, a2, (_QWORD *)(v2 + 16));
}

uint64_t sub_1D57C4BD8()
{
  return sub_1D57BB634();
}

uint64_t sub_1D57C4BE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D57B25A0(a1, *(void **)(v1 + 16));
}

id sub_1D57C4BF0(uint64_t a1)
{
  uint64_t v1;

  return sub_1D57BFC14(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_1D57C4BFC()
{
  return sub_1D57B9DE8();
}

void sub_1D57C4C04(_QWORD *a1@<X8>)
{
  *a1 = 0x7374726F7073;
  a1[1] = 0xE600000000000000;
}

uint64_t storeEnumTagSinglePayload for PrivateUserData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D57C4C68 + 4 * byte_1D5ABF069[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D57C4C9C + 4 * byte_1D5ABF064[v4]))();
}

uint64_t sub_1D57C4C9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C4CA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C4CACLL);
  return result;
}

uint64_t sub_1D57C4CB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C4CC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D57C4CC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C4CCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdPlacementData()
{
  return &type metadata for AdPlacementData;
}

NewsAnalytics::AdPlacementData __swiftcall AdPlacementData.init(placementID:)(NewsAnalytics::AdPlacementData placementID)
{
  NewsAnalytics::AdPlacementData *v1;

  *v1 = placementID;
  return placementID;
}

uint64_t sub_1D57C4CF0()
{
  return 0x6E656D6563616C70;
}

uint64_t type metadata accessor for TelemetryEvent(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9C7F08);
}

uint64_t sub_1D57C4D24@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD190, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCB28, a1);
}

uint64_t FeedConfigData.init(recordID:source:fetchStartTime:fetchEndTime:publishDate:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7;

  v7 = *a3;
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_BYTE *)(a7 + 16) = v7;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

ValueMetadata *type metadata accessor for AdPositionData()
{
  return &type metadata for AdPositionData;
}

uint64_t sub_1D57C4D70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57C4DA0 + 4 * byte_1D5ADD7AC[*v0]))();
}

void sub_1D57C4DA0(_QWORD *a1@<X8>)
{
  *a1 = 0x72656E6E6162;
  a1[1] = 0xE600000000000000;
}

void sub_1D57C4DB8(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "preRollVideo");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1D57C4DDC(_QWORD *a1@<X8>)
{
  *a1 = 0x644165766974616ELL;
  a1[1] = 0xE800000000000000;
}

void sub_1D57C4DF8(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "interstitial");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

ValueMetadata *type metadata accessor for AdCreativeData()
{
  return &type metadata for AdCreativeData;
}

NewsAnalytics::AdCreativeData __swiftcall AdCreativeData.init(type:)(NewsAnalytics::AdCreativeData type)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)type.type;
  return type;
}

uint64_t storeEnumTagSinglePayload for AdCreativeData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C4E78 + 4 * byte_1D5AE85C6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C4E98 + 4 * byte_1D5AE85CB[v4]))();
}

_BYTE *sub_1D57C4E78(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C4E98(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4EA0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4EA8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4EB0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4EB8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D57C4EC4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57C4EF0 + 4 * byte_1D5ADFD40[*v0]))(0x444972657375, 0xE600000000000000);
}

uint64_t sub_1D57C4EF0()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1D57C4F10()
{
  return 0x4449746E657665;
}

uint64_t sub_1D57C4F28()
{
  return 0x6F6973726556736FLL;
}

uint64_t sub_1D57C4F44()
{
  return 0x656C646E7542736FLL;
}

uint64_t storeEnumTagSinglePayload for TextSizeData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C4FA8 + 4 * byte_1D5AC605E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C4FC8 + 4 * byte_1D5AC6063[v4]))();
}

_BYTE *sub_1D57C4FA8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C4FC8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4FD0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4FD8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C4FE0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C4FE8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D57C4FF4()
{
  return 0x657A695374786574;
}

uint64_t storeEnumTagSinglePayload for AppBadgeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D57C5058 + 4 * byte_1D5ACF887[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D57C508C + 4 * byte_1D5ACF882[v4]))();
}

uint64_t sub_1D57C508C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C5094(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C509CLL);
  return result;
}

uint64_t sub_1D57C50A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C50B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D57C50B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C50BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChannelData()
{
  return &type metadata for ChannelData;
}

ValueMetadata *type metadata accessor for ArticleData()
{
  return &type metadata for ArticleData;
}

uint64_t storeEnumTagSinglePayload for SportsData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C5128 + 4 * byte_1D5AB383C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C5148 + 4 * byte_1D5AB3841[v4]))();
}

_BYTE *sub_1D57C5128(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C5148(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C5150(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C5158(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C5160(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C5168(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D57C5174()
{
  return 0x61547374726F7073;
}

void sub_1D57C5198(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE300000000000000;
  v5 = 7629160;
  if (v2 != 1)
  {
    v5 = 1936943469;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

ValueMetadata *type metadata accessor for CacheState()
{
  return &type metadata for CacheState;
}

uint64_t sub_1D57C51F8()
{
  return 0x444972657375;
}

ValueMetadata *type metadata accessor for AdSizeData()
{
  return &type metadata for AdSizeData;
}

uint64_t storeEnumTagSinglePayload for AdFeedData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57C525C + 4 * byte_1D5AD57CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57C527C + 4 * byte_1D5AD57CF[v4]))();
}

_BYTE *sub_1D57C525C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57C527C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C5284(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C528C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57C5294(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57C529C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D57C52A8()
{
  return 0x6570795464656566;
}

void sub_1D57C52C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C70B8)
  {
    type metadata accessor for NetworkEventData();
    sub_1D57C5358(&qword_1ED9C8D68, (uint64_t)&protocol conformance descriptor for NetworkEventData);
    sub_1D57C5358(&qword_1ED9C8D60, (uint64_t)&protocol conformance descriptor for NetworkEventData);
    v0 = sub_1D5AADB48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C70B8);
  }
}

uint64_t sub_1D57C5358(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for NetworkEventData();
    result = MEMORY[0x1D8279680](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_1D57C5484(uint64_t a1)
{
  uint64_t v2;

  sub_1D57CB698(0, (unint64_t *)&qword_1ED9CCA50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57C54D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57C5518();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1D57C5518()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CCA50)
  {
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CCA50);
  }
}

unint64_t sub_1D57C5570()
{
  unint64_t result;

  result = qword_1ED9CCA40;
  if (!qword_1ED9CCA40)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CCA40);
  }
  return result;
}

void sub_1D57C55C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CE760)
  {
    sub_1D57C5D74();
    v0 = sub_1D5AAEDB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CE760);
  }
}

void sub_1D57C5618(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1D5883964(255, a3);
    v4 = sub_1D5AAEDB4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1D57C566C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57C713C();
    v7 = a3(a1, &type metadata for FeedJournalGroupResultData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1D57C56C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57C8850();
    v7 = a3(a1, &type metadata for FeedJournalEntryData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1D57C5724(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57C8A74();
    v7 = a3(a1, &type metadata for AppSessionStartEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1D57C5780(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57CA96C();
    v7 = a3(a1, &type metadata for HeartbeatEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1D57C57DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57CABBC();
    v7 = a3(a1, &type metadata for FeedConfigData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1D57C5838(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57CAF94();
    v7 = a3(a1, &type metadata for HeartbeatData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1D57C5894(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57CBAB0();
    v7 = a3(a1, &type metadata for WindowData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

char *sub_1D57C58F0(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1D57A4C04(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_1D57C590C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CEF58)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1D5AAEB98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CEF58);
  }
}

unint64_t sub_1D57C596C()
{
  unint64_t result;

  result = qword_1ED9CE130;
  if (!qword_1ED9CE130)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CE130);
  }
  return result;
}

uint64_t sub_1D57C59C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1D57C59F0()
{
  return sub_1D57A8DE4((unint64_t *)&unk_1ED9CC730, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1D5AAF7C0);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_1D57B8370(a1, &qword_1ED9CC740);
}

unint64_t sub_1D57C5A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED9CC728;
  if (!qword_1ED9CC728)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    result = MEMORY[0x1D8279680](&unk_1D5AAF99C, v1);
    atomic_store(result, (unint64_t *)&qword_1ED9CC728);
  }
  return result;
}

unint64_t sub_1D57C5A78()
{
  unint64_t result;

  result = qword_1ED9CE120;
  if (!qword_1ED9CE120)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CE120);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1D57B8370(a1, &qword_1ED9CEF50);
}

unint64_t sub_1D57C5AC8()
{
  unint64_t result;

  result = qword_1ED9CC700;
  if (!qword_1ED9CC700)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CC700);
  }
  return result;
}

uint64_t sub_1D57C5B04(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D57C5B68();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D57C5B68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9D0C90)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9D0C90);
  }
}

uint64_t sub_1D57C5BBC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1D57C5BE8(uint64_t a1)
{
  uint64_t v2;

  sub_1D57C5C24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D57C5C24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9D0C30)
  {
    sub_1D586F928();
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9D0C30);
  }
}

unint64_t sub_1D57C5C78()
{
  unint64_t result;

  result = qword_1ED9D0C18;
  if (!qword_1ED9D0C18)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9D0C18);
  }
  return result;
}

void sub_1D57C5CCC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1D57C5D10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CE0D8)
  {
    sub_1D57A19A0(255, &qword_1ED9CE140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1D5AAE298();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CE0D8);
  }
}

unint64_t sub_1D57C5D74()
{
  unint64_t result;

  result = qword_1ED9CE728;
  if (!qword_1ED9CE728)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CE728);
  }
  return result;
}

unint64_t sub_1D57C5DC8()
{
  unint64_t result;

  result = qword_1ED9CC5C0;
  if (!qword_1ED9CC5C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TrackData, &type metadata for TrackData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC5C0);
  }
  return result;
}

unint64_t sub_1D57C5E0C()
{
  unint64_t result;

  result = qword_1ED9CC5B8;
  if (!qword_1ED9CC5B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TrackData, &type metadata for TrackData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC5B8);
  }
  return result;
}

unint64_t sub_1D57C5E50()
{
  unint64_t result;

  result = qword_1ED9D0BE0;
  if (!qword_1ED9D0BE0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScoreData, &type metadata for ScoreData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0BE0);
  }
  return result;
}

unint64_t sub_1D57C5E94()
{
  unint64_t result;

  result = qword_1ED9D0BD8;
  if (!qword_1ED9D0BD8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScoreData, &type metadata for ScoreData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0BD8);
  }
  return result;
}

unint64_t sub_1D57C5ED8()
{
  unint64_t result;

  result = qword_1ED9CC588;
  if (!qword_1ED9CC588)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueData, &type metadata for IssueData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC588);
  }
  return result;
}

unint64_t sub_1D57C5F1C()
{
  unint64_t result;

  result = qword_1ED9CC580;
  if (!qword_1ED9CC580)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueData, &type metadata for IssueData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC580);
  }
  return result;
}

unint64_t sub_1D57C5F64()
{
  unint64_t result;

  result = qword_1ED9CE720;
  if (!qword_1ED9CE720)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupType, &type metadata for GroupType);
    atomic_store(result, (unint64_t *)&qword_1ED9CE720);
  }
  return result;
}

unint64_t sub_1D57C5FA8()
{
  unint64_t result;

  result = qword_1ED9CC538;
  if (!qword_1ED9CC538)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupData, &type metadata for GroupData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC538);
  }
  return result;
}

unint64_t sub_1D57C5FEC()
{
  unint64_t result;

  result = qword_1ED9CC530;
  if (!qword_1ED9CC530)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupData, &type metadata for GroupData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC530);
  }
  return result;
}

void GroupData.groupType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

unint64_t sub_1D57C6044()
{
  unint64_t result;

  result = qword_1ED9CC528;
  if (!qword_1ED9CC528)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0C38, &type metadata for GroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC528);
  }
  return result;
}

unint64_t sub_1D57C6088()
{
  unint64_t result;

  result = qword_1ED9CC520;
  if (!qword_1ED9CC520)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0C60, &type metadata for GroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC520);
  }
  return result;
}

ValueMetadata *type metadata accessor for EventPath()
{
  return &type metadata for EventPath;
}

unint64_t sub_1D57C60E4()
{
  unint64_t result;

  result = qword_1ED9CC510;
  if (!qword_1ED9CC510)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ErrorData, &type metadata for ErrorData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC510);
  }
  return result;
}

unint64_t sub_1D57C6128()
{
  unint64_t result;

  result = qword_1ED9CC508;
  if (!qword_1ED9CC508)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ErrorData, &type metadata for ErrorData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC508);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugData()
{
  return &type metadata for DebugData;
}

unint64_t sub_1D57C617C()
{
  unint64_t result;

  result = qword_1ED9C6E90;
  if (!qword_1ED9C6E90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DebugData, &type metadata for DebugData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6E90);
  }
  return result;
}

unint64_t sub_1D57C61C0()
{
  unint64_t result;

  result = qword_1ED9C6E88;
  if (!qword_1ED9C6E88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DebugData, &type metadata for DebugData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6E88);
  }
  return result;
}

unint64_t sub_1D57C6204()
{
  unint64_t result;

  result = qword_1ED9C6E80;
  if (!qword_1ED9C6E80)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DebugData, &type metadata for DebugData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6E80);
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewType()
{
  return &type metadata for ViewType;
}

unint64_t sub_1D57C6260()
{
  unint64_t result;

  result = qword_1ED9CC4D0;
  if (!qword_1ED9CC4D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewData, &type metadata for ViewData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4D0);
  }
  return result;
}

unint64_t sub_1D57C62A4()
{
  unint64_t result;

  result = qword_1ED9CC4C8;
  if (!qword_1ED9CC4C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewData, &type metadata for ViewData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4C8);
  }
  return result;
}

NewsAnalytics::ViewData __swiftcall ViewData.init(viewSessionID:viewType:viewAction:)(Swift::String viewSessionID, NewsAnalytics::ViewType viewType, NewsAnalytics::ViewAction viewAction)
{
  uint64_t v3;
  char v4;
  char v5;
  NewsAnalytics::ViewData result;

  v4 = *(_BYTE *)viewType;
  v5 = *(_BYTE *)viewAction;
  *(Swift::String *)v3 = viewSessionID;
  *(_BYTE *)(v3 + 16) = v4;
  *(_BYTE *)(v3 + 17) = v5;
  result.viewSessionID = viewSessionID;
  result.viewType = viewType;
  return result;
}

unint64_t sub_1D57C6308()
{
  unint64_t result;

  result = qword_1ED9CC4C0;
  if (!qword_1ED9CC4C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB8A4, &type metadata for ViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4C0);
  }
  return result;
}

unint64_t sub_1D57C634C()
{
  unint64_t result;

  result = qword_1ED9CC4B8;
  if (!qword_1ED9CC4B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB8CC, &type metadata for ViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for UserType()
{
  return &type metadata for UserType;
}

unint64_t sub_1D57C63A8()
{
  unint64_t result;

  result = qword_1ED9CC490;
  if (!qword_1ED9CC490)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserData, &type metadata for UserData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC490);
  }
  return result;
}

unint64_t sub_1D57C63EC()
{
  unint64_t result;

  result = qword_1ED9CC488;
  if (!qword_1ED9CC488)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserData, &type metadata for UserData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC488);
  }
  return result;
}

uint64_t UserData.init(userID:isUserIDTemporary:userType:userStartDate:ageBracket:ageBracketConfidenceLevel:gender:genderConfidenceLevel:userStorefrontID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>, uint64_t a12)
{
  char v12;

  v12 = *a4;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 17) = v12;
  *(_QWORD *)(a9 + 24) = a5;
  *(_DWORD *)(a9 + 32) = a6;
  *(float *)(a9 + 36) = a10;
  *(_DWORD *)(a9 + 40) = a7;
  *(float *)(a9 + 44) = a11;
  *(_QWORD *)(a9 + 48) = a8;
  *(_QWORD *)(a9 + 56) = a12;
  return result;
}

unint64_t sub_1D57C6468()
{
  unint64_t result;

  result = qword_1ED9CC478;
  if (!qword_1ED9CC478)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB07C8, &type metadata for UserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC478);
  }
  return result;
}

unint64_t sub_1D57C64AC()
{
  unint64_t result;

  result = qword_1ED9CC470;
  if (!qword_1ED9CC470)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB07F0, &type metadata for UserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC470);
  }
  return result;
}

unint64_t sub_1D57C64F8()
{
  unint64_t result;

  result = qword_1ED9D0BD0;
  if (!qword_1ED9D0BD0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TabiData, &type metadata for TabiData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0BD0);
  }
  return result;
}

unint64_t sub_1D57C653C()
{
  unint64_t result;

  result = qword_1ED9D0BC8;
  if (!qword_1ED9D0BC8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TabiData, &type metadata for TabiData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0BC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedType()
{
  return &type metadata for FeedType;
}

unint64_t sub_1D57C6590()
{
  unint64_t result;

  result = qword_1ED9CC448;
  if (!qword_1ED9CC448)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedData, &type metadata for FeedData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC448);
  }
  return result;
}

unint64_t sub_1D57C65D4()
{
  unint64_t result;

  result = qword_1ED9CC440;
  if (!qword_1ED9CC440)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedData, &type metadata for FeedData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC440);
  }
  return result;
}

NewsAnalytics::FeedData __swiftcall FeedData.init(feedType:feedID:)(NewsAnalytics::FeedType feedType, Swift::String_optional feedID)
{
  uint64_t v2;
  NewsAnalytics::FeedData result;

  *(_BYTE *)v2 = *(_BYTE *)feedType;
  *(Swift::String_optional *)(v2 + 8) = feedID;
  result.feedID = feedID;
  result.feedType = feedType;
  return result;
}

unint64_t sub_1D57C6630()
{
  unint64_t result;

  result = qword_1ED9CC438;
  if (!qword_1ED9CC438)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE358, &type metadata for FeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC438);
  }
  return result;
}

unint64_t sub_1D57C6674()
{
  unint64_t result;

  result = qword_1ED9CC430;
  if (!qword_1ED9CC430)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE380, &type metadata for FeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC430);
  }
  return result;
}

uint64_t sub_1D57C66E0()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1D57C66F4()
{
  unint64_t result;

  result = qword_1ED9CC420;
  if (!qword_1ED9CC420)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TagData, &type metadata for TagData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC420);
  }
  return result;
}

unint64_t sub_1D57C6738()
{
  unint64_t result;

  result = qword_1ED9CC418;
  if (!qword_1ED9CC418)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TagData, &type metadata for TagData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC418);
  }
  return result;
}

uint64_t TagData.tagID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1D57C67A8()
{
  unint64_t result;

  result = qword_1ED9CC3D8;
  if (!qword_1ED9CC3D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppData, &type metadata for AppData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3D8);
  }
  return result;
}

unint64_t sub_1D57C67EC()
{
  unint64_t result;

  result = qword_1ED9CC3D0;
  if (!qword_1ED9CC3D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppData, &type metadata for AppData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3D0);
  }
  return result;
}

unint64_t sub_1D57C6838()
{
  unint64_t result;

  result = qword_1ED9CC3C0;
  if (!qword_1ED9CC3C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5330, &type metadata for AppData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3C0);
  }
  return result;
}

unint64_t sub_1D57C687C()
{
  unint64_t result;

  result = qword_1ED9CC3B8;
  if (!qword_1ED9CC3B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5358, &type metadata for AppData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3B8);
  }
  return result;
}

unint64_t sub_1D57C68C8()
{
  unint64_t result;

  result = qword_1ED9CC3A8;
  if (!qword_1ED9CC3A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdData, &type metadata for AdData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3A8);
  }
  return result;
}

unint64_t sub_1D57C690C()
{
  unint64_t result;

  result = qword_1ED9CC3A0;
  if (!qword_1ED9CC3A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdData, &type metadata for AdData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3A0);
  }
  return result;
}

unint64_t sub_1D57C6950()
{
  unint64_t result;

  result = qword_1ED9D0B60;
  if (!qword_1ED9D0B60)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9D0B60);
  }
  return result;
}

uint64_t type metadata accessor for RollingTimestampConfigurationProvider()
{
  uint64_t result;

  result = qword_1ED9CEE68;
  if (!qword_1ED9CEE68)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1D57C69E0()
{
  unint64_t result;

  result = qword_1ED9C6E70;
  if (!qword_1ED9C6E70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CompetingGroupPersonalizationListData, &type metadata for CompetingGroupPersonalizationListData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6E70);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UserBundleSubscriptionContextData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UserBundleSubscriptionContextData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1D57C6AE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UserBundleSubscriptionContextData.init(from:)(a1, a2);
}

unint64_t sub_1D57C6AF8()
{
  unint64_t result;

  result = qword_1ED9CBE28;
  if (!qword_1ED9CBE28)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserBundleSubscriptionContextData, &type metadata for UserBundleSubscriptionContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CBE28);
  }
  return result;
}

unint64_t sub_1D57C6B3C()
{
  unint64_t result;

  result = qword_1ED9CBE20;
  if (!qword_1ED9CBE20)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserBundleSubscriptionContextData, &type metadata for UserBundleSubscriptionContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CBE20);
  }
  return result;
}

unint64_t sub_1D57C6B88()
{
  unint64_t result;

  result = qword_1ED9CBE10;
  if (!qword_1ED9CBE10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1940, &type metadata for UserBundleSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CBE10);
  }
  return result;
}

unint64_t sub_1D57C6BCC()
{
  unint64_t result;

  result = qword_1ED9CBE08;
  if (!qword_1ED9CBE08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1968, &type metadata for UserBundleSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CBE08);
  }
  return result;
}

uint64_t sub_1D57C6C18()
{
  return sub_1D5AAE178();
}

uint64_t sub_1D57C6C20()
{
  return sub_1D5AAE118();
}

uint64_t sub_1D57C6C28()
{
  return sub_1D5AAE118();
}

uint64_t sub_1D57C6C30()
{
  return sub_1D5AAE124();
}

unint64_t sub_1D57C6C38()
{
  unint64_t result;

  result = qword_1ED9CBC78;
  if (!qword_1ED9CBC78)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementOriginationData, &type metadata for AudioEngagementOriginationData);
    atomic_store(result, (unint64_t *)&qword_1ED9CBC78);
  }
  return result;
}

unint64_t sub_1D57C6C7C()
{
  unint64_t result;

  result = qword_1ED9CBC70;
  if (!qword_1ED9CBC70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementOriginationData, &type metadata for AudioEngagementOriginationData);
    atomic_store(result, (unint64_t *)&qword_1ED9CBC70);
  }
  return result;
}

uint64_t type metadata accessor for SportsSyncEventPrivacySampler()
{
  return objc_opt_self();
}

uint64_t sub_1D57C6CE0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57C6D10 + 4 * byte_1D5ABB6CE[*v0]))();
}

void sub_1D57C6D10(_QWORD *a1@<X8>)
{
  *a1 = 1954047342;
  a1[1] = 0xE400000000000000;
}

void sub_1D57C6D24(_QWORD *a1@<X8>)
{
  *a1 = 1953718636;
  a1[1] = 0xE400000000000000;
}

void sub_1D57C6D38(_QWORD *a1@<X8>)
{
  *a1 = 1819242352;
  a1[1] = 0xE400000000000000;
}

void sub_1D57C6D4C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x646570706F7264;
  a1[1] = v1;
}

void sub_1D57C6D64(_QWORD *a1@<X8>)
{
  *a1 = 1885956979;
  a1[1] = 0xE400000000000000;
}

void sub_1D57C6D78(_QWORD *a1@<X8>)
{
  *a1 = 1701736302;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1D57C6D8C()
{
  sub_1D57C6DD8();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57C6DD8()
{
  unint64_t result;

  result = qword_1ED9D09E8;
  if (!qword_1ED9D09E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedJournalGroupResultOutput, &type metadata for FeedJournalGroupResultOutput);
    atomic_store(result, (unint64_t *)&qword_1ED9D09E8);
  }
  return result;
}

unint64_t sub_1D57C6E1C()
{
  unint64_t result;

  result = qword_1ED9D09E0;
  if (!qword_1ED9D09E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedJournalGroupResultOutput, &type metadata for FeedJournalGroupResultOutput);
    atomic_store(result, (unint64_t *)&qword_1ED9D09E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for UserSubscriptionContextData()
{
  return &type metadata for UserSubscriptionContextData;
}

unint64_t sub_1D57C6E70()
{
  unint64_t result;

  result = qword_1ED9CB7F8;
  if (!qword_1ED9CB7F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserSubscriptionContextData, &type metadata for UserSubscriptionContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB7F8);
  }
  return result;
}

unint64_t sub_1D57C6EB4()
{
  unint64_t result;

  result = qword_1ED9CB7F0;
  if (!qword_1ED9CB7F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserSubscriptionContextData, &type metadata for UserSubscriptionContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB7F0);
  }
  return result;
}

NewsAnalytics::UserSubscriptionContextData __swiftcall UserSubscriptionContextData.init(isPurchaser:purchaseSources:)(Swift::Bool isPurchaser, Swift::OpaquePointer purchaseSources)
{
  uint64_t v2;
  NewsAnalytics::UserSubscriptionContextData result;

  *(_BYTE *)v2 = isPurchaser;
  *(Swift::OpaquePointer *)(v2 + 8) = purchaseSources;
  result.purchaseSources = purchaseSources;
  result.isPurchaser = isPurchaser;
  return result;
}

unint64_t sub_1D57C6F0C()
{
  unint64_t result;

  result = qword_1ED9CB7E0;
  if (!qword_1ED9CB7E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE9F8, &type metadata for UserSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB7E0);
  }
  return result;
}

unint64_t sub_1D57C6F50()
{
  unint64_t result;

  result = qword_1ED9CB7D8;
  if (!qword_1ED9CB7D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACEA20, &type metadata for UserSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB7D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayFeedPoolMyArticlesData()
{
  return &type metadata for TodayFeedPoolMyArticlesData;
}

ValueMetadata *type metadata accessor for ArticleScoreSummaryDataList()
{
  return &type metadata for ArticleScoreSummaryDataList;
}

uint64_t dispatch thunk of TimestampJitterFactoryType.makePrevailingJitter()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for NewsletterSubscriptionType()
{
  return &type metadata for NewsletterSubscriptionType;
}

ValueMetadata *type metadata accessor for NewsletterSubscriptionData()
{
  return &type metadata for NewsletterSubscriptionData;
}

unint64_t sub_1D57C6FE4()
{
  unint64_t result;

  result = qword_1ED9CB648;
  if (!qword_1ED9CB648)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NewsletterSubscriptionData, &type metadata for NewsletterSubscriptionData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB648);
  }
  return result;
}

unint64_t sub_1D57C7028()
{
  unint64_t result;

  result = qword_1ED9CB640;
  if (!qword_1ED9CB640)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NewsletterSubscriptionData, &type metadata for NewsletterSubscriptionData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB640);
  }
  return result;
}

uint64_t sub_1D57C706C(_QWORD *a1)
{
  return FeedJournalGroupResultData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FeedJournalGroupResultData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D57C70CC + 4 * byte_1D5AE9379[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D57C7100 + 4 * byte_1D5AE9374[v4]))();
}

uint64_t sub_1D57C7100(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C7108(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C7110);
  return result;
}

uint64_t sub_1D57C711C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C7124);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D57C7128(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C7130(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D57C713C()
{
  unint64_t result;

  result = qword_1ED9D0920;
  if (!qword_1ED9D0920)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9500, &type metadata for FeedJournalGroupResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0920);
  }
  return result;
}

unint64_t sub_1D57C7180()
{
  unint64_t result;

  result = qword_1ED9CB620;
  if (!qword_1ED9CB620)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleExposureContextData, &type metadata for ArticleExposureContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB620);
  }
  return result;
}

unint64_t sub_1D57C71C4()
{
  unint64_t result;

  result = qword_1ED9CB618;
  if (!qword_1ED9CB618)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleExposureContextData, &type metadata for ArticleExposureContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB618);
  }
  return result;
}

uint64_t type metadata accessor for PrivacyValidationProvider()
{
  return objc_opt_self();
}

void sub_1D57C7228(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1D57A3728(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void *))(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(void))(v2 + 40));
}

void sub_1D57C7238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1D57AA674(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

id sub_1D57C7240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D57A4880(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1D57C7258()
{
  return sub_1D579F8EC();
}

uint64_t sub_1D57C7270@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PaidSubscribedTagListData.init(from:)(a1, a2);
}

unint64_t sub_1D57C7284()
{
  unint64_t result;

  result = qword_1ED9CD640;
  if (!qword_1ED9CD640)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaidSubscribedTagListData, &type metadata for PaidSubscribedTagListData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD640);
  }
  return result;
}

unint64_t sub_1D57C72D0()
{
  unint64_t result;

  result = qword_1ED9CB5F0;
  if (!qword_1ED9CB5F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADEA88, &type metadata for PaidSubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5F0);
  }
  return result;
}

unint64_t sub_1D57C7314()
{
  unint64_t result;

  result = qword_1ED9CB5E8;
  if (!qword_1ED9CB5E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADEAB0, &type metadata for PaidSubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5E8);
  }
  return result;
}

unint64_t sub_1D57C7358()
{
  unint64_t result;

  result = qword_1ED9CB5C8;
  if (!qword_1ED9CB5C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailSignupUserActionData, &type metadata for EmailSignupUserActionData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5C8);
  }
  return result;
}

unint64_t sub_1D57C739C()
{
  unint64_t result;

  result = qword_1ED9CB5C0;
  if (!qword_1ED9CB5C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailSignupUserActionData, &type metadata for EmailSignupUserActionData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5C0);
  }
  return result;
}

uint64_t sub_1D57C73E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return AutoSubscribedTagListData.init(from:)(a1, a2);
}

unint64_t sub_1D57C73F4()
{
  unint64_t result;

  result = qword_1ED9CD638;
  if (!qword_1ED9CD638)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AutoSubscribedTagListData, &type metadata for AutoSubscribedTagListData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD638);
  }
  return result;
}

unint64_t sub_1D57C7440()
{
  unint64_t result;

  result = qword_1ED9CB598;
  if (!qword_1ED9CB598)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7838, &type metadata for AutoSubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB598);
  }
  return result;
}

unint64_t sub_1D57C7484()
{
  unint64_t result;

  result = qword_1ED9CB590;
  if (!qword_1ED9CB590)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7860, &type metadata for AutoSubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB590);
  }
  return result;
}

uint64_t dispatch thunk of TrackerConfigurationType.sportsHeadlineExposureNoiseRate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1D57C74D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SubscribedSportsListData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for SubscribedSportsListData()
{
  return &type metadata for SubscribedSportsListData;
}

unint64_t sub_1D57C74F4()
{
  unint64_t result;

  result = qword_1ED9D0838;
  if (!qword_1ED9D0838)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribedSportsListData, &type metadata for SubscribedSportsListData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0838);
  }
  return result;
}

unint64_t sub_1D57C7538()
{
  unint64_t result;

  result = qword_1ED9D0830;
  if (!qword_1ED9D0830)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribedSportsListData, &type metadata for SubscribedSportsListData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0830);
  }
  return result;
}

unint64_t sub_1D57C7584()
{
  unint64_t result;

  result = qword_1ED9D0820;
  if (!qword_1ED9D0820)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF584, &type metadata for SubscribedSportsListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0820);
  }
  return result;
}

unint64_t sub_1D57C75C8()
{
  unint64_t result;

  result = qword_1ED9D0818;
  if (!qword_1ED9D0818)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF5AC, &type metadata for SubscribedSportsListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0818);
  }
  return result;
}

uint64_t type metadata accessor for SharedItemEventProcessor()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for NotificationSettingsData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 14) = 0;
    *(_WORD *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 15) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 15) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NotificationSettingsData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 15))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1D57C76C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NotificationSettingsData.init(from:)(a1, a2);
}

unint64_t sub_1D57C76D8()
{
  unint64_t result;

  result = qword_1ED9CB418;
  if (!qword_1ED9CB418)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSettingsData, &type metadata for NotificationSettingsData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB418);
  }
  return result;
}

unint64_t sub_1D57C771C()
{
  unint64_t result;

  result = qword_1ED9CB410;
  if (!qword_1ED9CB410)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSettingsData, &type metadata for NotificationSettingsData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB410);
  }
  return result;
}

uint64_t NotificationSettingsData.isEmailNewsletterSwitchEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 11);
}

unint64_t sub_1D57C7770()
{
  unint64_t result;

  result = qword_1ED9CB400;
  if (!qword_1ED9CB400)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6E24, &type metadata for NotificationSettingsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB400);
  }
  return result;
}

unint64_t sub_1D57C77B4()
{
  unint64_t result;

  result = qword_1ED9CB3F8;
  if (!qword_1ED9CB3F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6E4C, &type metadata for NotificationSettingsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB3F8);
  }
  return result;
}

uint64_t NotificationSettingsData.isMarketingNotificationEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

unint64_t sub_1D57C7808()
{
  unint64_t result;

  result = qword_1ED9CB260;
  if (!qword_1ED9CB260)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueExposureContextData, &type metadata for IssueExposureContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB260);
  }
  return result;
}

unint64_t sub_1D57C784C()
{
  unint64_t result;

  result = qword_1ED9CB258;
  if (!qword_1ED9CB258)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueExposureContextData, &type metadata for IssueExposureContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB258);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BundleSubscriptionStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D57C78DC + 4 * byte_1D5AC7FC9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D57C7910 + 4 * byte_1D5AC7FC4[v4]))();
}

uint64_t sub_1D57C7910(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C7918(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C7920);
  return result;
}

uint64_t sub_1D57C792C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C7934);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D57C7938(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C7940(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C794C()
{
  sub_1D57AA7FC();
  return sub_1D5AAE928();
}

NewsAnalytics::BundleSubscriptionStatus_optional sub_1D57C79A8(Swift::String *a1)
{
  return BundleSubscriptionStatus.init(rawValue:)(*a1);
}

ValueMetadata *type metadata accessor for BundleSubscriptionStatus()
{
  return &type metadata for BundleSubscriptionStatus;
}

unint64_t sub_1D57C79C4()
{
  unint64_t result;

  result = qword_1ED9CB250;
  if (!qword_1ED9CB250)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BundleSubscriptionStatus, &type metadata for BundleSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1ED9CB250);
  }
  return result;
}

uint64_t sub_1D57C7A08()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1ED9D0758);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED9D0758);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8380], v0);
}

uint64_t sub_1D57C7A60()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1ED9CE5E8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED9CE5E8);
  *(_QWORD *)v1 = 0x726F70732E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xEA00000000007374;
  *(_QWORD *)(v1 + 16) = 6;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

unint64_t sub_1D57C7AE0()
{
  unint64_t result;

  result = qword_1ED9CAF18;
  if (!qword_1ED9CAF18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserChannelContextData, &type metadata for UserChannelContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CAF18);
  }
  return result;
}

unint64_t sub_1D57C7B24()
{
  unint64_t result;

  result = qword_1ED9CAF10;
  if (!qword_1ED9CAF10)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserChannelContextData, &type metadata for UserChannelContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CAF10);
  }
  return result;
}

uint64_t type metadata accessor for TimestampJitterFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PortraitEventProcessor()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for HeadlineScoringContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D57C7BF4 + 4 * byte_1D5ABE7B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D57C7C28 + 4 * byte_1D5ABE7B0[v4]))();
}

uint64_t sub_1D57C7C28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C7C30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C7C38);
  return result;
}

uint64_t sub_1D57C7C44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C7C4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D57C7C50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C7C58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineScoringContext()
{
  return &type metadata for HeadlineScoringContext;
}

ValueMetadata *type metadata accessor for ContentEnvironmentData()
{
  return &type metadata for ContentEnvironmentData;
}

unint64_t sub_1D57C7C84()
{
  unint64_t result;

  result = qword_1ED9CAE10;
  if (!qword_1ED9CAE10)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ContentEnvironmentData, &type metadata for ContentEnvironmentData);
    atomic_store(result, (unint64_t *)&qword_1ED9CAE10);
  }
  return result;
}

unint64_t sub_1D57C7CC8()
{
  unint64_t result;

  result = qword_1ED9CAE08;
  if (!qword_1ED9CAE08)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ContentEnvironmentData, &type metadata for ContentEnvironmentData);
    atomic_store(result, (unint64_t *)&qword_1ED9CAE08);
  }
  return result;
}

NewsAnalytics::ContentEnvironmentData __swiftcall ContentEnvironmentData.init(userDefaults:)(NSUserDefaults userDefaults)
{
  _BYTE *v1;
  _BYTE *v2;
  NewsAnalytics::ContentEnvironmentData result;
  char v4;

  v2 = v1;
  result.type = ContentEnvironmentType.init(userDefaults:)(userDefaults);
  *v2 = v4;
  return result;
}

unint64_t sub_1D57C7D48()
{
  unint64_t result;

  result = qword_1ED9CADF8;
  if (!qword_1ED9CADF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0694, &type metadata for ContentEnvironmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CADF8);
  }
  return result;
}

unint64_t sub_1D57C7D8C()
{
  unint64_t result;

  result = qword_1ED9CADF0;
  if (!qword_1ED9CADF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD06BC, &type metadata for ContentEnvironmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CADF0);
  }
  return result;
}

uint64_t sub_1D57C7DD8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SubscribedTagListData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for SubscribedTagListData()
{
  return &type metadata for SubscribedTagListData;
}

unint64_t sub_1D57C7DFC()
{
  unint64_t result;

  result = qword_1ED9CD4B8;
  if (!qword_1ED9CD4B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribedTagListData, &type metadata for SubscribedTagListData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD4B8);
  }
  return result;
}

uint64_t SubscribedTagListData.tagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1D57C7E50()
{
  unint64_t result;

  result = qword_1ED9CAB20;
  if (!qword_1ED9CAB20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF384, &type metadata for SubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CAB20);
  }
  return result;
}

unint64_t sub_1D57C7E94()
{
  unint64_t result;

  result = qword_1ED9CAB18;
  if (!qword_1ED9CAB18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF3AC, &type metadata for SubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CAB18);
  }
  return result;
}

unint64_t sub_1D57C7ED8()
{
  unint64_t result;

  result = qword_1ED9CD910;
  if (!qword_1ED9CD910)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScienceExperimentData, &type metadata for ScienceExperimentData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD910);
  }
  return result;
}

unint64_t sub_1D57C7F1C()
{
  unint64_t result;

  result = qword_1ED9CDC18;
  if (!qword_1ED9CDC18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScienceExperimentData, &type metadata for ScienceExperimentData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDC18);
  }
  return result;
}

unint64_t sub_1D57C7F68()
{
  unint64_t result;

  result = qword_1ED9CDC10;
  if (!qword_1ED9CDC10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABAF24, &type metadata for ScienceExperimentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDC10);
  }
  return result;
}

unint64_t sub_1D57C7FAC()
{
  unint64_t result;

  result = qword_1ED9CDC08;
  if (!qword_1ED9CDC08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABAF4C, &type metadata for ScienceExperimentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDC08);
  }
  return result;
}

unint64_t sub_1D57C7FF8()
{
  unint64_t result;

  result = qword_1ED9D04D0;
  if (!qword_1ED9D04D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityCountData, &type metadata for LiveActivityCountData);
    atomic_store(result, (unint64_t *)&qword_1ED9D04D0);
  }
  return result;
}

unint64_t sub_1D57C803C()
{
  unint64_t result;

  result = qword_1ED9D04C8;
  if (!qword_1ED9D04C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityCountData, &type metadata for LiveActivityCountData);
    atomic_store(result, (unint64_t *)&qword_1ED9D04C8);
  }
  return result;
}

uint64_t sub_1D57C8080(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1D57A84D4(&qword_1ED9CED58, a2, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatEventService, (uint64_t)&unk_1D5AC74F8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1D57C80BC()
{
  id v0;

  if (qword_1ED9CE440 != -1)
    swift_once();
  v0 = (id)qword_1ED9CE430;
  sub_1D5AAEA24();
  sub_1D5AAE328();

  sub_1D58ED5CC();
}

uint64_t sub_1D57C8140(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CED38, MEMORY[0x1E0CF8380]);
}

uint64_t sub_1D57C815C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CE5A8, MEMORY[0x1E0CF8078]);
}

uint64_t type metadata accessor for AppSessionResumeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CA740);
}

uint64_t sub_1D57C818C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCF60, MEMORY[0x1E0CF8380]);
}

uint64_t sub_1D57C81A8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCC18, MEMORY[0x1E0CF8078]);
}

uint64_t sub_1D57C81C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1ED9CD4A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCF60, a1);
}

uint64_t sub_1D57C81E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCF58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC18, a1);
}

uint64_t storeEnumTagSinglePayload for WidgetEngagementData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 440) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 448) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 448) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetEngagementData()
{
  return &type metadata for WidgetEngagementData;
}

unint64_t sub_1D57C82D0()
{
  unint64_t result;

  result = qword_1ED9CA670;
  if (!qword_1ED9CA670)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetEngagementData, &type metadata for WidgetEngagementData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA670);
  }
  return result;
}

unint64_t sub_1D57C8314()
{
  unint64_t result;

  result = qword_1ED9CA668;
  if (!qword_1ED9CA668)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetEngagementData, &type metadata for WidgetEngagementData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA668);
  }
  return result;
}

uint64_t sub_1D57C8358@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return WebAccessTagListData.init(from:)(a1, a2);
}

unint64_t sub_1D57C836C()
{
  unint64_t result;

  result = qword_1ED9CD490;
  if (!qword_1ED9CD490)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WebAccessTagListData, &type metadata for WebAccessTagListData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD490);
  }
  return result;
}

unint64_t sub_1D57C83B8()
{
  unint64_t result;

  result = qword_1ED9C6A50;
  if (!qword_1ED9C6A50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE3A0, &type metadata for WebAccessTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6A50);
  }
  return result;
}

unint64_t sub_1D57C83FC()
{
  unint64_t result;

  result = qword_1ED9C6A48;
  if (!qword_1ED9C6A48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE3C8, &type metadata for WebAccessTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6A48);
  }
  return result;
}

unint64_t sub_1D57C8440()
{
  unint64_t result;

  result = qword_1ED9D0210;
  if (!qword_1ED9D0210)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEventStorageData, &type metadata for UserEventStorageData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0210);
  }
  return result;
}

unint64_t sub_1D57C8484()
{
  unint64_t result;

  result = qword_1ED9D0208;
  if (!qword_1ED9D0208)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEventStorageData, &type metadata for UserEventStorageData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0208);
  }
  return result;
}

void sub_1D57C84C8()
{
  sub_1D57AABF8();
}

unint64_t sub_1D57C84E8()
{
  unint64_t result;

  result = qword_1ED9CD7F8;
  if (!qword_1ED9CD7F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ShareOriginationData, &type metadata for ShareOriginationData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD7F8);
  }
  return result;
}

unint64_t sub_1D57C852C()
{
  unint64_t result;

  result = qword_1ED9CDBF8;
  if (!qword_1ED9CDBF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ShareOriginationData, &type metadata for ShareOriginationData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDBF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferringArticleData()
{
  return &type metadata for ReferringArticleData;
}

unint64_t sub_1D57C8580()
{
  unint64_t result;

  result = qword_1ED9CA660;
  if (!qword_1ED9CA660)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ReferringArticleData, &type metadata for ReferringArticleData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA660);
  }
  return result;
}

unint64_t sub_1D57C85C4()
{
  unint64_t result;

  result = qword_1ED9CA658;
  if (!qword_1ED9CA658)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ReferringArticleData, &type metadata for ReferringArticleData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA658);
  }
  return result;
}

unint64_t sub_1D57C8610()
{
  unint64_t result;

  result = qword_1ED9CD900;
  if (!qword_1ED9CD900)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyPlacementData, &type metadata for JourneyPlacementData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD900);
  }
  return result;
}

unint64_t sub_1D57C8654()
{
  unint64_t result;

  result = qword_1ED9CDBF0;
  if (!qword_1ED9CDBF0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyPlacementData, &type metadata for JourneyPlacementData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDBF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueViewContextData()
{
  return &type metadata for IssueViewContextData;
}

unint64_t sub_1D57C86A8()
{
  unint64_t result;

  result = qword_1ED9CA4C0;
  if (!qword_1ED9CA4C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueViewContextData, &type metadata for IssueViewContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA4C0);
  }
  return result;
}

unint64_t sub_1D57C86EC()
{
  unint64_t result;

  result = qword_1ED9CA4B8;
  if (!qword_1ED9CA4B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueViewContextData, &type metadata for IssueViewContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA4B8);
  }
  return result;
}

uint64_t type metadata accessor for FeedLoadFailureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9D0118);
}

uint64_t storeEnumTagSinglePayload for FeedJournalEntryData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1D57C8780(_QWORD *a1)
{
  return FeedJournalEntryData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FeedJournalEntryData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D57C87E0 + 4 * byte_1D5AC0B65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D57C8814 + 4 * byte_1D5AC0B60[v4]))();
}

uint64_t sub_1D57C8814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C881C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57C8824);
  return result;
}

uint64_t sub_1D57C8830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57C8838);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D57C883C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57C8844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D57C8850()
{
  unint64_t result;

  result = qword_1ED9D00F0;
  if (!qword_1ED9D00F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0CE8, &type metadata for FeedJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D00F0);
  }
  return result;
}

unint64_t sub_1D57C889C()
{
  unint64_t result;

  result = qword_1ED9D00D0;
  if (!qword_1ED9D00D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3CA0, &type metadata for BadgeOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D00D0);
  }
  return result;
}

unint64_t sub_1D57C88E0()
{
  unint64_t result;

  result = qword_1ED9D00C8;
  if (!qword_1ED9D00C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3CC8, &type metadata for BadgeOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D00C8);
  }
  return result;
}

uint64_t type metadata accessor for AppSessionStartEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CA3C8);
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for AppSessionStartEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57C8950(uint64_t a1)
{
  uint64_t started;

  started = type metadata accessor for AppSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_1D57C898C(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for AppSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_1D57C89D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionStartEvent.Model.init(from:)(a1, a2);
}

unint64_t sub_1D57C89EC()
{
  unint64_t result;

  result = qword_1ED9CD7E8;
  if (!qword_1ED9CD7E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0B44, &type metadata for AppSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD7E8);
  }
  return result;
}

unint64_t sub_1D57C8A30()
{
  unint64_t result;

  result = qword_1ED9CDB28;
  if (!qword_1ED9CDB28)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0B6C, &type metadata for AppSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDB28);
  }
  return result;
}

unint64_t sub_1D57C8A74()
{
  unint64_t result;

  result = qword_1ED9CDB20;
  if (!qword_1ED9CDB20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0BFC, &type metadata for AppSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDB20);
  }
  return result;
}

uint64_t sub_1D57C8AB8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCEE0, MEMORY[0x1E0CF8380]);
}

uint64_t sub_1D57C8AD4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCBD0, MEMORY[0x1E0CF8078]);
}

uint64_t sub_1D57C8AF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCF00, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCEE0, a1);
}

uint64_t sub_1D57C8B14@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCED8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCBD0, a1);
}

ValueMetadata *type metadata accessor for SessionObserverKind()
{
  return &type metadata for SessionObserverKind;
}

ValueMetadata *type metadata accessor for SearchResultsSource()
{
  return &type metadata for SearchResultsSource;
}

unint64_t sub_1D57C8B58()
{
  unint64_t result;

  result = qword_1ED9CA380;
  if (!qword_1ED9CA380)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InGroupPositionData, &type metadata for InGroupPositionData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA380);
  }
  return result;
}

unint64_t sub_1D57C8B9C()
{
  unint64_t result;

  result = qword_1ED9CA378;
  if (!qword_1ED9CA378)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InGroupPositionData, &type metadata for InGroupPositionData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA378);
  }
  return result;
}

unint64_t sub_1D57C8BE0()
{
  unint64_t result;

  result = qword_1ED9D0000;
  if (!qword_1ED9D0000)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedGroupLayoutData, &type metadata for FeedGroupLayoutData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0000);
  }
  return result;
}

unint64_t sub_1D57C8C24()
{
  unint64_t result;

  result = qword_1ED9CFFF8;
  if (!qword_1ED9CFFF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedGroupLayoutData, &type metadata for FeedGroupLayoutData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFF8);
  }
  return result;
}

unint64_t sub_1D57C8C70()
{
  unint64_t result;

  result = qword_1ED9CFFF0;
  if (!qword_1ED9CFFF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8B30, &type metadata for FeedGroupLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFF0);
  }
  return result;
}

unint64_t sub_1D57C8CB4()
{
  unint64_t result;

  result = qword_1ED9CFFE8;
  if (!qword_1ED9CFFE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8B58, &type metadata for FeedGroupLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementData()
{
  return &type metadata for AudioEngagementData;
}

unint64_t sub_1D57C8D10()
{
  unint64_t result;

  result = qword_1ED9CA358;
  if (!qword_1ED9CA358)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementData, &type metadata for AudioEngagementData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA358);
  }
  return result;
}

unint64_t sub_1D57C8D54()
{
  unint64_t result;

  result = qword_1ED9CA350;
  if (!qword_1ED9CA350)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementData, &type metadata for AudioEngagementData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA350);
  }
  return result;
}

unint64_t sub_1D57C8D98()
{
  unint64_t result;

  result = qword_1ED9CEC58;
  if (!qword_1ED9CEC58)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleTextSizeData, &type metadata for ArticleTextSizeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC58);
  }
  return result;
}

unint64_t sub_1D57C8DDC()
{
  unint64_t result;

  result = qword_1ED9CEC50;
  if (!qword_1ED9CEC50)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleTextSizeData, &type metadata for ArticleTextSizeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC50);
  }
  return result;
}

unint64_t sub_1D57C8E20()
{
  unint64_t result;

  result = qword_1ED9C6958;
  if (!qword_1ED9C6958)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppStateRestoreData, &type metadata for AppStateRestoreData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6958);
  }
  return result;
}

unint64_t sub_1D57C8E64()
{
  unint64_t result;

  result = qword_1ED9C6950;
  if (!qword_1ED9C6950)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppStateRestoreData, &type metadata for AppStateRestoreData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6950);
  }
  return result;
}

uint64_t sub_1D57C8EA8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57C8ED4 + 4 * byte_1D5AE1658[*v0]))();
}

void sub_1D57C8ED4(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001D5AEC2C0;
}

void sub_1D57C8EF4(char *a1@<X8>)
{
  strcpy(a1, "failedToRender");
  a1[15] = -18;
}

void sub_1D57C8F1C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "requestFailed");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1D57C8F44()
{
  sub_1D57C8F90();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57C8F90()
{
  unint64_t result;

  result = qword_1ED9CCED0;
  if (!qword_1ED9CCED0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdJournalEntryError, &type metadata for AdJournalEntryError);
    atomic_store(result, (unint64_t *)&qword_1ED9CCED0);
  }
  return result;
}

unint64_t sub_1D57C8FD4()
{
  unint64_t result;

  result = qword_1ED9CCEC8;
  if (!qword_1ED9CCEC8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchResponseData, &type metadata for SearchResponseData);
    atomic_store(result, (unint64_t *)&qword_1ED9CCEC8);
  }
  return result;
}

unint64_t sub_1D57C9018()
{
  unint64_t result;

  result = qword_1ED9CD3A0;
  if (!qword_1ED9CD3A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchResponseData, &type metadata for SearchResponseData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD3A0);
  }
  return result;
}

unint64_t sub_1D57C905C()
{
  unint64_t result;

  result = qword_1ED9CA100;
  if (!qword_1ED9CA100)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseOffersData, &type metadata for PurchaseOffersData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA100);
  }
  return result;
}

unint64_t sub_1D57C90A0()
{
  unint64_t result;

  result = qword_1ED9CA0F8;
  if (!qword_1ED9CA0F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseOffersData, &type metadata for PurchaseOffersData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA0F8);
  }
  return result;
}

unint64_t sub_1D57C90E4()
{
  unint64_t result;

  result = qword_1ED9CFF88;
  if (!qword_1ED9CFF88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FormatSubgroupData, &type metadata for FormatSubgroupData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFF88);
  }
  return result;
}

unint64_t sub_1D57C9128()
{
  unint64_t result;

  result = qword_1ED9CFF80;
  if (!qword_1ED9CFF80)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FormatSubgroupData, &type metadata for FormatSubgroupData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFF80);
  }
  return result;
}

uint64_t type metadata accessor for FollowingViewEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9BC8);
}

uint64_t sub_1D57C9188@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return AutoSubscribedData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for AutoSubscribedData()
{
  return &type metadata for AutoSubscribedData;
}

unint64_t sub_1D57C91AC()
{
  unint64_t result;

  result = qword_1ED9C9920;
  if (!qword_1ED9C9920)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AutoSubscribedData, &type metadata for AutoSubscribedData);
    atomic_store(result, (unint64_t *)&qword_1ED9C9920);
  }
  return result;
}

unint64_t sub_1D57C91F0()
{
  unint64_t result;

  result = qword_1ED9C9918;
  if (!qword_1ED9C9918)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AutoSubscribedData, &type metadata for AutoSubscribedData);
    atomic_store(result, (unint64_t *)&qword_1ED9C9918);
  }
  return result;
}

unint64_t sub_1D57C923C()
{
  unint64_t result;

  result = qword_1ED9C9908;
  if (!qword_1ED9C9908)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9200, &type metadata for AutoSubscribedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C9908);
  }
  return result;
}

unint64_t sub_1D57C9280()
{
  unint64_t result;

  result = qword_1ED9C9900;
  if (!qword_1ED9C9900)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9228, &type metadata for AutoSubscribedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C9900);
  }
  return result;
}

uint64_t type metadata accessor for ArticleUnlikeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CFD68);
}

uint64_t type metadata accessor for AppSessionEndEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C96B8);
}

uint64_t sub_1D57C92F4()
{
  return sub_1D57A8DE4(&qword_1ED9C96B0, type metadata accessor for AppSessionEndEvent, (uint64_t)&protocol conformance descriptor for AppSessionEndEvent);
}

unint64_t sub_1D57C9310()
{
  unint64_t result;

  result = qword_1ED9CFC98;
  if (!qword_1ED9CFC98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEmbeddingData, &type metadata for UserEmbeddingData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC98);
  }
  return result;
}

unint64_t sub_1D57C9354()
{
  unint64_t result;

  result = qword_1ED9CFC90;
  if (!qword_1ED9CFC90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEmbeddingData, &type metadata for UserEmbeddingData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC90);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTagListData()
{
  return &type metadata for SportsTagListData;
}

NewsAnalytics::SportsTagListData __swiftcall SportsTagListData.init(tagIDs:)(NewsAnalytics::SportsTagListData tagIDs)
{
  NewsAnalytics::SportsTagListData *v1;

  v1->tagIDs._rawValue = tagIDs.tagIDs._rawValue;
  return tagIDs;
}

unint64_t sub_1D57C93B8()
{
  unint64_t result;

  result = qword_1ED9CFC48;
  if (!qword_1ED9CFC48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1740, &type metadata for SportsTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC48);
  }
  return result;
}

unint64_t sub_1D57C93FC()
{
  unint64_t result;

  result = qword_1ED9CFC40;
  if (!qword_1ED9CFC40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1768, &type metadata for SportsTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC40);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferralGroupData()
{
  return &type metadata for ReferralGroupData;
}

unint64_t sub_1D57C9450()
{
  unint64_t result;

  result = qword_1ED9CFC30;
  if (!qword_1ED9CFC30)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ReferralGroupData, &type metadata for ReferralGroupData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC30);
  }
  return result;
}

unint64_t sub_1D57C9494()
{
  unint64_t result;

  result = qword_1ED9CFC28;
  if (!qword_1ED9CFC28)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ReferralGroupData, &type metadata for ReferralGroupData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC28);
  }
  return result;
}

uint64_t sub_1D57C94E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for HeartbeatEventService();
  result = sub_1D5AAE058();
  if (result)
  {
    v4 = result;
    result = sub_1D57A8494(&qword_1ED9CED60, (uint64_t)&unk_1D5AC7560);
    *a2 = v4;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FeedLayoutTracker.init(tracker:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t type metadata accessor for ArticleShareEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9328);
}

uint64_t type metadata accessor for UnfollowTagEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C91A0);
}

uint64_t storeEnumTagSinglePayload for SubscriptionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SubscriptionData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1D57C9618@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscriptionData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for SubscriptionData()
{
  return &type metadata for SubscriptionData;
}

unint64_t sub_1D57C963C()
{
  unint64_t result;

  result = qword_1ED9C8F88;
  if (!qword_1ED9C8F88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionData, &type metadata for SubscriptionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8F88);
  }
  return result;
}

unint64_t sub_1D57C9680()
{
  unint64_t result;

  result = qword_1ED9C8F80;
  if (!qword_1ED9C8F80)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionData, &type metadata for SubscriptionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8F80);
  }
  return result;
}

uint64_t SubscriptionData.subscribedTagList.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1D57C96D8()
{
  unint64_t result;

  result = qword_1ED9C8F60;
  if (!qword_1ED9C8F60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE42EC, &type metadata for SubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8F60);
  }
  return result;
}

unint64_t sub_1D57C971C()
{
  unint64_t result;

  result = qword_1ED9C8F58;
  if (!qword_1ED9C8F58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4314, &type metadata for SubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8F58);
  }
  return result;
}

unint64_t sub_1D57C9768()
{
  unint64_t result;

  result = qword_1ED9C8F48;
  if (!qword_1ED9C8F48)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ShareContextData, &type metadata for ShareContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8F48);
  }
  return result;
}

unint64_t sub_1D57C97AC()
{
  unint64_t result;

  result = qword_1ED9C8F40;
  if (!qword_1ED9C8F40)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ShareContextData, &type metadata for ShareContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8F40);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferralFeedData()
{
  return &type metadata for ReferralFeedData;
}

unint64_t sub_1D57C9800()
{
  unint64_t result;

  result = qword_1ED9CFB20;
  if (!qword_1ED9CFB20)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ReferralFeedData, &type metadata for ReferralFeedData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFB20);
  }
  return result;
}

unint64_t sub_1D57C9844()
{
  unint64_t result;

  result = qword_1ED9CFB18;
  if (!qword_1ED9CFB18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ReferralFeedData, &type metadata for ReferralFeedData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFB18);
  }
  return result;
}

unint64_t sub_1D57C9890()
{
  unint64_t result;

  result = qword_1ED9CE470;
  if (!qword_1ED9CE470)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleRevealData, &type metadata for PuzzleRevealData);
    atomic_store(result, (unint64_t *)&qword_1ED9CE470);
  }
  return result;
}

unint64_t sub_1D57C98D4()
{
  unint64_t result;

  result = qword_1ED9CEC18;
  if (!qword_1ED9CEC18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleRevealData, &type metadata for PuzzleRevealData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC18);
  }
  return result;
}

ValueMetadata *type metadata accessor for OsInstallVariant()
{
  return &type metadata for OsInstallVariant;
}

uint64_t storeEnumTagSinglePayload for NotificationData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 74) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 74) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationData()
{
  return &type metadata for NotificationData;
}

unint64_t sub_1D57C99A0()
{
  unint64_t result;

  result = qword_1ED9C8D88;
  if (!qword_1ED9C8D88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationData, &type metadata for NotificationData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8D88);
  }
  return result;
}

unint64_t sub_1D57C99E4()
{
  unint64_t result;

  result = qword_1ED9C8D80;
  if (!qword_1ED9C8D80)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationData, &type metadata for NotificationData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8D80);
  }
  return result;
}

unint64_t sub_1D57C9A30()
{
  unint64_t result;

  result = qword_1ED9C8D58;
  if (!qword_1ED9C8D58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6DCC, &type metadata for NetworkEventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8D58);
  }
  return result;
}

unint64_t sub_1D57C9A74()
{
  unint64_t result;

  result = qword_1ED9C8D50;
  if (!qword_1ED9C8D50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6DF4, &type metadata for NetworkEventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8D50);
  }
  return result;
}

uint64_t sub_1D57C9AB8()
{
  return sub_1D57A8DE4(&qword_1ED9C8D68, (uint64_t (*)(uint64_t))type metadata accessor for NetworkEventData, (uint64_t)&protocol conformance descriptor for NetworkEventData);
}

uint64_t sub_1D57C9AE4()
{
  return sub_1D57A8DE4(&qword_1ED9C8D60, (uint64_t (*)(uint64_t))type metadata accessor for NetworkEventData, (uint64_t)&protocol conformance descriptor for NetworkEventData);
}

uint64_t sub_1D57C9B10@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MutedTagListData.init(from:)(a1, a2);
}

unint64_t sub_1D57C9B24()
{
  unint64_t result;

  result = qword_1ED9CD778;
  if (!qword_1ED9CD778)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MutedTagListData, &type metadata for MutedTagListData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD778);
  }
  return result;
}

unint64_t sub_1D57C9B70()
{
  unint64_t result;

  result = qword_1ED9CDAE0;
  if (!qword_1ED9CDAE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB250C, &type metadata for MutedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDAE0);
  }
  return result;
}

unint64_t sub_1D57C9BB4()
{
  unint64_t result;

  result = qword_1ED9CDAD8;
  if (!qword_1ED9CDAD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2534, &type metadata for MutedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDAD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueViewContext()
{
  return &type metadata for IssueViewContext;
}

unint64_t sub_1D57C9C08()
{
  unint64_t result;

  result = qword_1ED9C8B90;
  if (!qword_1ED9C8B90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedPositionData, &type metadata for FeedPositionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8B90);
  }
  return result;
}

unint64_t sub_1D57C9C4C()
{
  unint64_t result;

  result = qword_1ED9C8B88;
  if (!qword_1ED9C8B88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedPositionData, &type metadata for FeedPositionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8B88);
  }
  return result;
}

void sub_1D57C9C90(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x74694B64756F6C63;
  if (v2 != 1)
    v4 = 0x656764457377656ELL;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE800000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1D57C9CF0()
{
  sub_1D57C9D3C();
  return sub_1D5AAE91C();
}

unint64_t sub_1D57C9D3C()
{
  unint64_t result;

  result = qword_1ED9CFA50;
  if (!qword_1ED9CFA50)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedConfigSource, &type metadata for FeedConfigSource);
    atomic_store(result, (unint64_t *)&qword_1ED9CFA50);
  }
  return result;
}

unint64_t sub_1D57C9D80()
{
  unint64_t result;

  result = qword_1ED9CFA48;
  if (!qword_1ED9CFA48)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedConfigSource, &type metadata for FeedConfigSource);
    atomic_store(result, (unint64_t *)&qword_1ED9CFA48);
  }
  return result;
}

uint64_t type metadata accessor for EmailSignupEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8AD0);
}

uint64_t type metadata accessor for EOAFeedViewEvent(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9CCDB0);
}

uint64_t type metadata accessor for AudioEngageEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8968);
}

uint64_t type metadata accessor for ArticleViewEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8790);
}

uint64_t type metadata accessor for ArticleSaveEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C85C0);
}

uint64_t type metadata accessor for ArticleLikeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8448);
}

void sub_1D57C9E3C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D57C9E48()
{
  uint64_t v0;

  return sub_1D57A69E8((_QWORD *)(v0 + 16));
}

uint64_t sub_1D57C9E50(_QWORD *a1)
{
  return sub_1D57AFDD4(a1);
}

uint64_t sub_1D57C9E58()
{
  return sub_1D57BA7F8();
}

unint64_t sub_1D57C9E78()
{
  unint64_t result;

  result = qword_1ED9C8208;
  if (!qword_1ED9C8208)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for StartMethodData, &type metadata for StartMethodData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8208);
  }
  return result;
}

unint64_t sub_1D57C9EBC()
{
  unint64_t result;

  result = qword_1ED9C8200;
  if (!qword_1ED9C8200)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for StartMethodData, &type metadata for StartMethodData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8200);
  }
  return result;
}

unint64_t sub_1D57C9F00()
{
  unint64_t result;

  result = qword_1ED9C81F8;
  if (!qword_1ED9C81F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for StartMethodData, &type metadata for StartMethodData);
    atomic_store(result, (unint64_t *)&qword_1ED9C81F8);
  }
  return result;
}

uint64_t sub_1D57C9F4C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v4 = result;
  v6 = *(char *)(result + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionStartSource);
  if (v6 != 4)
  {
    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
    sub_1D5AAEAC0();
    sub_1D57C02F0(0, (unint64_t *)&qword_1ED9CCA30, (unint64_t *)&qword_1ED9CCA40, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = swift_allocObject();
    v15 = v14;
    *(_OWORD *)(v14 + 16) = xmmword_1D5ABF230;
    if (*(_BYTE *)(v4 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind))
    {
      if (*(_BYTE *)(v4 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind) == 1)
      {
        v16 = 0xE500000000000000;
        v17 = 0x6F69647561;
      }
      else
      {
        v17 = 0x7274656D656C6574;
        v16 = 0xE900000000000079;
      }
    }
    else
    {
      v16 = 0xE300000000000000;
      v17 = 7368801;
    }
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 64) = sub_1D57B356C();
    *(_QWORD *)(v15 + 32) = v17;
    *(_QWORD *)(v15 + 40) = v16;
    __asm { BR              X12 }
  }
  if (a3)
  {
    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
    swift_bridgeObjectRetain();
    v9 = (void *)sub_1D5AAEAC0();
    sub_1D57C02F0(0, (unint64_t *)&qword_1ED9CCA30, (unint64_t *)&qword_1ED9CCA40, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = swift_allocObject();
    v11 = (_QWORD *)v10;
    *(_OWORD *)(v10 + 16) = xmmword_1D5ABF230;
    if (*(_BYTE *)(v4 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind))
    {
      if (*(_BYTE *)(v4 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind) == 1)
      {
        v12 = 0xE500000000000000;
        v13 = 0x6F69647561;
      }
      else
      {
        v13 = 0x7274656D656C6574;
        v12 = 0xE900000000000079;
      }
    }
    else
    {
      v12 = 0xE300000000000000;
      v13 = 7368801;
    }
    v18 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    v19 = sub_1D57B356C();
    v11[4] = v13;
    v11[5] = v12;
    v11[12] = v18;
    v11[13] = v19;
    v11[8] = v19;
    v11[9] = a2;
    v11[10] = a3;
    swift_bridgeObjectRetain();
    sub_1D5AAEA24();
    sub_1D5AAE328();

    result = swift_bridgeObjectRelease();
    *a4 = a2;
    a4[1] = a3;
  }
  else
  {
    *a4 = 0;
    a4[1] = 0;
  }
  return result;
}

uint64_t type metadata accessor for PuzzleViewEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CF6C0);
}

unint64_t sub_1D57CA2BC()
{
  unint64_t result;

  result = qword_1ED9CEBE8;
  if (!qword_1ED9CEBE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleStatsData, &type metadata for PuzzleStatsData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEBE8);
  }
  return result;
}

unint64_t sub_1D57CA300()
{
  unint64_t result;

  result = qword_1ED9CEBE0;
  if (!qword_1ED9CEBE0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleStatsData, &type metadata for PuzzleStatsData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEBE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivateUserType()
{
  return &type metadata for PrivateUserType;
}

ValueMetadata *type metadata accessor for PrivateUserData()
{
  return &type metadata for PrivateUserData;
}

unint64_t sub_1D57CA368()
{
  unint64_t result;

  result = qword_1ED9CE580;
  if (!qword_1ED9CE580)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PrivateUserData, &type metadata for PrivateUserData);
    atomic_store(result, (unint64_t *)&qword_1ED9CE580);
  }
  return result;
}

unint64_t sub_1D57CA3AC()
{
  unint64_t result;

  result = qword_1ED9CF5E8;
  if (!qword_1ED9CF5E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PrivateUserData, &type metadata for PrivateUserData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF5E8);
  }
  return result;
}

uint64_t PrivateUserData.init(userID:userType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

unint64_t sub_1D57CA400()
{
  unint64_t result;

  result = qword_1ED9CE578;
  if (!qword_1ED9CE578)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF128, &type metadata for PrivateUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CE578);
  }
  return result;
}

unint64_t sub_1D57CA444()
{
  unint64_t result;

  result = qword_1ED9CF5E0;
  if (!qword_1ED9CF5E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF150, &type metadata for PrivateUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF5E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for OrientationData()
{
  return &type metadata for OrientationData;
}

unint64_t sub_1D57CA4A0()
{
  unint64_t result;

  result = qword_1ED9C81C8;
  if (!qword_1ED9C81C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OrientationData, &type metadata for OrientationData);
    atomic_store(result, (unint64_t *)&qword_1ED9C81C8);
  }
  return result;
}

unint64_t sub_1D57CA4E4()
{
  unint64_t result;

  result = qword_1ED9C81C0;
  if (!qword_1ED9C81C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OrientationData, &type metadata for OrientationData);
    atomic_store(result, (unint64_t *)&qword_1ED9C81C0);
  }
  return result;
}

unint64_t sub_1D57CA528()
{
  unint64_t result;

  result = qword_1ED9C81B8;
  if (!qword_1ED9C81B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OrientationData, &type metadata for OrientationData);
    atomic_store(result, (unint64_t *)&qword_1ED9C81B8);
  }
  return result;
}

unint64_t sub_1D57CA574()
{
  unint64_t result;

  result = qword_1ED9C81B0;
  if (!qword_1ED9C81B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8668, &type metadata for OrientationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C81B0);
  }
  return result;
}

unint64_t sub_1D57CA5B8()
{
  unint64_t result;

  result = qword_1ED9C81A8;
  if (!qword_1ED9C81A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8690, &type metadata for OrientationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C81A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaUserAction()
{
  return &type metadata for MediaUserAction;
}

unint64_t sub_1D57CA614()
{
  unint64_t result;

  result = qword_1ED9C7F78;
  if (!qword_1ED9C7F78)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleViewData, &type metadata for ArticleViewData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7F78);
  }
  return result;
}

unint64_t sub_1D57CA658()
{
  unint64_t result;

  result = qword_1ED9C7F70;
  if (!qword_1ED9C7F70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleViewData, &type metadata for ArticleViewData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7F70);
  }
  return result;
}

uint64_t sub_1D57CA69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D57CA704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D57CA69C(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1D57C52C4);
}

uint64_t sub_1D57CA710(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCB28, MEMORY[0x1E0CF8380]);
}

uint64_t sub_1D57CA72C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCB10, MEMORY[0x1E0CF8078]);
}

uint64_t sub_1D57CA748@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57C52C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

unint64_t sub_1D57CA78C()
{
  unint64_t result;

  result = qword_1ED9C7EF8;
  if (!qword_1ED9C7EF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseSource, &type metadata for PurchaseSource);
    atomic_store(result, (unint64_t *)&qword_1ED9C7EF8);
  }
  return result;
}

uint64_t sub_1D57CA7D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HeartbeatEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57CA80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D57CA69C(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatData);
}

uint64_t type metadata accessor for HeartbeatEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9CEBB0);
}

uint64_t storeEnumTagSinglePayload for HeartbeatEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57CA86C + 4 * byte_1D5AC098C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57CA88C + 4 * byte_1D5AC0991[v4]))();
}

_BYTE *sub_1D57CA86C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57CA88C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57CA894(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57CA89C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57CA8A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57CA8AC(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D57CA8B8()
{
  return 0x6165627472616568;
}

unint64_t sub_1D57CA8E4()
{
  unint64_t result;

  result = qword_1ED9CEBA0;
  if (!qword_1ED9CEBA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0A54, &type metadata for HeartbeatEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEBA0);
  }
  return result;
}

unint64_t sub_1D57CA928()
{
  unint64_t result;

  result = qword_1ED9CEB98;
  if (!qword_1ED9CEB98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0A7C, &type metadata for HeartbeatEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB98);
  }
  return result;
}

unint64_t sub_1D57CA96C()
{
  unint64_t result;

  result = qword_1ED9CEB90;
  if (!qword_1ED9CEB90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0B0C, &type metadata for HeartbeatEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB90);
  }
  return result;
}

uint64_t type metadata accessor for FollowTagEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C7CC0);
}

uint64_t sub_1D57CA9C4(_QWORD *a1)
{
  return FeedConfigData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FeedConfigData()
{
  return &type metadata for FeedConfigData;
}

unint64_t sub_1D57CA9E8()
{
  unint64_t result;

  result = qword_1ED9CE568;
  if (!qword_1ED9CE568)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedConfigData, &type metadata for FeedConfigData);
    atomic_store(result, (unint64_t *)&qword_1ED9CE568);
  }
  return result;
}

unint64_t sub_1D57CAA2C()
{
  unint64_t result;

  result = qword_1ED9CF340;
  if (!qword_1ED9CF340)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedConfigData, &type metadata for FeedConfigData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF340);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedConfigData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D57CAABC + 4 * byte_1D5AC40AA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D57CAAF0 + 4 * byte_1D5AC40A5[v4]))();
}

uint64_t sub_1D57CAAF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CAAF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57CAB00);
  return result;
}

uint64_t sub_1D57CAB0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57CAB14);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D57CAB18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CAB20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D57CAB34()
{
  unint64_t result;

  result = qword_1ED9CF338;
  if (!qword_1ED9CF338)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4170, &type metadata for FeedConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF338);
  }
  return result;
}

unint64_t sub_1D57CAB78()
{
  unint64_t result;

  result = qword_1ED9CF330;
  if (!qword_1ED9CF330)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4198, &type metadata for FeedConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF330);
  }
  return result;
}

unint64_t sub_1D57CABBC()
{
  unint64_t result;

  result = qword_1ED9CF328;
  if (!qword_1ED9CF328)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4228, &type metadata for FeedConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF328);
  }
  return result;
}

unint64_t sub_1D57CAC08()
{
  unint64_t result;

  result = qword_1ED9C7C08;
  if (!qword_1ED9C7C08)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EngagementData, &type metadata for EngagementData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7C08);
  }
  return result;
}

unint64_t sub_1D57CAC4C()
{
  unint64_t result;

  result = qword_1ED9C7C00;
  if (!qword_1ED9C7C00)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EngagementData, &type metadata for EngagementData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7C00);
  }
  return result;
}

ValueMetadata *type metadata accessor for DevicePlatform()
{
  return &type metadata for DevicePlatform;
}

unint64_t sub_1D57CACA0()
{
  unint64_t result;

  result = qword_1ED9CE560;
  if (!qword_1ED9CE560)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsTagData, &type metadata for SportsTagData);
    atomic_store(result, (unint64_t *)&qword_1ED9CE560);
  }
  return result;
}

unint64_t sub_1D57CACE4()
{
  unint64_t result;

  result = qword_1ED9CE558;
  if (!qword_1ED9CE558)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsTagData, &type metadata for SportsTagData);
    atomic_store(result, (unint64_t *)&qword_1ED9CE558);
  }
  return result;
}

unint64_t sub_1D57CAD28()
{
  unint64_t result;

  result = qword_1ED9C7BC0;
  if (!qword_1ED9C7BC0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueViewData, &type metadata for IssueViewData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BC0);
  }
  return result;
}

unint64_t sub_1D57CAD6C()
{
  unint64_t result;

  result = qword_1ED9C7BB8;
  if (!qword_1ED9C7BB8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueViewData, &type metadata for IssueViewData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BB8);
  }
  return result;
}

uint64_t sub_1D57CADB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeartbeatData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D57CADF4(_QWORD *a1)
{
  return HeartbeatData.encode(to:)(a1);
}

uint64_t sub_1D57CAE08(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for HeartbeatData();
    result = MEMORY[0x1D8279680](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HeartbeatData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D57CAE94 + 4 * byte_1D5ADFD4A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D57CAEC8 + 4 * byte_1D5ADFD45[v4]))();
}

uint64_t sub_1D57CAEC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CAED0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57CAED8);
  return result;
}

uint64_t sub_1D57CAEE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57CAEECLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D57CAEF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CAEF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D57CAF0C()
{
  unint64_t result;

  result = qword_1ED9CEB48;
  if (!qword_1ED9CEB48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADFE3C, &type metadata for HeartbeatData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB48);
  }
  return result;
}

unint64_t sub_1D57CAF50()
{
  unint64_t result;

  result = qword_1ED9CEB40;
  if (!qword_1ED9CEB40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADFE64, &type metadata for HeartbeatData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB40);
  }
  return result;
}

unint64_t sub_1D57CAF94()
{
  unint64_t result;

  result = qword_1ED9CEB38;
  if (!qword_1ED9CEB38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADFEF4, &type metadata for HeartbeatData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB38);
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingType()
{
  return &type metadata for FollowingType;
}

ValueMetadata *type metadata accessor for FollowingData()
{
  return &type metadata for FollowingData;
}

unint64_t sub_1D57CAFF8()
{
  unint64_t result;

  result = qword_1ED9C7B98;
  if (!qword_1ED9C7B98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FollowingData, &type metadata for FollowingData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7B98);
  }
  return result;
}

unint64_t sub_1D57CB03C()
{
  unint64_t result;

  result = qword_1ED9C7B90;
  if (!qword_1ED9C7B90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FollowingData, &type metadata for FollowingData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7B90);
  }
  return result;
}

NewsAnalytics::FollowingData __swiftcall FollowingData.init(followingType:)(NewsAnalytics::FollowingData followingType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)followingType.followingType;
  return followingType;
}

uint64_t type metadata accessor for FeedViewEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C7AD0);
}

uint64_t type metadata accessor for FeedLoadEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C6848);
}

uint64_t sub_1D57CB0BC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCD20, MEMORY[0x1E0CF8380]);
}

uint64_t sub_1D57CB0D8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCAE0, MEMORY[0x1E0CF8078]);
}

uint64_t sub_1D57CB0F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1ED9CD150, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCD20, a1);
}

uint64_t sub_1D57CB118@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCD18, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCAE0, a1);
}

ValueMetadata *type metadata accessor for AuxiliaryData()
{
  return &type metadata for AuxiliaryData;
}

uint64_t sub_1D57CB14C(uint64_t a1)
{
  return sub_1D57A8BCC(a1, 0x6165627472616548, 0xE900000000000074, &qword_1ED9CE430);
}

unint64_t sub_1D57CB170()
{
  unint64_t result;

  result = qword_1ED9CEB18;
  if (!qword_1ED9CEB18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TextSizeData, &type metadata for TextSizeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB18);
  }
  return result;
}

unint64_t sub_1D57CB1B4()
{
  unint64_t result;

  result = qword_1ED9CEB10;
  if (!qword_1ED9CEB10)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TextSizeData, &type metadata for TextSizeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB10);
  }
  return result;
}

unint64_t sub_1D57CB200()
{
  unint64_t result;

  result = qword_1ED9CEB00;
  if (!qword_1ED9CEB00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6118, &type metadata for TextSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB00);
  }
  return result;
}

unint64_t sub_1D57CB244()
{
  unint64_t result;

  result = qword_1ED9CEAF8;
  if (!qword_1ED9CEAF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6140, &type metadata for TextSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEAF8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReferralData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferralData()
{
  return &type metadata for ReferralData;
}

unint64_t sub_1D57CB2EC()
{
  unint64_t result;

  result = qword_1ED9C7870;
  if (!qword_1ED9C7870)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ReferralData, &type metadata for ReferralData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7870);
  }
  return result;
}

unint64_t sub_1D57CB330()
{
  unint64_t result;

  result = qword_1ED9C7868;
  if (!qword_1ED9C7868)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ReferralData, &type metadata for ReferralData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7868);
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressInfo()
{
  return &type metadata for ProgressInfo;
}

unint64_t sub_1D57CB384()
{
  unint64_t result;

  result = qword_1ED9C7818;
  if (!qword_1ED9C7818)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PlaybackData, &type metadata for PlaybackData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7818);
  }
  return result;
}

unint64_t sub_1D57CB3C8()
{
  unint64_t result;

  result = qword_1ED9C7810;
  if (!qword_1ED9C7810)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PlaybackData, &type metadata for PlaybackData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7810);
  }
  return result;
}

ValueMetadata *type metadata accessor for CampaignData()
{
  return &type metadata for CampaignData;
}

unint64_t sub_1D57CB41C()
{
  unint64_t result;

  result = qword_1ED9C77F8;
  if (!qword_1ED9C77F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CampaignData, &type metadata for CampaignData);
    atomic_store(result, (unint64_t *)&qword_1ED9C77F8);
  }
  return result;
}

unint64_t sub_1D57CB460()
{
  unint64_t result;

  result = qword_1ED9C77F0;
  if (!qword_1ED9C77F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CampaignData, &type metadata for CampaignData);
    atomic_store(result, (unint64_t *)&qword_1ED9C77F0);
  }
  return result;
}

unint64_t sub_1D57CB4A4()
{
  unint64_t result;

  result = qword_1ED9C77E8;
  if (!qword_1ED9C77E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CampaignData, &type metadata for CampaignData);
    atomic_store(result, (unint64_t *)&qword_1ED9C77E8);
  }
  return result;
}

unint64_t sub_1D57CB4F0()
{
  unint64_t result;

  result = qword_1ED9CF270;
  if (!qword_1ED9CF270)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppBadgeData, &type metadata for AppBadgeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF270);
  }
  return result;
}

unint64_t sub_1D57CB534()
{
  unint64_t result;

  result = qword_1ED9CF268;
  if (!qword_1ED9CF268)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppBadgeData, &type metadata for AppBadgeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF268);
  }
  return result;
}

unint64_t sub_1D57CB580()
{
  unint64_t result;

  result = qword_1ED9CF258;
  if (!qword_1ED9CF258)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF940, &type metadata for AppBadgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF258);
  }
  return result;
}

unint64_t sub_1D57CB5C4()
{
  unint64_t result;

  result = qword_1ED9CF250;
  if (!qword_1ED9CF250)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF968, &type metadata for AppBadgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF250);
  }
  return result;
}

unint64_t sub_1D57CB610()
{
  unint64_t result;

  result = qword_1ED9C77B0;
  if (!qword_1ED9C77B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewEndData, &type metadata for ViewEndData);
    atomic_store(result, (unint64_t *)&qword_1ED9C77B0);
  }
  return result;
}

unint64_t sub_1D57CB654()
{
  unint64_t result;

  result = qword_1ED9C77A8;
  if (!qword_1ED9C77A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewEndData, &type metadata for ViewEndData);
    atomic_store(result, (unint64_t *)&qword_1ED9C77A8);
  }
  return result;
}

void sub_1D57CB698(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1D5AAEACC();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1D57CB6DC()
{
  unint64_t result;

  result = qword_1ED9C7750;
  if (!qword_1ED9C7750)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SectionData, &type metadata for SectionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7750);
  }
  return result;
}

unint64_t sub_1D57CB720()
{
  unint64_t result;

  result = qword_1ED9C7748;
  if (!qword_1ED9C7748)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SectionData, &type metadata for SectionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7748);
  }
  return result;
}

unint64_t sub_1D57CB764()
{
  unint64_t result;

  result = qword_1ED9C7740;
  if (!qword_1ED9C7740)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScienceData, &type metadata for ScienceData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7740);
  }
  return result;
}

unint64_t sub_1D57CB7A8()
{
  unint64_t result;

  result = qword_1ED9C7738;
  if (!qword_1ED9C7738)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScienceData, &type metadata for ScienceData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7738);
  }
  return result;
}

unint64_t sub_1D57CB7EC()
{
  unint64_t result;

  result = qword_1ED9C7708;
  if (!qword_1ED9C7708)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallData, &type metadata for PaywallData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7708);
  }
  return result;
}

unint64_t sub_1D57CB830()
{
  unint64_t result;

  result = qword_1ED9C7700;
  if (!qword_1ED9C7700)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallData, &type metadata for PaywallData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7700);
  }
  return result;
}

unint64_t sub_1D57CB874()
{
  unint64_t result;

  result = qword_1ED9C76D0;
  if (!qword_1ED9C76D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ChannelData, &type metadata for ChannelData);
    atomic_store(result, (unint64_t *)&qword_1ED9C76D0);
  }
  return result;
}

unint64_t sub_1D57CB8B8()
{
  unint64_t result;

  result = qword_1ED9C76C8;
  if (!qword_1ED9C76C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ChannelData, &type metadata for ChannelData);
    atomic_store(result, (unint64_t *)&qword_1ED9C76C8);
  }
  return result;
}

unint64_t sub_1D57CB8FC()
{
  unint64_t result;

  result = qword_1ED9C7690;
  if (!qword_1ED9C7690)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleData, &type metadata for ArticleData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7690);
  }
  return result;
}

unint64_t sub_1D57CB940()
{
  unint64_t result;

  result = qword_1ED9C7688;
  if (!qword_1ED9C7688)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleData, &type metadata for ArticleData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7688);
  }
  return result;
}

unint64_t sub_1D57CB984()
{
  unint64_t result;

  result = qword_1ED9C7668;
  if (!qword_1ED9C7668)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WindowData, &type metadata for WindowData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7668);
  }
  return result;
}

unint64_t sub_1D57CB9C8()
{
  unint64_t result;

  result = qword_1ED9C7660;
  if (!qword_1ED9C7660)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WindowData, &type metadata for WindowData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7660);
  }
  return result;
}

uint64_t sub_1D57CBA0C()
{
  return 0x656D617266;
}

unint64_t sub_1D57CBA28()
{
  unint64_t result;

  result = qword_1ED9C7650;
  if (!qword_1ED9C7650)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4EDC, &type metadata for WindowData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7650);
  }
  return result;
}

unint64_t sub_1D57CBA6C()
{
  unint64_t result;

  result = qword_1ED9C7648;
  if (!qword_1ED9C7648)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4F04, &type metadata for WindowData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7648);
  }
  return result;
}

unint64_t sub_1D57CBAB0()
{
  unint64_t result;

  result = qword_1ED9C7640;
  if (!qword_1ED9C7640)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4F94, &type metadata for WindowData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7640);
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewAction()
{
  return &type metadata for ViewAction;
}

ValueMetadata *type metadata accessor for SportsData()
{
  return &type metadata for SportsData;
}

unint64_t sub_1D57CBB1C()
{
  unint64_t result;

  result = qword_1ED9CF208;
  if (!qword_1ED9CF208)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsData, &type metadata for SportsData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF208);
  }
  return result;
}

unint64_t sub_1D57CBB60()
{
  unint64_t result;

  result = qword_1ED9CF200;
  if (!qword_1ED9CF200)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsData, &type metadata for SportsData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF200);
  }
  return result;
}

NewsAnalytics::SportsData __swiftcall SportsData.init(sportsTagList:)(NewsAnalytics::SportsData sportsTagList)
{
  _QWORD *v1;

  *v1 = *(_QWORD *)sportsTagList.sportsTagList.tagIDs._rawValue;
  return sportsTagList;
}

unint64_t sub_1D57CBBB8()
{
  unint64_t result;

  result = qword_1ED9CE548;
  if (!qword_1ED9CE548)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB38F4, &type metadata for SportsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CE548);
  }
  return result;
}

unint64_t sub_1D57CBBFC()
{
  unint64_t result;

  result = qword_1ED9CF1F8;
  if (!qword_1ED9CF1F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB391C, &type metadata for SportsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF1F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchData()
{
  return &type metadata for SearchData;
}

unint64_t sub_1D57CBC58()
{
  unint64_t result;

  result = qword_1ED9C7620;
  if (!qword_1ED9C7620)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchData, &type metadata for SearchData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7620);
  }
  return result;
}

unint64_t sub_1D57CBC9C()
{
  unint64_t result;

  result = qword_1ED9C7618;
  if (!qword_1ED9C7618)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchData, &type metadata for SearchData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7618);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleData()
{
  return &type metadata for PuzzleData;
}

unint64_t sub_1D57CBCF0()
{
  unint64_t result;

  result = qword_1ED9CF1E8;
  if (!qword_1ED9CF1E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleData, &type metadata for PuzzleData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF1E8);
  }
  return result;
}

unint64_t sub_1D57CBD34()
{
  unint64_t result;

  result = qword_1ED9CF1E0;
  if (!qword_1ED9CF1E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleData, &type metadata for PuzzleData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF1E0);
  }
  return result;
}

unint64_t sub_1D57CBD78()
{
  unint64_t result;

  result = qword_1ED9C75D8;
  if (!qword_1ED9C75D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DeviceData, &type metadata for DeviceData);
    atomic_store(result, (unint64_t *)&qword_1ED9C75D8);
  }
  return result;
}

unint64_t sub_1D57CBDBC()
{
  unint64_t result;

  result = qword_1ED9C75D0;
  if (!qword_1ED9C75D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DeviceData, &type metadata for DeviceData);
    atomic_store(result, (unint64_t *)&qword_1ED9C75D0);
  }
  return result;
}

void __swiftcall DeviceData.init(deviceModel:devicePlatform:osInstallVariant:osVersion:osBundleVersion:)(NewsAnalytics::DeviceData *__return_ptr retstr, Swift::String deviceModel, NewsAnalytics::DevicePlatform devicePlatform, NewsAnalytics::OsInstallVariant osInstallVariant, Swift::String osVersion, Swift::String osBundleVersion)
{
  NewsAnalytics::DevicePlatform v6;
  NewsAnalytics::OsInstallVariant v7;

  v6 = *(_BYTE *)devicePlatform;
  v7 = *(_BYTE *)osInstallVariant;
  retstr->deviceModel = deviceModel;
  retstr->devicePlatform = v6;
  retstr->osInstallVariant = v7;
  retstr->osVersion = osVersion;
  retstr->osBundleVersion = osBundleVersion;
}

unint64_t sub_1D57CBE28()
{
  unint64_t result;

  result = qword_1ED9C75C0;
  if (!qword_1ED9C75C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3C68, &type metadata for DeviceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C75C0);
  }
  return result;
}

unint64_t sub_1D57CBE6C()
{
  unint64_t result;

  result = qword_1ED9C75B8;
  if (!qword_1ED9C75B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3C90, &type metadata for DeviceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C75B8);
  }
  return result;
}

unint64_t sub_1D57CBEB8()
{
  unint64_t result;

  result = qword_1ED9C6808;
  if (!qword_1ED9C6808)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdUserData, &type metadata for AdUserData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6808);
  }
  return result;
}

unint64_t sub_1D57CBEFC()
{
  unint64_t result;

  result = qword_1ED9C6800;
  if (!qword_1ED9C6800)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdUserData, &type metadata for AdUserData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6800);
  }
  return result;
}

ValueMetadata *type metadata accessor for AdFeedData()
{
  return &type metadata for AdFeedData;
}

unint64_t sub_1D57CBF58()
{
  unint64_t result;

  result = qword_1ED9CD9F0;
  if (!qword_1ED9CD9F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdFeedData, &type metadata for AdFeedData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD9F0);
  }
  return result;
}

unint64_t sub_1D57CBF9C()
{
  unint64_t result;

  result = qword_1ED9CD9E8;
  if (!qword_1ED9CD9E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdFeedData, &type metadata for AdFeedData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD9E8);
  }
  return result;
}

NewsAnalytics::AdFeedData __swiftcall AdFeedData.init(feedType:)(NewsAnalytics::AdFeedData feedType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)feedType.feedType;
  return feedType;
}

unint64_t sub_1D57CBFF4()
{
  unint64_t result;

  result = qword_1ED9C7598;
  if (!qword_1ED9C7598)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ActionData, &type metadata for ActionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7598);
  }
  return result;
}

unint64_t sub_1D57CC038()
{
  unint64_t result;

  result = qword_1ED9C7590;
  if (!qword_1ED9C7590)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ActionData, &type metadata for ActionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7590);
  }
  return result;
}

uint64_t type metadata accessor for ExternalAnalyticsEventProcessor()
{
  return objc_opt_self();
}

uint64_t static Action.present(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *a1 = EventPath.rawValue.getter();
  a1[1] = v2;
  v3 = *MEMORY[0x1E0CF8508];
  v4 = sub_1D5AADEA8();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, v3, v4);
}

unint64_t sub_1D57CC0FC()
{
  unint64_t result;

  result = qword_1ED9CD9B0;
  if (!qword_1ED9CD9B0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CD9B0);
  }
  return result;
}

void sub_1D57CC14C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CE530)
  {
    sub_1D57CC2B4();
    v0 = sub_1D5AAD8CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CE530);
  }
}

void sub_1D57CC1A4(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1D5AAD8CC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1D57CC1FC(uint64_t a1)
{
  return sub_1D57A863C(a1, 0xD000000000000015, 0x80000001D5AF25C0, (uint64_t *)&unk_1ED9CF0C8);
}

uint64_t static Settings.AppIconBadge.active.getter()
{
  return sub_1D57A73FC(&qword_1ED9CF0D8);
}

uint64_t sub_1D57CC23C(uint64_t a1)
{
  return sub_1D57A3C64(a1, 0xD00000000000001ELL, 0x80000001D5AF2560, &qword_1ED9CF0B0);
}

uint64_t sub_1D57CC260(uint64_t a1)
{
  return sub_1D57A863C(a1, 0xD00000000000001ELL, 0x80000001D5AF2580, &qword_1ED9CE520);
}

_QWORD *sub_1D57CC284(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Settings.AppIconBadge.AppIconBadgeSource()
{
  return &type metadata for Settings.AppIconBadge.AppIconBadgeSource;
}

unint64_t sub_1D57CC2B4()
{
  unint64_t result;

  result = qword_1ED9CF0A8;
  if (!qword_1ED9CF0A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Settings.AppIconBadge.AppIconBadgeSource, &type metadata for Settings.AppIconBadge.AppIconBadgeSource);
    atomic_store(result, (unint64_t *)&qword_1ED9CF0A8);
  }
  return result;
}

unint64_t sub_1D57CC2F8()
{
  unint64_t result;

  result = qword_1ED9CE518;
  if (!qword_1ED9CE518)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Settings.AppIconBadge.AppIconBadgeSource, &type metadata for Settings.AppIconBadge.AppIconBadgeSource);
    atomic_store(result, (unint64_t *)&qword_1ED9CE518);
  }
  return result;
}

uint64_t sub_1D57CC33C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 8);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = 0xE400000000000000;
      v5 = 1937204590;
    }
    else
    {
      result = sub_1D5AAE898();
      v5 = 0x7972756372656DLL;
      v4 = 0xE700000000000000;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v5 = 0x6E776F6E6B6E75;
  }
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = v5;
  a1[1] = v4;
  return result;
}

uint64_t static Settings.Analytics.Debugging.batchSize.getter()
{
  return sub_1D57A73FC(&qword_1ED9CD0B8);
}

uint64_t sub_1D57CC3F0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Settings.Analytics.Debugging.Jitter()
{
  uint64_t result;

  result = qword_1ED9CD928;
  if (!qword_1ED9CD928)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static Settings.Analytics.Debugging.maxUploadRetryCount.getter()
{
  return sub_1D57A73FC(&qword_1ED9CF0A0);
}

uint64_t static Settings.Analytics.Debugging.sessionName.getter()
{
  return sub_1D57A73FC(&qword_1ED9CCCD8);
}

uint64_t sub_1D57CC4A0(uint64_t a1)
{
  return sub_1D57A51C4(a1, 0, 0xD00000000000002CLL, 0x80000001D5AEDFF0, &qword_1ED9C6F48);
}

uint64_t static Settings.Analytics.Debugging.batchDebugging.getter()
{
  return sub_1D57A73FC(&qword_1ED9CCCC0);
}

uint64_t _s9AnalyticsV6SportsV9NoiseRateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D57CC530 + 4 * byte_1D5ABD0DA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D57CC564 + 4 * byte_1D5ABD0D5[v4]))();
}

uint64_t sub_1D57CC564(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CC56C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57CC574);
  return result;
}

uint64_t sub_1D57CC580(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57CC588);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D57CC58C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CC594(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CC5A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57CC5D0 + 4 * byte_1D5ABD0C6[*v0]))();
}

void sub_1D57CC5D0(_QWORD *a1@<X8>)
{
  *a1 = 1869768058;
  a1[1] = 0xE400000000000000;
}

void sub_1D57CC5E4(_QWORD *a1@<X8>)
{
  *a1 = 0x7974666966;
  a1[1] = 0xE500000000000000;
}

void sub_1D57CC5FC(_QWORD *a1@<X8>)
{
  *a1 = 0x72646E7548656E6FLL;
  a1[1] = 0xEA00000000006465;
}

unint64_t sub_1D57CC628()
{
  unint64_t result;

  result = qword_1ED9CF088;
  if (!qword_1ED9CF088)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Settings.Analytics.Sports.NoiseRate, &type metadata for Settings.Analytics.Sports.NoiseRate);
    atomic_store(result, (unint64_t *)&qword_1ED9CF088);
  }
  return result;
}

unint64_t sub_1D57CC66C()
{
  unint64_t result;

  result = qword_1ED9CF080;
  if (!qword_1ED9CF080)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Settings.Analytics.Sports.NoiseRate, &type metadata for Settings.Analytics.Sports.NoiseRate);
    atomic_store(result, (unint64_t *)&qword_1ED9CF080);
  }
  return result;
}

unint64_t sub_1D57CC6B0()
{
  unint64_t result;

  result = qword_1ED9CF078;
  if (!qword_1ED9CF078)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Settings.Analytics.Sports.NoiseRate, &type metadata for Settings.Analytics.Sports.NoiseRate);
    atomic_store(result, (unint64_t *)&qword_1ED9CF078);
  }
  return result;
}

unint64_t sub_1D57CC6F4()
{
  unint64_t result;

  result = qword_1ED9CF070;
  if (!qword_1ED9CF070)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Settings.Analytics.Sports.NoiseRate, &type metadata for Settings.Analytics.Sports.NoiseRate);
    atomic_store(result, (unint64_t *)&qword_1ED9CF070);
  }
  return result;
}

uint64_t sub_1D57CC738()
{
  sub_1D57CC6B0();
  return sub_1D5AAE8F8();
}

uint64_t sub_1D57CC77C(uint64_t a1)
{
  return sub_1D57A01E4(a1, 0xD000000000000026, 0x80000001D5AEDEB0, &qword_1ED9C6798);
}

uint64_t sub_1D57CC7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9C6F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1D57CC7FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C6F30)
  {
    sub_1D5AAD668();
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C6F30);
  }
}

uint64_t BannerAdData.init(traits:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  char v16;
  char v17;
  uint64_t result;
  char v19;
  uint64_t v20;

  sub_1D57CCA28();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v20 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - v11;
  sub_1D57CCA7C(a1, (uint64_t)&v20 - v11);
  v13 = sub_1D5AAE3E8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13) == 1)
  {
    sub_1D57CCAC0((uint64_t)v12);
    v16 = 0;
  }
  else
  {
    v16 = sub_1D5AAE3DC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
  }
  sub_1D57CCA7C(a1, (uint64_t)v10);
  if (v15(v10, 1, v13) == 1)
  {
    sub_1D57CCAC0((uint64_t)v10);
    v17 = 0;
  }
  else
  {
    v17 = sub_1D5AAE3D0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
  }
  sub_1D57CCA7C(a1, (uint64_t)v7);
  if (v15(v7, 1, v13) == 1)
  {
    sub_1D57CCAC0(a1);
    result = sub_1D57CCAC0((uint64_t)v7);
    v19 = 0;
  }
  else
  {
    v19 = sub_1D5AAE3C4();
    sub_1D57CCAC0(a1);
    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v7, v13);
  }
  *a2 = v19 & 1;
  a2[1] = v17 & 1;
  a2[2] = v16 & 1;
  return result;
}

void sub_1D57CCA28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9D13E0)
  {
    sub_1D5AAE3E8();
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9D13E0);
  }
}

uint64_t sub_1D57CCA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57CCA28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D57CCAC0(uint64_t a1)
{
  uint64_t v2;

  sub_1D57CCA28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for FCEndpointEnvironment(uint64_t a1)
{
  sub_1D57B8370(a1, &qword_1EFF47548);
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
  sub_1D57B8370(a1, &qword_1EFF47550);
}

void type metadata accessor for FCRelativePriority(uint64_t a1)
{
  sub_1D57B8370(a1, (unint64_t *)&unk_1EFF47558);
}

void sub_1D57CCB38(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1D57CCB44()
{
  sub_1D5AAEE80();
  sub_1D5AAEE8C();
  return sub_1D5AAEE98();
}

uint64_t sub_1D57CCB88()
{
  return sub_1D5AAEE8C();
}

uint64_t sub_1D57CCBB0()
{
  sub_1D5AAEE80();
  sub_1D5AAEE8C();
  return sub_1D5AAEE98();
}

uint64_t sub_1D57CCBF0(uint64_t a1, uint64_t a2)
{
  return sub_1D57CCD48(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1D57CCC00(uint64_t a1, uint64_t a2)
{
  return sub_1D57CCD48(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1D57CCC18(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1D5AAE808();
  *a2 = 0;
  return result;
}

uint64_t sub_1D57CCC8C(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1D5AAE814();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1D57CCD08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1D5AAE820();
  v2 = sub_1D5AAE7FC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D57CCD48(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D5AAE820();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D57CCD84()
{
  sub_1D5AAE820();
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D57CCDC4()
{
  return sub_1D5AAE9AC();
}

uint64_t sub_1D57CCDCC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x1D8278D98](a1, &v6);
  v4 = v6;
  v5 = v7;
  if (v7)
    v4 = 0;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1D57CCE1C(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = sub_1D5AAE9C4();
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_1D57CCE70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D5AAE9D0();
  *a1 = result;
  return result;
}

BOOL sub_1D57CCE94(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_1D57CCEA8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1D57CCEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1D5AAE820();
  v2 = v1;
  if (v0 == sub_1D5AAE820() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1D57CCF48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D5AAE820();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D57CCF70()
{
  sub_1D57A8DE4((unint64_t *)&qword_1ED9CC728, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1D5AAF99C);
  sub_1D57A8DE4((unint64_t *)&unk_1EFF47610, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1D5AAF78C);
  return sub_1D5AAEC40();
}

uint64_t sub_1D57CCFF4()
{
  return sub_1D57A8DE4(&qword_1EFF47568, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1D5AAF750);
}

uint64_t sub_1D57CD020()
{
  return sub_1D57A8DE4(&qword_1EFF47570, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1D5AAF724);
}

uint64_t sub_1D57CD04C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D5AAE7FC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D57CD090()
{
  sub_1D57A8DE4(&qword_1EFF47650, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_1D5AAFC0C);
  sub_1D57A8DE4(&qword_1EFF47658, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_1D5AAFB60);
  return sub_1D5AAEC40();
}

uint64_t sub_1D57CD114()
{
  sub_1D57A8DE4(&qword_1EFF475F8, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_1D5AAF90C);
  sub_1D57A8DE4((unint64_t *)&unk_1EFF47600, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_1D5AAF8AC);
  return sub_1D5AAEC40();
}

uint64_t sub_1D57CD1A8()
{
  return sub_1D57A8DE4(&qword_1EFF47578, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_1D5AAF870);
}

uint64_t sub_1D57CD1D4()
{
  return sub_1D57A8DE4(&qword_1EFF47580, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_1D5AAF844);
}

uint64_t sub_1D57CD200()
{
  return sub_1D5AAE9DC();
}

uint64_t sub_1D57CD208()
{
  return sub_1D5AAEE74();
}

uint64_t sub_1D57CD210()
{
  return sub_1D57A8DE4((unint64_t *)&unk_1EFF47588, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_1D5AAF8E0);
}

void type metadata accessor for OpenURLOptionsKey(uint64_t a1)
{
  sub_1D57B8370(a1, &qword_1EFF47620);
}

void type metadata accessor for FCSubscriptionOrigin(uint64_t a1)
{
  sub_1D57B8370(a1, &qword_1EFF47628);
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
  sub_1D57B8370(a1, &qword_1ED9D10A8);
}

uint64_t sub_1D57CD278()
{
  return sub_1D57A8DE4(&qword_1EFF47630, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_1D5AAFB24);
}

uint64_t sub_1D57CD2A4()
{
  return sub_1D57A8DE4(&qword_1EFF47638, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_1D5AAFAF8);
}

uint64_t sub_1D57CD2D0()
{
  return sub_1D57A8DE4(&qword_1EFF47640, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_1D5AAFB94);
}

uint64_t sub_1D57CD2FC()
{
  return sub_1D57A8DE4(&qword_1EFF47648, (uint64_t (*)(uint64_t))type metadata accessor for FCSubscriptionOrigin, (uint64_t)&unk_1D5AAFA90);
}

uint64_t sub_1D57CD328(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D57CD348(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1D57B8370(a1, &qword_1EFF47660);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1D57B8370(a1, &qword_1EFF47668);
}

uint64_t StartMethodData.sessionStartSource.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StartMethodData.sessionStartSource.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*StartMethodData.sessionStartSource.modify())()
{
  return nullsub_1;
}

NewsAnalytics::StartMethodData __swiftcall StartMethodData.init(sessionStartSource:)(NewsAnalytics::StartMethodData sessionStartSource)
{
  NewsAnalytics::StartMethodData *v1;

  *v1 = sessionStartSource;
  return sessionStartSource;
}

uint64_t sub_1D57CD430()
{
  return 1;
}

uint64_t sub_1D57CD438()
{
  sub_1D5AAEE80();
  sub_1D5AAEE8C();
  return sub_1D5AAEE98();
}

uint64_t sub_1D57CD478()
{
  return sub_1D5AAEE8C();
}

uint64_t sub_1D57CD49C()
{
  sub_1D5AAEE80();
  sub_1D5AAEE8C();
  return sub_1D5AAEE98();
}

unint64_t sub_1D57CD4D8()
{
  return 0xD000000000000012;
}

uint64_t sub_1D57CD4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57CDB84(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D57CD51C()
{
  return 0;
}

uint64_t sub_1D57CD528()
{
  sub_1D57CD66C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57CD550()
{
  sub_1D57CD66C();
  return sub_1D5AAEEE0();
}

uint64_t StartMethodData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57CD7D4(0, &qword_1ED9CC8F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CD66C();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D57CD66C()
{
  unint64_t result;

  result = qword_1ED9C81E0;
  if (!qword_1ED9C81E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AAFE28, &type metadata for StartMethodData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C81E0);
  }
  return result;
}

uint64_t StartMethodData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D57CD7D4(0, &qword_1EFF47910, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CD66C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D57CD7D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57CD66C();
    v7 = a3(a1, &type metadata for StartMethodData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57CD830()
{
  return sub_1D5AADB30();
}

uint64_t sub_1D57CD844@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return StartMethodData.init(from:)(a1, a2);
}

uint64_t sub_1D57CD858(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57CD7D4(0, &qword_1ED9CC8F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CD66C();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

_QWORD *assignWithCopy for StartMethodData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for StartMethodData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for StartMethodData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StartMethodData()
{
  return &type metadata for StartMethodData;
}

uint64_t storeEnumTagSinglePayload for StartMethodData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57CDA48 + 4 * asc_1D5AAFCA4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57CDA68 + 4 * byte_1D5AAFCA9[v4]))();
}

_BYTE *sub_1D57CDA48(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57CDA68(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57CDA70(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57CDA78(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57CDA80(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57CDA88(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D57CDA94()
{
  return 0;
}

ValueMetadata *type metadata accessor for StartMethodData.CodingKeys()
{
  return &type metadata for StartMethodData.CodingKeys;
}

unint64_t sub_1D57CDAB0()
{
  unint64_t result;

  result = qword_1EFF47918;
  if (!qword_1EFF47918)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AAFE00, &type metadata for StartMethodData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47918);
  }
  return result;
}

unint64_t sub_1D57CDAF8()
{
  unint64_t result;

  result = qword_1ED9C81F0;
  if (!qword_1ED9C81F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AAFD70, &type metadata for StartMethodData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C81F0);
  }
  return result;
}

unint64_t sub_1D57CDB40()
{
  unint64_t result;

  result = qword_1ED9C81E8;
  if (!qword_1ED9C81E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AAFD98, &type metadata for StartMethodData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C81E8);
  }
  return result;
}

uint64_t sub_1D57CDB84(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEC810)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t OfflineModeData.isItemAvailable.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t OfflineModeData.isItemAvailable.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*OfflineModeData.isItemAvailable.modify())()
{
  return nullsub_1;
}

NewsAnalytics::OfflineModeData __swiftcall OfflineModeData.init(isItemAvailable:)(NewsAnalytics::OfflineModeData isItemAvailable)
{
  NewsAnalytics::OfflineModeData *v1;

  v1->isItemAvailable = isItemAvailable.isItemAvailable;
  return isItemAvailable;
}

uint64_t sub_1D57CDC30()
{
  return 0x76416D6574497369;
}

uint64_t sub_1D57CDC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x76416D6574497369 && a2 == 0xEF656C62616C6961)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D57CDD0C()
{
  sub_1D57CDE4C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57CDD34()
{
  sub_1D57CDE4C();
  return sub_1D5AAEEE0();
}

uint64_t OfflineModeData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57CDFB4(0, &qword_1ED9CEFE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CDE4C();
  sub_1D5AAEEC8();
  sub_1D5AAED48();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D57CDE4C()
{
  unint64_t result;

  result = qword_1ED9CEBC0;
  if (!qword_1ED9CEBC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AAFFF8, &type metadata for OfflineModeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEBC0);
  }
  return result;
}

uint64_t OfflineModeData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;

  sub_1D57CDFB4(0, &qword_1ED9CEF78, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CDE4C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECAC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D57CDFB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57CDE4C();
    v7 = a3(a1, &type metadata for OfflineModeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57CE014()
{
  unint64_t result;

  result = qword_1ED9CE460;
  if (!qword_1ED9CE460)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OfflineModeData, &type metadata for OfflineModeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CE460);
  }
  return result;
}

unint64_t sub_1D57CE05C()
{
  unint64_t result;

  result = qword_1ED9CEBD8;
  if (!qword_1ED9CEBD8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OfflineModeData, &type metadata for OfflineModeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEBD8);
  }
  return result;
}

uint64_t sub_1D57CE0A0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return OfflineModeData.init(from:)(a1, a2);
}

uint64_t sub_1D57CE0B4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57CDFB4(0, &qword_1ED9CEFE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CDE4C();
  sub_1D5AAEEC8();
  sub_1D5AAED48();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t getEnumTagSinglePayload for OfflineModeData(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineModeData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D57CE290 + 4 * byte_1D5AAFE7D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D57CE2C4 + 4 * byte_1D5AAFE78[v4]))();
}

uint64_t sub_1D57CE2C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CE2CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57CE2D4);
  return result;
}

uint64_t sub_1D57CE2E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57CE2E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D57CE2EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CE2F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OfflineModeData()
{
  return &type metadata for OfflineModeData;
}

uint64_t storeEnumTagSinglePayload for OfflineModeData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57CE350 + 4 * byte_1D5AAFE82[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57CE370 + 4 * byte_1D5AAFE87[v4]))();
}

_BYTE *sub_1D57CE350(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57CE370(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57CE378(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57CE380(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57CE388(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57CE390(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OfflineModeData.CodingKeys()
{
  return &type metadata for OfflineModeData.CodingKeys;
}

unint64_t sub_1D57CE3B0()
{
  unint64_t result;

  result = qword_1EFF47920;
  if (!qword_1EFF47920)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AAFFD0, &type metadata for OfflineModeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47920);
  }
  return result;
}

unint64_t sub_1D57CE3F8()
{
  unint64_t result;

  result = qword_1ED9CEBD0;
  if (!qword_1ED9CEBD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AAFF40, &type metadata for OfflineModeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEBD0);
  }
  return result;
}

unint64_t sub_1D57CE440()
{
  unint64_t result;

  result = qword_1ED9CEBC8;
  if (!qword_1ED9CEBC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AAFF68, &type metadata for OfflineModeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEBC8);
  }
  return result;
}

NewsAnalytics::CacheState_optional __swiftcall CacheState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::CacheState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CacheState.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7629160;
  if (*v0 != 1)
    v1 = 1936943469;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D57CE528(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3E0F4(*a1, *a2);
}

unint64_t sub_1D57CE538()
{
  unint64_t result;

  result = qword_1EFF47928;
  if (!qword_1EFF47928)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CacheState, &type metadata for CacheState);
    atomic_store(result, (unint64_t *)&qword_1EFF47928);
  }
  return result;
}

uint64_t sub_1D57CE57C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D57CE60C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D57CE678()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::CacheState_optional sub_1D57CE704(Swift::String *a1)
{
  return CacheState.init(rawValue:)(*a1);
}

uint64_t sub_1D57CE710()
{
  sub_1D57A126C();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for CacheState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D57CE7B8 + 4 * byte_1D5AB004D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D57CE7EC + 4 * byte_1D5AB0048[v4]))();
}

uint64_t sub_1D57CE7EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CE7F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57CE7FCLL);
  return result;
}

uint64_t sub_1D57CE808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57CE810);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D57CE814(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CE81C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CE828(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1D57CE830()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

NewsAnalytics::LiveActivityDismissal_optional __swiftcall LiveActivityDismissal.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::LiveActivityDismissal_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t LiveActivityDismissal.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57CE8E4 + 4 * byte_1D5AB0180[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D57CE8E4()
{
  return 0x6D6574737973;
}

uint64_t sub_1D57CE8F8()
{
  return 0x6C69546F63736964;
}

uint64_t sub_1D57CE914()
{
  return 0x6465626D45626577;
}

void sub_1D57CE92C(char *a1)
{
  sub_1D5A3870C(*a1);
}

unint64_t sub_1D57CE93C()
{
  unint64_t result;

  result = qword_1EFF47930;
  if (!qword_1EFF47930)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityDismissal, &type metadata for LiveActivityDismissal);
    atomic_store(result, (unint64_t *)&qword_1EFF47930);
  }
  return result;
}

void sub_1D57CE980()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D57CE9CC()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D57CEA3C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D57CEA78()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D57CEAD4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D57CEB1C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::LiveActivityDismissal_optional sub_1D57CEB8C(Swift::String *a1)
{
  return LiveActivityDismissal.init(rawValue:)(*a1);
}

uint64_t sub_1D57CEB98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57CEBC8 + 4 * byte_1D5AB0190[*v0]))();
}

void sub_1D57CEBC8(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6574737973;
  a1[1] = 0xE600000000000000;
}

void sub_1D57CEBE0(_QWORD *a1@<X8>)
{
  *a1 = 0x6C69546F63736964;
  a1[1] = 0xE900000000000065;
}

void sub_1D57CEC00(_QWORD *a1@<X8>)
{
  *a1 = 0x6465626D45626577;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1D57CEC1C()
{
  sub_1D57CED90();
  return sub_1D5AAE928();
}

uint64_t sub_1D57CEC78()
{
  sub_1D57CED90();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for LiveActivityDismissal(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D57CED10 + 4 * byte_1D5AB0199[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D57CED44 + 4 * byte_1D5AB0194[v4]))();
}

uint64_t sub_1D57CED44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CED4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57CED54);
  return result;
}

uint64_t sub_1D57CED60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57CED68);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D57CED6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57CED74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityDismissal()
{
  return &type metadata for LiveActivityDismissal;
}

unint64_t sub_1D57CED90()
{
  unint64_t result;

  result = qword_1EFF47938;
  if (!qword_1EFF47938)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityDismissal, &type metadata for LiveActivityDismissal);
    atomic_store(result, (unint64_t *)&qword_1EFF47938);
  }
  return result;
}

uint64_t sub_1D57CEDD4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF47940, MEMORY[0x1E0CF8078]);
}

uint64_t static PersonalizedAdsEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46ED0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF47940, a1);
}

uint64_t sub_1D57CEE14(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF47958, MEMORY[0x1E0CF8380]);
}

uint64_t static PersonalizedAdsEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46ED8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF47958, a1);
}

uint64_t sub_1D57CEE54@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t PersonalizedAdsEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t PersonalizedAdsEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PersonalizedAdsEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for PersonalizedAdsEngagementEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for PersonalizedAdsEngagementEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF479F8);
}

uint64_t PersonalizedAdsEngagementEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PersonalizedAdsEngagementEvent.timedData.modify())()
{
  type metadata accessor for PersonalizedAdsEngagementEvent(0);
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.userSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D57CF014()
{
  unint64_t result;

  result = qword_1EFF47978;
  if (!qword_1EFF47978)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PersonalizedAdsUserSelectionData, &type metadata for PersonalizedAdsUserSelectionData);
    atomic_store(result, (unint64_t *)&qword_1EFF47978);
  }
  return result;
}

unint64_t sub_1D57CF058()
{
  unint64_t result;

  result = qword_1EFF47980;
  if (!qword_1EFF47980)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PersonalizedAdsUserSelectionData, &type metadata for PersonalizedAdsUserSelectionData);
    atomic_store(result, (unint64_t *)&qword_1EFF47980);
  }
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.userSelectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PersonalizedAdsEngagementEvent.userSelectionData.modify())()
{
  type metadata accessor for PersonalizedAdsEngagementEvent(0);
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PersonalizedAdsEngagementEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PersonalizedAdsEngagementEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for PersonalizedAdsEngagementEvent(0);
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for PersonalizedAdsEngagementEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t PersonalizedAdsEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t sub_1D57CF340@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v2, v4);
}

uint64_t PersonalizedAdsEngagementEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for PersonalizedAdsEngagementEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t sub_1D57CF390@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 20);
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t type metadata accessor for PersonalizedAdsEngagementEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF47A90);
}

uint64_t PersonalizedAdsEngagementEvent.Model.userSelectionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PersonalizedAdsEngagementEvent.Model.init(eventData:timedData:userSelectionData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v8 = *a3;
  v9 = *a4;
  v10 = *((_QWORD *)a4 + 1);
  v11 = *((_QWORD *)a4 + 2);
  v12 = a4[24];
  v13 = a4[25];
  v21 = *((_QWORD *)a4 + 5);
  v22 = *((_QWORD *)a4 + 4);
  v20 = a4[48];
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a5, a1, v14);
  v15 = (int *)type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  v16 = a5 + v15[5];
  v17 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a2, v17);
  *(_BYTE *)(a5 + v15[6]) = v8;
  v19 = a5 + v15[7];
  *(_BYTE *)v19 = v9;
  *(_QWORD *)(v19 + 8) = v10;
  *(_QWORD *)(v19 + 16) = v11;
  *(_BYTE *)(v19 + 24) = v12;
  *(_BYTE *)(v19 + 25) = v13;
  *(_QWORD *)(v19 + 32) = v22;
  *(_QWORD *)(v19 + 40) = v21;
  *(_BYTE *)(v19 + 48) = v20;
  return result;
}

BOOL sub_1D57CF58C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D57CF5A0()
{
  sub_1D5AAEE80();
  sub_1D5AAEE8C();
  return sub_1D5AAEE98();
}

uint64_t sub_1D57CF5E4()
{
  return sub_1D5AAEE8C();
}

uint64_t sub_1D57CF60C()
{
  sub_1D5AAEE80();
  sub_1D5AAEE8C();
  return sub_1D5AAEE98();
}

uint64_t sub_1D57CF64C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57CF680 + 4 * byte_1D5AB02D0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D57CF680()
{
  return 0x74614464656D6974;
}

unint64_t sub_1D57CF694()
{
  return 0xD000000000000011;
}

unint64_t sub_1D57CF6B0()
{
  return 0xD000000000000021;
}

uint64_t sub_1D57CF6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57D1250(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D57CF6F4(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1D57CF700()
{
  sub_1D57CF994();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57CF728()
{
  sub_1D57CF994();
  return sub_1D5AAEEE0();
}

uint64_t PersonalizedAdsEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  char v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;
  char v23;

  v3 = v1;
  sub_1D57CFDCC(0, &qword_1EFF47988, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CF994();
  sub_1D5AAEEC8();
  v17 = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
    v17 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v17 = *(_BYTE *)(v3 + *(int *)(v10 + 24));
    v23 = 2;
    sub_1D57CF058();
    sub_1D5AAED6C();
    v11 = v3 + *(int *)(v10 + 28);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    v17 = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    v23 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D57CF994()
{
  unint64_t result;

  result = qword_1EFF47990;
  if (!qword_1EFF47990)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB04CC, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47990);
  }
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  char v41;
  char v42;
  __int128 v43;
  char v44;
  char v45;

  v30 = a2;
  v3 = sub_1D5AADFB0();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57CFDCC(0, &qword_1EFF47998, MEMORY[0x1E0DED048]);
  v37 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v27 - v9;
  v11 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CF994();
  v36 = v10;
  v14 = v38;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v38 = v8;
  v28 = v11;
  v29 = a1;
  v15 = (uint64_t)v13;
  v16 = v31;
  v17 = v32;
  v18 = v33;
  v39 = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v34;
  v20 = v35;
  sub_1D5AAECD0();
  v27[1] = v5;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15, v19, v20);
  v39 = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  v21 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + *(int *)(v28 + 20), v16, v18);
  v45 = 2;
  sub_1D57CF014();
  sub_1D5AAECD0();
  *(_BYTE *)(v15 + *(int *)(v21 + 24)) = v39;
  v45 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
  v22 = v41;
  v23 = v42;
  v24 = v44;
  v25 = v15 + *(int *)(v21 + 28);
  *(_BYTE *)v25 = v39;
  *(_OWORD *)(v25 + 8) = v40;
  *(_BYTE *)(v25 + 24) = v22;
  *(_BYTE *)(v25 + 25) = v23;
  *(_OWORD *)(v25 + 32) = v43;
  *(_BYTE *)(v25 + 48) = v24;
  sub_1D57CFE28(v15, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_1D57CFE6C(v15);
}

void sub_1D57CFDCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57CF994();
    v7 = a3(a1, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57CFE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D57CFE6C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57CFEA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PersonalizedAdsEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D57CFEBC(_QWORD *a1)
{
  return PersonalizedAdsEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D57CFED0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46ED0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF47940, a1);
}

uint64_t sub_1D57CFEF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46ED8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF47958, a1);
}

uint64_t sub_1D57CFF18@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for PersonalizedAdsEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for PersonalizedAdsEngagementEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizedAdsEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57D06D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57D07D8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D57D08DC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF47970, (void (*)(void))sub_1D57CF014, (void (*)(void))sub_1D57CF058);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for PersonalizedAdsEngagementEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    *v13 = *v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    *((_WORD *)v13 + 12) = *((_WORD *)v14 + 12);
    v16 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v16;
    v13[48] = v14[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  *(_WORD *)(v12 + 24) = *(_WORD *)(v13 + 24);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  return a1;
}

uint64_t initializeWithTake for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  return a1;
}

uint64_t assignWithTake for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57D0EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57D0F6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = a2;
  return result;
}

uint64_t sub_1D57D1014()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D57D10F8 + 4 * byte_1D5AB02D9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D57D112C + 4 * byte_1D5AB02D4[v4]))();
}

uint64_t sub_1D57D112C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57D1134(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57D113CLL);
  return result;
}

uint64_t sub_1D57D1148(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57D1150);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D57D1154(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57D115C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsEngagementEvent.Model.CodingKeys()
{
  return &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1D57D117C()
{
  unint64_t result;

  result = qword_1EFF47AD0;
  if (!qword_1EFF47AD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB04A4, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47AD0);
  }
  return result;
}

unint64_t sub_1D57D11C4()
{
  unint64_t result;

  result = qword_1EFF47AD8;
  if (!qword_1EFF47AD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0414, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47AD8);
  }
  return result;
}

unint64_t sub_1D57D120C()
{
  unint64_t result;

  result = qword_1EFF47AE0;
  if (!qword_1EFF47AE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB043C, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47AE0);
  }
  return result;
}

uint64_t sub_1D57D1250(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AEC8C0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t ReferralData.referringApplication.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.referringApplication.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReferralData.referringApplication.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.referringUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.referringUrl.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ReferralData.referringUrl.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.userActivityType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.userActivityType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ReferralData.userActivityType.modify())()
{
  return nullsub_1;
}

void __swiftcall ReferralData.init(referringApplication:referringUrl:userActivityType:)(NewsAnalytics::ReferralData *__return_ptr retstr, Swift::String referringApplication, Swift::String referringUrl, Swift::String_optional userActivityType)
{
  retstr->referringApplication = referringApplication;
  retstr->referringUrl = referringUrl;
  retstr->userActivityType = userActivityType;
}

unint64_t sub_1D57D156C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 == 1)
    v1 = 0x6E69727265666572;
  if (*v0)
    return v1;
  else
    return 0xD000000000000014;
}

uint64_t sub_1D57D15D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57D1E28(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D57D15F8(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1D57D1604()
{
  sub_1D57D17C4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57D162C()
{
  sub_1D57D17C4();
  return sub_1D5AAEEE0();
}

uint64_t ReferralData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  sub_1D57D1A4C(0, &qword_1ED9C6EE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57D17C4();
  sub_1D5AAEEC8();
  v15 = 0;
  v10 = v12[5];
  sub_1D5AAED3C();
  if (!v10)
  {
    v14 = 1;
    sub_1D5AAED3C();
    v13 = 2;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D57D17C4()
{
  unint64_t result;

  result = qword_1ED9C6820;
  if (!qword_1ED9C6820)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0698, &type metadata for ReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6820);
  }
  return result;
}

uint64_t ReferralData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  sub_1D57D1A4C(0, &qword_1ED9C6EC0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57D17C4();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v28 = 0;
    v10 = sub_1D5AAECA0();
    v13 = v12;
    v25 = v10;
    v27 = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1D5AAECA0();
    v16 = v15;
    v23 = v14;
    v26 = 2;
    swift_bridgeObjectRetain();
    v24 = v16;
    v17 = sub_1D5AAEC58();
    v19 = v18;
    v20 = v17;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v21 = v24;
    *a2 = v25;
    a2[1] = v13;
    a2[2] = v23;
    a2[3] = v21;
    a2[4] = v20;
    a2[5] = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_1D57D1A4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57D17C4();
    v7 = a3(a1, &type metadata for ReferralData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57D1AB0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ReferralData.init(from:)(a1, a2);
}

uint64_t sub_1D57D1AC4(_QWORD *a1)
{
  return ReferralData.encode(to:)(a1);
}

uint64_t destroy for ReferralData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ReferralData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ReferralData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ReferralData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferralData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReferralData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D57D1CD0 + 4 * byte_1D5AB0521[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D57D1D04 + 4 * byte_1D5AB051C[v4]))();
}

uint64_t sub_1D57D1D04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57D1D0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57D1D14);
  return result;
}

uint64_t sub_1D57D1D20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57D1D28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D57D1D2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57D1D34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReferralData.CodingKeys()
{
  return &type metadata for ReferralData.CodingKeys;
}

unint64_t sub_1D57D1D54()
{
  unint64_t result;

  result = qword_1EFF47AE8;
  if (!qword_1EFF47AE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0670, &type metadata for ReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47AE8);
  }
  return result;
}

unint64_t sub_1D57D1D9C()
{
  unint64_t result;

  result = qword_1ED9C6830;
  if (!qword_1ED9C6830)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB05E0, &type metadata for ReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6830);
  }
  return result;
}

unint64_t sub_1D57D1DE4()
{
  unint64_t result;

  result = qword_1ED9C6828;
  if (!qword_1ED9C6828)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0608, &type metadata for ReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6828);
  }
  return result;
}

uint64_t sub_1D57D1E28(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AEC910 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69727265666572 && a2 == 0xEC0000006C725567 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEC930)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t UserData.userID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserData.userID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*UserData.userID.modify())()
{
  return nullsub_1;
}

uint64_t UserData.isUserIDTemporary.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t UserData.isUserIDTemporary.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*UserData.isUserIDTemporary.modify())()
{
  return nullsub_1;
}

void UserData.userType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

_BYTE *UserData.userType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*UserData.userType.modify())()
{
  return nullsub_1;
}

uint64_t UserData.userStartDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t UserData.userStartDate.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*UserData.userStartDate.modify())()
{
  return nullsub_1;
}

uint64_t UserData.ageBracket.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 32);
}

uint64_t UserData.ageBracket.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*UserData.ageBracket.modify())()
{
  return nullsub_1;
}

float UserData.ageBracketConfidenceLevel.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 36);
}

void UserData.ageBracketConfidenceLevel.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 36) = a1;
}

uint64_t (*UserData.ageBracketConfidenceLevel.modify())()
{
  return nullsub_1;
}

uint64_t UserData.gender.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 40);
}

uint64_t UserData.gender.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*UserData.gender.modify())()
{
  return nullsub_1;
}

float UserData.genderConfidenceLevel.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 44);
}

void UserData.genderConfidenceLevel.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 44) = a1;
}

uint64_t (*UserData.genderConfidenceLevel.modify())()
{
  return nullsub_1;
}

uint64_t UserData.userStorefrontID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserData.userStorefrontID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*UserData.userStorefrontID.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D57D2154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57D2754(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D57D2178(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1D57D2184()
{
  sub_1D57B4F48();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57D21AC()
{
  sub_1D57B4F48();
  return sub_1D5AAEEE0();
}

uint64_t UserData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  unsigned __int8 v34;
  char v35;
  char v36;

  sub_1D57B4EA8(0, &qword_1ED9CC870, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B4F48();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v36 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v35 = 1;
  swift_bridgeObjectRetain();
  v26 = sub_1D5AAEC64();
  v33 = 2;
  sub_1D57D24F4();
  sub_1D5AAECD0();
  v25 = v34;
  v32 = 3;
  v24 = sub_1D5AAECE8();
  v31 = 4;
  v23 = sub_1D5AAECDC();
  v30 = 5;
  sub_1D5AAECC4();
  v14 = v13;
  v29 = 6;
  v22 = sub_1D5AAECDC();
  v28 = 7;
  sub_1D5AAECC4();
  v21 = v15;
  v27 = 8;
  v20 = sub_1D5AAECA0();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v26;
  *(_BYTE *)(a2 + 17) = v25;
  *(_QWORD *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 32) = v23;
  *(_DWORD *)(a2 + 36) = v14;
  *(_DWORD *)(a2 + 40) = v22;
  *(_DWORD *)(a2 + 44) = v21;
  *(_QWORD *)(a2 + 48) = v20;
  *(_QWORD *)(a2 + 56) = v18;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D57D24F4()
{
  unint64_t result;

  result = qword_1ED9CC4A8;
  if (!qword_1ED9CC4A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserType, &type metadata for UserType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4A8);
  }
  return result;
}

uint64_t sub_1D57D2538@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UserData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for UserData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserData.CodingKeys()
{
  return &type metadata for UserData.CodingKeys;
}

unint64_t sub_1D57D2710()
{
  unint64_t result;

  result = qword_1EFF47AF0;
  if (!qword_1EFF47AF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0858, &type metadata for UserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47AF0);
  }
  return result;
}

uint64_t sub_1D57D2754(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x444972657375 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AEC950 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570795472657375 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7261745372657375 && a2 == 0xED00006574614474 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B63617242656761 && a2 == 0xEA00000000007465 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AEC970 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7265646E6567 && a2 == 0xE600000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEC990 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEC9B0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

NewsAnalytics::ICloudAccountState_optional __swiftcall ICloudAccountState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ICloudAccountState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ICloudAccountState.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E496E6567676F6CLL;
  if (*v0 != 1)
    v1 = 0x754F646567676F6CLL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D57D2BB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3A4C4(*a1, *a2);
}

unint64_t sub_1D57D2BC4()
{
  unint64_t result;

  result = qword_1EFF47AF8;
  if (!qword_1EFF47AF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ICloudAccountState, &type metadata for ICloudAccountState);
    atomic_store(result, (unint64_t *)&qword_1EFF47AF8);
  }
  return result;
}

uint64_t sub_1D57D2C08()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D57D2CAC()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D57D2D2C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::ICloudAccountState_optional sub_1D57D2DCC(Swift::String *a1)
{
  return ICloudAccountState.init(rawValue:)(*a1);
}

void sub_1D57D2DD8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x6E496E6567676F6CLL;
  if (v2 != 1)
  {
    v5 = 0x754F646567676F6CLL;
    v4 = 0xE900000000000074;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D57D2E3C()
{
  sub_1D57D2FB0();
  return sub_1D5AAE928();
}

uint64_t sub_1D57D2E98()
{
  sub_1D57D2FB0();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for ICloudAccountState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D57D2F30 + 4 * byte_1D5AB08D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D57D2F64 + 4 * byte_1D5AB08D0[v4]))();
}

uint64_t sub_1D57D2F64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57D2F6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57D2F74);
  return result;
}

uint64_t sub_1D57D2F80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57D2F88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D57D2F8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57D2F94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICloudAccountState()
{
  return &type metadata for ICloudAccountState;
}

unint64_t sub_1D57D2FB0()
{
  unint64_t result;

  result = qword_1ED9C9DD0;
  if (!qword_1ED9C9DD0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ICloudAccountState, &type metadata for ICloudAccountState);
    atomic_store(result, (unint64_t *)&qword_1ED9C9DD0);
  }
  return result;
}

uint64_t sub_1D57D2FF4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF47B00, MEMORY[0x1E0CF8078]);
}

uint64_t static ReplicaAdvertisementViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46EE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF47B00, a1);
}

uint64_t sub_1D57D3034(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF47B18, MEMORY[0x1E0CF8380]);
}

uint64_t static ReplicaAdvertisementViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46EE8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF47B18, a1);
}

uint64_t ReplicaAdvertisementViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ReplicaAdvertisementViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ReplicaAdvertisementViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ReplicaAdvertisementViewEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for ReplicaAdvertisementViewEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CBBB0);
}

uint64_t ReplicaAdvertisementViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.timedData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.articleData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.viewData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.articleScienceData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.userChannelContextData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.orientationData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.issueData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.issueViewData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.issueExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.issueExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.issueExposureContextData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 56);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 56);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.channelData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.issueViewContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.issueViewContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.issueViewContextData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 68);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 68);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.feedData.modify())()
{
  type metadata accessor for ReplicaAdvertisementViewEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ReplicaAdvertisementViewEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v2, v16);
  v17 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v2, v18);
  v19 = a1 + v4[12];
  v20 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v20, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v20, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v20, v31);
}

uint64_t ReplicaAdvertisementViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ReplicaAdvertisementViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ReplicaAdvertisementViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for ReplicaAdvertisementViewEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CBAF0);
}

uint64_t ReplicaAdvertisementViewEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t sub_1D57D41B8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t ReplicaAdvertisementViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.articleScienceData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE __dst[280];

  v3 = (const void *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 32));
  memcpy(__dst, v3, 0x111uLL);
  memcpy(a1, v3, 0x111uLL);
  return sub_1D57D42AC((uint64_t)__dst);
}

uint64_t sub_1D57D42AC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t ReplicaAdvertisementViewEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.Model.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 44);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 48));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.issueExposureContextData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 52));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 56));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 60);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.issueViewContextData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 68));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t sub_1D57D4528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

__n128 ReplicaAdvertisementViewEvent.Model.init(eventData:timedData:articleData:viewData:articleScienceData:userChannelContextData:orientationData:issueData:issueViewData:issueExposureContextData:userBundleSubscriptionContextData:channelData:issueViewContextData:feedData:)@<Q0>(void *__src@<X4>, uint64_t a2@<X0>, uint64_t a3@<X1>, __int128 *a4@<X2>, uint64_t *a5@<X3>, char *a6@<X5>, _WORD *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t *a11, char *a12, uint64_t *a13, char *a14, __n128 *a15)
{
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 *v35;
  __n128 result;
  __int16 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  __n128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _BYTE v73[23];
  _BYTE __dst[273];

  v72 = a4[6];
  *(_OWORD *)v73 = a4[7];
  *(_QWORD *)&v73[15] = *(_QWORD *)((char *)a4 + 127);
  v68 = a4[2];
  v69 = a4[3];
  v70 = a4[4];
  v71 = a4[5];
  v66 = *a4;
  v67 = a4[1];
  v39 = a5[1];
  v40 = *a5;
  v38 = *((_WORD *)a5 + 8);
  memcpy(__dst, __src, sizeof(__dst));
  v41 = a6[1];
  v42 = *a6;
  LOWORD(a6) = *((_WORD *)a6 + 1);
  LOWORD(a7) = *a7;
  v47 = a8[1];
  v48 = *a8;
  v45 = *((_BYTE *)a8 + 17);
  v46 = *((_BYTE *)a8 + 16);
  v44 = a8[3];
  v49 = a10[1];
  v50 = *a10;
  v51 = a11[1];
  v52 = *a11;
  v60 = *a12;
  v58 = *((_QWORD *)a12 + 2);
  v59 = *((_QWORD *)a12 + 1);
  v56 = a12[25];
  v57 = a12[24];
  v54 = *((_QWORD *)a12 + 5);
  v55 = *((_QWORD *)a12 + 4);
  v53 = a12[48];
  v19 = *a13;
  v64 = a13[1];
  v62 = *((_BYTE *)a13 + 17);
  v63 = *((_BYTE *)a13 + 16);
  v20 = a13[4];
  v61 = a13[3];
  v21 = *a14;
  v65 = *a15;
  v22 = a15[1].n128_u64[0];
  v23 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a9, a2, v23);
  v24 = (int *)type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  v25 = a9 + v24[5];
  v26 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25, a3, v26);
  v27 = a9 + v24[6];
  *(_OWORD *)(v27 + 96) = v72;
  *(_OWORD *)(v27 + 112) = *(_OWORD *)v73;
  *(_QWORD *)(v27 + 127) = *(_QWORD *)&v73[15];
  *(_OWORD *)(v27 + 32) = v68;
  *(_OWORD *)(v27 + 48) = v69;
  *(_OWORD *)(v27 + 64) = v70;
  *(_OWORD *)(v27 + 80) = v71;
  *(_OWORD *)v27 = v66;
  *(_OWORD *)(v27 + 16) = v67;
  v28 = a9 + v24[7];
  *(_QWORD *)v28 = v40;
  *(_QWORD *)(v28 + 8) = v39;
  *(_WORD *)(v28 + 16) = v38;
  memcpy((void *)(a9 + v24[8]), __dst, 0x111uLL);
  v29 = a9 + v24[9];
  *(_BYTE *)v29 = v42;
  *(_BYTE *)(v29 + 1) = v41;
  *(_WORD *)(v29 + 2) = (_WORD)a6;
  *(_WORD *)(a9 + v24[10]) = (_WORD)a7;
  v30 = a9 + v24[11];
  *(_QWORD *)v30 = v48;
  *(_QWORD *)(v30 + 8) = v47;
  *(_BYTE *)(v30 + 16) = v46;
  *(_BYTE *)(v30 + 17) = v45;
  *(_QWORD *)(v30 + 24) = v44;
  v31 = (_QWORD *)(a9 + v24[12]);
  *v31 = v50;
  v31[1] = v49;
  v32 = (_QWORD *)(a9 + v24[13]);
  *v32 = v52;
  v32[1] = v51;
  v33 = a9 + v24[14];
  *(_BYTE *)v33 = v60;
  *(_QWORD *)(v33 + 8) = v59;
  *(_QWORD *)(v33 + 16) = v58;
  *(_BYTE *)(v33 + 24) = v57;
  *(_BYTE *)(v33 + 25) = v56;
  *(_QWORD *)(v33 + 32) = v55;
  *(_QWORD *)(v33 + 40) = v54;
  *(_BYTE *)(v33 + 48) = v53;
  v34 = a9 + v24[15];
  *(_QWORD *)v34 = v19;
  *(_QWORD *)(v34 + 8) = v64;
  *(_BYTE *)(v34 + 16) = v63;
  *(_BYTE *)(v34 + 17) = v62;
  *(_QWORD *)(v34 + 24) = v61;
  *(_QWORD *)(v34 + 32) = v20;
  *(_BYTE *)(a9 + v24[16]) = v21;
  v35 = (__n128 *)(a9 + v24[17]);
  result = v65;
  *v35 = v65;
  v35[1].n128_u64[0] = v22;
  return result;
}

uint64_t sub_1D57D4850(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57D4888 + 4 * byte_1D5AB0A00[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D57D4888()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D57D489C()
{
  return 0x44656C6369747261;
}

void sub_1D57D49A8()
{
  JUMPOUT(0x1D57D49BCLL);
}

uint64_t sub_1D57D49C8()
{
  return 0x6174614464656566;
}

uint64_t sub_1D57D49E0()
{
  unsigned __int8 *v0;

  return sub_1D57D4850(*v0);
}

uint64_t sub_1D57D49E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57D9A9C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D57D4A0C(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1D57D4A18()
{
  sub_1D57D4FF4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57D4A40()
{
  sub_1D57D4FF4();
  return sub_1D5AAEEE0();
}

uint64_t ReplicaAdvertisementViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char v43;
  _BYTE v44[273];
  char v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  char v49;

  v3 = v1;
  sub_1D57D5A5C(0, &qword_1EFF47B30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v42 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57D4FF4();
  sub_1D5AAEEC8();
  v44[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
    v49 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + v10[6];
    v12 = *(_OWORD *)(v11 + 112);
    *(_OWORD *)&v44[96] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)&v44[112] = v12;
    *(_QWORD *)&v44[127] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    *(_OWORD *)&v44[32] = *(_OWORD *)(v11 + 32);
    *(_OWORD *)&v44[48] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    *(_OWORD *)&v44[64] = *(_OWORD *)(v11 + 64);
    *(_OWORD *)&v44[80] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v44 = *(_OWORD *)v11;
    *(_OWORD *)&v44[16] = v15;
    LOBYTE(v46) = 2;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    LOWORD(v16) = *((_WORD *)v16 + 8);
    v46 = v17;
    v47 = v18;
    v48 = (__int16)v16;
    v45 = 3;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    memcpy(v44, (const void *)(v3 + v10[8]), sizeof(v44));
    v43 = 4;
    sub_1D57CB7A8();
    sub_1D5AAED6C();
    v19 = (char *)(v3 + v10[9]);
    v20 = *v19;
    v21 = v19[1];
    LOWORD(v19) = *((_WORD *)v19 + 1);
    v44[0] = v20;
    v44[1] = v21;
    *(_WORD *)&v44[2] = (_WORD)v19;
    v43 = 5;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    *(_WORD *)v44 = *(_WORD *)(v3 + v10[10]);
    v43 = 6;
    sub_1D57CA4E4();
    sub_1D5AAED6C();
    v22 = (uint64_t *)(v3 + v10[11]);
    v23 = *v22;
    v24 = v22[1];
    v25 = *((_BYTE *)v22 + 16);
    v26 = *((_BYTE *)v22 + 17);
    v27 = v22[3];
    *(_QWORD *)v44 = v23;
    *(_QWORD *)&v44[8] = v24;
    v44[16] = v25;
    v44[17] = v26;
    *(_QWORD *)&v44[24] = v27;
    v43 = 7;
    sub_1D57C5F1C();
    sub_1D5AAED6C();
    *(_OWORD *)v44 = *(_OWORD *)(v3 + v10[12]);
    v43 = 8;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    *(_OWORD *)v44 = *(_OWORD *)(v3 + v10[13]);
    v43 = 9;
    sub_1D57C784C();
    sub_1D5AAED18();
    v28 = v3 + v10[14];
    v29 = *(_BYTE *)(v28 + 24);
    v30 = *(_BYTE *)(v28 + 25);
    v31 = *(_BYTE *)(v28 + 48);
    v44[0] = *(_BYTE *)v28;
    *(_OWORD *)&v44[8] = *(_OWORD *)(v28 + 8);
    v44[24] = v29;
    v44[25] = v30;
    *(_OWORD *)&v44[32] = *(_OWORD *)(v28 + 32);
    v44[48] = v31;
    v43 = 10;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v32 = (uint64_t *)(v3 + v10[15]);
    v33 = *v32;
    v34 = v32[1];
    v35 = *((_BYTE *)v32 + 16);
    v36 = *((_BYTE *)v32 + 17);
    v38 = v32[3];
    v37 = v32[4];
    *(_QWORD *)v44 = v33;
    *(_QWORD *)&v44[8] = v34;
    v44[16] = v35;
    v44[17] = v36;
    *(_QWORD *)&v44[24] = v38;
    *(_QWORD *)&v44[32] = v37;
    v43 = 11;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v44[0] = *(_BYTE *)(v3 + v10[16]);
    v43 = 12;
    sub_1D57C86EC();
    sub_1D5AAED18();
    v39 = v3 + v10[17];
    v40 = *(_QWORD *)(v39 + 16);
    *(_OWORD *)v44 = *(_OWORD *)v39;
    *(_QWORD *)&v44[16] = v40;
    v43 = 13;
    sub_1D57C65D4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D57D4FF4()
{
  unint64_t result;

  result = qword_1EFF47B38;
  if (!qword_1EFF47B38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0D74, &type metadata for ReplicaAdvertisementViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47B38);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  int *v19;
  int v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int16 v31;
  char *v32;
  char v33;
  __int16 v34;
  char *v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BOOL4 v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  _BYTE v71[24];
  uint64_t v72;
  __int128 v73;
  char v74;
  char v75;
  char v76;
  char v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  _BYTE v85[23];
  _OWORD v86[19];
  int *v87;

  v61 = a2;
  v66 = sub_1D5AADFB0();
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v65 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D57D5A5C(0, &qword_1EFF47B40, MEMORY[0x1E0DED048]);
  v63 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v59 - v8;
  v87 = (int *)type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v87);
  v70 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1D57D4FF4();
  v62 = v9;
  v12 = v69;
  sub_1D5AAEEB0();
  if (v12)
  {
    v69 = v12;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    v20 = 0;
    v67 = 0;
  }
  else
  {
    v60 = v7;
    LOBYTE(v86[0]) = 0;
    sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v21 = v70;
    (*(void (**)(void))(v65 + 32))();
    LOBYTE(v86[0]) = 1;
    sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v22 = v4;
    v23 = v66;
    sub_1D5AAECD0();
    v24 = v87;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v21[v87[5]], v22, v23);
    v77 = 2;
    sub_1D57CB8FC();
    sub_1D5AAECD0();
    v25 = &v21[v24[6]];
    v26 = v83;
    v27 = *(_OWORD *)v85;
    *((_OWORD *)v25 + 6) = v84;
    *((_OWORD *)v25 + 7) = v27;
    *(_QWORD *)(v25 + 127) = *(_QWORD *)&v85[15];
    v28 = v81;
    *((_OWORD *)v25 + 2) = v80;
    *((_OWORD *)v25 + 3) = v28;
    *((_OWORD *)v25 + 4) = v82;
    *((_OWORD *)v25 + 5) = v26;
    v29 = v79;
    *(_OWORD *)v25 = v78;
    *((_OWORD *)v25 + 1) = v29;
    v71[0] = 3;
    sub_1D57C6260();
    sub_1D5AAECD0();
    v30 = *((_QWORD *)&v86[0] + 1);
    v31 = v86[1];
    v32 = &v21[v24[7]];
    *(_QWORD *)v32 = *(_QWORD *)&v86[0];
    *((_QWORD *)v32 + 1) = v30;
    *((_WORD *)v32 + 8) = v31;
    v76 = 4;
    sub_1D57CB764();
    sub_1D5AAECD0();
    memcpy(&v21[v24[8]], v86, 0x111uLL);
    v75 = 5;
    sub_1D57C7AE0();
    sub_1D5AAECD0();
    v33 = v71[1];
    v34 = *(_WORD *)&v71[2];
    v35 = &v21[v24[9]];
    *v35 = v71[0];
    v35[1] = v33;
    *((_WORD *)v35 + 1) = v34;
    v75 = 6;
    sub_1D57CA4A0();
    sub_1D5AAECD0();
    *(_WORD *)&v21[v24[10]] = *(_WORD *)v71;
    v75 = 7;
    sub_1D57C5ED8();
    sub_1D5AAECD0();
    v36 = *(_QWORD *)&v71[8];
    v37 = v71[16];
    v38 = v71[17];
    v39 = v72;
    v40 = &v21[v24[11]];
    *(_QWORD *)v40 = *(_QWORD *)v71;
    *((_QWORD *)v40 + 1) = v36;
    v40[16] = v37;
    v40[17] = v38;
    *((_QWORD *)v40 + 3) = v39;
    v75 = 8;
    sub_1D57CAD28();
    sub_1D5AAEC7C();
    *(_OWORD *)&v21[v87[12]] = *(_OWORD *)v71;
    v75 = 9;
    sub_1D57C7808();
    sub_1D5AAEC7C();
    v69 = 0;
    *(_OWORD *)&v70[v87[13]] = *(_OWORD *)v71;
    v75 = 10;
    sub_1D57C6AF8();
    v41 = v69;
    sub_1D5AAECD0();
    v67 = v41 == 0;
    v69 = v41;
    if (v41)
      goto LABEL_12;
    v42 = v72;
    v43 = BYTE1(v72);
    v44 = v74;
    v45 = &v70[v87[14]];
    *v45 = v71[0];
    *(_OWORD *)(v45 + 8) = *(_OWORD *)&v71[8];
    v45[24] = v42;
    v45[25] = v43;
    *((_OWORD *)v45 + 2) = v73;
    v45[48] = v44;
    v75 = 11;
    sub_1D57CB874();
    v46 = v69;
    sub_1D5AAECD0();
    v69 = v46;
    if (v46)
    {
LABEL_12:
      (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v63);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
      v20 = 0;
    }
    else
    {
      v48 = *(_QWORD *)&v71[8];
      v49 = v71[16];
      v50 = v71[17];
      v51 = v72;
      v52 = v73;
      v53 = &v70[v87[15]];
      *(_QWORD *)v53 = *(_QWORD *)v71;
      *((_QWORD *)v53 + 1) = v48;
      v53[16] = v49;
      v53[17] = v50;
      *((_QWORD *)v53 + 3) = v51;
      *((_QWORD *)v53 + 4) = v52;
      v75 = 12;
      sub_1D57C86A8();
      v54 = v69;
      sub_1D5AAEC7C();
      v69 = v54;
      if (!v54)
      {
        v70[v87[16]] = v71[0];
        v75 = 13;
        sub_1D57C6590();
        v55 = v69;
        sub_1D5AAEC7C();
        v69 = v55;
        if (!v55)
        {
          (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v63);
          v56 = *(_QWORD *)&v71[16];
          v57 = (uint64_t)v70;
          v58 = &v70[v87[17]];
          *(_OWORD *)v58 = *(_OWORD *)v71;
          *((_QWORD *)v58 + 2) = v56;
          sub_1D57D5B34(v57, v61);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
          return sub_1D57D5B78(v57);
        }
      }
      (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v63);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
      v20 = 1;
    }
    v47 = v70;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v70, v5);
    (*(void (**)(char *, uint64_t))(v64 + 8))(&v47[v87[5]], v66);
    v14 = &v47[v87[6]];
    v15 = *((_OWORD *)v14 + 7);
    v86[6] = *((_OWORD *)v14 + 6);
    v86[7] = v15;
    *(_QWORD *)((char *)&v86[7] + 15) = *(_QWORD *)(v14 + 127);
    v16 = *((_OWORD *)v14 + 3);
    v86[2] = *((_OWORD *)v14 + 2);
    v86[3] = v16;
    v17 = *((_OWORD *)v14 + 5);
    v86[4] = *((_OWORD *)v14 + 4);
    v86[5] = v17;
    v18 = *((_OWORD *)v14 + 1);
    v86[0] = *(_OWORD *)v14;
    v86[1] = v18;
    sub_1D57D5AE0((uint64_t)v86);
    v19 = v87;
    swift_bridgeObjectRelease();
    memcpy(v86, &v47[v19[8]], 0x111uLL);
    sub_1D57D5AB8((uint64_t)v86);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v67)
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
        return result;
      goto LABEL_8;
    }
  }
  if (!v20)
    return result;
LABEL_8:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D57D5A5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57D4FF4();
    v7 = a3(a1, &type metadata for ReplicaAdvertisementViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57D5AB8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D57D5AE0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D57D5B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D57D5B78(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57D5BB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReplicaAdvertisementViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D57D5BC8(_QWORD *a1)
{
  return ReplicaAdvertisementViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D57D5BDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46EE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF47B00, a1);
}

uint64_t sub_1D57D5C00@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46EE8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF47B18, a1);
}

uint64_t sub_1D57D5C24@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v4, v17);
  v18 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v4, v19);
  v20 = a2 + a1[12];
  v21 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v21, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v21, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v21, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReplicaAdvertisementViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for ReplicaAdvertisementViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
}

uint64_t initializeWithCopy for ReplicaAdvertisementViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for ReplicaAdvertisementViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for ReplicaAdvertisementViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for ReplicaAdvertisementViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReplicaAdvertisementViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57D7840(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
                            v8 = v25;
                            v12 = *(_QWORD *)(v25 - 8);
                            v13 = a3[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ReplicaAdvertisementViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57D7BF0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
                            v10 = v27;
                            v14 = *(_QWORD *)(v27 - 8);
                            v15 = a4[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D57D7F9C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
                            if (v13 <= 0x3F)
                              swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ReplicaAdvertisementViewEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v68 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v68 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v16;
    v14[32] = v15[32];
    v17 = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 6) = v17;
    v14[56] = v15[56];
    v14[57] = v15[57];
    v18 = *((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
    *((_QWORD *)v14 + 9) = v18;
    v14[80] = v15[80];
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    v14[112] = v15[112];
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    *((_DWORD *)v14 + 32) = *((_DWORD *)v15 + 32);
    v14[132] = v15[132];
    *(_WORD *)(v14 + 133) = *(_WORD *)(v15 + 133);
    v19 = (char *)a1 + v13;
    v20 = (char *)a2 + v13;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    v22 = a3[8];
    v23 = a3[9];
    v24 = (char *)a1 + v22;
    v25 = (char *)a2 + v22;
    v26 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v26;
    v27 = *((_OWORD *)v25 + 3);
    *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
    *((_OWORD *)v24 + 3) = v27;
    v28 = *((_OWORD *)v25 + 5);
    *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
    *((_OWORD *)v24 + 5) = v28;
    *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
    v29 = *((_QWORD *)v25 + 15);
    v30 = *((_QWORD *)v25 + 14);
    v24[128] = v25[128];
    *((_QWORD *)v24 + 14) = v30;
    *((_QWORD *)v24 + 15) = v29;
    v31 = *((_QWORD *)v25 + 17);
    v24[144] = v25[144];
    *((_QWORD *)v24 + 17) = v31;
    v32 = *((_QWORD *)v25 + 19);
    v24[160] = v25[160];
    *((_QWORD *)v24 + 19) = v32;
    v33 = *((_QWORD *)v25 + 21);
    v24[176] = v25[176];
    *((_QWORD *)v24 + 21) = v33;
    v34 = *((_QWORD *)v25 + 23);
    v24[192] = v25[192];
    *((_QWORD *)v24 + 23) = v34;
    v35 = *((_QWORD *)v25 + 25);
    v24[208] = v25[208];
    *((_QWORD *)v24 + 25) = v35;
    v36 = *((_QWORD *)v25 + 27);
    v24[224] = v25[224];
    *((_QWORD *)v24 + 27) = v36;
    v37 = *((_QWORD *)v25 + 29);
    v24[240] = v25[240];
    *((_QWORD *)v24 + 29) = v37;
    v38 = *((_QWORD *)v25 + 31);
    v24[256] = v25[256];
    *((_QWORD *)v24 + 31) = v38;
    v39 = *((_QWORD *)v25 + 33);
    v24[272] = v25[272];
    *((_QWORD *)v24 + 33) = v39;
    *(_DWORD *)((char *)a1 + v23) = *(_DWORD *)((char *)a2 + v23);
    v40 = a3[11];
    *(_WORD *)((char *)a1 + a3[10]) = *(_WORD *)((char *)a2 + a3[10]);
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v41[16] = v42[16];
    v41[17] = v42[17];
    *((_QWORD *)v41 + 3) = *((_QWORD *)v42 + 3);
    v44 = a3[12];
    v45 = a3[13];
    v46 = (_QWORD *)((char *)a1 + v44);
    v47 = (_QWORD *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v49 = (_QWORD *)((char *)a1 + v45);
    v50 = (_QWORD *)((char *)a2 + v45);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = a3[14];
    v53 = a3[15];
    v54 = (char *)a1 + v52;
    v55 = (char *)a2 + v52;
    *v54 = *v55;
    v56 = *((_QWORD *)v55 + 2);
    *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
    *((_QWORD *)v54 + 2) = v56;
    v54[24] = v55[24];
    v54[25] = v55[25];
    v57 = *((_QWORD *)v55 + 5);
    *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
    *((_QWORD *)v54 + 5) = v57;
    v54[48] = v55[48];
    v58 = (char *)a1 + v53;
    v59 = (char *)a2 + v53;
    v60 = *((_QWORD *)v59 + 1);
    *(_QWORD *)v58 = *(_QWORD *)v59;
    *((_QWORD *)v58 + 1) = v60;
    v58[16] = v59[16];
    v58[17] = v59[17];
    v61 = *((_QWORD *)v59 + 3);
    v62 = *((_QWORD *)v59 + 4);
    v63 = a3[16];
    v64 = a3[17];
    LOBYTE(v17) = *((_BYTE *)a2 + v63);
    *((_QWORD *)v58 + 3) = v61;
    *((_QWORD *)v58 + 4) = v62;
    *((_BYTE *)a1 + v63) = v17;
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    v67 = *(_QWORD *)((char *)a2 + v64 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v67 == 1)
    {
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
    }
    else
    {
      *v65 = *v66;
      *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
      *((_QWORD *)v65 + 2) = v67;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 68) + 16);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 48) = v16;
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
  *(_BYTE *)(v13 + 57) = *(_BYTE *)(v14 + 57);
  v17 = *(_QWORD *)(v14 + 72);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 72) = v17;
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  *(_DWORD *)(v13 + 128) = *(_DWORD *)(v14 + 128);
  *(_BYTE *)(v13 + 132) = *(_BYTE *)(v14 + 132);
  *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
  v18 = a1 + v12;
  v19 = a2 + v12;
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  v26 = *(_OWORD *)(v24 + 48);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  *(_OWORD *)(v23 + 48) = v26;
  v27 = *(_OWORD *)(v24 + 80);
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
  *(_OWORD *)(v23 + 80) = v27;
  *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
  v28 = *(_QWORD *)(v24 + 120);
  v29 = *(_QWORD *)(v24 + 112);
  *(_BYTE *)(v23 + 128) = *(_BYTE *)(v24 + 128);
  *(_QWORD *)(v23 + 112) = v29;
  *(_QWORD *)(v23 + 120) = v28;
  v30 = *(_QWORD *)(v24 + 136);
  *(_BYTE *)(v23 + 144) = *(_BYTE *)(v24 + 144);
  *(_QWORD *)(v23 + 136) = v30;
  v31 = *(_QWORD *)(v24 + 152);
  *(_BYTE *)(v23 + 160) = *(_BYTE *)(v24 + 160);
  *(_QWORD *)(v23 + 152) = v31;
  v32 = *(_QWORD *)(v24 + 168);
  *(_BYTE *)(v23 + 176) = *(_BYTE *)(v24 + 176);
  *(_QWORD *)(v23 + 168) = v32;
  v33 = *(_QWORD *)(v24 + 184);
  *(_BYTE *)(v23 + 192) = *(_BYTE *)(v24 + 192);
  *(_QWORD *)(v23 + 184) = v33;
  v34 = *(_QWORD *)(v24 + 200);
  *(_BYTE *)(v23 + 208) = *(_BYTE *)(v24 + 208);
  *(_QWORD *)(v23 + 200) = v34;
  v35 = *(_QWORD *)(v24 + 216);
  *(_BYTE *)(v23 + 224) = *(_BYTE *)(v24 + 224);
  *(_QWORD *)(v23 + 216) = v35;
  v36 = *(_QWORD *)(v24 + 232);
  *(_BYTE *)(v23 + 240) = *(_BYTE *)(v24 + 240);
  *(_QWORD *)(v23 + 232) = v36;
  v37 = *(_QWORD *)(v24 + 248);
  *(_BYTE *)(v23 + 256) = *(_BYTE *)(v24 + 256);
  *(_QWORD *)(v23 + 248) = v37;
  v38 = *(_QWORD *)(v24 + 264);
  *(_BYTE *)(v23 + 272) = *(_BYTE *)(v24 + 272);
  *(_QWORD *)(v23 + 264) = v38;
  *(_DWORD *)(a1 + v22) = *(_DWORD *)(a2 + v22);
  v39 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)(v41 + 8);
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_QWORD *)(v40 + 8) = v42;
  *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
  *(_BYTE *)(v40 + 17) = *(_BYTE *)(v41 + 17);
  *(_QWORD *)(v40 + 24) = *(_QWORD *)(v41 + 24);
  v43 = a3[12];
  v44 = a3[13];
  v45 = (_QWORD *)(a1 + v43);
  v46 = (_QWORD *)(a2 + v43);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  v48 = (_QWORD *)(a1 + v44);
  v49 = (_QWORD *)(a2 + v44);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = a3[14];
  v52 = a3[15];
  v53 = a1 + v51;
  v54 = a2 + v51;
  *(_BYTE *)v53 = *(_BYTE *)v54;
  v55 = *(_QWORD *)(v54 + 16);
  *(_QWORD *)(v53 + 8) = *(_QWORD *)(v54 + 8);
  *(_QWORD *)(v53 + 16) = v55;
  *(_BYTE *)(v53 + 24) = *(_BYTE *)(v54 + 24);
  *(_BYTE *)(v53 + 25) = *(_BYTE *)(v54 + 25);
  v56 = *(_QWORD *)(v54 + 40);
  *(_QWORD *)(v53 + 32) = *(_QWORD *)(v54 + 32);
  *(_QWORD *)(v53 + 40) = v56;
  *(_BYTE *)(v53 + 48) = *(_BYTE *)(v54 + 48);
  v57 = a1 + v52;
  v58 = a2 + v52;
  v59 = *(_QWORD *)(v58 + 8);
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *(_QWORD *)(v57 + 8) = v59;
  *(_BYTE *)(v57 + 16) = *(_BYTE *)(v58 + 16);
  *(_BYTE *)(v57 + 17) = *(_BYTE *)(v58 + 17);
  v60 = *(_QWORD *)(v58 + 24);
  v61 = *(_QWORD *)(v58 + 32);
  v62 = a3[16];
  v63 = a3[17];
  LOBYTE(v16) = *(_BYTE *)(a2 + v62);
  *(_QWORD *)(v57 + 24) = v60;
  *(_QWORD *)(v57 + 32) = v61;
  *(_BYTE *)(a1 + v62) = v16;
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = *(_QWORD *)(a2 + v63 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v66 == 1)
  {
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *(_QWORD *)(v64 + 16) = *(_QWORD *)(v65 + 16);
  }
  else
  {
    *(_BYTE *)v64 = *(_BYTE *)v65;
    *(_QWORD *)(v64 + 8) = *(_QWORD *)(v65 + 8);
    *(_QWORD *)(v64 + 16) = v66;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(a2 + v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  v14 = *(_QWORD *)(v13 + 48);
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_QWORD *)(v12 + 48) = v14;
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 72) = v15;
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(a2 + v19 + 8);
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(a2 + v19 + 16);
  *(_QWORD *)(v20 + 24) = *(_QWORD *)(a2 + v19 + 24);
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(a2 + v19 + 32);
  *(_QWORD *)(v20 + 40) = *(_QWORD *)(a2 + v19 + 40);
  *(_QWORD *)(v20 + 48) = *(_QWORD *)(a2 + v19 + 48);
  *(_QWORD *)(v20 + 56) = *(_QWORD *)(a2 + v19 + 56);
  *(_QWORD *)(v20 + 64) = *(_QWORD *)(a2 + v19 + 64);
  *(_QWORD *)(v20 + 72) = *(_QWORD *)(a2 + v19 + 72);
  *(_QWORD *)(v20 + 80) = *(_QWORD *)(a2 + v19 + 80);
  *(_QWORD *)(v20 + 88) = *(_QWORD *)(a2 + v19 + 88);
  *(_QWORD *)(v20 + 96) = *(_QWORD *)(a2 + v19 + 96);
  *(_QWORD *)(v20 + 104) = *(_QWORD *)(a2 + v19 + 104);
  *(_QWORD *)(v20 + 112) = *(_QWORD *)(a2 + v19 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 120);
  *(_BYTE *)(v20 + 128) = *(_BYTE *)(v21 + 128);
  *(_QWORD *)(v20 + 120) = v22;
  v23 = *(_QWORD *)(v21 + 136);
  *(_BYTE *)(v20 + 144) = *(_BYTE *)(v21 + 144);
  *(_QWORD *)(v20 + 136) = v23;
  v24 = *(_QWORD *)(v21 + 152);
  *(_BYTE *)(v20 + 160) = *(_BYTE *)(v21 + 160);
  *(_QWORD *)(v20 + 152) = v24;
  v25 = *(_QWORD *)(v21 + 168);
  *(_BYTE *)(v20 + 176) = *(_BYTE *)(v21 + 176);
  *(_QWORD *)(v20 + 168) = v25;
  v26 = *(_QWORD *)(v21 + 184);
  *(_BYTE *)(v20 + 192) = *(_BYTE *)(v21 + 192);
  *(_QWORD *)(v20 + 184) = v26;
  v27 = *(_QWORD *)(v21 + 200);
  *(_BYTE *)(v20 + 208) = *(_BYTE *)(v21 + 208);
  *(_QWORD *)(v20 + 200) = v27;
  v28 = *(_QWORD *)(v21 + 216);
  *(_BYTE *)(v20 + 224) = *(_BYTE *)(v21 + 224);
  *(_QWORD *)(v20 + 216) = v28;
  v29 = *(_QWORD *)(v21 + 232);
  *(_BYTE *)(v20 + 240) = *(_BYTE *)(v21 + 240);
  *(_QWORD *)(v20 + 232) = v29;
  v30 = *(_QWORD *)(v21 + 248);
  *(_BYTE *)(v20 + 256) = *(_BYTE *)(v21 + 256);
  *(_QWORD *)(v20 + 248) = v30;
  v31 = *(_QWORD *)(v21 + 264);
  *(_BYTE *)(v20 + 272) = *(_BYTE *)(v21 + 272);
  *(_QWORD *)(v20 + 264) = v31;
  v32 = a3[9];
  v33 = (_BYTE *)(a1 + v32);
  v34 = (_BYTE *)(a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  v33[2] = v34[2];
  v33[3] = v34[3];
  v35 = a3[10];
  v36 = (_BYTE *)(a1 + v35);
  v37 = (_BYTE *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  v38 = a3[11];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_QWORD *)v39 = *(_QWORD *)(a2 + v38);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(a2 + v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
  *(_BYTE *)(v39 + 17) = *(_BYTE *)(v40 + 17);
  *(_QWORD *)(v39 + 24) = *(_QWORD *)(v40 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = a3[12];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = a3[13];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = a3[14];
  v48 = a1 + v47;
  v49 = a2 + v47;
  *(_BYTE *)v48 = *(_BYTE *)(a2 + v47);
  *(_QWORD *)(v48 + 8) = *(_QWORD *)(a2 + v47 + 8);
  *(_QWORD *)(v48 + 16) = *(_QWORD *)(a2 + v47 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v48 + 24) = *(_BYTE *)(v49 + 24);
  *(_BYTE *)(v48 + 25) = *(_BYTE *)(v49 + 25);
  *(_QWORD *)(v48 + 32) = *(_QWORD *)(v49 + 32);
  *(_QWORD *)(v48 + 40) = *(_QWORD *)(v49 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v48 + 48) = *(_BYTE *)(v49 + 48);
  v50 = a3[15];
  v51 = a1 + v50;
  v52 = a2 + v50;
  *(_QWORD *)v51 = *(_QWORD *)(a2 + v50);
  *(_QWORD *)(v51 + 8) = *(_QWORD *)(a2 + v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
  *(_BYTE *)(v51 + 17) = *(_BYTE *)(v52 + 17);
  *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v53 = a3[17];
  v54 = a1 + v53;
  v55 = (__int128 *)(a2 + v53);
  v56 = *(_QWORD *)(a1 + v53 + 16);
  v57 = *((_QWORD *)v55 + 2);
  if (v56 == 1)
  {
    if (v57 == 1)
    {
      v58 = *v55;
      *(_QWORD *)(v54 + 16) = *((_QWORD *)v55 + 2);
      *(_OWORD *)v54 = v58;
    }
    else
    {
      *(_BYTE *)v54 = *(_BYTE *)v55;
      *(_QWORD *)(v54 + 8) = *((_QWORD *)v55 + 1);
      *(_QWORD *)(v54 + 16) = *((_QWORD *)v55 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v57 == 1)
  {
    sub_1D57D9100(v54);
    v59 = *((_QWORD *)v55 + 2);
    *(_OWORD *)v54 = *v55;
    *(_QWORD *)(v54 + 16) = v59;
  }
  else
  {
    *(_BYTE *)v54 = *(_BYTE *)v55;
    *(_QWORD *)(v54 + 8) = *((_QWORD *)v55 + 1);
    *(_QWORD *)(v54 + 16) = *((_QWORD *)v55 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1D57D9100(uint64_t a1)
{
  destroy for FeedData();
  return a1;
}

uint64_t initializeWithTake for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = (__int128 *)(a2 + v12);
  v21 = *v20;
  *(_WORD *)(v19 + 16) = *((_WORD *)v20 + 8);
  v22 = a3[8];
  *(_OWORD *)v19 = v21;
  memcpy((void *)(a1 + v22), (const void *)(a2 + v22), 0x111uLL);
  v23 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(_WORD *)(a1 + v23) = *(_WORD *)(a2 + v23);
  v24 = a3[11];
  v25 = a3[12];
  v26 = (_OWORD *)(a1 + v24);
  v27 = (_OWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  v29 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  v33 = a3[15];
  v34 = a3[16];
  v35 = a1 + v33;
  v36 = (__int128 *)(a2 + v33);
  v37 = *v36;
  v38 = v36[1];
  *(_QWORD *)(v35 + 32) = *((_QWORD *)v36 + 4);
  *(_OWORD *)v35 = v37;
  *(_OWORD *)(v35 + 16) = v38;
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  v39 = a3[17];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_QWORD *)(v40 + 16) = *(_QWORD *)(v41 + 16);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  return a1;
}

uint64_t assignWithTake for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  v14 = *(_QWORD *)(a2 + v11 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_OWORD *)(a2 + v20 + 16);
  *(_OWORD *)v21 = *(_OWORD *)(a2 + v20);
  *(_OWORD *)(v21 + 16) = v23;
  v24 = *(_OWORD *)(a2 + v20 + 48);
  *(_OWORD *)(v21 + 32) = *(_OWORD *)(a2 + v20 + 32);
  *(_OWORD *)(v21 + 48) = v24;
  v25 = *(_OWORD *)(a2 + v20 + 80);
  *(_OWORD *)(v21 + 64) = *(_OWORD *)(a2 + v20 + 64);
  *(_OWORD *)(v21 + 80) = v25;
  *(_OWORD *)(v21 + 96) = *(_OWORD *)(a2 + v20 + 96);
  *(_QWORD *)(v21 + 112) = *(_QWORD *)(a2 + v20 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
  *(_BYTE *)(v21 + 128) = *(_BYTE *)(v22 + 128);
  *(_QWORD *)(v21 + 136) = *(_QWORD *)(v22 + 136);
  *(_BYTE *)(v21 + 144) = *(_BYTE *)(v22 + 144);
  *(_QWORD *)(v21 + 152) = *(_QWORD *)(v22 + 152);
  *(_BYTE *)(v21 + 160) = *(_BYTE *)(v22 + 160);
  *(_BYTE *)(v21 + 176) = *(_BYTE *)(v22 + 176);
  *(_QWORD *)(v21 + 168) = *(_QWORD *)(v22 + 168);
  v26 = *(_QWORD *)(v22 + 184);
  *(_BYTE *)(v21 + 192) = *(_BYTE *)(v22 + 192);
  *(_QWORD *)(v21 + 184) = v26;
  *(_QWORD *)(v21 + 200) = *(_QWORD *)(v22 + 200);
  *(_BYTE *)(v21 + 208) = *(_BYTE *)(v22 + 208);
  *(_QWORD *)(v21 + 216) = *(_QWORD *)(v22 + 216);
  *(_BYTE *)(v21 + 224) = *(_BYTE *)(v22 + 224);
  *(_QWORD *)(v21 + 232) = *(_QWORD *)(v22 + 232);
  *(_BYTE *)(v21 + 240) = *(_BYTE *)(v22 + 240);
  *(_BYTE *)(v21 + 256) = *(_BYTE *)(v22 + 256);
  *(_QWORD *)(v21 + 248) = *(_QWORD *)(v22 + 248);
  *(_BYTE *)(v21 + 272) = *(_BYTE *)(v22 + 272);
  *(_QWORD *)(v21 + 264) = *(_QWORD *)(v22 + 264);
  v27 = a3[9];
  v28 = a3[10];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_BYTE *)v29 = *(_BYTE *)v30;
  *(_BYTE *)(v29 + 1) = *(_BYTE *)(v30 + 1);
  *(_WORD *)(v29 + 2) = *(_WORD *)(v30 + 2);
  *(_WORD *)(a1 + v28) = *(_WORD *)(a2 + v28);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  *(_BYTE *)(v32 + 17) = *(_BYTE *)(v33 + 17);
  *(_QWORD *)(v32 + 24) = *(_QWORD *)(v33 + 24);
  swift_bridgeObjectRelease();
  v35 = a3[12];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[13];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = a3[14];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)v46 = *(_BYTE *)(a2 + v45);
  v48 = *(_QWORD *)(a2 + v45 + 16);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(a2 + v45 + 8);
  *(_QWORD *)(v46 + 16) = v48;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 24) = *(_BYTE *)(v47 + 24);
  *(_BYTE *)(v46 + 25) = *(_BYTE *)(v47 + 25);
  v49 = *(_QWORD *)(v47 + 40);
  *(_QWORD *)(v46 + 32) = *(_QWORD *)(v47 + 32);
  *(_QWORD *)(v46 + 40) = v49;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 48) = *(_BYTE *)(v47 + 48);
  v50 = a3[15];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = *(_QWORD *)(a2 + v50 + 8);
  *(_QWORD *)v51 = *(_QWORD *)(a2 + v50);
  *(_QWORD *)(v51 + 8) = v53;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
  *(_BYTE *)(v51 + 17) = *(_BYTE *)(v52 + 17);
  v54 = *(_QWORD *)(v52 + 32);
  *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
  *(_QWORD *)(v51 + 32) = v54;
  swift_bridgeObjectRelease();
  v55 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v56 = a1 + v55;
  v57 = a2 + v55;
  if (*(_QWORD *)(a1 + v55 + 16) != 1)
  {
    v58 = *(_QWORD *)(v57 + 16);
    if (v58 != 1)
    {
      *(_BYTE *)v56 = *(_BYTE *)v57;
      *(_QWORD *)(v56 + 8) = *(_QWORD *)(v57 + 8);
      *(_QWORD *)(v56 + 16) = v58;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D57D9100(a1 + v55);
  }
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *(_QWORD *)(v56 + 16) = *(_QWORD *)(v57 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReplicaAdvertisementViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57D96A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ReplicaAdvertisementViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57D975C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D57D9804()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReplicaAdvertisementViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1D57D9944 + 4 * byte_1D5AB0A13[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1D57D9978 + 4 * byte_1D5AB0A0E[v4]))();
}

uint64_t sub_1D57D9978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57D9980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57D9988);
  return result;
}

uint64_t sub_1D57D9994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57D999CLL);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1D57D99A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57D99A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReplicaAdvertisementViewEvent.Model.CodingKeys()
{
  return &type metadata for ReplicaAdvertisementViewEvent.Model.CodingKeys;
}

unint64_t sub_1D57D99C8()
{
  unint64_t result;

  result = qword_1EFF47B48;
  if (!qword_1EFF47B48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0D4C, &type metadata for ReplicaAdvertisementViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47B48);
  }
  return result;
}

unint64_t sub_1D57D9A10()
{
  unint64_t result;

  result = qword_1EFF47B50;
  if (!qword_1EFF47B50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0CBC, &type metadata for ReplicaAdvertisementViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47B50);
  }
  return result;
}

unint64_t sub_1D57D9A58()
{
  unint64_t result;

  result = qword_1EFF47B58;
  if (!qword_1EFF47B58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0CE4, &type metadata for ReplicaAdvertisementViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47B58);
  }
  return result;
}

uint64_t sub_1D57D9A9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEC9D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AECA10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AECA30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_1D57DA094(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CF8C8, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleLoadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CF8E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CF8C8, a1);
}

uint64_t sub_1D57DA0D4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CF8E8, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleLoadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CE588, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CF8E8, a1);
}

uint64_t ArticleLoadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleLoadEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleLoadEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLoadEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ArticleLoadEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for ArticleLoadEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CF900);
}

uint64_t ArticleLoadEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLoadEvent.timedData.modify())()
{
  type metadata accessor for ArticleLoadEvent(0);
  return nullsub_1;
}

uint64_t ArticleLoadEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLoadEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLoadEvent.feedData.modify())()
{
  type metadata accessor for ArticleLoadEvent(0);
  return nullsub_1;
}

uint64_t ArticleLoadEvent.articleLoadData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D57DA360()
{
  unint64_t result;

  result = qword_1ED9CE570;
  if (!qword_1ED9CE570)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleLoadData, &type metadata for ArticleLoadData);
    atomic_store(result, (unint64_t *)&qword_1ED9CE570);
  }
  return result;
}

unint64_t sub_1D57DA3A4()
{
  unint64_t result;

  result = qword_1ED9CF530;
  if (!qword_1ED9CF530)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleLoadData, &type metadata for ArticleLoadData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF530);
  }
  return result;
}

uint64_t ArticleLoadEvent.articleLoadData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLoadEvent.articleLoadData.modify())()
{
  type metadata accessor for ArticleLoadEvent(0);
  return nullsub_1;
}

uint64_t ArticleLoadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *Event;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for ArticleLoadEvent(0);
  v5 = a1 + Event[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + Event[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + Event[7];
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
}

uint64_t ArticleLoadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleLoadEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ArticleLoadEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for ArticleLoadEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF47BD0);
}

uint64_t ArticleLoadEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLoadEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t ArticleLoadEvent.Model.articleLoadData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ArticleLoadEvent.Model(0) + 28));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

__n128 ArticleLoadEvent.Model.init(eventData:timedData:feedData:articleLoadData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  __n128 result;
  _QWORD *v17;
  __n128 v18;

  v18 = *a3;
  v8 = a3[1].n128_u64[0];
  v9 = *a4;
  v10 = a4[1];
  v11 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a5, a1, v11);
  v12 = (int *)type metadata accessor for ArticleLoadEvent.Model(0);
  v13 = a5 + v12[5];
  v14 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a2, v14);
  v15 = (__n128 *)(a5 + v12[6]);
  result = v18;
  *v15 = v18;
  v15[1].n128_u64[0] = v8;
  v17 = (_QWORD *)(a5 + v12[7]);
  *v17 = v9;
  v17[1] = v10;
  return result;
}

uint64_t sub_1D57DA708()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57DA73C + 4 * byte_1D5AB0DD0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D57DA73C()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D57DA750()
{
  return 0x6174614464656566;
}

uint64_t sub_1D57DA768()
{
  return 0x4C656C6369747261;
}

uint64_t sub_1D57DA78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57DC3B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D57DA7B0()
{
  sub_1D57DAA28();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57DA7D8()
{
  sub_1D57DAA28();
  return sub_1D5AAEEE0();
}

uint64_t ArticleLoadEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  __int128 v19;
  uint64_t v20;

  v3 = v1;
  sub_1D57DAE80(0, &qword_1EFF47B60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57DAA28();
  sub_1D5AAEEC8();
  LOBYTE(v19) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for ArticleLoadEvent.Model(0);
    LOBYTE(v19) = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (__int128 *)(v3 + *(int *)(v10 + 24));
    v12 = *((_QWORD *)v11 + 2);
    v19 = *v11;
    v20 = v12;
    v18 = 2;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v13 = (uint64_t *)(v3 + *(int *)(v10 + 28));
    v15 = *v13;
    v14 = v13[1];
    *(_QWORD *)&v19 = v15;
    *((_QWORD *)&v19 + 1) = v14;
    v18 = 3;
    sub_1D57DA3A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D57DAA28()
{
  unint64_t result;

  result = qword_1EFF47B68;
  if (!qword_1EFF47B68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0FBC, &type metadata for ArticleLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47B68);
  }
  return result;
}

uint64_t ArticleLoadEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;

  v29 = a2;
  v3 = sub_1D5AADFB0();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57DAE80(0, &qword_1EFF47B70, MEMORY[0x1E0DED048]);
  v34 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - v9;
  v11 = type metadata accessor for ArticleLoadEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57DAA28();
  v36 = v10;
  v14 = v37;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v37 = v8;
  v26 = v11;
  v27 = v5;
  v15 = (uint64_t)v13;
  v28 = a1;
  v16 = v30;
  v17 = v31;
  v18 = v32;
  LOBYTE(v38) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v33;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v15, v35, v19);
  LOBYTE(v38) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  v20 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + *(int *)(v26 + 20), v16, v18);
  v40 = 2;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v21 = v39;
  v22 = v15 + *(int *)(v20 + 24);
  *(_OWORD *)v22 = v38;
  *(_QWORD *)(v22 + 16) = v21;
  v40 = 3;
  sub_1D57DA360();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v34);
  v23 = *((_QWORD *)&v38 + 1);
  v24 = (_QWORD *)(v15 + *(int *)(v20 + 28));
  *v24 = v38;
  v24[1] = v23;
  sub_1D57DAEF0(v15, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_1D57DAF34(v15);
}

void sub_1D57DAE80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57DAA28();
    v7 = a3(a1, &type metadata for ArticleLoadEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57DAEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D57DAEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D57DAF34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57DAF70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleLoadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D57DAF84(_QWORD *a1)
{
  return ArticleLoadEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D57DAF98@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CF8E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CF8C8, a1);
}

uint64_t sub_1D57DAFBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CE588, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CF8E8, a1);
}

uint64_t sub_1D57DAFE0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleLoadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ArticleLoadEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for ArticleLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ArticleLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ArticleLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ArticleLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLoadEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57DB7AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleLoadEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57DB8B4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D57DB9B8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleLoadEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_QWORD *)v14 + 2);
    if (v15 == 1)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    }
    else
    {
      *v13 = *v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = v15;
      swift_bridgeObjectRetain();
    }
    v17 = a3[7];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24) + 16) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 16);
  if (v14 == 1)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  }
  else
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = v14;
    swift_bridgeObjectRetain();
  }
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (__int128 *)(a2 + v11);
  v14 = *(_QWORD *)(a1 + v11 + 16);
  v15 = *(_QWORD *)(a2 + v11 + 16);
  if (v14 == 1)
  {
    if (v15 == 1)
    {
      v16 = *v13;
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      *(_OWORD *)v12 = v16;
    }
    else
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_1D57D9100(v12);
    v17 = *((_QWORD *)v13 + 2);
    *(_OWORD *)v12 = *v13;
    *(_QWORD *)(v12 + 16) = v17;
  }
  else
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
    *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  if (*(_QWORD *)(a1 + v11 + 16) != 1)
  {
    v14 = *(_QWORD *)(v13 + 16);
    if (v14 != 1)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57D9100(v12);
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
LABEL_6:
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLoadEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57DC01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleLoadEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57DC0D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D57DC17C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleLoadEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D57DC260 + 4 * byte_1D5AB0DD9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D57DC294 + 4 * byte_1D5AB0DD4[v4]))();
}

uint64_t sub_1D57DC294(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57DC29C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57DC2A4);
  return result;
}

uint64_t sub_1D57DC2B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57DC2B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D57DC2BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57DC2C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleLoadEvent.Model.CodingKeys()
{
  return &type metadata for ArticleLoadEvent.Model.CodingKeys;
}

unint64_t sub_1D57DC2E4()
{
  unint64_t result;

  result = qword_1EFF47C10;
  if (!qword_1EFF47C10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0F94, &type metadata for ArticleLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47C10);
  }
  return result;
}

unint64_t sub_1D57DC32C()
{
  unint64_t result;

  result = qword_1EFF47C18;
  if (!qword_1EFF47C18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0F04, &type metadata for ArticleLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47C18);
  }
  return result;
}

unint64_t sub_1D57DC374()
{
  unint64_t result;

  result = qword_1EFF47C20;
  if (!qword_1EFF47C20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB0F2C, &type metadata for ArticleLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47C20);
  }
  return result;
}

uint64_t sub_1D57DC3B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C656C6369747261 && a2 == 0xEF6174614464616FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D57DC5AC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF47C28, MEMORY[0x1E0CF8078]);
}

uint64_t static PuzzleExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46EF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF47C28, a1);
}

uint64_t sub_1D57DC5EC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF47C40, MEMORY[0x1E0CF8380]);
}

uint64_t static PuzzleExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46EF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF47C40, a1);
}

uint64_t PuzzleExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t PuzzleExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PuzzleExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PuzzleExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF47CE0);
}

uint64_t PuzzleExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.viewData.modify())()
{
  type metadata accessor for PuzzleExposureEvent(0);
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleExposureEvent.puzzleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.puzzleData.modify())()
{
  type metadata accessor for PuzzleExposureEvent(0);
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.feedData.modify())()
{
  type metadata accessor for PuzzleExposureEvent(0);
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.channelData.modify())()
{
  type metadata accessor for PuzzleExposureEvent(0);
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for PuzzleExposureEvent(0);
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.groupData.modify())()
{
  type metadata accessor for PuzzleExposureEvent(0);
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57DD6F8(type metadata accessor for PuzzleExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t PuzzleExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 44);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.timedData.modify())()
{
  type metadata accessor for PuzzleExposureEvent(0);
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.feedPositionData.modify())()
{
  type metadata accessor for PuzzleExposureEvent(0);
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.puzzleLayoutData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D57DCE48()
{
  unint64_t result;

  result = qword_1EFF47C60;
  if (!qword_1EFF47C60)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleLayoutData, &type metadata for PuzzleLayoutData);
    atomic_store(result, (unint64_t *)&qword_1EFF47C60);
  }
  return result;
}

unint64_t sub_1D57DCE8C()
{
  unint64_t result;

  result = qword_1EFF47C68;
  if (!qword_1EFF47C68)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleLayoutData, &type metadata for PuzzleLayoutData);
    atomic_store(result, (unint64_t *)&qword_1EFF47C68);
  }
  return result;
}

uint64_t PuzzleExposureEvent.puzzleLayoutData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.puzzleLayoutData.modify())()
{
  type metadata accessor for PuzzleExposureEvent(0);
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.offlineModeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleExposureEvent.offlineModeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.offlineModeData.modify())()
{
  type metadata accessor for PuzzleExposureEvent(0);
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for PuzzleExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v10, v17);
  v18 = a1 + v4[11];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
}

uint64_t PuzzleExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t PuzzleExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleExposureEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PuzzleExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF47D98);
}

uint64_t PuzzleExposureEvent.Model.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleExposureEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_DWORD *)v3 + 8);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = v3[9];
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleExposureEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t PuzzleExposureEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleExposureEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t sub_1D57DD4CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PuzzleExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for PuzzleExposureEvent.Model(0) + 36));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *PuzzleExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for PuzzleExposureEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 40), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t sub_1D57DD5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57DD5FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D57DD5FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CEEE0)
  {
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CEEE0);
  }
}

uint64_t sub_1D57DD650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PuzzleExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57DD6F8(type metadata accessor for PuzzleExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t sub_1D57DD6F8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 44);
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t PuzzleExposureEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for PuzzleExposureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t PuzzleExposureEvent.Model.puzzleLayoutData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PuzzleExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t PuzzleExposureEvent.Model.offlineModeData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PuzzleExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t PuzzleExposureEvent.Model.init(eventData:viewData:puzzleData:feedData:channelData:userBundleSubscriptionContextData:groupData:timedData:feedPositionData:puzzleLayoutData:offlineModeData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int *a10, char *a11, char *a12)
{
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  int v54;
  _BYTE v56[144];

  v14 = *a2;
  v15 = a2[1];
  v16 = *((_WORD *)a2 + 8);
  v39 = *a3;
  v37 = *((_QWORD *)a3 + 3);
  v38 = *((_QWORD *)a3 + 2);
  v36 = *((_DWORD *)a3 + 8);
  v35 = *((_QWORD *)a3 + 5);
  v17 = *((_BYTE *)a3 + 48);
  v18 = *((_QWORD *)a3 + 7);
  v33 = *((_BYTE *)a3 + 65);
  v34 = *((_BYTE *)a3 + 64);
  v32 = *((_QWORD *)a3 + 9);
  v41 = *a4;
  v40 = *((_QWORD *)a4 + 2);
  v43 = a5[1];
  v44 = *a5;
  v42 = *((_QWORD *)a5 + 4);
  v52 = *a6;
  v50 = *((_QWORD *)a6 + 2);
  v51 = *((_QWORD *)a6 + 1);
  v48 = a6[25];
  v49 = a6[24];
  v46 = *((_QWORD *)a6 + 5);
  v47 = *((_QWORD *)a6 + 4);
  v45 = a6[48];
  sub_1D57DD5B8(a7, (uint64_t)v56);
  v53 = *((_BYTE *)a10 + 4);
  v54 = *a10;
  v19 = *a11;
  v20 = *a12;
  v21 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  v22 = (int *)type metadata accessor for PuzzleExposureEvent.Model(0);
  v23 = a9 + v22[5];
  *(_QWORD *)v23 = v14;
  *(_QWORD *)(v23 + 8) = v15;
  *(_WORD *)(v23 + 16) = v16;
  v24 = a9 + v22[6];
  *(_OWORD *)v24 = v39;
  *(_QWORD *)(v24 + 16) = v38;
  *(_QWORD *)(v24 + 24) = v37;
  *(_DWORD *)(v24 + 32) = v36;
  *(_QWORD *)(v24 + 40) = v35;
  *(_BYTE *)(v24 + 48) = v17;
  *(_QWORD *)(v24 + 56) = v18;
  *(_BYTE *)(v24 + 64) = v34;
  *(_BYTE *)(v24 + 65) = v33;
  *(_QWORD *)(v24 + 72) = v32;
  v25 = a9 + v22[7];
  *(_OWORD *)v25 = v41;
  *(_QWORD *)(v25 + 16) = v40;
  v26 = a9 + v22[8];
  *(_OWORD *)v26 = v44;
  *(_OWORD *)(v26 + 16) = v43;
  *(_QWORD *)(v26 + 32) = v42;
  v27 = a9 + v22[9];
  *(_BYTE *)v27 = v52;
  *(_QWORD *)(v27 + 8) = v51;
  *(_QWORD *)(v27 + 16) = v50;
  *(_BYTE *)(v27 + 24) = v49;
  *(_BYTE *)(v27 + 25) = v48;
  *(_QWORD *)(v27 + 32) = v47;
  *(_QWORD *)(v27 + 40) = v46;
  *(_BYTE *)(v27 + 48) = v45;
  sub_1D57DD5B8((uint64_t)v56, a9 + v22[10]);
  v28 = a9 + v22[11];
  v29 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, a8, v29);
  v31 = a9 + v22[12];
  *(_DWORD *)v31 = v54;
  *(_BYTE *)(v31 + 4) = v53;
  *(_BYTE *)(a9 + v22[13]) = v19;
  *(_BYTE *)(a9 + v22[14]) = v20;
  return result;
}

uint64_t sub_1D57DDA5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57DDA94 + 4 * byte_1D5AB1010[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D57DDA94()
{
  return 0x6174614477656976;
}

uint64_t sub_1D57DDAD8()
{
  return 0x446C656E6E616863;
}

unint64_t sub_1D57DDAF8()
{
  return 0xD000000000000021;
}

uint64_t sub_1D57DDB18()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D57DDB2C()
{
  return 0x74614464656D6974;
}

unint64_t sub_1D57DDB40()
{
  return 0xD000000000000010;
}

uint64_t sub_1D57DDB8C()
{
  unsigned __int8 *v0;

  return sub_1D57DDA5C(*v0);
}

uint64_t sub_1D57DDB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57E2124(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D57DDBB8(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1D57DDBC4()
{
  sub_1D57DE0C8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57DDBEC()
{
  sub_1D57DE0C8();
  return sub_1D5AAEEE0();
}

uint64_t PuzzleExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;
  char *v30;
  char v31;
  char v32;
  char v33;
  int *v34;
  int v35;
  uint64_t v37;
  int v38;
  char v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  __int128 v51;
  char v52;
  char v53;
  __int128 v54;
  char v55;

  v3 = v1;
  sub_1D57DE96C(0, &qword_1EFF47C70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57DE0C8();
  sub_1D5AAEEC8();
  LOBYTE(v40) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for PuzzleExposureEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)&v40 = v12;
    *((_QWORD *)&v40 + 1) = v13;
    LOWORD(v41) = (_WORD)v11;
    LOBYTE(v38) = 1;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v14 = (__int128 *)(v3 + v10[6]);
    v15 = *v14;
    v16 = *((_QWORD *)v14 + 2);
    v17 = *((_QWORD *)v14 + 3);
    v18 = *((_DWORD *)v14 + 8);
    v19 = *((_QWORD *)v14 + 5);
    v20 = *((_BYTE *)v14 + 48);
    v21 = *((_QWORD *)v14 + 7);
    v22 = *((_BYTE *)v14 + 64);
    v23 = *((_BYTE *)v14 + 65);
    v24 = *((_QWORD *)v14 + 9);
    v40 = v15;
    *(_QWORD *)&v41 = v16;
    *((_QWORD *)&v41 + 1) = v17;
    LODWORD(v42) = v18;
    v43 = v19;
    v44 = v20;
    v45 = v21;
    v46 = v22;
    v47 = v23;
    v48 = v24;
    LOBYTE(v38) = 2;
    sub_1D57CBD34();
    sub_1D5AAED6C();
    v25 = (__int128 *)(v3 + v10[7]);
    v26 = *((_QWORD *)v25 + 2);
    v40 = *v25;
    *(_QWORD *)&v41 = v26;
    LOBYTE(v38) = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v27 = (__int128 *)(v3 + v10[8]);
    v28 = *((_QWORD *)v27 + 4);
    v29 = v27[1];
    v40 = *v27;
    v41 = v29;
    v42 = v28;
    LOBYTE(v38) = 4;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v30 = (char *)(v3 + v10[9]);
    v31 = v30[24];
    v32 = v30[25];
    v33 = v30[48];
    v50 = *v30;
    v51 = *(_OWORD *)(v30 + 8);
    v52 = v31;
    v53 = v32;
    v54 = *((_OWORD *)v30 + 2);
    v55 = v33;
    v49 = 5;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[10], (uint64_t)&v40);
    sub_1D57DD5B8((uint64_t)&v40, (uint64_t)&v38);
    HIBYTE(v37) = 6;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    LOBYTE(v38) = 7;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v34 = (int *)(v3 + v10[12]);
    v35 = *v34;
    LOBYTE(v34) = *((_BYTE *)v34 + 4);
    v38 = v35;
    v39 = (char)v34;
    HIBYTE(v37) = 8;
    sub_1D57C9C4C();
    sub_1D5AAED18();
    LOBYTE(v38) = *(_BYTE *)(v3 + v10[13]);
    HIBYTE(v37) = 9;
    sub_1D57DCE8C();
    sub_1D5AAED18();
    LOBYTE(v38) = *(_BYTE *)(v3 + v10[14]);
    HIBYTE(v37) = 10;
    sub_1D57CE05C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D57DE0C8()
{
  unint64_t result;

  result = qword_1EFF47C78;
  if (!qword_1EFF47C78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB131C, &type metadata for PuzzleExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47C78);
  }
  return result;
}

uint64_t PuzzleExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int16 v16;
  int *v17;
  char *v18;
  __int128 v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  char v33;
  char v34;
  char v35;
  char *v36;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  char v51;
  int v52;
  char v53;
  _BYTE v54[144];
  _OWORD v55[2];
  __int128 v56;
  char v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  int *v62;

  v42 = a2;
  v3 = sub_1D5AADFB0();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1D5AADF98();
  v47 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57DE96C(0, &qword_1EFF47C80, MEMORY[0x1E0DED048]);
  v44 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - v9;
  v62 = (int *)type metadata accessor for PuzzleExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v62);
  v50 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D57DE0C8();
  v43 = v10;
  v13 = v49;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  v49 = v8;
  LOBYTE(v55[0]) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v14 = v50;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v50, v6, v4);
  v54[0] = 1;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v41 = v4;
  v15 = *((_QWORD *)&v55[0] + 1);
  v16 = v55[1];
  v17 = v62;
  v18 = &v14[v62[5]];
  *(_QWORD *)v18 = *(_QWORD *)&v55[0];
  *((_QWORD *)v18 + 1) = v15;
  *((_WORD *)v18 + 8) = v16;
  v54[0] = 2;
  sub_1D57CBCF0();
  sub_1D5AAECD0();
  v19 = v55[1];
  v20 = v56;
  v21 = *((_QWORD *)&v56 + 1);
  v22 = v57;
  v23 = v58;
  v24 = v59;
  v25 = v60;
  v26 = v61;
  v27 = &v14[v17[6]];
  *(_OWORD *)v27 = v55[0];
  *((_OWORD *)v27 + 1) = v19;
  *((_DWORD *)v27 + 8) = v20;
  *((_QWORD *)v27 + 5) = v21;
  v27[48] = v22;
  *((_QWORD *)v27 + 7) = v23;
  v27[64] = v24;
  v27[65] = v25;
  *((_QWORD *)v27 + 9) = v26;
  v54[0] = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v28 = *(_QWORD *)&v55[1];
  v29 = &v14[v17[7]];
  *(_OWORD *)v29 = v55[0];
  *((_QWORD *)v29 + 2) = v28;
  v54[0] = 4;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v30 = v56;
  v31 = &v14[v17[8]];
  v32 = v55[1];
  *(_OWORD *)v31 = v55[0];
  *((_OWORD *)v31 + 1) = v32;
  *((_QWORD *)v31 + 4) = v30;
  v54[0] = 5;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v33 = BYTE8(v55[1]);
  v34 = BYTE9(v55[1]);
  v35 = v57;
  v36 = &v14[v17[9]];
  *v36 = v55[0];
  *(_OWORD *)(v36 + 8) = *(_OWORD *)((char *)v55 + 8);
  v36[24] = v33;
  v36[25] = v34;
  *((_OWORD *)v36 + 2) = v56;
  v36[48] = v35;
  v54[143] = 6;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)v55, (uint64_t)v54);
  sub_1D57DD5B8((uint64_t)v54, (uint64_t)&v14[v17[10]]);
  LOBYTE(v52) = 7;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 32))(&v14[v17[11]], 0, v46);
  v51 = 8;
  sub_1D57C9C08();
  sub_1D5AAEC7C();
  v38 = v53;
  v39 = &v14[v17[12]];
  *(_DWORD *)v39 = v52;
  v39[4] = v38;
  v51 = 9;
  sub_1D57DCE48();
  sub_1D5AAEC7C();
  v50[v62[13]] = v52;
  v51 = 10;
  sub_1D57CE014();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v44);
  v40 = (uint64_t)v50;
  v50[v62[14]] = v52;
  sub_1D57DEAE8(v40, v42);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return sub_1D57DEB2C(v40);
}

void sub_1D57DE96C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57DE0C8();
    v7 = a3(a1, &type metadata for PuzzleExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *sub_1D57DE9C8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16]);
  return a1;
}

uint64_t sub_1D57DEA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D57DEAB8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D57DEAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PuzzleExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D57DEB2C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PuzzleExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57DEB68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D57DEB7C(_QWORD *a1)
{
  return PuzzleExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D57DEB90@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46EF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF47C28, a1);
}

uint64_t sub_1D57DEBB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46EF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF47C40, a1);
}

uint64_t sub_1D57DEBD8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v11, v18);
  v19 = a2 + a1[11];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for PuzzleExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
}

uint64_t initializeWithCopy for PuzzleExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for PuzzleExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for PuzzleExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for PuzzleExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57E01DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D57A8C9C();
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
                      v8 = v22;
                      v12 = *(_QWORD *)(v22 - 8);
                      v13 = a3[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PuzzleExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57E04C0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D57A8C9C();
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
                      v10 = v24;
                      v14 = *(_QWORD *)(v24 - 8);
                      v15 = a4[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D57E07A0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              if (v6 <= 0x3F)
              {
                sub_1D57A8C9C();
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1EFF47C58, (void (*)(void))sub_1D57DCE48, (void (*)(void))sub_1D57DCE8C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
                      if (v10 <= 0x3F)
                        swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for PuzzleExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 3) = v16;
    v17 = *((_OWORD *)v14 + 3);
    *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
    *((_OWORD *)v13 + 3) = v17;
    v13[64] = v14[64];
    v13[65] = v14[65];
    *((_QWORD *)v13 + 9) = *((_QWORD *)v14 + 9);
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)((char *)a2 + v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21 == 1)
    {
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
    }
    else
    {
      *v19 = *v20;
      *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
      *((_QWORD *)v19 + 2) = v21;
      swift_bridgeObjectRetain();
    }
    v23 = a3[8];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *((_QWORD *)v25 + 1);
    if (v26)
    {
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      *((_WORD *)v24 + 8) = *((_WORD *)v25 + 8);
      v27 = *((_QWORD *)v25 + 4);
      *((_QWORD *)v24 + 3) = *((_QWORD *)v25 + 3);
      *((_QWORD *)v24 + 4) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v28 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v28;
      *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
    }
    v29 = a3[9];
    v30 = a3[10];
    v31 = (char *)a1 + v29;
    v32 = (char *)a2 + v29;
    *v31 = *v32;
    v33 = *((_QWORD *)v32 + 2);
    *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
    *((_QWORD *)v31 + 2) = v33;
    *((_WORD *)v31 + 12) = *((_WORD *)v32 + 12);
    v34 = *((_QWORD *)v32 + 5);
    *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
    *((_QWORD *)v31 + 5) = v34;
    v31[48] = v32[48];
    v35 = (char *)a1 + v30;
    v36 = (char *)a2 + v30;
    v37 = *(_QWORD *)((char *)a2 + v30 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37)
    {
      *(_WORD *)v35 = *(_WORD *)v36;
      *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
      *((_QWORD *)v35 + 2) = v37;
      *((_QWORD *)v35 + 3) = *((_QWORD *)v36 + 3);
      v38 = *((_QWORD *)v36 + 5);
      *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
      *((_QWORD *)v35 + 5) = v38;
      v39 = *((_QWORD *)v36 + 7);
      *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
      *((_QWORD *)v35 + 7) = v39;
      v56 = *((_QWORD *)v36 + 9);
      *((_QWORD *)v35 + 8) = *((_QWORD *)v36 + 8);
      *((_QWORD *)v35 + 9) = v56;
      v35[80] = v36[80];
      v40 = *((_QWORD *)v36 + 12);
      *((_QWORD *)v35 + 11) = *((_QWORD *)v36 + 11);
      *((_QWORD *)v35 + 12) = v40;
      *((_QWORD *)v35 + 13) = *((_QWORD *)v36 + 13);
      v35[112] = v36[112];
      v42 = *((_QWORD *)v36 + 15);
      v41 = *((_QWORD *)v36 + 16);
      *((_QWORD *)v35 + 15) = v42;
      *((_QWORD *)v35 + 16) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v43 = *((_OWORD *)v36 + 7);
      *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
      *((_OWORD *)v35 + 7) = v43;
      *((_QWORD *)v35 + 16) = *((_QWORD *)v36 + 16);
      v44 = *((_OWORD *)v36 + 3);
      *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
      *((_OWORD *)v35 + 3) = v44;
      v45 = *((_OWORD *)v36 + 5);
      *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
      *((_OWORD *)v35 + 5) = v45;
      v46 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v46;
    }
    v47 = a3[11];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
    v51 = a3[12];
    v52 = a3[13];
    v53 = (char *)a1 + v51;
    v54 = (char *)a2 + v51;
    *(_DWORD *)v53 = *(_DWORD *)v54;
    v53[4] = v54[4];
    *((_BYTE *)a1 + v52) = *((_BYTE *)a2 + v52);
    *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  }
  return a1;
}

uint64_t destroy for PuzzleExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[10] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = a1 + a2[11];
  v6 = sub_1D5AADFB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for PuzzleExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  v16 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v16;
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 == 1)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  }
  else
  {
    *(_BYTE *)v18 = *(_BYTE *)v19;
    *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
    *(_QWORD *)(v18 + 16) = v20;
    swift_bridgeObjectRetain();
  }
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(v23 + 8);
  if (v24)
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = v24;
    *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 32);
    *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
    *(_QWORD *)(v22 + 32) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v26;
    *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  }
  v27 = a3[9];
  v28 = a3[10];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_BYTE *)v29 = *(_BYTE *)v30;
  v31 = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v29 + 16) = v31;
  *(_WORD *)(v29 + 24) = *(_WORD *)(v30 + 24);
  v32 = *(_QWORD *)(v30 + 40);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  *(_QWORD *)(v29 + 40) = v32;
  *(_BYTE *)(v29 + 48) = *(_BYTE *)(v30 + 48);
  v33 = a1 + v28;
  v34 = a2 + v28;
  v35 = *(_QWORD *)(a2 + v28 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35)
  {
    *(_WORD *)v33 = *(_WORD *)v34;
    *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
    *(_QWORD *)(v33 + 16) = v35;
    *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
    v36 = *(_QWORD *)(v34 + 40);
    *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
    *(_QWORD *)(v33 + 40) = v36;
    v37 = *(_QWORD *)(v34 + 56);
    *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
    *(_QWORD *)(v33 + 56) = v37;
    v54 = *(_QWORD *)(v34 + 72);
    *(_QWORD *)(v33 + 64) = *(_QWORD *)(v34 + 64);
    *(_QWORD *)(v33 + 72) = v54;
    *(_BYTE *)(v33 + 80) = *(_BYTE *)(v34 + 80);
    v38 = *(_QWORD *)(v34 + 96);
    *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
    *(_QWORD *)(v33 + 96) = v38;
    *(_QWORD *)(v33 + 104) = *(_QWORD *)(v34 + 104);
    *(_BYTE *)(v33 + 112) = *(_BYTE *)(v34 + 112);
    v40 = *(_QWORD *)(v34 + 120);
    v39 = *(_QWORD *)(v34 + 128);
    *(_QWORD *)(v33 + 120) = v40;
    *(_QWORD *)(v33 + 128) = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v41 = *(_OWORD *)(v34 + 112);
    *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
    *(_OWORD *)(v33 + 112) = v41;
    *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
    v42 = *(_OWORD *)(v34 + 48);
    *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
    *(_OWORD *)(v33 + 48) = v42;
    v43 = *(_OWORD *)(v34 + 80);
    *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
    *(_OWORD *)(v33 + 80) = v43;
    v44 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v44;
  }
  v45 = a3[11];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
  v49 = a3[12];
  v50 = a3[13];
  v51 = a1 + v49;
  v52 = a2 + v49;
  *(_DWORD *)v51 = *(_DWORD *)v52;
  *(_BYTE *)(v51 + 4) = *(_BYTE *)(v52 + 4);
  *(_BYTE *)(a1 + v50) = *(_BYTE *)(a2 + v50);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithCopy for PuzzleExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  int v60;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 32) = *(_DWORD *)(v12 + 32);
  v13 = *(_QWORD *)(v12 + 40);
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  *(_QWORD *)(v11 + 40) = v13;
  v14 = *(_QWORD *)(v12 + 56);
  *(_BYTE *)(v11 + 64) = *(_BYTE *)(v12 + 64);
  *(_QWORD *)(v11 + 56) = v14;
  *(_BYTE *)(v11 + 65) = *(_BYTE *)(v12 + 65);
  *(_QWORD *)(v11 + 72) = *(_QWORD *)(v12 + 72);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (__int128 *)(a2 + v15);
  v18 = *(_QWORD *)(a1 + v15 + 16);
  v19 = *(_QWORD *)(a2 + v15 + 16);
  if (v18 == 1)
  {
    if (v19 == 1)
    {
      v20 = *v17;
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      *(_OWORD *)v16 = v20;
    }
    else
    {
      *(_BYTE *)v16 = *(_BYTE *)v17;
      *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v19 == 1)
  {
    sub_1D57D9100(v16);
    v21 = *((_QWORD *)v17 + 2);
    *(_OWORD *)v16 = *v17;
    *(_QWORD *)(v16 + 16) = v21;
  }
  else
  {
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
    *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = (__int128 *)(a2 + v22);
  v25 = *(_QWORD *)(a1 + v22 + 8);
  v26 = *(_QWORD *)(a2 + v22 + 8);
  if (v25)
  {
    if (v26)
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *(_QWORD *)(v23 + 8) = *((_QWORD *)v24 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v23 + 16) = *((_BYTE *)v24 + 16);
      *(_BYTE *)(v23 + 17) = *((_BYTE *)v24 + 17);
      *(_QWORD *)(v23 + 24) = *((_QWORD *)v24 + 3);
      *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v23);
      v27 = *((_QWORD *)v24 + 4);
      v28 = v24[1];
      *(_OWORD *)v23 = *v24;
      *(_OWORD *)(v23 + 16) = v28;
      *(_QWORD *)(v23 + 32) = v27;
    }
  }
  else if (v26)
  {
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_QWORD *)(v23 + 8) = *((_QWORD *)v24 + 1);
    *(_BYTE *)(v23 + 16) = *((_BYTE *)v24 + 16);
    *(_BYTE *)(v23 + 17) = *((_BYTE *)v24 + 17);
    *(_QWORD *)(v23 + 24) = *((_QWORD *)v24 + 3);
    *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *v24;
    v30 = v24[1];
    *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
    *(_OWORD *)v23 = v29;
    *(_OWORD *)(v23 + 16) = v30;
  }
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_BYTE *)v32 = *(_BYTE *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(a2 + v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 24) = *(_BYTE *)(v33 + 24);
  *(_BYTE *)(v32 + 25) = *(_BYTE *)(v33 + 25);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v33 + 48);
  v34 = a3[10];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(_QWORD *)(a1 + v34 + 16);
  v38 = *(_QWORD *)(a2 + v34 + 16);
  if (v37)
  {
    if (v38)
    {
      *(_BYTE *)v35 = *(_BYTE *)v36;
      *(_BYTE *)(v35 + 1) = *(_BYTE *)(v36 + 1);
      *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
      *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v35 + 24) = *(_DWORD *)(v36 + 24);
      *(_DWORD *)(v35 + 28) = *(_DWORD *)(v36 + 28);
      *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v35 + 40) = *(_QWORD *)(v36 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v35 + 48) = *(_QWORD *)(v36 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v35 + 56) = *(_QWORD *)(v36 + 56);
      *(_QWORD *)(v35 + 64) = *(_QWORD *)(v36 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v35 + 72) = *(_QWORD *)(v36 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v35 + 80) = *(_BYTE *)(v36 + 80);
      *(_QWORD *)(v35 + 88) = *(_QWORD *)(v36 + 88);
      *(_QWORD *)(v35 + 96) = *(_QWORD *)(v36 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v39 = *(_QWORD *)(v36 + 104);
      *(_BYTE *)(v35 + 112) = *(_BYTE *)(v36 + 112);
      *(_QWORD *)(v35 + 104) = v39;
      *(_QWORD *)(v35 + 120) = *(_QWORD *)(v36 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v35 + 128) = *(_QWORD *)(v36 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v35);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      v41 = *(_OWORD *)(v36 + 64);
      v43 = *(_OWORD *)(v36 + 16);
      v42 = *(_OWORD *)(v36 + 32);
      *(_OWORD *)(v35 + 48) = *(_OWORD *)(v36 + 48);
      *(_OWORD *)(v35 + 64) = v41;
      *(_OWORD *)(v35 + 16) = v43;
      *(_OWORD *)(v35 + 32) = v42;
      v45 = *(_OWORD *)(v36 + 96);
      v44 = *(_OWORD *)(v36 + 112);
      v46 = *(_OWORD *)(v36 + 80);
      *(_QWORD *)(v35 + 128) = *(_QWORD *)(v36 + 128);
      *(_OWORD *)(v35 + 96) = v45;
      *(_OWORD *)(v35 + 112) = v44;
      *(_OWORD *)(v35 + 80) = v46;
    }
  }
  else if (v38)
  {
    *(_BYTE *)v35 = *(_BYTE *)v36;
    *(_BYTE *)(v35 + 1) = *(_BYTE *)(v36 + 1);
    *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
    *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
    *(_DWORD *)(v35 + 24) = *(_DWORD *)(v36 + 24);
    *(_DWORD *)(v35 + 28) = *(_DWORD *)(v36 + 28);
    *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
    *(_QWORD *)(v35 + 40) = *(_QWORD *)(v36 + 40);
    *(_QWORD *)(v35 + 48) = *(_QWORD *)(v36 + 48);
    *(_QWORD *)(v35 + 56) = *(_QWORD *)(v36 + 56);
    *(_QWORD *)(v35 + 64) = *(_QWORD *)(v36 + 64);
    *(_QWORD *)(v35 + 72) = *(_QWORD *)(v36 + 72);
    *(_BYTE *)(v35 + 80) = *(_BYTE *)(v36 + 80);
    *(_QWORD *)(v35 + 88) = *(_QWORD *)(v36 + 88);
    *(_QWORD *)(v35 + 96) = *(_QWORD *)(v36 + 96);
    v40 = *(_QWORD *)(v36 + 104);
    *(_BYTE *)(v35 + 112) = *(_BYTE *)(v36 + 112);
    *(_QWORD *)(v35 + 104) = v40;
    *(_QWORD *)(v35 + 120) = *(_QWORD *)(v36 + 120);
    *(_QWORD *)(v35 + 128) = *(_QWORD *)(v36 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v35 = *(_OWORD *)v36;
    v47 = *(_OWORD *)(v36 + 16);
    v48 = *(_OWORD *)(v36 + 32);
    v49 = *(_OWORD *)(v36 + 64);
    *(_OWORD *)(v35 + 48) = *(_OWORD *)(v36 + 48);
    *(_OWORD *)(v35 + 64) = v49;
    *(_OWORD *)(v35 + 16) = v47;
    *(_OWORD *)(v35 + 32) = v48;
    v50 = *(_OWORD *)(v36 + 80);
    v51 = *(_OWORD *)(v36 + 96);
    v52 = *(_OWORD *)(v36 + 112);
    *(_QWORD *)(v35 + 128) = *(_QWORD *)(v36 + 128);
    *(_OWORD *)(v35 + 96) = v51;
    *(_OWORD *)(v35 + 112) = v52;
    *(_OWORD *)(v35 + 80) = v50;
  }
  v53 = a3[11];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v54, v55, v56);
  v57 = a3[12];
  v58 = a1 + v57;
  v59 = (int *)(a2 + v57);
  v60 = *v59;
  *(_BYTE *)(v58 + 4) = *((_BYTE *)v59 + 4);
  *(_DWORD *)v58 = v60;
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1D57E1784(uint64_t a1)
{
  destroy for ChannelData();
  return a1;
}

uint64_t sub_1D57E17B8(uint64_t a1)
{
  destroy for GroupData();
  return a1;
}

uint64_t initializeWithTake for PuzzleExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v11 = (_OWORD *)(a1 + v8);
  v12 = (_OWORD *)(a2 + v8);
  v13 = v12[4];
  v14 = v12[2];
  v11[3] = v12[3];
  v11[4] = v13;
  v15 = v12[1];
  *v11 = *v12;
  v11[1] = v15;
  v11[2] = v14;
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  v20 = a1 + v17;
  v21 = a2 + v17;
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  v23 = a3[9];
  v24 = a3[10];
  v25 = a1 + v23;
  v26 = a2 + v23;
  v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  *(_BYTE *)(v25 + 48) = *(_BYTE *)(v26 + 48);
  v28 = a1 + v24;
  v29 = (__int128 *)(a2 + v24);
  *(_QWORD *)(v28 + 128) = *((_QWORD *)v29 + 16);
  v30 = v29[7];
  *(_OWORD *)(v28 + 96) = v29[6];
  *(_OWORD *)(v28 + 112) = v30;
  v31 = v29[5];
  *(_OWORD *)(v28 + 64) = v29[4];
  *(_OWORD *)(v28 + 80) = v31;
  v32 = v29[3];
  *(_OWORD *)(v28 + 32) = v29[2];
  *(_OWORD *)(v28 + 48) = v32;
  v33 = *v29;
  v34 = v29[1];
  v35 = a3[11];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_OWORD *)v28 = v33;
  *(_OWORD *)(v28 + 16) = v34;
  v38 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[12];
  v40 = a3[13];
  v41 = a1 + v39;
  v42 = a2 + v39;
  *(_DWORD *)v41 = *(_DWORD *)v42;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for PuzzleExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v12 + 32) = *(_DWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 16) == 1)
    goto LABEL_4;
  v19 = *(_QWORD *)(v18 + 16);
  if (v19 == 1)
  {
    sub_1D57D9100(v17);
LABEL_4:
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v17 = *(_BYTE *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  if (*(_QWORD *)(a1 + v20 + 8))
  {
    v23 = *(_QWORD *)(v22 + 8);
    if (v23)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *(_QWORD *)(v21 + 8) = v23;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
      *(_BYTE *)(v21 + 17) = *(_BYTE *)(v22 + 17);
      v24 = *(_QWORD *)(v22 + 32);
      *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
      *(_QWORD *)(v21 + 32) = v24;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E1784(v21);
  }
  v25 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v25;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
LABEL_11:
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_BYTE *)v27 = *(_BYTE *)(a2 + v26);
  v29 = *(_QWORD *)(a2 + v26 + 16);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(a2 + v26 + 8);
  *(_QWORD *)(v27 + 16) = v29;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v27 + 24) = *(_BYTE *)(v28 + 24);
  *(_BYTE *)(v27 + 25) = *(_BYTE *)(v28 + 25);
  v30 = *(_QWORD *)(v28 + 40);
  *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
  *(_QWORD *)(v27 + 40) = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v27 + 48) = *(_BYTE *)(v28 + 48);
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = a2 + v31;
  if (!*(_QWORD *)(a1 + v31 + 16))
  {
LABEL_15:
    v37 = *(_OWORD *)(v33 + 112);
    *(_OWORD *)(v32 + 96) = *(_OWORD *)(v33 + 96);
    *(_OWORD *)(v32 + 112) = v37;
    *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
    v38 = *(_OWORD *)(v33 + 48);
    *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
    *(_OWORD *)(v32 + 48) = v38;
    v39 = *(_OWORD *)(v33 + 80);
    *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
    *(_OWORD *)(v32 + 80) = v39;
    v40 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_OWORD *)(v32 + 16) = v40;
    goto LABEL_16;
  }
  v34 = *(_QWORD *)(v33 + 16);
  if (!v34)
  {
    sub_1D57E17B8(v32);
    goto LABEL_15;
  }
  *(_WORD *)v32 = *(_WORD *)v33;
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 24) = *(_QWORD *)(v33 + 24);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(v33 + 64);
  *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
  *(_QWORD *)(v32 + 64) = v35;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 72) = *(_QWORD *)(v33 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 80) = *(_BYTE *)(v33 + 80);
  v36 = *(_QWORD *)(v33 + 96);
  *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
  *(_QWORD *)(v32 + 96) = v36;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 104) = *(_QWORD *)(v33 + 104);
  *(_BYTE *)(v32 + 112) = *(_BYTE *)(v33 + 112);
  *(_QWORD *)(v32 + 120) = *(_QWORD *)(v33 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
  swift_bridgeObjectRelease();
LABEL_16:
  v41 = a3[11];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
  v45 = a3[12];
  v46 = a3[13];
  v47 = a1 + v45;
  v48 = a2 + v45;
  *(_DWORD *)v47 = *(_DWORD *)v48;
  *(_BYTE *)(v47 + 4) = *(_BYTE *)(v48 + 4);
  *(_BYTE *)(a1 + v46) = *(_BYTE *)(a2 + v46);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57E1CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1D5AADFB0();
    v10 = a1 + *(int *)(a3 + 44);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57E1D6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1D5AADFB0();
    v12 = a1 + *(int *)(a4 + 44);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D57E1E14()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PuzzleExposureEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D57E1FCC + 4 * byte_1D5AB1020[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D57E2000 + 4 * byte_1D5AB101B[v4]))();
}

uint64_t sub_1D57E2000(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57E2008(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57E2010);
  return result;
}

uint64_t sub_1D57E201C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57E2024);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D57E2028(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57E2030(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleExposureEvent.Model.CodingKeys()
{
  return &type metadata for PuzzleExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D57E2050()
{
  unint64_t result;

  result = qword_1EFF47DF8;
  if (!qword_1EFF47DF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB12F4, &type metadata for PuzzleExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47DF8);
  }
  return result;
}

unint64_t sub_1D57E2098()
{
  unint64_t result;

  result = qword_1EFF47E00;
  if (!qword_1EFF47E00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB1264, &type metadata for PuzzleExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47E00);
  }
  return result;
}

unint64_t sub_1D57E20E0()
{
  unint64_t result;

  result = qword_1EFF47E08;
  if (!qword_1EFF47E08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB128C, &type metadata for PuzzleExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47E08);
  }
  return result;
}

uint64_t sub_1D57E2124(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144656C7A7A7570 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA70 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4D656E696C66666FLL && a2 == 0xEF6174614465646FLL)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t ReferringArticleData.articleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferringArticleData.articleID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReferringArticleData.articleID.modify())()
{
  return nullsub_1;
}

uint64_t ReferringArticleData.publisherArticleVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ReferringArticleData.publisherArticleVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*ReferringArticleData.publisherArticleVersion.modify())()
{
  return nullsub_1;
}

void ReferringArticleData.role.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

_BYTE *ReferringArticleData.role.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = *result;
  return result;
}

uint64_t (*ReferringArticleData.role.modify())()
{
  return nullsub_1;
}

uint64_t ReferringArticleData.init(articleID:publisherArticleVersion:role:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5;

  v5 = *a4;
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 24) = v5;
  return result;
}

uint64_t sub_1D57E26A4()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000017;
  if (*v0 != 1)
    v1 = 1701605234;
  if (*v0)
    return v1;
  else
    return 0x49656C6369747261;
}

uint64_t sub_1D57E2700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57E2F34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D57E2724()
{
  sub_1D57E28EC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57E274C()
{
  sub_1D57E28EC();
  return sub_1D5AAEEE0();
}

uint64_t ReferringArticleData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  _QWORD v11[2];
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1D57E2B4C(0, &qword_1ED9D0D88, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v11[0] = *(_QWORD *)(v1 + 16);
  v12 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57E28EC();
  sub_1D5AAEEC8();
  v16 = 0;
  v8 = v11[1];
  sub_1D5AAED3C();
  if (!v8)
  {
    v9 = v12;
    v15 = 1;
    sub_1D5AAED84();
    v14 = v9;
    v13 = 2;
    sub_1D57E2930();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D57E28EC()
{
  unint64_t result;

  result = qword_1ED9D01B8;
  if (!qword_1ED9D01B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB14F8, &type metadata for ReferringArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D01B8);
  }
  return result;
}

unint64_t sub_1D57E2930()
{
  unint64_t result;

  result = qword_1ED9CC388;
  if (!qword_1ED9CC388)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Role, &type metadata for Role);
    atomic_store(result, (unint64_t *)&qword_1ED9CC388);
  }
  return result;
}

uint64_t ReferringArticleData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;

  sub_1D57E2B4C(0, &qword_1ED9D0D00, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57E28EC();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v19 = 1;
  swift_bridgeObjectRetain();
  v16 = sub_1D5AAECE8();
  v17 = 2;
  sub_1D57E2BA8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = v18;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 24) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D57E2B4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57E28EC();
    v7 = a3(a1, &type metadata for ReferringArticleData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57E2BA8()
{
  unint64_t result;

  result = qword_1ED9CC398;
  if (!qword_1ED9CC398)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Role, &type metadata for Role);
    atomic_store(result, (unint64_t *)&qword_1ED9CC398);
  }
  return result;
}

uint64_t sub_1D57E2BEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReferringArticleData.init(from:)(a1, a2);
}

uint64_t sub_1D57E2C00(_QWORD *a1)
{
  return ReferringArticleData.encode(to:)(a1);
}

uint64_t initializeWithCopy for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferringArticleData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReferringArticleData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReferringArticleData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D57E2DDC + 4 * byte_1D5AB1375[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D57E2E10 + 4 * byte_1D5AB1370[v4]))();
}

uint64_t sub_1D57E2E10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57E2E18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57E2E20);
  return result;
}

uint64_t sub_1D57E2E2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57E2E34);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D57E2E38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57E2E40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReferringArticleData.CodingKeys()
{
  return &type metadata for ReferringArticleData.CodingKeys;
}

unint64_t sub_1D57E2E60()
{
  unint64_t result;

  result = qword_1EFF47E10;
  if (!qword_1EFF47E10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB14D0, &type metadata for ReferringArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47E10);
  }
  return result;
}

unint64_t sub_1D57E2EA8()
{
  unint64_t result;

  result = qword_1ED9D01C8;
  if (!qword_1ED9D01C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB1440, &type metadata for ReferringArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D01C8);
  }
  return result;
}

unint64_t sub_1D57E2EF0()
{
  unint64_t result;

  result = qword_1ED9D01C0;
  if (!qword_1ED9D01C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB1468, &type metadata for ReferringArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D01C0);
  }
  return result;
}

uint64_t sub_1D57E2F34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49656C6369747261 && a2 == 0xE900000000000044;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AECA90 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t ProgressInfo.progressLevel.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t ProgressInfo.progressLevel.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*ProgressInfo.progressLevel.modify())()
{
  return nullsub_1;
}

uint64_t ProgressInfo.lastPlayedDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t ProgressInfo.lastPlayedDate.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*ProgressInfo.lastPlayedDate.modify())()
{
  return nullsub_1;
}

uint64_t ProgressInfo.completedDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t ProgressInfo.completedDate.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*ProgressInfo.completedDate.modify())()
{
  return nullsub_1;
}

uint64_t ProgressInfo.init(progressLevel:lastPlayedDate:completedDate:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(_DWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = a3 & 1;
  *(_QWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 32) = a5 & 1;
  return result;
}

uint64_t sub_1D57E3114()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x79616C507473616CLL;
  if (*v0 != 1)
    v1 = 0x6574656C706D6F63;
  if (*v0)
    return v1;
  else
    return 0x73736572676F7270;
}

uint64_t sub_1D57E3194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57E3878(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D57E31B8()
{
  sub_1D57E337C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57E31E0()
{
  sub_1D57E337C();
  return sub_1D5AAEEE0();
}

uint64_t ProgressInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _DWORD v11[4];
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  char v16;
  char v17;

  sub_1D57E355C(0, &qword_1EFF47E18, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v9 = *(_QWORD *)(v1 + 8);
  v14 = *(unsigned __int8 *)(v1 + 16);
  v12 = *(_QWORD *)(v1 + 24);
  v13 = v9;
  v11[3] = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57E337C();
  sub_1D5AAEEC8();
  v17 = 0;
  sub_1D5AAED78();
  if (!v2)
  {
    v16 = 1;
    sub_1D5AAED30();
    v15 = 2;
    sub_1D5AAED30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D57E337C()
{
  unint64_t result;

  result = qword_1EFF47E20;
  if (!qword_1EFF47E20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB16C4, &type metadata for ProgressInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47E20);
  }
  return result;
}

uint64_t ProgressInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v14;
  char *v15;
  char v16;
  char v17;
  uint64_t v18;
  int v19;
  char v20;
  char v21;
  char v22;

  sub_1D57E355C(0, &qword_1EFF47E28, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57E337C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v22 = 0;
    v10 = sub_1D5AAECDC();
    v21 = 1;
    v11 = sub_1D5AAEC94();
    v19 = v12;
    v20 = 2;
    v14 = sub_1D5AAEC94();
    v15 = v9;
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    *(_DWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v11;
    *(_BYTE *)(a2 + 16) = v19 & 1;
    *(_QWORD *)(a2 + 24) = v14;
    *(_BYTE *)(a2 + 32) = v17 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D57E355C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57E337C();
    v7 = a3(a1, &type metadata for ProgressInfo.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57E35BC()
{
  unint64_t result;

  result = qword_1EFF47E30;
  if (!qword_1EFF47E30)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ProgressInfo, &type metadata for ProgressInfo);
    atomic_store(result, (unint64_t *)&qword_1EFF47E30);
  }
  return result;
}

unint64_t sub_1D57E3604()
{
  unint64_t result;

  result = qword_1EFF47E38;
  if (!qword_1EFF47E38)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ProgressInfo, &type metadata for ProgressInfo);
    atomic_store(result, (unint64_t *)&qword_1EFF47E38);
  }
  return result;
}

uint64_t sub_1D57E3648@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ProgressInfo.init(from:)(a1, a2);
}

uint64_t sub_1D57E365C(_QWORD *a1)
{
  return ProgressInfo.encode(to:)(a1);
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ProgressInfo(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ProgressInfo(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for ProgressInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D57E3720 + 4 * byte_1D5AB154D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D57E3754 + 4 * byte_1D5AB1548[v4]))();
}

uint64_t sub_1D57E3754(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57E375C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57E3764);
  return result;
}

uint64_t sub_1D57E3770(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57E3778);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D57E377C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57E3784(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProgressInfo.CodingKeys()
{
  return &type metadata for ProgressInfo.CodingKeys;
}

unint64_t sub_1D57E37A4()
{
  unint64_t result;

  result = qword_1EFF47E40;
  if (!qword_1EFF47E40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB169C, &type metadata for ProgressInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47E40);
  }
  return result;
}

unint64_t sub_1D57E37EC()
{
  unint64_t result;

  result = qword_1EFF47E48;
  if (!qword_1EFF47E48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB160C, &type metadata for ProgressInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47E48);
  }
  return result;
}

unint64_t sub_1D57E3834()
{
  unint64_t result;

  result = qword_1EFF47E50;
  if (!qword_1EFF47E50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB1634, &type metadata for ProgressInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47E50);
  }
  return result;
}

uint64_t sub_1D57E3878(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736572676F7270 && a2 == 0xED00006C6576654CLL;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79616C507473616CLL && a2 == 0xEE00657461446465 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xED00006574614464)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

NewsAnalytics::ResultAction_optional __swiftcall ResultAction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ResultAction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ResultAction.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57E3AC0 + 4 * byte_1D5AB1714[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D57E3AC0()
{
  return 0x656E6F646E616261;
}

uint64_t sub_1D57E3ADC()
{
  return 0x646564616F6CLL;
}

uint64_t sub_1D57E3AF0()
{
  return 0x676B636142707061;
}

void sub_1D57E3B14(char *a1)
{
  sub_1D5A3CD90(*a1);
}

unint64_t sub_1D57E3B24()
{
  unint64_t result;

  result = qword_1EFF47E58;
  if (!qword_1EFF47E58)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultAction, &type metadata for ResultAction);
    atomic_store(result, (unint64_t *)&qword_1EFF47E58);
  }
  return result;
}

void sub_1D57E3B68()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D57E3BB4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D57E3C30()
{
  __asm { BR              X10 }
}

uint64_t sub_1D57E3C6C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D57E3CD4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D57E3D1C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::ResultAction_optional sub_1D57E3D98(Swift::String *a1)
{
  return ResultAction.init(rawValue:)(*a1);
}

uint64_t sub_1D57E3DA4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57E3DD4 + 4 * byte_1D5AB1724[*v0]))();
}

void sub_1D57E3DD4(_QWORD *a1@<X8>)
{
  *a1 = 0x656E6F646E616261;
  a1[1] = 0xE900000000000064;
}

void sub_1D57E3DF4(_QWORD *a1@<X8>)
{
  *a1 = 0x646564616F6CLL;
  a1[1] = 0xE600000000000000;
}

void sub_1D57E3E0C(_QWORD *a1@<X8>)
{
  *a1 = 0x676B636142707061;
  a1[1] = 0xEF6465646E756F72;
}

uint64_t sub_1D57E3E34()
{
  sub_1D57E3FA8();
  return sub_1D5AAE928();
}

uint64_t sub_1D57E3E90()
{
  sub_1D57E3FA8();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for ResultAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D57E3F28 + 4 * byte_1D5AB172D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D57E3F5C + 4 * byte_1D5AB1728[v4]))();
}

uint64_t sub_1D57E3F5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57E3F64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57E3F6CLL);
  return result;
}

uint64_t sub_1D57E3F78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57E3F80);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D57E3F84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57E3F8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResultAction()
{
  return &type metadata for ResultAction;
}

unint64_t sub_1D57E3FA8()
{
  unint64_t result;

  result = qword_1EFF47E60;
  if (!qword_1EFF47E60)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultAction, &type metadata for ResultAction);
    atomic_store(result, (unint64_t *)&qword_1EFF47E60);
  }
  return result;
}

uint64_t NotificationReceiptReporter.__allocating_init(log:contentType:)(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  NotificationReceiptReporter.init(log:contentType:)(a1, a2);
  return v4;
}

Swift::Void __swiftcall NotificationReceiptReporter.startSession()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[56];
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[96];
  _BYTE v28[104];

  v1 = sub_1D5AAD710();
  v21 = *(_QWORD *)(v1 - 8);
  v22 = v1;
  MEMORY[0x1E0C80A78](v1);
  v20 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D5AAD734();
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADEF0();
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AAEA24();
  sub_1D5AAE328();
  sub_1D57E433C(v0, (uint64_t)v27);
  sub_1D57E4810((uint64_t)v27, (uint64_t)v28, &qword_1EFF47E68);
  sub_1D57E45E8(v0, (uint64_t)&v24);
  sub_1D57E4810((uint64_t)&v24, (uint64_t)v27, &qword_1EFF47E70);
  sub_1D57E485C(v0, (uint64_t)&v24);
  v15 = v24;
  v10 = v25;
  v9 = v26;
  sub_1D57E4A68(v0, (uint64_t)v23);
  sub_1D57E4810((uint64_t)v23, (uint64_t)&v24, &qword_1EFF47E78);
  v11 = swift_allocObject();
  sub_1D57E4810((uint64_t)v28, v11 + 16, &qword_1EFF47E68);
  sub_1D57E4810((uint64_t)v27, v11 + 112, &qword_1EFF47E70);
  *(_OWORD *)(v11 + 176) = v15;
  *(_QWORD *)(v11 + 192) = v10;
  *(_QWORD *)(v11 + 200) = v9;
  sub_1D57E4810((uint64_t)&v24, v11 + 208, &qword_1EFF47E78);
  sub_1D5AADB9C();
  swift_release();
  strcpy(v8, "notification");
  v8[13] = 0;
  *((_WORD *)v8 + 7) = -5120;
  v13 = v16;
  v12 = v17;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v8, *MEMORY[0x1E0CF8558], v17);
  sub_1D5AAD728();
  sub_1D5AAD71C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v19);
  v14 = v20;
  sub_1D5AAD704();
  sub_1D5AADBC0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v22);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
}

__n128 sub_1D57E433C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  __n128 v17;
  __int128 v18;
  unsigned __int8 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  char v25;
  char v26;
  char v27;
  unsigned __int8 v28;
  char v29;
  char v30;

  v3 = *(void **)(a1 + 40);
  v4 = (void *)sub_1D5AAE7FC();
  v5 = objc_msgSend(v3, sel_dataForKey_, v4);

  if (v5)
  {
    v6 = sub_1D5AAD698();
    v8 = v7;

    sub_1D57E6BE4();
    sub_1D5AADFEC();
    sub_1D57E69C4(v6, v8);
    v10 = 256;
    if (!v25)
      v10 = 0;
    v11 = v10 | v24;
    v12 = 0x10000;
    if (!v26)
      v12 = 0;
    v13 = 0x1000000;
    if (!v27)
      v13 = 0;
    v14 = v11 | v12 | v13;
    v15 = 0x10000000000;
    if (!v29)
      v15 = 0;
    result = v17;
    *(_QWORD *)a2 = v16;
    *(__n128 *)(a2 + 8) = v17;
    *(_OWORD *)(a2 + 24) = v18;
    *(_QWORD *)(a2 + 40) = v19;
    *(_QWORD *)(a2 + 48) = v20;
    *(_OWORD *)(a2 + 56) = v21;
    *(_QWORD *)(a2 + 72) = v22;
    *(_QWORD *)(a2 + 80) = v23;
    *(_BYTE *)(a2 + 94) = v30;
    *(_DWORD *)(a2 + 88) = v14;
    *(_WORD *)(a2 + 92) = (v14 | ((unint64_t)v28 << 32) | v15) >> 32;
  }
  else
  {
    sub_1D5AAEA0C();
    sub_1D5AAE328();
    result.n128_u64[0] = 0;
    *(_OWORD *)(a2 + 79) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

__n128 sub_1D57E45E8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 result;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  __n128 v13;
  __int128 v14;
  uint64_t v15;

  v3 = *(void **)(a1 + 40);
  v4 = (void *)sub_1D5AAE7FC();
  v5 = objc_msgSend(v3, sel_dataForKey_, v4);

  if (v5)
  {
    v6 = sub_1D5AAD698();
    v8 = v7;

    sub_1D57C63A8();
    sub_1D5AADFEC();
    sub_1D57E69C4(v6, v8);
    result = v13;
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v11;
    *(_QWORD *)(a2 + 16) = v12;
    *(__n128 *)(a2 + 24) = v13;
    *(_OWORD *)(a2 + 40) = v14;
    *(_QWORD *)(a2 + 56) = v15;
  }
  else
  {
    sub_1D5AAEA0C();
    sub_1D5AAE328();
    result.n128_u64[0] = 0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1D57E4810(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1D57CB698(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_1D57E485C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  double result;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(void **)(a1 + 40);
  v4 = (void *)sub_1D5AAE7FC();
  v5 = objc_msgSend(v3, sel_dataForKey_, v4);

  if (v5)
  {
    v6 = sub_1D5AAD698();
    v8 = v7;

    sub_1D57C67A8();
    sub_1D5AADFEC();
    sub_1D57E69C4(v6, v8);
    result = *(double *)&v10;
    *(_OWORD *)a2 = v10;
    *(_QWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v12;
  }
  else
  {
    sub_1D5AAEA0C();
    sub_1D5AAE328();
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

__n128 sub_1D57E4A68@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 result;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(void **)(a1 + 40);
  v4 = (void *)sub_1D5AAE7FC();
  v5 = objc_msgSend(v3, sel_dataForKey_, v4);

  if (v5)
  {
    v6 = sub_1D5AAD698();
    v8 = v7;

    sub_1D57CBD78();
    sub_1D5AADFEC();
    sub_1D57E69C4(v6, v8);
    result = v13;
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v11;
    *(_QWORD *)(a2 + 16) = v12;
    *(__n128 *)(a2 + 24) = v13;
    *(_QWORD *)(a2 + 40) = v14;
    *(_QWORD *)(a2 + 48) = v15;
  }
  else
  {
    sub_1D5AAEA0C();
    sub_1D5AAE328();
    *(_QWORD *)(a2 + 48) = 0;
    result.n128_u64[0] = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t sub_1D57E4C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD v43[8];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _OWORD v66[2];
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  _QWORD v75[12];
  _QWORD v76[8];
  char v77[8];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD v81[3];
  __int128 v82;
  _OWORD v83[2];

  v51 = a7;
  v46 = a4;
  v47 = a6;
  v59 = a5;
  v61 = a1;
  v60 = a8;
  sub_1D57E4810(a8, (uint64_t)v77, &qword_1EFF47E78);
  v52 = v78;
  v53 = v79;
  v54 = v80;
  v58 = a3;
  sub_1D57E4810(a3, (uint64_t)v76, &qword_1EFF47E70);
  v43[6] = v76[1];
  v43[7] = v76[7];
  sub_1D57E4810(a2, (uint64_t)v75, &qword_1EFF47E68);
  v43[2] = v75[7];
  v43[3] = v75[8];
  v43[4] = v75[9];
  v43[5] = v75[10];
  sub_1D57ABC2C(0, (unint64_t *)&qword_1ED9C6FD8, (void (*)(void))sub_1D57BBA08);
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x1E0C80A78](v10);
  v55 = (char *)v43 - v11;
  sub_1D57ABC2C(0, (unint64_t *)&qword_1ED9C6FF8, (void (*)(void))sub_1D57BA09C);
  v49 = *(_QWORD *)(v12 - 8);
  v50 = v12;
  MEMORY[0x1E0C80A78](v12);
  v48 = (char *)v43 - v13;
  sub_1D57ABC2C(0, (unint64_t *)&qword_1ED9C6FD0, (void (*)(void))sub_1D57C0350);
  v44 = *(_QWORD *)(v14 - 8);
  v45 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v43 - v15;
  sub_1D57ABC2C(0, (unint64_t *)&qword_1ED9C7000, (void (*)(void))sub_1D57E6BA0);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v43 - v20;
  sub_1D57E4810(a2, (uint64_t)v81, &qword_1EFF47E68);
  if (*((_QWORD *)&v82 + 1))
  {
    v64 = v81[2];
    v65 = v82;
    v66[0] = v83[0];
    *(_OWORD *)((char *)v66 + 15) = *(_OWORD *)((char *)v83 + 15);
    v62 = v81[0];
    v63 = v81[1];
    v43[1] = sub_1D57E6BA0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5AADA40();
    sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v22 = sub_1D5AADB54();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1D5AB0170;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x1E0CF8168], v22);
    sub_1D5AADD1C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  sub_1D57E4810(v58, (uint64_t)&v62, &qword_1EFF47E70);
  if (*((_QWORD *)&v62 + 1))
  {
    v67 = v62;
    v68 = v63;
    v69 = v64;
    v70 = v65;
    sub_1D57C0350();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5AADA40();
    sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v26 = sub_1D5AADB54();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1D5AB0170;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v27 + 104))(v29 + v28, *MEMORY[0x1E0CF8168], v26);
    sub_1D5AADD1C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v45);
  }
  v30 = (unsigned int *)MEMORY[0x1E0CF8168];
  if (v59)
  {
    *(_QWORD *)&v67 = v46;
    *((_QWORD *)&v67 + 1) = v59;
    *(_QWORD *)&v68 = v47;
    *((_QWORD *)&v68 + 1) = v51;
    sub_1D57BA09C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31 = v48;
    sub_1D5AADA40();
    sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v32 = sub_1D5AADB54();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = v30;
    v35 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1D5AB0170;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v33 + 104))(v36 + v35, *v34, v32);
    sub_1D5AADD1C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v50);
  }
  result = sub_1D57E4810(v60, (uint64_t)&v67, &qword_1EFF47E78);
  if (*((_QWORD *)&v67 + 1))
  {
    v71 = v67;
    v72 = v68;
    v73 = v69;
    v74 = v70;
    sub_1D57BBA08();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38 = v55;
    sub_1D5AADA40();
    sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v39 = sub_1D5AADB54();
    v40 = *(_QWORD *)(v39 - 8);
    v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1D5AB0170;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v40 + 104))(v42 + v41, *MEMORY[0x1E0CF8168], v39);
    sub_1D5AADD1C();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v38, v57);
  }
  return result;
}

uint64_t sub_1D57E5414()
{
  _QWORD *v0;

  if (v0[9])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[15])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[23])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[27])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1D57E54AC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D57E4C8C(a1, (uint64_t)(v1 + 2), (uint64_t)(v1 + 14), v1[22], v1[23], v1[24], v1[25], (uint64_t)(v1 + 26));
}

Swift::Void __swiftcall NotificationReceiptReporter.report(status:notificationData:)(NewsAnalytics::NotificationStatus status, NewsAnalytics::NotificationData *notificationData)
{
  uint64_t v2;
  char v3;
  __int128 v4;
  __int128 v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String_optional v9;
  __int128 v10;
  int v11[10];
  Swift::String_optional notificationID;
  __int128 v13;
  __int128 v14;
  _OWORD v15[2];
  _BYTE v16[40];

  v3 = *(_BYTE *)status;
  v4 = *(_OWORD *)&notificationData->sourceChannelID.value._object;
  v14 = *(_OWORD *)&notificationData->senderChannelID.value._object;
  v15[0] = v4;
  *(Swift::String_optional *)((char *)v15 + 10) = *(Swift::String_optional *)((char *)&notificationData->notificationArticleID
                                                                            + 2);
  v5 = *(_OWORD *)&notificationData->viewFromNotification;
  notificationID = notificationData->notificationID;
  v13 = v5;
  sub_1D57E5624(v2, &notificationID, (uint64_t)v11);
  sub_1D57E4810((uint64_t)v11, (uint64_t)v16, &qword_1EFF47E80);
  sub_1D57E5994(v2, &notificationID, v11);
  v6 = v11[0];
  sub_1D5AADBF0();
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  v9 = notificationID;
  *(_OWORD *)(v8 + 40) = v13;
  v10 = v15[0];
  *(_OWORD *)(v8 + 56) = v14;
  *(_OWORD *)(v8 + 72) = v10;
  *(_OWORD *)(v8 + 82) = *(_OWORD *)((char *)v15 + 10);
  *(Swift::String_optional *)(v8 + 24) = v9;
  *(_BYTE *)(v8 + 98) = v3;
  sub_1D57E4810((uint64_t)v16, v8 + 104, &qword_1EFF47E80);
  *(_DWORD *)(v8 + 144) = v6;
  swift_retain();
  sub_1D57E6050((uint64_t)&notificationID);
  sub_1D5AADF14();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1D57E5624@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v5 = *(void **)(a1 + 40);
  v6 = (void *)sub_1D5AAE7FC();
  v7 = objc_msgSend(v5, sel_dictionaryForKey_, v6);

  if (!v7)
  {
    sub_1D5AAEA0C();
LABEL_16:
    result = sub_1D5AAE328();
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  v8 = sub_1D5AAE790();

  v9 = a2[4];
  if (v9)
  {
    v10 = a2[3];
    v11 = v9;
    if (*(_QWORD *)(v8 + 16))
      goto LABEL_4;
LABEL_11:
    v22 = 0u;
    v23 = 0u;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v11 = a2[6];
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_1D5AAEA0C();
    goto LABEL_16;
  }
  v10 = a2[5];
  swift_bridgeObjectRetain();
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_11;
LABEL_4:
  swift_bridgeObjectRetain();
  v12 = sub_1D5948F70(v10, v11);
  if ((v13 & 1) == 0)
  {
    v22 = 0u;
    v23 = 0u;
    goto LABEL_13;
  }
  sub_1D57E6B64(*(_QWORD *)(v8 + 56) + 32 * v12, (uint64_t)&v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v23 + 1))
  {
LABEL_14:
    sub_1D57C5484((uint64_t)&v22);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    sub_1D5AAEA0C();
    goto LABEL_16;
  }
  v14 = v25;
  v15 = v26;
  sub_1D57CB874();
  sub_1D5AADFEC();
  result = sub_1D57E69C4(v14, v15);
  v17 = *((_QWORD *)&v22 + 1);
  v18 = *((_QWORD *)&v23 + 1);
  v19 = v24;
  v20 = 256;
  if (!BYTE1(v23))
    v20 = 0;
  v21 = v20 | v23;
  *(_QWORD *)a3 = v22;
  *(_QWORD *)(a3 + 8) = v17;
  *(_QWORD *)(a3 + 16) = v21;
  *(_QWORD *)(a3 + 24) = v18;
  *(_QWORD *)(a3 + 32) = v19;
  return result;
}

uint64_t sub_1D57E5994@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, int *a3@<X8>)
{
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v14;
  uint64_t result;
  int v16;
  uint64_t v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;

  v5 = *(void **)(a1 + 40);
  v6 = (void *)sub_1D5AAE7FC();
  v7 = objc_msgSend(v5, sel_dictionaryForKey_, v6);

  if (!v7)
  {
    sub_1D5AAEA0C();
    v14 = 2;
LABEL_16:
    result = sub_1D5AAE328();
    goto LABEL_17;
  }
  v8 = sub_1D5AAE790();

  v9 = a2[4];
  if (v9)
  {
    v10 = a2[3];
    v11 = v9;
    if (*(_QWORD *)(v8 + 16))
      goto LABEL_4;
LABEL_11:
    v19 = 0u;
    v20 = 0u;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v11 = a2[6];
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_1D5AAEA0C();
    v14 = 2;
    goto LABEL_16;
  }
  v10 = a2[5];
  swift_bridgeObjectRetain();
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_11;
LABEL_4:
  swift_bridgeObjectRetain();
  v12 = sub_1D5948F70(v10, v11);
  if ((v13 & 1) == 0)
  {
    v19 = 0u;
    v20 = 0u;
    goto LABEL_13;
  }
  sub_1D57E6B64(*(_QWORD *)(v8 + 56) + 32 * v12, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
  {
LABEL_14:
    sub_1D57C5484((uint64_t)&v19);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    sub_1D5AAEA0C();
    v14 = 2;
    goto LABEL_16;
  }
  sub_1D57C7AE0();
  sub_1D5AADFEC();
  result = sub_1D57E69C4(v17, v18);
  if (BYTE1(v19))
    v16 = 256;
  else
    v16 = 0;
  v14 = v16 | v19 | (BYTE2(v19) << 16) | (BYTE3(v19) << 24);
LABEL_17:
  *a3 = v14;
  return result;
}

uint64_t sub_1D57E5D08()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D57E5D2C(uint64_t a1, uint64_t a2, __int128 *a3, char a4, uint64_t a5, int a6)
{
  uint64_t result;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[2];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = a3[3];
    v19 = a3[2];
    v20[0] = v11;
    *(_OWORD *)((char *)v20 + 10) = *(__int128 *)((char *)a3 + 58);
    v12 = a3[1];
    v17 = *a3;
    v18 = v12;
    sub_1D57E6A08();
    sub_1D5AADAF4();
    LOBYTE(v17) = a4;
    sub_1D57E6A4C();
    sub_1D5AADAF4();
    sub_1D57E60A4((uint64_t)&v17);
    LOBYTE(v13) = v17;
    *((_QWORD *)&v13 + 1) = *((_QWORD *)&v17 + 1);
    *(_QWORD *)&v14 = v18;
    WORD4(v14) = WORD4(v18);
    v15 = v19;
    v16 = v20[0];
    sub_1D57BC2E0();
    sub_1D5AADAF4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D57E4810(a5, (uint64_t)&v17, &qword_1EFF47E80);
    if (*((_QWORD *)&v17 + 1))
    {
      v13 = v17;
      v14 = v18;
      *(_QWORD *)&v15 = v19;
      sub_1D57E6AD4();
      sub_1D5AADAF4();
    }
    if (a6 != 2)
    {
      LOWORD(v13) = a6 & 0x101;
      BYTE2(v13) = BYTE2(a6);
      BYTE3(v13) = HIBYTE(a6);
      sub_1D57E6A90();
      sub_1D5AADAF4();
    }
    type metadata accessor for NotificationReceivedEvent(0);
    sub_1D57A8DE4(&qword_1EFF47EA0, type metadata accessor for NotificationReceivedEvent, (uint64_t)&protocol conformance descriptor for NotificationReceivedEvent);
    v13 = 0u;
    v14 = 0u;
    sub_1D5AADB0C();
    swift_release();
    return sub_1D57C5484((uint64_t)&v13);
  }
  return result;
}

uint64_t sub_1D57E5FE0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1D57E6038(uint64_t a1)
{
  uint64_t v1;

  return sub_1D57E5D2C(a1, *(_QWORD *)(v1 + 16), (__int128 *)(v1 + 24), *(_BYTE *)(v1 + 98), v1 + 104, *(_DWORD *)(v1 + 144));
}

uint64_t sub_1D57E6050(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

__n128 sub_1D57E60A4@<Q0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  char v9;
  __n128 result;
  __int128 v11;
  _BYTE v12[8];
  __n128 v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  _OWORD v19[2];

  v2 = (id)NewsCoreUserDefaults();
  v3 = (void *)sub_1D5AAE7FC();
  v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_1D5AAEB20();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_1D57E4810((uint64_t)v19, (uint64_t)v12, (unint64_t *)&qword_1ED9CCA50);
  if (v14)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v17;
      v6 = v18;
      sub_1D5AAD4B8();
      swift_allocObject();
      sub_1D5AAD4AC();
      sub_1D57C6AF8();
      sub_1D5AAD4A0();

      sub_1D57E69C4(v5, v6);
      swift_release();
      v7 = v14;
      v8 = BYTE1(v14);
      v9 = v16;
      result = v13;
      v11 = v15;
      *(_BYTE *)a1 = v12[0];
      *(__n128 *)(a1 + 8) = result;
      *(_BYTE *)(a1 + 24) = v7;
      *(_BYTE *)(a1 + 25) = v8;
      *(_OWORD *)(a1 + 32) = v11;
      *(_BYTE *)(a1 + 48) = v9;
      return result;
    }
  }
  else
  {
    sub_1D57C5484((uint64_t)v12);
  }

  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

Swift::Void __swiftcall NotificationReceiptReporter.reportBadge(origin:)(NewsAnalytics::BadgeOriginationData origin)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_BYTE *)origin.badgeOriginationType;
  sub_1D5AADBF0();
  v2 = swift_allocObject();
  swift_weakInit();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 24) = v1;
  swift_retain();
  sub_1D5AADF14();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1D57E6320(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;
  _OWORD v5[2];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    LOBYTE(v5[0]) = a3;
    sub_1D57E6980();
    sub_1D5AADAF4();
    sub_1D57E60A4((uint64_t)v5);
    sub_1D57BC2E0();
    sub_1D5AADAF4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for AppBadgeEvent(0);
    sub_1D57A8DE4(&qword_1EFF47E90, type metadata accessor for AppBadgeEvent, (uint64_t)&protocol conformance descriptor for AppBadgeEvent);
    memset(v5, 0, sizeof(v5));
    sub_1D5AADB0C();
    swift_release();
    return sub_1D57C5484((uint64_t)v5);
  }
  return result;
}

uint64_t sub_1D57E64B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D57E64D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1D57E6320(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t NotificationReceiptReporter.endSession(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = sub_1D5AAD710();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AAEA24();
  sub_1D5AAE328();
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  swift_retain();
  swift_retain();
  sub_1D5AAD704();
  sub_1D5AADBA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release();
}

uint64_t sub_1D57E6624(uint64_t a1, void (*a2)(void))
{
  uint64_t result;
  id v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = *(id *)(result + 24);
    sub_1D5AAEA24();
    sub_1D5AAE328();

    a2();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D57E66C8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D57E66F4()
{
  uint64_t v0;

  return sub_1D57E6624(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t NotificationReceiptReporter.deinit()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return v0;
}

uint64_t NotificationReceiptReporter.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for NotificationReceiptReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NotificationReceiptReporter.__allocating_init(log:contentType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1D57E6900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v1 = v0
     + OBJC_IVAR____TtC13NewsAnalyticsP33_73410A717757B42F2A6F1BC37191285735NotificationReceiptReporterEndpoint_defaultURL;
  v2 = sub_1D5AAD668();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0+ OBJC_IVAR____TtC13NewsAnalyticsP33_73410A717757B42F2A6F1BC37191285735NotificationReceiptReporterEndpoint_notificationReceiptURL, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D57E6978()
{
  return type metadata accessor for NotificationReceiptReporterEndpoint();
}

unint64_t sub_1D57E6980()
{
  unint64_t result;

  result = qword_1EFF47E88;
  if (!qword_1EFF47E88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BadgeOriginationData, &type metadata for BadgeOriginationData);
    atomic_store(result, (unint64_t *)&qword_1EFF47E88);
  }
  return result;
}

uint64_t sub_1D57E69C4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_1D57E6A08()
{
  unint64_t result;

  result = qword_1EFF4DCC0;
  if (!qword_1EFF4DCC0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationData, &type metadata for NotificationData);
    atomic_store(result, (unint64_t *)&qword_1EFF4DCC0);
  }
  return result;
}

unint64_t sub_1D57E6A4C()
{
  unint64_t result;

  result = qword_1EFF47E98;
  if (!qword_1EFF47E98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationStatusData, &type metadata for NotificationStatusData);
    atomic_store(result, (unint64_t *)&qword_1EFF47E98);
  }
  return result;
}

unint64_t sub_1D57E6A90()
{
  unint64_t result;

  result = qword_1EFF47EA8;
  if (!qword_1EFF47EA8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserChannelContextData, &type metadata for UserChannelContextData);
    atomic_store(result, (unint64_t *)&qword_1EFF47EA8);
  }
  return result;
}

unint64_t sub_1D57E6AD4()
{
  unint64_t result;

  result = qword_1EFF47EB0;
  if (!qword_1EFF47EB0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ChannelData, &type metadata for ChannelData);
    atomic_store(result, (unint64_t *)&qword_1EFF47EB0);
  }
  return result;
}

uint64_t sub_1D57E6B18(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1D57E6B64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1D57E6BA0()
{
  unint64_t result;

  result = qword_1ED9C7770;
  if (!qword_1ED9C7770)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SessionData, &type metadata for SessionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7770);
  }
  return result;
}

unint64_t sub_1D57E6BE4()
{
  unint64_t result;

  result = qword_1ED9C7780;
  if (!qword_1ED9C7780)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SessionData, &type metadata for SessionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7780);
  }
  return result;
}

uint64_t sub_1D57E6C28(uint64_t a1)
{
  uint64_t v2;

  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9C6F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t RecirculationData.dataProviderID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecirculationData.dataProviderID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RecirculationData.dataProviderID.modify())()
{
  return nullsub_1;
}

NewsAnalytics::RecirculationData __swiftcall RecirculationData.init(dataProviderID:)(NewsAnalytics::RecirculationData dataProviderID)
{
  NewsAnalytics::RecirculationData *v1;

  *v1 = dataProviderID;
  return dataProviderID;
}

uint64_t sub_1D57E6CF4()
{
  return 0x766F725061746164;
}

uint64_t sub_1D57E6D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x766F725061746164 && a2 == 0xEE00444972656469)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D57E6DD0()
{
  sub_1D57E6F14();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57E6DF8()
{
  sub_1D57E6F14();
  return sub_1D5AAEEE0();
}

uint64_t RecirculationData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57E707C(0, &qword_1EFF47EB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57E6F14();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D57E6F14()
{
  unint64_t result;

  result = qword_1EFF47EC0;
  if (!qword_1EFF47EC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB1A78, &type metadata for RecirculationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47EC0);
  }
  return result;
}

uint64_t RecirculationData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D57E707C(0, &qword_1EFF47EC8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57E6F14();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D57E707C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57E6F14();
    v7 = a3(a1, &type metadata for RecirculationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57E70DC()
{
  unint64_t result;

  result = qword_1ED9CFC20;
  if (!qword_1ED9CFC20)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for RecirculationData, &type metadata for RecirculationData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC20);
  }
  return result;
}

unint64_t sub_1D57E7124()
{
  unint64_t result;

  result = qword_1ED9CFC18;
  if (!qword_1ED9CFC18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for RecirculationData, &type metadata for RecirculationData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC18);
  }
  return result;
}

uint64_t sub_1D57E7168@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RecirculationData.init(from:)(a1, a2);
}

uint64_t sub_1D57E717C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57E707C(0, &qword_1EFF47EB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57E6F14();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for RecirculationData()
{
  return &type metadata for RecirculationData;
}

uint64_t storeEnumTagSinglePayload for RecirculationData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57E72C0 + 4 * byte_1D5AB1900[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57E72E0 + 4 * byte_1D5AB1905[v4]))();
}

_BYTE *sub_1D57E72C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57E72E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57E72E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57E72F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57E72F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57E7300(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RecirculationData.CodingKeys()
{
  return &type metadata for RecirculationData.CodingKeys;
}

unint64_t sub_1D57E7320()
{
  unint64_t result;

  result = qword_1EFF47ED0;
  if (!qword_1EFF47ED0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB1A50, &type metadata for RecirculationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47ED0);
  }
  return result;
}

unint64_t sub_1D57E7368()
{
  unint64_t result;

  result = qword_1EFF47ED8;
  if (!qword_1EFF47ED8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB19C0, &type metadata for RecirculationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47ED8);
  }
  return result;
}

unint64_t sub_1D57E73B0()
{
  unint64_t result;

  result = qword_1EFF47EE0;
  if (!qword_1EFF47EE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB19E8, &type metadata for RecirculationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47EE0);
  }
  return result;
}

NewsAnalytics::FeedbackType_optional __swiftcall FeedbackType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::FeedbackType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedbackType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57E747C + 4 * byte_1D5AB1AC8[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D57E747C()
{
  return 1702195828;
}

uint64_t sub_1D57E748C()
{
  return 0x65736C6166;
}

uint64_t sub_1D57E74A0()
{
  return 0x656279616DLL;
}

void sub_1D57E74B4(char *a1)
{
  sub_1D5A3D1BC(*a1);
}

unint64_t sub_1D57E74C4()
{
  unint64_t result;

  result = qword_1EFF47EE8;
  if (!qword_1EFF47EE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedbackType, &type metadata for FeedbackType);
    atomic_store(result, (unint64_t *)&qword_1EFF47EE8);
  }
  return result;
}

void sub_1D57E7508()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D57E7554()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D57E75B0()
{
  __asm { BR              X10 }
}

uint64_t sub_1D57E75EC()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D57E7634()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D57E767C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::FeedbackType_optional sub_1D57E76D8(Swift::String *a1)
{
  return FeedbackType.init(rawValue:)(*a1);
}

uint64_t sub_1D57E76E4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57E7714 + 4 * byte_1D5AB1AD8[*v0]))();
}

void sub_1D57E7714(_QWORD *a1@<X8>)
{
  *a1 = 1702195828;
  a1[1] = 0xE400000000000000;
}

void sub_1D57E7728(_QWORD *a1@<X8>)
{
  *a1 = 0x65736C6166;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1D57E7750()
{
  sub_1D57E78C4();
  return sub_1D5AAE928();
}

uint64_t sub_1D57E77AC()
{
  sub_1D57E78C4();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for FeedbackType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D57E7844 + 4 * byte_1D5AB1AE1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D57E7878 + 4 * byte_1D5AB1ADC[v4]))();
}

uint64_t sub_1D57E7878(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57E7880(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57E7888);
  return result;
}

uint64_t sub_1D57E7894(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57E789CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D57E78A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57E78A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedbackType()
{
  return &type metadata for FeedbackType;
}

unint64_t sub_1D57E78C4()
{
  unint64_t result;

  result = qword_1EFF47EF0;
  if (!qword_1EFF47EF0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedbackType, &type metadata for FeedbackType);
    atomic_store(result, (unint64_t *)&qword_1EFF47EF0);
  }
  return result;
}

uint64_t sub_1D57E7908(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF47EF8, MEMORY[0x1E0CF8078]);
}

uint64_t static MediaEngageEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F00, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF47EF8, a1);
}

uint64_t sub_1D57E7948(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF47F10, MEMORY[0x1E0CF8380]);
}

uint64_t static MediaEngageEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F08, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF47F10, a1);
}

uint64_t MediaEngageEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t MediaEngageEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MediaEngageEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for MediaEngageEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8C88);
}

uint64_t MediaEngageEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.articleData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.channelData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.groupData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.feedData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D57E7E38()
{
  unint64_t result;

  result = qword_1ED9CC5B0;
  if (!qword_1ED9CC5B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaData, &type metadata for MediaData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC5B0);
  }
  return result;
}

unint64_t sub_1D57E7E7C()
{
  unint64_t result;

  result = qword_1ED9CC5A8;
  if (!qword_1ED9CC5A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaData, &type metadata for MediaData);
    atomic_store(result, (unint64_t *)&qword_1ED9CC5A8);
  }
  return result;
}

uint64_t MediaEngageEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.mediaData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.mediaEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D57E7FB8()
{
  unint64_t result;

  result = qword_1ED9CA390;
  if (!qword_1ED9CA390)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaEngagementData, &type metadata for MediaEngagementData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA390);
  }
  return result;
}

unint64_t sub_1D57E7FFC()
{
  unint64_t result;

  result = qword_1ED9CA388;
  if (!qword_1ED9CA388)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaEngagementData, &type metadata for MediaEngagementData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA388);
  }
  return result;
}

uint64_t MediaEngageEvent.mediaEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.mediaEngagementData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.viewData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D57E8230()
{
  unint64_t result;

  result = qword_1ED9C8380;
  if (!qword_1ED9C8380)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ANFComponentData, &type metadata for ANFComponentData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8380);
  }
  return result;
}

unint64_t sub_1D57E8274()
{
  unint64_t result;

  result = qword_1ED9C8378;
  if (!qword_1ED9C8378)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ANFComponentData, &type metadata for ANFComponentData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8378);
  }
  return result;
}

uint64_t MediaEngageEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.anfComponentData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.issueData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.issueViewData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.orientationData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.articleExposureContextData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for MediaEngageEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v10, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v10, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v10, v31);
}

uint64_t MediaEngageEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t MediaEngageEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t type metadata accessor for MediaEngageEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8BC0);
}

uint64_t MediaEngageEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *MediaEngageEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for MediaEngageEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 28), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t MediaEngageEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t MediaEngageEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 36));
  v4 = *v3;
  v6 = *((_QWORD *)v3 + 1);
  v5 = *((_QWORD *)v3 + 2);
  v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.mediaEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  int v7;
  char v8;

  result = type metadata accessor for MediaEngageEvent.Model(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 40));
  v5 = *v4;
  v6 = *((_BYTE *)v4 + 8);
  v7 = *((_DWORD *)v4 + 3);
  v8 = *((_BYTE *)v4 + 16);
  LOBYTE(v4) = *((_BYTE *)v4 + 17);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 12) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 17) = (_BYTE)v4;
  return result;
}

uint64_t MediaEngageEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  return sub_1D57E8EF4(v4, v5);
}

uint64_t sub_1D57E8EF4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t MediaEngageEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 52));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t sub_1D57E8FE4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t MediaEngageEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 60));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaEngageEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t MediaEngageEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 68));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57E90BC(v4, v5);
}

uint64_t sub_1D57E90BC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 MediaEngageEvent.Model.init(eventData:articleData:channelData:groupData:feedData:mediaData:mediaEngagementData:viewData:anfComponentData:userBundleSubscriptionContextData:issueData:issueViewData:orientationData:articleExposureContextData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, char *a11, __int128 *a12, uint64_t *a13, __int16 *a14, __int128 *a15)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  __n128 result;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  int v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __n128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  _BYTE v85[23];
  _BYTE v86[144];

  v84 = a2[6];
  *(_OWORD *)v85 = a2[7];
  *(_QWORD *)&v85[15] = *(_QWORD *)((char *)a2 + 127);
  v80 = a2[2];
  v81 = a2[3];
  v82 = a2[4];
  v83 = a2[5];
  v78 = *a2;
  v79 = a2[1];
  v47 = a3[1];
  v48 = *a3;
  v45 = *((_BYTE *)a3 + 17);
  v46 = *((_BYTE *)a3 + 16);
  v43 = a3[4];
  v44 = a3[3];
  sub_1D57DD5B8(a4, (uint64_t)v86);
  v49 = *a5;
  v20 = *((_QWORD *)a5 + 2);
  v21 = *a6;
  v51 = *((_QWORD *)a6 + 2);
  v52 = *((_QWORD *)a6 + 1);
  v50 = *((_DWORD *)a6 + 6);
  LOBYTE(a6) = a6[28];
  v22 = *a7;
  v55 = *((_DWORD *)a7 + 3);
  v56 = *((_BYTE *)a7 + 8);
  v53 = v21;
  v54 = *((_BYTE *)a7 + 16);
  LOBYTE(a7) = *((_BYTE *)a7 + 17);
  v23 = *a8;
  v57 = v22;
  v58 = a8[1];
  LOWORD(a8) = *((_WORD *)a8 + 8);
  v63 = a10[1];
  v64 = *a10;
  v62 = a10[2];
  v61 = *((_QWORD *)a10 + 6);
  v59 = v23;
  v60 = *((_QWORD *)a10 + 7);
  v72 = *a11;
  v70 = *((_QWORD *)a11 + 2);
  v71 = *((_QWORD *)a11 + 1);
  v68 = a11[25];
  v69 = a11[24];
  v66 = *((_QWORD *)a11 + 5);
  v67 = *((_QWORD *)a11 + 4);
  v65 = a11[48];
  v73 = *((_QWORD *)a12 + 3);
  v74 = *((_QWORD *)a12 + 2);
  v25 = *a13;
  v24 = a13[1];
  v26 = *a14;
  v77 = *a15;
  v75 = *a12;
  v76 = (__n128)a15[1];
  v27 = *((_QWORD *)a15 + 4);
  v28 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(a9, a1, v28);
  v29 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
  v30 = a9 + v29[5];
  *(_OWORD *)(v30 + 96) = v84;
  *(_OWORD *)(v30 + 112) = *(_OWORD *)v85;
  *(_QWORD *)(v30 + 127) = *(_QWORD *)&v85[15];
  *(_OWORD *)(v30 + 32) = v80;
  *(_OWORD *)(v30 + 48) = v81;
  *(_OWORD *)(v30 + 64) = v82;
  *(_OWORD *)(v30 + 80) = v83;
  *(_OWORD *)v30 = v78;
  *(_OWORD *)(v30 + 16) = v79;
  v31 = a9 + v29[6];
  *(_QWORD *)v31 = v48;
  *(_QWORD *)(v31 + 8) = v47;
  *(_BYTE *)(v31 + 16) = v46;
  *(_BYTE *)(v31 + 17) = v45;
  *(_QWORD *)(v31 + 24) = v44;
  *(_QWORD *)(v31 + 32) = v43;
  sub_1D57DD5B8((uint64_t)v86, a9 + v29[7]);
  v32 = a9 + v29[8];
  *(_QWORD *)(v32 + 16) = v20;
  *(_OWORD *)v32 = v49;
  v33 = a9 + v29[9];
  *(_BYTE *)v33 = v53;
  *(_QWORD *)(v33 + 8) = v52;
  *(_QWORD *)(v33 + 16) = v51;
  *(_DWORD *)(v33 + 24) = v50;
  *(_BYTE *)(v33 + 28) = (_BYTE)a6;
  v34 = a9 + v29[10];
  *(_QWORD *)v34 = v57;
  *(_BYTE *)(v34 + 8) = v56;
  *(_DWORD *)(v34 + 12) = v55;
  *(_BYTE *)(v34 + 16) = v54;
  *(_BYTE *)(v34 + 17) = (_BYTE)a7;
  v35 = a9 + v29[11];
  *(_QWORD *)v35 = v59;
  *(_QWORD *)(v35 + 8) = v58;
  *(_WORD *)(v35 + 16) = (_WORD)a8;
  v36 = a9 + v29[12];
  *(_OWORD *)v36 = v64;
  *(_OWORD *)(v36 + 16) = v63;
  *(_OWORD *)(v36 + 32) = v62;
  *(_QWORD *)(v36 + 48) = v61;
  *(_QWORD *)(v36 + 56) = v60;
  v37 = a9 + v29[13];
  *(_BYTE *)v37 = v72;
  *(_QWORD *)(v37 + 8) = v71;
  *(_QWORD *)(v37 + 16) = v70;
  *(_BYTE *)(v37 + 24) = v69;
  *(_BYTE *)(v37 + 25) = v68;
  *(_QWORD *)(v37 + 32) = v67;
  *(_QWORD *)(v37 + 40) = v66;
  *(_BYTE *)(v37 + 48) = v65;
  v38 = a9 + v29[14];
  *(_OWORD *)v38 = v75;
  *(_QWORD *)(v38 + 16) = v74;
  *(_QWORD *)(v38 + 24) = v73;
  v39 = (_QWORD *)(a9 + v29[15]);
  *v39 = v25;
  v39[1] = v24;
  *(_WORD *)(a9 + v29[16]) = v26;
  v40 = a9 + v29[17];
  result = v76;
  *(_OWORD *)v40 = v77;
  *(__n128 *)(v40 + 16) = v76;
  *(_QWORD *)(v40 + 32) = v27;
  return result;
}

uint64_t sub_1D57E946C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57E94A4 + 4 * byte_1D5AB1C00[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D57E94A4()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D57E94D8()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D57E94EC()
{
  return 0x6174614464656566;
}

unint64_t sub_1D57E9540()
{
  return 0xD000000000000010;
}

unint64_t sub_1D57E955C()
{
  return 0xD000000000000021;
}

uint64_t sub_1D57E9574()
{
  return 0x7461446575737369;
}

uint64_t sub_1D57E9588()
{
  return 0x6569566575737369;
}

uint64_t sub_1D57E95AC()
{
  return 0x7461746E6569726FLL;
}

void sub_1D57E95D0()
{
  JUMPOUT(0x1D57E95E8);
}

uint64_t sub_1D57E95F4()
{
  unsigned __int8 *v0;

  return sub_1D57E946C(*v0);
}

uint64_t sub_1D57E95FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57EEF34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D57E9620()
{
  sub_1D57E9C0C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57E9648()
{
  sub_1D57E9C0C();
  return sub_1D5AAEEE0();
}

uint64_t MediaEngageEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  int v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  _OWORD *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v51;
  char v52;
  _OWORD v53[2];
  __int128 v54;
  __int128 v55;
  _OWORD v56[7];
  _BYTE v57[23];
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;

  v3 = v1;
  sub_1D57EA6A4(0, &qword_1EFF47F28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v51 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57E9C0C();
  sub_1D5AAEEC8();
  v65 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_OWORD *)(v11 + 112);
    v56[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v57 = v12;
    *(_QWORD *)&v57[15] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    v56[2] = *(_OWORD *)(v11 + 32);
    v56[3] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v56[4] = *(_OWORD *)(v11 + 64);
    v56[5] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    v56[0] = *(_OWORD *)v11;
    v56[1] = v15;
    LOBYTE(v53[0]) = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[6]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    v59 = v17;
    v60 = v18;
    v61 = v19;
    v62 = v20;
    v63 = v22;
    v64 = v21;
    v58 = 2;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[7], (uint64_t)v56);
    sub_1D57DD5B8((uint64_t)v56, (uint64_t)v53);
    v52 = 3;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v23 = v3 + v10[8];
    v24 = *(_QWORD *)(v23 + 16);
    v53[0] = *(_OWORD *)v23;
    *(_QWORD *)&v53[1] = v24;
    v52 = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v25 = (char *)(v3 + v10[9]);
    v26 = *v25;
    v27 = *((_QWORD *)v25 + 1);
    v28 = *((_QWORD *)v25 + 2);
    v29 = *((_DWORD *)v25 + 6);
    LOBYTE(v25) = v25[28];
    LOBYTE(v53[0]) = v26;
    *((_QWORD *)&v53[0] + 1) = v27;
    *(_QWORD *)&v53[1] = v28;
    DWORD2(v53[1]) = v29;
    BYTE12(v53[1]) = (_BYTE)v25;
    v52 = 5;
    sub_1D57E7E7C();
    sub_1D5AAED6C();
    v30 = (uint64_t *)(v3 + v10[10]);
    v31 = *v30;
    v32 = *((_BYTE *)v30 + 8);
    v33 = *((_DWORD *)v30 + 3);
    v34 = *((_BYTE *)v30 + 16);
    LOBYTE(v30) = *((_BYTE *)v30 + 17);
    *(_QWORD *)&v53[0] = v31;
    BYTE8(v53[0]) = v32;
    HIDWORD(v53[0]) = v33;
    LOBYTE(v53[1]) = v34;
    BYTE1(v53[1]) = (_BYTE)v30;
    v52 = 6;
    sub_1D57E7FFC();
    sub_1D5AAED6C();
    v35 = (uint64_t *)(v3 + v10[11]);
    v36 = *v35;
    v37 = v35[1];
    LOWORD(v35) = *((_WORD *)v35 + 8);
    *(_QWORD *)&v53[0] = v36;
    *((_QWORD *)&v53[0] + 1) = v37;
    LOWORD(v53[1]) = (_WORD)v35;
    v52 = 7;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v38 = (_OWORD *)(v3 + v10[12]);
    v39 = v38[1];
    v53[0] = *v38;
    v53[1] = v39;
    v40 = v38[3];
    v54 = v38[2];
    v55 = v40;
    v52 = 8;
    sub_1D57E8274();
    sub_1D5AAED18();
    v41 = v3 + v10[13];
    v42 = *(_BYTE *)(v41 + 24);
    v43 = *(_BYTE *)(v41 + 25);
    v44 = *(_BYTE *)(v41 + 48);
    LOBYTE(v53[0]) = *(_BYTE *)v41;
    *(_OWORD *)((char *)v53 + 8) = *(_OWORD *)(v41 + 8);
    BYTE8(v53[1]) = v42;
    BYTE9(v53[1]) = v43;
    v54 = *(_OWORD *)(v41 + 32);
    LOBYTE(v55) = v44;
    v52 = 9;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v45 = (_OWORD *)(v3 + v10[14]);
    v46 = v45[1];
    v53[0] = *v45;
    v53[1] = v46;
    v52 = 10;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v53[0] = *(_OWORD *)(v3 + v10[15]);
    v52 = 11;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    LOWORD(v53[0]) = *(_WORD *)(v3 + v10[16]);
    v52 = 12;
    sub_1D57CA4E4();
    sub_1D5AAED18();
    v47 = v3 + v10[17];
    v48 = *(_QWORD *)(v47 + 32);
    v49 = *(_OWORD *)(v47 + 16);
    v53[0] = *(_OWORD *)v47;
    v53[1] = v49;
    *(_QWORD *)&v54 = v48;
    v52 = 13;
    sub_1D57C71C4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D57E9C0C()
{
  unint64_t result;

  result = qword_1EFF47F30;
  if (!qword_1EFF47F30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB1F94, &type metadata for MediaEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47F30);
  }
  return result;
}

uint64_t MediaEngageEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int v20;
  int *v21;
  char *v22;
  int *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  char *v41;
  char v42;
  int v43;
  char v44;
  char v45;
  char *v46;
  uint64_t v47;
  __int16 v48;
  char *v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  char v53;
  char v54;
  char v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _BOOL4 v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _OWORD v77[2];
  __int128 v78;
  __int128 v79;
  char v80;
  _BYTE v81[144];
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _BYTE v89[23];
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  _OWORD v97[3];
  int *v98;

  v69 = a2;
  v4 = sub_1D5AADF98();
  v71 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57EA6A4(0, &qword_1EFF47F38, MEMORY[0x1E0DED048]);
  v72 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v67 - v9;
  v98 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
  MEMORY[0x1E0C80A78](v98);
  v76 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v74 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D57E9C0C();
  v70 = v10;
  sub_1D5AAEEB0();
  if (v2)
  {
    v75 = v2;
    LODWORD(v72) = 0;
    v13 = v76;
    result = __swift_destroy_boxed_opaque_existential_1(v74);
    v20 = 0;
    v73 = 0;
    LODWORD(v74) = 0;
    v21 = v98;
    if ((_DWORD)v72)
      goto LABEL_10;
LABEL_5:
    if (!v20)
      goto LABEL_11;
LABEL_6:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v73)
      goto LABEL_12;
    goto LABEL_7;
  }
  v68 = v8;
  LOBYTE(v90) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v22 = v76;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v76, v6, v4);
  v81[143] = 1;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v23 = v98;
  v24 = &v22[v98[5]];
  v25 = *(_OWORD *)v89;
  *((_OWORD *)v24 + 6) = v88;
  *((_OWORD *)v24 + 7) = v25;
  *(_QWORD *)(v24 + 127) = *(_QWORD *)&v89[15];
  v26 = v85;
  *((_OWORD *)v24 + 2) = v84;
  *((_OWORD *)v24 + 3) = v26;
  v27 = v87;
  *((_OWORD *)v24 + 4) = v86;
  *((_OWORD *)v24 + 5) = v27;
  v28 = v83;
  *(_OWORD *)v24 = v82;
  *((_OWORD *)v24 + 1) = v28;
  v81[0] = 2;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v29 = *((_QWORD *)&v90 + 1);
  v30 = v91;
  v31 = BYTE1(v91);
  v32 = *((_QWORD *)&v91 + 1);
  v33 = v92;
  v34 = &v22[v23[6]];
  *(_QWORD *)v34 = v90;
  *((_QWORD *)v34 + 1) = v29;
  v34[16] = v30;
  v34[17] = v31;
  *((_QWORD *)v34 + 3) = v32;
  *((_QWORD *)v34 + 4) = v33;
  v81[142] = 3;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)&v90, (uint64_t)v81);
  sub_1D57DD5B8((uint64_t)v81, (uint64_t)&v22[v23[7]]);
  v80 = 4;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v35 = *(_QWORD *)&v77[1];
  v36 = &v22[v23[8]];
  *(_OWORD *)v36 = v77[0];
  *((_QWORD *)v36 + 2) = v35;
  v80 = 5;
  sub_1D57E7E38();
  sub_1D5AAECD0();
  v37 = *((_QWORD *)&v77[0] + 1);
  v38 = *(_QWORD *)&v77[1];
  v39 = DWORD2(v77[1]);
  v40 = BYTE12(v77[1]);
  v41 = &v22[v23[9]];
  *v41 = v77[0];
  *((_QWORD *)v41 + 1) = v37;
  *((_QWORD *)v41 + 2) = v38;
  *((_DWORD *)v41 + 6) = v39;
  v41[28] = v40;
  v80 = 6;
  sub_1D57E7FB8();
  sub_1D5AAECD0();
  v42 = BYTE8(v77[0]);
  v43 = HIDWORD(v77[0]);
  v44 = v77[1];
  v45 = BYTE1(v77[1]);
  v46 = &v22[v23[10]];
  *(_QWORD *)v46 = *(_QWORD *)&v77[0];
  v46[8] = v42;
  *((_DWORD *)v46 + 3) = v43;
  v46[16] = v44;
  v46[17] = v45;
  v80 = 7;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v47 = *((_QWORD *)&v77[0] + 1);
  v48 = v77[1];
  v49 = &v22[v98[11]];
  *(_QWORD *)v49 = *(_QWORD *)&v77[0];
  *((_QWORD *)v49 + 1) = v47;
  *((_WORD *)v49 + 8) = v48;
  v80 = 8;
  sub_1D57E8230();
  sub_1D5AAEC7C();
  v50 = &v22[v98[12]];
  v51 = v77[1];
  *(_OWORD *)v50 = v77[0];
  *((_OWORD *)v50 + 1) = v51;
  v52 = v79;
  *((_OWORD *)v50 + 2) = v78;
  *((_OWORD *)v50 + 3) = v52;
  v80 = 9;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v75 = 0;
  v53 = BYTE8(v77[1]);
  v54 = BYTE9(v77[1]);
  v55 = v79;
  v56 = &v76[v98[13]];
  *v56 = v77[0];
  *(_OWORD *)(v56 + 8) = *(_OWORD *)((char *)v77 + 8);
  v56[24] = v53;
  v56[25] = v54;
  *((_OWORD *)v56 + 2) = v78;
  v56[48] = v55;
  v80 = 10;
  sub_1D57C5ED8();
  v57 = v75;
  sub_1D5AAEC7C();
  v73 = v57 == 0;
  v75 = v57;
  if (v57)
    goto LABEL_17;
  v58 = &v76[v98[14]];
  v59 = v77[1];
  *(_OWORD *)v58 = v77[0];
  *((_OWORD *)v58 + 1) = v59;
  v80 = 11;
  sub_1D57CAD28();
  v60 = v75;
  sub_1D5AAEC7C();
  v75 = v60;
  if (v60)
  {
LABEL_17:
    (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v72);
    __swift_destroy_boxed_opaque_existential_1(v74);
    LODWORD(v74) = 0;
  }
  else
  {
    *(_OWORD *)&v76[v98[15]] = v77[0];
    v80 = 12;
    sub_1D57CA4A0();
    v61 = v75;
    sub_1D5AAEC7C();
    v75 = v61;
    if (!v61)
    {
      *(_WORD *)&v76[v98[16]] = v77[0];
      v80 = 13;
      sub_1D57C7180();
      v62 = v75;
      sub_1D5AAEC7C();
      v75 = v62;
      if (!v62)
      {
        (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v72);
        v63 = v78;
        v64 = (uint64_t)v76;
        v65 = &v76[v98[17]];
        v66 = v77[1];
        *(_OWORD *)v65 = v77[0];
        *((_OWORD *)v65 + 1) = v66;
        *((_QWORD *)v65 + 4) = v63;
        sub_1D57EA780(v64, v69);
        __swift_destroy_boxed_opaque_existential_1(v74);
        return sub_1D57EA7C4(v64);
      }
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v72);
    __swift_destroy_boxed_opaque_existential_1(v74);
    LODWORD(v74) = 1;
  }
  v13 = v76;
  (*(void (**)(char *, uint64_t))(v71 + 8))(v76, v4);
  v20 = 1;
  LODWORD(v72) = 1;
  v15 = &v13[v98[5]];
  v16 = *((_OWORD *)v15 + 7);
  v96 = *((_OWORD *)v15 + 6);
  v97[0] = v16;
  *(_QWORD *)((char *)v97 + 15) = *(_QWORD *)(v15 + 127);
  v17 = *((_OWORD *)v15 + 3);
  v92 = *((_OWORD *)v15 + 2);
  v93 = v17;
  v18 = *((_OWORD *)v15 + 5);
  v94 = *((_OWORD *)v15 + 4);
  v95 = v18;
  v19 = *((_OWORD *)v15 + 1);
  v90 = *(_OWORD *)v15;
  v91 = v19;
  sub_1D57D5AE0((uint64_t)&v90);
  v21 = v98;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D57DD5B8((uint64_t)&v13[v21[7]], (uint64_t)&v90);
  sub_1D57DE9C8(&v90, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
  sub_1D57DAEDC(*(_QWORD *)&v13[v21[8]], *(_QWORD *)&v13[v21[8] + 8], *(_QWORD *)&v13[v21[8] + 16]);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v72 & 1) == 0)
    goto LABEL_5;
LABEL_10:
  result = sub_1D57EA730(*(_QWORD *)&v13[v21[12]], *(_QWORD *)&v13[v21[12] + 8]);
  if ((v20 & 1) != 0)
    goto LABEL_6;
LABEL_11:
  if (v73)
  {
LABEL_12:
    result = sub_1D57EA700(*(_QWORD *)&v13[v21[14]], *(_QWORD *)&v13[v21[14] + 8]);
    if ((v74 & 1) == 0)
      return result;
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  if (!(_DWORD)v74)
    return result;
  return swift_bridgeObjectRelease();
}

void sub_1D57EA6A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57E9C0C();
    v7 = a3(a1, &type metadata for MediaEngageEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57EA700(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D57EA730(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D57EA780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D57EA7C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57EA800@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngageEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D57EA814(_QWORD *a1)
{
  return MediaEngageEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D57EA828@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F00, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF47EF8, a1);
}

uint64_t sub_1D57EA84C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F08, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF47F10, a1);
}

uint64_t sub_1D57EA870@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v11, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v11, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v11, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v11, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaEngageEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for MediaEngageEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
}

uint64_t initializeWithCopy for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57EC56C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                            v8 = v25;
                            v12 = *(_QWORD *)(v25 - 8);
                            v13 = a3[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57EC93C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                            v10 = v27;
                            v14 = *(_QWORD *)(v27 - 8);
                            v15 = a4[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D57ECD08()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C71F0, (void (*)(void))sub_1D57E7FB8, (void (*)(void))sub_1D57E7FFC);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                            if (v13 <= 0x3F)
                              swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for MediaEngageEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  _QWORD *v81;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v12;
    v10[32] = v11[32];
    v13 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    v14 = *((_QWORD *)v11 + 9);
    *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
    v10[112] = v11[112];
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    v15 = (char *)a1 + v9;
    v16 = (char *)a2 + v9;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    *((_WORD *)v15 + 8) = *((_WORD *)v16 + 8);
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = *((_QWORD *)v16 + 3);
    *((_QWORD *)v15 + 4) = v18;
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v81 = a2;
    v21 = (char *)a2 + v19;
    v22 = *((_QWORD *)v21 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22)
    {
      *(_WORD *)v20 = *(_WORD *)v21;
      *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
      *((_QWORD *)v20 + 2) = v22;
      *((_QWORD *)v20 + 3) = *((_QWORD *)v21 + 3);
      v23 = *((_QWORD *)v21 + 5);
      *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
      *((_QWORD *)v20 + 5) = v23;
      v24 = *((_QWORD *)v21 + 7);
      *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
      *((_QWORD *)v20 + 7) = v24;
      v25 = *((_QWORD *)v21 + 9);
      *((_QWORD *)v20 + 8) = *((_QWORD *)v21 + 8);
      *((_QWORD *)v20 + 9) = v25;
      v20[80] = v21[80];
      v26 = *((_QWORD *)v21 + 12);
      *((_QWORD *)v20 + 11) = *((_QWORD *)v21 + 11);
      *((_QWORD *)v20 + 12) = v26;
      *((_QWORD *)v20 + 13) = *((_QWORD *)v21 + 13);
      v20[112] = v21[112];
      v28 = *((_QWORD *)v21 + 15);
      v27 = *((_QWORD *)v21 + 16);
      *((_QWORD *)v20 + 15) = v28;
      *((_QWORD *)v20 + 16) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v30 = *((_OWORD *)v21 + 7);
      *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
      *((_OWORD *)v20 + 7) = v30;
      *((_QWORD *)v20 + 16) = *((_QWORD *)v21 + 16);
      v31 = *((_OWORD *)v21 + 3);
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      *((_OWORD *)v20 + 3) = v31;
      v32 = *((_OWORD *)v21 + 5);
      *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
      *((_OWORD *)v20 + 5) = v32;
      v33 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v33;
    }
    v34 = a3[8];
    v35 = (char *)a1 + v34;
    v36 = (char *)v81 + v34;
    v37 = *((_QWORD *)v36 + 2);
    if (v37 == 1)
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
    }
    else
    {
      *v35 = *v36;
      *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
      *((_QWORD *)v35 + 2) = v37;
      swift_bridgeObjectRetain();
    }
    v38 = a3[9];
    v39 = a3[10];
    v40 = (char *)a1 + v38;
    v41 = (char *)v81 + v38;
    *v40 = *v41;
    v42 = *((_QWORD *)v41 + 2);
    *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
    *((_QWORD *)v40 + 2) = v42;
    *((_DWORD *)v40 + 6) = *((_DWORD *)v41 + 6);
    v40[28] = v41[28];
    v43 = (char *)a1 + v39;
    v44 = (char *)v81 + v39;
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *((_WORD *)v43 + 8) = *((_WORD *)v44 + 8);
    v45 = a3[11];
    v46 = a3[12];
    v47 = (char *)a1 + v45;
    v48 = (char *)v81 + v45;
    v47[16] = v48[16];
    v49 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *((_QWORD *)v47 + 1) = v49;
    v47[17] = v48[17];
    v50 = (_QWORD *)((char *)a1 + v46);
    v51 = (_QWORD *)((char *)v81 + v46);
    v52 = *(_QWORD *)((char *)v81 + v46 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52)
    {
      *v50 = *v51;
      v50[1] = v52;
      v53 = v51[3];
      v50[2] = v51[2];
      v50[3] = v53;
      v54 = v51[5];
      v50[4] = v51[4];
      v50[5] = v54;
      v55 = v51[6];
      v56 = v51[7];
      v50[6] = v55;
      v50[7] = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v57 = *((_OWORD *)v51 + 1);
      *(_OWORD *)v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v57;
      v58 = *((_OWORD *)v51 + 3);
      *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
      *((_OWORD *)v50 + 3) = v58;
    }
    v59 = a3[13];
    v60 = a3[14];
    v61 = (char *)a1 + v59;
    v62 = (char *)v81 + v59;
    *v61 = *v62;
    v63 = *((_QWORD *)v62 + 2);
    *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
    *((_QWORD *)v61 + 2) = v63;
    *((_WORD *)v61 + 12) = *((_WORD *)v62 + 12);
    v64 = *((_QWORD *)v62 + 5);
    *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
    *((_QWORD *)v61 + 5) = v64;
    v61[48] = v62[48];
    v65 = (char *)a1 + v60;
    v66 = (char *)v81 + v60;
    v67 = *(_QWORD *)((char *)v81 + v60 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v67)
    {
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = v67;
      *((_WORD *)v65 + 8) = *((_WORD *)v66 + 8);
      *((_QWORD *)v65 + 3) = *((_QWORD *)v66 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v68 = *((_OWORD *)v66 + 1);
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v68;
    }
    v69 = a3[15];
    v70 = a3[16];
    v71 = (_QWORD *)((char *)a1 + v69);
    v72 = (_QWORD *)((char *)v81 + v69);
    v73 = v72[1];
    *v71 = *v72;
    v71[1] = v73;
    *(_WORD *)((char *)a1 + v70) = *(_WORD *)((char *)v81 + v70);
    v74 = a3[17];
    v75 = (char *)a1 + v74;
    v76 = (char *)v81 + v74;
    v77 = *(_QWORD *)((char *)v81 + v74 + 8);
    swift_bridgeObjectRetain();
    if (v77 == 1)
    {
      v78 = *((_OWORD *)v76 + 1);
      *(_OWORD *)v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v78;
      *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
    }
    else
    {
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = v77;
      v79 = *((_QWORD *)v76 + 3);
      *((_QWORD *)v75 + 2) = *((_QWORD *)v76 + 2);
      *((_QWORD *)v75 + 3) = v79;
      *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for MediaEngageEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[8] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[12] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[14] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[17] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  int *v79;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v12;
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  v13 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 72) = v13;
  *(_BYTE *)(v9 + 80) = *(_BYTE *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 + 104);
  *(_BYTE *)(v9 + 112) = *(_BYTE *)(v10 + 112);
  *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(_BYTE *)(v9 + 132) = *(_BYTE *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  v14 = a1 + v8;
  v15 = a2 + v8;
  v16 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
  v17 = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 32) = v17;
  v79 = a3;
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(a2 + v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21)
  {
    *(_WORD *)v19 = *(_WORD *)v20;
    *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
    *(_QWORD *)(v19 + 16) = v21;
    *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
    v22 = *(_QWORD *)(v20 + 40);
    *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
    *(_QWORD *)(v19 + 40) = v22;
    v23 = *(_QWORD *)(v20 + 56);
    *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
    *(_QWORD *)(v19 + 56) = v23;
    v24 = *(_QWORD *)(v20 + 72);
    *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
    *(_QWORD *)(v19 + 72) = v24;
    *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
    v25 = *(_QWORD *)(v20 + 96);
    *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
    *(_QWORD *)(v19 + 96) = v25;
    *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
    *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
    v27 = *(_QWORD *)(v20 + 120);
    v26 = *(_QWORD *)(v20 + 128);
    *(_QWORD *)(v19 + 120) = v27;
    *(_QWORD *)(v19 + 128) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *(_OWORD *)(v20 + 112);
    *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
    *(_OWORD *)(v19 + 112) = v28;
    *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
    v29 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    *(_OWORD *)(v19 + 48) = v29;
    v30 = *(_OWORD *)(v20 + 80);
    *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
    *(_OWORD *)(v19 + 80) = v30;
    v31 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v31;
  }
  v32 = v79[8];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(v34 + 16);
  if (v35 == 1)
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  }
  else
  {
    *(_BYTE *)v33 = *(_BYTE *)v34;
    *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
    *(_QWORD *)(v33 + 16) = v35;
    swift_bridgeObjectRetain();
  }
  v36 = v79[9];
  v37 = v79[10];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_BYTE *)v38 = *(_BYTE *)v39;
  v40 = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  *(_QWORD *)(v38 + 16) = v40;
  *(_DWORD *)(v38 + 24) = *(_DWORD *)(v39 + 24);
  *(_BYTE *)(v38 + 28) = *(_BYTE *)(v39 + 28);
  v41 = a1 + v37;
  v42 = a2 + v37;
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_WORD *)(v41 + 16) = *(_WORD *)(v42 + 16);
  v43 = v79[11];
  v44 = v79[12];
  v45 = a1 + v43;
  v46 = a2 + v43;
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
  v47 = *(_QWORD *)(v46 + 8);
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_QWORD *)(v45 + 8) = v47;
  *(_BYTE *)(v45 + 17) = *(_BYTE *)(v46 + 17);
  v48 = (_QWORD *)(a1 + v44);
  v49 = (_QWORD *)(a2 + v44);
  v50 = *(_QWORD *)(a2 + v44 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v50)
  {
    *v48 = *v49;
    v48[1] = v50;
    v51 = v49[3];
    v48[2] = v49[2];
    v48[3] = v51;
    v52 = v49[5];
    v48[4] = v49[4];
    v48[5] = v52;
    v53 = v49[6];
    v54 = v49[7];
    v48[6] = v53;
    v48[7] = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v55 = *((_OWORD *)v49 + 1);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v55;
    v56 = *((_OWORD *)v49 + 3);
    *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
    *((_OWORD *)v48 + 3) = v56;
  }
  v57 = v79[13];
  v58 = v79[14];
  v59 = a1 + v57;
  v60 = a2 + v57;
  *(_BYTE *)v59 = *(_BYTE *)v60;
  v61 = *(_QWORD *)(v60 + 16);
  *(_QWORD *)(v59 + 8) = *(_QWORD *)(v60 + 8);
  *(_QWORD *)(v59 + 16) = v61;
  *(_WORD *)(v59 + 24) = *(_WORD *)(v60 + 24);
  v62 = *(_QWORD *)(v60 + 40);
  *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  *(_QWORD *)(v59 + 40) = v62;
  *(_BYTE *)(v59 + 48) = *(_BYTE *)(v60 + 48);
  v63 = a1 + v58;
  v64 = a2 + v58;
  v65 = *(_QWORD *)(a2 + v58 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v65)
  {
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *(_QWORD *)(v63 + 8) = v65;
    *(_WORD *)(v63 + 16) = *(_WORD *)(v64 + 16);
    *(_QWORD *)(v63 + 24) = *(_QWORD *)(v64 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v66 = *(_OWORD *)(v64 + 16);
    *(_OWORD *)v63 = *(_OWORD *)v64;
    *(_OWORD *)(v63 + 16) = v66;
  }
  v67 = v79[15];
  v68 = v79[16];
  v69 = (_QWORD *)(a1 + v67);
  v70 = (_QWORD *)(a2 + v67);
  v71 = v70[1];
  *v69 = *v70;
  v69[1] = v71;
  *(_WORD *)(a1 + v68) = *(_WORD *)(a2 + v68);
  v72 = v79[17];
  v73 = a1 + v72;
  v74 = a2 + v72;
  v75 = *(_QWORD *)(a2 + v72 + 8);
  swift_bridgeObjectRetain();
  if (v75 == 1)
  {
    v76 = *(_OWORD *)(v74 + 16);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *(_OWORD *)(v73 + 16) = v76;
    *(_QWORD *)(v73 + 32) = *(_QWORD *)(v74 + 32);
  }
  else
  {
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *(_QWORD *)(v73 + 8) = v75;
    v77 = *(_QWORD *)(v74 + 24);
    *(_QWORD *)(v73 + 16) = *(_QWORD *)(v74 + 16);
    *(_QWORD *)(v73 + 24) = v77;
    *(_QWORD *)(v73 + 32) = *(_QWORD *)(v74 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a1 + v15 + 16);
  v19 = *(_QWORD *)(a2 + v15 + 16);
  if (v18)
  {
    if (v19)
    {
      *(_BYTE *)v16 = *(_BYTE *)v17;
      *(_BYTE *)(v16 + 1) = *(_BYTE *)(v17 + 1);
      *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
      *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v16 + 24) = *(_DWORD *)(v17 + 24);
      *(_DWORD *)(v16 + 28) = *(_DWORD *)(v17 + 28);
      *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
      *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
      *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
      *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v17 + 104);
      *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
      *(_QWORD *)(v16 + 104) = v20;
      *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v16);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      v22 = *(_OWORD *)(v17 + 64);
      v24 = *(_OWORD *)(v17 + 16);
      v23 = *(_OWORD *)(v17 + 32);
      *(_OWORD *)(v16 + 48) = *(_OWORD *)(v17 + 48);
      *(_OWORD *)(v16 + 64) = v22;
      *(_OWORD *)(v16 + 16) = v24;
      *(_OWORD *)(v16 + 32) = v23;
      v26 = *(_OWORD *)(v17 + 96);
      v25 = *(_OWORD *)(v17 + 112);
      v27 = *(_OWORD *)(v17 + 80);
      *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
      *(_OWORD *)(v16 + 96) = v26;
      *(_OWORD *)(v16 + 112) = v25;
      *(_OWORD *)(v16 + 80) = v27;
    }
  }
  else if (v19)
  {
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_BYTE *)(v16 + 1) = *(_BYTE *)(v17 + 1);
    *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
    *(_DWORD *)(v16 + 24) = *(_DWORD *)(v17 + 24);
    *(_DWORD *)(v16 + 28) = *(_DWORD *)(v17 + 28);
    *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
    *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
    *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
    *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
    *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
    *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
    *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
    *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
    *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
    v21 = *(_QWORD *)(v17 + 104);
    *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
    *(_QWORD *)(v16 + 104) = v21;
    *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
    *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
    v28 = *(_OWORD *)(v17 + 16);
    v29 = *(_OWORD *)(v17 + 32);
    v30 = *(_OWORD *)(v17 + 64);
    *(_OWORD *)(v16 + 48) = *(_OWORD *)(v17 + 48);
    *(_OWORD *)(v16 + 64) = v30;
    *(_OWORD *)(v16 + 16) = v28;
    *(_OWORD *)(v16 + 32) = v29;
    v31 = *(_OWORD *)(v17 + 80);
    v32 = *(_OWORD *)(v17 + 96);
    v33 = *(_OWORD *)(v17 + 112);
    *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
    *(_OWORD *)(v16 + 96) = v32;
    *(_OWORD *)(v16 + 112) = v33;
    *(_OWORD *)(v16 + 80) = v31;
  }
  v34 = a3[8];
  v35 = a1 + v34;
  v36 = (__int128 *)(a2 + v34);
  v37 = *(_QWORD *)(a1 + v34 + 16);
  v38 = *(_QWORD *)(a2 + v34 + 16);
  if (v37 == 1)
  {
    if (v38 == 1)
    {
      v39 = *v36;
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      *(_OWORD *)v35 = v39;
    }
    else
    {
      *(_BYTE *)v35 = *(_BYTE *)v36;
      *(_QWORD *)(v35 + 8) = *((_QWORD *)v36 + 1);
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v38 == 1)
  {
    sub_1D57D9100(v35);
    v40 = *((_QWORD *)v36 + 2);
    *(_OWORD *)v35 = *v36;
    *(_QWORD *)(v35 + 16) = v40;
  }
  else
  {
    *(_BYTE *)v35 = *(_BYTE *)v36;
    *(_QWORD *)(v35 + 8) = *((_QWORD *)v36 + 1);
    *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v41 = a3[9];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)v42 = *(_BYTE *)(a2 + v41);
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(a2 + v41 + 8);
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(a2 + v41 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = *(_DWORD *)(v43 + 24);
  *(_BYTE *)(v42 + 28) = *(_BYTE *)(v43 + 28);
  *(_DWORD *)(v42 + 24) = v44;
  v45 = a3[10];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(_DWORD *)(v46 + 12) = *(_DWORD *)(v47 + 12);
  *(_BYTE *)(v46 + 16) = *(_BYTE *)(v47 + 16);
  *(_BYTE *)(v46 + 17) = *(_BYTE *)(v47 + 17);
  v48 = a3[11];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_QWORD *)v49 = *(_QWORD *)(a2 + v48);
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(a2 + v48 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 16) = *(_BYTE *)(v50 + 16);
  *(_BYTE *)(v49 + 17) = *(_BYTE *)(v50 + 17);
  v51 = a3[12];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  v54 = *(_QWORD *)(a1 + v51 + 8);
  v55 = *(_QWORD *)(a2 + v51 + 8);
  if (v54)
  {
    if (v55)
    {
      *v52 = *v53;
      v52[1] = v53[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v52[2] = v53[2];
      v52[3] = v53[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v52[4] = v53[4];
      v52[5] = v53[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v52[6] = v53[6];
      v52[7] = v53[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE448((uint64_t)v52);
      v56 = *((_OWORD *)v53 + 3);
      v58 = *(_OWORD *)v53;
      v57 = *((_OWORD *)v53 + 1);
      *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
      *((_OWORD *)v52 + 3) = v56;
      *(_OWORD *)v52 = v58;
      *((_OWORD *)v52 + 1) = v57;
    }
  }
  else if (v55)
  {
    *v52 = *v53;
    v52[1] = v53[1];
    v52[2] = v53[2];
    v52[3] = v53[3];
    v52[4] = v53[4];
    v52[5] = v53[5];
    v52[6] = v53[6];
    v52[7] = v53[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v59 = *(_OWORD *)v53;
    v60 = *((_OWORD *)v53 + 1);
    v61 = *((_OWORD *)v53 + 3);
    *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
    *((_OWORD *)v52 + 3) = v61;
    *(_OWORD *)v52 = v59;
    *((_OWORD *)v52 + 1) = v60;
  }
  v62 = a3[13];
  v63 = a1 + v62;
  v64 = a2 + v62;
  *(_BYTE *)v63 = *(_BYTE *)(a2 + v62);
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(a2 + v62 + 8);
  *(_QWORD *)(v63 + 16) = *(_QWORD *)(a2 + v62 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v63 + 24) = *(_BYTE *)(v64 + 24);
  *(_BYTE *)(v63 + 25) = *(_BYTE *)(v64 + 25);
  *(_QWORD *)(v63 + 32) = *(_QWORD *)(v64 + 32);
  *(_QWORD *)(v63 + 40) = *(_QWORD *)(v64 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v63 + 48) = *(_BYTE *)(v64 + 48);
  v65 = a3[14];
  v66 = a1 + v65;
  v67 = a2 + v65;
  v68 = *(_QWORD *)(a1 + v65 + 8);
  v69 = *(_QWORD *)(a2 + v65 + 8);
  if (v68)
  {
    if (v69)
    {
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v66 + 16) = *(_BYTE *)(v67 + 16);
      *(_BYTE *)(v66 + 17) = *(_BYTE *)(v67 + 17);
      *(_QWORD *)(v66 + 24) = *(_QWORD *)(v67 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v66);
      v70 = *(_OWORD *)(v67 + 16);
      *(_OWORD *)v66 = *(_OWORD *)v67;
      *(_OWORD *)(v66 + 16) = v70;
    }
  }
  else if (v69)
  {
    *(_QWORD *)v66 = *(_QWORD *)v67;
    *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
    *(_BYTE *)(v66 + 16) = *(_BYTE *)(v67 + 16);
    *(_BYTE *)(v66 + 17) = *(_BYTE *)(v67 + 17);
    *(_QWORD *)(v66 + 24) = *(_QWORD *)(v67 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v71 = *(_OWORD *)(v67 + 16);
    *(_OWORD *)v66 = *(_OWORD *)v67;
    *(_OWORD *)(v66 + 16) = v71;
  }
  v72 = a3[15];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  *v73 = *v74;
  v73[1] = v74[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  v75 = a3[17];
  v76 = a1 + v75;
  v77 = (__int128 *)(a2 + v75);
  v78 = *(_QWORD *)(a1 + v75 + 8);
  v79 = *((_QWORD *)v77 + 1);
  if (v78 == 1)
  {
    if (v79 == 1)
    {
      v80 = *v77;
      v81 = v77[1];
      *(_QWORD *)(v76 + 32) = *((_QWORD *)v77 + 4);
      *(_OWORD *)v76 = v80;
      *(_OWORD *)(v76 + 16) = v81;
    }
    else
    {
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *(_QWORD *)(v76 + 8) = *((_QWORD *)v77 + 1);
      *(_QWORD *)(v76 + 16) = *((_QWORD *)v77 + 2);
      *(_QWORD *)(v76 + 24) = *((_QWORD *)v77 + 3);
      *(_QWORD *)(v76 + 32) = *((_QWORD *)v77 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v79 == 1)
  {
    sub_1D57EE4B0(v76);
    v82 = *((_QWORD *)v77 + 4);
    v83 = v77[1];
    *(_OWORD *)v76 = *v77;
    *(_OWORD *)(v76 + 16) = v83;
    *(_QWORD *)(v76 + 32) = v82;
  }
  else
  {
    *(_QWORD *)v76 = *(_QWORD *)v77;
    *(_QWORD *)(v76 + 8) = *((_QWORD *)v77 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v76 + 16) = *((_QWORD *)v77 + 2);
    *(_QWORD *)(v76 + 24) = *((_QWORD *)v77 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v76 + 32) = *((_QWORD *)v77 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1D57EE448(uint64_t a1)
{
  destroy for ANFComponentData();
  return a1;
}

uint64_t sub_1D57EE47C(uint64_t a1)
{
  destroy for IssueData();
  return a1;
}

uint64_t sub_1D57EE4B0(uint64_t a1)
{
  destroy for ArticleExposureContextData();
  return a1;
}

uint64_t initializeWithTake for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  _OWORD *v48;
  _OWORD *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
  v22 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v22;
  v23 = *(_OWORD *)(v21 + 112);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
  *(_OWORD *)(v20 + 112) = v23;
  v24 = *(_OWORD *)(v21 + 80);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(v21 + 64);
  *(_OWORD *)(v20 + 80) = v24;
  v25 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v25;
  v26 = a1 + v19;
  v27 = a2 + v19;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  v28 = a3[9];
  v29 = a3[10];
  v30 = (_OWORD *)(a1 + v28);
  v31 = (_OWORD *)(a2 + v28);
  *v30 = *v31;
  *(_OWORD *)((char *)v30 + 13) = *(_OWORD *)((char *)v31 + 13);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  v34 = a3[11];
  v35 = a3[12];
  v36 = a1 + v34;
  v37 = a2 + v34;
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_WORD *)(v36 + 16) = *(_WORD *)(v37 + 16);
  v38 = (_OWORD *)(a1 + v35);
  v39 = (__int128 *)(a2 + v35);
  v40 = *v39;
  v41 = v39[1];
  v42 = v39[3];
  v38[2] = v39[2];
  v38[3] = v42;
  *v38 = v40;
  v38[1] = v41;
  v43 = a3[13];
  v44 = a3[14];
  v45 = a1 + v43;
  v46 = a2 + v43;
  v47 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *(_OWORD *)(v45 + 16) = v47;
  *(_OWORD *)(v45 + 32) = *(_OWORD *)(v46 + 32);
  *(_BYTE *)(v45 + 48) = *(_BYTE *)(v46 + 48);
  v48 = (_OWORD *)(a1 + v44);
  v49 = (_OWORD *)(a2 + v44);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_WORD *)(a1 + v51) = *(_WORD *)(a2 + v51);
  v52 = a3[17];
  v53 = a1 + v52;
  v54 = a2 + v52;
  *(_QWORD *)(v53 + 32) = *(_QWORD *)(v54 + 32);
  v55 = *(_OWORD *)(v54 + 16);
  *(_OWORD *)v53 = *(_OWORD *)v54;
  *(_OWORD *)(v53 + 16) = v55;
  return a1;
}

uint64_t assignWithTake for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v11;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  v16 = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = v16;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (*(_QWORD *)(a1 + v17 + 16))
  {
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      *(_WORD *)v18 = *(_WORD *)v19;
      *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
      *(_QWORD *)(v18 + 16) = v20;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
      *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 40) = *(_QWORD *)(v19 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 48) = *(_QWORD *)(v19 + 48);
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v19 + 64);
      *(_QWORD *)(v18 + 56) = *(_QWORD *)(v19 + 56);
      *(_QWORD *)(v18 + 64) = v21;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 72) = *(_QWORD *)(v19 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v18 + 80) = *(_BYTE *)(v19 + 80);
      v22 = *(_QWORD *)(v19 + 96);
      *(_QWORD *)(v18 + 88) = *(_QWORD *)(v19 + 88);
      *(_QWORD *)(v18 + 96) = v22;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 104) = *(_QWORD *)(v19 + 104);
      *(_BYTE *)(v18 + 112) = *(_BYTE *)(v19 + 112);
      *(_QWORD *)(v18 + 120) = *(_QWORD *)(v19 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 128) = *(_QWORD *)(v19 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E17B8(v18);
  }
  v23 = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = v23;
  *(_QWORD *)(v18 + 128) = *(_QWORD *)(v19 + 128);
  v24 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v24;
  v25 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 80) = v25;
  v26 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v26;
LABEL_6:
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  if (*(_QWORD *)(a1 + v27 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
    goto LABEL_11;
  }
  v30 = *(_QWORD *)(v29 + 16);
  if (v30 == 1)
  {
    sub_1D57D9100(v28);
    goto LABEL_9;
  }
  *(_BYTE *)v28 = *(_BYTE *)v29;
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
LABEL_11:
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_BYTE *)v32 = *(_BYTE *)(a2 + v31);
  v34 = *(_QWORD *)(a2 + v31 + 16);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 28) = *(_BYTE *)(v33 + 28);
  *(_DWORD *)(v32 + 24) = *(_DWORD *)(v33 + 24);
  v35 = a3[10];
  v36 = a3[11];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_DWORD *)(v37 + 12) = *(_DWORD *)(v38 + 12);
  *(_BYTE *)(v37 + 16) = *(_BYTE *)(v38 + 16);
  *(_BYTE *)(v37 + 17) = *(_BYTE *)(v38 + 17);
  v39 = a1 + v36;
  v40 = a2 + v36;
  v41 = *(_QWORD *)(a2 + v36);
  v42 = *(_QWORD *)(a2 + v36 + 8);
  *(_QWORD *)v39 = v41;
  *(_QWORD *)(v39 + 8) = v42;
  swift_bridgeObjectRelease();
  *(_WORD *)(v39 + 16) = *(_WORD *)(v40 + 16);
  v43 = a3[12];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(a2 + v43);
  if (*(_QWORD *)(a1 + v43 + 8))
  {
    v46 = v45[1];
    if (v46)
    {
      *v44 = *v45;
      v44[1] = v46;
      swift_bridgeObjectRelease();
      v47 = v45[3];
      v44[2] = v45[2];
      v44[3] = v47;
      swift_bridgeObjectRelease();
      v48 = v45[5];
      v44[4] = v45[4];
      v44[5] = v48;
      swift_bridgeObjectRelease();
      v49 = v45[7];
      v44[6] = v45[6];
      v44[7] = v49;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57EE448((uint64_t)v44);
  }
  v50 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v50;
  v51 = *((_OWORD *)v45 + 3);
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  *((_OWORD *)v44 + 3) = v51;
LABEL_16:
  v52 = a3[13];
  v53 = a1 + v52;
  v54 = a2 + v52;
  *(_BYTE *)v53 = *(_BYTE *)(a2 + v52);
  v55 = *(_QWORD *)(a2 + v52 + 16);
  *(_QWORD *)(v53 + 8) = *(_QWORD *)(a2 + v52 + 8);
  *(_QWORD *)(v53 + 16) = v55;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v53 + 24) = *(_BYTE *)(v54 + 24);
  *(_BYTE *)(v53 + 25) = *(_BYTE *)(v54 + 25);
  v56 = *(_QWORD *)(v54 + 40);
  *(_QWORD *)(v53 + 32) = *(_QWORD *)(v54 + 32);
  *(_QWORD *)(v53 + 40) = v56;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v53 + 48) = *(_BYTE *)(v54 + 48);
  v57 = a3[14];
  v58 = a1 + v57;
  v59 = a2 + v57;
  if (*(_QWORD *)(a1 + v57 + 8))
  {
    v60 = *(_QWORD *)(v59 + 8);
    if (v60)
    {
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *(_QWORD *)(v58 + 8) = v60;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v58 + 16) = *(_BYTE *)(v59 + 16);
      *(_BYTE *)(v58 + 17) = *(_BYTE *)(v59 + 17);
      *(_QWORD *)(v58 + 24) = *(_QWORD *)(v59 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D57EE47C(v58);
  }
  v61 = *(_OWORD *)(v59 + 16);
  *(_OWORD *)v58 = *(_OWORD *)v59;
  *(_OWORD *)(v58 + 16) = v61;
LABEL_21:
  v62 = a3[15];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)(a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  v67 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  v68 = (_QWORD *)(a1 + v67);
  v69 = (_QWORD *)(a2 + v67);
  if (*(_QWORD *)(a1 + v67 + 8) != 1)
  {
    v70 = v69[1];
    if (v70 != 1)
    {
      *v68 = *v69;
      v68[1] = v70;
      swift_bridgeObjectRelease();
      v72 = v69[3];
      v68[2] = v69[2];
      v68[3] = v72;
      swift_bridgeObjectRelease();
      v68[4] = v69[4];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D57EE4B0(a1 + v67);
  }
  v71 = *((_OWORD *)v69 + 1);
  *(_OWORD *)v68 = *(_OWORD *)v69;
  *((_OWORD *)v68 + 1) = v71;
  v68[4] = v69[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57EEBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57EEC2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D57EECA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1D57EEDDC + 4 * byte_1D5AB1C13[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1D57EEE10 + 4 * byte_1D5AB1C0E[v4]))();
}

uint64_t sub_1D57EEE10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57EEE18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57EEE20);
  return result;
}

uint64_t sub_1D57EEE2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57EEE34);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1D57EEE38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57EEE40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaEngageEvent.Model.CodingKeys()
{
  return &type metadata for MediaEngageEvent.Model.CodingKeys;
}

unint64_t sub_1D57EEE60()
{
  unint64_t result;

  result = qword_1EFF47F40;
  if (!qword_1EFF47F40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB1F6C, &type metadata for MediaEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47F40);
  }
  return result;
}

unint64_t sub_1D57EEEA8()
{
  unint64_t result;

  result = qword_1EFF47F48;
  if (!qword_1EFF47F48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB1EDC, &type metadata for MediaEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47F48);
  }
  return result;
}

unint64_t sub_1D57EEEF0()
{
  unint64_t result;

  result = qword_1EFF47F50;
  if (!qword_1EFF47F50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB1F04, &type metadata for MediaEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47F50);
  }
  return result;
}

uint64_t sub_1D57EEF34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AED2E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AED300 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED320)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_1D57EF548(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  unint64_t *v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;

  v44 = a2;
  v3 = sub_1D5AAD560();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B76A8(0, &qword_1ED9C6790, v7);
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)v38 - v9;
  v10 = sub_1D5AAD5A8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B76A8(0, (unint64_t *)&unk_1ED9C6F20, v14);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v38 - v19;
  sub_1D5AAD584();
  sub_1D57EF950((uint64_t)v20, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v18, 1, v10) == 1)
  {
    v21 = MEMORY[0x1E0CAE890];
    sub_1D57C0394((uint64_t)v20, (unint64_t *)&unk_1ED9C6F20, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    v22 = (uint64_t)v18;
    v23 = (unint64_t *)&unk_1ED9C6F20;
    v24 = (void (*)(uint64_t))v21;
LABEL_18:
    sub_1D57C0394(v22, v23, v24);
    return 0;
  }
  v42 = v20;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v18, v10);
  v25 = sub_1D5AAD56C();
  v26 = v25;
  if (v25)
  {
    v41 = v13;
    v27 = *(_QWORD *)(v25 + 16);
    if (v27)
    {
      v39 = v11;
      v40 = v10;
      v28 = v25 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v29 = *(_QWORD *)(v4 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      v38[1] = v25;
      swift_bridgeObjectRetain();
      while (1)
      {
        v30(v6, v28, v3);
        if (sub_1D5AAD548() == a1 && v31 == v44)
          break;
        v32 = sub_1D5AAEDE4();
        swift_bridgeObjectRelease();
        if ((v32 & 1) != 0)
          goto LABEL_14;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v28 += v29;
        if (!--v27)
        {
          swift_bridgeObjectRelease();
          v33 = 1;
          v34 = v43;
          v11 = v39;
          v10 = v40;
          v35 = v41;
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
      v35 = v41;
      v34 = v43;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v43, v6, v3);
      v33 = 0;
      v11 = v39;
      v10 = v40;
LABEL_15:
      v36 = (uint64_t)v42;
    }
    else
    {
      v33 = 1;
      v35 = v41;
      v36 = (uint64_t)v42;
      v34 = v43;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v34, v33, 1, v3);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v34, 1, v3) != 1)
    {
      v26 = sub_1D5AAD554();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v35, v10);
      sub_1D57C0394(v36, (unint64_t *)&unk_1ED9C6F20, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v34, v3);
      return v26;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v35, v10);
    sub_1D57C0394(v36, (unint64_t *)&unk_1ED9C6F20, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    v23 = &qword_1ED9C6790;
    v24 = (void (*)(uint64_t))MEMORY[0x1E0CAE690];
    v22 = (uint64_t)v34;
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1D57C0394((uint64_t)v42, (unint64_t *)&unk_1ED9C6F20, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  return v26;
}

uint64_t sub_1D57EF950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57B76A8(0, (unint64_t *)&unk_1ED9C6F20, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static SportsSessionStartEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D0750, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CE5E8, a1);
}

uint64_t static SportsSessionStartEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1ED9D0778, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D0758, a1);
}

uint64_t SportsSessionStartEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SportsSessionStartEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SportsSessionStartEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SportsSessionStartEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSessionStartEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SportsSessionStartEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSessionStartEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsSessionStartEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for SportsSessionStartEvent(0);
  return nullsub_1;
}

uint64_t SportsSessionStartEvent.sportsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSessionStartEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SportsSessionStartEvent.sportsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSessionStartEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsSessionStartEvent.sportsData.modify())()
{
  type metadata accessor for SportsSessionStartEvent(0);
  return nullsub_1;
}

uint64_t SportsSessionStartEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t started;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  started = type metadata accessor for SportsSessionStartEvent(0);
  v5 = a1 + *(int *)(started + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(started + 24);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t SportsSessionStartEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SportsSessionStartEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SportsSessionStartEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SportsSessionStartEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF48030);
}

uint64_t SportsSessionStartEvent.Model.sportsData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for SportsSessionStartEvent.Model(0) + 24));
  return swift_bridgeObjectRetain();
}

uint64_t SportsSessionStartEvent.Model.init(eventData:userBundleSubscriptionContextData:sportsData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v9 = a2[24];
  v10 = a2[25];
  v11 = *((_QWORD *)a2 + 4);
  v12 = *((_QWORD *)a2 + 5);
  v13 = a2[48];
  v17 = *a3;
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  result = type metadata accessor for SportsSessionStartEvent.Model(0);
  v16 = a4 + *(int *)(result + 20);
  *(_BYTE *)v16 = v6;
  *(_QWORD *)(v16 + 8) = v7;
  *(_QWORD *)(v16 + 16) = v8;
  *(_BYTE *)(v16 + 24) = v9;
  *(_BYTE *)(v16 + 25) = v10;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 40) = v12;
  *(_BYTE *)(v16 + 48) = v13;
  *(_QWORD *)(a4 + *(int *)(result + 24)) = v17;
  return result;
}

uint64_t sub_1D57EFF50()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000021;
  if (*v0 != 1)
    v1 = 0x61447374726F7073;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D57EFFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57F1518(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D57EFFDC()
{
  sub_1D57F0208();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57F0004()
{
  sub_1D57F0208();
  return sub_1D5AAEEE0();
}

uint64_t SportsSessionStartEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t started;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;

  v3 = v1;
  sub_1D57F058C(0, &qword_1EFF47FC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57F0208();
  sub_1D5AAEEC8();
  LOBYTE(v17) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    started = type metadata accessor for SportsSessionStartEvent.Model(0);
    v11 = v3 + *(int *)(started + 20);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v17) = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    HIBYTE(v16) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v17 = *(_QWORD *)(v3 + *(int *)(started + 24));
    HIBYTE(v16) = 2;
    sub_1D57CBB60();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D57F0208()
{
  unint64_t result;

  result = qword_1EFF47FC8;
  if (!qword_1EFF47FC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB21BC, &type metadata for SportsSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF47FC8);
  }
  return result;
}

uint64_t SportsSessionStartEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t started;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  char v31;
  __int128 v32;
  char v33;
  char v34;

  v22 = a2;
  v3 = sub_1D5AADF98();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57F058C(0, &qword_1EFF47FD0, MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  started = type metadata accessor for SportsSessionStartEvent.Model(0);
  MEMORY[0x1E0C80A78](started);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57F0208();
  v26 = v8;
  v12 = v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = started;
  v13 = (uint64_t)a1;
  v14 = v24;
  LOBYTE(v28) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v25, v3);
  v34 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v15 = v30;
  v16 = v31;
  v17 = v33;
  v18 = v27;
  v19 = &v11[*(int *)(v27 + 20)];
  *v19 = v28;
  *(_OWORD *)(v19 + 8) = v29;
  v19[24] = v15;
  v19[25] = v16;
  *((_OWORD *)v19 + 2) = v32;
  v19[48] = v17;
  v34 = 2;
  sub_1D57CBB1C();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v23);
  *(_QWORD *)&v11[*(int *)(v18 + 24)] = v28;
  sub_1D57F05E8((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1D57F062C((uint64_t)v11);
}

void sub_1D57F058C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57F0208();
    v7 = a3(a1, &type metadata for SportsSessionStartEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57F05E8(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for SportsSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_1D57F062C(uint64_t a1)
{
  uint64_t started;

  started = type metadata accessor for SportsSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_1D57F0668@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsSessionStartEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D57F067C(_QWORD *a1)
{
  return SportsSessionStartEvent.Model.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsSessionStartEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SportsSessionStartEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for SportsSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SportsSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SportsSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SportsSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsSessionStartEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57F0C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SportsSessionStartEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57F0D24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsSessionStartEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    v13 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v13;
    v10[48] = v11[48];
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SportsSessionStartEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SportsSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for SportsSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsSessionStartEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57F11F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsSessionStartEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57F127C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1D57F12F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsSessionStartEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D57F13C0 + 4 * byte_1D5AB1FF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D57F13F4 + 4 * byte_1D5AB1FF0[v4]))();
}

uint64_t sub_1D57F13F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F13FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57F1404);
  return result;
}

uint64_t sub_1D57F1410(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57F1418);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D57F141C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F1424(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsSessionStartEvent.Model.CodingKeys()
{
  return &type metadata for SportsSessionStartEvent.Model.CodingKeys;
}

unint64_t sub_1D57F1444()
{
  unint64_t result;

  result = qword_1EFF48070;
  if (!qword_1EFF48070)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2194, &type metadata for SportsSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48070);
  }
  return result;
}

unint64_t sub_1D57F148C()
{
  unint64_t result;

  result = qword_1EFF48078;
  if (!qword_1EFF48078)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2104, &type metadata for SportsSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48078);
  }
  return result;
}

unint64_t sub_1D57F14D4()
{
  unint64_t result;

  result = qword_1EFF48080;
  if (!qword_1EFF48080)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB212C, &type metadata for SportsSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48080);
  }
  return result;
}

uint64_t sub_1D57F1518(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61447374726F7073 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D57F167C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF48088, MEMORY[0x1E0CF8078]);
}

uint64_t static WebEmbedViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F10, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF48088, a1);
}

uint64_t sub_1D57F16BC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF480A0, MEMORY[0x1E0CF8380]);
}

uint64_t static WebEmbedViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F18, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF480A0, a1);
}

uint64_t WebEmbedViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t WebEmbedViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*WebEmbedViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WebEmbedViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for WebEmbedViewEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for WebEmbedViewEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9618);
}

uint64_t WebEmbedViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedViewEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedViewEvent.timedData.modify())()
{
  type metadata accessor for WebEmbedViewEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedViewEvent.webEmbedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D57F1850()
{
  unint64_t result;

  result = qword_1ED9C7888;
  if (!qword_1ED9C7888)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WebEmbedData, &type metadata for WebEmbedData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7888);
  }
  return result;
}

unint64_t sub_1D57F1894()
{
  unint64_t result;

  result = qword_1ED9C7880;
  if (!qword_1ED9C7880)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WebEmbedData, &type metadata for WebEmbedData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7880);
  }
  return result;
}

uint64_t WebEmbedViewEvent.webEmbedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedViewEvent.webEmbedData.modify())()
{
  type metadata accessor for WebEmbedViewEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedViewEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedViewEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedViewEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for WebEmbedViewEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for WebEmbedViewEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t WebEmbedViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t WebEmbedViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for WebEmbedViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for WebEmbedViewEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9580);
}

uint64_t WebEmbedViewEvent.Model.webEmbedData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WebEmbedViewEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for WebEmbedViewEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedViewEvent.Model.init(eventData:timedData:webEmbedData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v8 = *a3;
  v9 = a3[1];
  v10 = *a4;
  v11 = *((_QWORD *)a4 + 1);
  v12 = *((_QWORD *)a4 + 2);
  v13 = a4[24];
  v24 = a4[25];
  v22 = *((_QWORD *)a4 + 5);
  v23 = *((_QWORD *)a4 + 4);
  v21 = a4[48];
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a5, a1, v14);
  v15 = (int *)type metadata accessor for WebEmbedViewEvent.Model(0);
  v16 = a5 + v15[5];
  v17 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a2, v17);
  v19 = (_QWORD *)(a5 + v15[6]);
  *v19 = v8;
  v19[1] = v9;
  v20 = a5 + v15[7];
  *(_BYTE *)v20 = v10;
  *(_QWORD *)(v20 + 8) = v11;
  *(_QWORD *)(v20 + 16) = v12;
  *(_BYTE *)(v20 + 24) = v13;
  *(_BYTE *)(v20 + 25) = v24;
  *(_QWORD *)(v20 + 32) = v23;
  *(_QWORD *)(v20 + 40) = v22;
  *(_BYTE *)(v20 + 48) = v21;
  return result;
}

uint64_t sub_1D57F1D44()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57F1D78 + 4 * byte_1D5AB2210[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D57F1D78()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D57F1D8C()
{
  return 0x6465626D45626577;
}

unint64_t sub_1D57F1DAC()
{
  return 0xD000000000000021;
}

uint64_t sub_1D57F1DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57F39B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D57F1DEC()
{
  sub_1D57F2084();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57F1E14()
{
  sub_1D57F2084();
  return sub_1D5AAEEE0();
}

uint64_t WebEmbedViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  char v23;
  __int128 v24;
  char v25;
  char v26;

  v3 = v1;
  sub_1D57F24D8(0, &qword_1EFF480B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57F2084();
  sub_1D5AAEEC8();
  LOBYTE(v20) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for WebEmbedViewEvent.Model(0);
    LOBYTE(v20) = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (uint64_t *)(v3 + *(int *)(v10 + 24));
    v13 = *v11;
    v12 = v11[1];
    v20 = v13;
    *(_QWORD *)&v21 = v12;
    v26 = 2;
    sub_1D57F1894();
    sub_1D5AAED6C();
    v14 = v3 + *(int *)(v10 + 28);
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_BYTE *)(v14 + 25);
    v17 = *(_BYTE *)(v14 + 48);
    LOBYTE(v20) = *(_BYTE *)v14;
    v21 = *(_OWORD *)(v14 + 8);
    v22 = v15;
    v23 = v16;
    v24 = *(_OWORD *)(v14 + 32);
    v25 = v17;
    v26 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D57F2084()
{
  unint64_t result;

  result = qword_1EFF480C0;
  if (!qword_1EFF480C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB23FC, &type metadata for WebEmbedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF480C0);
  }
  return result;
}

uint64_t WebEmbedViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  char v44;
  __int128 v45;
  char v46;
  char v47;

  v32 = a2;
  v3 = sub_1D5AADFB0();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v37 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57F24D8(0, &qword_1EFF480C8, MEMORY[0x1E0DED048]);
  v39 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v29 - v9;
  v11 = type metadata accessor for WebEmbedViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57F2084();
  v38 = v10;
  v14 = (uint64_t)v40;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = v11;
  v31 = v8;
  v40 = a1;
  v15 = (uint64_t)v13;
  v16 = v33;
  v17 = v34;
  v18 = v35;
  LOBYTE(v41) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v36;
  v20 = v37;
  sub_1D5AAECD0();
  v29[1] = v5;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15, v20, v19);
  LOBYTE(v41) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  v21 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + *(int *)(v30 + 20), v16, v18);
  v47 = 2;
  sub_1D57F1850();
  sub_1D5AAECD0();
  v22 = v42;
  v23 = (_QWORD *)(v15 + *(int *)(v21 + 24));
  *v23 = v41;
  v23[1] = v22;
  v47 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v38, v39);
  v24 = v43;
  v25 = v44;
  v26 = v46;
  v27 = v15 + *(int *)(v21 + 28);
  *(_BYTE *)v27 = v41;
  *(_OWORD *)(v27 + 8) = v42;
  *(_BYTE *)(v27 + 24) = v24;
  *(_BYTE *)(v27 + 25) = v25;
  *(_OWORD *)(v27 + 32) = v45;
  *(_BYTE *)(v27 + 48) = v26;
  sub_1D57F2534(v15, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return sub_1D57F2578(v15);
}

void sub_1D57F24D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57F2084();
    v7 = a3(a1, &type metadata for WebEmbedViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57F2534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebEmbedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D57F2578(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebEmbedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57F25B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WebEmbedViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D57F25C8(_QWORD *a1)
{
  return WebEmbedViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D57F25DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F10, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF48088, a1);
}

uint64_t sub_1D57F2600@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F18, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF480A0, a1);
}

uint64_t sub_1D57F2624@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for WebEmbedViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for WebEmbedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for WebEmbedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for WebEmbedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for WebEmbedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57F2DDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WebEmbedViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57F2EE4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D57F2FE8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedViewEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    *v17 = *v18;
    v19 = *((_QWORD *)v18 + 2);
    *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
    *((_QWORD *)v17 + 2) = v19;
    *((_WORD *)v17 + 12) = *((_WORD *)v18 + 12);
    v20 = *((_QWORD *)v18 + 5);
    *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 5) = v20;
    v17[48] = v18[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = v18;
  *(_WORD *)(v16 + 24) = *(_WORD *)(v17 + 24);
  v19 = *(_QWORD *)(v17 + 40);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 40) = v19;
  *(_BYTE *)(v16 + 48) = *(_BYTE *)(v17 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 24) = *(_BYTE *)(v16 + 24);
  *(_BYTE *)(v15 + 25) = *(_BYTE *)(v16 + 25);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 48) = *(_BYTE *)(v16 + 48);
  return a1;
}

uint64_t initializeWithTake for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = (__int128 *)(a2 + v11);
  *(_BYTE *)(v12 + 48) = *((_BYTE *)v13 + 48);
  v14 = v13[2];
  v15 = *v13;
  *(_OWORD *)(v12 + 16) = v13[1];
  *(_OWORD *)(v12 + 32) = v14;
  *(_OWORD *)v12 = v15;
  return a1;
}

uint64_t assignWithTake for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_BYTE *)(v17 + 25) = *(_BYTE *)(v18 + 25);
  v20 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57F3618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for WebEmbedViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57F36D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D57F3778()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WebEmbedViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D57F385C + 4 * byte_1D5AB2219[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D57F3890 + 4 * byte_1D5AB2214[v4]))();
}

uint64_t sub_1D57F3890(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F3898(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57F38A0);
  return result;
}

uint64_t sub_1D57F38AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57F38B4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D57F38B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F38C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedViewEvent.Model.CodingKeys()
{
  return &type metadata for WebEmbedViewEvent.Model.CodingKeys;
}

unint64_t sub_1D57F38E0()
{
  unint64_t result;

  result = qword_1EFF480D0;
  if (!qword_1EFF480D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB23D4, &type metadata for WebEmbedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF480D0);
  }
  return result;
}

unint64_t sub_1D57F3928()
{
  unint64_t result;

  result = qword_1EFF480D8;
  if (!qword_1EFF480D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2344, &type metadata for WebEmbedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF480D8);
  }
  return result;
}

unint64_t sub_1D57F3970()
{
  unint64_t result;

  result = qword_1EFF480E0;
  if (!qword_1EFF480E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB236C, &type metadata for WebEmbedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF480E0);
  }
  return result;
}

uint64_t sub_1D57F39B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465626D45626577 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t MutedTagListData.tagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MutedTagListData.tagIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*MutedTagListData.tagIDs.modify())()
{
  return nullsub_1;
}

NewsAnalytics::MutedTagListData __swiftcall MutedTagListData.init(tagIDs:)(NewsAnalytics::MutedTagListData tagIDs)
{
  NewsAnalytics::MutedTagListData *v1;

  v1->tagIDs._rawValue = tagIDs.tagIDs._rawValue;
  return tagIDs;
}

uint64_t sub_1D57F3BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x734449676174 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D57F3C6C()
{
  sub_1D57AD57C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57F3C94()
{
  sub_1D57AD57C();
  return sub_1D5AAEEE0();
}

ValueMetadata *type metadata accessor for MutedTagListData()
{
  return &type metadata for MutedTagListData;
}

ValueMetadata *type metadata accessor for MutedTagListData.CodingKeys()
{
  return &type metadata for MutedTagListData.CodingKeys;
}

unint64_t sub_1D57F3CE8()
{
  unint64_t result;

  result = qword_1EFF480E8;
  if (!qword_1EFF480E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB259C, &type metadata for MutedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF480E8);
  }
  return result;
}

NewsAnalytics::ActionMethod_optional __swiftcall ActionMethod.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ActionMethod_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ActionMethod.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57F3DB4 + 4 * byte_1D5AB2614[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D57F3DB4()
{
  return 0x776F7272616873;
}

uint64_t sub_1D57F3DC8()
{
  return 0x4D747865746E6F63;
}

uint64_t sub_1D57F3DE8()
{
  return 0x7463416570697773;
}

uint64_t sub_1D57F3E08()
{
  return 0x7261626C6F6F74;
}

uint64_t sub_1D57F3E28()
{
  return 2003134838;
}

uint64_t sub_1D57F3E38()
{
  return 0x616D6D6F4379656BLL;
}

uint64_t sub_1D57F3E54()
{
  return 0x6E65746E49707061;
}

void sub_1D57F3E70(char *a1)
{
  sub_1D5A3D3F4(*a1);
}

unint64_t sub_1D57F3E80()
{
  unint64_t result;

  result = qword_1EFF480F0;
  if (!qword_1EFF480F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ActionMethod, &type metadata for ActionMethod);
    atomic_store(result, (unint64_t *)&qword_1EFF480F0);
  }
  return result;
}

uint64_t sub_1D57F3EC4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA8C20((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

void sub_1D57F3F08(uint64_t a1)
{
  char *v1;

  sub_1D5AA8C20(a1, *v1);
}

uint64_t sub_1D57F3F10()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA8C20((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

NewsAnalytics::ActionMethod_optional sub_1D57F3F50(Swift::String *a1)
{
  return ActionMethod.init(rawValue:)(*a1);
}

uint64_t sub_1D57F3F5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ActionMethod.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D57F3F80()
{
  sub_1D57F40F4();
  return sub_1D5AAE928();
}

uint64_t sub_1D57F3FDC()
{
  sub_1D57F40F4();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for ActionMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D57F4074 + 4 * byte_1D5AB2622[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D57F40A8 + 4 * byte_1D5AB261D[v4]))();
}

uint64_t sub_1D57F40A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F40B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57F40B8);
  return result;
}

uint64_t sub_1D57F40C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57F40CCLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D57F40D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F40D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionMethod()
{
  return &type metadata for ActionMethod;
}

unint64_t sub_1D57F40F4()
{
  unint64_t result;

  result = qword_1EFF480F8;
  if (!qword_1EFF480F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ActionMethod, &type metadata for ActionMethod);
    atomic_store(result, (unint64_t *)&qword_1EFF480F8);
  }
  return result;
}

void SubscriptionResultData.resultType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SubscriptionResultData.resultType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SubscriptionResultData.resultType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::SubscriptionResultData __swiftcall SubscriptionResultData.init(resultType:)(NewsAnalytics::SubscriptionResultData resultType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)resultType.resultType;
  return resultType;
}

uint64_t sub_1D57F416C()
{
  return 0x7954746C75736572;
}

uint64_t sub_1D57F4188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7954746C75736572 && a2 == 0xEA00000000006570)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D57F4228()
{
  sub_1D57F437C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57F4250()
{
  sub_1D57F437C();
  return sub_1D5AAEEE0();
}

uint64_t SubscriptionResultData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D57F453C(0, &qword_1EFF48100, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57F437C();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D57F43C0();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D57F437C()
{
  unint64_t result;

  result = qword_1EFF48108;
  if (!qword_1EFF48108)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB28DC, &type metadata for SubscriptionResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48108);
  }
  return result;
}

unint64_t sub_1D57F43C0()
{
  unint64_t result;

  result = qword_1EFF48110;
  if (!qword_1EFF48110)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionResultType, &type metadata for SubscriptionResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF48110);
  }
  return result;
}

uint64_t SubscriptionResultData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D57F453C(0, &qword_1EFF48118, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57F437C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57F4598();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D57F453C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57F437C();
    v7 = a3(a1, &type metadata for SubscriptionResultData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57F4598()
{
  unint64_t result;

  result = qword_1EFF48120;
  if (!qword_1EFF48120)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionResultType, &type metadata for SubscriptionResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF48120);
  }
  return result;
}

unint64_t sub_1D57F45E0()
{
  unint64_t result;

  result = qword_1ED9CAEF0;
  if (!qword_1ED9CAEF0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionResultData, &type metadata for SubscriptionResultData);
    atomic_store(result, (unint64_t *)&qword_1ED9CAEF0);
  }
  return result;
}

unint64_t sub_1D57F4628()
{
  unint64_t result;

  result = qword_1ED9CAEE8;
  if (!qword_1ED9CAEE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionResultData, &type metadata for SubscriptionResultData);
    atomic_store(result, (unint64_t *)&qword_1ED9CAEE8);
  }
  return result;
}

uint64_t sub_1D57F466C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SubscriptionResultData.init(from:)(a1, a2);
}

uint64_t sub_1D57F4680(_QWORD *a1)
{
  return SubscriptionResultData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D57F46E0 + 4 * byte_1D5AB2755[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D57F4714 + 4 * byte_1D5AB2750[v4]))();
}

uint64_t sub_1D57F4714(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F471C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57F4724);
  return result;
}

uint64_t sub_1D57F4730(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57F4738);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D57F473C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F4744(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultData()
{
  return &type metadata for SubscriptionResultData;
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57F47A0 + 4 * byte_1D5AB275A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57F47C0 + 4 * byte_1D5AB275F[v4]))();
}

_BYTE *sub_1D57F47A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57F47C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57F47C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57F47D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57F47D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57F47E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultData.CodingKeys()
{
  return &type metadata for SubscriptionResultData.CodingKeys;
}

unint64_t sub_1D57F4800()
{
  unint64_t result;

  result = qword_1EFF48128;
  if (!qword_1EFF48128)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB28B4, &type metadata for SubscriptionResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48128);
  }
  return result;
}

unint64_t sub_1D57F4848()
{
  unint64_t result;

  result = qword_1EFF48130;
  if (!qword_1EFF48130)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2824, &type metadata for SubscriptionResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48130);
  }
  return result;
}

unint64_t sub_1D57F4890()
{
  unint64_t result;

  result = qword_1EFF48138;
  if (!qword_1EFF48138)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB284C, &type metadata for SubscriptionResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48138);
  }
  return result;
}

NewsAnalytics::JourneyTriggerInactiveErrorReason_optional __swiftcall JourneyTriggerInactiveErrorReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::JourneyTriggerInactiveErrorReason_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t JourneyTriggerInactiveErrorReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D57F4964 + 4 * byte_1D5AB2930[*v0]))(0xD000000000000016, 0x80000001D5AEA8B0);
}

uint64_t sub_1D57F4964()
{
  return 0x64657269707865;
}

uint64_t sub_1D57F497C@<X0>(uint64_t a1@<X8>)
{
  return a1 + 7;
}

unint64_t sub_1D57F4994()
{
  return 0xD000000000000010;
}

void sub_1D57F49B0(char *a1)
{
  sub_1D5A3609C(*a1);
}

unint64_t sub_1D57F49C0()
{
  unint64_t result;

  result = qword_1EFF48140;
  if (!qword_1EFF48140)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyTriggerInactiveErrorReason, &type metadata for JourneyTriggerInactiveErrorReason);
    atomic_store(result, (unint64_t *)&qword_1EFF48140);
  }
  return result;
}

void sub_1D57F4A04()
{
  char *v0;

  sub_1D5A8067C(*v0);
}

void sub_1D57F4A0C(uint64_t a1)
{
  char *v1;

  sub_1D5AA7F9C(a1, *v1);
}

void sub_1D57F4A14(uint64_t a1)
{
  char *v1;

  sub_1D5AAA15C(a1, *v1);
}

NewsAnalytics::JourneyTriggerInactiveErrorReason_optional sub_1D57F4A1C(Swift::String *a1)
{
  return JourneyTriggerInactiveErrorReason.init(rawValue:)(*a1);
}

uint64_t sub_1D57F4A28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = JourneyTriggerInactiveErrorReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D57F4A4C()
{
  sub_1D57F4BC0();
  return sub_1D5AAE928();
}

uint64_t sub_1D57F4AA8()
{
  sub_1D57F4BC0();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for JourneyTriggerInactiveErrorReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D57F4B40 + 4 * byte_1D5AB2939[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D57F4B74 + 4 * byte_1D5AB2934[v4]))();
}

uint64_t sub_1D57F4B74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F4B7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57F4B84);
  return result;
}

uint64_t sub_1D57F4B90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57F4B98);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D57F4B9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F4BA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JourneyTriggerInactiveErrorReason()
{
  return &type metadata for JourneyTriggerInactiveErrorReason;
}

unint64_t sub_1D57F4BC0()
{
  unint64_t result;

  result = qword_1EFF48148;
  if (!qword_1EFF48148)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyTriggerInactiveErrorReason, &type metadata for JourneyTriggerInactiveErrorReason);
    atomic_store(result, (unint64_t *)&qword_1EFF48148);
  }
  return result;
}

uint64_t AudioEngagementData.timePlayed.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AudioEngagementData.timePlayed.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*AudioEngagementData.timePlayed.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.deltaTimePlayed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t AudioEngagementData.deltaTimePlayed.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*AudioEngagementData.deltaTimePlayed.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.userAction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *AudioEngagementData.userAction.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*AudioEngagementData.userAction.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.position.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 20);
}

uint64_t AudioEngagementData.position.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = result;
  return result;
}

uint64_t (*AudioEngagementData.position.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.engagementID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AudioEngagementData.engagementID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*AudioEngagementData.engagementID.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.playMethod.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

_BYTE *AudioEngagementData.playMethod.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = *result;
  return result;
}

uint64_t (*AudioEngagementData.playMethod.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.listeningSource.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 41);
}

_BYTE *AudioEngagementData.listeningSource.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = *result;
  return result;
}

uint64_t (*AudioEngagementData.listeningSource.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.init(timePlayed:deltaTimePlayed:userAction:position:engagementID:playMethod:listeningSource:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v9;
  char v10;
  char v11;

  v9 = *a3;
  v10 = *a7;
  v11 = *a8;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v9;
  *(_DWORD *)(a9 + 20) = a4;
  *(_QWORD *)(a9 + 24) = a5;
  *(_QWORD *)(a9 + 32) = a6;
  *(_BYTE *)(a9 + 40) = v10;
  *(_BYTE *)(a9 + 41) = v11;
  return result;
}

uint64_t sub_1D57F4D74()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57F4DA8 + 4 * byte_1D5AB2A80[*v0]))(0x79616C50656D6974, 0xEA00000000006465);
}

uint64_t sub_1D57F4DA8()
{
  return 0x6D695461746C6564;
}

uint64_t sub_1D57F4DCC()
{
  return 0x6974634172657375;
}

uint64_t sub_1D57F4DE4()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_1D57F4DFC()
{
  return 0x656D656761676E65;
}

uint64_t sub_1D57F4E1C()
{
  return 0x6874654D79616C70;
}

uint64_t sub_1D57F4E34()
{
  return 0x6E696E657473696CLL;
}

uint64_t sub_1D57F4E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57F5A7C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D57F4E7C(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1D57F4E88()
{
  sub_1D57F5140();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57F4EB0()
{
  sub_1D57F5140();
  return sub_1D5AAEEE0();
}

uint64_t AudioEngagementData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  sub_1D57F5524(0, &qword_1EFF48150, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  v20 = *(_QWORD *)(v1 + 8);
  v9 = *(unsigned __int8 *)(v1 + 16);
  v18 = *(_DWORD *)(v1 + 20);
  v19 = v9;
  v10 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 32);
  v17 = v10;
  LODWORD(v10) = *(unsigned __int8 *)(v1 + 40);
  v14 = *(unsigned __int8 *)(v1 + 41);
  v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57F5140();
  v11 = v5;
  sub_1D5AAEEC8();
  v30 = 0;
  sub_1D5AAED84();
  if (!v2)
  {
    v12 = v19;
    v29 = 1;
    sub_1D5AAED84();
    v28 = v12;
    v27 = 2;
    sub_1D57F5184();
    sub_1D5AAED6C();
    v26 = 3;
    sub_1D5AAED78();
    v25 = 4;
    sub_1D5AAED3C();
    v24 = v15;
    v23 = 5;
    sub_1D57F51C8();
    sub_1D5AAED18();
    v22 = v14;
    v21 = 6;
    sub_1D57F520C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v11);
}

unint64_t sub_1D57F5140()
{
  unint64_t result;

  result = qword_1EFF48158;
  if (!qword_1EFF48158)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2C18, &type metadata for AudioEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48158);
  }
  return result;
}

unint64_t sub_1D57F5184()
{
  unint64_t result;

  result = qword_1EFF48160;
  if (!qword_1EFF48160)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaUserAction, &type metadata for MediaUserAction);
    atomic_store(result, (unint64_t *)&qword_1EFF48160);
  }
  return result;
}

unint64_t sub_1D57F51C8()
{
  unint64_t result;

  result = qword_1EFF48168;
  if (!qword_1EFF48168)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaPlayMethod, &type metadata for MediaPlayMethod);
    atomic_store(result, (unint64_t *)&qword_1EFF48168);
  }
  return result;
}

unint64_t sub_1D57F520C()
{
  unint64_t result;

  result = qword_1EFF48170;
  if (!qword_1EFF48170)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ListeningSource, &type metadata for ListeningSource);
    atomic_store(result, (unint64_t *)&qword_1EFF48170);
  }
  return result;
}

uint64_t AudioEngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  char v24;
  char v25;
  char v26;
  unsigned __int8 v27;
  char v28;
  char v29;
  char v30;
  unsigned __int8 v31;
  char v32;
  char v33;

  sub_1D57F5524(0, &qword_1EFF48178, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57F5140();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = 0;
  v10 = sub_1D5AAECE8();
  v32 = 1;
  v11 = sub_1D5AAECE8();
  v30 = 2;
  sub_1D57F5580();
  sub_1D5AAECD0();
  v23 = v31;
  v29 = 3;
  v22 = sub_1D5AAECDC();
  v28 = 4;
  v12 = sub_1D5AAECA0();
  v14 = v13;
  v20 = v12;
  v26 = 5;
  sub_1D57F55C4();
  swift_bridgeObjectRetain();
  v21 = v14;
  sub_1D5AAEC7C();
  v19 = v27;
  v24 = 6;
  sub_1D57F5608();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v16 = v25;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v23;
  *(_DWORD *)(a2 + 20) = v22;
  v17 = v21;
  *(_QWORD *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v17;
  *(_BYTE *)(a2 + 40) = v19;
  *(_BYTE *)(a2 + 41) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D57F5524(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57F5140();
    v7 = a3(a1, &type metadata for AudioEngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57F5580()
{
  unint64_t result;

  result = qword_1EFF48180;
  if (!qword_1EFF48180)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaUserAction, &type metadata for MediaUserAction);
    atomic_store(result, (unint64_t *)&qword_1EFF48180);
  }
  return result;
}

unint64_t sub_1D57F55C4()
{
  unint64_t result;

  result = qword_1EFF48188;
  if (!qword_1EFF48188)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaPlayMethod, &type metadata for MediaPlayMethod);
    atomic_store(result, (unint64_t *)&qword_1EFF48188);
  }
  return result;
}

unint64_t sub_1D57F5608()
{
  unint64_t result;

  result = qword_1EFF48190;
  if (!qword_1EFF48190)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ListeningSource, &type metadata for ListeningSource);
    atomic_store(result, (unint64_t *)&qword_1EFF48190);
  }
  return result;
}

uint64_t sub_1D57F5654@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngagementData.init(from:)(a1, a2);
}

uint64_t sub_1D57F5668(_QWORD *a1)
{
  return AudioEngagementData.encode(to:)(a1);
}

uint64_t destroy for AudioEngagementData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 42))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 42) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AlternateHeadlineTreatmentStateData(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D57F5924 + 4 * byte_1D5AB2A8C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D57F5958 + 4 * byte_1D5AB2A87[v4]))();
}

uint64_t sub_1D57F5958(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F5960(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57F5968);
  return result;
}

uint64_t sub_1D57F5974(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57F597CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D57F5980(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57F5988(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementData.CodingKeys()
{
  return &type metadata for AudioEngagementData.CodingKeys;
}

unint64_t sub_1D57F59A8()
{
  unint64_t result;

  result = qword_1EFF48198;
  if (!qword_1EFF48198)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2BF0, &type metadata for AudioEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48198);
  }
  return result;
}

unint64_t sub_1D57F59F0()
{
  unint64_t result;

  result = qword_1EFF481A0;
  if (!qword_1EFF481A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2B60, &type metadata for AudioEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF481A0);
  }
  return result;
}

unint64_t sub_1D57F5A38()
{
  unint64_t result;

  result = qword_1EFF481A8;
  if (!qword_1EFF481A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2B88, &type metadata for AudioEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF481A8);
  }
  return result;
}

uint64_t sub_1D57F5A7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D695461746C6564 && a2 == 0xEF646579616C5065 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974634172657375 && a2 == 0xEA00000000006E6FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D656761676E65 && a2 == 0xEC0000004449746ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6874654D79616C70 && a2 == 0xEA0000000000646FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E696E657473696CLL && a2 == 0xEF656372756F5367)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1D57F5DCC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF481B0, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleLikeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF481B0, a1);
}

uint64_t sub_1D57F5E0C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF481C8, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleLikeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F28, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF481C8, a1);
}

uint64_t ArticleLikeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleLikeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleLikeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLikeEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.articleData.modify())()
{
  type metadata accessor for ArticleLikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleLikeEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLikeEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.actionData.modify())()
{
  type metadata accessor for ArticleLikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleLikeEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLikeEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.channelData.modify())()
{
  type metadata accessor for ArticleLikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleLikeEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLikeEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.feedData.modify())()
{
  type metadata accessor for ArticleLikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleLikeEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLikeEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.groupData.modify())()
{
  type metadata accessor for ArticleLikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleLikeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLikeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for ArticleLikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleLikeEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLikeEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.issueData.modify())()
{
  type metadata accessor for ArticleLikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleLikeEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLikeEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.userChannelContextData.modify())()
{
  type metadata accessor for ArticleLikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleLikeEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLikeEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.viewData.modify())()
{
  type metadata accessor for ArticleLikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleLikeEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLikeEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.articleExposureContextData.modify())()
{
  type metadata accessor for ArticleLikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleLikeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleLikeEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v12, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v12, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v12, v25);
}

uint64_t ArticleLikeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleLikeEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ArticleLikeEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleLikeEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ArticleLikeEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleLikeEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *ArticleLikeEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for ArticleLikeEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 36), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t ArticleLikeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 40));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleLikeEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleLikeEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ArticleLikeEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ArticleLikeEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 52));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleLikeEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57E90BC(v4, v5);
}

__n128 ArticleLikeEvent.Model.init(eventData:articleData:actionData:channelData:feedData:groupData:userBundleSubscriptionContextData:issueData:userChannelContextData:viewData:articleExposureContextData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t *a11, __int128 *a12)
{
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 result;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  __int128 v49;
  __int16 v50;
  char v51;
  char v52;
  uint64_t v53;
  __n128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _BYTE v63[23];
  _BYTE v64[144];

  v62 = a2[6];
  *(_OWORD *)v63 = a2[7];
  *(_QWORD *)&v63[15] = *(_QWORD *)((char *)a2 + 127);
  v58 = a2[2];
  v59 = a2[3];
  v60 = a2[4];
  v61 = a2[5];
  v56 = *a2;
  v57 = a2[1];
  v16 = *a3;
  v37 = a4[1];
  v38 = *a4;
  v36 = *((_BYTE *)a4 + 16);
  v17 = *((_BYTE *)a4 + 17);
  v18 = a4[3];
  v35 = a4[4];
  v40 = *a5;
  v39 = *((_QWORD *)a5 + 2);
  sub_1D57DD5B8(a6, (uint64_t)v64);
  v47 = *a7;
  v45 = *((_QWORD *)a7 + 2);
  v46 = *((_QWORD *)a7 + 1);
  v43 = a7[25];
  v44 = a7[24];
  v41 = *((_QWORD *)a7 + 5);
  v42 = *((_QWORD *)a7 + 4);
  LOBYTE(a7) = a7[48];
  v49 = *a8;
  v19 = *((_QWORD *)a8 + 2);
  v20 = *((_QWORD *)a8 + 3);
  v48 = v19;
  v51 = a10[1];
  v52 = *a10;
  v50 = *((_WORD *)a10 + 1);
  v21 = *a11;
  v53 = a11[1];
  v22 = *((_WORD *)a11 + 8);
  v54 = (__n128)a12[1];
  v55 = *a12;
  v23 = *((_QWORD *)a12 + 4);
  v24 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a9, a1, v24);
  v25 = (int *)type metadata accessor for ArticleLikeEvent.Model(0);
  v26 = a9 + v25[5];
  *(_OWORD *)(v26 + 96) = v62;
  *(_OWORD *)(v26 + 112) = *(_OWORD *)v63;
  *(_QWORD *)(v26 + 127) = *(_QWORD *)&v63[15];
  *(_OWORD *)(v26 + 32) = v58;
  *(_OWORD *)(v26 + 48) = v59;
  *(_OWORD *)(v26 + 64) = v60;
  *(_OWORD *)(v26 + 80) = v61;
  *(_OWORD *)v26 = v56;
  *(_OWORD *)(v26 + 16) = v57;
  *(_BYTE *)(a9 + v25[6]) = v16;
  v27 = a9 + v25[7];
  *(_QWORD *)v27 = v38;
  *(_QWORD *)(v27 + 8) = v37;
  *(_BYTE *)(v27 + 16) = v36;
  *(_BYTE *)(v27 + 17) = v17;
  *(_QWORD *)(v27 + 24) = v18;
  *(_QWORD *)(v27 + 32) = v35;
  v28 = a9 + v25[8];
  *(_OWORD *)v28 = v40;
  *(_QWORD *)(v28 + 16) = v39;
  sub_1D57DD5B8((uint64_t)v64, a9 + v25[9]);
  v29 = a9 + v25[10];
  *(_BYTE *)v29 = v47;
  *(_QWORD *)(v29 + 8) = v46;
  *(_QWORD *)(v29 + 16) = v45;
  *(_BYTE *)(v29 + 24) = v44;
  *(_BYTE *)(v29 + 25) = v43;
  *(_QWORD *)(v29 + 32) = v42;
  *(_QWORD *)(v29 + 40) = v41;
  *(_BYTE *)(v29 + 48) = (_BYTE)a7;
  v30 = a9 + v25[11];
  *(_OWORD *)v30 = v49;
  *(_QWORD *)(v30 + 16) = v48;
  *(_QWORD *)(v30 + 24) = v20;
  v31 = a9 + v25[12];
  *(_BYTE *)v31 = v52;
  *(_BYTE *)(v31 + 1) = v51;
  *(_WORD *)(v31 + 2) = v50;
  v32 = a9 + v25[13];
  *(_QWORD *)v32 = v21;
  *(_QWORD *)(v32 + 8) = v53;
  *(_WORD *)(v32 + 16) = v22;
  v33 = a9 + v25[14];
  result = v54;
  *(_OWORD *)v33 = v55;
  *(__n128 *)(v33 + 16) = v54;
  *(_QWORD *)(v33 + 32) = v23;
  return result;
}

uint64_t sub_1D57F7130(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57F7168 + 4 * byte_1D5AB2C70[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D57F7168()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D57F71B8()
{
  return 0x6174614464656566;
}

void sub_1D57F7220()
{
  JUMPOUT(0x1D57F7234);
}

unint64_t sub_1D57F7240()
{
  return 0xD000000000000016;
}

uint64_t sub_1D57F725C()
{
  unsigned __int8 *v0;

  return sub_1D57F7130(*v0);
}

uint64_t sub_1D57F7264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D57FB6D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D57F7288()
{
  sub_1D57F7770();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57F72B0()
{
  sub_1D57F7770();
  return sub_1D5AAEEE0();
}

uint64_t ArticleLikeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  _OWORD *v29;
  __int128 v30;
  char *v31;
  char v32;
  char v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v40;
  char v41;
  _OWORD v42[2];
  __int128 v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[23];
  char v53;
  __int128 v54;
  uint64_t v55;
  char v56;

  v3 = v1;
  sub_1D57F801C(0, &qword_1EFF481E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57F7770();
  sub_1D5AAEEC8();
  v56 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleLikeEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = v11[7];
    v51 = v11[6];
    *(_OWORD *)v52 = v12;
    *(_QWORD *)&v52[15] = *(_QWORD *)((char *)v11 + 127);
    v13 = v11[3];
    v47 = v11[2];
    v48 = v13;
    v14 = v11[5];
    v49 = v11[4];
    v50 = v14;
    v15 = v11[1];
    v45 = *v11;
    v46 = v15;
    LOBYTE(v42[0]) = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    LOBYTE(v45) = *(_BYTE *)(v3 + v10[6]);
    LOBYTE(v42[0]) = 2;
    sub_1D57CC038();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    *(_QWORD *)&v45 = v17;
    *((_QWORD *)&v45 + 1) = v18;
    LOBYTE(v46) = v19;
    BYTE1(v46) = v20;
    *((_QWORD *)&v46 + 1) = v22;
    *(_QWORD *)&v47 = v21;
    LOBYTE(v42[0]) = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v23 = (__int128 *)(v3 + v10[8]);
    v24 = *((_QWORD *)v23 + 2);
    v54 = *v23;
    v55 = v24;
    v53 = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[9], (uint64_t)&v45);
    sub_1D57DD5B8((uint64_t)&v45, (uint64_t)v42);
    v41 = 5;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v25 = v3 + v10[10];
    v26 = *(_BYTE *)(v25 + 24);
    v27 = *(_BYTE *)(v25 + 25);
    v28 = *(_BYTE *)(v25 + 48);
    LOBYTE(v42[0]) = *(_BYTE *)v25;
    *(_OWORD *)((char *)v42 + 8) = *(_OWORD *)(v25 + 8);
    BYTE8(v42[1]) = v26;
    BYTE9(v42[1]) = v27;
    v43 = *(_OWORD *)(v25 + 32);
    v44 = v28;
    v41 = 6;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v29 = (_OWORD *)(v3 + v10[11]);
    v30 = v29[1];
    v42[0] = *v29;
    v42[1] = v30;
    v41 = 7;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v31 = (char *)(v3 + v10[12]);
    v32 = *v31;
    v33 = v31[1];
    LOWORD(v31) = *((_WORD *)v31 + 1);
    LOBYTE(v42[0]) = v32;
    BYTE1(v42[0]) = v33;
    WORD1(v42[0]) = (_WORD)v31;
    v41 = 8;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v34 = v3 + v10[13];
    v35 = *(_WORD *)(v34 + 16);
    v42[0] = *(_OWORD *)v34;
    LOWORD(v42[1]) = v35;
    v41 = 9;
    sub_1D57C62A4();
    sub_1D5AAED18();
    v36 = v3 + v10[14];
    v37 = *(_QWORD *)(v36 + 32);
    v38 = *(_OWORD *)(v36 + 16);
    v42[0] = *(_OWORD *)v36;
    v42[1] = v38;
    *(_QWORD *)&v43 = v37;
    v41 = 10;
    sub_1D57C71C4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D57F7770()
{
  unint64_t result;

  result = qword_1EFF481E8;
  if (!qword_1EFF481E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2F8C, &type metadata for ArticleLikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF481E8);
  }
  return result;
}

uint64_t ArticleLikeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  int *v19;
  char *v20;
  int *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char v35;
  char v36;
  char v37;
  char *v38;
  char *v39;
  __int128 v40;
  char v41;
  __int16 v42;
  char *v43;
  __int16 v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  char v61;
  _OWORD v62[2];
  __int128 v63;
  char v64;
  _BYTE v65[144];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _BYTE v73[23];
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _OWORD v81[3];
  int *v82;

  v54 = a2;
  v4 = sub_1D5AADF98();
  v56 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57F801C(0, &qword_1EFF481F0, MEMORY[0x1E0DED048]);
  v57 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v52 - v9;
  v82 = (int *)type metadata accessor for ArticleLikeEvent.Model(0);
  MEMORY[0x1E0C80A78](v82);
  v60 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D57F7770();
  v55 = v10;
  sub_1D5AAEEB0();
  if (v2)
  {
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    v59 = v2;
  }
  else
  {
    v53 = v8;
    LOBYTE(v74) = 0;
    sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v20 = v60;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v60, v6, v4);
    v65[143] = 1;
    sub_1D57CB8FC();
    sub_1D5AAECD0();
    v21 = v82;
    v22 = &v20[v82[5]];
    v23 = *(_OWORD *)v73;
    *((_OWORD *)v22 + 6) = v72;
    *((_OWORD *)v22 + 7) = v23;
    *(_QWORD *)(v22 + 127) = *(_QWORD *)&v73[15];
    v24 = v69;
    *((_OWORD *)v22 + 2) = v68;
    *((_OWORD *)v22 + 3) = v24;
    v25 = v71;
    *((_OWORD *)v22 + 4) = v70;
    *((_OWORD *)v22 + 5) = v25;
    v26 = v67;
    *(_OWORD *)v22 = v66;
    *((_OWORD *)v22 + 1) = v26;
    v65[0] = 2;
    sub_1D57CBFF4();
    sub_1D5AAECD0();
    v20[v21[6]] = v74;
    v65[0] = 3;
    sub_1D57CB874();
    sub_1D5AAECD0();
    v27 = *((_QWORD *)&v74 + 1);
    v28 = v75;
    v29 = BYTE1(v75);
    v30 = *((_QWORD *)&v75 + 1);
    v31 = v76;
    v32 = &v20[v21[7]];
    *(_QWORD *)v32 = v74;
    *((_QWORD *)v32 + 1) = v27;
    v32[16] = v28;
    v32[17] = v29;
    *((_QWORD *)v32 + 3) = v30;
    *((_QWORD *)v32 + 4) = v31;
    v65[0] = 4;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v33 = v75;
    v34 = &v20[v21[8]];
    *(_OWORD *)v34 = v74;
    *((_QWORD *)v34 + 2) = v33;
    v65[142] = 5;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57DD5B8((uint64_t)&v74, (uint64_t)v65);
    sub_1D57DD5B8((uint64_t)v65, (uint64_t)&v20[v21[9]]);
    v61 = 6;
    sub_1D57C6AF8();
    sub_1D5AAECD0();
    v35 = BYTE8(v62[1]);
    v36 = BYTE9(v62[1]);
    v37 = v64;
    v38 = &v20[v21[10]];
    *v38 = v62[0];
    *(_OWORD *)(v38 + 8) = *(_OWORD *)((char *)v62 + 8);
    v38[24] = v35;
    v38[25] = v36;
    *((_OWORD *)v38 + 2) = v63;
    v38[48] = v37;
    v61 = 7;
    sub_1D57C5ED8();
    sub_1D5AAEC7C();
    v39 = &v20[v21[11]];
    v40 = v62[1];
    *(_OWORD *)v39 = v62[0];
    *((_OWORD *)v39 + 1) = v40;
    v61 = 8;
    sub_1D57C7AE0();
    sub_1D5AAECD0();
    v41 = BYTE1(v62[0]);
    v42 = WORD1(v62[0]);
    v43 = &v20[v21[12]];
    *v43 = v62[0];
    v43[1] = v41;
    *((_WORD *)v43 + 1) = v42;
    v61 = 9;
    sub_1D57C6260();
    sub_1D5AAEC7C();
    v59 = 0;
    v44 = v62[1];
    v45 = &v60[v82[13]];
    *(_OWORD *)v45 = v62[0];
    *((_WORD *)v45 + 8) = v44;
    v61 = 10;
    sub_1D57C7180();
    v46 = v59;
    sub_1D5AAEC7C();
    v59 = v46;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v57);
    if (v46)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      v47 = v60;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v60, v4);
      v14 = &v47[v82[5]];
      v15 = *((_OWORD *)v14 + 4);
      v79 = *((_OWORD *)v14 + 5);
      v16 = *((_OWORD *)v14 + 7);
      v80 = *((_OWORD *)v14 + 6);
      v81[0] = v16;
      *(_QWORD *)((char *)v81 + 15) = *(_QWORD *)(v14 + 127);
      v17 = *((_OWORD *)v14 + 3);
      v76 = *((_OWORD *)v14 + 2);
      v77 = v17;
      v78 = v15;
      v18 = *((_OWORD *)v14 + 1);
      v74 = *(_OWORD *)v14;
      v75 = v18;
      sub_1D57D5AE0((uint64_t)&v74);
      v19 = v82;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D57DAEDC(*(_QWORD *)&v47[v19[8]], *(_QWORD *)&v47[v19[8] + 8], *(_QWORD *)&v47[v19[8] + 16]);
      sub_1D57DD5B8((uint64_t)&v47[v19[9]], (uint64_t)&v74);
      sub_1D57DE9C8(&v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D57EA700(*(_QWORD *)&v47[v19[11]], *(_QWORD *)&v47[v19[11] + 8]);
      return swift_bridgeObjectRelease();
    }
    else
    {
      v48 = v63;
      v49 = (uint64_t)v60;
      v50 = &v60[v82[14]];
      v51 = v62[1];
      *(_OWORD *)v50 = v62[0];
      *((_OWORD *)v50 + 1) = v51;
      *((_QWORD *)v50 + 4) = v48;
      sub_1D57F8078(v49, v54);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      return sub_1D57F80BC(v49);
    }
  }
  return result;
}

void sub_1D57F801C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57F7770();
    v7 = a3(a1, &type metadata for ArticleLikeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57F8078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleLikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D57F80BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleLikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57F80F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleLikeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D57F810C(_QWORD *a1)
{
  return ArticleLikeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D57F8120@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF481B0, a1);
}

uint64_t sub_1D57F8144@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F28, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF481C8, a1);
}

uint64_t sub_1D57F8168@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v13, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v13, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v13, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v13, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleLikeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for ArticleLikeEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
}

uint64_t initializeWithCopy for ArticleLikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for ArticleLikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for ArticleLikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for ArticleLikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLikeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57F984C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                      v8 = v22;
                      v12 = *(_QWORD *)(v22 - 8);
                      v13 = a3[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleLikeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57F9B50(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                      v10 = v24;
                      v14 = *(_QWORD *)(v24 - 8);
                      v15 = a4[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleLikeEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  _QWORD *v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v12;
    v10[32] = v11[32];
    v13 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    v14 = *((_QWORD *)v11 + 9);
    *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
    v10[112] = v11[112];
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v15 = a3[7];
    v16 = a3[8];
    v17 = (char *)a1 + v15;
    v18 = (char *)a2 + v15;
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
    v20 = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 3) = *((_QWORD *)v18 + 3);
    *((_QWORD *)v17 + 4) = v20;
    v21 = (char *)a1 + v16;
    v60 = a2;
    v22 = (char *)a2 + v16;
    v23 = *((_QWORD *)v22 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23 == 1)
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    }
    else
    {
      *v21 = *v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      *((_QWORD *)v21 + 2) = v23;
      swift_bridgeObjectRetain();
    }
    v25 = v60;
    v26 = a3[9];
    v27 = (char *)a1 + v26;
    v28 = (char *)v60 + v26;
    v29 = *((_QWORD *)v28 + 2);
    if (v29)
    {
      *(_WORD *)v27 = *(_WORD *)v28;
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v29;
      *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
      v30 = *((_QWORD *)v28 + 5);
      *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
      *((_QWORD *)v27 + 5) = v30;
      v31 = *((_QWORD *)v28 + 7);
      *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
      *((_QWORD *)v27 + 7) = v31;
      v32 = *((_QWORD *)v28 + 9);
      *((_QWORD *)v27 + 8) = *((_QWORD *)v28 + 8);
      *((_QWORD *)v27 + 9) = v32;
      v27[80] = v28[80];
      v33 = *((_QWORD *)v28 + 12);
      *((_QWORD *)v27 + 11) = *((_QWORD *)v28 + 11);
      *((_QWORD *)v27 + 12) = v33;
      *((_QWORD *)v27 + 13) = *((_QWORD *)v28 + 13);
      v27[112] = v28[112];
      v34 = *((_QWORD *)v28 + 16);
      *((_QWORD *)v27 + 15) = *((_QWORD *)v28 + 15);
      *((_QWORD *)v27 + 16) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v35 = *((_OWORD *)v28 + 7);
      *((_OWORD *)v27 + 6) = *((_OWORD *)v28 + 6);
      *((_OWORD *)v27 + 7) = v35;
      *((_QWORD *)v27 + 16) = *((_QWORD *)v28 + 16);
      v36 = *((_OWORD *)v28 + 3);
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
      *((_OWORD *)v27 + 3) = v36;
      v37 = *((_OWORD *)v28 + 5);
      *((_OWORD *)v27 + 4) = *((_OWORD *)v28 + 4);
      *((_OWORD *)v27 + 5) = v37;
      v38 = *((_OWORD *)v28 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v38;
    }
    v39 = a3[10];
    v40 = a3[11];
    v41 = (char *)a1 + v39;
    v42 = (char *)v25 + v39;
    *v41 = *v42;
    v43 = *((_QWORD *)v42 + 2);
    *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
    *((_QWORD *)v41 + 2) = v43;
    *((_WORD *)v41 + 12) = *((_WORD *)v42 + 12);
    v44 = *((_QWORD *)v42 + 5);
    *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
    *((_QWORD *)v41 + 5) = v44;
    v41[48] = v42[48];
    v45 = (char *)a1 + v40;
    v46 = (uint64_t)v25 + v40;
    v47 = *(_QWORD *)((char *)v25 + v40 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v47)
    {
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = v47;
      *((_WORD *)v45 + 8) = *(_WORD *)(v46 + 16);
      *((_QWORD *)v45 + 3) = *(_QWORD *)(v46 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v48 = *(_OWORD *)(v46 + 16);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v48;
    }
    v49 = a3[13];
    *(_DWORD *)((char *)a1 + a3[12]) = *(_DWORD *)((char *)v25 + a3[12]);
    v50 = (char *)a1 + v49;
    v51 = (uint64_t)v25 + v49;
    v52 = *(_QWORD *)(v51 + 8);
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = v52;
    *((_WORD *)v50 + 8) = *(_WORD *)(v51 + 16);
    v53 = a3[14];
    v54 = (char *)a1 + v53;
    v55 = (uint64_t)v25 + v53;
    v56 = *(_QWORD *)((char *)v25 + v53 + 8);
    swift_bridgeObjectRetain();
    if (v56 == 1)
    {
      v57 = *(_OWORD *)(v55 + 16);
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v57;
      *((_QWORD *)v54 + 4) = *(_QWORD *)(v55 + 32);
    }
    else
    {
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *((_QWORD *)v54 + 1) = v56;
      v58 = *(_QWORD *)(v55 + 24);
      *((_QWORD *)v54 + 2) = *(_QWORD *)(v55 + 16);
      *((_QWORD *)v54 + 3) = v58;
      *((_QWORD *)v54 + 4) = *(_QWORD *)(v55 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for ArticleLikeEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[14] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ArticleLikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  int *v58;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v12;
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  v13 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 72) = v13;
  *(_BYTE *)(v9 + 80) = *(_BYTE *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 + 104);
  *(_BYTE *)(v9 + 112) = *(_BYTE *)(v10 + 112);
  *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(_BYTE *)(v9 + 132) = *(_BYTE *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v14 = a3[7];
  v15 = a3[8];
  v58 = a3;
  v16 = a1 + v14;
  v17 = a2 + v14;
  v18 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  v19 = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 32) = v19;
  v20 = a1 + v15;
  v21 = a2 + v15;
  v22 = *(_QWORD *)(a2 + v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22 == 1)
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  }
  else
  {
    *(_BYTE *)v20 = *(_BYTE *)v21;
    *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
    *(_QWORD *)(v20 + 16) = v22;
    swift_bridgeObjectRetain();
  }
  v23 = v58;
  v24 = v58[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    *(_WORD *)v25 = *(_WORD *)v26;
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 16) = v27;
    *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
    v28 = *(_QWORD *)(v26 + 40);
    *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
    *(_QWORD *)(v25 + 40) = v28;
    v29 = *(_QWORD *)(v26 + 56);
    *(_QWORD *)(v25 + 48) = *(_QWORD *)(v26 + 48);
    *(_QWORD *)(v25 + 56) = v29;
    v30 = *(_QWORD *)(v26 + 72);
    *(_QWORD *)(v25 + 64) = *(_QWORD *)(v26 + 64);
    *(_QWORD *)(v25 + 72) = v30;
    *(_BYTE *)(v25 + 80) = *(_BYTE *)(v26 + 80);
    v31 = *(_QWORD *)(v26 + 96);
    *(_QWORD *)(v25 + 88) = *(_QWORD *)(v26 + 88);
    *(_QWORD *)(v25 + 96) = v31;
    *(_QWORD *)(v25 + 104) = *(_QWORD *)(v26 + 104);
    *(_BYTE *)(v25 + 112) = *(_BYTE *)(v26 + 112);
    v32 = *(_QWORD *)(v26 + 128);
    *(_QWORD *)(v25 + 120) = *(_QWORD *)(v26 + 120);
    *(_QWORD *)(v25 + 128) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v33 = *(_OWORD *)(v26 + 112);
    *(_OWORD *)(v25 + 96) = *(_OWORD *)(v26 + 96);
    *(_OWORD *)(v25 + 112) = v33;
    *(_QWORD *)(v25 + 128) = *(_QWORD *)(v26 + 128);
    v34 = *(_OWORD *)(v26 + 48);
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
    *(_OWORD *)(v25 + 48) = v34;
    v35 = *(_OWORD *)(v26 + 80);
    *(_OWORD *)(v25 + 64) = *(_OWORD *)(v26 + 64);
    *(_OWORD *)(v25 + 80) = v35;
    v36 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v36;
  }
  v37 = v23[10];
  v38 = v23[11];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_BYTE *)v39 = *(_BYTE *)v40;
  v41 = *(_QWORD *)(v40 + 16);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  *(_QWORD *)(v39 + 16) = v41;
  *(_WORD *)(v39 + 24) = *(_WORD *)(v40 + 24);
  v42 = *(_QWORD *)(v40 + 40);
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  *(_QWORD *)(v39 + 40) = v42;
  *(_BYTE *)(v39 + 48) = *(_BYTE *)(v40 + 48);
  v43 = a1 + v38;
  v44 = a2 + v38;
  v45 = *(_QWORD *)(a2 + v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v45)
  {
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *(_QWORD *)(v43 + 8) = v45;
    *(_WORD *)(v43 + 16) = *(_WORD *)(v44 + 16);
    *(_QWORD *)(v43 + 24) = *(_QWORD *)(v44 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v46 = *(_OWORD *)(v44 + 16);
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *(_OWORD *)(v43 + 16) = v46;
  }
  v47 = v23[13];
  *(_DWORD *)(a1 + v23[12]) = *(_DWORD *)(a2 + v23[12]);
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = *(_QWORD *)(v49 + 8);
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_QWORD *)(v48 + 8) = v50;
  *(_WORD *)(v48 + 16) = *(_WORD *)(v49 + 16);
  v51 = v23[14];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = *(_QWORD *)(a2 + v51 + 8);
  swift_bridgeObjectRetain();
  if (v54 == 1)
  {
    v55 = *(_OWORD *)(v53 + 16);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *(_OWORD *)(v52 + 16) = v55;
    *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
  }
  else
  {
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *(_QWORD *)(v52 + 8) = v54;
    v56 = *(_QWORD *)(v53 + 24);
    *(_QWORD *)(v52 + 16) = *(_QWORD *)(v53 + 16);
    *(_QWORD *)(v52 + 24) = v56;
    *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ArticleLikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = (__int128 *)(a2 + v15);
  v18 = *(_QWORD *)(a1 + v15 + 16);
  v19 = *(_QWORD *)(a2 + v15 + 16);
  if (v18 == 1)
  {
    if (v19 == 1)
    {
      v20 = *v17;
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      *(_OWORD *)v16 = v20;
    }
    else
    {
      *(_BYTE *)v16 = *(_BYTE *)v17;
      *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v19 == 1)
  {
    sub_1D57D9100(v16);
    v21 = *((_QWORD *)v17 + 2);
    *(_OWORD *)v16 = *v17;
    *(_QWORD *)(v16 + 16) = v21;
  }
  else
  {
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
    *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a1 + v22 + 16);
  v26 = *(_QWORD *)(a2 + v22 + 16);
  if (v25)
  {
    if (v26)
    {
      *(_BYTE *)v23 = *(_BYTE *)v24;
      *(_BYTE *)(v23 + 1) = *(_BYTE *)(v24 + 1);
      *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
      *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v23 + 24) = *(_DWORD *)(v24 + 24);
      *(_DWORD *)(v23 + 28) = *(_DWORD *)(v24 + 28);
      *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 56) = *(_QWORD *)(v24 + 56);
      *(_QWORD *)(v23 + 64) = *(_QWORD *)(v24 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 72) = *(_QWORD *)(v24 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
      *(_QWORD *)(v23 + 88) = *(_QWORD *)(v24 + 88);
      *(_QWORD *)(v23 + 96) = *(_QWORD *)(v24 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v27 = *(_QWORD *)(v24 + 104);
      *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
      *(_QWORD *)(v23 + 104) = v27;
      *(_QWORD *)(v23 + 120) = *(_QWORD *)(v24 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v23);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      v29 = *(_OWORD *)(v24 + 64);
      v31 = *(_OWORD *)(v24 + 16);
      v30 = *(_OWORD *)(v24 + 32);
      *(_OWORD *)(v23 + 48) = *(_OWORD *)(v24 + 48);
      *(_OWORD *)(v23 + 64) = v29;
      *(_OWORD *)(v23 + 16) = v31;
      *(_OWORD *)(v23 + 32) = v30;
      v33 = *(_OWORD *)(v24 + 96);
      v32 = *(_OWORD *)(v24 + 112);
      v34 = *(_OWORD *)(v24 + 80);
      *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
      *(_OWORD *)(v23 + 96) = v33;
      *(_OWORD *)(v23 + 112) = v32;
      *(_OWORD *)(v23 + 80) = v34;
    }
  }
  else if (v26)
  {
    *(_BYTE *)v23 = *(_BYTE *)v24;
    *(_BYTE *)(v23 + 1) = *(_BYTE *)(v24 + 1);
    *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
    *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
    *(_DWORD *)(v23 + 24) = *(_DWORD *)(v24 + 24);
    *(_DWORD *)(v23 + 28) = *(_DWORD *)(v24 + 28);
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
    *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 40);
    *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
    *(_QWORD *)(v23 + 56) = *(_QWORD *)(v24 + 56);
    *(_QWORD *)(v23 + 64) = *(_QWORD *)(v24 + 64);
    *(_QWORD *)(v23 + 72) = *(_QWORD *)(v24 + 72);
    *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
    *(_QWORD *)(v23 + 88) = *(_QWORD *)(v24 + 88);
    *(_QWORD *)(v23 + 96) = *(_QWORD *)(v24 + 96);
    v28 = *(_QWORD *)(v24 + 104);
    *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
    *(_QWORD *)(v23 + 104) = v28;
    *(_QWORD *)(v23 + 120) = *(_QWORD *)(v24 + 120);
    *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
    v35 = *(_OWORD *)(v24 + 16);
    v36 = *(_OWORD *)(v24 + 32);
    v37 = *(_OWORD *)(v24 + 64);
    *(_OWORD *)(v23 + 48) = *(_OWORD *)(v24 + 48);
    *(_OWORD *)(v23 + 64) = v37;
    *(_OWORD *)(v23 + 16) = v35;
    *(_OWORD *)(v23 + 32) = v36;
    v38 = *(_OWORD *)(v24 + 80);
    v39 = *(_OWORD *)(v24 + 96);
    v40 = *(_OWORD *)(v24 + 112);
    *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
    *(_OWORD *)(v23 + 96) = v39;
    *(_OWORD *)(v23 + 112) = v40;
    *(_OWORD *)(v23 + 80) = v38;
  }
  v41 = a3[10];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)v42 = *(_BYTE *)(a2 + v41);
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(a2 + v41 + 8);
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(a2 + v41 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v42 + 24) = *(_BYTE *)(v43 + 24);
  *(_BYTE *)(v42 + 25) = *(_BYTE *)(v43 + 25);
  *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
  *(_QWORD *)(v42 + 40) = *(_QWORD *)(v43 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v42 + 48) = *(_BYTE *)(v43 + 48);
  v44 = a3[11];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_QWORD *)(a1 + v44 + 8);
  v48 = *(_QWORD *)(a2 + v44 + 8);
  if (v47)
  {
    if (v48)
    {
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
      *(_BYTE *)(v45 + 17) = *(_BYTE *)(v46 + 17);
      *(_QWORD *)(v45 + 24) = *(_QWORD *)(v46 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v45);
      v49 = *(_OWORD *)(v46 + 16);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *(_OWORD *)(v45 + 16) = v49;
    }
  }
  else if (v48)
  {
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
    *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
    *(_BYTE *)(v45 + 17) = *(_BYTE *)(v46 + 17);
    *(_QWORD *)(v45 + 24) = *(_QWORD *)(v46 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v50 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v50;
  }
  v51 = a3[12];
  v52 = (_BYTE *)(a1 + v51);
  v53 = (_BYTE *)(a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  v52[2] = v53[2];
  v52[3] = v53[3];
  v54 = a3[13];
  v55 = a1 + v54;
  v56 = a2 + v54;
  *(_QWORD *)v55 = *(_QWORD *)(a2 + v54);
  *(_QWORD *)(v55 + 8) = *(_QWORD *)(a2 + v54 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v55 + 16) = *(_BYTE *)(v56 + 16);
  *(_BYTE *)(v55 + 17) = *(_BYTE *)(v56 + 17);
  v57 = a3[14];
  v58 = a1 + v57;
  v59 = (__int128 *)(a2 + v57);
  v60 = *(_QWORD *)(a1 + v57 + 8);
  v61 = *((_QWORD *)v59 + 1);
  if (v60 == 1)
  {
    if (v61 == 1)
    {
      v62 = *v59;
      v63 = v59[1];
      *(_QWORD *)(v58 + 32) = *((_QWORD *)v59 + 4);
      *(_OWORD *)v58 = v62;
      *(_OWORD *)(v58 + 16) = v63;
    }
    else
    {
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *(_QWORD *)(v58 + 8) = *((_QWORD *)v59 + 1);
      *(_QWORD *)(v58 + 16) = *((_QWORD *)v59 + 2);
      *(_QWORD *)(v58 + 24) = *((_QWORD *)v59 + 3);
      *(_QWORD *)(v58 + 32) = *((_QWORD *)v59 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v61 == 1)
  {
    sub_1D57EE4B0(v58);
    v64 = *((_QWORD *)v59 + 4);
    v65 = v59[1];
    *(_OWORD *)v58 = *v59;
    *(_OWORD *)(v58 + 16) = v65;
    *(_QWORD *)(v58 + 32) = v64;
  }
  else
  {
    *(_QWORD *)v58 = *(_QWORD *)v59;
    *(_QWORD *)(v58 + 8) = *((_QWORD *)v59 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v58 + 16) = *((_QWORD *)v59 + 2);
    *(_QWORD *)(v58 + 24) = *((_QWORD *)v59 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v58 + 32) = *((_QWORD *)v59 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t initializeWithTake for ArticleLikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = a1 + v16;
  v21 = a2 + v16;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  v22 = a3[9];
  v23 = a3[10];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)(v24 + 128) = *(_QWORD *)(v25 + 128);
  v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  v27 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v27;
  v28 = *(_OWORD *)(v25 + 112);
  *(_OWORD *)(v24 + 96) = *(_OWORD *)(v25 + 96);
  *(_OWORD *)(v24 + 112) = v28;
  v29 = *(_OWORD *)(v25 + 80);
  *(_OWORD *)(v24 + 64) = *(_OWORD *)(v25 + 64);
  *(_OWORD *)(v24 + 80) = v29;
  v30 = a1 + v23;
  v31 = a2 + v23;
  v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  v33 = a3[11];
  v34 = a3[12];
  v35 = (_OWORD *)(a1 + v33);
  v36 = (_OWORD *)(a2 + v33);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  *(_DWORD *)(a1 + v34) = *(_DWORD *)(a2 + v34);
  v38 = a3[13];
  v39 = a3[14];
  v40 = a1 + v38;
  v41 = a2 + v38;
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *(_WORD *)(v40 + 16) = *(_WORD *)(v41 + 16);
  v42 = a1 + v39;
  v43 = a2 + v39;
  v44 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v44;
  *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
  return a1;
}

uint64_t assignWithTake for ArticleLikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v11;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12);
  v16 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = v15;
  *(_QWORD *)(v13 + 8) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  v17 = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = v17;
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  if (*(_QWORD *)(a1 + v18 + 16) == 1)
    goto LABEL_4;
  v21 = *(_QWORD *)(v20 + 16);
  if (v21 == 1)
  {
    sub_1D57D9100(v19);
LABEL_4:
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v19 = *(_BYTE *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  if (*(_QWORD *)(a1 + v22 + 16))
  {
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      *(_WORD *)v23 = *(_WORD *)v24;
      *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
      *(_QWORD *)(v23 + 16) = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
      *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v24 + 64);
      *(_QWORD *)(v23 + 56) = *(_QWORD *)(v24 + 56);
      *(_QWORD *)(v23 + 64) = v26;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 72) = *(_QWORD *)(v24 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
      v27 = *(_QWORD *)(v24 + 96);
      *(_QWORD *)(v23 + 88) = *(_QWORD *)(v24 + 88);
      *(_QWORD *)(v23 + 96) = v27;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 104) = *(_QWORD *)(v24 + 104);
      *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
      *(_QWORD *)(v23 + 120) = *(_QWORD *)(v24 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E17B8(v23);
  }
  v28 = *(_OWORD *)(v24 + 112);
  *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
  *(_OWORD *)(v23 + 112) = v28;
  *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
  v29 = *(_OWORD *)(v24 + 48);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  *(_OWORD *)(v23 + 48) = v29;
  v30 = *(_OWORD *)(v24 + 80);
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
  *(_OWORD *)(v23 + 80) = v30;
  v31 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v31;
LABEL_11:
  v32 = a3[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_BYTE *)v33 = *(_BYTE *)(a2 + v32);
  v35 = *(_QWORD *)(a2 + v32 + 16);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(a2 + v32 + 8);
  *(_QWORD *)(v33 + 16) = v35;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 24) = *(_BYTE *)(v34 + 24);
  *(_BYTE *)(v33 + 25) = *(_BYTE *)(v34 + 25);
  v36 = *(_QWORD *)(v34 + 40);
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  *(_QWORD *)(v33 + 40) = v36;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 48) = *(_BYTE *)(v34 + 48);
  v37 = a3[11];
  v38 = a1 + v37;
  v39 = a2 + v37;
  if (*(_QWORD *)(a1 + v37 + 8))
  {
    v40 = *(_QWORD *)(v39 + 8);
    if (v40)
    {
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *(_QWORD *)(v38 + 8) = v40;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
      *(_BYTE *)(v38 + 17) = *(_BYTE *)(v39 + 17);
      *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57EE47C(v38);
  }
  v41 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v41;
LABEL_16:
  v42 = a3[12];
  v43 = a3[13];
  v44 = a1 + v42;
  v45 = a2 + v42;
  *(_BYTE *)v44 = *(_BYTE *)v45;
  *(_BYTE *)(v44 + 1) = *(_BYTE *)(v45 + 1);
  *(_WORD *)(v44 + 2) = *(_WORD *)(v45 + 2);
  v46 = a1 + v43;
  v47 = a2 + v43;
  v48 = *(_QWORD *)(a2 + v43);
  v49 = *(_QWORD *)(a2 + v43 + 8);
  *(_QWORD *)v46 = v48;
  *(_QWORD *)(v46 + 8) = v49;
  swift_bridgeObjectRelease();
  *(_WORD *)(v46 + 16) = *(_WORD *)(v47 + 16);
  v50 = a3[14];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  if (*(_QWORD *)(a1 + v50 + 8) != 1)
  {
    v53 = v52[1];
    if (v53 != 1)
    {
      *v51 = *v52;
      v51[1] = v53;
      swift_bridgeObjectRelease();
      v55 = v52[3];
      v51[2] = v52[2];
      v51[3] = v55;
      swift_bridgeObjectRelease();
      v51[4] = v52[4];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D57EE4B0((uint64_t)v51);
  }
  v54 = *((_OWORD *)v52 + 1);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *((_OWORD *)v51 + 1) = v54;
  v51[4] = v52[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLikeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57FB42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleLikeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57FB4B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleLikeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D57FB580 + 4 * byte_1D5AB2C80[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D57FB5B4 + 4 * byte_1D5AB2C7B[v4]))();
}

uint64_t sub_1D57FB5B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57FB5BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57FB5C4);
  return result;
}

uint64_t sub_1D57FB5D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57FB5D8);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D57FB5DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57FB5E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleLikeEvent.Model.CodingKeys()
{
  return &type metadata for ArticleLikeEvent.Model.CodingKeys;
}

unint64_t sub_1D57FB604()
{
  unint64_t result;

  result = qword_1EFF481F8;
  if (!qword_1EFF481F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2F64, &type metadata for ArticleLikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF481F8);
  }
  return result;
}

unint64_t sub_1D57FB64C()
{
  unint64_t result;

  result = qword_1EFF48200;
  if (!qword_1EFF48200)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2ED4, &type metadata for ArticleLikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48200);
  }
  return result;
}

unint64_t sub_1D57FB694()
{
  unint64_t result;

  result = qword_1EFF48208;
  if (!qword_1EFF48208)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB2EFC, &type metadata for ArticleLikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48208);
  }
  return result;
}

uint64_t sub_1D57FB6D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED320)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t WidgetData.webEmbedData.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t WidgetData.webEmbedData.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*WidgetData.webEmbedData.modify())()
{
  return nullsub_1;
}

NewsAnalytics::WidgetData __swiftcall WidgetData.init(webEmbedData:)(NewsAnalytics::WidgetData webEmbedData)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = *(_QWORD *)(webEmbedData.webEmbedData.embedUrl._countAndFlagsBits + 8);
  *v1 = *(_QWORD *)webEmbedData.webEmbedData.embedUrl._countAndFlagsBits;
  v1[1] = v2;
  return webEmbedData;
}

uint64_t sub_1D57FBBE0()
{
  return 0x6465626D45626577;
}

uint64_t sub_1D57FBC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6465626D45626577 && a2 == 0xEC00000061746144)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D57FBCAC()
{
  sub_1D57FBE04();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57FBCD4()
{
  sub_1D57FBE04();
  return sub_1D5AAEEE0();
}

uint64_t WidgetData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  sub_1D57FBF84(0, &qword_1EFF48210, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v9 = *v1;
  v8 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57FBE04();
  sub_1D5AAEEC8();
  v11[0] = v9;
  v11[1] = v8;
  sub_1D57F1894();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D57FBE04()
{
  unint64_t result;

  result = qword_1EFF48218;
  if (!qword_1EFF48218)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB314C, &type metadata for WidgetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48218);
  }
  return result;
}

uint64_t WidgetData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1D57FBF84(0, &qword_1EFF48220, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57FBE04();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57F1850();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v10 = v12[1];
    *a2 = v12[0];
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D57FBF84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57FBE04();
    v7 = a3(a1, &type metadata for WidgetData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D57FBFE4()
{
  unint64_t result;

  result = qword_1EFF48228;
  if (!qword_1EFF48228)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetData, &type metadata for WidgetData);
    atomic_store(result, (unint64_t *)&qword_1EFF48228);
  }
  return result;
}

unint64_t sub_1D57FC02C()
{
  unint64_t result;

  result = qword_1EFF48230;
  if (!qword_1EFF48230)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetData, &type metadata for WidgetData);
    atomic_store(result, (unint64_t *)&qword_1EFF48230);
  }
  return result;
}

uint64_t sub_1D57FC070@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return WidgetData.init(from:)(a1, a2);
}

uint64_t sub_1D57FC084(_QWORD *a1)
{
  return WidgetData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for WidgetData()
{
  return &type metadata for WidgetData;
}

uint64_t storeEnumTagSinglePayload for WidgetData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57FC0E8 + 4 * byte_1D5AB2FDC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57FC108 + 4 * byte_1D5AB2FE1[v4]))();
}

_BYTE *sub_1D57FC0E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57FC108(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57FC110(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57FC118(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57FC120(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57FC128(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WidgetData.CodingKeys()
{
  return &type metadata for WidgetData.CodingKeys;
}

unint64_t sub_1D57FC148()
{
  unint64_t result;

  result = qword_1EFF48238;
  if (!qword_1EFF48238)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3124, &type metadata for WidgetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48238);
  }
  return result;
}

unint64_t sub_1D57FC190()
{
  unint64_t result;

  result = qword_1EFF48240;
  if (!qword_1EFF48240)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3094, &type metadata for WidgetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48240);
  }
  return result;
}

unint64_t sub_1D57FC1D8()
{
  unint64_t result;

  result = qword_1EFF48248;
  if (!qword_1EFF48248)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB30BC, &type metadata for WidgetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48248);
  }
  return result;
}

NewsAnalytics::PurchaseType_optional __swiftcall PurchaseType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::PurchaseType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PurchaseType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57FC2A4 + 4 * byte_1D5AB319C[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D57FC2A4()
{
  return 0x6574726143616C61;
}

uint64_t sub_1D57FC2BC()
{
  return 0x656C646E7562;
}

uint64_t sub_1D57FC2D0()
{
  return 0x656C646E754273;
}

uint64_t sub_1D57FC2E4()
{
  return 0x43656C646E754273;
}

uint64_t sub_1D57FC308()
{
  return 0x7748656C646E7562;
}

uint64_t sub_1D57FC324()
{
  return 0x6C616E7265747865;
}

void sub_1D57FC33C(char *a1)
{
  sub_1D5A3CFAC(*a1);
}

unint64_t sub_1D57FC34C()
{
  unint64_t result;

  result = qword_1EFF48250;
  if (!qword_1EFF48250)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseType, &type metadata for PurchaseType);
    atomic_store(result, (unint64_t *)&qword_1EFF48250);
  }
  return result;
}

void sub_1D57FC390()
{
  char *v0;

  sub_1D5AA8E24(0, *v0);
}

void sub_1D57FC39C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D57FC3D8()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D57FC484(uint64_t a1)
{
  char *v1;

  sub_1D5AA8E24(a1, *v1);
}

NewsAnalytics::PurchaseType_optional sub_1D57FC48C(Swift::String *a1)
{
  return PurchaseType.init(rawValue:)(*a1);
}

uint64_t sub_1D57FC498()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D57FC4C8 + 4 * byte_1D5AB31AA[*v0]))();
}

void sub_1D57FC4C8(_QWORD *a1@<X8>)
{
  *a1 = 0x6574726143616C61;
  a1[1] = 0xE800000000000000;
}

void sub_1D57FC4E4(_QWORD *a1@<X8>)
{
  *a1 = 0x656C646E7562;
  a1[1] = 0xE600000000000000;
}

void sub_1D57FC4FC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656C646E754273;
  a1[1] = v1;
}

void sub_1D57FC514(char *a1@<X8>)
{
  strcpy(a1, "sBundleCarrier");
  a1[15] = -18;
}

void sub_1D57FC53C(_QWORD *a1@<X8>)
{
  *a1 = 0x7748656C646E7562;
  a1[1] = 0xE900000000000064;
}

void sub_1D57FC55C(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616E7265747865;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1D57FC578()
{
  sub_1D57FC6EC();
  return sub_1D5AAE928();
}

uint64_t sub_1D57FC5D4()
{
  sub_1D57FC6EC();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for PurchaseType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D57FC66C + 4 * byte_1D5AB31B6[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D57FC6A0 + 4 * byte_1D5AB31B1[v4]))();
}

uint64_t sub_1D57FC6A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57FC6A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57FC6B0);
  return result;
}

uint64_t sub_1D57FC6BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57FC6C4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D57FC6C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57FC6D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseType()
{
  return &type metadata for PurchaseType;
}

unint64_t sub_1D57FC6EC()
{
  unint64_t result;

  result = qword_1ED9C7850;
  if (!qword_1ED9C7850)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseType, &type metadata for PurchaseType);
    atomic_store(result, (unint64_t *)&qword_1ED9C7850);
  }
  return result;
}

uint64_t dispatch thunk of ExternalAnalyticsQueryItemsGeneratorType.generateQueryItems<A>(from:sessionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t storeEnumTagSinglePayload for QueryItemsGeneratorError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D57FC788 + 4 * byte_1D5AB32E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D57FC7A8 + 4 * byte_1D5AB32E5[v4]))();
}

_BYTE *sub_1D57FC788(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D57FC7A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57FC7B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57FC7B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D57FC7C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D57FC7C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for QueryItemsGeneratorError()
{
  return &type metadata for QueryItemsGeneratorError;
}

unint64_t sub_1D57FC7E8()
{
  unint64_t result;

  result = qword_1EFF48258;
  if (!qword_1EFF48258)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB337C, &type metadata for QueryItemsGeneratorError);
    atomic_store(result, (unint64_t *)&qword_1EFF48258);
  }
  return result;
}

NewsAnalytics::UserSelectionType_optional __swiftcall UserSelectionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::UserSelectionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t UserSelectionType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E4F6E727574;
  if (*v0 != 1)
    v1 = 0x776F4E746F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D57FC8E8(char *a1, unsigned __int8 *a2)
{
  return sub_1D5A3A704(*a1, *a2);
}

unint64_t sub_1D57FC8F8()
{
  unint64_t result;

  result = qword_1EFF48260;
  if (!qword_1EFF48260)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserSelectionType, &type metadata for UserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1EFF48260);
  }
  return result;
}

uint64_t sub_1D57FC93C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D57FC9D4()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D57FCA48()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::UserSelectionType_optional sub_1D57FCADC(Swift::String *a1)
{
  return UserSelectionType.init(rawValue:)(*a1);
}

void sub_1D57FCAE8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x6E4F6E727574;
  if (v2 != 1)
    v4 = 0x776F4E746F6ELL;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE600000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1D57FCB40()
{
  sub_1D57FCCB4();
  return sub_1D5AAE928();
}

uint64_t sub_1D57FCB9C()
{
  sub_1D57FCCB4();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for UserSelectionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D57FCC34 + 4 * byte_1D5AB33F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D57FCC68 + 4 * byte_1D5AB33F0[v4]))();
}

uint64_t sub_1D57FCC68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57FCC70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D57FCC78);
  return result;
}

uint64_t sub_1D57FCC84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D57FCC8CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D57FCC90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D57FCC98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserSelectionType()
{
  return &type metadata for UserSelectionType;
}

unint64_t sub_1D57FCCB4()
{
  unint64_t result;

  result = qword_1EFF48268;
  if (!qword_1EFF48268)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserSelectionType, &type metadata for UserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1EFF48268);
  }
  return result;
}

uint64_t sub_1D57FCCF8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF48270, MEMORY[0x1E0CF8078]);
}

uint64_t static PuzzleShareEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F30, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF48270, a1);
}

uint64_t sub_1D57FCD38(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF48288, MEMORY[0x1E0CF8380]);
}

uint64_t static PuzzleShareEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F38, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF48288, a1);
}

uint64_t PuzzleShareEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t PuzzleShareEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PuzzleShareEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleShareEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PuzzleShareEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF48310);
}

uint64_t PuzzleShareEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.actionData.modify())()
{
  type metadata accessor for PuzzleShareEvent(0);
  return nullsub_1;
}

uint64_t PuzzleShareEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleShareEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.feedData.modify())()
{
  type metadata accessor for PuzzleShareEvent(0);
  return nullsub_1;
}

uint64_t PuzzleShareEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleShareEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.groupData.modify())()
{
  type metadata accessor for PuzzleShareEvent(0);
  return nullsub_1;
}

uint64_t PuzzleShareEvent.shareContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleShareEvent.shareContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.shareContextData.modify())()
{
  type metadata accessor for PuzzleShareEvent(0);
  return nullsub_1;
}

uint64_t PuzzleShareEvent.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleShareEvent.puzzleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.puzzleData.modify())()
{
  type metadata accessor for PuzzleShareEvent(0);
  return nullsub_1;
}

uint64_t PuzzleShareEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleShareEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.viewData.modify())()
{
  type metadata accessor for PuzzleShareEvent(0);
  return nullsub_1;
}

uint64_t PuzzleShareEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleShareEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for PuzzleShareEvent(0);
  return nullsub_1;
}

uint64_t PuzzleShareEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleShareEvent.adData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.adData.modify())()
{
  type metadata accessor for PuzzleShareEvent(0);
  return nullsub_1;
}

uint64_t PuzzleShareEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for PuzzleShareEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v8, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v8, v21);
}

uint64_t PuzzleShareEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t PuzzleShareEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PuzzleShareEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for PuzzleShareEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF483C0);
}

uint64_t PuzzleShareEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *PuzzleShareEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for PuzzleShareEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 28), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t PuzzleShareEvent.Model.shareContextData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleShareEvent.Model.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_DWORD *)v3 + 8);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = v3[9];
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleShareEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleShareEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 44));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleShareEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 48);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(v3 + 32);
  return sub_1D57E8FE4(v4, v5);
}

__n128 PuzzleShareEvent.Model.init(eventData:actionData:feedData:groupData:shareContextData:puzzleData:viewData:userBundleSubscriptionContextData:adData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, __int128 *a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, __n128 *a10)
{
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 *v29;
  __n128 result;
  __int128 v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  __n128 v53;
  _BYTE v54[144];

  v16 = *a2;
  v31 = *a3;
  v17 = *((_QWORD *)a3 + 2);
  sub_1D57DD5B8(a4, (uint64_t)v54);
  v19 = *a5;
  v18 = a5[1];
  v40 = *a6;
  v38 = *((_QWORD *)a6 + 3);
  v39 = *((_QWORD *)a6 + 2);
  v37 = *((_DWORD *)a6 + 8);
  v36 = *((_QWORD *)a6 + 5);
  v35 = *((_BYTE *)a6 + 48);
  v34 = *((_QWORD *)a6 + 7);
  v32 = *((_BYTE *)a6 + 65);
  v33 = *((_BYTE *)a6 + 64);
  v20 = *((_QWORD *)a6 + 9);
  v41 = a7[1];
  v42 = *a7;
  LOWORD(a7) = *((_WORD *)a7 + 8);
  v50 = *a8;
  v48 = *((_QWORD *)a8 + 2);
  v49 = *((_QWORD *)a8 + 1);
  v46 = a8[25];
  v47 = a8[24];
  v44 = *((_QWORD *)a8 + 5);
  v45 = *((_QWORD *)a8 + 4);
  v43 = a8[48];
  v53 = *a10;
  v51 = a10[1].n128_u64[1];
  v52 = a10[1].n128_u64[0];
  v21 = a10[2].n128_u8[0];
  v22 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v23 = (int *)type metadata accessor for PuzzleShareEvent.Model(0);
  *(_BYTE *)(a9 + v23[5]) = v16;
  v24 = a9 + v23[6];
  *(_OWORD *)v24 = v31;
  *(_QWORD *)(v24 + 16) = v17;
  sub_1D57DD5B8((uint64_t)v54, a9 + v23[7]);
  v25 = (_QWORD *)(a9 + v23[8]);
  *v25 = v19;
  v25[1] = v18;
  v26 = a9 + v23[9];
  *(_OWORD *)v26 = v40;
  *(_QWORD *)(v26 + 16) = v39;
  *(_QWORD *)(v26 + 24) = v38;
  *(_DWORD *)(v26 + 32) = v37;
  *(_QWORD *)(v26 + 40) = v36;
  *(_BYTE *)(v26 + 48) = v35;
  *(_QWORD *)(v26 + 56) = v34;
  *(_BYTE *)(v26 + 64) = v33;
  *(_BYTE *)(v26 + 65) = v32;
  *(_QWORD *)(v26 + 72) = v20;
  v27 = a9 + v23[10];
  *(_QWORD *)v27 = v42;
  *(_QWORD *)(v27 + 8) = v41;
  *(_WORD *)(v27 + 16) = (_WORD)a7;
  v28 = a9 + v23[11];
  *(_BYTE *)v28 = v50;
  *(_QWORD *)(v28 + 8) = v49;
  *(_QWORD *)(v28 + 16) = v48;
  *(_BYTE *)(v28 + 24) = v47;
  *(_BYTE *)(v28 + 25) = v46;
  *(_QWORD *)(v28 + 32) = v45;
  *(_QWORD *)(v28 + 40) = v44;
  *(_BYTE *)(v28 + 48) = v43;
  v29 = (__n128 *)(a9 + v23[12]);
  result = v53;
  *v29 = v53;
  v29[1].n128_u64[0] = v52;
  v29[1].n128_u64[1] = v51;
  v29[2].n128_u8[0] = v21;
  return result;
}

uint64_t sub_1D57FDD0C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D57FDD44 + 4 * byte_1D5AB3520[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D57FDD44()
{
  return 0x61446E6F69746361;
}

void sub_1D57FDDB0()
{
  JUMPOUT(0x1D57FDDBCLL);
}

unint64_t sub_1D57FDDC8()
{
  return 0xD000000000000021;
}

uint64_t sub_1D57FDDE8()
{
  return 0x617461446461;
}

uint64_t sub_1D57FDDFC()
{
  unsigned __int8 *v0;

  return sub_1D57FDD0C(*v0);
}

uint64_t sub_1D57FDE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D580195C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D57FDE28()
{
  sub_1D57FE278();
  return sub_1D5AAEED4();
}

uint64_t sub_1D57FDE50()
{
  sub_1D57FE278();
  return sub_1D5AAEEE0();
}

uint64_t PuzzleShareEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v37;
  char v38;
  _OWORD v39[2];
  __int128 v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  _BYTE v46[144];
  __int128 v47;
  uint64_t v48;

  v3 = v1;
  sub_1D57FE9A0(0, &qword_1EFF482A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57FE278();
  sub_1D5AAEEC8();
  v46[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for PuzzleShareEvent.Model(0);
    v46[0] = *(_BYTE *)(v3 + v10[5]);
    LOBYTE(v39[0]) = 1;
    sub_1D57CC038();
    sub_1D5AAED6C();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *((_QWORD *)v11 + 2);
    v47 = *v11;
    v48 = v12;
    v46[143] = 2;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[7], (uint64_t)v46);
    sub_1D57DD5B8((uint64_t)v46, (uint64_t)v39);
    v38 = 3;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v13 = (uint64_t *)(v3 + v10[8]);
    v15 = *v13;
    v14 = v13[1];
    *(_QWORD *)&v39[0] = v15;
    *((_QWORD *)&v39[0] + 1) = v14;
    v38 = 4;
    sub_1D57C97AC();
    sub_1D5AAED6C();
    v16 = (__int128 *)(v3 + v10[9]);
    v17 = *v16;
    v18 = *((_QWORD *)v16 + 2);
    v19 = *((_QWORD *)v16 + 3);
    v20 = *((_DWORD *)v16 + 8);
    v21 = *((_QWORD *)v16 + 5);
    v22 = *((_BYTE *)v16 + 48);
    v23 = *((_QWORD *)v16 + 7);
    v24 = *((_BYTE *)v16 + 64);
    v25 = *((_BYTE *)v16 + 65);
    v26 = *((_QWORD *)v16 + 9);
    v39[0] = v17;
    *(_QWORD *)&v39[1] = v18;
    *((_QWORD *)&v39[1] + 1) = v19;
    LODWORD(v40) = v20;
    *((_QWORD *)&v40 + 1) = v21;
    v41 = v22;
    v42 = v23;
    v43 = v24;
    v44 = v25;
    v45 = v26;
    v38 = 5;
    sub_1D57CBD34();
    sub_1D5AAED6C();
    v27 = v3 + v10[10];
    v28 = *(_WORD *)(v27 + 16);
    v39[0] = *(_OWORD *)v27;
    LOWORD(v39[1]) = v28;
    v38 = 6;
    sub_1D57C62A4();
    sub_1D5AAED18();
    v29 = v3 + v10[11];
    v30 = *(_BYTE *)(v29 + 24);
    v31 = *(_BYTE *)(v29 + 25);
    v32 = *(_BYTE *)(v29 + 48);
    LOBYTE(v39[0]) = *(_BYTE *)v29;
    *(_OWORD *)((char *)v39 + 8) = *(_OWORD *)(v29 + 8);
    BYTE8(v39[1]) = v30;
    BYTE9(v39[1]) = v31;
    v40 = *(_OWORD *)(v29 + 32);
    v41 = v32;
    v38 = 7;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v33 = v3 + v10[12];
    v34 = *(_BYTE *)(v33 + 32);
    v35 = *(_OWORD *)(v33 + 16);
    v39[0] = *(_OWORD *)v33;
    v39[1] = v35;
    LOBYTE(v40) = v34;
    v38 = 8;
    sub_1D57C690C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D57FE278()
{
  unint64_t result;

  result = qword_1EFF482A8;
  if (!qword_1EFF482A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB37EC, &type metadata for PuzzleShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF482A8);
  }
  return result;
}

uint64_t PuzzleShareEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __int128 v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  int *v47;
  _OWORD v48[2];
  __int128 v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  _BYTE v55[136];
  __int128 v56;
  uint64_t v57;
  char v58;
  char v59;

  v41 = a2;
  v4 = sub_1D5AADF98();
  v44 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57FE9A0(0, &qword_1EFF482B0, MEMORY[0x1E0DED048]);
  v43 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - v8;
  v47 = (int *)type metadata accessor for PuzzleShareEvent.Model(0);
  MEMORY[0x1E0C80A78](v47);
  v45 = a1;
  v46 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57FE278();
  v11 = v9;
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  v12 = v7;
  LOBYTE(v56) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v13 = v42;
  sub_1D5AAECD0();
  v14 = v4;
  v15 = (uint64_t)v46;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v46, v13, v14);
  v55[0] = 1;
  sub_1D57CBFF4();
  sub_1D5AAECD0();
  v16 = v47;
  *(_BYTE *)(v15 + v47[5]) = v56;
  v55[0] = 2;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v17 = v57;
  v18 = v15 + v16[6];
  *(_OWORD *)v18 = v56;
  *(_QWORD *)(v18 + 16) = v17;
  v59 = 3;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)&v56, (uint64_t)v55);
  sub_1D57DD5B8((uint64_t)v55, v15 + v16[7]);
  v58 = 4;
  sub_1D57C9768();
  sub_1D5AAECD0();
  v19 = *((_QWORD *)&v48[0] + 1);
  v20 = (_QWORD *)(v15 + v16[8]);
  *v20 = *(_QWORD *)&v48[0];
  v20[1] = v19;
  v58 = 5;
  sub_1D57CBCF0();
  sub_1D5AAECD0();
  v21 = v48[1];
  v22 = v49;
  v23 = *((_QWORD *)&v49 + 1);
  v24 = v50;
  v25 = v51;
  v26 = v52;
  v27 = v53;
  v28 = v54;
  v29 = v15 + v16[9];
  *(_OWORD *)v29 = v48[0];
  *(_OWORD *)(v29 + 16) = v21;
  *(_DWORD *)(v29 + 32) = v22;
  *(_QWORD *)(v29 + 40) = v23;
  *(_BYTE *)(v29 + 48) = v24;
  *(_QWORD *)(v29 + 56) = v25;
  *(_BYTE *)(v29 + 64) = v26;
  *(_BYTE *)(v29 + 65) = v27;
  *(_QWORD *)(v29 + 72) = v28;
  v58 = 6;
  sub_1D57C6260();
  sub_1D5AAEC7C();
  v30 = v48[1];
  v31 = v15 + v16[10];
  *(_OWORD *)v31 = v48[0];
  *(_WORD *)(v31 + 16) = v30;
  v58 = 7;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v32 = BYTE8(v48[1]);
  v33 = BYTE9(v48[1]);
  v34 = v50;
  v35 = v15 + v47[11];
  *(_BYTE *)v35 = v48[0];
  *(_OWORD *)(v35 + 8) = *(_OWORD *)((char *)v48 + 8);
  *(_BYTE *)(v35 + 24) = v32;
  *(_BYTE *)(v35 + 25) = v33;
  *(_OWORD *)(v35 + 32) = v49;
  *(_BYTE *)(v35 + 48) = v34;
  v58 = 8;
  sub_1D57C68C8();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v43);
  v36 = v49;
  v37 = v15 + v47[12];
  v38 = v48[1];
  *(_OWORD *)v37 = v48[0];
  *(_OWORD *)(v37 + 16) = v38;
  *(_BYTE *)(v37 + 32) = v36;
  sub_1D57FE9FC(v15, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return sub_1D57FEA40(v15);
}

void sub_1D57FE9A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D57FE278();
    v7 = a3(a1, &type metadata for PuzzleShareEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D57FE9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PuzzleShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D57FEA40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PuzzleShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D57FEA7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleShareEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D57FEA90(_QWORD *a1)
{
  return PuzzleShareEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D57FEAA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F30, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF48270, a1);
}

uint64_t sub_1D57FEAC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F38, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF48288, a1);
}

uint64_t sub_1D57FEAEC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v9, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v9, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleShareEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for PuzzleShareEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

uint64_t initializeWithCopy for PuzzleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for PuzzleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for PuzzleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for PuzzleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleShareEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D57FFDC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
                  v8 = v20;
                  v12 = *(_QWORD *)(v20 - 8);
                  v13 = a3[12];
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PuzzleShareEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D580003C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
                  v10 = v22;
                  v14 = *(_QWORD *)(v22 - 8);
                  v15 = a4[12];
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58002B4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
                  if (v8 <= 0x3F)
                    swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for PuzzleShareEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 2);
    if (v11 == 1)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
    }
    else
    {
      *v9 = *v10;
      *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
      *((_QWORD *)v9 + 2) = v11;
      swift_bridgeObjectRetain();
    }
    v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *((_QWORD *)v15 + 2);
    if (v16)
    {
      *(_WORD *)v14 = *(_WORD *)v15;
      *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
      *((_QWORD *)v14 + 2) = v16;
      *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
      v17 = *((_QWORD *)v15 + 5);
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      *((_QWORD *)v14 + 5) = v17;
      v18 = *((_QWORD *)v15 + 7);
      *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
      *((_QWORD *)v14 + 7) = v18;
      v19 = *((_QWORD *)v15 + 9);
      *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
      *((_QWORD *)v14 + 9) = v19;
      v14[80] = v15[80];
      v20 = *((_QWORD *)v15 + 12);
      *((_QWORD *)v14 + 11) = *((_QWORD *)v15 + 11);
      *((_QWORD *)v14 + 12) = v20;
      *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
      v14[112] = v15[112];
      v21 = *((_QWORD *)v15 + 16);
      *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
      *((_QWORD *)v14 + 16) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = *((_OWORD *)v15 + 7);
      *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
      *((_OWORD *)v14 + 7) = v22;
      *((_QWORD *)v14 + 16) = *((_QWORD *)v15 + 16);
      v23 = *((_OWORD *)v15 + 3);
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      *((_OWORD *)v14 + 3) = v23;
      v24 = *((_OWORD *)v15 + 5);
      *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
      *((_OWORD *)v14 + 5) = v24;
      v25 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v25;
    }
    v26 = a3[8];
    v27 = a3[9];
    v28 = (_QWORD *)((char *)a1 + v26);
    v29 = (_QWORD *)((char *)a2 + v26);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = (char *)a1 + v27;
    v32 = (char *)a2 + v27;
    v33 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    v34 = *((_QWORD *)v32 + 3);
    *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
    *((_QWORD *)v31 + 3) = v34;
    v31[64] = v32[64];
    v35 = *((_OWORD *)v32 + 3);
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    *((_OWORD *)v31 + 3) = v35;
    v31[65] = v32[65];
    *((_QWORD *)v31 + 9) = *((_QWORD *)v32 + 9);
    v36 = a3[10];
    v37 = a3[11];
    v38 = (char *)a1 + v36;
    v39 = (char *)a2 + v36;
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    *((_WORD *)v38 + 8) = *((_WORD *)v39 + 8);
    v41 = (char *)a1 + v37;
    v42 = (char *)a2 + v37;
    *v41 = *v42;
    v43 = *((_QWORD *)v42 + 2);
    *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
    *((_QWORD *)v41 + 2) = v43;
    v41[24] = v42[24];
    v41[25] = v42[25];
    v44 = *((_QWORD *)v42 + 5);
    *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
    *((_QWORD *)v41 + 5) = v44;
    v41[48] = v42[48];
    v45 = a3[12];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = *(_QWORD *)((char *)a2 + v45 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48)
    {
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *((_QWORD *)v46 + 1) = v48;
      v49 = *((_QWORD *)v47 + 3);
      *((_QWORD *)v46 + 2) = *((_QWORD *)v47 + 2);
      *((_QWORD *)v46 + 3) = v49;
      v46[32] = v47[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v50 = *((_OWORD *)v47 + 1);
      *(_OWORD *)v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v50;
      v46[32] = v47[32];
    }
  }
  return a1;
}

uint64_t destroy for PuzzleShareEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[6] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[12] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PuzzleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10 == 1)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  }
  else
  {
    *(_BYTE *)v8 = *(_BYTE *)v9;
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = v10;
    swift_bridgeObjectRetain();
  }
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    *(_WORD *)v12 = *(_WORD *)v13;
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = v14;
    *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
    v15 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = v15;
    v16 = *(_QWORD *)(v13 + 56);
    *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 56) = v16;
    v17 = *(_QWORD *)(v13 + 72);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v12 + 72) = v17;
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    v18 = *(_QWORD *)(v13 + 96);
    *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 96) = v18;
    *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    v19 = *(_QWORD *)(v13 + 128);
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_QWORD *)(v12 + 128) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)(v13 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
    *(_OWORD *)(v12 + 112) = v20;
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    v21 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v21;
    v22 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v22;
    v23 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v23;
  }
  v24 = a3[8];
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = a1 + v25;
  v30 = a2 + v25;
  v31 = *(_QWORD *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_QWORD *)(v29 + 8) = v31;
  v32 = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v29 + 24) = v32;
  *(_BYTE *)(v29 + 64) = *(_BYTE *)(v30 + 64);
  v33 = *(_OWORD *)(v30 + 48);
  *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
  *(_OWORD *)(v29 + 48) = v33;
  *(_BYTE *)(v29 + 65) = *(_BYTE *)(v30 + 65);
  *(_QWORD *)(v29 + 72) = *(_QWORD *)(v30 + 72);
  v34 = a3[10];
  v35 = a3[11];
  v36 = a1 + v34;
  v37 = a2 + v34;
  v38 = *(_QWORD *)(v37 + 8);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_QWORD *)(v36 + 8) = v38;
  *(_WORD *)(v36 + 16) = *(_WORD *)(v37 + 16);
  v39 = a1 + v35;
  v40 = a2 + v35;
  *(_BYTE *)v39 = *(_BYTE *)v40;
  v41 = *(_QWORD *)(v40 + 16);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  *(_QWORD *)(v39 + 16) = v41;
  *(_BYTE *)(v39 + 24) = *(_BYTE *)(v40 + 24);
  *(_BYTE *)(v39 + 25) = *(_BYTE *)(v40 + 25);
  v42 = *(_QWORD *)(v40 + 40);
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  *(_QWORD *)(v39 + 40) = v42;
  *(_BYTE *)(v39 + 48) = *(_BYTE *)(v40 + 48);
  v43 = a3[12];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)(a2 + v43 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v46)
  {
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *(_QWORD *)(v44 + 8) = v46;
    v47 = *(_QWORD *)(v45 + 24);
    *(_QWORD *)(v44 + 16) = *(_QWORD *)(v45 + 16);
    *(_QWORD *)(v44 + 24) = v47;
    *(_BYTE *)(v44 + 32) = *(_BYTE *)(v45 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v48 = *(_OWORD *)(v45 + 16);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *(_OWORD *)(v44 + 16) = v48;
    *(_BYTE *)(v44 + 32) = *(_BYTE *)(v45 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for PuzzleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 16);
  v11 = *(_QWORD *)(a2 + v7 + 16);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      v12 = *v9;
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      *(_OWORD *)v8 = v12;
    }
    else
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v11 == 1)
  {
    sub_1D57D9100(v8);
    v13 = *((_QWORD *)v9 + 2);
    *(_OWORD *)v8 = *v9;
    *(_QWORD *)(v8 + 16) = v13;
  }
  else
  {
    *(_BYTE *)v8 = *(_BYTE *)v9;
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a1 + v14 + 16);
  v18 = *(_QWORD *)(a2 + v14 + 16);
  if (v17)
  {
    if (v18)
    {
      *(_BYTE *)v15 = *(_BYTE *)v16;
      *(_BYTE *)(v15 + 1) = *(_BYTE *)(v16 + 1);
      *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v15 + 24) = *(_DWORD *)(v16 + 24);
      *(_DWORD *)(v15 + 28) = *(_DWORD *)(v16 + 28);
      *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 56) = *(_QWORD *)(v16 + 56);
      *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 72) = *(_QWORD *)(v16 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 80) = *(_BYTE *)(v16 + 80);
      *(_QWORD *)(v15 + 88) = *(_QWORD *)(v16 + 88);
      *(_QWORD *)(v15 + 96) = *(_QWORD *)(v16 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(v16 + 104);
      *(_BYTE *)(v15 + 112) = *(_BYTE *)(v16 + 112);
      *(_QWORD *)(v15 + 104) = v19;
      *(_QWORD *)(v15 + 120) = *(_QWORD *)(v16 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 128) = *(_QWORD *)(v16 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v15);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v21 = *(_OWORD *)(v16 + 64);
      v23 = *(_OWORD *)(v16 + 16);
      v22 = *(_OWORD *)(v16 + 32);
      *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
      *(_OWORD *)(v15 + 64) = v21;
      *(_OWORD *)(v15 + 16) = v23;
      *(_OWORD *)(v15 + 32) = v22;
      v25 = *(_OWORD *)(v16 + 96);
      v24 = *(_OWORD *)(v16 + 112);
      v26 = *(_OWORD *)(v16 + 80);
      *(_QWORD *)(v15 + 128) = *(_QWORD *)(v16 + 128);
      *(_OWORD *)(v15 + 96) = v25;
      *(_OWORD *)(v15 + 112) = v24;
      *(_OWORD *)(v15 + 80) = v26;
    }
  }
  else if (v18)
  {
    *(_BYTE *)v15 = *(_BYTE *)v16;
    *(_BYTE *)(v15 + 1) = *(_BYTE *)(v16 + 1);
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
    *(_DWORD *)(v15 + 24) = *(_DWORD *)(v16 + 24);
    *(_DWORD *)(v15 + 28) = *(_DWORD *)(v16 + 28);
    *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
    *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
    *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
    *(_QWORD *)(v15 + 56) = *(_QWORD *)(v16 + 56);
    *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 72) = *(_QWORD *)(v16 + 72);
    *(_BYTE *)(v15 + 80) = *(_BYTE *)(v16 + 80);
    *(_QWORD *)(v15 + 88) = *(_QWORD *)(v16 + 88);
    *(_QWORD *)(v15 + 96) = *(_QWORD *)(v16 + 96);
    v20 = *(_QWORD *)(v16 + 104);
    *(_BYTE *)(v15 + 112) = *(_BYTE *)(v16 + 112);
    *(_QWORD *)(v15 + 104) = v20;
    *(_QWORD *)(v15 + 120) = *(_QWORD *)(v16 + 120);
    *(_QWORD *)(v15 + 128) = *(_QWORD *)(v16 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
    v27 = *(_OWORD *)(v16 + 16);
    v28 = *(_OWORD *)(v16 + 32);
    v29 = *(_OWORD *)(v16 + 64);
    *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
    *(_OWORD *)(v15 + 64) = v29;
    *(_OWORD *)(v15 + 16) = v27;
    *(_OWORD *)(v15 + 32) = v28;
    v30 = *(_OWORD *)(v16 + 80);
    v31 = *(_OWORD *)(v16 + 96);
    v32 = *(_OWORD *)(v16 + 112);
    *(_QWORD *)(v15 + 128) = *(_QWORD *)(v16 + 128);
    *(_OWORD *)(v15 + 96) = v31;
    *(_OWORD *)(v15 + 112) = v32;
    *(_OWORD *)(v15 + 80) = v30;
  }
  v33 = a3[8];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = a3[9];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_QWORD *)v37 = *(_QWORD *)(a2 + v36);
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(a2 + v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v37 + 16) = *(_QWORD *)(v38 + 16);
  *(_QWORD *)(v37 + 24) = *(_QWORD *)(v38 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v37 + 32) = *(_DWORD *)(v38 + 32);
  v39 = *(_QWORD *)(v38 + 40);
  *(_BYTE *)(v37 + 48) = *(_BYTE *)(v38 + 48);
  *(_QWORD *)(v37 + 40) = v39;
  v40 = *(_QWORD *)(v38 + 56);
  *(_BYTE *)(v37 + 64) = *(_BYTE *)(v38 + 64);
  *(_QWORD *)(v37 + 56) = v40;
  *(_BYTE *)(v37 + 65) = *(_BYTE *)(v38 + 65);
  *(_QWORD *)(v37 + 72) = *(_QWORD *)(v38 + 72);
  v41 = a3[10];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_QWORD *)v42 = *(_QWORD *)(a2 + v41);
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(a2 + v41 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v42 + 16) = *(_BYTE *)(v43 + 16);
  *(_BYTE *)(v42 + 17) = *(_BYTE *)(v43 + 17);
  v44 = a3[11];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_BYTE *)v45 = *(_BYTE *)(a2 + v44);
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(a2 + v44 + 8);
  *(_QWORD *)(v45 + 16) = *(_QWORD *)(a2 + v44 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 24) = *(_BYTE *)(v46 + 24);
  *(_BYTE *)(v45 + 25) = *(_BYTE *)(v46 + 25);
  *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
  *(_QWORD *)(v45 + 40) = *(_QWORD *)(v46 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 48) = *(_BYTE *)(v46 + 48);
  v47 = a3[12];
  v48 = a1 + v47;
  v49 = (__int128 *)(a2 + v47);
  v50 = *(_QWORD *)(a1 + v47 + 8);
  v51 = *((_QWORD *)v49 + 1);
  if (v50)
  {
    if (v51)
    {
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *(_QWORD *)(v48 + 8) = *((_QWORD *)v49 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v48 + 16) = *((_QWORD *)v49 + 2);
      *(_QWORD *)(v48 + 24) = *((_QWORD *)v49 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v48 + 32) = *((_BYTE *)v49 + 32);
    }
    else
    {
      sub_1D5801194(v48);
      v52 = *((_BYTE *)v49 + 32);
      v53 = v49[1];
      *(_OWORD *)v48 = *v49;
      *(_OWORD *)(v48 + 16) = v53;
      *(_BYTE *)(v48 + 32) = v52;
    }
  }
  else if (v51)
  {
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *(_QWORD *)(v48 + 8) = *((_QWORD *)v49 + 1);
    *(_QWORD *)(v48 + 16) = *((_QWORD *)v49 + 2);
    *(_QWORD *)(v48 + 24) = *((_QWORD *)v49 + 3);
    *(_BYTE *)(v48 + 32) = *((_BYTE *)v49 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v54 = *v49;
    v55 = v49[1];
    *(_BYTE *)(v48 + 32) = *((_BYTE *)v49 + 32);
    *(_OWORD *)v48 = v54;
    *(_OWORD *)(v48 + 16) = v55;
  }
  return a1;
}

uint64_t sub_1D5801194(uint64_t a1)
{
  destroy for IssueData();
  return a1;
}

uint64_t initializeWithTake for PuzzleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  v14 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v14;
  v15 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v15;
  v16 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v16;
  v17 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v17;
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v18 = a3[9];
  v19 = a3[10];
  v20 = (_OWORD *)(a1 + v18);
  v21 = (_OWORD *)(a2 + v18);
  v22 = v21[3];
  v20[2] = v21[2];
  v20[3] = v22;
  v20[4] = v21[4];
  v23 = v21[1];
  *v20 = *v21;
  v20[1] = v23;
  v24 = a1 + v19;
  v25 = a2 + v19;
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_WORD *)(v24 + 16) = *(_WORD *)(v25 + 16);
  v26 = a3[11];
  v27 = a3[12];
  v28 = a1 + v26;
  v29 = (__int128 *)(a2 + v26);
  v30 = *v29;
  v31 = v29[1];
  v32 = v29[2];
  *(_BYTE *)(v28 + 48) = *((_BYTE *)v29 + 48);
  *(_OWORD *)(v28 + 16) = v31;
  *(_OWORD *)(v28 + 32) = v32;
  *(_OWORD *)v28 = v30;
  v33 = a1 + v27;
  v34 = a2 + v27;
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(_BYTE *)(v33 + 32) = *(_BYTE *)(v34 + 32);
  return a1;
}

uint64_t assignWithTake for PuzzleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 16) == 1)
    goto LABEL_4;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10 == 1)
  {
    sub_1D57D9100(a1 + v7);
LABEL_4:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  if (*(_QWORD *)(a1 + v11 + 16))
  {
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      *(_WORD *)v12 = *(_WORD *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = v14;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v13 + 64);
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_QWORD *)(v12 + 64) = v15;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
      v16 = *(_QWORD *)(v13 + 96);
      *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 96) = v16;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E17B8(v12);
  }
  v17 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v17;
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  v18 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v18;
  v19 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v19;
  v20 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v20;
LABEL_11:
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a2 + v26 + 8);
  *(_QWORD *)v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(v27 + 8) = v29;
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v28 + 24);
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(v27 + 24) = v30;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v27 + 32) = *(_DWORD *)(v28 + 32);
  *(_QWORD *)(v27 + 40) = *(_QWORD *)(v28 + 40);
  *(_BYTE *)(v27 + 48) = *(_BYTE *)(v28 + 48);
  *(_QWORD *)(v27 + 56) = *(_QWORD *)(v28 + 56);
  *(_BYTE *)(v27 + 64) = *(_BYTE *)(v28 + 64);
  *(_BYTE *)(v27 + 65) = *(_BYTE *)(v28 + 65);
  *(_QWORD *)(v27 + 72) = *(_QWORD *)(v28 + 72);
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  v35 = a3[11];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_BYTE *)v36 = *(_BYTE *)(a2 + v35);
  v38 = *(_QWORD *)(a2 + v35 + 16);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(a2 + v35 + 8);
  *(_QWORD *)(v36 + 16) = v38;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 24) = *(_BYTE *)(v37 + 24);
  *(_BYTE *)(v36 + 25) = *(_BYTE *)(v37 + 25);
  v39 = *(_QWORD *)(v37 + 40);
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  *(_QWORD *)(v36 + 40) = v39;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 48) = *(_BYTE *)(v37 + 48);
  v40 = a3[12];
  v41 = a1 + v40;
  v42 = a2 + v40;
  if (!*(_QWORD *)(a1 + v40 + 8))
  {
LABEL_15:
    v45 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 16) = v45;
    goto LABEL_16;
  }
  v43 = *(_QWORD *)(v42 + 8);
  if (!v43)
  {
    sub_1D5801194(v41);
    goto LABEL_15;
  }
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_QWORD *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  v44 = *(_QWORD *)(v42 + 24);
  *(_QWORD *)(v41 + 16) = *(_QWORD *)(v42 + 16);
  *(_QWORD *)(v41 + 24) = v44;
  swift_bridgeObjectRelease();
LABEL_16:
  *(_BYTE *)(v41 + 32) = *(_BYTE *)(v42 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleShareEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58015F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleShareEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5801684(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5801700()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PuzzleShareEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D5801804 + 4 * byte_1D5AB352E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D5801838 + 4 * byte_1D5AB3529[v4]))();
}

uint64_t sub_1D5801838(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5801840(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5801848);
  return result;
}

uint64_t sub_1D5801854(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D580185CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D5801860(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5801868(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleShareEvent.Model.CodingKeys()
{
  return &type metadata for PuzzleShareEvent.Model.CodingKeys;
}

unint64_t sub_1D5801888()
{
  unint64_t result;

  result = qword_1EFF48418;
  if (!qword_1EFF48418)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB37C4, &type metadata for PuzzleShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48418);
  }
  return result;
}

unint64_t sub_1D58018D0()
{
  unint64_t result;

  result = qword_1EFF48420;
  if (!qword_1EFF48420)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3734, &type metadata for PuzzleShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48420);
  }
  return result;
}

unint64_t sub_1D5801918()
{
  unint64_t result;

  result = qword_1EFF48428;
  if (!qword_1EFF48428)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB375C, &type metadata for PuzzleShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48428);
  }
  return result;
}

uint64_t sub_1D580195C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AED410 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6144656C7A7A7570 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t SportsData.sportsTagList.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t SportsData.sportsTagList.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  return result;
}

uint64_t (*SportsData.sportsTagList.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5801D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x61547374726F7073 && a2 == 0xED00007473694C67)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5801E10()
{
  sub_1D57A6358();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5801E38()
{
  sub_1D57A6358();
  return sub_1D5AAEEE0();
}

uint64_t SportsData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D57A62B8(0, &qword_1EFF48430, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A6358();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5801F98();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1D5801F98()
{
  unint64_t result;

  result = qword_1EFF48438;
  if (!qword_1EFF48438)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsTagListData, &type metadata for SportsTagListData);
    atomic_store(result, (unint64_t *)&qword_1EFF48438);
  }
  return result;
}

uint64_t sub_1D5801FDC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SportsData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for SportsData.CodingKeys()
{
  return &type metadata for SportsData.CodingKeys;
}

unint64_t sub_1D5802004()
{
  unint64_t result;

  result = qword_1EFF48440;
  if (!qword_1EFF48440)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3984, &type metadata for SportsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48440);
  }
  return result;
}

uint64_t sub_1D5802048(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCB88, MEMORY[0x1E0CF8078]);
}

uint64_t static GroupExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCE50, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCB88, a1);
}

uint64_t sub_1D5802088(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CD780, MEMORY[0x1E0CF8380]);
}

uint64_t static GroupExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1ED9CCE58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD780, a1);
}

uint64_t GroupExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t GroupExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*GroupExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for GroupExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for GroupExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9D20);
}

uint64_t GroupExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.timedData.modify())()
{
  type metadata accessor for GroupExposureEvent(0);
  return nullsub_1;
}

uint64_t GroupExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GroupExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.groupData.modify())()
{
  type metadata accessor for GroupExposureEvent(0);
  return nullsub_1;
}

uint64_t GroupExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GroupExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.feedData.modify())()
{
  type metadata accessor for GroupExposureEvent(0);
  return nullsub_1;
}

uint64_t GroupExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GroupExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.viewData.modify())()
{
  type metadata accessor for GroupExposureEvent(0);
  return nullsub_1;
}

uint64_t GroupExposureEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GroupExposureEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.tagData.modify())()
{
  type metadata accessor for GroupExposureEvent(0);
  return nullsub_1;
}

uint64_t GroupExposureEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D58025FC()
{
  unint64_t result;

  result = qword_1ED9C8BB8;
  if (!qword_1ED9C8BB8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupSectionData, &type metadata for GroupSectionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8BB8);
  }
  return result;
}

unint64_t sub_1D5802640()
{
  unint64_t result;

  result = qword_1ED9C8BB0;
  if (!qword_1ED9C8BB0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupSectionData, &type metadata for GroupSectionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C8BB0);
  }
  return result;
}

uint64_t GroupExposureEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.sectionData.modify())()
{
  type metadata accessor for GroupExposureEvent(0);
  return nullsub_1;
}

uint64_t GroupExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GroupExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for GroupExposureEvent(0);
  return nullsub_1;
}

uint64_t GroupExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for GroupExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  v14 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v14, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
}

uint64_t GroupExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t GroupExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for GroupExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for GroupExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9C78);
}

uint64_t GroupExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22 = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  v23 = *(_QWORD *)(v3 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v3 + 128);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D5802B14((uint64_t)v16);
}

uint64_t sub_1D5802B14(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t GroupExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 28);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.sectionData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 40));
  *a1 = v3;
  return sub_1D5802C8C(v3);
}

uint64_t sub_1D5802C8C(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t GroupExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 44));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 GroupExposureEvent.Model.init(eventData:timedData:groupData:feedData:viewData:tagData:sectionData:userBundleSubscriptionContextData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 result;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  __n128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v45 = a3[6];
  v46 = a3[7];
  v47 = *((_QWORD *)a3 + 16);
  v41 = a3[2];
  v42 = a3[3];
  v43 = a3[4];
  v44 = a3[5];
  v39 = *a3;
  v40 = (__n128)a3[1];
  v12 = *a4;
  v13 = *((_QWORD *)a4 + 1);
  v14 = *((_QWORD *)a4 + 2);
  v15 = *a5;
  v16 = a5[1];
  v17 = *((_WORD *)a5 + 8);
  v28 = a6[1];
  v29 = *a6;
  v30 = *a7;
  v38 = *a8;
  v36 = *((_QWORD *)a8 + 2);
  v37 = *((_QWORD *)a8 + 1);
  v34 = a8[25];
  v35 = a8[24];
  v32 = *((_QWORD *)a8 + 5);
  v33 = *((_QWORD *)a8 + 4);
  v31 = a8[48];
  v18 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = (int *)type metadata accessor for GroupExposureEvent.Model(0);
  v20 = a9 + v19[5];
  v21 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = a9 + v19[6];
  *(_OWORD *)(v22 + 96) = v45;
  *(_OWORD *)(v22 + 112) = v46;
  *(_QWORD *)(v22 + 128) = v47;
  *(_OWORD *)(v22 + 32) = v41;
  *(_OWORD *)(v22 + 48) = v42;
  *(_OWORD *)(v22 + 64) = v43;
  *(_OWORD *)(v22 + 80) = v44;
  result = v40;
  *(_OWORD *)v22 = v39;
  *(__n128 *)(v22 + 16) = v40;
  v24 = a9 + v19[7];
  *(_BYTE *)v24 = v12;
  *(_QWORD *)(v24 + 8) = v13;
  *(_QWORD *)(v24 + 16) = v14;
  v25 = a9 + v19[8];
  *(_QWORD *)v25 = v15;
  *(_QWORD *)(v25 + 8) = v16;
  *(_WORD *)(v25 + 16) = v17;
  v26 = (_QWORD *)(a9 + v19[9]);
  *v26 = v29;
  v26[1] = v28;
  *(_QWORD *)(a9 + v19[10]) = v30;
  v27 = a9 + v19[11];
  *(_BYTE *)v27 = v38;
  *(_QWORD *)(v27 + 8) = v37;
  *(_QWORD *)(v27 + 16) = v36;
  *(_BYTE *)(v27 + 24) = v35;
  *(_BYTE *)(v27 + 25) = v34;
  *(_QWORD *)(v27 + 32) = v33;
  *(_QWORD *)(v27 + 40) = v32;
  *(_BYTE *)(v27 + 48) = v31;
  return result;
}

uint64_t sub_1D5802ED0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5802F08 + 4 * byte_1D5AB3A00[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5802F08()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5802F1C()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D5802F30()
{
  return 0x6174614464656566;
}

uint64_t sub_1D5802F58()
{
  return 0x61746144676174;
}

uint64_t sub_1D5802F70()
{
  return 0x446E6F6974636573;
}

unint64_t sub_1D5802F90()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5802FAC()
{
  unsigned __int8 *v0;

  return sub_1D5802ED0(*v0);
}

uint64_t sub_1D5802FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D580648C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D5802FD8(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1D5802FE4()
{
  sub_1D58033C4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D580300C()
{
  sub_1D58033C4();
  return sub_1D5AAEEE0();
}

uint64_t GroupExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v25;
  char v26;
  _BYTE v27[32];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;

  v3 = v1;
  sub_1D5803C0C(0, &qword_1EFF48448, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58033C4();
  sub_1D5AAEEC8();
  v27[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for GroupExposureEvent.Model(0);
    v35 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + v10[6];
    v12 = *(_OWORD *)(v11 + 112);
    v32 = *(_OWORD *)(v11 + 96);
    v33 = v12;
    v34 = *(_QWORD *)(v11 + 128);
    v13 = *(_OWORD *)(v11 + 48);
    v28 = *(_OWORD *)(v11 + 32);
    v29 = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v30 = *(_OWORD *)(v11 + 64);
    v31 = v14;
    v15 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v11;
    *(_OWORD *)&v27[16] = v15;
    v26 = 2;
    sub_1D57C5FEC();
    sub_1D5AAED6C();
    v16 = v3 + v10[7];
    v27[0] = *(_BYTE *)v16;
    *(_OWORD *)&v27[8] = *(_OWORD *)(v16 + 8);
    v26 = 3;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    v17 = (uint64_t *)(v3 + v10[8]);
    v18 = *v17;
    v19 = v17[1];
    LOWORD(v17) = *((_WORD *)v17 + 8);
    *(_QWORD *)v27 = v18;
    *(_QWORD *)&v27[8] = v19;
    *(_WORD *)&v27[16] = (_WORD)v17;
    v26 = 4;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    *(_OWORD *)v27 = *(_OWORD *)(v3 + v10[9]);
    v26 = 5;
    sub_1D57C6738();
    sub_1D5AAED18();
    *(_QWORD *)v27 = *(_QWORD *)(v3 + v10[10]);
    v26 = 6;
    sub_1D5802640();
    sub_1D5AAED18();
    v20 = v3 + v10[11];
    v21 = *(_BYTE *)(v20 + 24);
    v22 = *(_BYTE *)(v20 + 25);
    v23 = *(_BYTE *)(v20 + 48);
    v27[0] = *(_BYTE *)v20;
    *(_OWORD *)&v27[8] = *(_OWORD *)(v20 + 8);
    v27[24] = v21;
    v27[25] = v22;
    v28 = *(_OWORD *)(v20 + 32);
    LOBYTE(v29) = v23;
    v26 = 7;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58033C4()
{
  unint64_t result;

  result = qword_1ED9C9C60;
  if (!qword_1ED9C9C60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3C94, &type metadata for GroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C9C60);
  }
  return result;
}

uint64_t GroupExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[24];
  char v46;
  char v47;
  __int128 v48;
  char v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  char v60;

  v36[0] = a2;
  v40 = sub_1D5AADFB0();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5803C0C(0, &qword_1ED9CC800, MEMORY[0x1E0DED048]);
  v37 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v36 - v10;
  v43 = type metadata accessor for GroupExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v43);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D58033C4();
  v41 = v11;
  v15 = v44;
  sub_1D5AAEEB0();
  v36[1] = v5;
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  v44 = v9;
  LOBYTE(v50) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v16 = v13;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v13, v7, v5);
  LOBYTE(v50) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v17 = v40;
  sub_1D5AAECD0();
  v18 = (int *)v43;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v16[*(int *)(v43 + 20)], v4, v17);
  v60 = 2;
  sub_1D57C5FA8();
  sub_1D5AAECD0();
  v19 = (uint64_t)v16;
  v20 = &v16[v18[6]];
  v21 = v57;
  *((_OWORD *)v20 + 6) = v56;
  *((_OWORD *)v20 + 7) = v21;
  *((_QWORD *)v20 + 16) = v58;
  v22 = v53;
  *((_OWORD *)v20 + 2) = v52;
  *((_OWORD *)v20 + 3) = v22;
  v23 = v55;
  *((_OWORD *)v20 + 4) = v54;
  *((_OWORD *)v20 + 5) = v23;
  v24 = v51;
  *(_OWORD *)v20 = v50;
  *((_OWORD *)v20 + 1) = v24;
  v59 = 3;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v25 = (uint64_t)v42;
  v26 = v44;
  v27 = v19 + v18[7];
  *(_BYTE *)v27 = v45[0];
  *(_OWORD *)(v27 + 8) = *(_OWORD *)&v45[8];
  v59 = 4;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v28 = *(_QWORD *)&v45[8];
  v29 = *(_WORD *)&v45[16];
  v30 = v19 + v18[8];
  *(_QWORD *)v30 = *(_QWORD *)v45;
  *(_QWORD *)(v30 + 8) = v28;
  *(_WORD *)(v30 + 16) = v29;
  v59 = 5;
  sub_1D57C66F4();
  sub_1D5AAEC7C();
  *(_OWORD *)(v19 + v18[9]) = *(_OWORD *)v45;
  v59 = 6;
  sub_1D58025FC();
  sub_1D5AAEC7C();
  *(_QWORD *)(v19 + v18[10]) = *(_QWORD *)v45;
  v59 = 7;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v41, v37);
  v31 = v46;
  v32 = v47;
  v33 = v49;
  v34 = v19 + v18[11];
  *(_BYTE *)v34 = v45[0];
  *(_OWORD *)(v34 + 8) = *(_OWORD *)&v45[8];
  *(_BYTE *)(v34 + 24) = v31;
  *(_BYTE *)(v34 + 25) = v32;
  *(_OWORD *)(v34 + 32) = v48;
  *(_BYTE *)(v34 + 48) = v33;
  sub_1D5803D14(v19, v36[0]);
  __swift_destroy_boxed_opaque_existential_1(v25);
  return sub_1D5803D58(v19);
}

void sub_1D5803C0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58033C4();
    v7 = a3(a1, &type metadata for GroupExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5803C68(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D5803C78(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5803D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5803D58(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5803D94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5803DA8(_QWORD *a1)
{
  return GroupExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5803DBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCE50, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCB88, a1);
}

uint64_t sub_1D5803DE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1ED9CCE58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD780, a1);
}

uint64_t sub_1D5803E04@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  v15 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v15, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for GroupExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5804DF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for GroupExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5805008(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D580521C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C71A0, (void (*)(void))sub_1D58025FC, (void (*)(void))sub_1D5802640);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_WORD *)v14 = *(_WORD *)v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
    v17 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 5) = v17;
    v18 = *((_QWORD *)v15 + 7);
    *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 7) = v18;
    v19 = *((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
    *((_QWORD *)v14 + 9) = v19;
    v14[80] = v15[80];
    v20 = *((_QWORD *)v15 + 12);
    *((_QWORD *)v14 + 11) = *((_QWORD *)v15 + 11);
    *((_QWORD *)v14 + 12) = v20;
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    v14[112] = v15[112];
    v40 = *((_QWORD *)v15 + 16);
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    *((_QWORD *)v14 + 16) = v40;
    v21 = (char *)a1 + v13;
    v22 = (char *)a2 + v13;
    *v21 = *v22;
    v39 = *((_QWORD *)v22 + 2);
    *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
    *((_QWORD *)v21 + 2) = v39;
    v23 = a3[8];
    v24 = a3[9];
    v25 = (char *)a1 + v23;
    v26 = (char *)a2 + v23;
    v25[16] = v26[16];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v25[17] = v26[17];
    v28 = (uint64_t *)((char *)a1 + v24);
    v29 = (uint64_t *)((char *)a2 + v24);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v41 = a3[10];
    v31 = *(uint64_t *)((char *)a2 + v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31 != 1)
      swift_bridgeObjectRetain();
    *(uint64_t *)((char *)a1 + v41) = v31;
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    *v33 = *v34;
    v35 = *((_QWORD *)v34 + 2);
    *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
    *((_QWORD *)v33 + 2) = v35;
    *((_WORD *)v33 + 12) = *((_WORD *)v34 + 12);
    v36 = *((_QWORD *)v34 + 5);
    *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
    *((_QWORD *)v33 + 5) = v36;
    v33[48] = v34[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 40)) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  int *v40;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_WORD *)v13 = *(_WORD *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v16;
  v17 = *(_QWORD *)(v14 + 56);
  *(_QWORD *)(v13 + 48) = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 56) = v17;
  v18 = *(_QWORD *)(v14 + 72);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 72) = v18;
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  v19 = *(_QWORD *)(v14 + 96);
  *(_QWORD *)(v13 + 88) = *(_QWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 96) = v19;
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  v39 = *(_QWORD *)(v14 + 128);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  *(_QWORD *)(v13 + 128) = v39;
  v20 = a1 + v12;
  v21 = a2 + v12;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  v38 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = v38;
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
  v26 = *(_QWORD *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_QWORD *)(v24 + 8) = v26;
  *(_BYTE *)(v24 + 17) = *(_BYTE *)(v25 + 17);
  v27 = (_QWORD *)(a1 + v23);
  v28 = (_QWORD *)(a2 + v23);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v40 = a3;
  v30 = a3[10];
  v31 = *(_QWORD *)(a2 + v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31 != 1)
    swift_bridgeObjectRetain();
  *(_QWORD *)(a1 + v30) = v31;
  v32 = v40[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_BYTE *)v33 = *(_BYTE *)v34;
  v35 = *(_QWORD *)(v34 + 16);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
  *(_QWORD *)(v33 + 16) = v35;
  *(_WORD *)(v33 + 24) = *(_WORD *)(v34 + 24);
  v36 = *(_QWORD *)(v34 + 40);
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  *(_QWORD *)(v33 + 40) = v36;
  *(_BYTE *)(v33 + 48) = *(_BYTE *)(v34 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_BYTE *)(v12 + 1) = *(_BYTE *)(a2 + v11 + 1);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
  *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v13 + 104);
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  *(_BYTE *)(v19 + 17) = *(_BYTE *)(v20 + 17);
  v21 = a3[9];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[10];
  v25 = (uint64_t *)(a1 + v24);
  v26 = *(_QWORD *)(a2 + v24);
  if (*(_QWORD *)(a1 + v24) == 1)
  {
    if (v26 != 1)
    {
      *v25 = v26;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
    v27 = 1;
  }
  else
  {
    if (v26 != 1)
    {
      *v25 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    sub_1D5805C9C(a1 + v24);
    v27 = *(_QWORD *)(a2 + v24);
  }
  *v25 = v27;
LABEL_9:
  v28 = a3[11];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_BYTE *)v29 = *(_BYTE *)(a2 + v28);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(a2 + v28 + 8);
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(a2 + v28 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 24) = *(_BYTE *)(v30 + 24);
  *(_BYTE *)(v29 + 25) = *(_BYTE *)(v30 + 25);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 48) = *(_BYTE *)(v30 + 48);
  return a1;
}

uint64_t sub_1D5805C9C(uint64_t a1)
{
  destroy for GroupSectionData();
  return a1;
}

uint64_t initializeWithTake for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)(v13 + 128) = *(_QWORD *)(v14 + 128);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_WORD *)(v23 + 16) = *(_WORD *)(v24 + 16);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  v25 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_BYTE *)(v26 + 48) = *(_BYTE *)(v27 + 48);
  return a1;
}

uint64_t assignWithTake for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_WORD *)v12 = *(_WORD *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 64) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  v16 = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)v18 = *(_BYTE *)v19;
  v21 = *(_QWORD *)(v19 + 8);
  v20 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 8) = v21;
  *(_QWORD *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a2 + v22 + 8);
  *(_QWORD *)v23 = *(_QWORD *)(a2 + v22);
  *(_QWORD *)(v23 + 8) = v25;
  swift_bridgeObjectRelease();
  *(_WORD *)(v23 + 16) = *(_WORD *)(v24 + 16);
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[10];
  v32 = (_QWORD *)(a1 + v31);
  v33 = *(_QWORD *)(a2 + v31);
  if (*(_QWORD *)(a1 + v31) != 1)
  {
    if (v33 != 1)
    {
      *v32 = v33;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D5805C9C(a1 + v31);
    v33 = *(_QWORD *)(a2 + v31);
  }
  *v32 = v33;
LABEL_6:
  v34 = a3[11];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_BYTE *)v35 = *(_BYTE *)v36;
  v37 = *(_QWORD *)(v36 + 16);
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
  *(_QWORD *)(v35 + 16) = v37;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v35 + 24) = *(_BYTE *)(v36 + 24);
  *(_BYTE *)(v35 + 25) = *(_BYTE *)(v36 + 25);
  v38 = *(_QWORD *)(v36 + 40);
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
  *(_QWORD *)(v35 + 40) = v38;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v35 + 48) = *(_BYTE *)(v36 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5806038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58060F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1D5806198()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for GroupExposureEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5806334 + 4 * byte_1D5AB3A0D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D5806368 + 4 * byte_1D5AB3A08[v4]))();
}

uint64_t sub_1D5806368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5806370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5806378);
  return result;
}

uint64_t sub_1D5806384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D580638CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D5806390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5806398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroupExposureEvent.Model.CodingKeys()
{
  return &type metadata for GroupExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D58063B8()
{
  unint64_t result;

  result = qword_1EFF48450;
  if (!qword_1EFF48450)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3C6C, &type metadata for GroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48450);
  }
  return result;
}

unint64_t sub_1D5806400()
{
  unint64_t result;

  result = qword_1ED9C9C70;
  if (!qword_1ED9C9C70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3BDC, &type metadata for GroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C9C70);
  }
  return result;
}

unint64_t sub_1D5806448()
{
  unint64_t result;

  result = qword_1ED9C9C68;
  if (!qword_1ED9C9C68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3C04, &type metadata for GroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C9C68);
  }
  return result;
}

uint64_t sub_1D580648C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t PuzzleData.puzzleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleData.puzzleID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PuzzleData.puzzleID.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleData.puzzleTypeID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleData.puzzleTypeID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PuzzleData.puzzleTypeID.modify())()
{
  return nullsub_1;
}

void PuzzleData.progressInfo.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_BYTE *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_BYTE *)(v1 + 64);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
}

uint64_t PuzzleData.progressInfo.setter(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(result + 8);
  v3 = *(_BYTE *)(result + 16);
  v4 = *(_QWORD *)(result + 24);
  v5 = *(_BYTE *)(result + 32);
  *(_DWORD *)(v1 + 32) = *(_DWORD *)result;
  *(_QWORD *)(v1 + 40) = v2;
  *(_BYTE *)(v1 + 48) = v3;
  *(_QWORD *)(v1 + 56) = v4;
  *(_BYTE *)(v1 + 64) = v5;
  return result;
}

uint64_t (*PuzzleData.progressInfo.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleData.isPaid.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t PuzzleData.isPaid.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 65) = result;
  return result;
}

uint64_t (*PuzzleData.isPaid.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleData.difficulty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t PuzzleData.difficulty.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*PuzzleData.difficulty.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleData.init(puzzleID:puzzleTypeID:progressInfo:isPaid:difficulty:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int *a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  v8 = *a5;
  v9 = *((_QWORD *)a5 + 1);
  v10 = *((_BYTE *)a5 + 16);
  v11 = *((_QWORD *)a5 + 3);
  v12 = *((_BYTE *)a5 + 32);
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_DWORD *)(a8 + 32) = v8;
  *(_QWORD *)(a8 + 40) = v9;
  *(_BYTE *)(a8 + 48) = v10;
  *(_QWORD *)(a8 + 56) = v11;
  *(_BYTE *)(a8 + 64) = v12;
  *(_BYTE *)(a8 + 65) = a6;
  *(_QWORD *)(a8 + 72) = a7;
  return result;
}

uint64_t sub_1D58069C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58069F8 + 4 * byte_1D5AB3CE4[*v0]))(0x4449656C7A7A7570, 0xE800000000000000);
}

uint64_t sub_1D58069F8()
{
  return 0x7954656C7A7A7570;
}

uint64_t sub_1D5806A18()
{
  return 0x73736572676F7270;
}

uint64_t sub_1D5806A38()
{
  return 0x646961507369;
}

uint64_t sub_1D5806A4C()
{
  return 0x6C75636966666964;
}

uint64_t sub_1D5806A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5807484(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D5806A8C(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1D5806A98()
{
  sub_1D5806D00();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5806AC0()
{
  sub_1D5806D00();
  return sub_1D5AAEEE0();
}

uint64_t PuzzleData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  int v13;
  _QWORD v15[2];
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  int v29;
  char v30;

  sub_1D5807028(0, &qword_1EFF48458, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v15 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v21 = *(_QWORD *)(v1 + 24);
  v22 = v8;
  v29 = *(_DWORD *)(v1 + 32);
  v20 = *(_QWORD *)(v1 + 40);
  v19 = *(unsigned __int8 *)(v1 + 48);
  v18 = *(_QWORD *)(v1 + 56);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 64);
  v16 = *(unsigned __int8 *)(v1 + 65);
  v17 = v8;
  v15[1] = *(_QWORD *)(v1 + 72);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5806D00();
  sub_1D5AAEEC8();
  LOBYTE(v24) = 0;
  v9 = v23;
  sub_1D5AAED3C();
  if (!v9)
  {
    v10 = v18;
    v11 = v19;
    v12 = v20;
    v13 = v29;
    LOBYTE(v24) = 1;
    sub_1D5AAED3C();
    v24 = v13;
    v25 = v12;
    v26 = v11;
    v27 = v10;
    v28 = v17;
    v30 = 2;
    sub_1D57E3604();
    sub_1D5AAED6C();
    LOBYTE(v24) = 3;
    sub_1D5AAED48();
    LOBYTE(v24) = 4;
    sub_1D5AAED84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5806D00()
{
  unint64_t result;

  result = qword_1EFF48460;
  if (!qword_1EFF48460)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3E68, &type metadata for PuzzleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48460);
  }
  return result;
}

uint64_t PuzzleData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  unsigned __int8 v32;
  int v33;
  char v34;

  sub_1D5807028(0, &qword_1EFF48468, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5806D00();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v28) = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v27 = v10;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1D5AAECA0();
  v15 = v14;
  v25 = v13;
  v34 = 2;
  sub_1D57E35BC();
  swift_bridgeObjectRetain();
  v26 = v15;
  sub_1D5AAECD0();
  v33 = v28;
  v24 = v29;
  v23 = v30;
  v22 = v31;
  v21 = v32;
  LOBYTE(v28) = 3;
  v20 = sub_1D5AAECAC();
  LOBYTE(v28) = 4;
  v17 = sub_1D5AAECE8();
  v18 = v20 & 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = v26;
  *(_QWORD *)a2 = v27;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v33;
  *(_QWORD *)(a2 + 40) = v24;
  *(_BYTE *)(a2 + 48) = v23;
  *(_QWORD *)(a2 + 56) = v22;
  *(_BYTE *)(a2 + 64) = v21;
  *(_BYTE *)(a2 + 65) = v18;
  *(_QWORD *)(a2 + 72) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D5807028(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5806D00();
    v7 = a3(a1, &type metadata for PuzzleData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D580708C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleData.init(from:)(a1, a2);
}

uint64_t sub_1D58070A0(_QWORD *a1)
{
  return PuzzleData.encode(to:)(a1);
}

uint64_t initializeWithCopy for PuzzleData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for PuzzleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PuzzleData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D580732C + 4 * byte_1D5AB3CEE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5807360 + 4 * byte_1D5AB3CE9[v4]))();
}

uint64_t sub_1D5807360(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5807368(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5807370);
  return result;
}

uint64_t sub_1D580737C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5807384);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5807388(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5807390(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleData.CodingKeys()
{
  return &type metadata for PuzzleData.CodingKeys;
}

unint64_t sub_1D58073B0()
{
  unint64_t result;

  result = qword_1EFF48470;
  if (!qword_1EFF48470)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3E40, &type metadata for PuzzleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48470);
  }
  return result;
}

unint64_t sub_1D58073F8()
{
  unint64_t result;

  result = qword_1EFF48478;
  if (!qword_1EFF48478)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3DB0, &type metadata for PuzzleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48478);
  }
  return result;
}

unint64_t sub_1D5807440()
{
  unint64_t result;

  result = qword_1EFF48480;
  if (!qword_1EFF48480)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB3DD8, &type metadata for PuzzleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48480);
  }
  return result;
}

uint64_t sub_1D5807484(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449656C7A7A7570 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7954656C7A7A7570 && a2 == 0xEC00000044496570 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xEC0000006F666E49 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646961507369 && a2 == 0xE600000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C75636966666964 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

id Tracker.diagnosticSubmissionAllowed.getter()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_isDiagnosticSubmissionAllowed);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D5807730(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9D05C0, MEMORY[0x1E0CF8078]);
}

uint64_t static TodayFeedPoolLoadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D05E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D05C0, a1);
}

uint64_t sub_1D5807770(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9D05E8, MEMORY[0x1E0CF8380]);
}

uint64_t static TodayFeedPoolLoadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D0608, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D05E8, a1);
}

uint64_t TodayFeedPoolLoadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t TodayFeedPoolLoadEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TodayFeedPoolLoadEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.feedConfigData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for TodayFeedPoolLoadEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9D0610);
}

uint64_t TodayFeedPoolLoadEvent.feedConfigData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TodayFeedPoolLoadEvent.feedConfigData.modify())()
{
  type metadata accessor for TodayFeedPoolLoadEvent(0);
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.poolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5807978()
{
  unint64_t result;

  result = qword_1ED9CFC78;
  if (!qword_1ED9CFC78)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TodayFeedPoolData, &type metadata for TodayFeedPoolData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC78);
  }
  return result;
}

unint64_t sub_1D58079BC()
{
  unint64_t result;

  result = qword_1ED9CFC70;
  if (!qword_1ED9CFC70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TodayFeedPoolData, &type metadata for TodayFeedPoolData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC70);
  }
  return result;
}

uint64_t TodayFeedPoolLoadEvent.poolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TodayFeedPoolLoadEvent.poolData.modify())()
{
  type metadata accessor for TodayFeedPoolLoadEvent(0);
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.myArticlesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5807AF8()
{
  unint64_t result;

  result = qword_1ED9CE690[0];
  if (!qword_1ED9CE690[0])
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TodayFeedPoolMyArticlesData, &type metadata for TodayFeedPoolMyArticlesData);
    atomic_store(result, qword_1ED9CE690);
  }
  return result;
}

unint64_t sub_1D5807B3C()
{
  unint64_t result;

  result = qword_1ED9D09D8;
  if (!qword_1ED9D09D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TodayFeedPoolMyArticlesData, &type metadata for TodayFeedPoolMyArticlesData);
    atomic_store(result, (unint64_t *)&qword_1ED9D09D8);
  }
  return result;
}

uint64_t TodayFeedPoolLoadEvent.myArticlesData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TodayFeedPoolLoadEvent.myArticlesData.modify())()
{
  type metadata accessor for TodayFeedPoolLoadEvent(0);
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.groupingInventoryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5807C78()
{
  unint64_t result;

  result = qword_1ED9D0478;
  if (!qword_1ED9D0478)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupingInventoryData, &type metadata for GroupingInventoryData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0478);
  }
  return result;
}

unint64_t sub_1D5807CBC()
{
  unint64_t result;

  result = qword_1ED9D0470;
  if (!qword_1ED9D0470)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupingInventoryData, &type metadata for GroupingInventoryData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0470);
  }
  return result;
}

uint64_t TodayFeedPoolLoadEvent.groupingInventoryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TodayFeedPoolLoadEvent.groupingInventoryData.modify())()
{
  type metadata accessor for TodayFeedPoolLoadEvent(0);
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.articleScoreSummaryDataList.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5807DF8()
{
  unint64_t result;

  result = qword_1ED9D09B8;
  if (!qword_1ED9D09B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleScoreSummaryDataList, &type metadata for ArticleScoreSummaryDataList);
    atomic_store(result, (unint64_t *)&qword_1ED9D09B8);
  }
  return result;
}

unint64_t sub_1D5807E3C()
{
  unint64_t result;

  result = qword_1ED9D09B0;
  if (!qword_1ED9D09B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleScoreSummaryDataList, &type metadata for ArticleScoreSummaryDataList);
    atomic_store(result, (unint64_t *)&qword_1ED9D09B0);
  }
  return result;
}

uint64_t TodayFeedPoolLoadEvent.articleScoreSummaryDataList.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TodayFeedPoolLoadEvent.articleScoreSummaryDataList.modify())()
{
  type metadata accessor for TodayFeedPoolLoadEvent(0);
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *Event;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for TodayFeedPoolLoadEvent(0);
  v5 = a1 + Event[5];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + Event[6];
  sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + Event[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + Event[8];
  sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + Event[9];
  sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
}

uint64_t TodayFeedPoolLoadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t TodayFeedPoolLoadEvent.Model.feedConfigData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for TodayFeedPoolLoadEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF484F8);
}

uint64_t TodayFeedPoolLoadEvent.Model.poolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 24));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

__n128 TodayFeedPoolLoadEvent.Model.myArticlesData.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  __int128 v7;
  __n128 result;

  v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 48);
  v5 = *(_BYTE *)(v3 + 56);
  v6 = *(_BYTE *)(v3 + 57);
  v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v7;
  result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 57) = v6;
  return result;
}

uint64_t TodayFeedPoolLoadEvent.Model.groupingInventoryData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent.Model(0) + 32));
  return swift_bridgeObjectRetain();
}

uint64_t TodayFeedPoolLoadEvent.Model.articleScoreSummaryDataList.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent.Model(0) + 36));
  return swift_bridgeObjectRetain();
}

__n128 TodayFeedPoolLoadEvent.Model.init(eventData:feedConfigData:poolData:myArticlesData:groupingInventoryData:articleScoreSummaryDataList:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, __int128 *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 result;
  __int128 v23;
  char v24;
  __n128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v9 = *a2;
  v10 = a2[1];
  v11 = *((_BYTE *)a2 + 16);
  v23 = *(_OWORD *)(a2 + 3);
  v12 = a2[5];
  v13 = *a3;
  v14 = *((_BYTE *)a3 + 8);
  v26 = a4[1];
  v27 = *a4;
  v25 = (__n128)a4[2];
  v15 = *((_QWORD *)a4 + 6);
  v16 = *((_BYTE *)a4 + 56);
  v24 = *((_BYTE *)a4 + 57);
  v28 = *a5;
  v29 = *a6;
  v17 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v18 = (int *)type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
  v19 = a7 + v18[5];
  *(_QWORD *)v19 = v9;
  *(_QWORD *)(v19 + 8) = v10;
  *(_BYTE *)(v19 + 16) = v11;
  *(_OWORD *)(v19 + 24) = v23;
  *(_QWORD *)(v19 + 40) = v12;
  v20 = a7 + v18[6];
  *(_QWORD *)v20 = v13;
  *(_BYTE *)(v20 + 8) = v14;
  v21 = a7 + v18[7];
  *(_OWORD *)v21 = v27;
  *(_OWORD *)(v21 + 16) = v26;
  result = v25;
  *(__n128 *)(v21 + 32) = v25;
  *(_QWORD *)(v21 + 48) = v15;
  *(_BYTE *)(v21 + 56) = v16;
  *(_BYTE *)(v21 + 57) = v24;
  *(_QWORD *)(a7 + v18[8]) = v28;
  *(_QWORD *)(a7 + v18[9]) = v29;
  return result;
}

uint64_t sub_1D5808364(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D580839C + 4 * byte_1D5AB3EC0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D580839C()
{
  return 0x666E6F4364656566;
}

uint64_t sub_1D58083C0()
{
  return 0x617461446C6F6F70;
}

uint64_t sub_1D58083D8()
{
  return 0x6C6369747241796DLL;
}

unint64_t sub_1D5808400()
{
  return 0xD000000000000015;
}

unint64_t sub_1D580841C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1D580843C()
{
  unsigned __int8 *v0;

  return sub_1D5808364(*v0);
}

uint64_t sub_1D5808444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D580A780(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D5808468(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1D5808474()
{
  sub_1D580878C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D580849C()
{
  sub_1D580878C();
  return sub_1D5AAEEE0();
}

uint64_t TodayFeedPoolLoadEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  __int128 *v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 v22;
  _BYTE v23[32];
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v3 = v1;
  sub_1D5808C28(0, &qword_1EFF48488, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v23[-v8 - 16];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D580878C();
  sub_1D5AAEEC8();
  LOBYTE(v22) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *((_BYTE *)v11 + 16);
    v13 = *((_QWORD *)v11 + 5);
    v22 = *v11;
    v23[0] = v12;
    *(_OWORD *)&v23[8] = *(__int128 *)((char *)v11 + 24);
    *(_QWORD *)&v23[24] = v13;
    v27 = 1;
    sub_1D57CAA2C();
    sub_1D5AAED6C();
    v14 = (uint64_t *)(v3 + v10[6]);
    v15 = *v14;
    LOBYTE(v14) = *((_BYTE *)v14 + 8);
    *(_QWORD *)&v22 = v15;
    BYTE8(v22) = (_BYTE)v14;
    v27 = 2;
    sub_1D58079BC();
    sub_1D5AAED6C();
    v16 = (__int128 *)(v3 + v10[7]);
    v17 = *((_QWORD *)v16 + 6);
    v18 = *((_BYTE *)v16 + 56);
    v19 = *((_BYTE *)v16 + 57);
    v20 = v16[1];
    v22 = *v16;
    *(_OWORD *)v23 = v20;
    *(_OWORD *)&v23[16] = v16[2];
    v24 = v17;
    v25 = v18;
    v26 = v19;
    v27 = 3;
    sub_1D5807B3C();
    sub_1D5AAED18();
    *(_QWORD *)&v22 = *(_QWORD *)(v3 + v10[8]);
    v27 = 4;
    sub_1D5807CBC();
    sub_1D5AAED18();
    *(_QWORD *)&v22 = *(_QWORD *)(v3 + v10[9]);
    v27 = 5;
    sub_1D5807E3C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D580878C()
{
  unint64_t result;

  result = qword_1EFF48490;
  if (!qword_1EFF48490)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4104, &type metadata for TodayFeedPoolLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48490);
  }
  return result;
}

uint64_t TodayFeedPoolLoadEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  char v19;
  char *v20;
  uint64_t v21;
  char v22;
  char v23;
  char *v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  __int128 v33;
  _BYTE v34[32];
  uint64_t v35;
  char v36;
  char v37;
  char v38;

  v27 = a2;
  v3 = sub_1D5AADF98();
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5808C28(0, &qword_1EFF48498, MEMORY[0x1E0DED048]);
  v29 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  v9 = (int *)type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D580878C();
  v31 = v8;
  v12 = (uint64_t)v32;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v32 = a1;
  v14 = v28;
  LOBYTE(v33) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v29;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v30, v3);
  v38 = 1;
  sub_1D57CA9E8();
  sub_1D5AAECD0();
  v16 = v34[0];
  v17 = *(_QWORD *)&v34[24];
  v18 = &v11[v9[5]];
  *(_OWORD *)v18 = v33;
  v18[16] = v16;
  *(_OWORD *)(v18 + 24) = *(_OWORD *)&v34[8];
  *((_QWORD *)v18 + 5) = v17;
  v38 = 2;
  sub_1D5807978();
  sub_1D5AAECD0();
  v19 = BYTE8(v33);
  v20 = &v11[v9[6]];
  *(_QWORD *)v20 = v33;
  v20[8] = v19;
  v38 = 3;
  sub_1D5807AF8();
  sub_1D5AAEC7C();
  v21 = v35;
  v22 = v36;
  v23 = v37;
  v24 = &v11[v9[7]];
  v25 = *(_OWORD *)v34;
  *(_OWORD *)v24 = v33;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = *(_OWORD *)&v34[16];
  *((_QWORD *)v24 + 6) = v21;
  v24[56] = v22;
  v24[57] = v23;
  v38 = 4;
  sub_1D5807C78();
  sub_1D5AAEC7C();
  *(_QWORD *)&v11[v9[8]] = v33;
  v38 = 5;
  sub_1D5807DF8();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v31, v15);
  *(_QWORD *)&v11[v9[9]] = v33;
  sub_1D5808C84((uint64_t)v11, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1D5808CC8((uint64_t)v11);
}

void sub_1D5808C28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D580878C();
    v7 = a3(a1, &type metadata for TodayFeedPoolLoadEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5808C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5808CC8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5808D04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TodayFeedPoolLoadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5808D18(_QWORD *a1)
{
  return TodayFeedPoolLoadEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5808D2C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D05E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D05C0, a1);
}

uint64_t sub_1D5808D50@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D0608, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D05E8, a1);
}

uint64_t sub_1D5808D74@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for TodayFeedPoolLoadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for TodayFeedPoolLoadEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for TodayFeedPoolLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for TodayFeedPoolLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for TodayFeedPoolLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for TodayFeedPoolLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayFeedPoolLoadEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5809A28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TodayFeedPoolLoadEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5809BD8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5809D84()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CF170, (void (*)(void))sub_1D5807978, (void (*)(void))sub_1D58079BC);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9CF1B0, (void (*)(void))sub_1D5807AF8, (void (*)(void))sub_1D5807B3C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9CF190, (void (*)(void))sub_1D5807C78, (void (*)(void))sub_1D5807CBC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9CF1A8, (void (*)(void))sub_1D5807DF8, (void (*)(void))sub_1D5807E3C);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TodayFeedPoolLoadEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v10[16] = v11[16];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v15 = a3[7];
    v16 = a3[8];
    v17 = (_OWORD *)((char *)a1 + v15);
    v18 = (_OWORD *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v17[2] = v18[2];
    *(_OWORD *)((char *)v17 + 42) = *(_OWORD *)((char *)v18 + 42);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TodayFeedPoolLoadEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TodayFeedPoolLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_OWORD *)(a1 + v14);
  v17 = (_OWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v16[2] = v17[2];
  *(_OWORD *)((char *)v16 + 42) = *(_OWORD *)((char *)v17 + 42);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TodayFeedPoolLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = (_OWORD *)(a1 + v13);
  v15 = (__int128 *)(a2 + v13);
  v16 = *v15;
  v17 = v15[1];
  v18 = v15[2];
  *(_OWORD *)((char *)v14 + 42) = *(__int128 *)((char *)v15 + 42);
  v14[1] = v17;
  v14[2] = v18;
  *v14 = v16;
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TodayFeedPoolLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_OWORD *)(a1 + v14);
  v17 = (_OWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v16[2] = v17[2];
  *(_OWORD *)((char *)v16 + 42) = *(_OWORD *)((char *)v17 + 42);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for TodayFeedPoolLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = (_OWORD *)(a1 + v12);
  v16 = (_OWORD *)(a2 + v12);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v15[2] = v16[2];
  *(_OWORD *)((char *)v15 + 42) = *(_OWORD *)((char *)v16 + 42);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayFeedPoolLoadEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D580A438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayFeedPoolLoadEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D580A4D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_1D580A54C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TodayFeedPoolLoadEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D580A628 + 4 * byte_1D5AB3ECB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D580A65C + 4 * byte_1D5AB3EC6[v4]))();
}

uint64_t sub_1D580A65C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D580A664(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D580A66CLL);
  return result;
}

uint64_t sub_1D580A678(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D580A680);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D580A684(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D580A68C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TodayFeedPoolLoadEvent.Model.CodingKeys()
{
  return &type metadata for TodayFeedPoolLoadEvent.Model.CodingKeys;
}

unint64_t sub_1D580A6AC()
{
  unint64_t result;

  result = qword_1EFF48540;
  if (!qword_1EFF48540)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB40DC, &type metadata for TodayFeedPoolLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48540);
  }
  return result;
}

unint64_t sub_1D580A6F4()
{
  unint64_t result;

  result = qword_1EFF48548;
  if (!qword_1EFF48548)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB404C, &type metadata for TodayFeedPoolLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48548);
  }
  return result;
}

unint64_t sub_1D580A73C()
{
  unint64_t result;

  result = qword_1EFF48550;
  if (!qword_1EFF48550)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4074, &type metadata for TodayFeedPoolLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48550);
  }
  return result;
}

uint64_t sub_1D580A780(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x666E6F4364656566 && a2 == 0xEE00617461446769 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446C6F6F70 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6369747241796DLL && a2 == 0xEE00617461447365 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AED430 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5AED450)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

NewsAnalytics::SubscribeButtonLocation_optional __swiftcall SubscribeButtonLocation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SubscribeButtonLocation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SubscribeButtonLocation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D580AAA8 + 4 * byte_1D5AB4160[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D580AAA8()
{
  return 0x656C6369747261;
}

uint64_t sub_1D580AABC()
{
  return 0x466C656E6E616863;
}

uint64_t sub_1D580AADC()
{
  return 0x50676E69646E616CLL;
}

uint64_t sub_1D580AAFC()
{
  return 0x656E697A6167616DLL;
}

uint64_t sub_1D580AB1C()
{
  return 0x434F546575737369;
}

unint64_t sub_1D580AB34()
{
  return 0xD000000000000012;
}

uint64_t sub_1D580AB50()
{
  return 0x6565466F69647561;
}

uint64_t sub_1D580AB6C()
{
  return 0x656C7A7A7570;
}

uint64_t sub_1D580AB80()
{
  return 0x73614D7961646F74;
}

uint64_t sub_1D580ABA4()
{
  return 0x6575737349666470;
}

void sub_1D580ABBC(char *a1)
{
  sub_1D5A3777C(*a1);
}

unint64_t sub_1D580ABCC()
{
  unint64_t result;

  result = qword_1EFF48558;
  if (!qword_1EFF48558)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribeButtonLocation, &type metadata for SubscribeButtonLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF48558);
  }
  return result;
}

uint64_t sub_1D580AC10()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA82B4((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

void sub_1D580AC54(uint64_t a1)
{
  char *v1;

  sub_1D5AA82B4(a1, *v1);
}

uint64_t sub_1D580AC5C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA82B4((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

NewsAnalytics::SubscribeButtonLocation_optional sub_1D580AC9C(Swift::String *a1)
{
  return SubscribeButtonLocation.init(rawValue:)(*a1);
}

uint64_t sub_1D580ACA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SubscribeButtonLocation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D580ACCC()
{
  sub_1D580AE40();
  return sub_1D5AAE928();
}

uint64_t sub_1D580AD28()
{
  sub_1D580AE40();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D580ADC0 + 4 * byte_1D5AB4170[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D580ADF4 + 4 * byte_1D5AB416B[v4]))();
}

uint64_t sub_1D580ADF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D580ADFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D580AE04);
  return result;
}

uint64_t sub_1D580AE10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D580AE18);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D580AE1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D580AE24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonLocation()
{
  return &type metadata for SubscribeButtonLocation;
}

unint64_t sub_1D580AE40()
{
  unint64_t result;

  result = qword_1EFF48560;
  if (!qword_1EFF48560)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribeButtonLocation, &type metadata for SubscribeButtonLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF48560);
  }
  return result;
}

void FollowingData.followingType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *FollowingData.followingType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*FollowingData.followingType.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D580AEAC()
{
  return 0x6E69776F6C6C6F66;
}

uint64_t sub_1D580AED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E69776F6C6C6F66 && a2 == 0xED00006570795467)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D580AF88()
{
  sub_1D580B0DC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D580AFB0()
{
  sub_1D580B0DC();
  return sub_1D5AAEEE0();
}

uint64_t FollowingData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D580B29C(0, &qword_1ED9D0EB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D580B0DC();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D580B120();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D580B0DC()
{
  unint64_t result;

  result = qword_1ED9D0E08;
  if (!qword_1ED9D0E08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4430, &type metadata for FollowingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0E08);
  }
  return result;
}

unint64_t sub_1D580B120()
{
  unint64_t result;

  result = qword_1ED9D0E20;
  if (!qword_1ED9D0E20)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FollowingType, &type metadata for FollowingType);
    atomic_store(result, (unint64_t *)&qword_1ED9D0E20);
  }
  return result;
}

uint64_t FollowingData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D580B29C(0, &qword_1ED9D0EA0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D580B0DC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D580B2F8();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D580B29C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D580B0DC();
    v7 = a3(a1, &type metadata for FollowingData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D580B2F8()
{
  unint64_t result;

  result = qword_1ED9D0E30;
  if (!qword_1ED9D0E30)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FollowingType, &type metadata for FollowingType);
    atomic_store(result, (unint64_t *)&qword_1ED9D0E30);
  }
  return result;
}

uint64_t sub_1D580B33C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FollowingData.init(from:)(a1, a2);
}

uint64_t sub_1D580B350(_QWORD *a1)
{
  return FollowingData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FollowingData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D580B3B0 + 4 * byte_1D5AB42B9[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D580B3E4 + 4 * byte_1D5AB42B4[v4]))();
}

uint64_t sub_1D580B3E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D580B3EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D580B3F4);
  return result;
}

uint64_t sub_1D580B400(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D580B408);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D580B40C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D580B414(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for FollowingData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D580B460 + 4 * byte_1D5AB42BE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D580B480 + 4 * byte_1D5AB42C3[v4]))();
}

_BYTE *sub_1D580B460(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D580B480(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D580B488(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D580B490(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D580B498(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D580B4A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FollowingData.CodingKeys()
{
  return &type metadata for FollowingData.CodingKeys;
}

unint64_t sub_1D580B4C0()
{
  unint64_t result;

  result = qword_1EFF48568;
  if (!qword_1EFF48568)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4408, &type metadata for FollowingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48568);
  }
  return result;
}

unint64_t sub_1D580B508()
{
  unint64_t result;

  result = qword_1ED9D0E18;
  if (!qword_1ED9D0E18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4378, &type metadata for FollowingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0E18);
  }
  return result;
}

unint64_t sub_1D580B550()
{
  unint64_t result;

  result = qword_1ED9D0E10;
  if (!qword_1ED9D0E10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB43A0, &type metadata for FollowingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0E10);
  }
  return result;
}

uint64_t sub_1D580B594(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CDDC0, MEMORY[0x1E0CF8078]);
}

uint64_t static JourneyMessageExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1ED9CD880, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CDDC0, a1);
}

uint64_t sub_1D580B5D4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CDDD8, MEMORY[0x1E0CF8380]);
}

uint64_t static JourneyMessageExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CDDF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CDDD8, a1);
}

uint64_t JourneyMessageExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t JourneyMessageExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*JourneyMessageExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for JourneyMessageExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for JourneyMessageExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CDE00);
}

uint64_t JourneyMessageExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.timedData.modify())()
{
  type metadata accessor for JourneyMessageExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.viewData.modify())()
{
  type metadata accessor for JourneyMessageExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.articleData.modify())()
{
  type metadata accessor for JourneyMessageExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageExposureEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.tagData.modify())()
{
  type metadata accessor for JourneyMessageExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.feedData.modify())()
{
  type metadata accessor for JourneyMessageExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.dialogStyleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D580BB48()
{
  unint64_t result;

  result = qword_1ED9CD758;
  if (!qword_1ED9CD758)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DialogStyleData, &type metadata for DialogStyleData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD758);
  }
  return result;
}

unint64_t sub_1D580BB8C()
{
  unint64_t result;

  result = qword_1ED9CDA88;
  if (!qword_1ED9CDA88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DialogStyleData, &type metadata for DialogStyleData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA88);
  }
  return result;
}

uint64_t JourneyMessageExposureEvent.dialogStyleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.dialogStyleData.modify())()
{
  type metadata accessor for JourneyMessageExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageExposureEvent.placementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.placementData.modify())()
{
  type metadata accessor for JourneyMessageExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for JourneyMessageExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.engagementPlacementOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D580BEB8()
{
  unint64_t result;

  result = qword_1ED9D0AE8;
  if (!qword_1ED9D0AE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EngagementPlacementOriginationData, &type metadata for EngagementPlacementOriginationData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0AE8);
  }
  return result;
}

unint64_t sub_1D580BEFC()
{
  unint64_t result;

  result = qword_1ED9D0AE0;
  if (!qword_1ED9D0AE0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EngagementPlacementOriginationData, &type metadata for EngagementPlacementOriginationData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0AE0);
  }
  return result;
}

uint64_t JourneyMessageExposureEvent.engagementPlacementOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.engagementPlacementOriginationData.modify())()
{
  type metadata accessor for JourneyMessageExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D580C038()
{
  unint64_t result;

  result = qword_1ED9C7840;
  if (!qword_1ED9C7840)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseData, &type metadata for PurchaseData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7840);
  }
  return result;
}

unint64_t sub_1D580C07C()
{
  unint64_t result;

  result = qword_1ED9C7838;
  if (!qword_1ED9C7838)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseData, &type metadata for PurchaseData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7838);
  }
  return result;
}

uint64_t JourneyMessageExposureEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.purchaseData.modify())()
{
  type metadata accessor for JourneyMessageExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for JourneyMessageExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
}

uint64_t JourneyMessageExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t JourneyMessageExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for JourneyMessageExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for JourneyMessageExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF485E0);
}

uint64_t JourneyMessageExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for JourneyMessageExposureEvent.Model(0);
  sub_1D580C534(v1 + *(int *)(v3 + 28), (uint64_t)v5);
  sub_1D580C534((uint64_t)v5, a1);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t sub_1D580C534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D580C578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D580C578()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CE420)
  {
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CE420);
  }
}

uint64_t sub_1D580C5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t JourneyMessageExposureEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t JourneyMessageExposureEvent.Model.dialogStyleData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for JourneyMessageExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t JourneyMessageExposureEvent.Model.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 44);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 48));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageExposureEvent.Model.engagementPlacementOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for JourneyMessageExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t JourneyMessageExposureEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 56));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

__n128 JourneyMessageExposureEvent.Model.init(eventData:timedData:viewData:articleData:tagData:feedData:dialogStyleData:placementData:userBundleSubscriptionContextData:engagementPlacementOriginationData:purchaseData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, __int128 *a6@<X5>, char *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, uint64_t *a12)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 result;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  __int128 v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  _BYTE v55[144];

  v37 = a3[1];
  v38 = *a3;
  v36 = *((_WORD *)a3 + 8);
  sub_1D580C534(a4, (uint64_t)v55);
  v19 = *a5;
  v20 = a5[1];
  v39 = v19;
  v40 = *a6;
  v21 = *((_QWORD *)a6 + 2);
  v41 = *a7;
  v44 = (__n128)a8[1];
  v45 = *a8;
  v42 = *((_QWORD *)a8 + 5);
  v43 = *((_QWORD *)a8 + 4);
  v51 = *((_QWORD *)a10 + 2);
  v52 = *((_QWORD *)a10 + 1);
  v49 = a10[25];
  v50 = a10[24];
  v47 = *((_QWORD *)a10 + 5);
  v48 = *((_QWORD *)a10 + 4);
  v46 = a10[48];
  v53 = *a10;
  v54 = *a11;
  v22 = *a12;
  v23 = a12[1];
  v24 = *((_BYTE *)a12 + 16);
  v25 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a9, a1, v25);
  v26 = (int *)type metadata accessor for JourneyMessageExposureEvent.Model(0);
  v27 = a9 + v26[5];
  v28 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a2, v28);
  v29 = a9 + v26[6];
  *(_QWORD *)v29 = v38;
  *(_QWORD *)(v29 + 8) = v37;
  *(_WORD *)(v29 + 16) = v36;
  sub_1D580C534((uint64_t)v55, a9 + v26[7]);
  v30 = (_QWORD *)(a9 + v26[8]);
  *v30 = v39;
  v30[1] = v20;
  v31 = a9 + v26[9];
  *(_OWORD *)v31 = v40;
  *(_QWORD *)(v31 + 16) = v21;
  *(_BYTE *)(a9 + v26[10]) = v41;
  v32 = a9 + v26[11];
  result = v44;
  *(_OWORD *)v32 = v45;
  *(__n128 *)(v32 + 16) = v44;
  *(_QWORD *)(v32 + 32) = v43;
  *(_QWORD *)(v32 + 40) = v42;
  v34 = a9 + v26[12];
  *(_BYTE *)v34 = v53;
  *(_QWORD *)(v34 + 8) = v52;
  *(_QWORD *)(v34 + 16) = v51;
  *(_BYTE *)(v34 + 24) = v50;
  *(_BYTE *)(v34 + 25) = v49;
  *(_QWORD *)(v34 + 32) = v48;
  *(_QWORD *)(v34 + 40) = v47;
  *(_BYTE *)(v34 + 48) = v46;
  *(_BYTE *)(a9 + v26[13]) = v54;
  v35 = a9 + v26[14];
  *(_QWORD *)v35 = v22;
  *(_QWORD *)(v35 + 8) = v23;
  *(_BYTE *)(v35 + 16) = v24;
  return result;
}

uint64_t sub_1D580CA10(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D580CA48 + 4 * byte_1D5AB4480[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D580CA48()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D580CA5C()
{
  return 0x6174614477656976;
}

uint64_t sub_1D580CABC()
{
  return 0x7453676F6C616964;
}

uint64_t sub_1D580CAE0()
{
  return 0x6E656D6563616C70;
}

unint64_t sub_1D580CB04()
{
  return 0xD000000000000022;
}

uint64_t sub_1D580CB24()
{
  return 0x6573616863727570;
}

unint64_t sub_1D580CB44()
{
  return 0xD000000000000021;
}

uint64_t sub_1D580CB60()
{
  unsigned __int8 *v0;

  return sub_1D580CA10(*v0);
}

uint64_t sub_1D580CB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5810D88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D580CB8C()
{
  sub_1D580D04C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D580CBB4()
{
  sub_1D580D04C();
  return sub_1D5AAEEE0();
}

uint64_t JourneyMessageExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  char v27;
  _OWORD v28[2];
  __int128 v29;
  char v30;
  _BYTE v31[136];
  uint64_t v32;
  uint64_t v33;
  __int16 v34;

  v3 = v1;
  sub_1D580D908(0, &qword_1EFF48570, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D580D04C();
  sub_1D5AAEEC8();
  v31[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for JourneyMessageExposureEvent.Model(0);
    v31[0] = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (uint64_t *)(v3 + v10[6]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    v32 = v12;
    v33 = v13;
    v34 = (__int16)v11;
    v31[135] = 2;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    sub_1D580C534(v3 + v10[7], (uint64_t)v31);
    sub_1D580C534((uint64_t)v31, (uint64_t)v28);
    v27 = 3;
    sub_1D57CB940();
    sub_1D5AAED18();
    v28[0] = *(_OWORD *)(v3 + v10[8]);
    v27 = 4;
    sub_1D57C6738();
    sub_1D5AAED18();
    v14 = v3 + v10[9];
    v15 = *(_QWORD *)(v14 + 16);
    v28[0] = *(_OWORD *)v14;
    *(_QWORD *)&v28[1] = v15;
    v27 = 5;
    sub_1D57C65D4();
    sub_1D5AAED18();
    LOBYTE(v28[0]) = *(_BYTE *)(v3 + v10[10]);
    v27 = 6;
    sub_1D580BB8C();
    sub_1D5AAED6C();
    v16 = v3 + v10[11];
    v17 = *(_QWORD *)(v16 + 8);
    *(_QWORD *)&v28[0] = *(_QWORD *)v16;
    *((_QWORD *)&v28[0] + 1) = v17;
    v18 = *(_OWORD *)(v16 + 32);
    v28[1] = *(_OWORD *)(v16 + 16);
    v29 = v18;
    v27 = 7;
    sub_1D57C8654();
    sub_1D5AAED6C();
    v19 = v3 + v10[12];
    v20 = *(_BYTE *)(v19 + 24);
    v21 = *(_BYTE *)(v19 + 25);
    v22 = *(_BYTE *)(v19 + 48);
    LOBYTE(v28[0]) = *(_BYTE *)v19;
    *(_OWORD *)((char *)v28 + 8) = *(_OWORD *)(v19 + 8);
    BYTE8(v28[1]) = v20;
    BYTE9(v28[1]) = v21;
    v29 = *(_OWORD *)(v19 + 32);
    v30 = v22;
    v27 = 8;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    LOBYTE(v28[0]) = *(_BYTE *)(v3 + v10[13]);
    v27 = 9;
    sub_1D580BEFC();
    sub_1D5AAED18();
    v23 = v3 + v10[14];
    v24 = *(_BYTE *)(v23 + 16);
    v28[0] = *(_OWORD *)v23;
    LOBYTE(v28[1]) = v24;
    v27 = 10;
    sub_1D580C07C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D580D04C()
{
  unint64_t result;

  result = qword_1EFF48578;
  if (!qword_1EFF48578)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4794, &type metadata for JourneyMessageExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48578);
  }
  return result;
}

uint64_t JourneyMessageExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  __int16 v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;
  char *v29;
  char v30;
  uint64_t v31;
  char *v32;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  int *v44;
  _OWORD v45[2];
  __int128 v46;
  char v47;
  _BYTE v48[136];
  _QWORD v49[2];
  __int16 v50;
  char v51;
  char v52;

  v35 = a2;
  v39 = sub_1D5AADFB0();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D580D908(0, &qword_1EFF48580, MEMORY[0x1E0DED048]);
  v36 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v34 - v10;
  v44 = (int *)type metadata accessor for JourneyMessageExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D580D04C();
  v40 = v11;
  v14 = v42;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v42 = v9;
  LOBYTE(v49[0]) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v15 = v43;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v43, v7, v5);
  LOBYTE(v49[0]) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v16 = v39;
  sub_1D5AAECD0();
  v34[1] = v5;
  v17 = v44;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v15[v44[5]], v4, v16);
  v48[0] = 2;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v18 = v49[1];
  v19 = v50;
  v20 = &v15[v17[6]];
  *(_QWORD *)v20 = v49[0];
  *((_QWORD *)v20 + 1) = v18;
  *((_WORD *)v20 + 8) = v19;
  v52 = 3;
  sub_1D57CB8FC();
  sub_1D5AAEC7C();
  sub_1D580C534((uint64_t)v49, (uint64_t)v48);
  sub_1D580C534((uint64_t)v48, (uint64_t)&v15[v17[7]]);
  v51 = 4;
  sub_1D57C66F4();
  sub_1D5AAEC7C();
  *(_OWORD *)&v15[v17[8]] = v45[0];
  v51 = 5;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v21 = *(_QWORD *)&v45[1];
  v22 = &v15[v17[9]];
  *(_OWORD *)v22 = v45[0];
  *((_QWORD *)v22 + 2) = v21;
  v51 = 6;
  sub_1D580BB48();
  sub_1D5AAECD0();
  v15[v17[10]] = v45[0];
  v51 = 7;
  sub_1D57C8610();
  sub_1D5AAECD0();
  v23 = *((_QWORD *)&v45[0] + 1);
  v24 = &v15[v44[11]];
  *(_QWORD *)v24 = *(_QWORD *)&v45[0];
  *((_QWORD *)v24 + 1) = v23;
  v25 = v46;
  *((_OWORD *)v24 + 1) = v45[1];
  *((_OWORD *)v24 + 2) = v25;
  v51 = 8;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v26 = BYTE8(v45[1]);
  v27 = BYTE9(v45[1]);
  v28 = v47;
  v29 = &v15[v44[12]];
  *v29 = v45[0];
  *(_OWORD *)(v29 + 8) = *(_OWORD *)((char *)v45 + 8);
  v29[24] = v26;
  v29[25] = v27;
  *((_OWORD *)v29 + 2) = v46;
  v29[48] = v28;
  v51 = 9;
  sub_1D580BEB8();
  sub_1D5AAEC7C();
  v43[v44[13]] = v45[0];
  v51 = 10;
  sub_1D580C038();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v36);
  v30 = v45[1];
  v31 = (uint64_t)v43;
  v32 = &v43[v44[14]];
  *(_OWORD *)v32 = v45[0];
  v32[16] = v30;
  sub_1D580DA28(v31, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_1D580DA6C(v31);
}

void sub_1D580D908(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D580D04C();
    v7 = a3(a1, &type metadata for JourneyMessageExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D580D964(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(unsigned int *)(a1 + 128) | ((unint64_t)(*(unsigned __int16 *)(a1 + 132) | (*(unsigned __int8 *)(a1 + 134) << 16)) << 32));
  return a1;
}

uint64_t sub_1D580D9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D580DA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JourneyMessageExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D580DA6C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JourneyMessageExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D580DAA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return JourneyMessageExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D580DABC(_QWORD *a1)
{
  return JourneyMessageExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D580DAD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1ED9CD880, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CDDC0, a1);
}

uint64_t sub_1D580DAF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CDDF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CDDD8, a1);
}

uint64_t sub_1D580DB18@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v11, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for JourneyMessageExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for JourneyMessageExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
}

uint64_t initializeWithCopy for JourneyMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for JourneyMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for JourneyMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for JourneyMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for JourneyMessageExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D580F11C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                      v8 = v22;
                      v12 = *(_QWORD *)(v22 - 8);
                      v13 = a3[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D580F400(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                      v10 = v24;
                      v14 = *(_QWORD *)(v24 - 8);
                      v15 = a4[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D580F6E0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                      if (v10 <= 0x3F)
                        swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for JourneyMessageExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = *(_QWORD *)((char *)a2 + v13 + 24);
    swift_bridgeObjectRetain();
    if (v19)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      v17[8] = v18[8];
      *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
      *((_QWORD *)v17 + 3) = v19;
      v17[32] = v18[32];
      v20 = *((_QWORD *)v18 + 6);
      *((_QWORD *)v17 + 5) = *((_QWORD *)v18 + 5);
      *((_QWORD *)v17 + 6) = v20;
      *((_WORD *)v17 + 28) = *((_WORD *)v18 + 28);
      v22 = *((_QWORD *)v18 + 8);
      v21 = *((_QWORD *)v18 + 9);
      v17[80] = v18[80];
      *((_QWORD *)v17 + 8) = v22;
      *((_QWORD *)v17 + 9) = v21;
      *(_OWORD *)(v17 + 88) = *(_OWORD *)(v18 + 88);
      *((_QWORD *)v17 + 13) = *((_QWORD *)v18 + 13);
      v17[112] = v18[112];
      *((_QWORD *)v17 + 15) = *((_QWORD *)v18 + 15);
      *((_DWORD *)v17 + 32) = *((_DWORD *)v18 + 32);
      v17[132] = v18[132];
      *(_WORD *)(v17 + 133) = *(_WORD *)(v18 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *((_OWORD *)v18 + 7);
      *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
      *((_OWORD *)v17 + 7) = v24;
      *(_QWORD *)(v17 + 127) = *(_QWORD *)(v18 + 127);
      v25 = *((_OWORD *)v18 + 3);
      *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
      *((_OWORD *)v17 + 3) = v25;
      v26 = *((_OWORD *)v18 + 5);
      *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
      *((_OWORD *)v17 + 5) = v26;
      v27 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v27;
    }
    v28 = a3[8];
    v29 = a3[9];
    v30 = (_QWORD *)((char *)a1 + v28);
    v31 = (_QWORD *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (char *)a1 + v29;
    v34 = (char *)a2 + v29;
    v35 = *(_QWORD *)((char *)a2 + v29 + 16);
    swift_bridgeObjectRetain();
    if (v35 == 1)
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
    }
    else
    {
      *v33 = *v34;
      *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
      *((_QWORD *)v33 + 2) = v35;
      swift_bridgeObjectRetain();
    }
    v36 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v37 = (_QWORD *)((char *)a1 + v36);
    v38 = (_QWORD *)((char *)a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    v40 = v38[3];
    v37[2] = v38[2];
    v37[3] = v40;
    v41 = v38[5];
    v37[4] = v38[4];
    v37[5] = v41;
    v42 = a3[12];
    v43 = a3[13];
    v44 = (char *)a1 + v42;
    v45 = (char *)a2 + v42;
    *v44 = *v45;
    v46 = *((_QWORD *)v45 + 2);
    *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
    *((_QWORD *)v44 + 2) = v46;
    v44[24] = v45[24];
    v44[25] = v45[25];
    v47 = *((_QWORD *)v45 + 4);
    v48 = *((_QWORD *)v45 + 5);
    v44[48] = v45[48];
    LOBYTE(v45) = *((_BYTE *)a2 + v43);
    *((_QWORD *)v44 + 4) = v47;
    *((_QWORD *)v44 + 5) = v48;
    *((_BYTE *)a1 + v43) = (_BYTE)v45;
    v49 = a3[14];
    v50 = (char *)a1 + v49;
    v51 = (char *)a2 + v49;
    v52 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = v52;
    v50[16] = v51[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for JourneyMessageExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JourneyMessageExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v16 = a1 + v12;
  v17 = a2 + v12;
  v18 = *(_QWORD *)(a2 + v12 + 24);
  swift_bridgeObjectRetain();
  if (v18)
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
    *(_QWORD *)(v16 + 24) = v18;
    *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
    v19 = *(_QWORD *)(v17 + 48);
    *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
    *(_QWORD *)(v16 + 48) = v19;
    *(_WORD *)(v16 + 56) = *(_WORD *)(v17 + 56);
    v21 = *(_QWORD *)(v17 + 64);
    v20 = *(_QWORD *)(v17 + 72);
    *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
    *(_QWORD *)(v16 + 64) = v21;
    *(_QWORD *)(v16 + 72) = v20;
    *(_OWORD *)(v16 + 88) = *(_OWORD *)(v17 + 88);
    *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
    *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
    *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
    *(_DWORD *)(v16 + 128) = *(_DWORD *)(v17 + 128);
    *(_BYTE *)(v16 + 132) = *(_BYTE *)(v17 + 132);
    *(_WORD *)(v16 + 133) = *(_WORD *)(v17 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *(_OWORD *)(v17 + 112);
    *(_OWORD *)(v16 + 96) = *(_OWORD *)(v17 + 96);
    *(_OWORD *)(v16 + 112) = v22;
    *(_QWORD *)(v16 + 127) = *(_QWORD *)(v17 + 127);
    v23 = *(_OWORD *)(v17 + 48);
    *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
    *(_OWORD *)(v16 + 48) = v23;
    v24 = *(_OWORD *)(v17 + 80);
    *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
    *(_OWORD *)(v16 + 80) = v24;
    v25 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v25;
  }
  v26 = a3[8];
  v27 = a3[9];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a1 + v27;
  v32 = a2 + v27;
  v33 = *(_QWORD *)(a2 + v27 + 16);
  swift_bridgeObjectRetain();
  if (v33 == 1)
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  }
  else
  {
    *(_BYTE *)v31 = *(_BYTE *)v32;
    *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
    *(_QWORD *)(v31 + 16) = v33;
    swift_bridgeObjectRetain();
  }
  v34 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = v36[3];
  v35[2] = v36[2];
  v35[3] = v38;
  v39 = v36[5];
  v35[4] = v36[4];
  v35[5] = v39;
  v40 = a3[12];
  v41 = a3[13];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_BYTE *)v42 = *(_BYTE *)v43;
  v44 = *(_QWORD *)(v43 + 16);
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(v43 + 8);
  *(_QWORD *)(v42 + 16) = v44;
  *(_BYTE *)(v42 + 24) = *(_BYTE *)(v43 + 24);
  *(_BYTE *)(v42 + 25) = *(_BYTE *)(v43 + 25);
  v45 = *(_QWORD *)(v43 + 32);
  v46 = *(_QWORD *)(v43 + 40);
  *(_BYTE *)(v42 + 48) = *(_BYTE *)(v43 + 48);
  LOBYTE(v43) = *(_BYTE *)(a2 + v41);
  *(_QWORD *)(v42 + 32) = v45;
  *(_QWORD *)(v42 + 40) = v46;
  *(_BYTE *)(a1 + v41) = v43;
  v47 = a3[14];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = *(_QWORD *)(v49 + 8);
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_QWORD *)(v48 + 8) = v50;
  *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JourneyMessageExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_BYTE *)(v12 + 17) = *(_BYTE *)(v13 + 17);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a1 + v14 + 24);
  v18 = *(_QWORD *)(a2 + v14 + 24);
  if (v17)
  {
    if (v18)
    {
      *(_BYTE *)v15 = *(_BYTE *)v16;
      *(_DWORD *)(v15 + 4) = *(_DWORD *)(v16 + 4);
      *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
      *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
      v19 = *(_QWORD *)(v16 + 48);
      *(_BYTE *)(v15 + 56) = *(_BYTE *)(v16 + 56);
      *(_QWORD *)(v15 + 48) = v19;
      *(_BYTE *)(v15 + 57) = *(_BYTE *)(v16 + 57);
      *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v16 + 72);
      *(_BYTE *)(v15 + 80) = *(_BYTE *)(v16 + 80);
      *(_QWORD *)(v15 + 72) = v20;
      *(_QWORD *)(v15 + 88) = *(_QWORD *)(v16 + 88);
      *(_QWORD *)(v15 + 96) = *(_QWORD *)(v16 + 96);
      *(_QWORD *)(v15 + 104) = *(_QWORD *)(v16 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 112) = *(_BYTE *)(v16 + 112);
      *(_QWORD *)(v15 + 120) = *(_QWORD *)(v16 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 128) = *(_BYTE *)(v16 + 128);
      *(_BYTE *)(v15 + 129) = *(_BYTE *)(v16 + 129);
      *(_BYTE *)(v15 + 130) = *(_BYTE *)(v16 + 130);
      *(_BYTE *)(v15 + 131) = *(_BYTE *)(v16 + 131);
      *(_BYTE *)(v15 + 132) = *(_BYTE *)(v16 + 132);
      *(_BYTE *)(v15 + 133) = *(_BYTE *)(v16 + 133);
      *(_BYTE *)(v15 + 134) = *(_BYTE *)(v16 + 134);
    }
    else
    {
      sub_1D5810518(v15);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v23 = *(_OWORD *)(v16 + 64);
      v25 = *(_OWORD *)(v16 + 16);
      v24 = *(_OWORD *)(v16 + 32);
      *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
      *(_OWORD *)(v15 + 64) = v23;
      *(_OWORD *)(v15 + 16) = v25;
      *(_OWORD *)(v15 + 32) = v24;
      v27 = *(_OWORD *)(v16 + 96);
      v26 = *(_OWORD *)(v16 + 112);
      v28 = *(_OWORD *)(v16 + 80);
      *(_QWORD *)(v15 + 127) = *(_QWORD *)(v16 + 127);
      *(_OWORD *)(v15 + 96) = v27;
      *(_OWORD *)(v15 + 112) = v26;
      *(_OWORD *)(v15 + 80) = v28;
    }
  }
  else if (v18)
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
    *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
    *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
    *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
    v21 = *(_QWORD *)(v16 + 48);
    *(_BYTE *)(v15 + 56) = *(_BYTE *)(v16 + 56);
    *(_QWORD *)(v15 + 48) = v21;
    *(_BYTE *)(v15 + 57) = *(_BYTE *)(v16 + 57);
    *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
    v22 = *(_QWORD *)(v16 + 72);
    *(_BYTE *)(v15 + 80) = *(_BYTE *)(v16 + 80);
    *(_QWORD *)(v15 + 72) = v22;
    *(_QWORD *)(v15 + 88) = *(_QWORD *)(v16 + 88);
    *(_QWORD *)(v15 + 96) = *(_QWORD *)(v16 + 96);
    *(_QWORD *)(v15 + 104) = *(_QWORD *)(v16 + 104);
    *(_BYTE *)(v15 + 112) = *(_BYTE *)(v16 + 112);
    *(_QWORD *)(v15 + 120) = *(_QWORD *)(v16 + 120);
    *(_BYTE *)(v15 + 128) = *(_BYTE *)(v16 + 128);
    *(_BYTE *)(v15 + 129) = *(_BYTE *)(v16 + 129);
    *(_BYTE *)(v15 + 130) = *(_BYTE *)(v16 + 130);
    *(_BYTE *)(v15 + 131) = *(_BYTE *)(v16 + 131);
    *(_BYTE *)(v15 + 132) = *(_BYTE *)(v16 + 132);
    *(_BYTE *)(v15 + 133) = *(_BYTE *)(v16 + 133);
    *(_BYTE *)(v15 + 134) = *(_BYTE *)(v16 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
    v29 = *(_OWORD *)(v16 + 16);
    v30 = *(_OWORD *)(v16 + 32);
    v31 = *(_OWORD *)(v16 + 64);
    *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
    *(_OWORD *)(v15 + 64) = v31;
    *(_OWORD *)(v15 + 16) = v29;
    *(_OWORD *)(v15 + 32) = v30;
    v32 = *(_OWORD *)(v16 + 80);
    v33 = *(_OWORD *)(v16 + 96);
    v34 = *(_OWORD *)(v16 + 112);
    *(_QWORD *)(v15 + 127) = *(_QWORD *)(v16 + 127);
    *(_OWORD *)(v15 + 96) = v33;
    *(_OWORD *)(v15 + 112) = v34;
    *(_OWORD *)(v15 + 80) = v32;
  }
  v35 = a3[8];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[9];
  v39 = a1 + v38;
  v40 = (__int128 *)(a2 + v38);
  v41 = *(_QWORD *)(a1 + v38 + 16);
  v42 = *(_QWORD *)(a2 + v38 + 16);
  if (v41 == 1)
  {
    if (v42 == 1)
    {
      v43 = *v40;
      *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
      *(_OWORD *)v39 = v43;
    }
    else
    {
      *(_BYTE *)v39 = *(_BYTE *)v40;
      *(_QWORD *)(v39 + 8) = *((_QWORD *)v40 + 1);
      *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v42 == 1)
  {
    sub_1D57D9100(v39);
    v44 = *((_QWORD *)v40 + 2);
    *(_OWORD *)v39 = *v40;
    *(_QWORD *)(v39 + 16) = v44;
  }
  else
  {
    *(_BYTE *)v39 = *(_BYTE *)v40;
    *(_QWORD *)(v39 + 8) = *((_QWORD *)v40 + 1);
    *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v45 = a3[11];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  *v46 = *(_QWORD *)(a2 + v45);
  v46[1] = *(_QWORD *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46[2] = v47[2];
  v46[3] = v47[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46[4] = v47[4];
  v46[5] = v47[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = a3[12];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_BYTE *)v49 = *(_BYTE *)(a2 + v48);
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(a2 + v48 + 8);
  *(_QWORD *)(v49 + 16) = *(_QWORD *)(a2 + v48 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 24) = *(_BYTE *)(v50 + 24);
  *(_BYTE *)(v49 + 25) = *(_BYTE *)(v50 + 25);
  *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
  *(_QWORD *)(v49 + 40) = *(_QWORD *)(v50 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 48) = *(_BYTE *)(v50 + 48);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v51 = a3[14];
  v52 = a1 + v51;
  v53 = a2 + v51;
  *(_QWORD *)v52 = *(_QWORD *)(a2 + v51);
  *(_QWORD *)(v52 + 8) = *(_QWORD *)(a2 + v51 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v52 + 16) = *(_BYTE *)(v53 + 16);
  return a1;
}

uint64_t sub_1D5810518(uint64_t a1)
{
  destroy for ArticleData();
  return a1;
}

uint64_t initializeWithTake for JourneyMessageExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v15 = a1 + v12;
  v16 = a2 + v12;
  v17 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v15 + 48) = v17;
  v18 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 127) = *(_QWORD *)(v16 + 127);
  v19 = *(_OWORD *)(v16 + 112);
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(v16 + 96);
  *(_OWORD *)(v15 + 112) = v19;
  v20 = *(_OWORD *)(v16 + 80);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(v16 + 64);
  *(_OWORD *)(v15 + 80) = v20;
  v21 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  v24 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v25 = (_OWORD *)(a1 + v24);
  v26 = (_OWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  v28 = a3[12];
  v29 = a3[13];
  v30 = a1 + v28;
  v31 = a2 + v28;
  v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v33 = a3[14];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_BYTE *)(v34 + 16) = *(_BYTE *)(v35 + 16);
  return a1;
}

uint64_t assignWithTake for JourneyMessageExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  if (*(_QWORD *)(a1 + v15 + 24))
  {
    v18 = *(_QWORD *)(v17 + 24);
    if (v18)
    {
      *(_BYTE *)v16 = *(_BYTE *)v17;
      *(_DWORD *)(v16 + 4) = *(_DWORD *)(v17 + 4);
      *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
      *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
      *(_QWORD *)(v16 + 24) = v18;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
      v19 = *(_QWORD *)(v17 + 48);
      *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
      *(_QWORD *)(v16 + 48) = v19;
      *(_BYTE *)(v16 + 56) = *(_BYTE *)(v17 + 56);
      *(_BYTE *)(v16 + 57) = *(_BYTE *)(v17 + 57);
      *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
      *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
      *(_OWORD *)(v16 + 88) = *(_OWORD *)(v17 + 88);
      *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
      *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v16 + 128) = *(_BYTE *)(v17 + 128);
      *(_BYTE *)(v16 + 129) = *(_BYTE *)(v17 + 129);
      *(_BYTE *)(v16 + 130) = *(_BYTE *)(v17 + 130);
      *(_BYTE *)(v16 + 131) = *(_BYTE *)(v17 + 131);
      *(_BYTE *)(v16 + 132) = *(_BYTE *)(v17 + 132);
      *(_BYTE *)(v16 + 133) = *(_BYTE *)(v17 + 133);
      *(_BYTE *)(v16 + 134) = *(_BYTE *)(v17 + 134);
      goto LABEL_6;
    }
    sub_1D5810518(v16);
  }
  v20 = *(_OWORD *)(v17 + 112);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)(v17 + 96);
  *(_OWORD *)(v16 + 112) = v20;
  *(_QWORD *)(v16 + 127) = *(_QWORD *)(v17 + 127);
  v21 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v21;
  v22 = *(_OWORD *)(v17 + 80);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
  *(_OWORD *)(v16 + 80) = v22;
  v23 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v23;
LABEL_6:
  v24 = a3[8];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  if (*(_QWORD *)(a1 + v29 + 16) != 1)
  {
    v32 = *(_QWORD *)(v31 + 16);
    if (v32 != 1)
    {
      *(_BYTE *)v30 = *(_BYTE *)v31;
      *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
      *(_QWORD *)(v30 + 16) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57D9100(v30);
  }
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
LABEL_11:
  v33 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  v36 = *(_QWORD *)(a2 + v33);
  v37 = *(_QWORD *)(a2 + v33 + 8);
  *v34 = v36;
  v34[1] = v37;
  swift_bridgeObjectRelease();
  v38 = v35[3];
  v34[2] = v35[2];
  v34[3] = v38;
  swift_bridgeObjectRelease();
  v39 = v35[5];
  v34[4] = v35[4];
  v34[5] = v39;
  swift_bridgeObjectRelease();
  v40 = a3[12];
  v41 = a1 + v40;
  v42 = a2 + v40;
  *(_BYTE *)v41 = *(_BYTE *)(a2 + v40);
  v43 = *(_QWORD *)(a2 + v40 + 16);
  *(_QWORD *)(v41 + 8) = *(_QWORD *)(a2 + v40 + 8);
  *(_QWORD *)(v41 + 16) = v43;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v41 + 24) = *(_BYTE *)(v42 + 24);
  *(_BYTE *)(v41 + 25) = *(_BYTE *)(v42 + 25);
  v44 = *(_QWORD *)(v42 + 40);
  *(_QWORD *)(v41 + 32) = *(_QWORD *)(v42 + 32);
  *(_QWORD *)(v41 + 40) = v44;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v41 + 48) = *(_BYTE *)(v42 + 48);
  v45 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = *(_QWORD *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_QWORD *)(v46 + 8) = v48;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 16) = *(_BYTE *)(v47 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for JourneyMessageExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58109A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5810A60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5810B08()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JourneyMessageExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D5810C30 + 4 * byte_1D5AB4490[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D5810C64 + 4 * byte_1D5AB448B[v4]))();
}

uint64_t sub_1D5810C64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5810C6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5810C74);
  return result;
}

uint64_t sub_1D5810C80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5810C88);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D5810C8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5810C94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JourneyMessageExposureEvent.Model.CodingKeys()
{
  return &type metadata for JourneyMessageExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D5810CB4()
{
  unint64_t result;

  result = qword_1EFF48640;
  if (!qword_1EFF48640)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB476C, &type metadata for JourneyMessageExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48640);
  }
  return result;
}

unint64_t sub_1D5810CFC()
{
  unint64_t result;

  result = qword_1EFF48648;
  if (!qword_1EFF48648)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB46DC, &type metadata for JourneyMessageExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48648);
  }
  return result;
}

unint64_t sub_1D5810D44()
{
  unint64_t result;

  result = qword_1EFF48650;
  if (!qword_1EFF48650)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4704, &type metadata for JourneyMessageExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48650);
  }
  return result;
}

uint64_t sub_1D5810D88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7453676F6C616964 && a2 == 0xEF61746144656C79 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xED00006174614474 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001D5AED470 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

id SessionObserver.configurationManagerScienceExperimentFieldsDidChange(_:)(void *a1)
{
  void *v1;
  id result;
  id v3;
  uint64_t v4;
  id v5;

  result = objc_msgSend(a1, sel_configuration);
  if (result)
  {
    v3 = result;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v1;
    *(_QWORD *)(v4 + 24) = v3;
    v5 = v1;
    swift_unknownObjectRetain();
    sub_1D5AADB9C();
    swift_unknownObjectRelease();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D58113E4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF486C0, MEMORY[0x1E0CF8078]);
}

uint64_t static MediaViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F40, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF486C0, a1);
}

uint64_t sub_1D5811424(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF486D8, MEMORY[0x1E0CF8380]);
}

uint64_t static MediaViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F48, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF486D8, a1);
}

uint64_t MediaViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t MediaViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MediaViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for MediaViewEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for MediaViewEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C7E28);
}

uint64_t MediaViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.timedData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.articleData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.channelData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.groupData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.feedData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.mediaData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.viewData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.anfComponentData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5811C80()
{
  unint64_t result;

  result = qword_1ED9C76E0;
  if (!qword_1ED9C76E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GalleryData, &type metadata for GalleryData);
    atomic_store(result, (unint64_t *)&qword_1ED9C76E0);
  }
  return result;
}

unint64_t sub_1D5811CC4()
{
  unint64_t result;

  result = qword_1ED9C76D8;
  if (!qword_1ED9C76D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GalleryData, &type metadata for GalleryData);
    atomic_store(result, (unint64_t *)&qword_1ED9C76D8);
  }
  return result;
}

uint64_t MediaViewEvent.galleryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.galleryData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 56);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 56);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.issueData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.issueViewData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for MediaViewEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v12, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v12, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v12, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v12, v29);
}

uint64_t MediaViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t MediaViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for MediaViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for MediaViewEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C7D68);
}

uint64_t MediaViewEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t MediaViewEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *MediaViewEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for MediaViewEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t MediaViewEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t MediaViewEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 40));
  v4 = *v3;
  v6 = *((_QWORD *)v3 + 1);
  v5 = *((_QWORD *)v3 + 2);
  v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  return sub_1D57E8EF4(v4, v5);
}

uint64_t MediaViewEvent.Model.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 52);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_DWORD *)(v3 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 56));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 60));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t MediaViewEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 64));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

__n128 MediaViewEvent.Model.init(eventData:timedData:articleData:channelData:groupData:feedData:mediaData:viewData:anfComponentData:galleryData:userBundleSubscriptionContextData:issueData:issueViewData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, __int128 *a6@<X5>, char *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, __int128 *a11, char *a12, __n128 *a13, uint64_t *a14)
{
  uint64_t v19;
  char v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 *v38;
  __n128 result;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  __int16 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  int v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _BYTE v79[23];
  _BYTE v80[144];

  v78 = a3[6];
  *(_OWORD *)v79 = a3[7];
  *(_QWORD *)&v79[15] = *(_QWORD *)((char *)a3 + 127);
  v74 = a3[2];
  v75 = a3[3];
  v76 = a3[4];
  v77 = a3[5];
  v72 = *a3;
  v73 = a3[1];
  v45 = a4[1];
  v46 = *a4;
  v43 = *((_BYTE *)a4 + 17);
  v44 = *((_BYTE *)a4 + 16);
  v41 = a4[4];
  v42 = a4[3];
  sub_1D57DD5B8(a5, (uint64_t)v80);
  v48 = *a6;
  v19 = *((_QWORD *)a6 + 2);
  v20 = *a7;
  v50 = *((_QWORD *)a7 + 2);
  v51 = *((_QWORD *)a7 + 1);
  v49 = *((_DWORD *)a7 + 6);
  LOBYTE(a7) = a7[28];
  v54 = a8[1];
  v55 = *a8;
  v52 = v20;
  v53 = *((_WORD *)a8 + 8);
  v59 = a10[1];
  v60 = *a10;
  v58 = a10[2];
  v56 = *((_QWORD *)a10 + 7);
  v57 = *((_QWORD *)a10 + 6);
  v63 = *a11;
  v62 = *((_QWORD *)a11 + 2);
  v61 = *((_DWORD *)a11 + 6);
  v21 = *a12;
  v69 = *((_QWORD *)a12 + 2);
  v70 = *((_QWORD *)a12 + 1);
  v67 = a12[25];
  v68 = a12[24];
  v65 = *((_QWORD *)a12 + 5);
  v66 = *((_QWORD *)a12 + 4);
  v64 = a12[48];
  v71 = *a13;
  v23 = a13[1].n128_u64[0];
  v22 = a13[1].n128_u64[1];
  v24 = *a14;
  v25 = a14[1];
  v26 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a9, a1, v26);
  v27 = (int *)type metadata accessor for MediaViewEvent.Model(0);
  v28 = a9 + v27[5];
  v29 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, a2, v29);
  v30 = a9 + v27[6];
  *(_OWORD *)(v30 + 96) = v78;
  *(_OWORD *)(v30 + 112) = *(_OWORD *)v79;
  *(_QWORD *)(v30 + 127) = *(_QWORD *)&v79[15];
  *(_OWORD *)(v30 + 32) = v74;
  *(_OWORD *)(v30 + 48) = v75;
  *(_OWORD *)(v30 + 64) = v76;
  *(_OWORD *)(v30 + 80) = v77;
  *(_OWORD *)v30 = v72;
  *(_OWORD *)(v30 + 16) = v73;
  v31 = a9 + v27[7];
  *(_QWORD *)v31 = v46;
  *(_QWORD *)(v31 + 8) = v45;
  *(_BYTE *)(v31 + 16) = v44;
  *(_BYTE *)(v31 + 17) = v43;
  *(_QWORD *)(v31 + 24) = v42;
  *(_QWORD *)(v31 + 32) = v41;
  sub_1D57DD5B8((uint64_t)v80, a9 + v27[8]);
  v32 = a9 + v27[9];
  *(_OWORD *)v32 = v48;
  *(_QWORD *)(v32 + 16) = v19;
  v33 = a9 + v27[10];
  *(_BYTE *)v33 = v52;
  *(_QWORD *)(v33 + 8) = v51;
  *(_QWORD *)(v33 + 16) = v50;
  *(_DWORD *)(v33 + 24) = v49;
  *(_BYTE *)(v33 + 28) = (_BYTE)a7;
  v34 = a9 + v27[11];
  *(_QWORD *)v34 = v55;
  *(_QWORD *)(v34 + 8) = v54;
  *(_WORD *)(v34 + 16) = v53;
  v35 = a9 + v27[12];
  *(_OWORD *)v35 = v60;
  *(_OWORD *)(v35 + 16) = v59;
  *(_OWORD *)(v35 + 32) = v58;
  *(_QWORD *)(v35 + 48) = v57;
  *(_QWORD *)(v35 + 56) = v56;
  v36 = a9 + v27[13];
  *(_OWORD *)v36 = v63;
  *(_QWORD *)(v36 + 16) = v62;
  *(_DWORD *)(v36 + 24) = v61;
  v37 = a9 + v27[14];
  *(_BYTE *)v37 = v21;
  *(_QWORD *)(v37 + 8) = v70;
  *(_QWORD *)(v37 + 16) = v69;
  *(_BYTE *)(v37 + 24) = v68;
  *(_BYTE *)(v37 + 25) = v67;
  *(_QWORD *)(v37 + 32) = v66;
  *(_QWORD *)(v37 + 40) = v65;
  *(_BYTE *)(v37 + 48) = v64;
  v38 = (__n128 *)(a9 + v27[15]);
  result = v71;
  *v38 = v71;
  v38[1].n128_u64[0] = v23;
  v38[1].n128_u64[1] = v22;
  v40 = (_QWORD *)(a9 + v27[16]);
  *v40 = v24;
  v40[1] = v25;
  return result;
}

uint64_t sub_1D5812AFC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5812B34 + 4 * byte_1D5AB47F0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5812B34()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5812B48()
{
  return 0x44656C6369747261;
}

unint64_t sub_1D5812BFC()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5812C1C()
{
  return 0x7461446575737369;
}

uint64_t sub_1D5812C30()
{
  return 0x6569566575737369;
}

uint64_t sub_1D5812C54()
{
  unsigned __int8 *v0;

  return sub_1D5812AFC(*v0);
}

uint64_t sub_1D5812C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5818080(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D5812C80(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1D5812C8C()
{
  sub_1D581323C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5812CB4()
{
  sub_1D581323C();
  return sub_1D5AAEEE0();
}

uint64_t MediaViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  _OWORD *v43;
  __int128 v44;
  uint64_t v46;
  char v47;
  _OWORD v48[2];
  __int128 v49;
  __int128 v50;
  _OWORD v51[7];
  _BYTE v52[23];
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;

  v3 = v1;
  sub_1D5813D68(0, &qword_1EFF486F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v46 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D581323C();
  sub_1D5AAEEC8();
  LOBYTE(v51[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for MediaViewEvent.Model(0);
    v60 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + v10[6];
    v12 = *(_OWORD *)(v11 + 112);
    v51[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v52 = v12;
    *(_QWORD *)&v52[15] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    v51[2] = *(_OWORD *)(v11 + 32);
    v51[3] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v51[4] = *(_OWORD *)(v11 + 64);
    v51[5] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    v51[0] = *(_OWORD *)v11;
    v51[1] = v15;
    LOBYTE(v48[0]) = 2;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    v54 = v17;
    v55 = v18;
    v56 = v19;
    v57 = v20;
    v58 = v22;
    v59 = v21;
    v53 = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[8], (uint64_t)v51);
    sub_1D57DD5B8((uint64_t)v51, (uint64_t)v48);
    v47 = 4;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v23 = v3 + v10[9];
    v24 = *(_QWORD *)(v23 + 16);
    v48[0] = *(_OWORD *)v23;
    *(_QWORD *)&v48[1] = v24;
    v47 = 5;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v25 = (char *)(v3 + v10[10]);
    v26 = *v25;
    v27 = *((_QWORD *)v25 + 1);
    v28 = *((_QWORD *)v25 + 2);
    v29 = *((_DWORD *)v25 + 6);
    LOBYTE(v25) = v25[28];
    LOBYTE(v48[0]) = v26;
    *((_QWORD *)&v48[0] + 1) = v27;
    *(_QWORD *)&v48[1] = v28;
    DWORD2(v48[1]) = v29;
    BYTE12(v48[1]) = (_BYTE)v25;
    v47 = 6;
    sub_1D57E7E7C();
    sub_1D5AAED6C();
    v30 = (uint64_t *)(v3 + v10[11]);
    v31 = *v30;
    v32 = v30[1];
    LOWORD(v30) = *((_WORD *)v30 + 8);
    *(_QWORD *)&v48[0] = v31;
    *((_QWORD *)&v48[0] + 1) = v32;
    LOWORD(v48[1]) = (_WORD)v30;
    v47 = 7;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v33 = (_OWORD *)(v3 + v10[12]);
    v34 = v33[1];
    v48[0] = *v33;
    v48[1] = v34;
    v35 = v33[3];
    v49 = v33[2];
    v50 = v35;
    v47 = 8;
    sub_1D57E8274();
    sub_1D5AAED18();
    v36 = v3 + v10[13];
    v37 = *(_QWORD *)(v36 + 16);
    v38 = *(_DWORD *)(v36 + 24);
    v48[0] = *(_OWORD *)v36;
    *(_QWORD *)&v48[1] = v37;
    DWORD2(v48[1]) = v38;
    v47 = 9;
    sub_1D5811CC4();
    sub_1D5AAED18();
    v39 = v3 + v10[14];
    v40 = *(_BYTE *)(v39 + 24);
    v41 = *(_BYTE *)(v39 + 25);
    v42 = *(_BYTE *)(v39 + 48);
    LOBYTE(v48[0]) = *(_BYTE *)v39;
    *(_OWORD *)((char *)v48 + 8) = *(_OWORD *)(v39 + 8);
    BYTE8(v48[1]) = v40;
    BYTE9(v48[1]) = v41;
    v49 = *(_OWORD *)(v39 + 32);
    LOBYTE(v50) = v42;
    v47 = 10;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v43 = (_OWORD *)(v3 + v10[15]);
    v44 = v43[1];
    v48[0] = *v43;
    v48[1] = v44;
    v47 = 11;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v48[0] = *(_OWORD *)(v3 + v10[16]);
    v47 = 12;
    sub_1D57CAD6C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D581323C()
{
  unint64_t result;

  result = qword_1EFF486F8;
  if (!qword_1EFF486F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4B4C, &type metadata for MediaViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF486F8);
  }
  return result;
}

uint64_t MediaViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int v22;
  int v23;
  int *v24;
  char *v25;
  uint64_t v26;
  int *v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  char *v45;
  uint64_t v46;
  __int16 v47;
  char *v48;
  char *v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  int v53;
  char *v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  char *v59;
  uint64_t v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _OWORD v77[2];
  __int128 v78;
  __int128 v79;
  char v80;
  _BYTE v81[144];
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _BYTE v89[23];
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  _OWORD v97[3];
  int *v98;

  v67 = a2;
  v71 = sub_1D5AADFB0();
  v69 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v70 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5813D68(0, &qword_1EFF48700, MEMORY[0x1E0DED048]);
  v68 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v65 - v10;
  v98 = (int *)type metadata accessor for MediaViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v98);
  v76 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v74 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D581323C();
  v72 = v11;
  v14 = v75;
  sub_1D5AAEEB0();
  if (v14)
  {
    v75 = v14;
    LODWORD(v72) = 0;
    v15 = v76;
    result = __swift_destroy_boxed_opaque_existential_1(v74);
    v73 = 0;
    LODWORD(v74) = 0;
    v22 = 0;
    v23 = 0;
    v24 = v98;
    if ((_DWORD)v72)
      goto LABEL_5;
  }
  else
  {
    v66 = v9;
    LOBYTE(v90) = 0;
    sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v25 = v76;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v76, v7, v5);
    LOBYTE(v90) = 1;
    sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v26 = v71;
    sub_1D5AAECD0();
    v27 = v98;
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v25[v98[5]], v4, v26);
    v81[143] = 2;
    sub_1D57CB8FC();
    sub_1D5AAECD0();
    v28 = &v25[v27[6]];
    v29 = *(_OWORD *)v89;
    *((_OWORD *)v28 + 6) = v88;
    *((_OWORD *)v28 + 7) = v29;
    *(_QWORD *)(v28 + 127) = *(_QWORD *)&v89[15];
    v30 = v85;
    *((_OWORD *)v28 + 2) = v84;
    *((_OWORD *)v28 + 3) = v30;
    v31 = v87;
    *((_OWORD *)v28 + 4) = v86;
    *((_OWORD *)v28 + 5) = v31;
    v32 = v83;
    *(_OWORD *)v28 = v82;
    *((_OWORD *)v28 + 1) = v32;
    v81[0] = 3;
    sub_1D57CB874();
    sub_1D5AAECD0();
    v33 = *((_QWORD *)&v90 + 1);
    v34 = v91;
    v35 = BYTE1(v91);
    v36 = *((_QWORD *)&v91 + 1);
    v37 = v92;
    v38 = &v25[v27[7]];
    *(_QWORD *)v38 = v90;
    *((_QWORD *)v38 + 1) = v33;
    v38[16] = v34;
    v38[17] = v35;
    *((_QWORD *)v38 + 3) = v36;
    *((_QWORD *)v38 + 4) = v37;
    v81[142] = 4;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57DD5B8((uint64_t)&v90, (uint64_t)v81);
    sub_1D57DD5B8((uint64_t)v81, (uint64_t)&v25[v27[8]]);
    v80 = 5;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v39 = *(_QWORD *)&v77[1];
    v40 = &v25[v27[9]];
    *(_OWORD *)v40 = v77[0];
    *((_QWORD *)v40 + 2) = v39;
    v80 = 6;
    sub_1D57E7E38();
    sub_1D5AAECD0();
    v41 = *((_QWORD *)&v77[0] + 1);
    v42 = *(_QWORD *)&v77[1];
    v43 = DWORD2(v77[1]);
    v44 = BYTE12(v77[1]);
    v45 = &v25[v27[10]];
    *v45 = v77[0];
    *((_QWORD *)v45 + 1) = v41;
    *((_QWORD *)v45 + 2) = v42;
    *((_DWORD *)v45 + 6) = v43;
    v45[28] = v44;
    v80 = 7;
    sub_1D57C6260();
    sub_1D5AAECD0();
    v46 = *((_QWORD *)&v77[0] + 1);
    v47 = v77[1];
    v48 = &v25[v98[11]];
    *(_QWORD *)v48 = *(_QWORD *)&v77[0];
    *((_QWORD *)v48 + 1) = v46;
    *((_WORD *)v48 + 8) = v47;
    v80 = 8;
    sub_1D57E8230();
    sub_1D5AAEC7C();
    v49 = &v25[v98[12]];
    v50 = v77[1];
    *(_OWORD *)v49 = v77[0];
    *((_OWORD *)v49 + 1) = v50;
    v51 = v79;
    *((_OWORD *)v49 + 2) = v78;
    *((_OWORD *)v49 + 3) = v51;
    v80 = 9;
    sub_1D5811C80();
    sub_1D5AAEC7C();
    v73 = 1;
    v75 = 0;
    v52 = *(_QWORD *)&v77[1];
    v53 = DWORD2(v77[1]);
    v54 = &v76[v98[13]];
    *(_OWORD *)v54 = v77[0];
    *((_QWORD *)v54 + 2) = v52;
    *((_DWORD *)v54 + 6) = v53;
    v80 = 10;
    sub_1D57C6AF8();
    v55 = v75;
    sub_1D5AAECD0();
    v75 = v55;
    if (v55)
    {
      (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v68);
      __swift_destroy_boxed_opaque_existential_1(v74);
      v22 = 0;
      LODWORD(v74) = 0;
    }
    else
    {
      v56 = BYTE8(v77[1]);
      v57 = BYTE9(v77[1]);
      v58 = v79;
      v59 = &v76[v98[14]];
      *v59 = v77[0];
      *(_OWORD *)(v59 + 8) = *(_OWORD *)((char *)v77 + 8);
      v59[24] = v56;
      v59[25] = v57;
      *((_OWORD *)v59 + 2) = v78;
      v59[48] = v58;
      v80 = 11;
      sub_1D57C5ED8();
      v60 = v75;
      sub_1D5AAEC7C();
      v75 = v60;
      if (v60)
      {
        (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v68);
        __swift_destroy_boxed_opaque_existential_1(v74);
        LODWORD(v74) = 0;
        v22 = 1;
      }
      else
      {
        v61 = &v76[v98[15]];
        v62 = v77[1];
        *(_OWORD *)v61 = v77[0];
        *((_OWORD *)v61 + 1) = v62;
        v80 = 12;
        sub_1D57CAD28();
        v63 = v75;
        sub_1D5AAEC7C();
        v75 = v63;
        if (!v63)
        {
          (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v68);
          v64 = (uint64_t)v76;
          *(_OWORD *)&v76[v98[16]] = v77[0];
          sub_1D5813DC4(v64, v67);
          __swift_destroy_boxed_opaque_existential_1(v74);
          return sub_1D5813E08(v64);
        }
        (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v68);
        __swift_destroy_boxed_opaque_existential_1(v74);
        v22 = 1;
        LODWORD(v74) = 1;
      }
    }
    v15 = v76;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v76, v5);
    (*(void (**)(char *, uint64_t))(v69 + 8))(&v15[v98[5]], v71);
    LODWORD(v72) = 1;
    v23 = 1;
    v17 = &v15[v98[6]];
    v18 = *((_OWORD *)v17 + 7);
    v96 = *((_OWORD *)v17 + 6);
    v97[0] = v18;
    *(_QWORD *)((char *)v97 + 15) = *(_QWORD *)(v17 + 127);
    v19 = *((_OWORD *)v17 + 3);
    v92 = *((_OWORD *)v17 + 2);
    v93 = v19;
    v20 = *((_OWORD *)v17 + 5);
    v94 = *((_OWORD *)v17 + 4);
    v95 = v20;
    v21 = *((_OWORD *)v17 + 1);
    v90 = *(_OWORD *)v17;
    v91 = v21;
    sub_1D57D5AE0((uint64_t)&v90);
    v24 = v98;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D57DD5B8((uint64_t)&v15[v24[8]], (uint64_t)&v90);
    sub_1D57DE9C8(&v90, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
    sub_1D57DAEDC(*(_QWORD *)&v15[v24[9]], *(_QWORD *)&v15[v24[9] + 8], *(_QWORD *)&v15[v24[9] + 16]);
    result = swift_bridgeObjectRelease();
    if ((v72 & 1) != 0)
    {
LABEL_5:
      result = swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
        goto LABEL_6;
      goto LABEL_12;
    }
  }
  if (!v23)
  {
LABEL_6:
    if (v73)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  result = sub_1D57EA730(*(_QWORD *)&v15[v24[12]], *(_QWORD *)&v15[v24[12] + 8]);
  if ((v73 & 1) != 0)
  {
LABEL_7:
    result = swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      goto LABEL_8;
LABEL_14:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v74 & 1) == 0)
      return result;
    return sub_1D57EA700(*(_QWORD *)&v15[v24[15]], *(_QWORD *)&v15[v24[15] + 8]);
  }
LABEL_13:
  if (v22)
    goto LABEL_14;
LABEL_8:
  if (!(_DWORD)v74)
    return result;
  return sub_1D57EA700(*(_QWORD *)&v15[v24[15]], *(_QWORD *)&v15[v24[15] + 8]);
}

void sub_1D5813D68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D581323C();
    v7 = a3(a1, &type metadata for MediaViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5813DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5813E08(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5813E44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5813E58(_QWORD *a1)
{
  return MediaViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5813E6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F40, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF486C0, a1);
}

uint64_t sub_1D5813E90@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F48, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF486D8, a1);
}

uint64_t sub_1D5813EB4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v13, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v13, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v13, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v13, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v13, v30);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v56 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v56 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  }
  return a1;
}

uint64_t destroy for MediaViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
}

uint64_t initializeWithCopy for MediaViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  return a1;
}

uint64_t assignWithCopy for MediaViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

uint64_t initializeWithTake for MediaViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  return a1;
}

uint64_t assignWithTake for MediaViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58158C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                          v8 = v24;
                          v12 = *(_QWORD *)(v24 - 8);
                          v13 = a3[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MediaViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5815C34(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                          v10 = v26;
                          v14 = *(_QWORD *)(v26 - 8);
                          v15 = a4[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5815F9C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                          if (v12 <= 0x3F)
                            swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for MediaViewEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v79;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v16;
    v14[32] = v15[32];
    v17 = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 6) = v17;
    v14[56] = v15[56];
    v14[57] = v15[57];
    v18 = *((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
    *((_QWORD *)v14 + 9) = v18;
    v14[80] = v15[80];
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    v14[112] = v15[112];
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    *((_DWORD *)v14 + 32) = *((_DWORD *)v15 + 32);
    v14[132] = v15[132];
    *(_WORD *)(v14 + 133) = *(_WORD *)(v15 + 133);
    v19 = (char *)a1 + v13;
    v20 = (char *)a2 + v13;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    v22 = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 4) = v22;
    v23 = a3[8];
    v24 = (char *)a1 + v23;
    v79 = a2;
    v25 = (char *)a2 + v23;
    v26 = *((_QWORD *)v25 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26)
    {
      *(_WORD *)v24 = *(_WORD *)v25;
      *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
      *((_QWORD *)v24 + 2) = v26;
      *((_QWORD *)v24 + 3) = *((_QWORD *)v25 + 3);
      v27 = *((_QWORD *)v25 + 5);
      *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
      *((_QWORD *)v24 + 5) = v27;
      v28 = *((_QWORD *)v25 + 7);
      *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
      *((_QWORD *)v24 + 7) = v28;
      v29 = *((_QWORD *)v25 + 9);
      *((_QWORD *)v24 + 8) = *((_QWORD *)v25 + 8);
      *((_QWORD *)v24 + 9) = v29;
      v24[80] = v25[80];
      v30 = *((_QWORD *)v25 + 12);
      *((_QWORD *)v24 + 11) = *((_QWORD *)v25 + 11);
      *((_QWORD *)v24 + 12) = v30;
      *((_QWORD *)v24 + 13) = *((_QWORD *)v25 + 13);
      v24[112] = v25[112];
      v32 = *((_QWORD *)v25 + 15);
      v31 = *((_QWORD *)v25 + 16);
      *((_QWORD *)v24 + 15) = v32;
      *((_QWORD *)v24 + 16) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v34 = *((_OWORD *)v25 + 7);
      *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
      *((_OWORD *)v24 + 7) = v34;
      *((_QWORD *)v24 + 16) = *((_QWORD *)v25 + 16);
      v35 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v35;
      v36 = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
      *((_OWORD *)v24 + 5) = v36;
      v37 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v37;
    }
    v38 = a3[9];
    v39 = (char *)a1 + v38;
    v40 = (char *)v79 + v38;
    v41 = *((_QWORD *)v40 + 2);
    if (v41 == 1)
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
    }
    else
    {
      *v39 = *v40;
      *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
      *((_QWORD *)v39 + 2) = v41;
      swift_bridgeObjectRetain();
    }
    v42 = a3[10];
    v43 = a3[11];
    v44 = (char *)a1 + v42;
    v45 = (char *)v79 + v42;
    *v44 = *v45;
    v46 = *((_QWORD *)v45 + 2);
    *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
    *((_QWORD *)v44 + 2) = v46;
    *((_DWORD *)v44 + 6) = *((_DWORD *)v45 + 6);
    v44[28] = v45[28];
    v47 = (char *)a1 + v43;
    v48 = (char *)v79 + v43;
    v49 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *((_QWORD *)v47 + 1) = v49;
    v47[16] = v48[16];
    v47[17] = v48[17];
    v50 = a3[12];
    v51 = (_QWORD *)((char *)a1 + v50);
    v52 = (_QWORD *)((char *)v79 + v50);
    v53 = *(_QWORD *)((char *)v79 + v50 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53)
    {
      *v51 = *v52;
      v51[1] = v53;
      v54 = v52[3];
      v51[2] = v52[2];
      v51[3] = v54;
      v55 = v52[5];
      v51[4] = v52[4];
      v51[5] = v55;
      v56 = v52[6];
      v57 = v52[7];
      v51[6] = v56;
      v51[7] = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v58 = *((_OWORD *)v52 + 1);
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *((_OWORD *)v51 + 1) = v58;
      v59 = *((_OWORD *)v52 + 3);
      *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
      *((_OWORD *)v51 + 3) = v59;
    }
    v60 = a3[13];
    v61 = a3[14];
    v62 = (char *)a1 + v60;
    v63 = (char *)v79 + v60;
    *v62 = *v63;
    v64 = *((_QWORD *)v63 + 2);
    *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
    *((_QWORD *)v62 + 2) = v64;
    *((_DWORD *)v62 + 6) = *((_DWORD *)v63 + 6);
    v65 = (char *)a1 + v61;
    v66 = (char *)v79 + v61;
    *v65 = *v66;
    v67 = *((_QWORD *)v66 + 2);
    *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
    *((_QWORD *)v65 + 2) = v67;
    v65[24] = v66[24];
    v65[25] = v66[25];
    v68 = *((_QWORD *)v66 + 5);
    *((_QWORD *)v65 + 4) = *((_QWORD *)v66 + 4);
    *((_QWORD *)v65 + 5) = v68;
    v65[48] = v66[48];
    v69 = a3[15];
    v70 = (char *)a1 + v69;
    v71 = (char *)v79 + v69;
    v72 = *(_QWORD *)((char *)v79 + v69 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v72)
    {
      *(_QWORD *)v70 = *(_QWORD *)v71;
      *((_QWORD *)v70 + 1) = v72;
      *((_WORD *)v70 + 8) = *((_WORD *)v71 + 8);
      *((_QWORD *)v70 + 3) = *((_QWORD *)v71 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v73 = *((_OWORD *)v71 + 1);
      *(_OWORD *)v70 = *(_OWORD *)v71;
      *((_OWORD *)v70 + 1) = v73;
    }
    v74 = a3[16];
    v75 = (_QWORD *)((char *)a1 + v74);
    v76 = (_QWORD *)((char *)v79 + v74);
    v77 = v76[1];
    *v75 = *v76;
    v75[1] = v77;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MediaViewEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[9] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[12] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[15] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  int *v77;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 48) = v16;
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
  *(_BYTE *)(v13 + 57) = *(_BYTE *)(v14 + 57);
  v17 = *(_QWORD *)(v14 + 72);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 72) = v17;
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  *(_DWORD *)(v13 + 128) = *(_DWORD *)(v14 + 128);
  *(_BYTE *)(v13 + 132) = *(_BYTE *)(v14 + 132);
  *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
  v18 = a1 + v12;
  v19 = a2 + v12;
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  v21 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 32) = v21;
  v77 = a3;
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    *(_WORD *)v23 = *(_WORD *)v24;
    *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
    *(_QWORD *)(v23 + 16) = v25;
    *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
    v26 = *(_QWORD *)(v24 + 40);
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
    *(_QWORD *)(v23 + 40) = v26;
    v27 = *(_QWORD *)(v24 + 56);
    *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
    *(_QWORD *)(v23 + 56) = v27;
    v28 = *(_QWORD *)(v24 + 72);
    *(_QWORD *)(v23 + 64) = *(_QWORD *)(v24 + 64);
    *(_QWORD *)(v23 + 72) = v28;
    *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
    v29 = *(_QWORD *)(v24 + 96);
    *(_QWORD *)(v23 + 88) = *(_QWORD *)(v24 + 88);
    *(_QWORD *)(v23 + 96) = v29;
    *(_QWORD *)(v23 + 104) = *(_QWORD *)(v24 + 104);
    *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
    v30 = *(_QWORD *)(v24 + 120);
    v31 = *(_QWORD *)(v24 + 128);
    *(_QWORD *)(v23 + 120) = v30;
    *(_QWORD *)(v23 + 128) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v32 = *(_OWORD *)(v24 + 112);
    *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
    *(_OWORD *)(v23 + 112) = v32;
    *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
    v33 = *(_OWORD *)(v24 + 48);
    *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
    *(_OWORD *)(v23 + 48) = v33;
    v34 = *(_OWORD *)(v24 + 80);
    *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
    *(_OWORD *)(v23 + 80) = v34;
    v35 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v35;
  }
  v36 = v77[9];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(v38 + 16);
  if (v39 == 1)
  {
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *(_QWORD *)(v37 + 16) = *(_QWORD *)(v38 + 16);
  }
  else
  {
    *(_BYTE *)v37 = *(_BYTE *)v38;
    *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
    *(_QWORD *)(v37 + 16) = v39;
    swift_bridgeObjectRetain();
  }
  v40 = v77[10];
  v41 = v77[11];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_BYTE *)v42 = *(_BYTE *)v43;
  v44 = *(_QWORD *)(v43 + 16);
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(v43 + 8);
  *(_QWORD *)(v42 + 16) = v44;
  *(_DWORD *)(v42 + 24) = *(_DWORD *)(v43 + 24);
  *(_BYTE *)(v42 + 28) = *(_BYTE *)(v43 + 28);
  v45 = a1 + v41;
  v46 = a2 + v41;
  v47 = *(_QWORD *)(v46 + 8);
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_QWORD *)(v45 + 8) = v47;
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
  *(_BYTE *)(v45 + 17) = *(_BYTE *)(v46 + 17);
  v48 = v77[12];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  v51 = *(_QWORD *)(a2 + v48 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v51)
  {
    *v49 = *v50;
    v49[1] = v51;
    v52 = v50[3];
    v49[2] = v50[2];
    v49[3] = v52;
    v53 = v50[5];
    v49[4] = v50[4];
    v49[5] = v53;
    v54 = v50[6];
    v55 = v50[7];
    v49[6] = v54;
    v49[7] = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v56 = *((_OWORD *)v50 + 1);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *((_OWORD *)v49 + 1) = v56;
    v57 = *((_OWORD *)v50 + 3);
    *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
    *((_OWORD *)v49 + 3) = v57;
  }
  v58 = v77[13];
  v59 = v77[14];
  v60 = a1 + v58;
  v61 = a2 + v58;
  *(_BYTE *)v60 = *(_BYTE *)v61;
  v62 = *(_QWORD *)(v61 + 16);
  *(_QWORD *)(v60 + 8) = *(_QWORD *)(v61 + 8);
  *(_QWORD *)(v60 + 16) = v62;
  *(_DWORD *)(v60 + 24) = *(_DWORD *)(v61 + 24);
  v63 = a1 + v59;
  v64 = a2 + v59;
  *(_BYTE *)v63 = *(_BYTE *)v64;
  v65 = *(_QWORD *)(v64 + 16);
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(v64 + 8);
  *(_QWORD *)(v63 + 16) = v65;
  *(_BYTE *)(v63 + 24) = *(_BYTE *)(v64 + 24);
  *(_BYTE *)(v63 + 25) = *(_BYTE *)(v64 + 25);
  v66 = *(_QWORD *)(v64 + 40);
  *(_QWORD *)(v63 + 32) = *(_QWORD *)(v64 + 32);
  *(_QWORD *)(v63 + 40) = v66;
  *(_BYTE *)(v63 + 48) = *(_BYTE *)(v64 + 48);
  v67 = v77[15];
  v68 = a1 + v67;
  v69 = a2 + v67;
  v70 = *(_QWORD *)(a2 + v67 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v70)
  {
    *(_QWORD *)v68 = *(_QWORD *)v69;
    *(_QWORD *)(v68 + 8) = v70;
    *(_WORD *)(v68 + 16) = *(_WORD *)(v69 + 16);
    *(_QWORD *)(v68 + 24) = *(_QWORD *)(v69 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v71 = *(_OWORD *)(v69 + 16);
    *(_OWORD *)v68 = *(_OWORD *)v69;
    *(_OWORD *)(v68 + 16) = v71;
  }
  v72 = v77[16];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  v75 = v74[1];
  *v73 = *v74;
  v73[1] = v75;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(a2 + v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  v14 = *(_QWORD *)(v13 + 48);
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_QWORD *)(v12 + 48) = v14;
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 72) = v15;
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a1 + v19 + 16);
  v23 = *(_QWORD *)(a2 + v19 + 16);
  if (v22)
  {
    if (v23)
    {
      *(_BYTE *)v20 = *(_BYTE *)v21;
      *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
      *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
      *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
      *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
      *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
      *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
      *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
      *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v21 + 104);
      *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
      *(_QWORD *)(v20 + 104) = v24;
      *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v20);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v26 = *(_OWORD *)(v21 + 64);
      v28 = *(_OWORD *)(v21 + 16);
      v27 = *(_OWORD *)(v21 + 32);
      *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
      *(_OWORD *)(v20 + 64) = v26;
      *(_OWORD *)(v20 + 16) = v28;
      *(_OWORD *)(v20 + 32) = v27;
      v30 = *(_OWORD *)(v21 + 96);
      v29 = *(_OWORD *)(v21 + 112);
      v31 = *(_OWORD *)(v21 + 80);
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      *(_OWORD *)(v20 + 96) = v30;
      *(_OWORD *)(v20 + 112) = v29;
      *(_OWORD *)(v20 + 80) = v31;
    }
  }
  else if (v23)
  {
    *(_BYTE *)v20 = *(_BYTE *)v21;
    *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
    *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
    *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
    *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
    *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
    *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
    *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
    *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
    *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
    *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
    *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
    *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
    v25 = *(_QWORD *)(v21 + 104);
    *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
    *(_QWORD *)(v20 + 104) = v25;
    *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v32 = *(_OWORD *)(v21 + 16);
    v33 = *(_OWORD *)(v21 + 32);
    v34 = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 64) = v34;
    *(_OWORD *)(v20 + 16) = v32;
    *(_OWORD *)(v20 + 32) = v33;
    v35 = *(_OWORD *)(v21 + 80);
    v36 = *(_OWORD *)(v21 + 96);
    v37 = *(_OWORD *)(v21 + 112);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    *(_OWORD *)(v20 + 96) = v36;
    *(_OWORD *)(v20 + 112) = v37;
    *(_OWORD *)(v20 + 80) = v35;
  }
  v38 = a3[9];
  v39 = a1 + v38;
  v40 = (__int128 *)(a2 + v38);
  v41 = *(_QWORD *)(a1 + v38 + 16);
  v42 = *(_QWORD *)(a2 + v38 + 16);
  if (v41 == 1)
  {
    if (v42 == 1)
    {
      v43 = *v40;
      *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
      *(_OWORD *)v39 = v43;
    }
    else
    {
      *(_BYTE *)v39 = *(_BYTE *)v40;
      *(_QWORD *)(v39 + 8) = *((_QWORD *)v40 + 1);
      *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v42 == 1)
  {
    sub_1D57D9100(v39);
    v44 = *((_QWORD *)v40 + 2);
    *(_OWORD *)v39 = *v40;
    *(_QWORD *)(v39 + 16) = v44;
  }
  else
  {
    *(_BYTE *)v39 = *(_BYTE *)v40;
    *(_QWORD *)(v39 + 8) = *((_QWORD *)v40 + 1);
    *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v45 = a3[10];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)v46 = *(_BYTE *)(a2 + v45);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(a2 + v45 + 8);
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(a2 + v45 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = *(_DWORD *)(v47 + 24);
  *(_BYTE *)(v46 + 28) = *(_BYTE *)(v47 + 28);
  *(_DWORD *)(v46 + 24) = v48;
  v49 = a3[11];
  v50 = a1 + v49;
  v51 = a2 + v49;
  *(_QWORD *)v50 = *(_QWORD *)(a2 + v49);
  *(_QWORD *)(v50 + 8) = *(_QWORD *)(a2 + v49 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v50 + 16) = *(_BYTE *)(v51 + 16);
  *(_BYTE *)(v50 + 17) = *(_BYTE *)(v51 + 17);
  v52 = a3[12];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  v55 = *(_QWORD *)(a1 + v52 + 8);
  v56 = *(_QWORD *)(a2 + v52 + 8);
  if (v55)
  {
    if (v56)
    {
      *v53 = *v54;
      v53[1] = v54[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[2] = v54[2];
      v53[3] = v54[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[4] = v54[4];
      v53[5] = v54[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[6] = v54[6];
      v53[7] = v54[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE448((uint64_t)v53);
      v57 = *((_OWORD *)v54 + 3);
      v59 = *(_OWORD *)v54;
      v58 = *((_OWORD *)v54 + 1);
      *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
      *((_OWORD *)v53 + 3) = v57;
      *(_OWORD *)v53 = v59;
      *((_OWORD *)v53 + 1) = v58;
    }
  }
  else if (v56)
  {
    *v53 = *v54;
    v53[1] = v54[1];
    v53[2] = v54[2];
    v53[3] = v54[3];
    v53[4] = v54[4];
    v53[5] = v54[5];
    v53[6] = v54[6];
    v53[7] = v54[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v60 = *(_OWORD *)v54;
    v61 = *((_OWORD *)v54 + 1);
    v62 = *((_OWORD *)v54 + 3);
    *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
    *((_OWORD *)v53 + 3) = v62;
    *(_OWORD *)v53 = v60;
    *((_OWORD *)v53 + 1) = v61;
  }
  v63 = a3[13];
  v64 = a1 + v63;
  v65 = a2 + v63;
  *(_BYTE *)v64 = *(_BYTE *)(a2 + v63);
  *(_QWORD *)(v64 + 8) = *(_QWORD *)(a2 + v63 + 8);
  *(_QWORD *)(v64 + 16) = *(_QWORD *)(a2 + v63 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v64 + 24) = *(_DWORD *)(v65 + 24);
  v66 = a3[14];
  v67 = a1 + v66;
  v68 = a2 + v66;
  *(_BYTE *)v67 = *(_BYTE *)(a2 + v66);
  *(_QWORD *)(v67 + 8) = *(_QWORD *)(a2 + v66 + 8);
  *(_QWORD *)(v67 + 16) = *(_QWORD *)(a2 + v66 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v67 + 24) = *(_BYTE *)(v68 + 24);
  *(_BYTE *)(v67 + 25) = *(_BYTE *)(v68 + 25);
  *(_QWORD *)(v67 + 32) = *(_QWORD *)(v68 + 32);
  *(_QWORD *)(v67 + 40) = *(_QWORD *)(v68 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v67 + 48) = *(_BYTE *)(v68 + 48);
  v69 = a3[15];
  v70 = a1 + v69;
  v71 = a2 + v69;
  v72 = *(_QWORD *)(a1 + v69 + 8);
  v73 = *(_QWORD *)(a2 + v69 + 8);
  if (v72)
  {
    if (v73)
    {
      *(_QWORD *)v70 = *(_QWORD *)v71;
      *(_QWORD *)(v70 + 8) = *(_QWORD *)(v71 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v70 + 16) = *(_BYTE *)(v71 + 16);
      *(_BYTE *)(v70 + 17) = *(_BYTE *)(v71 + 17);
      *(_QWORD *)(v70 + 24) = *(_QWORD *)(v71 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v70);
      v74 = *(_OWORD *)(v71 + 16);
      *(_OWORD *)v70 = *(_OWORD *)v71;
      *(_OWORD *)(v70 + 16) = v74;
    }
  }
  else if (v73)
  {
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *(_QWORD *)(v70 + 8) = *(_QWORD *)(v71 + 8);
    *(_BYTE *)(v70 + 16) = *(_BYTE *)(v71 + 16);
    *(_BYTE *)(v70 + 17) = *(_BYTE *)(v71 + 17);
    *(_QWORD *)(v70 + 24) = *(_QWORD *)(v71 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v75 = *(_OWORD *)(v71 + 16);
    *(_OWORD *)v70 = *(_OWORD *)v71;
    *(_OWORD *)(v70 + 16) = v75;
  }
  v76 = a3[16];
  v77 = (_QWORD *)(a1 + v76);
  v78 = (_QWORD *)(a2 + v76);
  *v77 = *v78;
  v77[1] = v78[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MediaViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  _OWORD *v41;
  __int128 v42;
  __int128 v43;
  _OWORD *v44;
  __int128 *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 *v50;
  __int128 v51;
  __int128 v52;
  _OWORD *v53;
  _OWORD *v54;
  __int128 v55;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  *(_QWORD *)(v24 + 128) = *(_QWORD *)(v25 + 128);
  v27 = *(_OWORD *)(v25 + 112);
  *(_OWORD *)(v24 + 96) = *(_OWORD *)(v25 + 96);
  *(_OWORD *)(v24 + 112) = v27;
  v28 = *(_OWORD *)(v25 + 80);
  *(_OWORD *)(v24 + 64) = *(_OWORD *)(v25 + 64);
  *(_OWORD *)(v24 + 80) = v28;
  v29 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v29;
  v30 = a1 + v23;
  v31 = a2 + v23;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  v32 = a3[10];
  v33 = a3[11];
  v34 = (_OWORD *)(a1 + v32);
  v35 = (_OWORD *)(a2 + v32);
  *v34 = *v35;
  *(_OWORD *)((char *)v34 + 13) = *(_OWORD *)((char *)v35 + 13);
  v36 = a1 + v33;
  v37 = a2 + v33;
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_WORD *)(v36 + 16) = *(_WORD *)(v37 + 16);
  v38 = a3[12];
  v39 = a3[13];
  v40 = (_OWORD *)(a1 + v38);
  v41 = (_OWORD *)(a2 + v38);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = v41[3];
  v40[2] = v41[2];
  v40[3] = v43;
  v44 = (_OWORD *)(a1 + v39);
  v45 = (__int128 *)(a2 + v39);
  v46 = *v45;
  *(_OWORD *)((char *)v44 + 12) = *(__int128 *)((char *)v45 + 12);
  *v44 = v46;
  v47 = a3[14];
  v48 = a3[15];
  v49 = a1 + v47;
  v50 = (__int128 *)(a2 + v47);
  *(_BYTE *)(v49 + 48) = *((_BYTE *)v50 + 48);
  v51 = v50[2];
  v52 = *v50;
  *(_OWORD *)(v49 + 16) = v50[1];
  *(_OWORD *)(v49 + 32) = v51;
  *(_OWORD *)v49 = v52;
  v53 = (_OWORD *)(a1 + v48);
  v54 = (_OWORD *)(a2 + v48);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for MediaViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  v14 = *(_QWORD *)(a2 + v11 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  if (*(_QWORD *)(a1 + v21 + 16))
  {
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      *(_WORD *)v22 = *(_WORD *)v23;
      *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
      *(_QWORD *)(v22 + 16) = v24;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
      *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 48) = *(_QWORD *)(v23 + 48);
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)(v23 + 64);
      *(_QWORD *)(v22 + 56) = *(_QWORD *)(v23 + 56);
      *(_QWORD *)(v22 + 64) = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 72) = *(_QWORD *)(v23 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v22 + 80) = *(_BYTE *)(v23 + 80);
      v26 = *(_QWORD *)(v23 + 96);
      *(_QWORD *)(v22 + 88) = *(_QWORD *)(v23 + 88);
      *(_QWORD *)(v22 + 96) = v26;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 104) = *(_QWORD *)(v23 + 104);
      *(_BYTE *)(v22 + 112) = *(_BYTE *)(v23 + 112);
      *(_QWORD *)(v22 + 120) = *(_QWORD *)(v23 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E17B8(v22);
  }
  v27 = *(_OWORD *)(v23 + 112);
  *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 112) = v27;
  *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
  v28 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v28;
  v29 = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 80) = v29;
  v30 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v30;
LABEL_6:
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  if (*(_QWORD *)(a1 + v31 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
    goto LABEL_11;
  }
  v34 = *(_QWORD *)(v33 + 16);
  if (v34 == 1)
  {
    sub_1D57D9100(v32);
    goto LABEL_9;
  }
  *(_BYTE *)v32 = *(_BYTE *)v33;
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  swift_bridgeObjectRelease();
LABEL_11:
  v35 = a3[10];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_BYTE *)v36 = *(_BYTE *)(a2 + v35);
  v38 = *(_QWORD *)(a2 + v35 + 16);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(a2 + v35 + 8);
  *(_QWORD *)(v36 + 16) = v38;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v36 + 24) = *(_DWORD *)(v37 + 24);
  *(_BYTE *)(v36 + 28) = *(_BYTE *)(v37 + 28);
  v39 = a3[11];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)(a2 + v39 + 8);
  *(_QWORD *)v40 = *(_QWORD *)(a2 + v39);
  *(_QWORD *)(v40 + 8) = v42;
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 16) = *(_WORD *)(v41 + 16);
  v43 = a3[12];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(a2 + v43);
  if (*(_QWORD *)(a1 + v43 + 8))
  {
    v46 = v45[1];
    if (v46)
    {
      *v44 = *v45;
      v44[1] = v46;
      swift_bridgeObjectRelease();
      v47 = v45[3];
      v44[2] = v45[2];
      v44[3] = v47;
      swift_bridgeObjectRelease();
      v48 = v45[5];
      v44[4] = v45[4];
      v44[5] = v48;
      swift_bridgeObjectRelease();
      v49 = v45[7];
      v44[6] = v45[6];
      v44[7] = v49;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57EE448((uint64_t)v44);
  }
  v50 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v50;
  v51 = *((_OWORD *)v45 + 3);
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  *((_OWORD *)v44 + 3) = v51;
LABEL_16:
  v52 = a3[13];
  v53 = a1 + v52;
  v54 = a2 + v52;
  *(_BYTE *)v53 = *(_BYTE *)(a2 + v52);
  v55 = *(_QWORD *)(a2 + v52 + 16);
  *(_QWORD *)(v53 + 8) = *(_QWORD *)(a2 + v52 + 8);
  *(_QWORD *)(v53 + 16) = v55;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v53 + 24) = *(_DWORD *)(v54 + 24);
  v56 = a3[14];
  v57 = a1 + v56;
  v58 = a2 + v56;
  *(_BYTE *)v57 = *(_BYTE *)(a2 + v56);
  v59 = *(_QWORD *)(a2 + v56 + 16);
  *(_QWORD *)(v57 + 8) = *(_QWORD *)(a2 + v56 + 8);
  *(_QWORD *)(v57 + 16) = v59;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v57 + 24) = *(_BYTE *)(v58 + 24);
  *(_BYTE *)(v57 + 25) = *(_BYTE *)(v58 + 25);
  v60 = *(_QWORD *)(v58 + 40);
  *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
  *(_QWORD *)(v57 + 40) = v60;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v57 + 48) = *(_BYTE *)(v58 + 48);
  v61 = a3[15];
  v62 = a1 + v61;
  v63 = a2 + v61;
  if (!*(_QWORD *)(a1 + v61 + 8))
  {
LABEL_20:
    v65 = *(_OWORD *)(v63 + 16);
    *(_OWORD *)v62 = *(_OWORD *)v63;
    *(_OWORD *)(v62 + 16) = v65;
    goto LABEL_21;
  }
  v64 = *(_QWORD *)(v63 + 8);
  if (!v64)
  {
    sub_1D57EE47C(v62);
    goto LABEL_20;
  }
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *(_QWORD *)(v62 + 8) = v64;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v62 + 16) = *(_BYTE *)(v63 + 16);
  *(_BYTE *)(v62 + 17) = *(_BYTE *)(v63 + 17);
  *(_QWORD *)(v62 + 24) = *(_QWORD *)(v63 + 24);
  swift_bridgeObjectRelease();
LABEL_21:
  v66 = a3[16];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (uint64_t *)(a2 + v66);
  v70 = *v68;
  v69 = v68[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5817BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5817CB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D5817D5C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ViewType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D5817F28 + 4 * byte_1D5AB4802[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D5817F5C + 4 * byte_1D5AB47FD[v4]))();
}

uint64_t sub_1D5817F5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5817F64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5817F6CLL);
  return result;
}

uint64_t sub_1D5817F78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5817F80);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D5817F84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5817F8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaViewEvent.Model.CodingKeys()
{
  return &type metadata for MediaViewEvent.Model.CodingKeys;
}

unint64_t sub_1D5817FAC()
{
  unint64_t result;

  result = qword_1EFF48708;
  if (!qword_1EFF48708)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4B24, &type metadata for MediaViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48708);
  }
  return result;
}

unint64_t sub_1D5817FF4()
{
  unint64_t result;

  result = qword_1EFF48710;
  if (!qword_1EFF48710)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4A94, &type metadata for MediaViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48710);
  }
  return result;
}

unint64_t sub_1D581803C()
{
  unint64_t result;

  result = qword_1EFF48718;
  if (!qword_1EFF48718)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4ABC, &type metadata for MediaViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48718);
  }
  return result;
}

uint64_t sub_1D5818080(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AED300 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x447972656C6C6167 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t ErrorData.errorDomain.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ErrorData.errorDomain.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ErrorData.errorDomain.modify())()
{
  return nullsub_1;
}

uint64_t ErrorData.errorCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ErrorData.errorCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ErrorData.errorCode.modify())()
{
  return nullsub_1;
}

uint64_t ErrorData.errorDetails.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ErrorData.errorDetails.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ErrorData.errorDetails.modify())()
{
  return nullsub_1;
}

uint64_t ErrorData.init(errorDomain:errorCode:errorDetails:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1D5818758()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x646F43726F727265;
  if (*v0 != 1)
    v1 = 0x746544726F727265;
  if (*v0)
    return v1;
  else
    return 0x6D6F44726F727265;
}

uint64_t sub_1D58187C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5819214(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58187EC()
{
  sub_1D58189DC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5818814()
{
  sub_1D58189DC();
  return sub_1D5AAEEE0();
}

uint64_t ErrorData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;

  sub_1D5818D2C(0, &qword_1EFF48720, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  v8 = v1[2];
  v14 = v1[3];
  v15 = v8;
  v13 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58189DC();
  sub_1D5AAEEC8();
  v20 = 0;
  v9 = v16;
  sub_1D5AAECF4();
  if (!v9)
  {
    v10 = v13;
    v19 = 1;
    sub_1D5AAED3C();
    v17 = v10;
    v18 = 2;
    sub_1D5818A20();
    sub_1D5818D88(&qword_1EFF48738, (uint64_t (*)(void))sub_1D5818A74, MEMORY[0x1E0DEAF10]);
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58189DC()
{
  unint64_t result;

  result = qword_1EFF48728;
  if (!qword_1EFF48728)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4D14, &type metadata for ErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48728);
  }
  return result;
}

void sub_1D5818A20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF48730)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF48730);
  }
}

unint64_t sub_1D5818A74()
{
  unint64_t result;

  result = qword_1EFF48740;
  if (!qword_1EFF48740)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ErrorDetails, &type metadata for ErrorDetails);
    atomic_store(result, (unint64_t *)&qword_1EFF48740);
  }
  return result;
}

uint64_t ErrorData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;

  sub_1D5818D2C(0, &qword_1EFF48748, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58189DC();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v24 = 0;
    v10 = sub_1D5AAEC58();
    v13 = v12;
    v20 = v10;
    v23 = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1D5AAECA0();
    v16 = v15;
    v19 = v14;
    sub_1D5818A20();
    v22 = 2;
    sub_1D5818D88(&qword_1EFF48750, (uint64_t (*)(void))sub_1D5818DEC, MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v17 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v20;
    a2[1] = v13;
    a2[2] = v19;
    a2[3] = v16;
    a2[4] = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D5818D2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58189DC();
    v7 = a3(a1, &type metadata for ErrorData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5818D88(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D5818A20();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D5818DEC()
{
  unint64_t result;

  result = qword_1EFF48758;
  if (!qword_1EFF48758)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ErrorDetails, &type metadata for ErrorDetails);
    atomic_store(result, (unint64_t *)&qword_1EFF48758);
  }
  return result;
}

uint64_t sub_1D5818E38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ErrorData.init(from:)(a1, a2);
}

uint64_t sub_1D5818E4C(_QWORD *a1)
{
  return ErrorData.encode(to:)(a1);
}

uint64_t destroy for ArticleExposureContextData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ArticleExposureContextData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ArticleExposureContextData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ArticleExposureContextData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ErrorData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorData()
{
  return &type metadata for ErrorData;
}

uint64_t storeEnumTagSinglePayload for ErrorData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58190BC + 4 * byte_1D5AB4BA1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58190F0 + 4 * byte_1D5AB4B9C[v4]))();
}

uint64_t sub_1D58190F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58190F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5819100);
  return result;
}

uint64_t sub_1D581910C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5819114);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5819118(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5819120(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ErrorData.CodingKeys()
{
  return &type metadata for ErrorData.CodingKeys;
}

unint64_t sub_1D5819140()
{
  unint64_t result;

  result = qword_1EFF48760;
  if (!qword_1EFF48760)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4CEC, &type metadata for ErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48760);
  }
  return result;
}

unint64_t sub_1D5819188()
{
  unint64_t result;

  result = qword_1EFF48768;
  if (!qword_1EFF48768)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4C5C, &type metadata for ErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48768);
  }
  return result;
}

unint64_t sub_1D58191D0()
{
  unint64_t result;

  result = qword_1EFF48770;
  if (!qword_1EFF48770)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4C84, &type metadata for ErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48770);
  }
  return result;
}

uint64_t sub_1D5819214(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6F44726F727265 && a2 == 0xEB000000006E6961;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746544726F727265 && a2 == 0xEC000000736C6961)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t SearchResultsData.topicIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsData.topicIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SearchResultsData.topicIDs.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.channelIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsData.channelIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SearchResultsData.channelIDs.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.articleIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsData.articleIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SearchResultsData.articleIDs.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.topResultTagID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.topResultTagID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SearchResultsData.topResultTagID.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.topResultArticleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.topResultArticleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*SearchResultsData.topResultArticleID.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.totalResults.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 56);
}

uint64_t SearchResultsData.totalResults.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 56) = result;
  return result;
}

uint64_t (*SearchResultsData.totalResults.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.completedString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.completedString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*SearchResultsData.completedString.modify())()
{
  return nullsub_1;
}

void SearchResultsData.resultsSource.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 80);
}

_BYTE *SearchResultsData.resultsSource.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = *result;
  return result;
}

uint64_t (*SearchResultsData.resultsSource.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.clientLatency.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.clientLatency.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*SearchResultsData.clientLatency.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.serverLatency.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.serverLatency.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return result;
}

uint64_t (*SearchResultsData.serverLatency.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.serverProcessingLatency.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.serverProcessingLatency.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return result;
}

uint64_t (*SearchResultsData.serverProcessingLatency.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.sportTagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsData.sportTagIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 136) = a1;
  return result;
}

uint64_t (*SearchResultsData.sportTagIDs.modify())()
{
  return nullsub_1;
}

__n128 SearchResultsData.init(topicIDs:channelIDs:articleIDs:topResultTagID:topResultArticleID:totalResults:completedString:resultsSource:clientLatency:serverLatency:serverProcessingLatency:sportTagIDs:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char *a12, __int128 a13, __int128 a14, __n128 a15, uint64_t a16)
{
  __n128 result;
  char v17;

  result = a15;
  v17 = *a12;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_DWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  *(_BYTE *)(a9 + 80) = v17;
  *(_OWORD *)(a9 + 88) = a13;
  *(_OWORD *)(a9 + 104) = a14;
  *(__n128 *)(a9 + 120) = a15;
  *(_QWORD *)(a9 + 136) = a16;
  return result;
}

uint64_t sub_1D58197D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D581980C + 4 * byte_1D5AB4D70[a1]))(0x7344496369706F74, 0xE800000000000000);
}

uint64_t sub_1D581980C()
{
  return 0x496C656E6E616863;
}

uint64_t sub_1D581983C()
{
  return 0x6C75736552706F74;
}

unint64_t sub_1D5819860()
{
  return 0xD000000000000012;
}

uint64_t sub_1D581987C()
{
  return 0x7365526C61746F74;
}

uint64_t sub_1D581989C()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_1D58198C0()
{
  return 0x5373746C75736572;
}

uint64_t sub_1D58198E4()
{
  return 0x614C746E65696C63;
}

unint64_t sub_1D5819918()
{
  return 0xD000000000000017;
}

uint64_t sub_1D581993C()
{
  return 0x67615474726F7073;
}

uint64_t sub_1D581995C()
{
  unsigned __int8 *v0;

  return sub_1D58197D8(*v0);
}

uint64_t sub_1D5819964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D581B108(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D5819988(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1D5819994()
{
  sub_1D5819D98();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58199BC()
{
  sub_1D5819D98();
  return sub_1D5AAEEE0();
}

uint64_t SearchResultsData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD v20[7];
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  sub_1D581A7C8(0, &qword_1EFF48778, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v20 - v7;
  v10 = *v1;
  v9 = v1[1];
  v29 = v1[2];
  v30 = v9;
  v11 = v1[3];
  v27 = v1[4];
  v28 = v11;
  v12 = v1[6];
  v25 = v1[5];
  v26 = v12;
  v24 = *((_DWORD *)v1 + 14);
  v13 = v1[9];
  v22 = v1[8];
  v23 = v13;
  v21 = *((unsigned __int8 *)v1 + 80);
  v14 = v1[12];
  v20[5] = v1[11];
  v20[6] = v14;
  v15 = v1[14];
  v20[3] = v1[13];
  v20[4] = v15;
  v16 = v1[16];
  v20[1] = v1[15];
  v20[2] = v16;
  v20[0] = v1[17];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5819D98();
  sub_1D5AAEEC8();
  v32 = v10;
  v31 = 0;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  v17 = v8;
  sub_1D5AAED6C();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v18 = v29;
  v32 = v30;
  v31 = 1;
  sub_1D5AAED6C();
  v32 = v18;
  v31 = 2;
  sub_1D5AAED6C();
  v30 = v6;
  LOBYTE(v32) = 3;
  sub_1D5AAECF4();
  LOBYTE(v32) = 4;
  sub_1D5AAECF4();
  LOBYTE(v32) = 5;
  sub_1D5AAED78();
  LOBYTE(v32) = 6;
  sub_1D5AAECF4();
  LOBYTE(v32) = v21;
  v31 = 7;
  sub_1D5819DDC();
  sub_1D5AAED18();
  LOBYTE(v32) = 8;
  sub_1D5AAECF4();
  LOBYTE(v32) = 9;
  sub_1D5AAECF4();
  LOBYTE(v32) = 10;
  sub_1D5AAECF4();
  v32 = v20[0];
  v31 = 11;
  sub_1D5AAED18();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v17, v5);
}

unint64_t sub_1D5819D98()
{
  unint64_t result;

  result = qword_1EFF48780;
  if (!qword_1EFF48780)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4F28, &type metadata for SearchResultsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48780);
  }
  return result;
}

unint64_t sub_1D5819DDC()
{
  unint64_t result;

  result = qword_1EFF48788;
  if (!qword_1EFF48788)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchResultsSource, &type metadata for SearchResultsSource);
    atomic_store(result, (unint64_t *)&qword_1EFF48788);
  }
  return result;
}

uint64_t SearchResultsData.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _QWORD v72[7];
  int v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _BYTE v77[7];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  _DWORD v87[3];
  uint64_t v88;

  sub_1D581A7C8(0, &qword_1EFF48790, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v44 - v8;
  v10 = a1[3];
  v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1D5819D98();
  sub_1D5AAEEB0();
  if (v2)
  {
    v62 = 0;
    v88 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v60 = a2;
    sub_1D57B4558();
    LOBYTE(v63) = 0;
    v11 = sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    v12 = v72[0];
    LOBYTE(v63) = 1;
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v59 = v12;
    v13 = v72[0];
    LOBYTE(v63) = 2;
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v57 = v11;
    v58 = v13;
    v14 = v72[0];
    LOBYTE(v72[0]) = 3;
    swift_bridgeObjectRetain();
    v15 = sub_1D5AAEC58();
    v17 = v16;
    v55 = v15;
    v56 = v14;
    LOBYTE(v72[0]) = 4;
    swift_bridgeObjectRetain();
    v53 = sub_1D5AAEC58();
    v54 = v17;
    LOBYTE(v72[0]) = 5;
    v19 = v18;
    swift_bridgeObjectRetain();
    v20 = sub_1D5AAECDC();
    v88 = v19;
    LODWORD(v14) = v20;
    LOBYTE(v72[0]) = 6;
    v21 = sub_1D5AAEC58();
    v23 = v22;
    v52 = v21;
    LOBYTE(v63) = 7;
    sub_1D581A824();
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    v62 = v23;
    LODWORD(v23) = LOBYTE(v72[0]);
    LOBYTE(v72[0]) = 8;
    v49 = sub_1D5AAEC58();
    v47 = v14;
    v48 = v23;
    LOBYTE(v72[0]) = 9;
    v50 = v24;
    swift_bridgeObjectRetain();
    v25 = sub_1D5AAEC58();
    v51 = v26;
    v27 = v25;
    LOBYTE(v72[0]) = 10;
    swift_bridgeObjectRetain();
    v46 = sub_1D5AAEC58();
    v29 = v28;
    v85 = 11;
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v30 = v86;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v63 = v59;
    *((_QWORD *)&v63 + 1) = v58;
    *(_QWORD *)&v64 = v56;
    *((_QWORD *)&v64 + 1) = v55;
    *(_QWORD *)&v65 = v54;
    *((_QWORD *)&v65 + 1) = v53;
    *(_QWORD *)&v66 = v88;
    DWORD2(v66) = v47;
    *(_QWORD *)&v67 = v52;
    *((_QWORD *)&v67 + 1) = v62;
    LOBYTE(v68) = v48;
    *((_QWORD *)&v68 + 1) = v49;
    *(_QWORD *)&v69 = v50;
    v45 = v27;
    *((_QWORD *)&v69 + 1) = v27;
    *(_QWORD *)&v70 = v51;
    *((_QWORD *)&v70 + 1) = v46;
    *(_QWORD *)&v71 = v29;
    v31 = v30;
    *((_QWORD *)&v71 + 1) = v30;
    sub_1D581A868((uint64_t)&v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = v88;
    swift_bridgeObjectRelease();
    v34 = v62;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = v31;
    swift_bridgeObjectRelease();
    v37 = v70;
    v39 = v60;
    v38 = (uint64_t)v61;
    v60[6] = v69;
    v39[7] = v37;
    v39[8] = v71;
    v40 = v66;
    v39[2] = v65;
    v39[3] = v40;
    v41 = v68;
    v39[4] = v67;
    v39[5] = v41;
    v42 = v64;
    *v39 = v63;
    v39[1] = v42;
    __swift_destroy_boxed_opaque_existential_1(v38);
    v72[0] = v59;
    v72[1] = v58;
    v72[2] = v32;
    v72[3] = v55;
    v72[4] = v54;
    v72[5] = v53;
    v72[6] = v33;
    v73 = v47;
    v74 = v52;
    v75 = v34;
    v76 = v48;
    *(_DWORD *)v77 = v87[0];
    *(_DWORD *)&v77[3] = *(_DWORD *)((char *)v87 + 3);
    v78 = v49;
    v79 = v50;
    v80 = v45;
    v81 = v35;
    v82 = v46;
    v83 = v29;
    v84 = v36;
    return sub_1D581A914((uint64_t)v72);
  }
}

void sub_1D581A7C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5819D98();
    v7 = a3(a1, &type metadata for SearchResultsData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D581A824()
{
  unint64_t result;

  result = qword_1EFF48798;
  if (!qword_1EFF48798)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchResultsSource, &type metadata for SearchResultsSource);
    atomic_store(result, (unint64_t *)&qword_1EFF48798);
  }
  return result;
}

uint64_t sub_1D581A868(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D581A914(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1D581A9C4()
{
  unint64_t result;

  result = qword_1EFF487A0;
  if (!qword_1EFF487A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchResultsData, &type metadata for SearchResultsData);
    atomic_store(result, (unint64_t *)&qword_1EFF487A0);
  }
  return result;
}

unint64_t sub_1D581AA0C()
{
  unint64_t result;

  result = qword_1EFF487A8;
  if (!qword_1EFF487A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchResultsData, &type metadata for SearchResultsData);
    atomic_store(result, (unint64_t *)&qword_1EFF487A8);
  }
  return result;
}

uint64_t sub_1D581AA50@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return SearchResultsData.init(from:)(a1, a2);
}

uint64_t sub_1D581AA64(_QWORD *a1)
{
  return SearchResultsData.encode(to:)(a1);
}

uint64_t destroy for SearchResultsData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchResultsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchResultsData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for SearchResultsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultsData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsData()
{
  return &type metadata for SearchResultsData;
}

uint64_t getEnumTagSinglePayload for SearchResultsData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultsData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1D581AFB0 + 4 * byte_1D5AB4D81[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1D581AFE4 + 4 * byte_1D5AB4D7C[v4]))();
}

uint64_t sub_1D581AFE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D581AFEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D581AFF4);
  return result;
}

uint64_t sub_1D581B000(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D581B008);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1D581B00C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D581B014(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsData.CodingKeys()
{
  return &type metadata for SearchResultsData.CodingKeys;
}

unint64_t sub_1D581B034()
{
  unint64_t result;

  result = qword_1EFF487B0;
  if (!qword_1EFF487B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4F00, &type metadata for SearchResultsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF487B0);
  }
  return result;
}

unint64_t sub_1D581B07C()
{
  unint64_t result;

  result = qword_1EFF487B8;
  if (!qword_1EFF487B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4E70, &type metadata for SearchResultsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF487B8);
  }
  return result;
}

unint64_t sub_1D581B0C4()
{
  unint64_t result;

  result = qword_1EFF487C0;
  if (!qword_1EFF487C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB4E98, &type metadata for SearchResultsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF487C0);
  }
  return result;
}

uint64_t sub_1D581B108(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7344496369706F74 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496C656E6E616863 && a2 == 0xEA00000000007344 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49656C6369747261 && a2 == 0xEA00000000007344 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C75736552706F74 && a2 == 0xEE00444967615474 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AED560 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7365526C61746F74 && a2 == 0xEC00000073746C75 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xEF676E6972745364 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x5373746C75736572 && a2 == 0xED0000656372756FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x614C746E65696C63 && a2 == 0xED000079636E6574 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x614C726576726573 && a2 == 0xED000079636E6574 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AED580 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x67615474726F7073 && a2 == 0xEB00000000734449)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t EventUserInfo.isFake.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t EventUserInfo.headlineEmbeddings.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1D581BA3C(v2, v3, v4, v5, (void (*)(void))sub_1D581B6EC);
}

uint64_t sub_1D581B6EC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t EventUserInfo.init(isFake:headline:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  v3 = result;
  if (a2)
  {
    swift_getObjectType();
    sub_1D581B7A4((uint64_t *)v7);
    result = swift_unknownObjectRelease();
    v6 = v7[0];
    v5 = v7[1];
  }
  else
  {
    v5 = xmmword_1D5AB4F80;
    v6 = 0uLL;
  }
  *(_BYTE *)a3 = v3 & 1;
  *(_OWORD *)(a3 + 8) = v6;
  *(_OWORD *)(a3 + 24) = v5;
  return result;
}

double sub_1D581B7A4@<D0>(uint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  double result;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v2 = v1;
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_float16FullBodyEncoding) & 1) != 0)
  {
    v4 = objc_msgSend(v1, sel_float16FullBodyEncoding);
    if (v4)
    {
      v5 = v4;
      v6 = sub_1D5AAD698();
      v8 = v7;

    }
    else
    {
      v6 = 0;
      v8 = 0xF000000000000000;
    }
  }
  else
  {
    v6 = 0;
    v8 = 0xB000000000000000;
  }
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_float16TitleEncoding) & 1) != 0)
  {
    v10 = objc_msgSend(v2, sel_float16TitleEncoding);
    if (v10)
    {
      v11 = v10;
      v12 = sub_1D5AAD698();
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0xF000000000000000;
    }
  }
  else
  {
    v12 = 0;
    v14 = 0xB000000000000000;
  }
  if (v8 >> 60 != 11)
  {
    if (v8 >> 60 != 15)
    {
      if (v14 >> 60 != 11)
      {
        if (v14 >> 60 != 15)
        {
          v15 = v14 | 0x2000000000000000;
          *a1 = v6;
          a1[1] = v8;
          a1[2] = v12;
          goto LABEL_18;
        }
        sub_1D581BCF4(v12, v14);
      }
      *a1 = v6;
      a1[1] = v8;
      a1[2] = 0;
      a1[3] = 0;
      return result;
    }
    sub_1D581BCF4(v6, v8);
  }
  if (v14 >> 60 == 11)
  {
LABEL_17:
    *a1 = 0;
    a1[1] = 0;
    v15 = 0x3000000000000000;
    a1[2] = 0;
LABEL_18:
    a1[3] = v15;
    return result;
  }
  if (v14 >> 60 == 15)
  {
    sub_1D581BCF4(v12, v14);
    goto LABEL_17;
  }
  *a1 = v12;
  a1[1] = v14;
  result = 0.0;
  *((_OWORD *)a1 + 1) = xmmword_1D5AB4F90;
  return result;
}

double ProcessEvent.newsUserInfo.getter@<D0>(uint64_t a1@<X8>)
{
  double result;
  _QWORD v3[4];

  sub_1D5AADAA0();
  if (!v3[3])
  {
    sub_1D57C5484((uint64_t)v3);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    *(_QWORD *)a1 = 2;
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  return result;
}

uint64_t ProcessEvent.isFake.getter()
{
  uint64_t v0;
  uint64_t v2[5];

  ProcessEvent.newsUserInfo.getter((uint64_t)v2);
  if (LOBYTE(v2[0]) == 2)
    return 0;
  v0 = v2[0] & 1;
  sub_1D581BA00(v2[0], v2[1], v2[2], v2[3], v2[4]);
  return v0;
}

uint64_t sub_1D581BA00(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (result != 2)
    return sub_1D581BA3C(a2, a3, a4, a5, (void (*)(void))sub_1D57E69C4);
  return result;
}

uint64_t sub_1D581BA3C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void))
{
  uint64_t v5;
  uint64_t result;
  unint64_t v8;

  v5 = (a4 >> 60) & 3;
  if ((_DWORD)v5 == 2)
  {
    v8 = a4 & 0xCFFFFFFFFFFFFFFFLL;
    a5();
    return ((uint64_t (*)(uint64_t, unint64_t))a5)(a3, v8);
  }
  else if (v5 <= 1)
  {
    return ((uint64_t (*)(void))a5)();
  }
  return result;
}

void ProcessEvent.headlineEmbeddings.getter(_OWORD *a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  _BYTE v4[8];
  __int128 v5;
  __int128 v6;

  ProcessEvent.newsUserInfo.getter((uint64_t)v4);
  if (v4[0] == 2)
  {
    v2 = xmmword_1D5AB4F80;
    v3 = 0uLL;
  }
  else
  {
    v3 = v5;
    v2 = v6;
  }
  *a1 = v3;
  a1[1] = v2;
}

uint64_t destroy for EventUserInfo(uint64_t a1)
{
  return sub_1D581BA3C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (void (*)(void))sub_1D57E69C4);
}

uint64_t initializeWithCopy for EventUserInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  sub_1D581BA3C(v3, v4, v5, v6, (void (*)(void))sub_1D581B6EC);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for EventUserInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  sub_1D581BA3C(v3, v4, v5, v6, (void (*)(void))sub_1D581B6EC);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  sub_1D581BA3C(v7, v8, v9, v10, (void (*)(void))sub_1D57E69C4);
  return a1;
}

uint64_t assignWithTake for EventUserInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1D581BA3C(v3, v5, v4, v6, (void (*)(void))sub_1D57E69C4);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventUserInfo(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[40])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EventUserInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventUserInfo()
{
  return &type metadata for EventUserInfo;
}

uint64_t sub_1D581BCF4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11)
    return sub_1D581BD08(a1, a2);
  return a1;
}

uint64_t sub_1D581BD08(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1D57E69C4(a1, a2);
  return a1;
}

uint64_t sub_1D581BD1C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF487C8, MEMORY[0x1E0CF8078]);
}

uint64_t static WidgetExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F50, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF487C8, a1);
}

uint64_t sub_1D581BD5C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF487E0, MEMORY[0x1E0CF8380]);
}

uint64_t static WidgetExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF487E0, a1);
}

uint64_t WidgetExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t WidgetExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*WidgetExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureEvent.exposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for WidgetExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF488C0);
}

unint64_t sub_1D581BE6C()
{
  unint64_t result;

  result = qword_1EFF48800;
  if (!qword_1EFF48800)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetExposureData, &type metadata for WidgetExposureData);
    atomic_store(result, (unint64_t *)&qword_1EFF48800);
  }
  return result;
}

unint64_t sub_1D581BEB0()
{
  unint64_t result;

  result = qword_1EFF48808;
  if (!qword_1EFF48808)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetExposureData, &type metadata for WidgetExposureData);
    atomic_store(result, (unint64_t *)&qword_1EFF48808);
  }
  return result;
}

uint64_t WidgetExposureEvent.exposureData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.exposureData.modify())()
{
  type metadata accessor for WidgetExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetExposureEvent.groupDataList.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D581BFEC()
{
  unint64_t result;

  result = qword_1EFF48818;
  if (!qword_1EFF48818)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupDataList, &type metadata for GroupDataList);
    atomic_store(result, (unint64_t *)&qword_1EFF48818);
  }
  return result;
}

unint64_t sub_1D581C030()
{
  unint64_t result;

  result = qword_1EFF48820;
  if (!qword_1EFF48820)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupDataList, &type metadata for GroupDataList);
    atomic_store(result, (unint64_t *)&qword_1EFF48820);
  }
  return result;
}

uint64_t WidgetExposureEvent.groupDataList.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.groupDataList.modify())()
{
  type metadata accessor for WidgetExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetExposureEvent.personalizationFeatureCTRDataList.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D581C16C()
{
  unint64_t result;

  result = qword_1EFF48830;
  if (!qword_1EFF48830)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PersonalizationFeatureCTRDataList, &type metadata for PersonalizationFeatureCTRDataList);
    atomic_store(result, (unint64_t *)&qword_1EFF48830);
  }
  return result;
}

unint64_t sub_1D581C1B0()
{
  unint64_t result;

  result = qword_1EFF48838;
  if (!qword_1EFF48838)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PersonalizationFeatureCTRDataList, &type metadata for PersonalizationFeatureCTRDataList);
    atomic_store(result, (unint64_t *)&qword_1EFF48838);
  }
  return result;
}

uint64_t WidgetExposureEvent.personalizationFeatureCTRDataList.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.personalizationFeatureCTRDataList.modify())()
{
  type metadata accessor for WidgetExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.viewData.modify())()
{
  type metadata accessor for WidgetExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D581CA4C(type metadata accessor for WidgetExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t WidgetExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 36);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.timedData.modify())()
{
  type metadata accessor for WidgetExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetExposureEvent.typeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D581C468()
{
  unint64_t result;

  result = qword_1ED9D14A0;
  if (!qword_1ED9D14A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetTypeData, &type metadata for WidgetTypeData);
    atomic_store(result, (unint64_t *)&qword_1ED9D14A0);
  }
  return result;
}

unint64_t sub_1D581C4AC()
{
  unint64_t result;

  result = qword_1ED9D1498;
  if (!qword_1ED9D1498)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetTypeData, &type metadata for WidgetTypeData);
    atomic_store(result, (unint64_t *)&qword_1ED9D1498);
  }
  return result;
}

uint64_t WidgetExposureEvent.typeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.typeData.modify())()
{
  type metadata accessor for WidgetExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetExposureEvent.locationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D581C5E8()
{
  unint64_t result;

  result = qword_1ED9D14F8;
  if (!qword_1ED9D14F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetLocationData, &type metadata for WidgetLocationData);
    atomic_store(result, (unint64_t *)&qword_1ED9D14F8);
  }
  return result;
}

unint64_t sub_1D581C62C()
{
  unint64_t result;

  result = qword_1ED9D14F0;
  if (!qword_1ED9D14F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetLocationData, &type metadata for WidgetLocationData);
    atomic_store(result, (unint64_t *)&qword_1ED9D14F0);
  }
  return result;
}

uint64_t WidgetExposureEvent.locationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.locationData.modify())()
{
  type metadata accessor for WidgetExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for WidgetExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v2, v16);
  v17 = a1 + v4[11];
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v2, v18);
}

uint64_t WidgetExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t WidgetExposureEvent.Model.exposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 32);
  v6 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 + 16);
  *(_BYTE *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for WidgetExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF48968);
}

uint64_t WidgetExposureEvent.Model.groupDataList.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExposureEvent.Model(0) + 24));
  return swift_bridgeObjectRetain();
}

uint64_t WidgetExposureEvent.Model.personalizationFeatureCTRDataList.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExposureEvent.Model(0) + 28));
  return swift_bridgeObjectRetain();
}

uint64_t WidgetExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WidgetExposureEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t WidgetExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D581CA4C(type metadata accessor for WidgetExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t sub_1D581CA4C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 36);
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t WidgetExposureEvent.Model.typeData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WidgetExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t WidgetExposureEvent.Model.locationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WidgetExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t WidgetExposureEvent.Model.init(eventData:exposureData:groupDataList:personalizationFeatureCTRDataList:viewData:timedData:typeData:locationData:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  __int128 v26;
  __int16 v27;
  char v28;
  char v29;

  v26 = *a2;
  v11 = *((_QWORD *)a2 + 2);
  v12 = *((_QWORD *)a2 + 3);
  v13 = *((_BYTE *)a2 + 32);
  v14 = *((_QWORD *)a2 + 5);
  v15 = *a3;
  v16 = *a4;
  v18 = *a5;
  v17 = a5[1];
  v27 = *((_WORD *)a5 + 8);
  v28 = *a7;
  v29 = *a8;
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)type metadata accessor for WidgetExposureEvent.Model(0);
  v21 = a9 + v20[5];
  *(_OWORD *)v21 = v26;
  *(_QWORD *)(v21 + 16) = v11;
  *(_QWORD *)(v21 + 24) = v12;
  *(_BYTE *)(v21 + 32) = v13;
  *(_QWORD *)(v21 + 40) = v14;
  *(_QWORD *)(a9 + v20[6]) = v15;
  *(_QWORD *)(a9 + v20[7]) = v16;
  v22 = a9 + v20[8];
  *(_QWORD *)v22 = v18;
  *(_QWORD *)(v22 + 8) = v17;
  *(_WORD *)(v22 + 16) = v27;
  v23 = a9 + v20[9];
  v24 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v23, a6, v24);
  *(_BYTE *)(a9 + v20[10]) = v28;
  *(_BYTE *)(a9 + v20[11]) = v29;
  return result;
}

uint64_t sub_1D581CC30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D581CC68
                                                            + 4 * asc_1D5AB4FC0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D581CC68()
{
  return 0x657275736F707865;
}

uint64_t sub_1D581CD18()
{
  unsigned __int8 *v0;

  return sub_1D581CC30(*v0);
}

uint64_t sub_1D581CD20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D581F8FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D581CD44()
{
  sub_1D581D0E4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D581CD6C()
{
  sub_1D581D0E4();
  return sub_1D5AAEEE0();
}

uint64_t WidgetExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  char v24;
  uint64_t v25;

  v3 = v1;
  sub_1D581D770(0, &qword_1EFF48850, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D581D0E4();
  sub_1D5AAEEC8();
  LOBYTE(v21) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for WidgetExposureEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = v11[1];
    v13 = *((_BYTE *)v11 + 32);
    v14 = v11[5];
    v21 = *v11;
    v22 = v12;
    v23 = *((_OWORD *)v11 + 1);
    v24 = v13;
    v25 = v14;
    v20 = 1;
    sub_1D581BEB0();
    sub_1D5AAED6C();
    v21 = *(_QWORD *)(v3 + v10[6]);
    v20 = 2;
    sub_1D581C030();
    sub_1D5AAED6C();
    v21 = *(_QWORD *)(v3 + v10[7]);
    v20 = 3;
    sub_1D581C1B0();
    sub_1D5AAED6C();
    v15 = (uint64_t *)(v3 + v10[8]);
    v16 = *v15;
    v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    v21 = v16;
    v22 = v17;
    LOWORD(v23) = (_WORD)v15;
    v20 = 4;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    LOBYTE(v21) = 5;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    LOBYTE(v21) = *(_BYTE *)(v3 + v10[10]);
    v20 = 6;
    sub_1D581C4AC();
    sub_1D5AAED6C();
    LOBYTE(v21) = *(_BYTE *)(v3 + v10[11]);
    v20 = 7;
    sub_1D581C62C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D581D0E4()
{
  unint64_t result;

  result = qword_1EFF48858;
  if (!qword_1EFF48858)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5224, &type metadata for WidgetExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48858);
  }
  return result;
}

uint64_t WidgetExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  char v44;
  uint64_t v45;
  char v46;

  v32 = a2;
  v3 = sub_1D5AADFB0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D5AADF98();
  v35 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D581D770(0, &qword_1EFF48860, MEMORY[0x1E0DED048]);
  v34 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - v11;
  v36 = type metadata accessor for WidgetExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v36);
  v38 = a1;
  v39 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D581D0E4();
  v37 = v12;
  v14 = v40;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  v40 = v6;
  v15 = v10;
  v31 = v4;
  LOBYTE(v41) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v16 = v33;
  v17 = v34;
  sub_1D5AAECD0();
  v18 = v7;
  v19 = (uint64_t)v39;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v39, v16, v18);
  v46 = 1;
  sub_1D581BE6C();
  sub_1D5AAECD0();
  v20 = v42;
  v21 = v44;
  v22 = v45;
  v23 = (int *)v36;
  v24 = v19 + *(int *)(v36 + 20);
  *(_QWORD *)v24 = v41;
  *(_QWORD *)(v24 + 8) = v20;
  *(_OWORD *)(v24 + 16) = v43;
  *(_BYTE *)(v24 + 32) = v21;
  *(_QWORD *)(v24 + 40) = v22;
  v46 = 2;
  sub_1D581BFEC();
  sub_1D5AAECD0();
  *(_QWORD *)(v19 + v23[6]) = v41;
  v46 = 3;
  sub_1D581C16C();
  sub_1D5AAECD0();
  *(_QWORD *)(v19 + v23[7]) = v41;
  v46 = 4;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v25 = v42;
  v26 = v43;
  v27 = v19 + v23[8];
  *(_QWORD *)v27 = v41;
  *(_QWORD *)(v27 + 8) = v25;
  *(_WORD *)(v27 + 16) = v26;
  LOBYTE(v41) = 5;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v28 = v40;
  v33 = 0;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v19 + v23[9], v28, v3);
  v46 = 6;
  sub_1D581C468();
  sub_1D5AAECD0();
  v29 = (uint64_t)v38;
  *(_BYTE *)(v19 + v23[10]) = v41;
  v46 = 7;
  sub_1D581C5E8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v37, v17);
  *(_BYTE *)(v19 + v23[11]) = v41;
  sub_1D581D7CC(v19, v32);
  __swift_destroy_boxed_opaque_existential_1(v29);
  return sub_1D581D810(v19);
}

void sub_1D581D770(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D581D0E4();
    v7 = a3(a1, &type metadata for WidgetExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D581D7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D581D810(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D581D84C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D581D860(_QWORD *a1)
{
  return WidgetExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D581D874@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F50, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF487C8, a1);
}

uint64_t sub_1D581D898@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF487E0, a1);
}

uint64_t sub_1D581D8BC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v4, v17);
  v18 = a2 + a1[11];
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v4, v19);
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for WidgetExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for WidgetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for WidgetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for WidgetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for WidgetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D581E894(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D57A8C9C();
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WidgetExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D581EAAC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D57A8C9C();
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D581ECC0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1EFF487F8, (void (*)(void))sub_1D581BE6C, (void (*)(void))sub_1D581BEB0);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF48810, (void (*)(void))sub_1D581BFEC, (void (*)(void))sub_1D581C030);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1EFF48828, (void (*)(void))sub_1D581C16C, (void (*)(void))sub_1D581C1B0);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          if (v4 <= 0x3F)
          {
            sub_1D57A8C9C();
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for WidgetExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
    v10[32] = v11[32];
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v13 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_QWORD *)v15;
    v17 = *((_QWORD *)v15 + 1);
    v14[16] = v15[16];
    v14[17] = v15[17];
    v18 = a3[9];
    v25 = (char *)a1 + v18;
    v19 = (char *)a2 + v18;
    *(_QWORD *)v14 = v16;
    *((_QWORD *)v14 + 1) = v17;
    v20 = sub_1D5AADFB0();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v25, v19, v20);
    v22 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
  }
  return a1;
}

uint64_t destroy for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 36);
  v6 = sub_1D5AADFB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v23;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v10 + 16);
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v13 = a1 + v12;
  v14 = (uint64_t *)(a2 + v12);
  v15 = *v14;
  v16 = v14[1];
  *(_BYTE *)(v13 + 16) = *((_BYTE *)v14 + 16);
  *(_BYTE *)(v13 + 17) = *((_BYTE *)v14 + 17);
  v17 = a3[9];
  v23 = a1 + v17;
  v18 = a2 + v17;
  *(_QWORD *)v13 = v15;
  *(_QWORD *)(v13 + 8) = v16;
  v19 = sub_1D5AADFB0();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v23, v18, v19);
  v21 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  return a1;
}

uint64_t assignWithCopy for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_BYTE *)(v11 + 17) = *(_BYTE *)(v12 + 17);
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  return a1;
}

uint64_t assignWithTake for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D581F53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1D5AADFB0();
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D581F5F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1D5AADFB0();
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D581F69C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WidgetExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D581F7A4 + 4 * byte_1D5AB4FCD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D581F7D8 + 4 * byte_1D5AB4FC8[v4]))();
}

uint64_t sub_1D581F7D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D581F7E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D581F7E8);
  return result;
}

uint64_t sub_1D581F7F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D581F7FCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D581F800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D581F808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetExposureEvent.Model.CodingKeys()
{
  return &type metadata for WidgetExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D581F828()
{
  unint64_t result;

  result = qword_1EFF489B8;
  if (!qword_1EFF489B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB51FC, &type metadata for WidgetExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF489B8);
  }
  return result;
}

unint64_t sub_1D581F870()
{
  unint64_t result;

  result = qword_1EFF489C0;
  if (!qword_1EFF489C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB516C, &type metadata for WidgetExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF489C0);
  }
  return result;
}

unint64_t sub_1D581F8B8()
{
  unint64_t result;

  result = qword_1EFF489C8;
  if (!qword_1EFF489C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5194, &type metadata for WidgetExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF489C8);
  }
  return result;
}

uint64_t sub_1D581F8FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657275736F707865 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xED00007473694C61 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AED5A0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614465707974 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t AppData.appVersion.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppData.appVersion.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AppData.appVersion.modify())()
{
  return nullsub_1;
}

uint64_t AppData.appBuildNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppData.appBuildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AppData.appBuildNumber.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AppData __swiftcall AppData.init(appVersion:appBuildNumber:)(Swift::String appVersion, Swift::String appBuildNumber)
{
  Swift::String *v2;
  NewsAnalytics::AppData result;

  *v2 = appVersion;
  v2[1] = appBuildNumber;
  result.appBuildNumber = appBuildNumber;
  result.appVersion = appVersion;
  return result;
}

BOOL sub_1D581FD88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1D581FDA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5820234(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D581FDC4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1D581FDD0()
{
  sub_1D57AED98();
  return sub_1D5AAEED4();
}

uint64_t sub_1D581FDF8()
{
  sub_1D57AED98();
  return sub_1D5AAEEE0();
}

uint64_t AppData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;

  sub_1D57AED3C(0, &qword_1ED9CC850, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AED98();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v20 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1D5AAECA0();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v17;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D581FFC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppData.init(from:)(a1, a2);
}

_QWORD *assignWithCopy for AppData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for AppData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5820160 + 4 * byte_1D5AB5279[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5820194 + 4 * byte_1D5AB5274[v4]))();
}

uint64_t sub_1D5820194(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D582019C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58201A4);
  return result;
}

uint64_t sub_1D58201B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58201B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D58201BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58201C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1D58201D0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AppData.CodingKeys()
{
  return &type metadata for AppData.CodingKeys;
}

unint64_t sub_1D58201F0()
{
  unint64_t result;

  result = qword_1EFF489D0;
  if (!qword_1EFF489D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB53C0, &type metadata for AppData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF489D0);
  }
  return result;
}

uint64_t sub_1D5820234(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6973726556707061 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646C697542707061 && a2 == 0xEE007265626D754ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

size_t sub_1D5820354(size_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  int64_t v11;

  v2 = *(_QWORD *)(result + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v11 = v4 + v2;
  else
    v11 = v4;
  result = sub_1D5873060(result, v11, 1, v3);
  v3 = (_QWORD *)result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = (v3[3] >> 1) - v3[2];
  result = sub_1D5AAD560();
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v8 = v3[2];
  v9 = __OFADD__(v8, v2);
  v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1D5820454()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedViewEventQueryItemsGenerator()
{
  return objc_opt_self();
}

void sub_1D5820484(uint64_t a1)
{
  sub_1D582082C(a1);
}

_QWORD *sub_1D58204A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  v8 = sub_1D5AAD560();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v26 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v26 - v16;
  if (a3)
  {
    sub_1D5AAD53C();
    v18 = (_QWORD *)sub_1D5873060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v20 = v18[2];
    v19 = v18[3];
    if (v20 >= v19 >> 1)
      v18 = (_QWORD *)sub_1D5873060(v19 > 1, v20 + 1, 1, v18);
    v18[2] = v20 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v20, v17, v8);
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v27 = a4;
  v28 = a5;
  v26[0] = 0x686372616573;
  v26[1] = 0xE600000000000000;
  sub_1D57BF634();
  if ((sub_1D5AAEB14() & 1) != 0
    || (v27 = a4, v28 = a5, strcpy((char *)v26, "searchSeeMore"), HIWORD(v26[1]) = -4864, (sub_1D5AAEB14() & 1) != 0))
  {
    sub_1D5AAD53C();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = (_QWORD *)sub_1D5873060(0, v18[2] + 1, 1, v18);
    v22 = v18[2];
    v21 = v18[3];
    v23 = v22 + 1;
    if (v22 >= v21 >> 1)
      v18 = (_QWORD *)sub_1D5873060(v21 > 1, v22 + 1, 1, v18);
  }
  else
  {
    v27 = a4;
    v28 = a5;
    strcpy((char *)v26, "following");
    WORD1(v26[1]) = 0;
    HIDWORD(v26[1]) = -385875968;
    if ((sub_1D5AAEB14() & 1) == 0)
      return v18;
    sub_1D5AAD53C();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = (_QWORD *)sub_1D5873060(0, v18[2] + 1, 1, v18);
    v22 = v18[2];
    v25 = v18[3];
    v23 = v22 + 1;
    if (v22 >= v25 >> 1)
      v18 = (_QWORD *)sub_1D5873060(v25 > 1, v22 + 1, 1, v18);
    v15 = v12;
  }
  v18[2] = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v22, v15, v8);
  return v18;
}

void sub_1D582082C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  void *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  unsigned int v46;
  char v47;

  v2 = sub_1D5AAD560();
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  MEMORY[0x1E0C80A78](v2);
  v42 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FeedViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v4);
  v43 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5820D10();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D5AADAAC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v40 - v11;
  sub_1D5820D64();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v18 = swift_dynamicCast();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (!v18)
  {
    v19(v8, 1, 1, v14);
    sub_1D5820E20((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1D5820D10);
    sub_1D5820DDC();
    swift_allocError();
    swift_willThrow();
    return;
  }
  v19(v8, 0, 1, v14);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v8, v14);
  v20 = (void *)sub_1D5AADA7C();
  v21 = v44;
  v22 = sub_1D5AADE3C();
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);

    return;
  }
  v24 = v22;
  v25 = v23;

  sub_1D5AAD4B8();
  swift_allocObject();
  sub_1D5AAD4AC();
  sub_1D57A8DE4(&qword_1ED9C7A00, type metadata accessor for FeedViewEvent.Model, (uint64_t)&protocol conformance descriptor for FeedViewEvent.Model);
  v26 = v43;
  sub_1D5AAD4A0();
  v44 = v25;
  swift_release();
  v27 = (unsigned __int8 *)(v26 + *(int *)(v4 + 24));
  v28 = *v27;
  v47 = *v27;
  if (FeedType.rawValue.getter() == 0x6C656E6E616863 && v29 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
      sub_1D57E69C4(v24, v44);
      sub_1D5820E20(v43, type metadata accessor for FeedViewEvent.Model);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return;
    }
  }
  v46 = v28;
  sub_1D5AAD53C();
  v31 = (_QWORD *)sub_1D5873060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v33 = v31[2];
  v32 = v31[3];
  if (v33 >= v32 >> 1)
    v31 = (_QWORD *)sub_1D5873060(v32 > 1, v33 + 1, 1, v31);
  v31[2] = v33 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))((unint64_t)v31+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v33, v42, v41);
  v45 = v31;
  v34 = *((_QWORD *)v27 + 1);
  v35 = *((_QWORD *)v27 + 2);
  swift_bridgeObjectRetain();
  v36 = v43;
  v37 = sub_1D5AADF8C();
  v39 = sub_1D58204A0(v46, v34, v35, v37, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D5820354((size_t)v39);
  sub_1D57E69C4(v24, v44);
  sub_1D5820E20(v36, type metadata accessor for FeedViewEvent.Model);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

void sub_1D5820D10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C7098)
  {
    sub_1D5820D64();
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C7098);
  }
}

void sub_1D5820D64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C7090)
  {
    type metadata accessor for FeedViewEvent(255);
    sub_1D57A8DE4(&qword_1ED9C7AC8, type metadata accessor for FeedViewEvent, (uint64_t)&protocol conformance descriptor for FeedViewEvent);
    v0 = sub_1D5AADAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C7090);
  }
}

unint64_t sub_1D5820DDC()
{
  unint64_t result;

  result = qword_1ED9CB420;
  if (!qword_1ED9CB420)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB33A4, &type metadata for QueryItemsGeneratorError);
    atomic_store(result, (unint64_t *)&qword_1ED9CB420);
  }
  return result;
}

uint64_t sub_1D5820E20(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D5820E5C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF489D8, MEMORY[0x1E0CF8078]);
}

uint64_t static LiveActivitySubscriptionFailureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F60, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF489D8, a1);
}

uint64_t sub_1D5820E9C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF489F0, MEMORY[0x1E0CF8380]);
}

uint64_t static LiveActivitySubscriptionFailureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F68, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF489F0, a1);
}

uint64_t LiveActivitySubscriptionFailureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t LiveActivitySubscriptionFailureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for LiveActivitySubscriptionFailureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF48AD8);
}

unint64_t sub_1D5820FAC()
{
  unint64_t result;

  result = qword_1EFF48A10;
  if (!qword_1EFF48A10)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityData, &type metadata for LiveActivityData);
    atomic_store(result, (unint64_t *)&qword_1EFF48A10);
  }
  return result;
}

unint64_t sub_1D5820FF0()
{
  unint64_t result;

  result = qword_1EFF48A18;
  if (!qword_1EFF48A18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityData, &type metadata for LiveActivityData);
    atomic_store(result, (unint64_t *)&qword_1EFF48A18);
  }
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.liveActivityData.modify())()
{
  type metadata accessor for LiveActivitySubscriptionFailureEvent(0);
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LiveActivitySubscriptionFailureEvent.errorData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.errorData.modify())()
{
  type metadata accessor for LiveActivitySubscriptionFailureEvent(0);
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.userAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 28);
  sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5821224()
{
  unint64_t result;

  result = qword_1EFF48A28;
  if (!qword_1EFF48A28)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityUserActionData, &type metadata for LiveActivityUserActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF48A28);
  }
  return result;
}

unint64_t sub_1D5821268()
{
  unint64_t result;

  result = qword_1EFF48A30;
  if (!qword_1EFF48A30)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityUserActionData, &type metadata for LiveActivityUserActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF48A30);
  }
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.userAction.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 28);
  sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.userAction.modify())()
{
  type metadata accessor for LiveActivitySubscriptionFailureEvent(0);
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D58213A4()
{
  unint64_t result;

  result = qword_1EFF48A40;
  if (!qword_1EFF48A40)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityOriginationData, &type metadata for LiveActivityOriginationData);
    atomic_store(result, (unint64_t *)&qword_1EFF48A40);
  }
  return result;
}

unint64_t sub_1D58213E8()
{
  unint64_t result;

  result = qword_1EFF48A48;
  if (!qword_1EFF48A48)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityOriginationData, &type metadata for LiveActivityOriginationData);
    atomic_store(result, (unint64_t *)&qword_1EFF48A48);
  }
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.liveActivityOriginationData.modify())()
{
  type metadata accessor for LiveActivitySubscriptionFailureEvent(0);
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityDismissalData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 36);
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5821524()
{
  unint64_t result;

  result = qword_1EFF48A58;
  if (!qword_1EFF48A58)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityDismissalData, &type metadata for LiveActivityDismissalData);
    atomic_store(result, (unint64_t *)&qword_1EFF48A58);
  }
  return result;
}

unint64_t sub_1D5821568()
{
  unint64_t result;

  result = qword_1EFF48A60;
  if (!qword_1EFF48A60)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityDismissalData, &type metadata for LiveActivityDismissalData);
    atomic_store(result, (unint64_t *)&qword_1EFF48A60);
  }
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityDismissalData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 36);
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.liveActivityDismissalData.modify())()
{
  type metadata accessor for LiveActivitySubscriptionFailureEvent(0);
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for LiveActivitySubscriptionFailureEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.liveActivityData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF48B78);
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0) + 24);
  v5 = *(_QWORD *)(v3 + 24);
  v4 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.userAction.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.liveActivityOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.liveActivityDismissalData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

__n128 LiveActivitySubscriptionFailureEvent.Model.init(eventData:liveActivityData:errorData:userAction:liveActivityOriginationData:liveActivityDismissalData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 result;
  __n128 v20;
  __int128 v21;

  v9 = *a2;
  v10 = a2[1];
  v20 = (__n128)a3[1];
  v21 = *a3;
  v11 = *((_QWORD *)a3 + 4);
  v12 = *a4;
  v13 = *a5;
  v14 = *a6;
  v15 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a7, a1, v15);
  v16 = (int *)type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  v17 = (_QWORD *)(a7 + v16[5]);
  *v17 = v9;
  v17[1] = v10;
  v18 = a7 + v16[6];
  result = v20;
  *(_OWORD *)v18 = v21;
  *(__n128 *)(v18 + 16) = v20;
  *(_QWORD *)(v18 + 32) = v11;
  *(_BYTE *)(a7 + v16[7]) = v12;
  *(_BYTE *)(a7 + v16[8]) = v13;
  *(_BYTE *)(a7 + v16[9]) = v14;
  return result;
}

uint64_t sub_1D5821A08(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5821A40 + 4 * byte_1D5AB5480[a1]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1D5821A40()
{
  return 0xD000000000000010;
}

uint64_t sub_1D5821A5C()
{
  return 0x746144726F727265;
}

uint64_t sub_1D5821A70()
{
  return 0x6974634172657375;
}

unint64_t sub_1D5821A8C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1D5821ACC()
{
  unsigned __int8 *v0;

  return sub_1D5821A08(*v0);
}

uint64_t sub_1D5821AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5823D20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5821AF8()
{
  sub_1D5821DD4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5821B20()
{
  sub_1D5821DD4();
  return sub_1D5AAEEE0();
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _OWORD v18[2];
  uint64_t v19;
  char v20;

  v3 = v1;
  sub_1D582224C(0, &qword_1EFF48A68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5821DD4();
  sub_1D5AAEEC8();
  LOBYTE(v18[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)&v18[0] = v13;
    *((_QWORD *)&v18[0] + 1) = v12;
    v20 = 1;
    sub_1D5820FF0();
    sub_1D5AAED6C();
    v14 = v3 + v10[6];
    v15 = *(_QWORD *)(v14 + 32);
    v16 = *(_OWORD *)(v14 + 16);
    v18[0] = *(_OWORD *)v14;
    v18[1] = v16;
    v19 = v15;
    v20 = 2;
    sub_1D57C6128();
    sub_1D5AAED6C();
    LOBYTE(v18[0]) = *(_BYTE *)(v3 + v10[7]);
    v20 = 3;
    sub_1D5821268();
    sub_1D5AAED6C();
    LOBYTE(v18[0]) = *(_BYTE *)(v3 + v10[8]);
    v20 = 4;
    sub_1D58213E8();
    sub_1D5AAED18();
    LOBYTE(v18[0]) = *(_BYTE *)(v3 + v10[9]);
    v20 = 5;
    sub_1D5821568();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5821DD4()
{
  unint64_t result;

  result = qword_1EFF48A70;
  if (!qword_1EFF48A70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB56EC, &type metadata for LiveActivitySubscriptionFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48A70);
  }
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;

  v22 = a2;
  v3 = sub_1D5AADF98();
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D582224C(0, &qword_1EFF48A78, MEMORY[0x1E0DED048]);
  v24 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = (int *)type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5821DD4();
  v26 = v8;
  v12 = (uint64_t)v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v27 = a1;
  v14 = v23;
  LOBYTE(v28) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v24;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v25, v3);
  v31 = 1;
  sub_1D5820FAC();
  sub_1D5AAECD0();
  v16 = *((_QWORD *)&v28 + 1);
  v17 = &v11[v9[5]];
  *(_QWORD *)v17 = v28;
  *((_QWORD *)v17 + 1) = v16;
  v31 = 2;
  sub_1D57C60E4();
  sub_1D5AAECD0();
  v18 = v30;
  v19 = &v11[v9[6]];
  v20 = v29;
  *(_OWORD *)v19 = v28;
  *((_OWORD *)v19 + 1) = v20;
  *((_QWORD *)v19 + 4) = v18;
  v31 = 3;
  sub_1D5821224();
  sub_1D5AAECD0();
  v11[v9[7]] = v28;
  v31 = 4;
  sub_1D58213A4();
  sub_1D5AAEC7C();
  v11[MEMORY[0x20]] = v28;
  v31 = 5;
  sub_1D5821524();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v15);
  v11[MEMORY[0x24]] = v28;
  sub_1D58222A8((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_1D58222EC((uint64_t)v11);
}

void sub_1D582224C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5821DD4();
    v7 = a3(a1, &type metadata for LiveActivitySubscriptionFailureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58222A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58222EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5822328@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LiveActivitySubscriptionFailureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D582233C(_QWORD *a1)
{
  return LiveActivitySubscriptionFailureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5822350@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F60, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF489D8, a1);
}

uint64_t sub_1D5822374@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F68, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF489F0, a1);
}

uint64_t sub_1D5822398@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v13, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for LiveActivitySubscriptionFailureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for LiveActivitySubscriptionFailureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for LiveActivitySubscriptionFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for LiveActivitySubscriptionFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for LiveActivitySubscriptionFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for LiveActivitySubscriptionFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivitySubscriptionFailureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D582304C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for LiveActivitySubscriptionFailureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58231FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58233A8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1EFF48A20, (void (*)(void))sub_1D5821224, (void (*)(void))sub_1D5821268);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for LiveActivitySubscriptionFailureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    v13[4] = v14[4];
    v17 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  v12[4] = v13[4];
  v16 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[4] = v12[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  swift_bridgeObjectRelease();
  v13[4] = v14[4];
  swift_bridgeObjectRelease();
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivitySubscriptionFailureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58239DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveActivitySubscriptionFailureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5823A68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5823AE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LiveActivitySubscriptionFailureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5823BC8 + 4 * byte_1D5AB548B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5823BFC + 4 * byte_1D5AB5486[v4]))();
}

uint64_t sub_1D5823BFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5823C04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5823C0CLL);
  return result;
}

uint64_t sub_1D5823C18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5823C20);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5823C24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5823C2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivitySubscriptionFailureEvent.Model.CodingKeys()
{
  return &type metadata for LiveActivitySubscriptionFailureEvent.Model.CodingKeys;
}

unint64_t sub_1D5823C4C()
{
  unint64_t result;

  result = qword_1EFF48BC0;
  if (!qword_1EFF48BC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB56C4, &type metadata for LiveActivitySubscriptionFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48BC0);
  }
  return result;
}

unint64_t sub_1D5823C94()
{
  unint64_t result;

  result = qword_1EFF48BC8;
  if (!qword_1EFF48BC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5634, &type metadata for LiveActivitySubscriptionFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48BC8);
  }
  return result;
}

unint64_t sub_1D5823CDC()
{
  unint64_t result;

  result = qword_1EFF48BD0;
  if (!qword_1EFF48BD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB565C, &type metadata for LiveActivitySubscriptionFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48BD0);
  }
  return result;
}

uint64_t sub_1D5823D20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AED610 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974634172657375 && a2 == 0xEA00000000006E6FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5AED630 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AED650)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

NewsAnalytics::AggregateStateMode_optional __swiftcall AggregateStateMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::AggregateStateMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AggregateStateMode.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C75666574617473;
  if (*v0 != 1)
    v1 = 0x73656C6574617473;
  if (*v0)
    return v1;
  else
    return 0x766C6F7365726E75;
}

uint64_t sub_1D5824060(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3A5E4(*a1, *a2);
}

unint64_t sub_1D5824070()
{
  unint64_t result;

  result = qword_1EFF48BD8;
  if (!qword_1EFF48BD8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AggregateStateMode, &type metadata for AggregateStateMode);
    atomic_store(result, (unint64_t *)&qword_1EFF48BD8);
  }
  return result;
}

uint64_t sub_1D58240B4()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D582415C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D58241E0()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::AggregateStateMode_optional sub_1D5824284(Swift::String *a1)
{
  return AggregateStateMode.init(rawValue:)(*a1);
}

void sub_1D5824290(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA00000000006465;
  v4 = 0xE800000000000000;
  v5 = 0x6C75666574617473;
  if (v2 != 1)
  {
    v5 = 0x73656C6574617473;
    v4 = 0xE900000000000073;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x766C6F7365726E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D58242F8()
{
  sub_1D582445C();
  return sub_1D5AAE928();
}

uint64_t sub_1D5824354()
{
  sub_1D582445C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for AggregateStateMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58243EC + 4 * byte_1D5AB5745[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5824420 + 4 * byte_1D5AB5740[v4]))();
}

uint64_t sub_1D5824420(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5824428(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5824430);
  return result;
}

uint64_t sub_1D582443C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5824444);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5824448(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5824450(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D582445C()
{
  unint64_t result;

  result = qword_1ED9CEC28;
  if (!qword_1ED9CEC28)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AggregateStateMode, &type metadata for AggregateStateMode);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC28);
  }
  return result;
}

uint64_t sub_1D58244A0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF48BE0, MEMORY[0x1E0CF8078]);
}

uint64_t static GroupLoadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F70, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF48BE0, a1);
}

uint64_t sub_1D58244E0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF48BF8, MEMORY[0x1E0CF8380]);
}

uint64_t static GroupLoadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F78, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF48BF8, a1);
}

uint64_t GroupLoadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t GroupLoadEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*GroupLoadEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t GroupLoadEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for GroupLoadEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF48C98);
}

uint64_t GroupLoadEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupLoadEvent.feedData.modify())()
{
  type metadata accessor for GroupLoadEvent(0);
  return nullsub_1;
}

uint64_t GroupLoadEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for GroupLoadEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t GroupLoadEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupLoadEvent.timedData.modify())()
{
  type metadata accessor for GroupLoadEvent(0);
  return nullsub_1;
}

uint64_t GroupLoadEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GroupLoadEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupLoadEvent.groupData.modify())()
{
  type metadata accessor for GroupLoadEvent(0);
  return nullsub_1;
}

uint64_t GroupLoadEvent.resultActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5824864()
{
  unint64_t result;

  result = qword_1EFF48C18;
  if (!qword_1EFF48C18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultActionData, &type metadata for ResultActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF48C18);
  }
  return result;
}

unint64_t sub_1D58248A8()
{
  unint64_t result;

  result = qword_1EFF48C20;
  if (!qword_1EFF48C20)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultActionData, &type metadata for ResultActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF48C20);
  }
  return result;
}

uint64_t GroupLoadEvent.resultActionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupLoadEvent.resultActionData.modify())()
{
  type metadata accessor for GroupLoadEvent(0);
  return nullsub_1;
}

uint64_t GroupLoadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *Event;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for GroupLoadEvent(0);
  v5 = a1 + Event[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + Event[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v2, v9);
  v10 = a1 + Event[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + Event[8];
  sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
}

uint64_t GroupLoadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t GroupLoadEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GroupLoadEvent.Model(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t type metadata accessor for GroupLoadEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF48D38);
}

uint64_t GroupLoadEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for GroupLoadEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t sub_1D5824B58@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 24);
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t GroupLoadEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent.Model(0) + 28);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22 = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  v23 = *(_QWORD *)(v3 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v3 + 128);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D5802B14((uint64_t)v16);
}

uint64_t GroupLoadEvent.Model.resultActionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for GroupLoadEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

__n128 GroupLoadEvent.Model.init(eventData:feedData:timedData:groupData:resultActionData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  char v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  __int128 v18;
  __int128 v19;
  __n128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v9 = *((_QWORD *)a2 + 2);
  v25 = a4[6];
  v26 = a4[7];
  v27 = *((_QWORD *)a4 + 16);
  v21 = a4[2];
  v22 = a4[3];
  v23 = a4[4];
  v24 = a4[5];
  v20 = (__n128)a4[1];
  v18 = *a2;
  v19 = *a4;
  v10 = *a5;
  v11 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a6, a1, v11);
  v12 = (int *)type metadata accessor for GroupLoadEvent.Model(0);
  v13 = a6 + v12[5];
  *(_OWORD *)v13 = v18;
  *(_QWORD *)(v13 + 16) = v9;
  v14 = a6 + v12[6];
  v15 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a3, v15);
  v16 = a6 + v12[7];
  *(_OWORD *)(v16 + 96) = v25;
  *(_OWORD *)(v16 + 112) = v26;
  *(_QWORD *)(v16 + 128) = v27;
  *(_OWORD *)(v16 + 32) = v21;
  *(_OWORD *)(v16 + 48) = v22;
  *(_OWORD *)(v16 + 64) = v23;
  *(_OWORD *)(v16 + 80) = v24;
  result = v20;
  *(_OWORD *)v16 = v19;
  *(__n128 *)(v16 + 16) = v20;
  *(_BYTE *)(a6 + v12[8]) = v10;
  return result;
}

uint64_t sub_1D5824D84()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5824DB8 + 4 * byte_1D5AB58A0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5824DB8()
{
  return 0x6174614464656566;
}

uint64_t sub_1D5824DD0()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5824DE4()
{
  return 0x74614470756F7267;
}

unint64_t sub_1D5824DF8()
{
  return 0xD000000000000010;
}

uint64_t sub_1D5824E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D582721C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5824E38()
{
  sub_1D5825114();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5824E60()
{
  sub_1D5825114();
  return sub_1D5AAEEE0();
}

uint64_t GroupLoadEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;

  v3 = v1;
  sub_1D582569C(0, &qword_1EFF48C28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5825114();
  sub_1D5AAEEC8();
  LOBYTE(v21) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for GroupLoadEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *((_QWORD *)v11 + 2);
    v21 = *v11;
    *(_QWORD *)&v22 = v12;
    v30 = 1;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v30 = 2;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v13 = (__int128 *)(v3 + v10[7]);
    v14 = v13[7];
    v27 = v13[6];
    v28 = v14;
    v29 = *((_QWORD *)v13 + 16);
    v15 = v13[3];
    v23 = v13[2];
    v24 = v15;
    v16 = v13[5];
    v25 = v13[4];
    v26 = v16;
    v17 = v13[1];
    v21 = *v13;
    v22 = v17;
    v20 = 3;
    sub_1D57C5FEC();
    sub_1D5AAED6C();
    LOBYTE(v21) = *(_BYTE *)(v3 + v10[8]);
    v20 = 4;
    sub_1D58248A8();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5825114()
{
  unint64_t result;

  result = qword_1EFF48C30;
  if (!qword_1EFF48C30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5AB4, &type metadata for GroupLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48C30);
  }
  return result;
}

uint64_t GroupLoadEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  _QWORD *v48;

  v28 = a2;
  v31 = sub_1D5AADFB0();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1D5AADF98();
  v4 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D582569C(0, &qword_1EFF48C38, MEMORY[0x1E0DED048]);
  v33 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - v8;
  v10 = (int *)type metadata accessor for GroupLoadEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5825114();
  v35 = v9;
  v13 = (uint64_t)v48;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = v30;
  v27 = v4;
  v48 = a1;
  v15 = (uint64_t)v12;
  v16 = v31;
  LOBYTE(v38) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v32;
  v18 = v33;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v15, v34, v17);
  v47 = 1;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v19 = v39;
  v20 = v15 + v10[5];
  *(_OWORD *)v20 = v38;
  *(_QWORD *)(v20 + 16) = v19;
  LOBYTE(v38) = 2;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v34 = 0;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v15 + v10[6], v14, v16);
  v47 = 3;
  sub_1D57C5FA8();
  sub_1D5AAECD0();
  v21 = v15 + v10[7];
  v22 = v45;
  *(_OWORD *)(v21 + 96) = v44;
  *(_OWORD *)(v21 + 112) = v22;
  *(_QWORD *)(v21 + 128) = v46;
  v23 = v41;
  *(_OWORD *)(v21 + 32) = v40;
  *(_OWORD *)(v21 + 48) = v23;
  v24 = v43;
  *(_OWORD *)(v21 + 64) = v42;
  *(_OWORD *)(v21 + 80) = v24;
  v25 = v39;
  *(_OWORD *)v21 = v38;
  *(_OWORD *)(v21 + 16) = v25;
  v36 = 4;
  sub_1D5824864();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v18);
  *(_BYTE *)(v15 + v10[8]) = v37;
  sub_1D58256F8(v15, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return sub_1D582573C(v15);
}

void sub_1D582569C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5825114();
    v7 = a3(a1, &type metadata for GroupLoadEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58256F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GroupLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D582573C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GroupLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5825778@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupLoadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D582578C(_QWORD *a1)
{
  return GroupLoadEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58257A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F70, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF48BE0, a1);
}

uint64_t sub_1D58257C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F78, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF48BF8, a1);
}

uint64_t sub_1D58257E8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v4, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupLoadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for GroupLoadEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for GroupLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for GroupLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for GroupLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for GroupLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupLoadEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58261BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D57A8C9C();
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for GroupLoadEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5826308(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D57A8C9C();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5826450()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    if (v1 <= 0x3F)
    {
      sub_1D57A8C9C();
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1EFF48C10, (void (*)(void))sub_1D5824864, (void (*)(void))sub_1D58248A8);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for GroupLoadEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 2);
    if (v11 == 1)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
    }
    else
    {
      *v9 = *v10;
      *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
      *((_QWORD *)v9 + 2) = v11;
      swift_bridgeObjectRetain();
    }
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = a3[8];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    *(_WORD *)v19 = *(_WORD *)v20;
    v21 = *((_QWORD *)v20 + 2);
    *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
    *((_QWORD *)v19 + 2) = v21;
    *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
    v22 = *((_QWORD *)v20 + 5);
    *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 5) = v22;
    v23 = *((_QWORD *)v20 + 7);
    *((_QWORD *)v19 + 6) = *((_QWORD *)v20 + 6);
    *((_QWORD *)v19 + 7) = v23;
    v24 = *((_QWORD *)v20 + 9);
    *((_QWORD *)v19 + 8) = *((_QWORD *)v20 + 8);
    *((_QWORD *)v19 + 9) = v24;
    v19[80] = v20[80];
    v25 = *((_QWORD *)v20 + 12);
    *((_QWORD *)v19 + 11) = *((_QWORD *)v20 + 11);
    *((_QWORD *)v19 + 12) = v25;
    *((_QWORD *)v19 + 13) = *((_QWORD *)v20 + 13);
    v19[112] = v20[112];
    v26 = *((_QWORD *)v20 + 16);
    *((_QWORD *)v19 + 15) = *((_QWORD *)v20 + 15);
    *((_QWORD *)v19 + 16) = v26;
    *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for GroupLoadEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 20) + 16) != 1)
    swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10 == 1)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  }
  else
  {
    *(_BYTE *)v8 = *(_BYTE *)v9;
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = v10;
    swift_bridgeObjectRetain();
  }
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_WORD *)v17 = *(_WORD *)v18;
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  v20 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v20;
  v21 = *(_QWORD *)(v18 + 56);
  *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
  *(_QWORD *)(v17 + 56) = v21;
  v22 = *(_QWORD *)(v18 + 72);
  *(_QWORD *)(v17 + 64) = *(_QWORD *)(v18 + 64);
  *(_QWORD *)(v17 + 72) = v22;
  *(_BYTE *)(v17 + 80) = *(_BYTE *)(v18 + 80);
  v23 = *(_QWORD *)(v18 + 96);
  *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
  *(_QWORD *)(v17 + 96) = v23;
  *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
  *(_BYTE *)(v17 + 112) = *(_BYTE *)(v18 + 112);
  v24 = *(_QWORD *)(v18 + 128);
  *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
  *(_QWORD *)(v17 + 128) = v24;
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 16);
  v11 = *(_QWORD *)(a2 + v7 + 16);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      v12 = *v9;
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      *(_OWORD *)v8 = v12;
    }
    else
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v11 == 1)
  {
    sub_1D57D9100(v8);
    v13 = *((_QWORD *)v9 + 2);
    *(_OWORD *)v8 = *v9;
    *(_QWORD *)(v8 + 16) = v13;
  }
  else
  {
    *(_BYTE *)v8 = *(_BYTE *)v9;
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)(a2 + v18);
  *(_BYTE *)(v19 + 1) = *(_BYTE *)(a2 + v18 + 1);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(a2 + v18 + 8);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(a2 + v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v19 + 24) = *(_DWORD *)(v20 + 24);
  *(_DWORD *)(v19 + 28) = *(_DWORD *)(v20 + 28);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 40) = *(_QWORD *)(v20 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 56) = *(_QWORD *)(v20 + 56);
  *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 72) = *(_QWORD *)(v20 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
  *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
  *(_QWORD *)(v19 + 96) = *(_QWORD *)(v20 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v20 + 104);
  *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
  *(_QWORD *)(v19 + 104) = v21;
  *(_QWORD *)(v19 + 120) = *(_QWORD *)(v20 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for GroupLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  v11 = a1 + v8;
  v12 = a2 + v8;
  v13 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  v18 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
  v19 = *(_OWORD *)(v17 + 112);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)(v17 + 96);
  *(_OWORD *)(v16 + 112) = v19;
  v20 = *(_OWORD *)(v17 + 80);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
  *(_OWORD *)(v16 + 80) = v20;
  v21 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v21;
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  return a1;
}

