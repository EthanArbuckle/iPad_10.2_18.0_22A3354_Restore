uint64_t IssueExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t IssueExposureEvent.Model.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for IssueExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9E00);
}

uint64_t IssueExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for IssueExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t IssueExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IssueExposureEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *IssueExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for IssueExposureEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t IssueExposureEvent.Model.issueScienceData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE __dst[280];

  v3 = (const void *)(v1 + *(int *)(type metadata accessor for IssueExposureEvent.Model(0) + 36));
  memcpy(__dst, v3, 0x111uLL);
  memcpy(a1, v3, 0x111uLL);
  return sub_1D57D42AC((uint64_t)__dst);
}

uint64_t IssueExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent.Model(0) + 40);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t IssueExposureEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for IssueExposureEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 44));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t IssueExposureEvent.Model.issueExposureContextData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IssueExposureEvent.Model(0) + 48));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t IssueExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for IssueExposureEvent.Model(0) + 52));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t IssueExposureEvent.Model.feedPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for IssueExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t IssueExposureEvent.Model.offlineModeData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for IssueExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

void *IssueExposureEvent.Model.init(eventData:issueData:timedData:feedData:groupData:issueScienceData:channelData:userChannelContextData:issueExposureContextData:userBundleSubscriptionContextData:feedPositionData:offlineModeData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, const void *a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, char *a11, int *a12, char *a13)
{
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  int v24;
  char v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *result;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  __int16 v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[136];
  _BYTE __dst[273];

  v39 = a2[1];
  v40 = *a2;
  v38 = *((_BYTE *)a2 + 16);
  v18 = *((_BYTE *)a2 + 17);
  v37 = a2[3];
  v42 = *a4;
  v41 = *((_QWORD *)a4 + 2);
  sub_1D57DD5B8(a5, (uint64_t)v59);
  memcpy(__dst, a6, sizeof(__dst));
  v19 = a7[1];
  v46 = *a7;
  v44 = *((_BYTE *)a7 + 17);
  v45 = *((_BYTE *)a7 + 16);
  v20 = a7[3];
  v21 = a7[4];
  v43 = v20;
  v48 = a8[1];
  v49 = *a8;
  v47 = *((_WORD *)a8 + 1);
  v50 = a10[1];
  v51 = *a10;
  v22 = *a11;
  v57 = *((_QWORD *)a11 + 2);
  v58 = *((_QWORD *)a11 + 1);
  v55 = a11[25];
  v56 = a11[24];
  v53 = *((_QWORD *)a11 + 5);
  v54 = *((_QWORD *)a11 + 4);
  v23 = a11[48];
  v24 = *a12;
  v25 = *a13;
  v26 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a9, a1, v26);
  v27 = (int *)type metadata accessor for IssueExposureEvent.Model(0);
  v28 = a9 + v27[5];
  *(_QWORD *)v28 = v40;
  *(_QWORD *)(v28 + 8) = v39;
  *(_BYTE *)(v28 + 16) = v38;
  *(_BYTE *)(v28 + 17) = v18;
  *(_QWORD *)(v28 + 24) = v37;
  v29 = a9 + v27[6];
  v30 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v29, a3, v30);
  v31 = a9 + v27[7];
  *(_OWORD *)v31 = v42;
  *(_QWORD *)(v31 + 16) = v41;
  sub_1D57DD5B8((uint64_t)v59, a9 + v27[8]);
  result = memcpy((void *)(a9 + v27[9]), __dst, 0x111uLL);
  v33 = a9 + v27[10];
  *(_QWORD *)v33 = v46;
  *(_QWORD *)(v33 + 8) = v19;
  *(_BYTE *)(v33 + 16) = v45;
  *(_BYTE *)(v33 + 17) = v44;
  *(_QWORD *)(v33 + 24) = v43;
  *(_QWORD *)(v33 + 32) = v21;
  v34 = a9 + v27[11];
  *(_BYTE *)v34 = v49;
  *(_BYTE *)(v34 + 1) = v48;
  *(_WORD *)(v34 + 2) = v47;
  v35 = (_QWORD *)(a9 + v27[12]);
  *v35 = v51;
  v35[1] = v50;
  v36 = a9 + v27[13];
  *(_BYTE *)v36 = v22;
  *(_QWORD *)(v36 + 8) = v58;
  *(_QWORD *)(v36 + 16) = v57;
  *(_BYTE *)(v36 + 24) = v56;
  *(_BYTE *)(v36 + 25) = v55;
  *(_QWORD *)(v36 + 32) = v54;
  *(_QWORD *)(v36 + 40) = v53;
  *(_BYTE *)(v36 + 48) = v23;
  *(_DWORD *)(a9 + v27[14]) = v24;
  *(_BYTE *)(a9 + v27[15]) = v25;
  return result;
}

uint64_t sub_1D59BA16C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59BA1A4 + 4 * byte_1D5AD6210[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59BA1A4()
{
  return 0x7461446575737369;
}

uint64_t sub_1D59BA1B8()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D59BA1CC()
{
  return 0x6174614464656566;
}

uint64_t sub_1D59BA1E4()
{
  return 0x74614470756F7267;
}

unint64_t sub_1D59BA1F8()
{
  return 0xD000000000000010;
}

uint64_t sub_1D59BA290()
{
  return 0x4D656E696C66666FLL;
}

uint64_t sub_1D59BA2B4()
{
  unsigned __int8 *v0;

  return sub_1D59BA16C(*v0);
}

uint64_t sub_1D59BA2BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59BEBE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59BA2E0()
{
  sub_1D59BA814();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59BA308()
{
  sub_1D59BA814();
  return sub_1D5AAEEE0();
}

uint64_t IssueExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v34;
  char v35;
  _BYTE v36[273];
  char v37;
  uint64_t v38;
  _BYTE v39[144];
  __int128 v40;
  uint64_t v41;

  v3 = v1;
  sub_1D59BB154(0, &qword_1EFF4F3C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59BA814();
  sub_1D5AAEEC8();
  v36[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for IssueExposureEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    v14 = *((_BYTE *)v11 + 16);
    v15 = *((_BYTE *)v11 + 17);
    v16 = v11[3];
    *(_QWORD *)v36 = v12;
    *(_QWORD *)&v36[8] = v13;
    v36[16] = v14;
    v36[17] = v15;
    *(_QWORD *)&v36[24] = v16;
    v39[0] = 1;
    sub_1D57C5F1C();
    sub_1D5AAED6C();
    v36[0] = 2;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v17 = (__int128 *)(v3 + v10[7]);
    v18 = *((_QWORD *)v17 + 2);
    v40 = *v17;
    v41 = v18;
    v39[143] = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[8], (uint64_t)v39);
    sub_1D57DD5B8((uint64_t)v39, (uint64_t)&v38);
    v37 = 4;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    memcpy(v36, (const void *)(v3 + v10[9]), sizeof(v36));
    v35 = 5;
    sub_1D57CB7A8();
    sub_1D5AAED6C();
    v19 = (uint64_t *)(v3 + v10[10]);
    v20 = *v19;
    v21 = v19[1];
    v22 = *((_BYTE *)v19 + 16);
    v23 = *((_BYTE *)v19 + 17);
    v25 = v19[3];
    v24 = v19[4];
    *(_QWORD *)v36 = v20;
    *(_QWORD *)&v36[8] = v21;
    v36[16] = v22;
    v36[17] = v23;
    *(_QWORD *)&v36[24] = v25;
    *(_QWORD *)&v36[32] = v24;
    v35 = 6;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v26 = (char *)(v3 + v10[11]);
    v27 = *v26;
    v28 = v26[1];
    LOWORD(v26) = *((_WORD *)v26 + 1);
    v36[0] = v27;
    v36[1] = v28;
    *(_WORD *)&v36[2] = (_WORD)v26;
    v35 = 7;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    *(_OWORD *)v36 = *(_OWORD *)(v3 + v10[12]);
    v35 = 8;
    sub_1D57C784C();
    sub_1D5AAED18();
    v29 = v3 + v10[13];
    v30 = *(_BYTE *)(v29 + 24);
    v31 = *(_BYTE *)(v29 + 25);
    v32 = *(_BYTE *)(v29 + 48);
    v36[0] = *(_BYTE *)v29;
    *(_OWORD *)&v36[8] = *(_OWORD *)(v29 + 8);
    v36[24] = v30;
    v36[25] = v31;
    *(_OWORD *)&v36[32] = *(_OWORD *)(v29 + 32);
    v36[48] = v32;
    v35 = 9;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    *(_DWORD *)v36 = *(_DWORD *)(v3 + v10[14]);
    v35 = 10;
    sub_1D57C9C4C();
    sub_1D5AAED6C();
    v36[0] = *(_BYTE *)(v3 + v10[15]);
    v35 = 11;
    sub_1D57CE05C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59BA814()
{
  unint64_t result;

  result = qword_1ED9C9DE0;
  if (!qword_1ED9C9DE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD652C, &type metadata for IssueExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C9DE0);
  }
  return result;
}

uint64_t IssueExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  int *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  __int16 v38;
  char *v39;
  char v40;
  char v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  int *v57;
  char *v58;
  _BYTE v59[24];
  uint64_t v60;
  __int128 v61;
  char v62;
  _BYTE v63[136];
  char v64[136];
  _OWORD v65[18];
  char v66;
  char v67;
  char v68;

  v48 = a2;
  v3 = sub_1D5AADFB0();
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADF98();
  v54 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59BB154(0, &qword_1ED9CC808, MEMORY[0x1E0DED048]);
  v50 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v47 - v11;
  v57 = (int *)type metadata accessor for IssueExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v57);
  v58 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D59BA814();
  v49 = v12;
  v15 = v56;
  sub_1D5AAEEB0();
  v51 = v6;
  if (v15)
  {
    v56 = v15;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  }
  else
  {
    v16 = v5;
    LOBYTE(v65[0]) = 0;
    sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v20 = v6;
    v21 = v58;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v58, v8, v20);
    v64[0] = 1;
    sub_1D57C5ED8();
    sub_1D5AAECD0();
    v22 = *((_QWORD *)&v65[0] + 1);
    v23 = v65[1];
    v24 = BYTE1(v65[1]);
    v25 = *((_QWORD *)&v65[1] + 1);
    v26 = v57;
    v27 = &v21[v57[5]];
    *(_QWORD *)v27 = *(_QWORD *)&v65[0];
    *((_QWORD *)v27 + 1) = v22;
    v27[16] = v23;
    v27[17] = v24;
    *((_QWORD *)v27 + 3) = v25;
    LOBYTE(v65[0]) = 2;
    sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v28 = v53;
    sub_1D5AAECD0();
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(&v21[v26[6]], v16, v28);
    v64[0] = 3;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v29 = *(_QWORD *)&v65[1];
    v30 = &v21[v26[7]];
    *(_OWORD *)v30 = v65[0];
    *((_QWORD *)v30 + 2) = v29;
    v68 = 4;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57DD5B8((uint64_t)v64, (uint64_t)v63);
    sub_1D57DD5B8((uint64_t)v63, (uint64_t)&v21[v26[8]]);
    v67 = 5;
    sub_1D57CB764();
    sub_1D5AAECD0();
    memcpy(&v21[v26[9]], v65, 0x111uLL);
    v66 = 6;
    sub_1D57CB874();
    sub_1D5AAECD0();
    v31 = *(_QWORD *)&v59[8];
    v32 = v59[16];
    v33 = v59[17];
    v34 = v60;
    v35 = v61;
    v36 = &v21[v26[10]];
    *(_QWORD *)v36 = *(_QWORD *)v59;
    *((_QWORD *)v36 + 1) = v31;
    v36[16] = v32;
    v36[17] = v33;
    *((_QWORD *)v36 + 3) = v34;
    *((_QWORD *)v36 + 4) = v35;
    v66 = 7;
    sub_1D57C7AE0();
    sub_1D5AAECD0();
    v37 = v59[1];
    v38 = *(_WORD *)&v59[2];
    v39 = &v21[v57[11]];
    *v39 = v59[0];
    v39[1] = v37;
    *((_WORD *)v39 + 1) = v38;
    v66 = 8;
    sub_1D57C7808();
    sub_1D5AAEC7C();
    *(_OWORD *)&v21[v57[12]] = *(_OWORD *)v59;
    v66 = 9;
    sub_1D57C6AF8();
    sub_1D5AAECD0();
    v56 = 0;
    v40 = v60;
    v41 = BYTE1(v60);
    v42 = v62;
    v43 = &v58[v57[13]];
    *v43 = v59[0];
    *(_OWORD *)(v43 + 8) = *(_OWORD *)&v59[8];
    v43[24] = v40;
    v43[25] = v41;
    *((_OWORD *)v43 + 2) = v61;
    v43[48] = v42;
    v66 = 10;
    sub_1D57C9C08();
    v44 = v56;
    sub_1D5AAECD0();
    v56 = v44;
    if (v44
      || (*(_DWORD *)&v58[v57[14]] = *(_DWORD *)v59,
          v66 = 11,
          sub_1D57CE014(),
          v45 = v56,
          sub_1D5AAECD0(),
          (v56 = v45) != 0))
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v49, v50);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v58, v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v57;
      v19 = v58;
      (*(void (**)(char *, uint64_t))(v52 + 8))(&v58[v57[6]], v53);
      sub_1D57DAEDC(*(_QWORD *)&v19[v18[7]], *(_QWORD *)&v19[v18[7] + 8], *(_QWORD *)&v19[v18[7] + 16]);
      sub_1D57DD5B8((uint64_t)&v19[v18[8]], (uint64_t)v65);
      sub_1D57DE9C8(v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
      memcpy(v65, &v19[v18[9]], 0x111uLL);
      sub_1D57D5AB8((uint64_t)v65);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v49, v50);
      v46 = (uint64_t)v58;
      v58[v57[15]] = v59[0];
      sub_1D59BB1B0(v46, v48);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      return sub_1D59BB1F4(v46);
    }
  }
}

void sub_1D59BB154(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59BA814();
    v7 = a3(a1, &type metadata for IssueExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59BB1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IssueExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59BB1F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IssueExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59BB230@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IssueExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59BB244(_QWORD *a1)
{
  return IssueExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59BB258@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCE68, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCBA0, a1);
}

uint64_t sub_1D59BB27C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCE70, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCBB8, a1);
}

uint64_t sub_1D59BB2A0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for IssueExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for IssueExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
}

uint64_t initializeWithCopy for IssueExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for IssueExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for IssueExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for IssueExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59BCAAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D57A8C9C();
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
                        v8 = v23;
                        v12 = *(_QWORD *)(v23 - 8);
                        v13 = a3[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for IssueExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59BCDD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D57A8C9C();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
                        v10 = v25;
                        v14 = *(_QWORD *)(v25 - 8);
                        v15 = a4[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59BD0F8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    if (v1 <= 0x3F)
    {
      sub_1D57A8C9C();
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
                        if (v11 <= 0x3F)
                          swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for IssueExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = sub_1D5AADFB0();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *((_QWORD *)v19 + 2);
    if (v20 == 1)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
    }
    else
    {
      *v18 = *v19;
      *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
      *((_QWORD *)v18 + 2) = v20;
      swift_bridgeObjectRetain();
    }
    v22 = a3[8];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *((_QWORD *)v24 + 2);
    if (v25)
    {
      *(_WORD *)v23 = *(_WORD *)v24;
      *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
      *((_QWORD *)v23 + 2) = v25;
      *((_QWORD *)v23 + 3) = *((_QWORD *)v24 + 3);
      v26 = *((_QWORD *)v24 + 5);
      *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
      *((_QWORD *)v23 + 5) = v26;
      v27 = *((_QWORD *)v24 + 7);
      *((_QWORD *)v23 + 6) = *((_QWORD *)v24 + 6);
      *((_QWORD *)v23 + 7) = v27;
      v28 = *((_QWORD *)v24 + 9);
      *((_QWORD *)v23 + 8) = *((_QWORD *)v24 + 8);
      *((_QWORD *)v23 + 9) = v28;
      v23[80] = v24[80];
      v29 = *((_QWORD *)v24 + 12);
      *((_QWORD *)v23 + 11) = *((_QWORD *)v24 + 11);
      *((_QWORD *)v23 + 12) = v29;
      *((_QWORD *)v23 + 13) = *((_QWORD *)v24 + 13);
      v23[112] = v24[112];
      v30 = *((_QWORD *)v24 + 16);
      *((_QWORD *)v23 + 15) = *((_QWORD *)v24 + 15);
      *((_QWORD *)v23 + 16) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v31 = *((_OWORD *)v24 + 7);
      *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
      *((_OWORD *)v23 + 7) = v31;
      *((_QWORD *)v23 + 16) = *((_QWORD *)v24 + 16);
      v32 = *((_OWORD *)v24 + 3);
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      *((_OWORD *)v23 + 3) = v32;
      v33 = *((_OWORD *)v24 + 5);
      *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
      *((_OWORD *)v23 + 5) = v33;
      v34 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v34;
    }
    v35 = a3[9];
    v36 = a3[10];
    v37 = (char *)a1 + v35;
    v38 = (char *)a2 + v35;
    v39 = *((_OWORD *)v38 + 1);
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v39;
    v40 = *((_OWORD *)v38 + 3);
    *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    *((_OWORD *)v37 + 3) = v40;
    v41 = *((_OWORD *)v38 + 5);
    *((_OWORD *)v37 + 4) = *((_OWORD *)v38 + 4);
    *((_OWORD *)v37 + 5) = v41;
    *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
    v42 = *((_QWORD *)v38 + 14);
    v43 = *((_QWORD *)v38 + 15);
    v37[128] = v38[128];
    *((_QWORD *)v37 + 14) = v42;
    *((_QWORD *)v37 + 15) = v43;
    *((_QWORD *)v37 + 17) = *((_QWORD *)v38 + 17);
    v37[144] = v38[144];
    *((_QWORD *)v37 + 19) = *((_QWORD *)v38 + 19);
    v37[160] = v38[160];
    *((_QWORD *)v37 + 21) = *((_QWORD *)v38 + 21);
    v37[176] = v38[176];
    v37[192] = v38[192];
    *((_QWORD *)v37 + 23) = *((_QWORD *)v38 + 23);
    v37[208] = v38[208];
    *((_QWORD *)v37 + 25) = *((_QWORD *)v38 + 25);
    v37[224] = v38[224];
    *((_QWORD *)v37 + 27) = *((_QWORD *)v38 + 27);
    v37[240] = v38[240];
    *((_QWORD *)v37 + 29) = *((_QWORD *)v38 + 29);
    v37[256] = v38[256];
    *((_QWORD *)v37 + 31) = *((_QWORD *)v38 + 31);
    v44 = *((_QWORD *)v38 + 33);
    v37[272] = v38[272];
    *((_QWORD *)v37 + 33) = v44;
    v45 = (char *)a1 + v36;
    v46 = (char *)a2 + v36;
    v47 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = v47;
    v45[16] = v46[16];
    v45[17] = v46[17];
    v48 = *((_QWORD *)v46 + 4);
    *((_QWORD *)v45 + 3) = *((_QWORD *)v46 + 3);
    *((_QWORD *)v45 + 4) = v48;
    v49 = a3[12];
    *(_DWORD *)((char *)a1 + a3[11]) = *(_DWORD *)((char *)a2 + a3[11]);
    v50 = (_QWORD *)((char *)a1 + v49);
    v51 = (_QWORD *)((char *)a2 + v49);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = a3[13];
    v54 = a3[14];
    v55 = (char *)a1 + v53;
    v56 = (char *)a2 + v53;
    *v55 = *v56;
    v57 = *((_QWORD *)v56 + 2);
    *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
    *((_QWORD *)v55 + 2) = v57;
    v55[24] = v56[24];
    v55[25] = v56[25];
    v55[48] = v56[48];
    v58 = *((_QWORD *)v56 + 5);
    *((_QWORD *)v55 + 4) = *((_QWORD *)v56 + 4);
    *((_QWORD *)v55 + 5) = v58;
    *(_DWORD *)((char *)a1 + v54) = *(_DWORD *)((char *)a2 + v54);
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for IssueExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + a2[6];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IssueExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = sub_1D5AADFB0();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(v18 + 16);
  if (v19 == 1)
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  }
  else
  {
    *(_BYTE *)v17 = *(_BYTE *)v18;
    *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
    *(_QWORD *)(v17 + 16) = v19;
    swift_bridgeObjectRetain();
  }
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    *(_WORD *)v21 = *(_WORD *)v22;
    *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
    *(_QWORD *)(v21 + 16) = v23;
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
    v24 = *(_QWORD *)(v22 + 40);
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
    *(_QWORD *)(v21 + 40) = v24;
    v25 = *(_QWORD *)(v22 + 56);
    *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
    *(_QWORD *)(v21 + 56) = v25;
    v26 = *(_QWORD *)(v22 + 72);
    *(_QWORD *)(v21 + 64) = *(_QWORD *)(v22 + 64);
    *(_QWORD *)(v21 + 72) = v26;
    *(_BYTE *)(v21 + 80) = *(_BYTE *)(v22 + 80);
    v27 = *(_QWORD *)(v22 + 96);
    *(_QWORD *)(v21 + 88) = *(_QWORD *)(v22 + 88);
    *(_QWORD *)(v21 + 96) = v27;
    *(_QWORD *)(v21 + 104) = *(_QWORD *)(v22 + 104);
    *(_BYTE *)(v21 + 112) = *(_BYTE *)(v22 + 112);
    v28 = *(_QWORD *)(v22 + 128);
    *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
    *(_QWORD *)(v21 + 128) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *(_OWORD *)(v22 + 112);
    *(_OWORD *)(v21 + 96) = *(_OWORD *)(v22 + 96);
    *(_OWORD *)(v21 + 112) = v29;
    *(_QWORD *)(v21 + 128) = *(_QWORD *)(v22 + 128);
    v30 = *(_OWORD *)(v22 + 48);
    *(_OWORD *)(v21 + 32) = *(_OWORD *)(v22 + 32);
    *(_OWORD *)(v21 + 48) = v30;
    v31 = *(_OWORD *)(v22 + 80);
    *(_OWORD *)(v21 + 64) = *(_OWORD *)(v22 + 64);
    *(_OWORD *)(v21 + 80) = v31;
    v32 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v32;
  }
  v33 = a3[9];
  v34 = a3[10];
  v35 = a1 + v33;
  v36 = a2 + v33;
  v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  v38 = *(_OWORD *)(v36 + 48);
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
  *(_OWORD *)(v35 + 48) = v38;
  v39 = *(_OWORD *)(v36 + 80);
  *(_OWORD *)(v35 + 64) = *(_OWORD *)(v36 + 64);
  *(_OWORD *)(v35 + 80) = v39;
  *(_OWORD *)(v35 + 96) = *(_OWORD *)(v36 + 96);
  v40 = *(_QWORD *)(v36 + 112);
  v41 = *(_QWORD *)(v36 + 120);
  *(_BYTE *)(v35 + 128) = *(_BYTE *)(v36 + 128);
  *(_QWORD *)(v35 + 112) = v40;
  *(_QWORD *)(v35 + 120) = v41;
  *(_QWORD *)(v35 + 136) = *(_QWORD *)(v36 + 136);
  *(_BYTE *)(v35 + 144) = *(_BYTE *)(v36 + 144);
  *(_QWORD *)(v35 + 152) = *(_QWORD *)(v36 + 152);
  *(_BYTE *)(v35 + 160) = *(_BYTE *)(v36 + 160);
  *(_QWORD *)(v35 + 168) = *(_QWORD *)(v36 + 168);
  *(_BYTE *)(v35 + 176) = *(_BYTE *)(v36 + 176);
  *(_BYTE *)(v35 + 192) = *(_BYTE *)(v36 + 192);
  *(_QWORD *)(v35 + 184) = *(_QWORD *)(v36 + 184);
  *(_BYTE *)(v35 + 208) = *(_BYTE *)(v36 + 208);
  *(_QWORD *)(v35 + 200) = *(_QWORD *)(v36 + 200);
  *(_BYTE *)(v35 + 224) = *(_BYTE *)(v36 + 224);
  *(_QWORD *)(v35 + 216) = *(_QWORD *)(v36 + 216);
  *(_BYTE *)(v35 + 240) = *(_BYTE *)(v36 + 240);
  *(_QWORD *)(v35 + 232) = *(_QWORD *)(v36 + 232);
  *(_BYTE *)(v35 + 256) = *(_BYTE *)(v36 + 256);
  *(_QWORD *)(v35 + 248) = *(_QWORD *)(v36 + 248);
  v42 = *(_QWORD *)(v36 + 264);
  *(_BYTE *)(v35 + 272) = *(_BYTE *)(v36 + 272);
  *(_QWORD *)(v35 + 264) = v42;
  v43 = a1 + v34;
  v44 = a2 + v34;
  v45 = *(_QWORD *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *(_QWORD *)(v43 + 8) = v45;
  *(_BYTE *)(v43 + 16) = *(_BYTE *)(v44 + 16);
  *(_BYTE *)(v43 + 17) = *(_BYTE *)(v44 + 17);
  v46 = *(_QWORD *)(v44 + 32);
  *(_QWORD *)(v43 + 24) = *(_QWORD *)(v44 + 24);
  *(_QWORD *)(v43 + 32) = v46;
  v47 = a3[12];
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = a3[13];
  v52 = a3[14];
  v53 = a1 + v51;
  v54 = a2 + v51;
  *(_BYTE *)v53 = *(_BYTE *)v54;
  v55 = *(_QWORD *)(v54 + 16);
  *(_QWORD *)(v53 + 8) = *(_QWORD *)(v54 + 8);
  *(_QWORD *)(v53 + 16) = v55;
  *(_BYTE *)(v53 + 24) = *(_BYTE *)(v54 + 24);
  *(_BYTE *)(v53 + 25) = *(_BYTE *)(v54 + 25);
  *(_BYTE *)(v53 + 48) = *(_BYTE *)(v54 + 48);
  v56 = *(_QWORD *)(v54 + 40);
  *(_QWORD *)(v53 + 32) = *(_QWORD *)(v54 + 32);
  *(_QWORD *)(v53 + 40) = v56;
  *(_DWORD *)(a1 + v52) = *(_DWORD *)(a2 + v52);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IssueExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = (__int128 *)(a2 + v14);
  v17 = *(_QWORD *)(a1 + v14 + 16);
  v18 = *(_QWORD *)(a2 + v14 + 16);
  if (v17 == 1)
  {
    if (v18 == 1)
    {
      v19 = *v16;
      *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
      *(_OWORD *)v15 = v19;
    }
    else
    {
      *(_BYTE *)v15 = *(_BYTE *)v16;
      *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
      *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v18 == 1)
  {
    sub_1D57D9100(v15);
    v20 = *((_QWORD *)v16 + 2);
    *(_OWORD *)v15 = *v16;
    *(_QWORD *)(v15 + 16) = v20;
  }
  else
  {
    *(_BYTE *)v15 = *(_BYTE *)v16;
    *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
    *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(a1 + v21 + 16);
  v25 = *(_QWORD *)(a2 + v21 + 16);
  if (v24)
  {
    if (v25)
    {
      *(_BYTE *)v22 = *(_BYTE *)v23;
      *(_BYTE *)(v22 + 1) = *(_BYTE *)(v23 + 1);
      *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
      *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v22 + 24) = *(_DWORD *)(v23 + 24);
      *(_DWORD *)(v22 + 28) = *(_DWORD *)(v23 + 28);
      *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 48) = *(_QWORD *)(v23 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 56) = *(_QWORD *)(v23 + 56);
      *(_QWORD *)(v22 + 64) = *(_QWORD *)(v23 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 72) = *(_QWORD *)(v23 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v22 + 80) = *(_BYTE *)(v23 + 80);
      *(_QWORD *)(v22 + 88) = *(_QWORD *)(v23 + 88);
      *(_QWORD *)(v22 + 96) = *(_QWORD *)(v23 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v23 + 104);
      *(_BYTE *)(v22 + 112) = *(_BYTE *)(v23 + 112);
      *(_QWORD *)(v22 + 104) = v26;
      *(_QWORD *)(v22 + 120) = *(_QWORD *)(v23 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v22);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      v28 = *(_OWORD *)(v23 + 64);
      v30 = *(_OWORD *)(v23 + 16);
      v29 = *(_OWORD *)(v23 + 32);
      *(_OWORD *)(v22 + 48) = *(_OWORD *)(v23 + 48);
      *(_OWORD *)(v22 + 64) = v28;
      *(_OWORD *)(v22 + 16) = v30;
      *(_OWORD *)(v22 + 32) = v29;
      v32 = *(_OWORD *)(v23 + 96);
      v31 = *(_OWORD *)(v23 + 112);
      v33 = *(_OWORD *)(v23 + 80);
      *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
      *(_OWORD *)(v22 + 96) = v32;
      *(_OWORD *)(v22 + 112) = v31;
      *(_OWORD *)(v22 + 80) = v33;
    }
  }
  else if (v25)
  {
    *(_BYTE *)v22 = *(_BYTE *)v23;
    *(_BYTE *)(v22 + 1) = *(_BYTE *)(v23 + 1);
    *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
    *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
    *(_DWORD *)(v22 + 24) = *(_DWORD *)(v23 + 24);
    *(_DWORD *)(v22 + 28) = *(_DWORD *)(v23 + 28);
    *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
    *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 40);
    *(_QWORD *)(v22 + 48) = *(_QWORD *)(v23 + 48);
    *(_QWORD *)(v22 + 56) = *(_QWORD *)(v23 + 56);
    *(_QWORD *)(v22 + 64) = *(_QWORD *)(v23 + 64);
    *(_QWORD *)(v22 + 72) = *(_QWORD *)(v23 + 72);
    *(_BYTE *)(v22 + 80) = *(_BYTE *)(v23 + 80);
    *(_QWORD *)(v22 + 88) = *(_QWORD *)(v23 + 88);
    *(_QWORD *)(v22 + 96) = *(_QWORD *)(v23 + 96);
    v27 = *(_QWORD *)(v23 + 104);
    *(_BYTE *)(v22 + 112) = *(_BYTE *)(v23 + 112);
    *(_QWORD *)(v22 + 104) = v27;
    *(_QWORD *)(v22 + 120) = *(_QWORD *)(v23 + 120);
    *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
    v34 = *(_OWORD *)(v23 + 16);
    v35 = *(_OWORD *)(v23 + 32);
    v36 = *(_OWORD *)(v23 + 64);
    *(_OWORD *)(v22 + 48) = *(_OWORD *)(v23 + 48);
    *(_OWORD *)(v22 + 64) = v36;
    *(_OWORD *)(v22 + 16) = v34;
    *(_OWORD *)(v22 + 32) = v35;
    v37 = *(_OWORD *)(v23 + 80);
    v38 = *(_OWORD *)(v23 + 96);
    v39 = *(_OWORD *)(v23 + 112);
    *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
    *(_OWORD *)(v22 + 96) = v38;
    *(_OWORD *)(v22 + 112) = v39;
    *(_OWORD *)(v22 + 80) = v37;
  }
  v40 = a3[9];
  v41 = a1 + v40;
  v42 = a2 + v40;
  *(_QWORD *)v41 = *(_QWORD *)(a2 + v40);
  *(_QWORD *)(v41 + 8) = *(_QWORD *)(a2 + v40 + 8);
  *(_QWORD *)(v41 + 16) = *(_QWORD *)(a2 + v40 + 16);
  *(_QWORD *)(v41 + 24) = *(_QWORD *)(a2 + v40 + 24);
  *(_QWORD *)(v41 + 32) = *(_QWORD *)(a2 + v40 + 32);
  *(_QWORD *)(v41 + 40) = *(_QWORD *)(a2 + v40 + 40);
  *(_QWORD *)(v41 + 48) = *(_QWORD *)(a2 + v40 + 48);
  *(_QWORD *)(v41 + 56) = *(_QWORD *)(a2 + v40 + 56);
  *(_QWORD *)(v41 + 64) = *(_QWORD *)(a2 + v40 + 64);
  *(_QWORD *)(v41 + 72) = *(_QWORD *)(a2 + v40 + 72);
  *(_QWORD *)(v41 + 80) = *(_QWORD *)(a2 + v40 + 80);
  *(_QWORD *)(v41 + 88) = *(_QWORD *)(a2 + v40 + 88);
  *(_QWORD *)(v41 + 96) = *(_QWORD *)(a2 + v40 + 96);
  *(_QWORD *)(v41 + 104) = *(_QWORD *)(a2 + v40 + 104);
  *(_QWORD *)(v41 + 112) = *(_QWORD *)(a2 + v40 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(v42 + 120);
  *(_BYTE *)(v41 + 128) = *(_BYTE *)(v42 + 128);
  *(_QWORD *)(v41 + 120) = v43;
  v44 = *(_QWORD *)(v42 + 136);
  *(_BYTE *)(v41 + 144) = *(_BYTE *)(v42 + 144);
  *(_QWORD *)(v41 + 136) = v44;
  v45 = *(_QWORD *)(v42 + 152);
  *(_BYTE *)(v41 + 160) = *(_BYTE *)(v42 + 160);
  *(_QWORD *)(v41 + 152) = v45;
  v46 = *(_QWORD *)(v42 + 168);
  *(_BYTE *)(v41 + 176) = *(_BYTE *)(v42 + 176);
  *(_QWORD *)(v41 + 168) = v46;
  v47 = *(_QWORD *)(v42 + 184);
  *(_BYTE *)(v41 + 192) = *(_BYTE *)(v42 + 192);
  *(_QWORD *)(v41 + 184) = v47;
  v48 = *(_QWORD *)(v42 + 200);
  *(_BYTE *)(v41 + 208) = *(_BYTE *)(v42 + 208);
  *(_QWORD *)(v41 + 200) = v48;
  v49 = *(_QWORD *)(v42 + 216);
  *(_BYTE *)(v41 + 224) = *(_BYTE *)(v42 + 224);
  *(_QWORD *)(v41 + 216) = v49;
  v50 = *(_QWORD *)(v42 + 232);
  *(_BYTE *)(v41 + 240) = *(_BYTE *)(v42 + 240);
  *(_QWORD *)(v41 + 232) = v50;
  v51 = *(_QWORD *)(v42 + 248);
  *(_BYTE *)(v41 + 256) = *(_BYTE *)(v42 + 256);
  *(_QWORD *)(v41 + 248) = v51;
  v52 = *(_QWORD *)(v42 + 264);
  *(_BYTE *)(v41 + 272) = *(_BYTE *)(v42 + 272);
  *(_QWORD *)(v41 + 264) = v52;
  v53 = a3[10];
  v54 = a1 + v53;
  v55 = a2 + v53;
  *(_QWORD *)v54 = *(_QWORD *)(a2 + v53);
  *(_QWORD *)(v54 + 8) = *(_QWORD *)(a2 + v53 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v54 + 16) = *(_BYTE *)(v55 + 16);
  *(_BYTE *)(v54 + 17) = *(_BYTE *)(v55 + 17);
  *(_QWORD *)(v54 + 24) = *(_QWORD *)(v55 + 24);
  *(_QWORD *)(v54 + 32) = *(_QWORD *)(v55 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = a3[11];
  v57 = (_BYTE *)(a1 + v56);
  v58 = (_BYTE *)(a2 + v56);
  *v57 = *v58;
  v57[1] = v58[1];
  v57[2] = v58[2];
  v57[3] = v58[3];
  v59 = a3[12];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (_QWORD *)(a2 + v59);
  *v60 = *v61;
  v60[1] = v61[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v62 = a3[13];
  v63 = a1 + v62;
  v64 = a2 + v62;
  *(_BYTE *)v63 = *(_BYTE *)(a2 + v62);
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(a2 + v62 + 8);
  *(_QWORD *)(v63 + 16) = *(_QWORD *)(a2 + v62 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v63 + 24) = *(_BYTE *)(v64 + 24);
  *(_BYTE *)(v63 + 25) = *(_BYTE *)(v64 + 25);
  *(_QWORD *)(v63 + 32) = *(_QWORD *)(v64 + 32);
  *(_QWORD *)(v63 + 40) = *(_QWORD *)(v64 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v63 + 48) = *(_BYTE *)(v64 + 48);
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t initializeWithTake for IssueExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  v19 = a1 + v16;
  v20 = (__int128 *)(a2 + v16);
  v21 = v20[7];
  *(_OWORD *)(v19 + 96) = v20[6];
  *(_OWORD *)(v19 + 112) = v21;
  *(_QWORD *)(v19 + 128) = *((_QWORD *)v20 + 16);
  v22 = v20[3];
  *(_OWORD *)(v19 + 32) = v20[2];
  *(_OWORD *)(v19 + 48) = v22;
  v23 = v20[5];
  *(_OWORD *)(v19 + 64) = v20[4];
  *(_OWORD *)(v19 + 80) = v23;
  v25 = *v20;
  v24 = v20[1];
  v26 = a3[9];
  *(_OWORD *)v19 = v25;
  *(_OWORD *)(v19 + 16) = v24;
  memcpy((void *)(a1 + v26), (const void *)(a2 + v26), 0x111uLL);
  v27 = a3[10];
  v28 = a3[11];
  v29 = a1 + v27;
  v30 = (__int128 *)(a2 + v27);
  v31 = *v30;
  v32 = v30[1];
  *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
  *(_OWORD *)v29 = v31;
  *(_OWORD *)(v29 + 16) = v32;
  *(_DWORD *)(a1 + v28) = *(_DWORD *)(a2 + v28);
  v33 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
  *(_BYTE *)(v34 + 48) = *(_BYTE *)(v35 + 48);
  v37 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v37) = *(_BYTE *)(a2 + v37);
  return a1;
}

uint64_t assignWithTake for IssueExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  if (*(_QWORD *)(a1 + v15 + 16) == 1)
    goto LABEL_4;
  v18 = *(_QWORD *)(v17 + 16);
  if (v18 == 1)
  {
    sub_1D57D9100(v16);
LABEL_4:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v16 = *(_BYTE *)v17;
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = v18;
  swift_bridgeObjectRelease();
LABEL_6:
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  if (!*(_QWORD *)(a1 + v19 + 16))
  {
LABEL_10:
    v25 = *(_OWORD *)(v21 + 112);
    *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
    *(_OWORD *)(v20 + 112) = v25;
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    v26 = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
    *(_OWORD *)(v20 + 48) = v26;
    v27 = *(_OWORD *)(v21 + 80);
    *(_OWORD *)(v20 + 64) = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 80) = v27;
    v28 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 16) = v28;
    goto LABEL_11;
  }
  v22 = *(_QWORD *)(v21 + 16);
  if (!v22)
  {
    sub_1D57E17B8(v20);
    goto LABEL_10;
  }
  *(_WORD *)v20 = *(_WORD *)v21;
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 24) = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v21 + 64);
  *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
  *(_QWORD *)(v20 + 64) = v23;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
  v24 = *(_QWORD *)(v21 + 96);
  *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
  *(_QWORD *)(v20 + 96) = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 104) = *(_QWORD *)(v21 + 104);
  *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
  *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
  swift_bridgeObjectRelease();
LABEL_11:
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_OWORD *)(a2 + v29 + 16);
  *(_OWORD *)v30 = *(_OWORD *)(a2 + v29);
  *(_OWORD *)(v30 + 16) = v32;
  v33 = *(_OWORD *)(a2 + v29 + 48);
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(a2 + v29 + 32);
  *(_OWORD *)(v30 + 48) = v33;
  v34 = *(_OWORD *)(a2 + v29 + 80);
  *(_OWORD *)(v30 + 64) = *(_OWORD *)(a2 + v29 + 64);
  *(_OWORD *)(v30 + 80) = v34;
  *(_OWORD *)(v30 + 96) = *(_OWORD *)(a2 + v29 + 96);
  *(_QWORD *)(v30 + 112) = *(_QWORD *)(a2 + v29 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v30 + 120) = *(_QWORD *)(v31 + 120);
  *(_BYTE *)(v30 + 128) = *(_BYTE *)(v31 + 128);
  *(_QWORD *)(v30 + 136) = *(_QWORD *)(v31 + 136);
  *(_BYTE *)(v30 + 144) = *(_BYTE *)(v31 + 144);
  *(_QWORD *)(v30 + 152) = *(_QWORD *)(v31 + 152);
  *(_BYTE *)(v30 + 160) = *(_BYTE *)(v31 + 160);
  *(_BYTE *)(v30 + 176) = *(_BYTE *)(v31 + 176);
  *(_QWORD *)(v30 + 168) = *(_QWORD *)(v31 + 168);
  v35 = *(_QWORD *)(v31 + 184);
  *(_BYTE *)(v30 + 192) = *(_BYTE *)(v31 + 192);
  *(_QWORD *)(v30 + 184) = v35;
  *(_QWORD *)(v30 + 200) = *(_QWORD *)(v31 + 200);
  *(_BYTE *)(v30 + 208) = *(_BYTE *)(v31 + 208);
  *(_QWORD *)(v30 + 216) = *(_QWORD *)(v31 + 216);
  *(_BYTE *)(v30 + 224) = *(_BYTE *)(v31 + 224);
  *(_QWORD *)(v30 + 232) = *(_QWORD *)(v31 + 232);
  *(_BYTE *)(v30 + 240) = *(_BYTE *)(v31 + 240);
  *(_BYTE *)(v30 + 256) = *(_BYTE *)(v31 + 256);
  *(_QWORD *)(v30 + 248) = *(_QWORD *)(v31 + 248);
  *(_BYTE *)(v30 + 272) = *(_BYTE *)(v31 + 272);
  *(_QWORD *)(v30 + 264) = *(_QWORD *)(v31 + 264);
  v36 = a3[10];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(a2 + v36 + 8);
  *(_QWORD *)v37 = *(_QWORD *)(a2 + v36);
  *(_QWORD *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v37 + 16) = *(_BYTE *)(v38 + 16);
  *(_BYTE *)(v37 + 17) = *(_BYTE *)(v38 + 17);
  v40 = *(_QWORD *)(v38 + 32);
  *(_QWORD *)(v37 + 24) = *(_QWORD *)(v38 + 24);
  *(_QWORD *)(v37 + 32) = v40;
  swift_bridgeObjectRelease();
  v41 = a3[11];
  v42 = a3[12];
  v43 = a1 + v41;
  v44 = a2 + v41;
  *(_BYTE *)v43 = *(_BYTE *)v44;
  *(_BYTE *)(v43 + 1) = *(_BYTE *)(v44 + 1);
  *(_WORD *)(v43 + 2) = *(_WORD *)(v44 + 2);
  v45 = (_QWORD *)(a1 + v42);
  v46 = (uint64_t *)(a2 + v42);
  v48 = *v46;
  v47 = v46[1];
  *v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  v49 = a3[13];
  v50 = a1 + v49;
  v51 = a2 + v49;
  *(_BYTE *)v50 = *(_BYTE *)(a2 + v49);
  v52 = *(_QWORD *)(a2 + v49 + 16);
  *(_QWORD *)(v50 + 8) = *(_QWORD *)(a2 + v49 + 8);
  *(_QWORD *)(v50 + 16) = v52;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v50 + 24) = *(_BYTE *)(v51 + 24);
  *(_BYTE *)(v50 + 25) = *(_BYTE *)(v51 + 25);
  v53 = *(_QWORD *)(v51 + 40);
  *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
  *(_QWORD *)(v50 + 40) = v53;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v50 + 48) = *(_BYTE *)(v51 + 48);
  v54 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v54) = *(_BYTE *)(a2 + v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59BE7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1D5AADFB0();
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59BE8B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1D5AADFB0();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D59BE958()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IssueExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1D59BEA8C + 4 * byte_1D5AD6221[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1D59BEAC0 + 4 * byte_1D5AD621C[v4]))();
}

uint64_t sub_1D59BEAC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59BEAC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59BEAD0);
  return result;
}

uint64_t sub_1D59BEADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59BEAE4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1D59BEAE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59BEAF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueExposureEvent.Model.CodingKeys()
{
  return &type metadata for IssueExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D59BEB10()
{
  unint64_t result;

  result = qword_1EFF4F3D0;
  if (!qword_1EFF4F3D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6504, &type metadata for IssueExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F3D0);
  }
  return result;
}

unint64_t sub_1D59BEB58()
{
  unint64_t result;

  result = qword_1ED9C9DF0;
  if (!qword_1ED9C9DF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6474, &type metadata for IssueExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C9DF0);
  }
  return result;
}

unint64_t sub_1D59BEBA0()
{
  unint64_t result;

  result = qword_1ED9C9DE8;
  if (!qword_1ED9C9DE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD649C, &type metadata for IssueExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C9DE8);
  }
  return result;
}

uint64_t sub_1D59BEBE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF1280 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AECA10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x4D656E696C66666FLL && a2 == 0xEF6174614465646FLL)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t PurchaseRestoreData.purchaseID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseRestoreData.purchaseID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PurchaseRestoreData.purchaseID.modify())()
{
  return nullsub_1;
}

uint64_t PurchaseRestoreData.isNewsAppPurchase.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PurchaseRestoreData.isNewsAppPurchase.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*PurchaseRestoreData.isNewsAppPurchase.modify())()
{
  return nullsub_1;
}

NewsAnalytics::PurchaseRestoreData __swiftcall PurchaseRestoreData.init(purchaseID:isNewsAppPurchase:)(Swift::String purchaseID, Swift::Bool isNewsAppPurchase)
{
  uint64_t v2;
  NewsAnalytics::PurchaseRestoreData result;

  *(Swift::String *)v2 = purchaseID;
  *(_BYTE *)(v2 + 16) = isNewsAppPurchase;
  result.purchaseID = purchaseID;
  result.isNewsAppPurchase = isNewsAppPurchase;
  return result;
}

uint64_t sub_1D59BF178()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x6573616863727570;
}

uint64_t sub_1D59BF1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59BF774(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59BF1E0()
{
  sub_1D59BF360();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59BF208()
{
  sub_1D59BF360();
  return sub_1D5AAEEE0();
}

uint64_t PurchaseRestoreData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;

  sub_1D59BF534(0, &qword_1EFF4F3D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59BF360();
  sub_1D5AAEEC8();
  v13 = 0;
  v8 = v10[1];
  sub_1D5AAED3C();
  if (!v8)
  {
    v12 = 1;
    sub_1D5AAED48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59BF360()
{
  unint64_t result;

  result = qword_1EFF4F3E0;
  if (!qword_1EFF4F3E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6708, &type metadata for PurchaseRestoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F3E0);
  }
  return result;
}

uint64_t PurchaseRestoreData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;

  sub_1D59BF534(0, &qword_1EFF4F3E8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59BF360();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v16 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1D5AAECAC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v13 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D59BF534(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59BF360();
    v7 = a3(a1, &type metadata for PurchaseRestoreData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59BF598@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseRestoreData.init(from:)(a1, a2);
}

uint64_t sub_1D59BF5AC(_QWORD *a1)
{
  return PurchaseRestoreData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PurchaseRestoreData()
{
  return &type metadata for PurchaseRestoreData;
}

uint64_t storeEnumTagSinglePayload for PurchaseRestoreData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59BF61C + 4 * byte_1D5AD6585[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59BF650 + 4 * byte_1D5AD6580[v4]))();
}

uint64_t sub_1D59BF650(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59BF658(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59BF660);
  return result;
}

uint64_t sub_1D59BF66C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59BF674);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59BF678(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59BF680(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseRestoreData.CodingKeys()
{
  return &type metadata for PurchaseRestoreData.CodingKeys;
}

unint64_t sub_1D59BF6A0()
{
  unint64_t result;

  result = qword_1EFF4F3F0;
  if (!qword_1EFF4F3F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD66E0, &type metadata for PurchaseRestoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F3F0);
  }
  return result;
}

unint64_t sub_1D59BF6E8()
{
  unint64_t result;

  result = qword_1EFF4F3F8;
  if (!qword_1EFF4F3F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6650, &type metadata for PurchaseRestoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F3F8);
  }
  return result;
}

unint64_t sub_1D59BF730()
{
  unint64_t result;

  result = qword_1EFF4F400;
  if (!qword_1EFF4F400)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6678, &type metadata for PurchaseRestoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F400);
  }
  return result;
}

uint64_t sub_1D59BF774(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6573616863727570 && a2 == 0xEA00000000004449;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF12A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D59BF86C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4F408, MEMORY[0x1E0CF8078]);
}

uint64_t static AppReviewPromptRequestEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47328, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4F408, a1);
}

uint64_t sub_1D59BF8AC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4F420, MEMORY[0x1E0CF8380]);
}

uint64_t static AppReviewPromptRequestEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47330, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4F420, a1);
}

uint64_t AppReviewPromptRequestEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AppReviewPromptRequestEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppReviewPromptRequestEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppReviewPromptRequestEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppReviewPromptRequestEvent(0) + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AppReviewPromptRequestEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4F4A8);
}

uint64_t AppReviewPromptRequestEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppReviewPromptRequestEvent(0) + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppReviewPromptRequestEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for AppReviewPromptRequestEvent(0);
  return nullsub_1;
}

uint64_t AppReviewPromptRequestEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for AppReviewPromptRequestEvent(0) + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t AppReviewPromptRequestEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppReviewPromptRequestEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AppReviewPromptRequestEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AppReviewPromptRequestEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4F538);
}

uint64_t AppReviewPromptRequestEvent.Model.init(eventData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v5 = *a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a2 + 2);
  v8 = a2[24];
  v9 = a2[25];
  v10 = *((_QWORD *)a2 + 4);
  v11 = *((_QWORD *)a2 + 5);
  v12 = a2[48];
  v13 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a3, a1, v13);
  result = type metadata accessor for AppReviewPromptRequestEvent.Model(0);
  v15 = a3 + *(int *)(result + 20);
  *(_BYTE *)v15 = v5;
  *(_QWORD *)(v15 + 8) = v6;
  *(_QWORD *)(v15 + 16) = v7;
  *(_BYTE *)(v15 + 24) = v8;
  *(_BYTE *)(v15 + 25) = v9;
  *(_QWORD *)(v15 + 32) = v10;
  *(_QWORD *)(v15 + 40) = v11;
  *(_BYTE *)(v15 + 48) = v12;
  return result;
}

uint64_t sub_1D59BFBA4()
{
  sub_1D59BFD88();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59BFBCC()
{
  sub_1D59BFD88();
  return sub_1D5AAEEE0();
}

uint64_t AppReviewPromptRequestEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  char v11;
  char v12;
  char v13;
  _BYTE v15[8];
  char v16;
  __int128 v17;
  char v18;
  char v19;
  __int128 v20;
  char v21;

  v3 = v1;
  sub_1D59C0080(0, &qword_1EFF4F438, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v15[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59BFD88();
  sub_1D5AAEEC8();
  v16 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (char *)(v3 + *(int *)(type metadata accessor for AppReviewPromptRequestEvent.Model(0) + 20));
    v11 = v10[24];
    v12 = v10[25];
    v13 = v10[48];
    v16 = *v10;
    v17 = *(_OWORD *)(v10 + 8);
    v18 = v11;
    v19 = v12;
    v20 = *((_OWORD *)v10 + 2);
    v21 = v13;
    v15[7] = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59BFD88()
{
  unint64_t result;

  result = qword_1EFF4F440;
  if (!qword_1EFF4F440)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6924, &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F440);
  }
  return result;
}

uint64_t AppReviewPromptRequestEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  char v31;
  char v32;
  __int128 v33;
  char v34;
  char v35;

  v24 = a2;
  v28 = sub_1D5AADF98();
  v25 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59C0080(0, &qword_1EFF4F448, MEMORY[0x1E0DED048]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for AppReviewPromptRequestEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59BFD88();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = a1;
  v23 = v6;
  v12 = (uint64_t)v11;
  v13 = v25;
  v29 = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v26;
  v14 = v27;
  v16 = v28;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v35 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v14);
  v17 = v31;
  v18 = v32;
  v19 = v34;
  v20 = v12 + *(int *)(v9 + 20);
  *(_BYTE *)v20 = v29;
  *(_OWORD *)(v20 + 8) = v30;
  *(_BYTE *)(v20 + 24) = v17;
  *(_BYTE *)(v20 + 25) = v18;
  *(_OWORD *)(v20 + 32) = v33;
  *(_BYTE *)(v20 + 48) = v19;
  sub_1D59C00DC(v12, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_1D59C0120(v12);
}

void sub_1D59C0080(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59BFD88();
    v7 = a3(a1, &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59C00DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppReviewPromptRequestEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59C0120(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppReviewPromptRequestEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59C015C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppReviewPromptRequestEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59C0170(_QWORD *a1)
{
  return AppReviewPromptRequestEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59C0184@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47328, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4F408, a1);
}

uint64_t sub_1D59C01A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47330, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4F420, a1);
}

uint64_t getEnumTagSinglePayload for AppReviewPromptRequestEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59C01D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D589A36C();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptRequestEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59C0258(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D589A36C();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for AppReviewPromptRequestEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59C02E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptRequestEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59C0378(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = a2;
  return result;
}

uint64_t sub_1D59C03F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptRequestEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59C04B0 + 4 * byte_1D5AD6765[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59C04E4 + 4 * byte_1D5AD6760[v4]))();
}

uint64_t sub_1D59C04E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C04EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59C04F4);
  return result;
}

uint64_t sub_1D59C0500(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59C0508);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59C050C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C0514(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppReviewPromptRequestEvent.Model.CodingKeys()
{
  return &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys;
}

unint64_t sub_1D59C0534()
{
  unint64_t result;

  result = qword_1EFF4F570;
  if (!qword_1EFF4F570)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD68FC, &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F570);
  }
  return result;
}

unint64_t sub_1D59C057C()
{
  unint64_t result;

  result = qword_1EFF4F578;
  if (!qword_1EFF4F578)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD686C, &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F578);
  }
  return result;
}

unint64_t sub_1D59C05C4()
{
  unint64_t result;

  result = qword_1EFF4F580;
  if (!qword_1EFF4F580)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6894, &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F580);
  }
  return result;
}

void EngagementPlacementOriginationData.origin.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *EngagementPlacementOriginationData.origin.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*EngagementPlacementOriginationData.origin.modify())()
{
  return nullsub_1;
}

NewsAnalytics::EngagementPlacementOriginationData __swiftcall EngagementPlacementOriginationData.init(origin:)(NewsAnalytics::EngagementPlacementOriginationData origin)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)origin.origin;
  return origin;
}

uint64_t sub_1D59C0670()
{
  sub_1D59C07C4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59C0698()
{
  sub_1D59C07C4();
  return sub_1D5AAEEE0();
}

uint64_t EngagementPlacementOriginationData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D59C0984(0, &qword_1ED9D1070, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C07C4();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D59C0808();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59C07C4()
{
  unint64_t result;

  result = qword_1ED9D1048;
  if (!qword_1ED9D1048)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6B18, &type metadata for EngagementPlacementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1048);
  }
  return result;
}

unint64_t sub_1D59C0808()
{
  unint64_t result;

  result = qword_1ED9D1060;
  if (!qword_1ED9D1060)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EngagementPlacementOriginationType, &type metadata for EngagementPlacementOriginationType);
    atomic_store(result, (unint64_t *)&qword_1ED9D1060);
  }
  return result;
}

uint64_t EngagementPlacementOriginationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D59C0984(0, &qword_1EFF4F588, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C07C4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D59C09E0();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59C0984(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59C07C4();
    v7 = a3(a1, &type metadata for EngagementPlacementOriginationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59C09E0()
{
  unint64_t result;

  result = qword_1EFF4F590;
  if (!qword_1EFF4F590)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EngagementPlacementOriginationType, &type metadata for EngagementPlacementOriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4F590);
  }
  return result;
}

uint64_t sub_1D59C0A2C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return EngagementPlacementOriginationData.init(from:)(a1, a2);
}

uint64_t sub_1D59C0A40(_QWORD *a1)
{
  return EngagementPlacementOriginationData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for EngagementPlacementOriginationData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59C0AA0 + 4 * byte_1D5AD6985[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59C0AD4 + 4 * byte_1D5AD6980[v4]))();
}

uint64_t sub_1D59C0AD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C0ADC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59C0AE4);
  return result;
}

uint64_t sub_1D59C0AF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59C0AF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59C0AFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C0B04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementPlacementOriginationData()
{
  return &type metadata for EngagementPlacementOriginationData;
}

uint64_t storeEnumTagSinglePayload for EngagementPlacementOriginationData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59C0B60 + 4 * byte_1D5AD698A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59C0B80 + 4 * byte_1D5AD698F[v4]))();
}

_BYTE *sub_1D59C0B60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59C0B80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59C0B88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59C0B90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59C0B98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59C0BA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EngagementPlacementOriginationData.CodingKeys()
{
  return &type metadata for EngagementPlacementOriginationData.CodingKeys;
}

unint64_t sub_1D59C0BC0()
{
  unint64_t result;

  result = qword_1EFF4F598;
  if (!qword_1EFF4F598)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6AF0, &type metadata for EngagementPlacementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F598);
  }
  return result;
}

unint64_t sub_1D59C0C08()
{
  unint64_t result;

  result = qword_1ED9D1058;
  if (!qword_1ED9D1058)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6A60, &type metadata for EngagementPlacementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1058);
  }
  return result;
}

unint64_t sub_1D59C0C50()
{
  unint64_t result;

  result = qword_1ED9D1050;
  if (!qword_1ED9D1050)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6A88, &type metadata for EngagementPlacementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1050);
  }
  return result;
}

void ConcernData.concernContentType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ConcernData.concernContentType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ConcernData.concernContentType.modify())()
{
  return nullsub_1;
}

uint64_t ConcernData.subconcernContentType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ConcernData.subconcernContentType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ConcernData.subconcernContentType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ConcernData __swiftcall ConcernData.init(concernContentType:subconcernContentType:)(NewsAnalytics::ArticleConcernContentType concernContentType, Swift::String_optional subconcernContentType)
{
  uint64_t v2;
  NewsAnalytics::ConcernData result;

  *(_BYTE *)v2 = *(_BYTE *)concernContentType;
  *(Swift::String_optional *)(v2 + 8) = subconcernContentType;
  result.subconcernContentType = subconcernContentType;
  result.concernContentType = concernContentType;
  return result;
}

unint64_t sub_1D59C0D3C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000015;
  else
    return 0xD000000000000012;
}

uint64_t sub_1D59C0D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59C13D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59C0DA0()
{
  sub_1D59C0F34();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59C0DC8()
{
  sub_1D59C0F34();
  return sub_1D5AAEEE0();
}

uint64_t ConcernData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  sub_1D59C1150(0, &qword_1EFF4F5A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v12[0] = *((_QWORD *)v1 + 2);
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C0F34();
  sub_1D5AAEEC8();
  v15 = v9;
  v14 = 0;
  sub_1D59C0F78();
  sub_1D5AAED6C();
  if (!v2)
  {
    v13 = 1;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D59C0F34()
{
  unint64_t result;

  result = qword_1EFF4F5A8;
  if (!qword_1EFF4F5A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6CE0, &type metadata for ConcernData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F5A8);
  }
  return result;
}

unint64_t sub_1D59C0F78()
{
  unint64_t result;

  result = qword_1EFF4F5B0;
  if (!qword_1EFF4F5B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleConcernContentType, &type metadata for ArticleConcernContentType);
    atomic_store(result, (unint64_t *)&qword_1EFF4F5B0);
  }
  return result;
}

uint64_t ConcernData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1D59C1150(0, &qword_1EFF4F5B8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C0F34();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v17 = 0;
    sub_1D59C11AC();
    sub_1D5AAECD0();
    v10 = v18;
    v16 = 1;
    v12 = sub_1D5AAEC58();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D59C1150(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59C0F34();
    v7 = a3(a1, &type metadata for ConcernData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59C11AC()
{
  unint64_t result;

  result = qword_1EFF4F5C0;
  if (!qword_1EFF4F5C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleConcernContentType, &type metadata for ArticleConcernContentType);
    atomic_store(result, (unint64_t *)&qword_1EFF4F5C0);
  }
  return result;
}

uint64_t sub_1D59C11F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ConcernData.init(from:)(a1, a2);
}

uint64_t sub_1D59C120C(_QWORD *a1)
{
  return ConcernData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ConcernData()
{
  return &type metadata for ConcernData;
}

uint64_t storeEnumTagSinglePayload for ConcernData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59C127C + 4 * byte_1D5AD6B6D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59C12B0 + 4 * byte_1D5AD6B68[v4]))();
}

uint64_t sub_1D59C12B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C12B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59C12C0);
  return result;
}

uint64_t sub_1D59C12CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59C12D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59C12D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C12E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConcernData.CodingKeys()
{
  return &type metadata for ConcernData.CodingKeys;
}

unint64_t sub_1D59C1300()
{
  unint64_t result;

  result = qword_1EFF4F5C8;
  if (!qword_1EFF4F5C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6CB8, &type metadata for ConcernData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F5C8);
  }
  return result;
}

unint64_t sub_1D59C1348()
{
  unint64_t result;

  result = qword_1EFF4F5D0;
  if (!qword_1EFF4F5D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6C28, &type metadata for ConcernData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F5D0);
  }
  return result;
}

unint64_t sub_1D59C1390()
{
  unint64_t result;

  result = qword_1EFF4F5D8;
  if (!qword_1EFF4F5D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6C50, &type metadata for ConcernData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F5D8);
  }
  return result;
}

uint64_t sub_1D59C13D4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF1370 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF1390)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t NotificationSettingsData.tagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NotificationSettingsData.tagIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*NotificationSettingsData.tagIDs.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSettingsData.isNewIssueNotificationEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t NotificationSettingsData.isNewIssueNotificationEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*NotificationSettingsData.isNewIssueNotificationEnabled.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSettingsData.isMarketingNotificationEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

uint64_t (*NotificationSettingsData.isMarketingNotificationEnabled.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSettingsData.isDailyBriefingNotificationEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t NotificationSettingsData.isDailyBriefingNotificationEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 10) = result;
  return result;
}

uint64_t (*NotificationSettingsData.isDailyBriefingNotificationEnabled.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSettingsData.isEmailNewsletterSwitchEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 11) = result;
  return result;
}

uint64_t (*NotificationSettingsData.isEmailNewsletterSwitchEnabled.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSettingsData.isIssuesNewsletterOptinEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 12);
}

uint64_t NotificationSettingsData.isIssuesNewsletterOptinEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 12) = result;
  return result;
}

uint64_t (*NotificationSettingsData.isIssuesNewsletterOptinEnabled.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSettingsData.isDigestModeEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 13);
}

uint64_t NotificationSettingsData.isDigestModeEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 13) = result;
  return result;
}

uint64_t (*NotificationSettingsData.isDigestModeEnabled.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSettingsData.isPuzzlesNotificationEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 14);
}

uint64_t NotificationSettingsData.isPuzzlesNotificationEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 14) = result;
  return result;
}

uint64_t (*NotificationSettingsData.isPuzzlesNotificationEnabled.modify())()
{
  return nullsub_1;
}

NewsAnalytics::NotificationSettingsData __swiftcall NotificationSettingsData.init(tagIDs:isNewIssueNotificationEnabled:isMarketingNotificationEnabled:isDailyBriefingNotificationEnabled:isEmailNewsletterSwitchEnabled:isIssuesNewsletterOptinEnabled:isDigestModeEnabled:isPuzzlesNotificationEnabled:)(Swift::OpaquePointer tagIDs, Swift::Bool isNewIssueNotificationEnabled, Swift::Bool isMarketingNotificationEnabled, Swift::Bool isDailyBriefingNotificationEnabled, Swift::Bool isEmailNewsletterSwitchEnabled, Swift::Bool isIssuesNewsletterOptinEnabled, Swift::Bool_optional isDigestModeEnabled, Swift::Bool_optional isPuzzlesNotificationEnabled)
{
  uint64_t v8;
  NewsAnalytics::NotificationSettingsData result;

  *(Swift::OpaquePointer *)v8 = tagIDs;
  *(_BYTE *)(v8 + 8) = isNewIssueNotificationEnabled;
  *(_BYTE *)(v8 + 9) = isMarketingNotificationEnabled;
  *(_BYTE *)(v8 + 10) = isDailyBriefingNotificationEnabled;
  *(_BYTE *)(v8 + 11) = isEmailNewsletterSwitchEnabled;
  *(_BYTE *)(v8 + 12) = isIssuesNewsletterOptinEnabled;
  *(Swift::Bool_optional *)(v8 + 13) = isDigestModeEnabled;
  *(Swift::Bool_optional *)(v8 + 14) = isPuzzlesNotificationEnabled;
  result.tagIDs = tagIDs;
  result.isNewIssueNotificationEnabled = isNewIssueNotificationEnabled;
  return result;
}

uint64_t sub_1D59C15F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59C179C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59C1614()
{
  sub_1D57B45AC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59C163C()
{
  sub_1D57B45AC();
  return sub_1D5AAEEE0();
}

uint64_t assignWithCopy for NotificationSettingsData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  return a1;
}

uint64_t assignWithTake for NotificationSettingsData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_WORD *)(a1 + 13) = *(_WORD *)(a2 + 13);
  return a1;
}

ValueMetadata *type metadata accessor for NotificationSettingsData.CodingKeys()
{
  return &type metadata for NotificationSettingsData.CodingKeys;
}

unint64_t sub_1D59C1758()
{
  unint64_t result;

  result = qword_1EFF4F5E0;
  if (!qword_1EFF4F5E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6EB4, &type metadata for NotificationSettingsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F5E0);
  }
  return result;
}

uint64_t sub_1D59C179C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x734449676174 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5AF13B0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5AF13D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001D5AF13F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5AF1420 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5AF1440 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF1460 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5AF1480)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t SearchData.searchString.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchData.searchString.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SearchData.searchString.modify())()
{
  return nullsub_1;
}

void SearchData.origination.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *SearchData.origination.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*SearchData.origination.modify())()
{
  return nullsub_1;
}

NewsAnalytics::SearchData __swiftcall SearchData.init(searchString:origination:)(Swift::String searchString, NewsAnalytics::SearchOriginationType origination)
{
  uint64_t v2;
  char v3;
  NewsAnalytics::SearchData result;

  v3 = *(_BYTE *)origination;
  *(Swift::String *)v2 = searchString;
  *(_BYTE *)(v2 + 16) = v3;
  result.searchString = searchString;
  result.origination = origination;
  return result;
}

uint64_t sub_1D59C1B34()
{
  _BYTE *v0;

  if (*v0)
    return 0x74616E696769726FLL;
  else
    return 0x7453686372616573;
}

uint64_t sub_1D59C1B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59C21E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59C1BA4()
{
  sub_1D59C1D3C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59C1BCC()
{
  sub_1D59C1D3C();
  return sub_1D5AAEEE0();
}

uint64_t SearchData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1D59C1F6C(0, &qword_1EFF4F5E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C1D3C();
  sub_1D5AAEEC8();
  v14 = 0;
  v8 = v10[1];
  sub_1D5AAED3C();
  if (!v8)
  {
    v13 = v11;
    v12 = 1;
    sub_1D59C1D80();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59C1D3C()
{
  unint64_t result;

  result = qword_1EFF4F5F0;
  if (!qword_1EFF4F5F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD70A0, &type metadata for SearchData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F5F0);
  }
  return result;
}

unint64_t sub_1D59C1D80()
{
  unint64_t result;

  result = qword_1EFF4F5F8;
  if (!qword_1EFF4F5F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchOriginationType, &type metadata for SearchOriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4F5F8);
  }
  return result;
}

uint64_t SearchData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1D59C1F6C(0, &qword_1EFF4F600, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C1D3C();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v16 = 1;
  sub_1D59C1FC8();
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = v17;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D59C1F6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59C1D3C();
    v7 = a3(a1, &type metadata for SearchData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59C1FC8()
{
  unint64_t result;

  result = qword_1EFF4F608;
  if (!qword_1EFF4F608)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchOriginationType, &type metadata for SearchOriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4F608);
  }
  return result;
}

uint64_t sub_1D59C2014@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchData.init(from:)(a1, a2);
}

uint64_t sub_1D59C2028(_QWORD *a1)
{
  return SearchData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for SearchData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59C2088 + 4 * byte_1D5AD6F31[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59C20BC + 4 * byte_1D5AD6F2C[v4]))();
}

uint64_t sub_1D59C20BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C20C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59C20CCLL);
  return result;
}

uint64_t sub_1D59C20D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59C20E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59C20E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C20EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchData.CodingKeys()
{
  return &type metadata for SearchData.CodingKeys;
}

unint64_t sub_1D59C210C()
{
  unint64_t result;

  result = qword_1EFF4F610;
  if (!qword_1EFF4F610)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7078, &type metadata for SearchData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F610);
  }
  return result;
}

unint64_t sub_1D59C2154()
{
  unint64_t result;

  result = qword_1EFF4F618;
  if (!qword_1EFF4F618)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD6FE8, &type metadata for SearchData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F618);
  }
  return result;
}

unint64_t sub_1D59C219C()
{
  unint64_t result;

  result = qword_1EFF4F620;
  if (!qword_1EFF4F620)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7010, &type metadata for SearchData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F620);
  }
  return result;
}

uint64_t sub_1D59C21E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7453686372616573 && a2 == 0xEC000000676E6972;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E696769726FLL && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D59C2300(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4F628, MEMORY[0x1E0CF8078]);
}

uint64_t static PictureInPictureStarted.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47338, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4F628, a1);
}

uint64_t sub_1D59C2340(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4F640, MEMORY[0x1E0CF8380]);
}

uint64_t static PictureInPictureStarted.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47340, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4F640, a1);
}

uint64_t PictureInPictureStarted.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t PictureInPictureStarted.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PictureInPictureStarted.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PictureInPictureStarted.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PictureInPictureStarted(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4F6C8);
}

uint64_t PictureInPictureStarted.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStarted.articleData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStarted(0);
  return nullsub_1;
}

uint64_t PictureInPictureStarted.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PictureInPictureStarted.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStarted.channelData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStarted(0);
  return nullsub_1;
}

uint64_t PictureInPictureStarted.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PictureInPictureStarted.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStarted.feedData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStarted(0);
  return nullsub_1;
}

uint64_t PictureInPictureStarted.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PictureInPictureStarted.mediaData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStarted.mediaData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStarted(0);
  return nullsub_1;
}

uint64_t PictureInPictureStarted.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PictureInPictureStarted.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStarted.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStarted(0);
  return nullsub_1;
}

uint64_t PictureInPictureStarted.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PictureInPictureStarted.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStarted(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStarted.groupData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStarted(0);
  return nullsub_1;
}

uint64_t PictureInPictureStarted.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for PictureInPictureStarted(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v6, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v6, v17);
}

uint64_t PictureInPictureStarted.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t PictureInPictureStarted.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for PictureInPictureStarted.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 20), (uint64_t)v5, (unint64_t *)&qword_1ED9CE420);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CE420);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t type metadata accessor for PictureInPictureStarted.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4F770);
}

uint64_t PictureInPictureStarted.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PictureInPictureStarted.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t PictureInPictureStarted.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PictureInPictureStarted.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t PictureInPictureStarted.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for PictureInPictureStarted.Model(0) + 32));
  v4 = *v3;
  v6 = *((_QWORD *)v3 + 1);
  v5 = *((_QWORD *)v3 + 2);
  v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t PictureInPictureStarted.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for PictureInPictureStarted.Model(0) + 36));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t *PictureInPictureStarted.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5[17];

  v3 = type metadata accessor for PictureInPictureStarted.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 40), (uint64_t)v5, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CEEE0);
  return sub_1D582B584(v5);
}

uint64_t PictureInPictureStarted.Model.init(eventData:articleData:channelData:feedData:mediaData:userBundleSubscriptionContextData:groupData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _BYTE v37[136];
  _BYTE v38[144];

  sub_1D57E4810(a2, (uint64_t)v37, (unint64_t *)&qword_1ED9CE420);
  v26 = a3[1];
  v27 = *a3;
  v15 = *((_QWORD *)a3 + 4);
  v28 = *a4;
  v16 = *((_QWORD *)a4 + 2);
  v29 = *a5;
  v17 = *((_QWORD *)a5 + 1);
  v18 = *((_QWORD *)a5 + 2);
  LODWORD(a3) = *((_DWORD *)a5 + 6);
  LOBYTE(a5) = a5[28];
  v36 = *a6;
  v34 = *((_QWORD *)a6 + 2);
  v35 = *((_QWORD *)a6 + 1);
  v32 = a6[25];
  v33 = a6[24];
  v30 = *((_QWORD *)a6 + 5);
  v31 = *((_QWORD *)a6 + 4);
  LOBYTE(a6) = a6[48];
  sub_1D57E4810(a7, (uint64_t)v38, (unint64_t *)&qword_1ED9CEEE0);
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a8, a1, v19);
  v20 = (int *)type metadata accessor for PictureInPictureStarted.Model(0);
  sub_1D57E4810((uint64_t)v37, a8 + v20[5], (unint64_t *)&qword_1ED9CE420);
  v21 = a8 + v20[6];
  *(_OWORD *)v21 = v27;
  *(_OWORD *)(v21 + 16) = v26;
  *(_QWORD *)(v21 + 32) = v15;
  v22 = a8 + v20[7];
  *(_OWORD *)v22 = v28;
  *(_QWORD *)(v22 + 16) = v16;
  v23 = a8 + v20[8];
  *(_BYTE *)v23 = v29;
  *(_QWORD *)(v23 + 8) = v17;
  *(_QWORD *)(v23 + 16) = v18;
  *(_DWORD *)(v23 + 24) = (_DWORD)a3;
  *(_BYTE *)(v23 + 28) = (_BYTE)a5;
  v24 = a8 + v20[9];
  *(_BYTE *)v24 = v36;
  *(_QWORD *)(v24 + 8) = v35;
  *(_QWORD *)(v24 + 16) = v34;
  *(_BYTE *)(v24 + 24) = v33;
  *(_BYTE *)(v24 + 25) = v32;
  *(_QWORD *)(v24 + 32) = v31;
  *(_QWORD *)(v24 + 40) = v30;
  *(_BYTE *)(v24 + 48) = (_BYTE)a6;
  return sub_1D57E4810((uint64_t)v38, a8 + v20[10], (unint64_t *)&qword_1ED9CEEE0);
}

uint64_t sub_1D59C3004(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59C303C + 4 * byte_1D5AD70F0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59C303C()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D59C3070()
{
  return 0x6174614464656566;
}

uint64_t sub_1D59C3088()
{
  return 0x746144616964656DLL;
}

unint64_t sub_1D59C309C()
{
  return 0xD000000000000021;
}

uint64_t sub_1D59C30B8()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D59C30CC()
{
  unsigned __int8 *v0;

  return sub_1D59C3004(*v0);
}

uint64_t sub_1D59C30D4()
{
  sub_1D59C34AC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59C30FC()
{
  sub_1D59C34AC();
  return sub_1D5AAEEE0();
}

uint64_t PictureInPictureStarted.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  __int128 *v11;
  uint64_t v12;
  __int128 v13;
  __int128 *v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char *v21;
  char v22;
  char v23;
  char v24;
  _BYTE v26[8];
  char v27[136];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  char v32;
  __int128 v33;
  char v34;
  char v35;
  __int128 v36;
  char v37;
  _BYTE v38[152];

  v3 = v1;
  sub_1D59C3B08(0, &qword_1EFF4F658, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v26[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C34AC();
  sub_1D5AAEEC8();
  v38[135] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for PictureInPictureStarted.Model(0);
    sub_1D57E4810(v3 + v10[5], (uint64_t)v38, (unint64_t *)&qword_1ED9CE420);
    sub_1D57E4810((uint64_t)v38, (uint64_t)&v28, (unint64_t *)&qword_1ED9CE420);
    v27[0] = 1;
    sub_1D57CB940();
    sub_1D5AAED18();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *((_QWORD *)v11 + 4);
    v13 = v11[1];
    v28 = *v11;
    v29 = v13;
    v30 = v12;
    v27[0] = 2;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v14 = (__int128 *)(v3 + v10[7]);
    v15 = *((_QWORD *)v14 + 2);
    v28 = *v14;
    *(_QWORD *)&v29 = v15;
    v27[0] = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v16 = (char *)(v3 + v10[8]);
    v17 = *v16;
    v18 = *((_QWORD *)v16 + 1);
    v19 = *((_QWORD *)v16 + 2);
    v20 = *((_DWORD *)v16 + 6);
    LOBYTE(v16) = v16[28];
    LOBYTE(v28) = v17;
    *((_QWORD *)&v28 + 1) = v18;
    *(_QWORD *)&v29 = v19;
    DWORD2(v29) = v20;
    BYTE12(v29) = (_BYTE)v16;
    v27[0] = 4;
    sub_1D57E7E7C();
    sub_1D5AAED6C();
    v21 = (char *)(v3 + v10[9]);
    v22 = v21[24];
    v23 = v21[25];
    v24 = v21[48];
    v32 = *v21;
    v33 = *(_OWORD *)(v21 + 8);
    v34 = v22;
    v35 = v23;
    v36 = *((_OWORD *)v21 + 2);
    v37 = v24;
    v31 = 5;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    sub_1D57E4810(v3 + v10[10], (uint64_t)&v28, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)&v28, (uint64_t)v27, (unint64_t *)&qword_1ED9CEEE0);
    v26[7] = 6;
    sub_1D57C5FEC();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59C34AC()
{
  unint64_t result;

  result = qword_1EFF4F660;
  if (!qword_1EFF4F660)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7374, &type metadata for PictureInPictureStarted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F660);
  }
  return result;
}

uint64_t PictureInPictureStarted.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char *v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _BYTE v39[136];
  _OWORD v40[2];
  __int128 v41;
  char v42;
  _BYTE v43[136];
  _BYTE v44[160];

  v32 = a2;
  v35 = sub_1D5AADF98();
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59C3B08(0, &qword_1EFF4F668, MEMORY[0x1E0DED048]);
  v36 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - v6;
  v8 = (int *)type metadata accessor for PictureInPictureStarted.Model(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C34AC();
  v37 = v7;
  v11 = v38;
  sub_1D5AAEEB0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v38 = v5;
  v12 = a1;
  LOBYTE(v40[0]) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v13 = v34;
  v14 = v35;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v10, v13, v14);
  v44[159] = 1;
  sub_1D57CB8FC();
  sub_1D5AAEC7C();
  sub_1D57E4810((uint64_t)v44, (uint64_t)v43, (unint64_t *)&qword_1ED9CE420);
  sub_1D57E4810((uint64_t)v43, (uint64_t)&v10[v8[5]], (unint64_t *)&qword_1ED9CE420);
  v39[0] = 2;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v15 = v41;
  v16 = &v10[v8[6]];
  v17 = v40[1];
  *(_OWORD *)v16 = v40[0];
  *((_OWORD *)v16 + 1) = v17;
  *((_QWORD *)v16 + 4) = v15;
  v39[0] = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v18 = *(_QWORD *)&v40[1];
  v19 = &v10[v8[7]];
  *(_OWORD *)v19 = v40[0];
  *((_QWORD *)v19 + 2) = v18;
  v39[0] = 4;
  sub_1D57E7E38();
  sub_1D5AAECD0();
  v20 = (uint64_t)v12;
  v21 = *((_QWORD *)&v40[0] + 1);
  v22 = *(_QWORD *)&v40[1];
  v23 = DWORD2(v40[1]);
  v24 = BYTE12(v40[1]);
  v25 = &v10[v8[8]];
  *v25 = v40[0];
  *((_QWORD *)v25 + 1) = v21;
  *((_QWORD *)v25 + 2) = v22;
  *((_DWORD *)v25 + 6) = v23;
  v25[28] = v24;
  v39[0] = 5;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v26 = v38;
  v27 = BYTE8(v40[1]);
  v28 = BYTE9(v40[1]);
  v29 = v42;
  v30 = &v10[v8[9]];
  *v30 = v40[0];
  *(_OWORD *)(v30 + 8) = *(_OWORD *)((char *)v40 + 8);
  v30[24] = v27;
  v30[25] = v28;
  *((_OWORD *)v30 + 2) = v41;
  v30[48] = v29;
  v44[158] = 6;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v37, v36);
  sub_1D57E4810((uint64_t)v40, (uint64_t)v39, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v39, (uint64_t)&v10[v8[10]], (unint64_t *)&qword_1ED9CEEE0);
  sub_1D59C3B64((uint64_t)v10, v32);
  __swift_destroy_boxed_opaque_existential_1(v20);
  return sub_1D59C3BA8((uint64_t)v10);
}

void sub_1D59C3B08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59C34AC();
    v7 = a3(a1, &type metadata for PictureInPictureStarted.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59C3B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PictureInPictureStarted.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59C3BA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PictureInPictureStarted.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59C3BE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PictureInPictureStarted.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59C3BF8(_QWORD *a1)
{
  return PictureInPictureStarted.Model.encode(to:)(a1);
}

uint64_t sub_1D59C3C0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47338, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4F628, a1);
}

uint64_t sub_1D59C3C30@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47340, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4F640, a1);
}

uint64_t getEnumTagSinglePayload for PictureInPictureStarted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59C3C60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PictureInPictureStarted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59C3E54(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for PictureInPictureStarted.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59C4050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PictureInPictureStarted.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59C40DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1D59C4158()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PictureInPictureStarted.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D59C4248 + 4 * byte_1D5AD70FC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D59C427C + 4 * byte_1D5AD70F7[v4]))();
}

uint64_t sub_1D59C427C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C4284(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59C428CLL);
  return result;
}

uint64_t sub_1D59C4298(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59C42A0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D59C42A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C42AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PictureInPictureStarted.Model.CodingKeys()
{
  return &type metadata for PictureInPictureStarted.Model.CodingKeys;
}

unint64_t sub_1D59C42CC()
{
  unint64_t result;

  result = qword_1EFF4F7C0;
  if (!qword_1EFF4F7C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD734C, &type metadata for PictureInPictureStarted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F7C0);
  }
  return result;
}

unint64_t sub_1D59C4314()
{
  unint64_t result;

  result = qword_1EFF4F7C8;
  if (!qword_1EFF4F7C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD72BC, &type metadata for PictureInPictureStarted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F7C8);
  }
  return result;
}

unint64_t sub_1D59C435C()
{
  unint64_t result;

  result = qword_1EFF4F7D0;
  if (!qword_1EFF4F7D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD72E4, &type metadata for PictureInPictureStarted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F7D0);
  }
  return result;
}

NewsAnalytics::TagData __swiftcall TagData.init(tagID:)(NewsAnalytics::TagData tagID)
{
  NewsAnalytics::TagData *v1;

  *v1 = tagID;
  return tagID;
}

uint64_t TagData.tagID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TagData.tagID.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D59C43EC()
{
  return 0x4449676174;
}

uint64_t sub_1D59C4400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x4449676174 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D59C448C()
{
  sub_1D59C45D0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59C44B4()
{
  sub_1D59C45D0();
  return sub_1D5AAEEE0();
}

uint64_t TagData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59C4738(0, &qword_1ED9CC9A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C45D0();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D59C45D0()
{
  unint64_t result;

  result = qword_1ED9CC400;
  if (!qword_1ED9CC400)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7534, &type metadata for TagData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC400);
  }
  return result;
}

uint64_t TagData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D59C4738(0, &qword_1ED9CC860, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C45D0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59C4738(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59C45D0();
    v7 = a3(a1, &type metadata for TagData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59C479C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return TagData.init(from:)(a1, a2);
}

uint64_t sub_1D59C47B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59C4738(0, &qword_1ED9CC9A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C45D0();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t storeEnumTagSinglePayload for TagData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59C48E4 + 4 * byte_1D5AD73C4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59C4904 + 4 * byte_1D5AD73C9[v4]))();
}

_BYTE *sub_1D59C48E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59C4904(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59C490C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59C4914(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59C491C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59C4924(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TagData.CodingKeys()
{
  return &type metadata for TagData.CodingKeys;
}

unint64_t sub_1D59C4944()
{
  unint64_t result;

  result = qword_1EFF4F7D8;
  if (!qword_1EFF4F7D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD750C, &type metadata for TagData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F7D8);
  }
  return result;
}

unint64_t sub_1D59C498C()
{
  unint64_t result;

  result = qword_1ED9CC410;
  if (!qword_1ED9CC410)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD747C, &type metadata for TagData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC410);
  }
  return result;
}

unint64_t sub_1D59C49D4()
{
  unint64_t result;

  result = qword_1ED9CC408;
  if (!qword_1ED9CC408)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD74A4, &type metadata for TagData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC408);
  }
  return result;
}

uint64_t AppStateRestoreData.isFromStateRestoration.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t AppStateRestoreData.isFromStateRestoration.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*AppStateRestoreData.isFromStateRestoration.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AppStateRestoreData __swiftcall AppStateRestoreData.init(isFromStateRestoration:)(NewsAnalytics::AppStateRestoreData isFromStateRestoration)
{
  NewsAnalytics::AppStateRestoreData *v1;

  v1->isFromStateRestoration = isFromStateRestoration.isFromStateRestoration;
  return isFromStateRestoration;
}

unint64_t sub_1D59C4A40()
{
  return 0xD000000000000016;
}

uint64_t sub_1D59C4A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59C50D4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D59C4A84()
{
  sub_1D59C4BC4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59C4AAC()
{
  sub_1D59C4BC4();
  return sub_1D5AAEEE0();
}

uint64_t AppStateRestoreData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59C4D2C(0, &qword_1EFF4F7E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C4BC4();
  sub_1D5AAEEC8();
  sub_1D5AAED48();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D59C4BC4()
{
  unint64_t result;

  result = qword_1EFF4F7E8;
  if (!qword_1EFF4F7E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7718, &type metadata for AppStateRestoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F7E8);
  }
  return result;
}

uint64_t AppStateRestoreData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;

  sub_1D59C4D2C(0, &qword_1EFF4F7F0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C4BC4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECAC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59C4D2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59C4BC4();
    v7 = a3(a1, &type metadata for AppStateRestoreData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59C4D90@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AppStateRestoreData.init(from:)(a1, a2);
}

uint64_t sub_1D59C4DA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59C4D2C(0, &qword_1EFF4F7E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C4BC4();
  sub_1D5AAEEC8();
  sub_1D5AAED48();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t storeEnumTagSinglePayload for AppStateRestoreData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59C4EE0 + 4 * byte_1D5AD7595[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59C4F14 + 4 * byte_1D5AD7590[v4]))();
}

uint64_t sub_1D59C4F14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C4F1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59C4F24);
  return result;
}

uint64_t sub_1D59C4F30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59C4F38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59C4F3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59C4F44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppStateRestoreData()
{
  return &type metadata for AppStateRestoreData;
}

uint64_t storeEnumTagSinglePayload for AppStateRestoreData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59C4FA0 + 4 * byte_1D5AD759A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59C4FC0 + 4 * byte_1D5AD759F[v4]))();
}

_BYTE *sub_1D59C4FA0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59C4FC0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59C4FC8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59C4FD0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59C4FD8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59C4FE0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppStateRestoreData.CodingKeys()
{
  return &type metadata for AppStateRestoreData.CodingKeys;
}

unint64_t sub_1D59C5000()
{
  unint64_t result;

  result = qword_1EFF4F7F8;
  if (!qword_1EFF4F7F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD76F0, &type metadata for AppStateRestoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F7F8);
  }
  return result;
}

unint64_t sub_1D59C5048()
{
  unint64_t result;

  result = qword_1EFF4F800;
  if (!qword_1EFF4F800)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7660, &type metadata for AppStateRestoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F800);
  }
  return result;
}

unint64_t sub_1D59C5090()
{
  unint64_t result;

  result = qword_1EFF4F808;
  if (!qword_1EFF4F808)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7688, &type metadata for AppStateRestoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F808);
  }
  return result;
}

uint64_t sub_1D59C50D4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AF14A0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

NewsAnalytics::AutoSubscribedTagListData __swiftcall AutoSubscribedTagListData.init(tagIDs:)(NewsAnalytics::AutoSubscribedTagListData tagIDs)
{
  NewsAnalytics::AutoSubscribedTagListData *v1;

  v1->tagIDs._rawValue = tagIDs.tagIDs._rawValue;
  return tagIDs;
}

uint64_t AutoSubscribedTagListData.tagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AutoSubscribedTagListData.tagIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*AutoSubscribedTagListData.tagIDs.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D59C51A0()
{
  sub_1D57AD92C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59C51C8()
{
  sub_1D57AD92C();
  return sub_1D5AAEEE0();
}

ValueMetadata *type metadata accessor for AutoSubscribedTagListData()
{
  return &type metadata for AutoSubscribedTagListData;
}

ValueMetadata *type metadata accessor for AutoSubscribedTagListData.CodingKeys()
{
  return &type metadata for AutoSubscribedTagListData.CodingKeys;
}

unint64_t sub_1D59C521C()
{
  unint64_t result;

  result = qword_1EFF4F810;
  if (!qword_1EFF4F810)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD78C8, &type metadata for AutoSubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F810);
  }
  return result;
}

uint64_t sub_1D59C5260()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D59C5284()
{
  uint64_t v0;

  if (qword_1ED9CD8B0 != -1)
    swift_once();
  swift_retain();
  sub_1D5AAE100();
  swift_release();
  sub_1D5AAE6DC();
  sub_1D5AAE6D0();
  v0 = sub_1D5AAE2F8();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1D59C533C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  void *v11;
  int v12;
  uint64_t v13;
  id v14;
  id v15;

  v11 = *(void **)a1;
  v12 = *(_DWORD *)(a1 + 16);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a4;
  *(_DWORD *)(v13 + 32) = v12;
  *(_BYTE *)(v13 + 36) = a5;
  *(_QWORD *)(v13 + 40) = v11;
  *(_BYTE *)(v13 + 48) = a6;
  *(_QWORD *)(v13 + 56) = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  v14 = v11;
  v15 = a2;
  sub_1D5AADB9C();

  return swift_release();
}

uint64_t sub_1D59C5414(uint64_t a1, uint64_t a2, uint64_t a3, _BOOL4 a4, int a5, void *a6, int a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  int64_t v33;
  uint64_t result;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  unsigned int v50;
  int v51;
  void *v52;
  id v53;
  char *v54;
  id v55;
  char *v56;
  id v57;
  char *v58;
  id v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  _BOOL4 v65;
  _BOOL4 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(_QWORD *, uint64_t, uint64_t);
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  _BOOL4 v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  _QWORD v109[5];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char v115;
  char v116[16];
  char *v117;
  char *v118;
  uint64_t v119;
  char v120;
  BOOL v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;

  v91 = a8;
  LODWORD(v90) = a7;
  v103 = a6;
  v102 = a5;
  v99 = a4;
  v101 = a3;
  v100 = a2;
  v93 = a1;
  sub_1D59C60A8();
  v95 = v8;
  v94 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v92 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D57B1F4C(0, &qword_1ED9CE510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v107 = (char *)&v83 - v12;
  v106 = sub_1D5AAD794();
  v104 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1D5AAD7AC();
  v98 = *(_QWORD *)(v105 - 8);
  v15 = MEMORY[0x1E0C80A78](v105);
  v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v83 - v18;
  sub_1D57B1F4C(0, &qword_1ED9CF058, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], v10);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v83 - v21;
  v23 = sub_1D5AAD710();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1D5AAD7D0();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AAD7C4();
  sub_1D5AAD704();
  v31 = sub_1D5AAD7B8();
  v32 = *(void (**)(char *, uint64_t))(v24 + 8);
  v33 = v31;
  v32(v26, v23);
  result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  v108 = v33;
  if (v33 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v108 > 0x7FFFFFFF)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  sub_1D5AAD77C();
  sub_1D5AAD7A0();
  v35 = *(void (**)(char *, uint64_t))(v98 + 8);
  v36 = v19;
  v37 = v105;
  v35(v36, v105);
  sub_1D5AAD788();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v14, v106);
  v38 = sub_1D5AAD74C();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v22, 1, v38) == 1)
  {
    sub_1D57C03D0((uint64_t)v22, &qword_1ED9CF058, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8]);
    v106 = 0;
    v89 = 0;
  }
  else
  {
    v106 = sub_1D5AAD740();
    v89 = v40;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v38);
  }
  v41 = v102;
  v42 = (uint64_t)v107;
  sub_1D5AAD77C();
  sub_1D5AAD770();
  v35(v17, v37);
  v43 = sub_1D5AAD764();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43);
  v46 = v100;
  if (v45 == 1)
  {
    sub_1D57C03D0(v42, &qword_1ED9CE510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48]);
    v107 = 0;
    v47 = 0;
  }
  else
  {
    v107 = (char *)sub_1D5AAD740();
    v47 = v48;
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
  }
  v49 = objc_msgSend((id)objc_opt_self(), sel_sharedAccount);
  v50 = objc_msgSend(v49, sel_isUserSignedInToiCloud);

  if (v50)
    v51 = 1;
  else
    v51 = 2;
  LODWORD(v105) = v51;
  v52 = *(void **)(v46 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext);
  v53 = objc_msgSend(v52, sel_appConfigurationManager);
  swift_getObjectType();
  v54 = FCNewsAppConfigurationManager.treatmentIDs.getter();
  swift_unknownObjectRelease();
  v55 = objc_msgSend(v52, sel_appConfigurationManager);
  swift_getObjectType();
  v56 = FCNewsAppConfigurationManager.segmentSetIDs.getter();
  swift_unknownObjectRelease();
  LODWORD(v104) = NFStoreDemoMode();
  v57 = objc_msgSend(v103, sel_authorizationStatus);
  if ((v41 & 1) != 0)
  {
    v58 = v56;
    v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D43808]), sel_init);
    LODWORD(v103) = objc_msgSend(v59, sel_personalizedAds);

  }
  else
  {
    v58 = v56;
    LODWORD(v103) = 2;
  }
  v60 = v99 - 3;
  v61 = *(_QWORD *)(v46 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_aggregateStateModeProvider + 24);
  v62 = *(_QWORD *)(v46 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_aggregateStateModeProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v46 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_aggregateStateModeProvider), v61);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v62 + 8))(&v110, v61, v62);
  v63 = v110;
  sub_1D57BCF08(v46 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_appExtensionCommunicator, (uint64_t)&v110);
  v64 = (uint64_t)v113;
  v97 = v47;
  v96 = v63;
  v88 = v54;
  if (v113)
  {
    v65 = v57 == (id)2;
    v66 = v60 < 2;
    v67 = v114;
    v86 = (uint64_t)__swift_project_boxed_opaque_existential_1(&v110, (uint64_t)v113);
    v109[3] = &type metadata for SessionData;
    v109[4] = sub_1D57E6BA0();
    v68 = swift_allocObject();
    v109[0] = v68;
    *(_DWORD *)(v68 + 16) = v108;
    v69 = v89;
    *(_QWORD *)(v68 + 24) = v106;
    *(_QWORD *)(v68 + 32) = v69;
    *(_QWORD *)(v68 + 40) = v107;
    *(_QWORD *)(v68 + 48) = v47;
    *(_BYTE *)(v68 + 56) = v105;
    strcpy((char *)(v68 + 64), "com.apple.news");
    *(_BYTE *)(v68 + 79) = -18;
    *(_QWORD *)(v68 + 80) = v54;
    v70 = v101;
    *(_QWORD *)(v68 + 88) = v58;
    *(_QWORD *)(v68 + 96) = v70;
    *(_BYTE *)(v68 + 104) = v104;
    v99 = v66;
    *(_BYTE *)(v68 + 105) = v66;
    v102 &= 1u;
    *(_BYTE *)(v68 + 106) = v102;
    LODWORD(v100) = v65;
    *(_BYTE *)(v68 + 107) = v65;
    *(_BYTE *)(v68 + 108) = (_BYTE)v103;
    LODWORD(v98) = v90 & 1;
    *(_BYTE *)(v68 + 109) = v90 & 1;
    *(_BYTE *)(v68 + 110) = v63;
    v71 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v67 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v72 = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v71(v109, v64, v67);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v110);
  }
  else
  {
    LODWORD(v100) = v57 == (id)2;
    v99 = v60 < 2;
    v70 = v101;
    swift_bridgeObjectRetain();
    sub_1D57C03D0((uint64_t)&v110, (unint64_t *)&unk_1ED9D0B70, (uint64_t (*)(uint64_t))sub_1D57C6950);
    v102 &= 1u;
    LODWORD(v98) = v90 & 1;
    v69 = v89;
    v72 = v58;
  }
  LODWORD(v110) = v108;
  v111 = v106;
  v112 = v69;
  v113 = v107;
  v114 = v97;
  v115 = v105;
  strcpy(v116, "com.apple.news");
  v116[15] = -18;
  v73 = v88;
  v117 = v88;
  v118 = v72;
  v87 = v72;
  v119 = v70;
  v120 = v104;
  v121 = v99;
  v122 = v102;
  v123 = v100;
  v124 = (char)v103;
  v125 = v98;
  v126 = v96;
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v90 = v74;
  v75 = sub_1D5AADB54();
  v76 = *(_QWORD *)(v75 - 8);
  v77 = *(unsigned __int8 *)(v76 + 80);
  v78 = (v77 + 32) & ~v77;
  v89 = v78 + *(_QWORD *)(v76 + 72);
  v86 = v77 | 7;
  v79 = swift_allocObject();
  v85 = xmmword_1D5AB0170;
  *(_OWORD *)(v79 + 16) = xmmword_1D5AB0170;
  v80 = *MEMORY[0x1E0CF8168];
  v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 104);
  v84(v79 + v78, v80, v75);
  sub_1D57E6BA0();
  sub_1D5AADF2C();
  swift_bridgeObjectRelease();
  LODWORD(v110) = v108;
  v111 = v106;
  v112 = v69;
  v113 = v107;
  v114 = v97;
  v115 = v105;
  strcpy(v116, "com.apple.news");
  v116[15] = -18;
  v117 = v73;
  v118 = v87;
  v119 = v101;
  v120 = v104;
  v121 = v99;
  v122 = v102;
  v123 = v100;
  v124 = (char)v103;
  v125 = v98;
  v126 = v96;
  v81 = v92;
  sub_1D5AADA40();
  v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = v85;
  v84(v82 + v78, v80, v75);
  sub_1D5AADD1C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v81, v95);
}

uint64_t sub_1D59C5F44()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D59C5F68(uint64_t a1)
{
  sub_1D59C5F8C(a1, (unint64_t *)&unk_1ED9D1098, &qword_1ED9D1090, 0x1E0C9E3C8, type metadata accessor for CLAuthorizationStatus);
}

void sub_1D59C5F8C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v8;

  if (!*a2)
  {
    sub_1D57B663C(255, a3);
    a5(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1D59C6004()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D59C6030(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1D59C533C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_BYTE *)(v2 + 33));
}

uint64_t sub_1D59C6050()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D59C608C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D59C5414(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_DWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 36), *(void **)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

void sub_1D59C60A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C7000)
  {
    sub_1D57E6BA0();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C7000);
  }
}

uint64_t sub_1D59C6100()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t SessionObserver.userInfoDidChangeFeldsparID(_:fromCloud:)(void *a1)
{
  return sub_1D59C61E0(a1);
}

uint64_t sub_1D59C6170()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t SessionObserver.userInfoDidChangeAdsUserID(_:fromCloud:)(void *a1)
{
  return sub_1D59C61E0(a1);
}

uint64_t sub_1D59C61E0(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  _BYTE v8[40];

  sub_1D5AADBF0();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v3 = a1;
  sub_1D5AADF14();
  swift_release();
  swift_release();
  sub_1D57BCF08((uint64_t)v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_appExtensionCommunicator, (uint64_t)v8);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  sub_1D57BFBB0((uint64_t)v8, v4 + 32);
  v5 = v3;
  v6 = v1;
  sub_1D5AADB9C();
  return swift_release();
}

uint64_t sub_1D59C630C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  _BYTE v11[40];

  v4 = a3;
  v5 = a1;
  sub_1D5AADBF0();
  *(_QWORD *)(swift_allocObject() + 16) = v4;
  v6 = v4;
  sub_1D5AADF14();
  swift_release();
  swift_release();
  sub_1D57BCF08((uint64_t)v5 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_appExtensionCommunicator, (uint64_t)v11);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_1D57BFBB0((uint64_t)v11, v7 + 32);
  v8 = v6;
  v9 = v5;
  sub_1D5AADB9C();

  return swift_release();
}

uint64_t sub_1D59C6488()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D59C64DC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4F880, MEMORY[0x1E0CF8078]);
}

uint64_t static IssueShareEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47348, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4F880, a1);
}

uint64_t sub_1D59C651C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4F898, MEMORY[0x1E0CF8380]);
}

uint64_t static IssueShareEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47350, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4F898, a1);
}

uint64_t IssueShareEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t IssueShareEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*IssueShareEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t IssueShareEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for IssueShareEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C80E8);
}

uint64_t IssueShareEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueShareEvent.actionData.modify())(_QWORD)
{
  type metadata accessor for IssueShareEvent(0);
  return nullsub_1;
}

uint64_t IssueShareEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueShareEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueShareEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for IssueShareEvent(0);
  return nullsub_1;
}

uint64_t IssueShareEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueShareEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueShareEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for IssueShareEvent(0);
  return nullsub_1;
}

uint64_t IssueShareEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueShareEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueShareEvent.userChannelContextData.modify())(_QWORD)
{
  type metadata accessor for IssueShareEvent(0);
  return nullsub_1;
}

uint64_t IssueShareEvent.shareContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueShareEvent.shareContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueShareEvent.shareContextData.modify())(_QWORD)
{
  type metadata accessor for IssueShareEvent(0);
  return nullsub_1;
}

uint64_t IssueShareEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueShareEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueShareEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for IssueShareEvent(0);
  return nullsub_1;
}

uint64_t IssueShareEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueShareEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueShareEvent.issueViewData.modify())(_QWORD)
{
  type metadata accessor for IssueShareEvent(0);
  return nullsub_1;
}

uint64_t IssueShareEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueShareEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueShareEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for IssueShareEvent(0);
  return nullsub_1;
}

uint64_t IssueShareEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueShareEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueShareEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for IssueShareEvent(0);
  return nullsub_1;
}

uint64_t IssueShareEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueShareEvent.adData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueShareEvent.adData.modify())(_QWORD)
{
  type metadata accessor for IssueShareEvent(0);
  return nullsub_1;
}

uint64_t IssueShareEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for IssueShareEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v8, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v8, v25);
}

uint64_t IssueShareEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t IssueShareEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for IssueShareEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for IssueShareEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8030);
}

uint64_t IssueShareEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IssueShareEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *IssueShareEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for IssueShareEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 28), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t IssueShareEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for IssueShareEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t IssueShareEvent.Model.shareContextData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IssueShareEvent.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t IssueShareEvent.Model.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent.Model(0) + 40);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t IssueShareEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IssueShareEvent.Model(0) + 44));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t IssueShareEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for IssueShareEvent.Model(0) + 48));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t IssueShareEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent.Model(0) + 52);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t IssueShareEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for IssueShareEvent.Model(0) + 56);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(v3 + 32);
  return sub_1D57E8FE4(v4, v5);
}

__n128 IssueShareEvent.Model.init(eventData:actionData:feedData:groupData:userChannelContextData:shareContextData:issueData:issueViewData:userBundleSubscriptionContextData:channelData:adData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t *a11, __n128 *a12)
{
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 *v34;
  __n128 result;
  uint64_t v36;
  __int128 v37;
  char v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  _BYTE v62[144];

  v18 = *a2;
  v37 = *a3;
  v36 = *((_QWORD *)a3 + 2);
  sub_1D57DD5B8(a4, (uint64_t)v62);
  v38 = a5[1];
  v39 = *a5;
  LOWORD(a5) = *((_WORD *)a5 + 1);
  v19 = *a6;
  v20 = a6[1];
  v40 = v19;
  v43 = a7[1];
  v44 = *a7;
  v41 = *((_BYTE *)a7 + 17);
  v42 = *((_BYTE *)a7 + 16);
  v21 = a7[3];
  v45 = a8[1];
  v46 = *a8;
  v54 = *a10;
  v52 = *((_QWORD *)a10 + 2);
  v53 = *((_QWORD *)a10 + 1);
  v50 = a10[25];
  v51 = a10[24];
  v48 = *((_QWORD *)a10 + 5);
  v49 = *((_QWORD *)a10 + 4);
  v47 = a10[48];
  v59 = a11[1];
  v60 = *a11;
  v57 = *((_BYTE *)a11 + 17);
  v58 = *((_BYTE *)a11 + 16);
  v55 = a11[4];
  v56 = a11[3];
  v61 = *a12;
  v22 = a12[1].n128_u64[0];
  v23 = a12[1].n128_u64[1];
  v24 = a12[2].n128_u8[0];
  v25 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a9, a1, v25);
  v26 = (int *)type metadata accessor for IssueShareEvent.Model(0);
  *(_BYTE *)(a9 + v26[5]) = v18;
  v27 = a9 + v26[6];
  *(_OWORD *)v27 = v37;
  *(_QWORD *)(v27 + 16) = v36;
  sub_1D57DD5B8((uint64_t)v62, a9 + v26[7]);
  v28 = a9 + v26[8];
  *(_BYTE *)v28 = v39;
  *(_BYTE *)(v28 + 1) = v38;
  *(_WORD *)(v28 + 2) = (_WORD)a5;
  v29 = (_QWORD *)(a9 + v26[9]);
  *v29 = v40;
  v29[1] = v20;
  v30 = a9 + v26[10];
  *(_QWORD *)v30 = v44;
  *(_QWORD *)(v30 + 8) = v43;
  *(_BYTE *)(v30 + 16) = v42;
  *(_BYTE *)(v30 + 17) = v41;
  *(_QWORD *)(v30 + 24) = v21;
  v31 = (_QWORD *)(a9 + v26[11]);
  *v31 = v46;
  v31[1] = v45;
  v32 = a9 + v26[12];
  *(_BYTE *)v32 = v54;
  *(_QWORD *)(v32 + 8) = v53;
  *(_QWORD *)(v32 + 16) = v52;
  *(_BYTE *)(v32 + 24) = v51;
  *(_BYTE *)(v32 + 25) = v50;
  *(_QWORD *)(v32 + 32) = v49;
  *(_QWORD *)(v32 + 40) = v48;
  *(_BYTE *)(v32 + 48) = v47;
  v33 = a9 + v26[13];
  *(_QWORD *)v33 = v60;
  *(_QWORD *)(v33 + 8) = v59;
  *(_BYTE *)(v33 + 16) = v58;
  *(_BYTE *)(v33 + 17) = v57;
  *(_QWORD *)(v33 + 24) = v56;
  *(_QWORD *)(v33 + 32) = v55;
  v34 = (__n128 *)(a9 + v26[14]);
  result = v61;
  *v34 = v61;
  v34[1].n128_u64[0] = v22;
  v34[1].n128_u64[1] = v23;
  v34[2].n128_u8[0] = v24;
  return result;
}

uint64_t sub_1D59C7804(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59C783C + 4 * byte_1D5AD7940[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59C783C()
{
  return 0x61446E6F69746361;
}

uint64_t sub_1D59C7858()
{
  return 0x6174614464656566;
}

uint64_t sub_1D59C7870()
{
  return 0x74614470756F7267;
}

unint64_t sub_1D59C7884()
{
  return 0xD000000000000016;
}

uint64_t sub_1D59C7944()
{
  unsigned __int8 *v0;

  return sub_1D59C7804(*v0);
}

uint64_t sub_1D59C794C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59CBC84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59C7970()
{
  sub_1D59C7E44();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59C7998()
{
  sub_1D59C7E44();
  return sub_1D5AAEEE0();
}

uint64_t IssueShareEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v40;
  char v41;
  _OWORD v42[2];
  __int128 v43;
  char v44;
  _BYTE v45[144];
  __int128 v46;
  uint64_t v47;

  v3 = v1;
  sub_1D59C8668(0, &qword_1EFF4F8B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C7E44();
  sub_1D5AAEEC8();
  v45[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for IssueShareEvent.Model(0);
    v45[0] = *(_BYTE *)(v3 + v10[5]);
    LOBYTE(v42[0]) = 1;
    sub_1D57CC038();
    sub_1D5AAED6C();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *((_QWORD *)v11 + 2);
    v46 = *v11;
    v47 = v12;
    v45[143] = 2;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[7], (uint64_t)v45);
    sub_1D57DD5B8((uint64_t)v45, (uint64_t)v42);
    v41 = 3;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v13 = (char *)(v3 + v10[8]);
    v14 = *v13;
    v15 = v13[1];
    LOWORD(v13) = *((_WORD *)v13 + 1);
    LOBYTE(v42[0]) = v14;
    BYTE1(v42[0]) = v15;
    WORD1(v42[0]) = (_WORD)v13;
    v41 = 4;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[9]);
    v18 = *v16;
    v17 = v16[1];
    *(_QWORD *)&v42[0] = v18;
    *((_QWORD *)&v42[0] + 1) = v17;
    v41 = 5;
    sub_1D57C97AC();
    sub_1D5AAED6C();
    v19 = (uint64_t *)(v3 + v10[10]);
    v20 = *v19;
    v21 = v19[1];
    v22 = *((_BYTE *)v19 + 16);
    v23 = *((_BYTE *)v19 + 17);
    v24 = v19[3];
    *(_QWORD *)&v42[0] = v20;
    *((_QWORD *)&v42[0] + 1) = v21;
    LOBYTE(v42[1]) = v22;
    BYTE1(v42[1]) = v23;
    *((_QWORD *)&v42[1] + 1) = v24;
    v41 = 6;
    sub_1D57C5F1C();
    sub_1D5AAED6C();
    v42[0] = *(_OWORD *)(v3 + v10[11]);
    v41 = 7;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    v25 = v3 + v10[12];
    v26 = *(_BYTE *)(v25 + 24);
    v27 = *(_BYTE *)(v25 + 25);
    v28 = *(_BYTE *)(v25 + 48);
    LOBYTE(v42[0]) = *(_BYTE *)v25;
    *(_OWORD *)((char *)v42 + 8) = *(_OWORD *)(v25 + 8);
    BYTE8(v42[1]) = v26;
    BYTE9(v42[1]) = v27;
    v43 = *(_OWORD *)(v25 + 32);
    v44 = v28;
    v41 = 8;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v29 = (uint64_t *)(v3 + v10[13]);
    v30 = *v29;
    v31 = v29[1];
    v32 = *((_BYTE *)v29 + 16);
    v33 = *((_BYTE *)v29 + 17);
    v35 = v29[3];
    v34 = v29[4];
    *(_QWORD *)&v42[0] = v30;
    *((_QWORD *)&v42[0] + 1) = v31;
    LOBYTE(v42[1]) = v32;
    BYTE1(v42[1]) = v33;
    *((_QWORD *)&v42[1] + 1) = v35;
    *(_QWORD *)&v43 = v34;
    v41 = 9;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v36 = v3 + v10[14];
    v37 = *(_BYTE *)(v36 + 32);
    v38 = *(_OWORD *)(v36 + 16);
    v42[0] = *(_OWORD *)v36;
    v42[1] = v38;
    LOBYTE(v43) = v37;
    v41 = 10;
    sub_1D57C690C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59C7E44()
{
  unint64_t result;

  result = qword_1EFF4F8B8;
  if (!qword_1EFF4F8B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7C64, &type metadata for IssueShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F8B8);
  }
  return result;
}

uint64_t IssueShareEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char v17;
  __int16 v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  char *v26;
  char v27;
  char v28;
  char v29;
  char *v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  int *v49;
  _OWORD v50[2];
  __int128 v51;
  char v52;
  _BYTE v53[136];
  __int128 v54;
  uint64_t v55;
  int v56;
  char v57;
  char v58;

  v43 = a2;
  v4 = sub_1D5AADF98();
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59C8668(0, &qword_1EFF4F8C0, MEMORY[0x1E0DED048]);
  v45 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - v9;
  v49 = (int *)type metadata accessor for IssueShareEvent.Model(0);
  MEMORY[0x1E0C80A78](v49);
  v47 = a1;
  v48 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59C7E44();
  v44 = v10;
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  v42 = v8;
  LOBYTE(v54) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v12 = v4;
  v13 = v48;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v48, v6, v12);
  v53[0] = 1;
  sub_1D57CBFF4();
  sub_1D5AAECD0();
  v14 = v49;
  v13[v49[5]] = v54;
  v53[0] = 2;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v15 = v55;
  v16 = &v13[v14[6]];
  *(_OWORD *)v16 = v54;
  *((_QWORD *)v16 + 2) = v15;
  v58 = 3;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)&v54, (uint64_t)v53);
  sub_1D57DD5B8((uint64_t)v53, (uint64_t)&v13[v14[7]]);
  v57 = 4;
  sub_1D57C7AE0();
  sub_1D5AAECD0();
  v17 = BYTE1(v50[0]);
  v18 = WORD1(v50[0]);
  v19 = &v13[v14[8]];
  *v19 = v50[0];
  v19[1] = v17;
  *((_WORD *)v19 + 1) = v18;
  v57 = 5;
  sub_1D57C9768();
  sub_1D5AAECD0();
  v20 = *((_QWORD *)&v50[0] + 1);
  v21 = &v13[v14[9]];
  *(_QWORD *)v21 = *(_QWORD *)&v50[0];
  *((_QWORD *)v21 + 1) = v20;
  v57 = 6;
  sub_1D57C5ED8();
  sub_1D5AAECD0();
  v22 = *((_QWORD *)&v50[0] + 1);
  v23 = v50[1];
  v24 = BYTE1(v50[1]);
  v25 = *((_QWORD *)&v50[1] + 1);
  v26 = &v13[v14[10]];
  *(_QWORD *)v26 = *(_QWORD *)&v50[0];
  *((_QWORD *)v26 + 1) = v22;
  v26[16] = v23;
  v26[17] = v24;
  *((_QWORD *)v26 + 3) = v25;
  v57 = 7;
  sub_1D57CAD28();
  sub_1D5AAEC7C();
  v56 = 1;
  *(_OWORD *)&v13[v14[11]] = v50[0];
  v57 = 8;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v27 = BYTE8(v50[1]);
  v28 = BYTE9(v50[1]);
  v29 = v52;
  v30 = &v13[v14[12]];
  *v30 = v50[0];
  *(_OWORD *)(v30 + 8) = *(_OWORD *)((char *)v50 + 8);
  v30[24] = v27;
  v30[25] = v28;
  *((_OWORD *)v30 + 2) = v51;
  v30[48] = v29;
  v57 = 9;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v31 = *((_QWORD *)&v50[0] + 1);
  v32 = v50[1];
  v33 = BYTE1(v50[1]);
  v34 = *((_QWORD *)&v50[1] + 1);
  v35 = v51;
  v36 = &v48[v49[13]];
  *(_QWORD *)v36 = *(_QWORD *)&v50[0];
  *((_QWORD *)v36 + 1) = v31;
  v36[16] = v32;
  v36[17] = v33;
  *((_QWORD *)v36 + 3) = v34;
  *((_QWORD *)v36 + 4) = v35;
  v57 = 10;
  sub_1D57C68C8();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  v37 = v51;
  v38 = (uint64_t)v48;
  v39 = &v48[v49[14]];
  v40 = v50[1];
  *(_OWORD *)v39 = v50[0];
  *((_OWORD *)v39 + 1) = v40;
  v39[32] = v37;
  sub_1D59C86C4(v38, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return sub_1D59C8708(v38);
}

void sub_1D59C8668(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59C7E44();
    v7 = a3(a1, &type metadata for IssueShareEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59C86C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IssueShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59C8708(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IssueShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59C8744@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IssueShareEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59C8758(_QWORD *a1)
{
  return IssueShareEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59C876C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47348, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4F880, a1);
}

uint64_t sub_1D59C8790@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47350, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4F898, a1);
}

uint64_t sub_1D59C87B4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v9, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v9, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for IssueShareEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for IssueShareEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
}

uint64_t initializeWithCopy for IssueShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for IssueShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for IssueShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for IssueShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueShareEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59C9E98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
                      v8 = v22;
                      v12 = *(_QWORD *)(v22 - 8);
                      v13 = a3[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for IssueShareEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59CA19C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
                      v10 = v24;
                      v14 = *(_QWORD *)(v24 - 8);
                      v15 = a4[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59CA49C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
                      if (v10 <= 0x3F)
                        swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for IssueShareEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v54;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 2);
    if (v11 == 1)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
    }
    else
    {
      *v9 = *v10;
      *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
      *((_QWORD *)v9 + 2) = v11;
      swift_bridgeObjectRetain();
    }
    v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *((_QWORD *)v15 + 2);
    if (v16)
    {
      *(_WORD *)v14 = *(_WORD *)v15;
      *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
      *((_QWORD *)v14 + 2) = v16;
      *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
      v17 = *((_QWORD *)v15 + 5);
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      *((_QWORD *)v14 + 5) = v17;
      v18 = *((_QWORD *)v15 + 7);
      *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
      *((_QWORD *)v14 + 7) = v18;
      v19 = *((_QWORD *)v15 + 9);
      *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
      *((_QWORD *)v14 + 9) = v19;
      v14[80] = v15[80];
      v20 = *((_QWORD *)v15 + 12);
      *((_QWORD *)v14 + 11) = *((_QWORD *)v15 + 11);
      *((_QWORD *)v14 + 12) = v20;
      *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
      v14[112] = v15[112];
      v21 = *((_QWORD *)v15 + 16);
      *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
      *((_QWORD *)v14 + 16) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = *((_OWORD *)v15 + 7);
      *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
      *((_OWORD *)v14 + 7) = v22;
      *((_QWORD *)v14 + 16) = *((_QWORD *)v15 + 16);
      v23 = *((_OWORD *)v15 + 3);
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      *((_OWORD *)v14 + 3) = v23;
      v24 = *((_OWORD *)v15 + 5);
      *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
      *((_OWORD *)v14 + 5) = v24;
      v25 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v25;
    }
    v26 = a3[9];
    *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    v27 = (_QWORD *)((char *)a1 + v26);
    v28 = (_QWORD *)((char *)a2 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = a3[10];
    v31 = a3[11];
    v32 = (char *)a1 + v30;
    v33 = (char *)a2 + v30;
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    *((_WORD *)v32 + 8) = *((_WORD *)v33 + 8);
    *((_QWORD *)v32 + 3) = *((_QWORD *)v33 + 3);
    v35 = (_QWORD *)((char *)a1 + v31);
    v36 = (_QWORD *)((char *)a2 + v31);
    v54 = v36[1];
    *v35 = *v36;
    v35[1] = v54;
    v37 = a3[12];
    v38 = a3[13];
    v39 = (char *)a1 + v37;
    v40 = (char *)a2 + v37;
    *v39 = *v40;
    v41 = *((_QWORD *)v40 + 2);
    *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
    *((_QWORD *)v39 + 2) = v41;
    v39[24] = v40[24];
    v39[25] = v40[25];
    v42 = *((_QWORD *)v40 + 5);
    *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
    *((_QWORD *)v39 + 5) = v42;
    v39[48] = v40[48];
    v43 = (char *)a1 + v38;
    v44 = (char *)a2 + v38;
    v45 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v45;
    v43[16] = v44[16];
    v43[17] = v44[17];
    v46 = *((_QWORD *)v44 + 4);
    *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
    *((_QWORD *)v43 + 4) = v46;
    v47 = a3[14];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = *(_QWORD *)((char *)a2 + v47 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v50)
    {
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = v50;
      v51 = *((_QWORD *)v49 + 3);
      *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
      *((_QWORD *)v48 + 3) = v51;
      v48[32] = v49[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v52 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v52;
      v48[32] = v49[32];
    }
  }
  return a1;
}

uint64_t destroy for IssueShareEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[6] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[14] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for IssueShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v52;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10 == 1)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  }
  else
  {
    *(_BYTE *)v8 = *(_BYTE *)v9;
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = v10;
    swift_bridgeObjectRetain();
  }
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    *(_WORD *)v12 = *(_WORD *)v13;
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = v14;
    *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
    v15 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = v15;
    v16 = *(_QWORD *)(v13 + 56);
    *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 56) = v16;
    v17 = *(_QWORD *)(v13 + 72);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v12 + 72) = v17;
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    v18 = *(_QWORD *)(v13 + 96);
    *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 96) = v18;
    *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    v19 = *(_QWORD *)(v13 + 128);
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_QWORD *)(v12 + 128) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)(v13 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
    *(_OWORD *)(v12 + 112) = v20;
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    v21 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v21;
    v22 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v22;
    v23 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v23;
  }
  v24 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[10];
  v29 = a3[11];
  v30 = a1 + v28;
  v31 = a2 + v28;
  v32 = *(_QWORD *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  *(_QWORD *)(v30 + 24) = *(_QWORD *)(v31 + 24);
  v33 = (_QWORD *)(a1 + v29);
  v34 = (_QWORD *)(a2 + v29);
  v52 = v34[1];
  *v33 = *v34;
  v33[1] = v52;
  v35 = a3[12];
  v36 = a3[13];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_BYTE *)v37 = *(_BYTE *)v38;
  v39 = *(_QWORD *)(v38 + 16);
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  *(_QWORD *)(v37 + 16) = v39;
  *(_BYTE *)(v37 + 24) = *(_BYTE *)(v38 + 24);
  *(_BYTE *)(v37 + 25) = *(_BYTE *)(v38 + 25);
  v40 = *(_QWORD *)(v38 + 40);
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(v38 + 32);
  *(_QWORD *)(v37 + 40) = v40;
  *(_BYTE *)(v37 + 48) = *(_BYTE *)(v38 + 48);
  v41 = a1 + v36;
  v42 = a2 + v36;
  v43 = *(_QWORD *)(v42 + 8);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_QWORD *)(v41 + 8) = v43;
  *(_BYTE *)(v41 + 16) = *(_BYTE *)(v42 + 16);
  *(_BYTE *)(v41 + 17) = *(_BYTE *)(v42 + 17);
  v44 = *(_QWORD *)(v42 + 32);
  *(_QWORD *)(v41 + 24) = *(_QWORD *)(v42 + 24);
  *(_QWORD *)(v41 + 32) = v44;
  v45 = a3[14];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = *(_QWORD *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v48)
  {
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *(_QWORD *)(v46 + 8) = v48;
    v49 = *(_QWORD *)(v47 + 24);
    *(_QWORD *)(v46 + 16) = *(_QWORD *)(v47 + 16);
    *(_QWORD *)(v46 + 24) = v49;
    *(_BYTE *)(v46 + 32) = *(_BYTE *)(v47 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v50 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v50;
    *(_BYTE *)(v46 + 32) = *(_BYTE *)(v47 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for IssueShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 16);
  v11 = *(_QWORD *)(a2 + v7 + 16);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      v12 = *v9;
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      *(_OWORD *)v8 = v12;
    }
    else
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v11 == 1)
  {
    sub_1D57D9100(v8);
    v13 = *((_QWORD *)v9 + 2);
    *(_OWORD *)v8 = *v9;
    *(_QWORD *)(v8 + 16) = v13;
  }
  else
  {
    *(_BYTE *)v8 = *(_BYTE *)v9;
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a1 + v14 + 16);
  v18 = *(_QWORD *)(a2 + v14 + 16);
  if (v17)
  {
    if (v18)
    {
      *(_BYTE *)v15 = *(_BYTE *)v16;
      *(_BYTE *)(v15 + 1) = *(_BYTE *)(v16 + 1);
      *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v15 + 24) = *(_DWORD *)(v16 + 24);
      *(_DWORD *)(v15 + 28) = *(_DWORD *)(v16 + 28);
      *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 56) = *(_QWORD *)(v16 + 56);
      *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 72) = *(_QWORD *)(v16 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 80) = *(_BYTE *)(v16 + 80);
      *(_QWORD *)(v15 + 88) = *(_QWORD *)(v16 + 88);
      *(_QWORD *)(v15 + 96) = *(_QWORD *)(v16 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(v16 + 104);
      *(_BYTE *)(v15 + 112) = *(_BYTE *)(v16 + 112);
      *(_QWORD *)(v15 + 104) = v19;
      *(_QWORD *)(v15 + 120) = *(_QWORD *)(v16 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 128) = *(_QWORD *)(v16 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v15);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v21 = *(_OWORD *)(v16 + 64);
      v23 = *(_OWORD *)(v16 + 16);
      v22 = *(_OWORD *)(v16 + 32);
      *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
      *(_OWORD *)(v15 + 64) = v21;
      *(_OWORD *)(v15 + 16) = v23;
      *(_OWORD *)(v15 + 32) = v22;
      v25 = *(_OWORD *)(v16 + 96);
      v24 = *(_OWORD *)(v16 + 112);
      v26 = *(_OWORD *)(v16 + 80);
      *(_QWORD *)(v15 + 128) = *(_QWORD *)(v16 + 128);
      *(_OWORD *)(v15 + 96) = v25;
      *(_OWORD *)(v15 + 112) = v24;
      *(_OWORD *)(v15 + 80) = v26;
    }
  }
  else if (v18)
  {
    *(_BYTE *)v15 = *(_BYTE *)v16;
    *(_BYTE *)(v15 + 1) = *(_BYTE *)(v16 + 1);
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
    *(_DWORD *)(v15 + 24) = *(_DWORD *)(v16 + 24);
    *(_DWORD *)(v15 + 28) = *(_DWORD *)(v16 + 28);
    *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
    *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
    *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
    *(_QWORD *)(v15 + 56) = *(_QWORD *)(v16 + 56);
    *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 72) = *(_QWORD *)(v16 + 72);
    *(_BYTE *)(v15 + 80) = *(_BYTE *)(v16 + 80);
    *(_QWORD *)(v15 + 88) = *(_QWORD *)(v16 + 88);
    *(_QWORD *)(v15 + 96) = *(_QWORD *)(v16 + 96);
    v20 = *(_QWORD *)(v16 + 104);
    *(_BYTE *)(v15 + 112) = *(_BYTE *)(v16 + 112);
    *(_QWORD *)(v15 + 104) = v20;
    *(_QWORD *)(v15 + 120) = *(_QWORD *)(v16 + 120);
    *(_QWORD *)(v15 + 128) = *(_QWORD *)(v16 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
    v27 = *(_OWORD *)(v16 + 16);
    v28 = *(_OWORD *)(v16 + 32);
    v29 = *(_OWORD *)(v16 + 64);
    *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
    *(_OWORD *)(v15 + 64) = v29;
    *(_OWORD *)(v15 + 16) = v27;
    *(_OWORD *)(v15 + 32) = v28;
    v30 = *(_OWORD *)(v16 + 80);
    v31 = *(_OWORD *)(v16 + 96);
    v32 = *(_OWORD *)(v16 + 112);
    *(_QWORD *)(v15 + 128) = *(_QWORD *)(v16 + 128);
    *(_OWORD *)(v15 + 96) = v31;
    *(_OWORD *)(v15 + 112) = v32;
    *(_OWORD *)(v15 + 80) = v30;
  }
  v33 = a3[8];
  v34 = (_BYTE *)(a1 + v33);
  v35 = (_BYTE *)(a2 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  v34[2] = v35[2];
  v34[3] = v35[3];
  v36 = a3[9];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)(a2 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[10];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_QWORD *)v40 = *(_QWORD *)(a2 + v39);
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(a2 + v39 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
  *(_BYTE *)(v40 + 17) = *(_BYTE *)(v41 + 17);
  *(_QWORD *)(v40 + 24) = *(_QWORD *)(v41 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[11];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = a3[12];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)v46 = *(_BYTE *)(a2 + v45);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(a2 + v45 + 8);
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(a2 + v45 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 24) = *(_BYTE *)(v47 + 24);
  *(_BYTE *)(v46 + 25) = *(_BYTE *)(v47 + 25);
  *(_QWORD *)(v46 + 32) = *(_QWORD *)(v47 + 32);
  *(_QWORD *)(v46 + 40) = *(_QWORD *)(v47 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 48) = *(_BYTE *)(v47 + 48);
  v48 = a3[13];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_QWORD *)v49 = *(_QWORD *)(a2 + v48);
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(a2 + v48 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 16) = *(_BYTE *)(v50 + 16);
  *(_BYTE *)(v49 + 17) = *(_BYTE *)(v50 + 17);
  *(_QWORD *)(v49 + 24) = *(_QWORD *)(v50 + 24);
  *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = a3[14];
  v52 = a1 + v51;
  v53 = (__int128 *)(a2 + v51);
  v54 = *(_QWORD *)(a1 + v51 + 8);
  v55 = *((_QWORD *)v53 + 1);
  if (v54)
  {
    if (v55)
    {
      *(_QWORD *)v52 = *(_QWORD *)v53;
      *(_QWORD *)(v52 + 8) = *((_QWORD *)v53 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v52 + 16) = *((_QWORD *)v53 + 2);
      *(_QWORD *)(v52 + 24) = *((_QWORD *)v53 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v52 + 32) = *((_BYTE *)v53 + 32);
    }
    else
    {
      sub_1D5801194(v52);
      v56 = *((_BYTE *)v53 + 32);
      v57 = v53[1];
      *(_OWORD *)v52 = *v53;
      *(_OWORD *)(v52 + 16) = v57;
      *(_BYTE *)(v52 + 32) = v56;
    }
  }
  else if (v55)
  {
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *(_QWORD *)(v52 + 8) = *((_QWORD *)v53 + 1);
    *(_QWORD *)(v52 + 16) = *((_QWORD *)v53 + 2);
    *(_QWORD *)(v52 + 24) = *((_QWORD *)v53 + 3);
    *(_BYTE *)(v52 + 32) = *((_BYTE *)v53 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v58 = *v53;
    v59 = v53[1];
    *(_BYTE *)(v52 + 32) = *((_BYTE *)v53 + 32);
    *(_OWORD *)v52 = v58;
    *(_OWORD *)(v52 + 16) = v59;
  }
  return a1;
}

uint64_t initializeWithTake for IssueShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  v14 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v14;
  v15 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v15;
  v16 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v16;
  v17 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v17;
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  v18 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  *(_BYTE *)(v23 + 48) = *(_BYTE *)(v24 + 48);
  v26 = a3[13];
  v27 = a3[14];
  v28 = a1 + v26;
  v29 = a2 + v26;
  v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  v31 = a1 + v27;
  v32 = a2 + v27;
  *(_BYTE *)(v31 + 32) = *(_BYTE *)(v32 + 32);
  v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  return a1;
}

uint64_t assignWithTake for IssueShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 16) == 1)
    goto LABEL_4;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10 == 1)
  {
    sub_1D57D9100(a1 + v7);
LABEL_4:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  if (*(_QWORD *)(a1 + v11 + 16))
  {
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      *(_WORD *)v12 = *(_WORD *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = v14;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v13 + 64);
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_QWORD *)(v12 + 64) = v15;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
      v16 = *(_QWORD *)(v13 + 96);
      *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 96) = v16;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E17B8(v12);
  }
  v17 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v17;
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  v18 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v18;
  v19 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v19;
  v20 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v20;
LABEL_11:
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  *(_BYTE *)(v23 + 1) = *(_BYTE *)(v24 + 1);
  *(_WORD *)(v23 + 2) = *(_WORD *)(v24 + 2);
  v25 = (_QWORD *)(a1 + v22);
  v26 = (uint64_t *)(a2 + v22);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(a2 + v29 + 8);
  *(_QWORD *)v30 = *(_QWORD *)(a2 + v29);
  *(_QWORD *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  *(_BYTE *)(v30 + 17) = *(_BYTE *)(v31 + 17);
  *(_QWORD *)(v30 + 24) = *(_QWORD *)(v31 + 24);
  swift_bridgeObjectRelease();
  v33 = a3[11];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = a3[12];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_BYTE *)v39 = *(_BYTE *)(a2 + v38);
  v41 = *(_QWORD *)(a2 + v38 + 16);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(a2 + v38 + 8);
  *(_QWORD *)(v39 + 16) = v41;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 24) = *(_BYTE *)(v40 + 24);
  *(_BYTE *)(v39 + 25) = *(_BYTE *)(v40 + 25);
  v42 = *(_QWORD *)(v40 + 40);
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  *(_QWORD *)(v39 + 40) = v42;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 48) = *(_BYTE *)(v40 + 48);
  v43 = a3[13];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)(a2 + v43 + 8);
  *(_QWORD *)v44 = *(_QWORD *)(a2 + v43);
  *(_QWORD *)(v44 + 8) = v46;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v44 + 16) = *(_BYTE *)(v45 + 16);
  *(_BYTE *)(v44 + 17) = *(_BYTE *)(v45 + 17);
  v47 = *(_QWORD *)(v45 + 32);
  *(_QWORD *)(v44 + 24) = *(_QWORD *)(v45 + 24);
  *(_QWORD *)(v44 + 32) = v47;
  swift_bridgeObjectRelease();
  v48 = a3[14];
  v49 = a1 + v48;
  v50 = a2 + v48;
  if (!*(_QWORD *)(a1 + v48 + 8))
  {
LABEL_15:
    v53 = *(_OWORD *)(v50 + 16);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = v53;
    goto LABEL_16;
  }
  v51 = *(_QWORD *)(v50 + 8);
  if (!v51)
  {
    sub_1D5801194(v49);
    goto LABEL_15;
  }
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_QWORD *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  v52 = *(_QWORD *)(v50 + 24);
  *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
  *(_QWORD *)(v49 + 24) = v52;
  swift_bridgeObjectRelease();
LABEL_16:
  *(_BYTE *)(v49 + 32) = *(_BYTE *)(v50 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueShareEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59CB90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueShareEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59CB998(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D59CBA14()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IssueShareEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D59CBB2C + 4 * byte_1D5AD7950[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D59CBB60 + 4 * byte_1D5AD794B[v4]))();
}

uint64_t sub_1D59CBB60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59CBB68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59CBB70);
  return result;
}

uint64_t sub_1D59CBB7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59CBB84);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D59CBB88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59CBB90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueShareEvent.Model.CodingKeys()
{
  return &type metadata for IssueShareEvent.Model.CodingKeys;
}

unint64_t sub_1D59CBBB0()
{
  unint64_t result;

  result = qword_1EFF4F8C8;
  if (!qword_1EFF4F8C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7C3C, &type metadata for IssueShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F8C8);
  }
  return result;
}

unint64_t sub_1D59CBBF8()
{
  unint64_t result;

  result = qword_1EFF4F8D0;
  if (!qword_1EFF4F8D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7BAC, &type metadata for IssueShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F8D0);
  }
  return result;
}

unint64_t sub_1D59CBC40()
{
  unint64_t result;

  result = qword_1EFF4F8D8;
  if (!qword_1EFF4F8D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7BD4, &type metadata for IssueShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F8D8);
  }
  return result;
}

uint64_t sub_1D59CBC84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AED410 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t ReferralGroupData.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = *(_OWORD *)(v1 + 80);
  v3 = *(_OWORD *)(v1 + 112);
  v19 = *(_OWORD *)(v1 + 96);
  v20 = v3;
  v4 = *(_OWORD *)(v1 + 16);
  v5 = *(_OWORD *)(v1 + 48);
  v15 = *(_OWORD *)(v1 + 32);
  v6 = v15;
  v16 = v5;
  v7 = *(_OWORD *)(v1 + 48);
  v8 = *(_OWORD *)(v1 + 80);
  v17 = *(_OWORD *)(v1 + 64);
  v9 = v17;
  v18 = v8;
  v10 = *(_OWORD *)(v1 + 16);
  v14[0] = *(_OWORD *)v1;
  v11 = v14[0];
  v14[1] = v10;
  v12 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v2;
  v21 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v1 + 128);
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v4;
  return sub_1D5802B14((uint64_t)v14);
}

__n128 ReferralGroupData.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  _OWORD v11[8];
  uint64_t v12;

  v3 = *(_OWORD *)(v1 + 112);
  v11[6] = *(_OWORD *)(v1 + 96);
  v11[7] = v3;
  v12 = *(_QWORD *)(v1 + 128);
  v4 = *(_OWORD *)(v1 + 48);
  v11[2] = *(_OWORD *)(v1 + 32);
  v11[3] = v4;
  v5 = *(_OWORD *)(v1 + 80);
  v11[4] = *(_OWORD *)(v1 + 64);
  v11[5] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v11[0] = *(_OWORD *)v1;
  v11[1] = v6;
  sub_1D5803C78((uint64_t)v11);
  v7 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 112) = v7;
  *(_QWORD *)(v1 + 128) = *(_QWORD *)(a1 + 128);
  v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 48) = v8;
  v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 80) = v9;
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(__n128 *)(v1 + 16) = result;
  return result;
}

uint64_t (*ReferralGroupData.groupData.modify())()
{
  return nullsub_1;
}

__n128 ReferralGroupData.init(groupData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 112) = v2;
  *(_QWORD *)(a2 + 128) = *(_QWORD *)(a1 + 128);
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v4;
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1D59CC25C()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D59CC278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D59CC318()
{
  sub_1D59CC48C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59CC340()
{
  sub_1D59CC48C();
  return sub_1D5AAEEE0();
}

uint64_t ReferralGroupData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[8];
  uint64_t v15;

  v2 = v1;
  sub_1D59CC63C(0, &qword_1EFF4F8E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59CC48C();
  sub_1D5AAEEC8();
  v9 = *(_OWORD *)(v2 + 112);
  v14[6] = *(_OWORD *)(v2 + 96);
  v14[7] = v9;
  v15 = *(_QWORD *)(v2 + 128);
  v10 = *(_OWORD *)(v2 + 48);
  v14[2] = *(_OWORD *)(v2 + 32);
  v14[3] = v10;
  v11 = *(_OWORD *)(v2 + 80);
  v14[4] = *(_OWORD *)(v2 + 64);
  v14[5] = v11;
  v12 = *(_OWORD *)(v2 + 16);
  v14[0] = *(_OWORD *)v2;
  v14[1] = v12;
  sub_1D57C5FEC();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D59CC48C()
{
  unint64_t result;

  result = qword_1EFF4F8E8;
  if (!qword_1EFF4F8E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7E38, &type metadata for ReferralGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F8E8);
  }
  return result;
}

uint64_t ReferralGroupData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v15[24];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  sub_1D59CC63C(0, &qword_1EFF4F8F0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v15[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59CC48C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57C5FA8();
    sub_1D5AAECD0();
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    v10 = v22;
    *(_OWORD *)(a2 + 96) = v21;
    *(_OWORD *)(a2 + 112) = v10;
    *(_QWORD *)(a2 + 128) = v23;
    v11 = v18;
    *(_OWORD *)(a2 + 32) = v17;
    *(_OWORD *)(a2 + 48) = v11;
    v12 = v20;
    *(_OWORD *)(a2 + 64) = v19;
    *(_OWORD *)(a2 + 80) = v12;
    v13 = v16;
    *(_OWORD *)a2 = *(_OWORD *)&v15[8];
    *(_OWORD *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59CC63C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59CC48C();
    v7 = a3(a1, &type metadata for ReferralGroupData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59CC698@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReferralGroupData.init(from:)(a1, a2);
}

uint64_t sub_1D59CC6AC(_QWORD *a1)
{
  return ReferralGroupData.encode(to:)(a1);
}

uint64_t assignWithCopy for GroupData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v4;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GroupData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v5 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for ReferralGroupData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59CC920 + 4 * byte_1D5AD7CC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59CC940 + 4 * byte_1D5AD7CC5[v4]))();
}

_BYTE *sub_1D59CC920(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59CC940(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59CC948(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59CC950(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59CC958(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59CC960(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReferralGroupData.CodingKeys()
{
  return &type metadata for ReferralGroupData.CodingKeys;
}

unint64_t sub_1D59CC980()
{
  unint64_t result;

  result = qword_1EFF4F8F8;
  if (!qword_1EFF4F8F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7E10, &type metadata for ReferralGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F8F8);
  }
  return result;
}

unint64_t sub_1D59CC9C8()
{
  unint64_t result;

  result = qword_1EFF4F900;
  if (!qword_1EFF4F900)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7D80, &type metadata for ReferralGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F900);
  }
  return result;
}

unint64_t sub_1D59CCA10()
{
  unint64_t result;

  result = qword_1EFF4F908;
  if (!qword_1EFF4F908)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD7DA8, &type metadata for ReferralGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F908);
  }
  return result;
}

NewsAnalytics::ViewType_optional __swiftcall ViewType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ViewType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1D59CCAAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3557C(*a1, *a2);
}

unint64_t sub_1D59CCABC()
{
  unint64_t result;

  result = qword_1EFF4F910;
  if (!qword_1EFF4F910)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewType, &type metadata for ViewType);
    atomic_store(result, (unint64_t *)&qword_1EFF4F910);
  }
  return result;
}

uint64_t sub_1D59CCB00()
{
  sub_1D5AAEE80();
  ViewType.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59CCB64()
{
  ViewType.rawValue.getter();
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59CCBB4()
{
  sub_1D5AAEE80();
  ViewType.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::ViewType_optional sub_1D59CCC14(Swift::String *a1)
{
  return ViewType.init(rawValue:)(*a1);
}

uint64_t sub_1D59CCC20()
{
  sub_1D579F8A8();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for ViewType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D59CCCC8 + 4 * byte_1D5AD7E9A[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D59CCCFC + 4 * byte_1D5AD7E95[v4]))();
}

uint64_t sub_1D59CCCFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59CCD04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59CCD0CLL);
  return result;
}

uint64_t sub_1D59CCD18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59CCD20);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D59CCD24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59CCD2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59CCD38(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4F918, MEMORY[0x1E0CF8078]);
}

uint64_t static RecentSearchExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47358, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4F918, a1);
}

uint64_t sub_1D59CCD78(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4F930, MEMORY[0x1E0CF8380]);
}

uint64_t static RecentSearchExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47360, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4F930, a1);
}

uint64_t RecentSearchExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t RecentSearchExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*RecentSearchExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t RecentSearchExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RecentSearchExposureEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for RecentSearchExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4F9C0);
}

uint64_t RecentSearchExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RecentSearchExposureEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RecentSearchExposureEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for RecentSearchExposureEvent(0);
  return nullsub_1;
}

uint64_t RecentSearchExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RecentSearchExposureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RecentSearchExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RecentSearchExposureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RecentSearchExposureEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for RecentSearchExposureEvent(0);
  return nullsub_1;
}

uint64_t RecentSearchExposureEvent.recentSearchListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RecentSearchExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RecentSearchExposureEvent.recentSearchListData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RecentSearchExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RecentSearchExposureEvent.recentSearchListData.modify())(_QWORD)
{
  type metadata accessor for RecentSearchExposureEvent(0);
  return nullsub_1;
}

uint64_t RecentSearchExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for RecentSearchExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t RecentSearchExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t RecentSearchExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RecentSearchExposureEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for RecentSearchExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4FA58);
}

uint64_t RecentSearchExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for RecentSearchExposureEvent.Model(0) + 24));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t RecentSearchExposureEvent.Model.recentSearchListData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for RecentSearchExposureEvent.Model(0) + 28));
  return swift_bridgeObjectRetain();
}

int *RecentSearchExposureEvent.Model.init(eventData:viewData:userBundleSubscriptionContextData:recentSearchListData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  int *result;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((_WORD *)a2 + 8);
  v10 = *a3;
  v11 = *((_QWORD *)a3 + 1);
  v12 = *((_QWORD *)a3 + 2);
  v13 = a3[24];
  v14 = a3[25];
  v20 = *((_QWORD *)a3 + 5);
  v21 = *((_QWORD *)a3 + 4);
  v19 = a3[48];
  v22 = *a4;
  v15 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, a1, v15);
  result = (int *)type metadata accessor for RecentSearchExposureEvent.Model(0);
  v17 = a5 + result[5];
  *(_QWORD *)v17 = v7;
  *(_QWORD *)(v17 + 8) = v8;
  *(_WORD *)(v17 + 16) = v9;
  v18 = a5 + result[6];
  *(_BYTE *)v18 = v10;
  *(_QWORD *)(v18 + 8) = v11;
  *(_QWORD *)(v18 + 16) = v12;
  *(_BYTE *)(v18 + 24) = v13;
  *(_BYTE *)(v18 + 25) = v14;
  *(_QWORD *)(v18 + 32) = v21;
  *(_QWORD *)(v18 + 40) = v20;
  *(_BYTE *)(v18 + 48) = v19;
  *(_QWORD *)(a5 + result[7]) = v22;
  return result;
}

uint64_t sub_1D59CD414()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59CD448 + 4 * byte_1D5AD7FE0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59CD448()
{
  return 0x6174614477656976;
}

unint64_t sub_1D59CD460()
{
  return 0xD000000000000021;
}

unint64_t sub_1D59CD480()
{
  return 0xD000000000000014;
}

uint64_t sub_1D59CD49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59CF094(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59CD4C0()
{
  sub_1D59CD73C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59CD4E8()
{
  sub_1D59CD73C();
  return sub_1D5AAEEE0();
}

uint64_t RecentSearchExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  char v23;
  __int128 v24;
  char v25;
  char v26;

  v3 = v1;
  sub_1D59CDB30(0, &qword_1EFF4F950, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59CD73C();
  sub_1D5AAEEC8();
  LOBYTE(v20) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for RecentSearchExposureEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    v20 = v12;
    *(_QWORD *)&v21 = v13;
    WORD4(v21) = (_WORD)v11;
    v26 = 1;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v14 = v3 + v10[6];
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_BYTE *)(v14 + 25);
    v17 = *(_BYTE *)(v14 + 48);
    LOBYTE(v20) = *(_BYTE *)v14;
    v21 = *(_OWORD *)(v14 + 8);
    v22 = v15;
    v23 = v16;
    v24 = *(_OWORD *)(v14 + 32);
    v25 = v17;
    v26 = 2;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v20 = *(_QWORD *)(v3 + v10[7]);
    v26 = 3;
    sub_1D583A044();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59CD73C()
{
  unint64_t result;

  result = qword_1EFF4F958;
  if (!qword_1EFF4F958)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD81D4, &type metadata for RecentSearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F958);
  }
  return result;
}

uint64_t RecentSearchExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  char *v18;
  char v19;
  char v20;
  char v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  char v34;
  __int128 v35;
  char v36;
  char v37;

  v25 = a2;
  v3 = sub_1D5AADF98();
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59CDB30(0, &qword_1EFF4F960, MEMORY[0x1E0DED048]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - v7;
  v9 = (int *)type metadata accessor for RecentSearchExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59CD73C();
  v28 = v8;
  v12 = (uint64_t)v30;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = a1;
  v13 = v11;
  v14 = v26;
  LOBYTE(v31) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v27;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v13, v29, v3);
  v37 = 1;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v16 = v32;
  v17 = WORD4(v32);
  v18 = &v13[v9[5]];
  *(_QWORD *)v18 = v31;
  *((_QWORD *)v18 + 1) = v16;
  *((_WORD *)v18 + 8) = v17;
  v37 = 2;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v19 = v33;
  v20 = v34;
  v21 = v36;
  v22 = &v13[v9[6]];
  *v22 = v31;
  *(_OWORD *)(v22 + 8) = v32;
  v22[24] = v19;
  v22[25] = v20;
  *((_OWORD *)v22 + 2) = v35;
  v22[48] = v21;
  v37 = 3;
  sub_1D5839FFC();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v28, v15);
  *(_QWORD *)v9[7] = v31;
  sub_1D59CDB8C(0, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_1D59CDBD0(0);
}

void sub_1D59CDB30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59CD73C();
    v7 = a3(a1, &type metadata for RecentSearchExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59CDB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecentSearchExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59CDBD0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RecentSearchExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59CDC0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RecentSearchExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59CDC20(_QWORD *a1)
{
  return RecentSearchExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59CDC34@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47358, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4F918, a1);
}

uint64_t sub_1D59CDC58@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47360, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4F930, a1);
}

uint64_t sub_1D59CDC7C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for RecentSearchExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for RecentSearchExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for RecentSearchExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for RecentSearchExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for RecentSearchExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for RecentSearchExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecentSearchExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59CE514(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for RecentSearchExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59CE63C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59CE760()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1EFF4F948, (void (*)(void))sub_1D5839FFC, (void (*)(void))sub_1D583A044);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RecentSearchExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *v13 = *v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    v13[24] = v14[24];
    v13[25] = v14[25];
    v16 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v16;
    v13[48] = v14[48];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for RecentSearchExposureEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RecentSearchExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RecentSearchExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
  *(_BYTE *)(v11 + 25) = *(_BYTE *)(v12 + 25);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for RecentSearchExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  *(_WORD *)(v9 + 16) = *((_WORD *)v10 + 8);
  *(_OWORD *)v9 = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for RecentSearchExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecentSearchExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59CED60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for RecentSearchExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59CEDEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D59CEE68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RecentSearchExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D59CEF3C + 4 * byte_1D5AD7FE9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D59CEF70 + 4 * byte_1D5AD7FE4[v4]))();
}

uint64_t sub_1D59CEF70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59CEF78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59CEF80);
  return result;
}

uint64_t sub_1D59CEF8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59CEF94);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D59CEF98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59CEFA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecentSearchExposureEvent.Model.CodingKeys()
{
  return &type metadata for RecentSearchExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D59CEFC0()
{
  unint64_t result;

  result = qword_1EFF4FA98;
  if (!qword_1EFF4FA98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD81AC, &type metadata for RecentSearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FA98);
  }
  return result;
}

unint64_t sub_1D59CF008()
{
  unint64_t result;

  result = qword_1EFF4FAA0;
  if (!qword_1EFF4FAA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD811C, &type metadata for RecentSearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FAA0);
  }
  return result;
}

unint64_t sub_1D59CF050()
{
  unint64_t result;

  result = qword_1EFF4FAA8;
  if (!qword_1EFF4FAA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD8144, &type metadata for RecentSearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FAA8);
  }
  return result;
}

uint64_t sub_1D59CF094(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF1620)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D59CF250(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4FAB0, MEMORY[0x1E0CF8078]);
}

uint64_t static RestoreSubscriptionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47368, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4FAB0, a1);
}

uint64_t sub_1D59CF290(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4FAC8, MEMORY[0x1E0CF8380]);
}

uint64_t static RestoreSubscriptionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47370, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4FAC8, a1);
}

uint64_t RestoreSubscriptionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t RestoreSubscriptionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*RestoreSubscriptionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t RestoreSubscriptionEvent.purchaseRestoreListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RestoreSubscriptionEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for RestoreSubscriptionEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4FB58);
}

uint64_t RestoreSubscriptionEvent.purchaseRestoreListData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RestoreSubscriptionEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RestoreSubscriptionEvent.purchaseRestoreListData.modify())(_QWORD)
{
  type metadata accessor for RestoreSubscriptionEvent(0);
  return nullsub_1;
}

uint64_t RestoreSubscriptionEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RestoreSubscriptionEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RestoreSubscriptionEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RestoreSubscriptionEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RestoreSubscriptionEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for RestoreSubscriptionEvent(0);
  return nullsub_1;
}

uint64_t RestoreSubscriptionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for RestoreSubscriptionEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t RestoreSubscriptionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t RestoreSubscriptionEvent.Model.purchaseRestoreListData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for RestoreSubscriptionEvent.Model(0) + 20));
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for RestoreSubscriptionEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4FBF0);
}

uint64_t RestoreSubscriptionEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for RestoreSubscriptionEvent.Model(0) + 24));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t RestoreSubscriptionEvent.Model.init(eventData:purchaseRestoreListData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;

  v6 = *a2;
  v7 = *a3;
  v8 = *((_QWORD *)a3 + 1);
  v9 = *((_QWORD *)a3 + 2);
  v10 = a3[24];
  v11 = a3[25];
  v12 = *((_QWORD *)a3 + 4);
  v13 = *((_QWORD *)a3 + 5);
  v17 = a3[48];
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  result = type metadata accessor for RestoreSubscriptionEvent.Model(0);
  *(_QWORD *)(a4 + *(int *)(result + 20)) = v6;
  v16 = a4 + *(int *)(result + 24);
  *(_BYTE *)v16 = v7;
  *(_QWORD *)(v16 + 8) = v8;
  *(_QWORD *)(v16 + 16) = v9;
  *(_BYTE *)(v16 + 24) = v10;
  *(_BYTE *)(v16 + 25) = v11;
  *(_QWORD *)(v16 + 32) = v12;
  *(_QWORD *)(v16 + 40) = v13;
  *(_BYTE *)(v16 + 48) = v17;
  return result;
}

uint64_t sub_1D59CF780()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000017;
  if (*v0 != 1)
    v1 = 0xD000000000000021;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D59CF7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59D0F04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59CF808()
{
  sub_1D59CFA34();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59CF830()
{
  sub_1D59CFA34();
  return sub_1D5AAEEE0();
}

uint64_t RestoreSubscriptionEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;
  char v23;

  v3 = v1;
  sub_1D59CFD88(0, &qword_1EFF4FAE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59CFA34();
  sub_1D5AAEEC8();
  LOBYTE(v17) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for RestoreSubscriptionEvent.Model(0);
    v17 = *(_QWORD *)(v3 + *(int *)(v10 + 20));
    v23 = 1;
    sub_1D58C7134();
    sub_1D5AAED6C();
    v11 = v3 + *(int *)(v10 + 24);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v17) = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    v23 = 2;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59CFA34()
{
  unint64_t result;

  result = qword_1EFF4FAF0;
  if (!qword_1EFF4FAF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD83FC, &type metadata for RestoreSubscriptionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FAF0);
  }
  return result;
}

uint64_t RestoreSubscriptionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  char v31;
  __int128 v32;
  char v33;
  char v34;

  v22 = a2;
  v23 = sub_1D5AADF98();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59CFD88(0, &qword_1EFF4FAF8, MEMORY[0x1E0DED048]);
  v26 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for RestoreSubscriptionEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59CFA34();
  v24 = v8;
  v12 = (uint64_t)v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v27 = a1;
  LOBYTE(v28) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v23;
  v14 = v24;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v25, v15);
  v34 = 1;
  sub_1D58C70EC();
  sub_1D5AAECD0();
  *(_QWORD *)&v11[*(int *)(v9 + 20)] = v28;
  v34 = 2;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v26);
  v16 = v30;
  v17 = v31;
  v18 = v33;
  v19 = &v11[*(int *)(v9 + 24)];
  *v19 = v28;
  *(_OWORD *)(v19 + 8) = v29;
  v19[24] = v16;
  v19[25] = v17;
  *((_OWORD *)v19 + 2) = v32;
  v19[48] = v18;
  sub_1D59CFDE4((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_1D59CFE28((uint64_t)v11);
}

void sub_1D59CFD88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59CFA34();
    v7 = a3(a1, &type metadata for RestoreSubscriptionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59CFDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RestoreSubscriptionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59CFE28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RestoreSubscriptionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59CFE64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RestoreSubscriptionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59CFE78(_QWORD *a1)
{
  return RestoreSubscriptionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59CFE8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47368, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4FAB0, a1);
}

uint64_t sub_1D59CFEB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47370, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4FAC8, a1);
}

uint64_t sub_1D59CFED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for RestoreSubscriptionEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for RestoreSubscriptionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for RestoreSubscriptionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for RestoreSubscriptionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for RestoreSubscriptionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for RestoreSubscriptionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for RestoreSubscriptionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59D0564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for RestoreSubscriptionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59D0648(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59D0728()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1EFF4FAE0, (void (*)(void))sub_1D58C70EC, (void (*)(void))sub_1D58C7134);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RestoreSubscriptionEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *v9 = *v10;
    v11 = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    *((_QWORD *)v9 + 2) = v11;
    *((_WORD *)v9 + 12) = *((_WORD *)v10 + 12);
    v12 = *((_QWORD *)v10 + 5);
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 5) = v12;
    v9[48] = v10[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for RestoreSubscriptionEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RestoreSubscriptionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 24) = *(_WORD *)(v9 + 24);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RestoreSubscriptionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  return a1;
}

uint64_t initializeWithTake for RestoreSubscriptionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  return a1;
}

uint64_t assignWithTake for RestoreSubscriptionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for RestoreSubscriptionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59D0BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for RestoreSubscriptionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59D0C68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1D59D0CE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RestoreSubscriptionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59D0DAC + 4 * byte_1D5AD8235[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59D0DE0 + 4 * byte_1D5AD8230[v4]))();
}

uint64_t sub_1D59D0DE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59D0DE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59D0DF0);
  return result;
}

uint64_t sub_1D59D0DFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59D0E04);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59D0E08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59D0E10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RestoreSubscriptionEvent.Model.CodingKeys()
{
  return &type metadata for RestoreSubscriptionEvent.Model.CodingKeys;
}

unint64_t sub_1D59D0E30()
{
  unint64_t result;

  result = qword_1EFF4FC30;
  if (!qword_1EFF4FC30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD83D4, &type metadata for RestoreSubscriptionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FC30);
  }
  return result;
}

unint64_t sub_1D59D0E78()
{
  unint64_t result;

  result = qword_1EFF4FC38;
  if (!qword_1EFF4FC38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD8344, &type metadata for RestoreSubscriptionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FC38);
  }
  return result;
}

unint64_t sub_1D59D0EC0()
{
  unint64_t result;

  result = qword_1EFF4FC40;
  if (!qword_1EFF4FC40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD836C, &type metadata for RestoreSubscriptionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FC40);
  }
  return result;
}

uint64_t sub_1D59D0F04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AF1640 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t TabiRequestSummary.channelPicker.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TabiRequestSummary.channelPicker.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*TabiRequestSummary.channelPicker.modify())()
{
  return nullsub_1;
}

uint64_t TabiRequestSummary.eventAggregation.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TabiRequestSummary.eventAggregation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*TabiRequestSummary.eventAggregation.modify())()
{
  return nullsub_1;
}

uint64_t TabiRequestSummary.feedPersonalization.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TabiRequestSummary.feedPersonalization.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*TabiRequestSummary.feedPersonalization.modify())()
{
  return nullsub_1;
}

uint64_t TabiRequestSummary.personalizedPaywalls.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TabiRequestSummary.personalizedPaywalls.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*TabiRequestSummary.personalizedPaywalls.modify())()
{
  return nullsub_1;
}

uint64_t TabiRequestSummary.recommendedIssues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TabiRequestSummary.recommendedIssues.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*TabiRequestSummary.recommendedIssues.modify())()
{
  return nullsub_1;
}

uint64_t TabiRequestSummary.recommendedTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TabiRequestSummary.recommendedTags.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*TabiRequestSummary.recommendedTags.modify())()
{
  return nullsub_1;
}

uint64_t TabiRequestSummary.tagScoring.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TabiRequestSummary.tagScoring.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*TabiRequestSummary.tagScoring.modify())()
{
  return nullsub_1;
}

uint64_t TabiRequestSummary.tagSuggestions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TabiRequestSummary.tagSuggestions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*TabiRequestSummary.tagSuggestions.modify())()
{
  return nullsub_1;
}

void __swiftcall TabiRequestSummary.init(channelPicker:eventAggregation:feedPersonalization:personalizedPaywalls:recommendedIssues:recommendedTags:tagScoring:tagSuggestions:)(NewsAnalytics::TabiRequestSummary *__return_ptr retstr, Swift::OpaquePointer channelPicker, Swift::OpaquePointer eventAggregation, Swift::OpaquePointer feedPersonalization, Swift::OpaquePointer personalizedPaywalls, Swift::OpaquePointer recommendedIssues, Swift::OpaquePointer recommendedTags, Swift::OpaquePointer tagScoring, Swift::OpaquePointer tagSuggestions)
{
  retstr->channelPicker = channelPicker;
  retstr->eventAggregation = eventAggregation;
  retstr->feedPersonalization = feedPersonalization;
  retstr->personalizedPaywalls = personalizedPaywalls;
  retstr->recommendedIssues = recommendedIssues;
  retstr->recommendedTags = recommendedTags;
  retstr->tagScoring = tagScoring;
  retstr->tagSuggestions = tagSuggestions;
}

uint64_t sub_1D59D126C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59D12AC + 4 * byte_1D5AD8450[a1]))(0x506C656E6E616863, 0xED000072656B6369);
}

unint64_t sub_1D59D12AC()
{
  return 0xD000000000000010;
}

unint64_t sub_1D59D12C8()
{
  return 0xD000000000000013;
}

uint64_t sub_1D59D1318()
{
  return 0x6E656D6D6F636572;
}

uint64_t sub_1D59D133C()
{
  return 0x69726F6353676174;
}

uint64_t sub_1D59D1358()
{
  return 0x6567677553676174;
}

uint64_t sub_1D59D137C()
{
  unsigned __int8 *v0;

  return sub_1D59D126C(*v0);
}

uint64_t sub_1D59D1384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59D248C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59D13A8()
{
  sub_1D59D16F8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59D13D0()
{
  sub_1D59D16F8();
  return sub_1D5AAEEE0();
}

uint64_t TabiRequestSummary.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  sub_1D59D1E18(0, &qword_1ED9D0D68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  v10 = *v1;
  v9 = v1[1];
  v22 = v1[2];
  v23 = v9;
  v11 = v1[3];
  v20 = v1[4];
  v21 = v11;
  v12 = v1[5];
  v18 = v1[6];
  v19 = v12;
  v17 = v1[7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59D16F8();
  v13 = v5;
  sub_1D5AAEEC8();
  v25 = v10;
  v24 = 0;
  sub_1D59D173C();
  sub_1D59D1E74(&qword_1ED9D0C70, &qword_1ED9CF780, (uint64_t)&protocol conformance descriptor for TabiRequestData, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v21;
  v14 = v22;
  v25 = v23;
  v24 = 1;
  sub_1D5AAED6C();
  v25 = v14;
  v24 = 2;
  v23 = v13;
  sub_1D5AAED6C();
  v25 = v15;
  v24 = 3;
  sub_1D5AAED6C();
  v25 = v20;
  v24 = 4;
  sub_1D5AAED6C();
  v25 = v19;
  v24 = 5;
  sub_1D5AAED6C();
  v25 = v18;
  v24 = 6;
  sub_1D5AAED6C();
  v25 = v17;
  v24 = 7;
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v23);
}

unint64_t sub_1D59D16F8()
{
  unint64_t result;

  result = qword_1ED9CFFB8;
  if (!qword_1ED9CFFB8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD85F8, &type metadata for TabiRequestSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFB8);
  }
  return result;
}

void sub_1D59D173C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9D0C68)
  {
    type metadata accessor for TabiRequestData();
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9D0C68);
  }
}

uint64_t TabiRequestSummary.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  uint64_t v29;

  sub_1D59D1E18(0, &qword_1ED9D0CF8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59D16F8();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = a2;
  sub_1D59D173C();
  v28 = 0;
  sub_1D59D1E74(&qword_1ED9D0C78, &qword_1ED9CF788, (uint64_t)&protocol conformance descriptor for TabiRequestData, MEMORY[0x1E0DEAF40]);
  sub_1D5AAECD0();
  v11 = v29;
  v28 = 1;
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  v28 = 2;
  v26 = v29;
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  v28 = 3;
  v25 = v29;
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  v28 = 4;
  v24 = v29;
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  v28 = 5;
  v22 = v29;
  swift_bridgeObjectRetain();
  v20[1] = 0;
  sub_1D5AAECD0();
  v28 = 6;
  v23 = v29;
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  v28 = 7;
  v21 = v29;
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v12 = v29;
  v13 = v11;
  swift_bridgeObjectRetain();
  v14 = v26;
  swift_bridgeObjectRetain();
  v15 = v25;
  swift_bridgeObjectRetain();
  v16 = v24;
  swift_bridgeObjectRetain();
  v17 = v22;
  swift_bridgeObjectRetain();
  v18 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20[0] = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = v27;
  *v27 = v13;
  v19[1] = v14;
  v19[2] = v15;
  v19[3] = v16;
  v19[4] = v17;
  v19[5] = v18;
  v19[6] = v21;
  v19[7] = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D59D1E18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59D16F8();
    v7 = a3(a1, &type metadata for TabiRequestSummary.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59D1E74(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1D59D173C();
    v10 = v9;
    v11 = sub_1D59D1EEC(a2, a3);
    result = MEMORY[0x1D8279680](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D59D1EEC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for TabiRequestData();
    result = MEMORY[0x1D8279680](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D59D1F30()
{
  unint64_t result;

  result = qword_1ED9CFFD8;
  if (!qword_1ED9CFFD8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TabiRequestSummary, &type metadata for TabiRequestSummary);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFD8);
  }
  return result;
}

unint64_t sub_1D59D1F78()
{
  unint64_t result;

  result = qword_1ED9CFFD0;
  if (!qword_1ED9CFFD0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TabiRequestSummary, &type metadata for TabiRequestSummary);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFD0);
  }
  return result;
}

uint64_t sub_1D59D1FBC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return TabiRequestSummary.init(from:)(a1, a2);
}

uint64_t sub_1D59D1FD0(_QWORD *a1)
{
  return TabiRequestSummary.encode(to:)(a1);
}

uint64_t destroy for TabiRequestSummary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TabiRequestSummary(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TabiRequestSummary(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for TabiRequestSummary(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TabiRequestSummary(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TabiRequestSummary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TabiRequestSummary()
{
  return &type metadata for TabiRequestSummary;
}

uint64_t storeEnumTagSinglePayload for TabiRequestSummary.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D59D2334 + 4 * byte_1D5AD845D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D59D2368 + 4 * byte_1D5AD8458[v4]))();
}

uint64_t sub_1D59D2368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59D2370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59D2378);
  return result;
}

uint64_t sub_1D59D2384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59D238CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D59D2390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59D2398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TabiRequestSummary.CodingKeys()
{
  return &type metadata for TabiRequestSummary.CodingKeys;
}

unint64_t sub_1D59D23B8()
{
  unint64_t result;

  result = qword_1EFF4FC48;
  if (!qword_1EFF4FC48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD85D0, &type metadata for TabiRequestSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FC48);
  }
  return result;
}

unint64_t sub_1D59D2400()
{
  unint64_t result;

  result = qword_1ED9CFFC8;
  if (!qword_1ED9CFFC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD8540, &type metadata for TabiRequestSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFC8);
  }
  return result;
}

unint64_t sub_1D59D2448()
{
  unint64_t result;

  result = qword_1ED9CFFC0;
  if (!qword_1ED9CFFC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD8568, &type metadata for TabiRequestSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFC0);
  }
  return result;
}

uint64_t sub_1D59D248C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x506C656E6E616863 && a2 == 0xED000072656B6369;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF1660 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF1680 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF16A0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AEBD10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E656D6D6F636572 && a2 == 0xEF73676154646564 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69726F6353676174 && a2 == 0xEA0000000000676ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6567677553676174 && a2 == 0xEE00736E6F697473)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

NewsAnalytics::TextSizeChangeType_optional __swiftcall TextSizeChangeType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::TextSizeChangeType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t TextSizeChangeType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x72656C6C616D73;
  if (*v0 != 1)
    v1 = 0x72656772616CLL;
  if (*v0)
    return v1;
  else
    return 0x676E616843746F6ELL;
}

uint64_t sub_1D59D28DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A39D90(*a1, *a2);
}

unint64_t sub_1D59D28EC()
{
  unint64_t result;

  result = qword_1EFF4FC50;
  if (!qword_1EFF4FC50)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TextSizeChangeType, &type metadata for TextSizeChangeType);
    atomic_store(result, (unint64_t *)&qword_1EFF4FC50);
  }
  return result;
}

uint64_t sub_1D59D2930()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59D29D0()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59D2A4C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::TextSizeChangeType_optional sub_1D59D2AE8(Swift::String *a1)
{
  return TextSizeChangeType.init(rawValue:)(*a1);
}

void sub_1D59D2AF4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA00000000006465;
  v4 = 0xE700000000000000;
  v5 = 0x72656C6C616D73;
  if (v2 != 1)
  {
    v5 = 0x72656772616CLL;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x676E616843746F6ELL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D59D2B54()
{
  sub_1D59D2CC8();
  return sub_1D5AAE928();
}

uint64_t sub_1D59D2BB0()
{
  sub_1D59D2CC8();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for TextSizeChangeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59D2C48 + 4 * byte_1D5AD8655[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59D2C7C + 4 * byte_1D5AD8650[v4]))();
}

uint64_t sub_1D59D2C7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59D2C84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59D2C8CLL);
  return result;
}

uint64_t sub_1D59D2C98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59D2CA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59D2CA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59D2CAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextSizeChangeType()
{
  return &type metadata for TextSizeChangeType;
}

unint64_t sub_1D59D2CC8()
{
  unint64_t result;

  result = qword_1ED9CE488;
  if (!qword_1ED9CE488)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TextSizeChangeType, &type metadata for TextSizeChangeType);
    atomic_store(result, (unint64_t *)&qword_1ED9CE488);
  }
  return result;
}

void SubscriptionAdLocationData.location.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SubscriptionAdLocationData.location.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SubscriptionAdLocationData.location.modify())()
{
  return nullsub_1;
}

NewsAnalytics::SubscriptionAdLocationData __swiftcall SubscriptionAdLocationData.init(location:)(NewsAnalytics::SubscriptionAdLocationData location)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)location.location;
  return location;
}

uint64_t sub_1D59D2D40()
{
  sub_1D59D2E94();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59D2D68()
{
  sub_1D59D2E94();
  return sub_1D5AAEEE0();
}

uint64_t SubscriptionAdLocationData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D59D3054(0, &qword_1EFF4FC58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59D2E94();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D59D2ED8();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59D2E94()
{
  unint64_t result;

  result = qword_1EFF4FC60;
  if (!qword_1EFF4FC60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD8900, &type metadata for SubscriptionAdLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FC60);
  }
  return result;
}

unint64_t sub_1D59D2ED8()
{
  unint64_t result;

  result = qword_1EFF4FC68;
  if (!qword_1EFF4FC68)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionAdLocation, &type metadata for SubscriptionAdLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4FC68);
  }
  return result;
}

uint64_t SubscriptionAdLocationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D59D3054(0, &qword_1EFF4FC70, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59D2E94();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D59D30B0();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59D3054(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59D2E94();
    v7 = a3(a1, &type metadata for SubscriptionAdLocationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59D30B0()
{
  unint64_t result;

  result = qword_1EFF4FC78;
  if (!qword_1EFF4FC78)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionAdLocation, &type metadata for SubscriptionAdLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4FC78);
  }
  return result;
}

unint64_t sub_1D59D30F8()
{
  unint64_t result;

  result = qword_1ED9C6DB0[0];
  if (!qword_1ED9C6DB0[0])
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionAdLocationData, &type metadata for SubscriptionAdLocationData);
    atomic_store(result, qword_1ED9C6DB0);
  }
  return result;
}

unint64_t sub_1D59D3140()
{
  unint64_t result;

  result = qword_1ED9C6DA8;
  if (!qword_1ED9C6DA8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionAdLocationData, &type metadata for SubscriptionAdLocationData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6DA8);
  }
  return result;
}

uint64_t sub_1D59D3184@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SubscriptionAdLocationData.init(from:)(a1, a2);
}

uint64_t sub_1D59D3198(_QWORD *a1)
{
  return SubscriptionAdLocationData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionAdLocationData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59D31F8 + 4 * byte_1D5AD8775[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59D322C + 4 * byte_1D5AD8770[v4]))();
}

uint64_t sub_1D59D322C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59D3234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59D323CLL);
  return result;
}

uint64_t sub_1D59D3248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59D3250);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59D3254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59D325C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionAdLocationData()
{
  return &type metadata for SubscriptionAdLocationData;
}

uint64_t storeEnumTagSinglePayload for SubscriptionAdLocationData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59D32B8 + 4 * byte_1D5AD877A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59D32D8 + 4 * byte_1D5AD877F[v4]))();
}

_BYTE *sub_1D59D32B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59D32D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59D32E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59D32E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59D32F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59D32F8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionAdLocationData.CodingKeys()
{
  return &type metadata for SubscriptionAdLocationData.CodingKeys;
}

unint64_t sub_1D59D3318()
{
  unint64_t result;

  result = qword_1EFF4FC80;
  if (!qword_1EFF4FC80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD88D8, &type metadata for SubscriptionAdLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FC80);
  }
  return result;
}

unint64_t sub_1D59D3360()
{
  unint64_t result;

  result = qword_1EFF4FC88;
  if (!qword_1EFF4FC88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD8848, &type metadata for SubscriptionAdLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FC88);
  }
  return result;
}

unint64_t sub_1D59D33A8()
{
  unint64_t result;

  result = qword_1EFF4FC90;
  if (!qword_1EFF4FC90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD8870, &type metadata for SubscriptionAdLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FC90);
  }
  return result;
}

uint64_t type metadata accessor for MediaEngageEventQueryItemsGenerator()
{
  return objc_opt_self();
}

void sub_1D59D340C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D59D3ABC(a1, a2, a3);
}

_QWORD *sub_1D59D3424(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v2 = sub_1D5AAD560();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v22 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v22 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - v13;
  v15 = a1;
  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (((1 << v15) & 0x2D) == 0)
  {
    if (v15 == 1)
    {
      sub_1D5AAD53C();
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v9, v2);
      v16 = (_QWORD *)sub_1D5873060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v18 = v16[2];
      v17 = v16[3];
      v19 = v18 + 1;
      if (v18 >= v17 >> 1)
        v16 = (_QWORD *)sub_1D5873060(v17 > 1, v18 + 1, 1, v16);
      v12 = v6;
      v14 = v9;
    }
    else
    {
      sub_1D5AAD53C();
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v12, v14, v2);
      v16 = (_QWORD *)sub_1D5873060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v18 = v16[2];
      v20 = v16[3];
      v19 = v18 + 1;
      if (v18 >= v20 >> 1)
        v16 = (_QWORD *)sub_1D5873060(v20 > 1, v18 + 1, 1, v16);
    }
    v16[2] = v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v16+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v18, v12, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
  }
  return v16;
}

void sub_1D59D3684(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = sub_1D5AAD560();
  v4 = MEMORY[0x1E0C80A78](v3);
  v5 = MEMORY[0x1E0C80A78](v4);
  v6 = MEMORY[0x1E0C80A78](v5);
  v7 = MEMORY[0x1E0C80A78](v6);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  __asm { BR              X10 }
}

_QWORD *sub_1D59D37C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  size_t v9;

  sub_1D5AAD53C();
  v4 = *(_QWORD *)(v2 - 96);
  v3 = *(_QWORD *)(v2 - 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v0, v1, v3);
  v5 = (_QWORD *)sub_1D5873060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v7 = v5[2];
  v6 = v5[3];
  v8 = v7 + 1;
  if (v7 >= v6 >> 1)
  {
    v9 = sub_1D5873060(v6 > 1, v7 + 1, 1, v5);
    v8 = v7 + 1;
    v5 = (_QWORD *)v9;
  }
  v5[2] = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))((unint64_t)v5+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v7, v0, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  return v5;
}

void sub_1D59D3ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[13];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;

  v32 = a3;
  v31 = a2;
  v30 = sub_1D5AAD560();
  v29[12] = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for MediaEngageEvent.Model(0);
  MEMORY[0x1E0C80A78](v34);
  v35 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59D4270();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D5AADAAC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v29 - v12;
  sub_1D59D42C4();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v19 = swift_dynamicCast();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v19)
  {
    v20(v9, 0, 1, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v9, v15);
    v21 = (void *)sub_1D5AADA7C();
    v22 = sub_1D5AADE3C();
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);

    }
    else
    {
      v24 = v22;
      v25 = v23;

      sub_1D5AAD4B8();
      swift_allocObject();
      sub_1D5AAD4AC();
      sub_1D57A8DE4(&qword_1EFF4FCA0, type metadata accessor for MediaEngageEvent.Model, (uint64_t)&protocol conformance descriptor for MediaEngageEvent.Model);
      v26 = (uint64_t)v35;
      v27 = v34;
      sub_1D5AAD4A0();
      swift_release();
      v28 = *(unsigned __int8 *)(v26 + *(int *)(v27 + 40) + 8);
      if (((1 << *(_BYTE *)(v26 + *(int *)(v27 + 36))) & 0x2D) == 0)
      {
        v29[11] = v24;
        __asm { BR              X10 }
      }
      sub_1D57E69C4(v24, v25);
      sub_1D5820E20(v26, type metadata accessor for MediaEngageEvent.Model);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
  else
  {
    v20(v9, 1, 1, v15);
    sub_1D5820E20((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1D59D4270);
    sub_1D5820DDC();
    swift_allocError();
    swift_willThrow();
  }
}

void sub_1D59D4270()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4FC98)
  {
    sub_1D59D42C4();
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4FC98);
  }
}

void sub_1D59D42C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C7040)
  {
    type metadata accessor for MediaEngageEvent(255);
    sub_1D57A8DE4(&qword_1ED9C8C80, type metadata accessor for MediaEngageEvent, (uint64_t)&protocol conformance descriptor for MediaEngageEvent);
    v0 = sub_1D5AADAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C7040);
  }
}

uint64_t sub_1D59D433C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1ED9CD820);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED9CD820);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static BannerAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD838, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CD820, a1);
}

uint64_t sub_1D59D43DC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1ED9CDCD0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED9CDCD0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static BannerAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD840, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CDCD0, a1);
}

uint64_t BannerAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t BannerAdImpressionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*BannerAdImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for BannerAdImpressionEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for BannerAdImpressionEvent(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9CD038);
}

uint64_t BannerAdImpressionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adUserData.modify())(_QWORD)
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adStateData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.adStateData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adStateData.modify())(_QWORD)
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adPlacementData.modify())(_QWORD)
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adSizeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.adSizeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adSizeData.modify())(_QWORD)
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.adPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adPositionData.modify())(_QWORD)
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adFeedData.modify())(_QWORD)
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.bannerAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.bannerAdData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.bannerAdData.modify())(_QWORD)
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adGroupData.modify())(_QWORD)
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for BannerAdImpressionEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v12, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v12, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v12, v27);
}

uint64_t BannerAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t BannerAdImpressionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for BannerAdImpressionEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for BannerAdImpressionEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4FD18);
}

uint64_t BannerAdImpressionEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t BannerAdImpressionEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t BannerAdImpressionEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t BannerAdImpressionEvent.Model.adStateData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 40));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

double BannerAdImpressionEvent.Model.adSizeData.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 44));
  *a1 = result;
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t BannerAdImpressionEvent.Model.bannerAdData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 56));
  v5 = *v4;
  v6 = v4[1];
  LOBYTE(v4) = v4[2];
  *a1 = v5;
  a1[1] = v6;
  a1[2] = (_BYTE)v4;
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adGroupData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

__n128 BannerAdImpressionEvent.Model.init(eventData:timedData:adUserData:userBundleSubscriptionContextData:channelData:adStateData:adPlacementData:adSizeData:adPositionData:adFeedData:bannerAdData:adGroupData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, __int128 *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, int *a10, char *a11, char *a12, char *a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 result;
  _QWORD *v32;
  uint64_t v33;
  _BYTE *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  __n128 v40;
  __int128 v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v17 = *a3;
  v18 = a3[1];
  v38 = *a4;
  v19 = *((_QWORD *)a4 + 1);
  v20 = a4[24];
  v21 = a4[25];
  v22 = *((_QWORD *)a4 + 4);
  v36 = *((_QWORD *)a4 + 5);
  v37 = *((_QWORD *)a4 + 2);
  v35 = a4[48];
  v40 = (__n128)a5[1];
  v41 = *a5;
  v39 = *((_QWORD *)a5 + 4);
  v42 = *a6;
  v43 = a7[1];
  v44 = *a7;
  v45 = *((_BYTE *)a10 + 4);
  v46 = *a10;
  v47 = *a11;
  v49 = a12[1];
  v50 = *a12;
  v48 = a12[2];
  v51 = *a13;
  v23 = sub_1D5AADF98();
  v24 = *a8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a9, a1, v23);
  v25 = (int *)type metadata accessor for BannerAdImpressionEvent.Model(0);
  v26 = a9 + v25[5];
  v27 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v26, a2, v27);
  v28 = (_QWORD *)(a9 + v25[6]);
  *v28 = v17;
  v28[1] = v18;
  v29 = a9 + v25[7];
  *(_BYTE *)v29 = v38;
  *(_QWORD *)(v29 + 8) = v19;
  *(_QWORD *)(v29 + 16) = v37;
  *(_BYTE *)(v29 + 24) = v20;
  *(_BYTE *)(v29 + 25) = v21;
  *(_QWORD *)(v29 + 32) = v22;
  *(_QWORD *)(v29 + 40) = v36;
  *(_BYTE *)(v29 + 48) = v35;
  v30 = a9 + v25[8];
  result = v40;
  *(_OWORD *)v30 = v41;
  *(__n128 *)(v30 + 16) = v40;
  *(_QWORD *)(v30 + 32) = v39;
  *(_BYTE *)(a9 + v25[9]) = v42;
  v32 = (_QWORD *)(a9 + v25[10]);
  *v32 = v44;
  v32[1] = v43;
  *(_QWORD *)(a9 + v25[11]) = v24;
  v33 = a9 + v25[12];
  *(_DWORD *)v33 = v46;
  *(_BYTE *)(v33 + 4) = v45;
  *(_BYTE *)(a9 + v25[13]) = v47;
  v34 = (_BYTE *)(a9 + v25[14]);
  *v34 = v50;
  v34[1] = v49;
  v34[2] = v48;
  *(_BYTE *)(a9 + v25[15]) = v51;
  return result;
}

uint64_t sub_1D59D56E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59D571C + 4 * byte_1D5AD89B0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59D571C()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D59D5730()
{
  return 0x6144726573556461;
}

uint64_t sub_1D59D57F8()
{
  return 0x644172656E6E6162;
}

uint64_t sub_1D59D5838()
{
  unsigned __int8 *v0;

  return sub_1D59D56E4(*v0);
}

uint64_t sub_1D59D5840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59D95A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59D5864()
{
  sub_1D59D5D4C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59D588C()
{
  sub_1D59D5D4C();
  return sub_1D5AAEEE0();
}

uint64_t BannerAdImpressionEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  int v25;
  char *v26;
  char v27;
  char v28;
  _BYTE v30[32];
  __int128 v31;
  char v32;
  char v33;

  v3 = v1;
  sub_1D59D655C(0, &qword_1EFF4FCA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v30[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59D5D4C();
  sub_1D5AAEEC8();
  v30[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for BannerAdImpressionEvent.Model(0);
    v30[0] = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (uint64_t *)(v3 + v10[6]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)v30 = v13;
    *(_QWORD *)&v30[8] = v12;
    v33 = 2;
    sub_1D57CBEFC();
    sub_1D5AAED6C();
    v14 = v3 + v10[7];
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_BYTE *)(v14 + 25);
    v17 = *(_BYTE *)(v14 + 48);
    v30[0] = *(_BYTE *)v14;
    *(_OWORD *)&v30[8] = *(_OWORD *)(v14 + 8);
    v30[24] = v15;
    v30[25] = v16;
    v31 = *(_OWORD *)(v14 + 32);
    v32 = v17;
    v33 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v18 = v3 + v10[8];
    v19 = *(_QWORD *)(v18 + 32);
    v20 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v18;
    *(_OWORD *)&v30[16] = v20;
    *(_QWORD *)&v31 = v19;
    v33 = 4;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v30[0] = *(_BYTE *)(v3 + v10[9]);
    v33 = 5;
    sub_1D58C87EC();
    sub_1D5AAED6C();
    v21 = (uint64_t *)(v3 + v10[10]);
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)v30 = v23;
    *(_QWORD *)&v30[8] = v22;
    v33 = 6;
    sub_1D584FF8C();
    sub_1D5AAED6C();
    *(_QWORD *)v30 = *(_QWORD *)(v3 + v10[11]);
    v33 = 7;
    sub_1D58A5DB8();
    sub_1D5AAED6C();
    v24 = (int *)(v3 + v10[12]);
    v25 = *v24;
    LOBYTE(v24) = *((_BYTE *)v24 + 4);
    *(_DWORD *)v30 = v25;
    v30[4] = (_BYTE)v24;
    v33 = 8;
    sub_1D585010C();
    sub_1D5AAED18();
    v30[0] = *(_BYTE *)(v3 + v10[13]);
    v33 = 9;
    sub_1D57CBF9C();
    sub_1D5AAED18();
    v26 = (char *)(v3 + v10[14]);
    v27 = *v26;
    v28 = v26[1];
    LOBYTE(v26) = v26[2];
    v30[0] = v27;
    v30[1] = v28;
    v30[2] = (_BYTE)v26;
    v33 = 10;
    sub_1D5987BEC();
    sub_1D5AAED6C();
    v30[0] = *(_BYTE *)(v3 + v10[15]);
    v33 = 11;
    sub_1D5850384();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59D5D4C()
{
  unint64_t result;

  result = qword_1EFF4FCB0;
  if (!qword_1EFF4FCB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD8CCC, &type metadata for BannerAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FCB0);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char v30;
  char *v31;
  char v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  int *v46;
  _BYTE v47[32];
  __int128 v48;
  char v49;
  char v50;

  v38 = a2;
  v4 = sub_1D5AADFB0();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D5AADF98();
  v42 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59D655C(0, &qword_1EFF4FCB8, MEMORY[0x1E0DED048]);
  v43 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - v12;
  v46 = (int *)type metadata accessor for BannerAdImpressionEvent.Model(0);
  MEMORY[0x1E0C80A78](v46);
  v44 = a1;
  v45 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59D5D4C();
  v39 = v13;
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v47[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v15 = v7;
  v16 = v45;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v45, v9, v15);
  v47[0] = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v17 = v41;
  sub_1D5AAECD0();
  v18 = v46;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v16[v46[5]], v6, v17);
  v50 = 2;
  sub_1D57CBEB8();
  sub_1D5AAECD0();
  v19 = *(_QWORD *)&v47[8];
  v20 = &v16[v18[6]];
  *(_QWORD *)v20 = *(_QWORD *)v47;
  *((_QWORD *)v20 + 1) = v19;
  v50 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v21 = v47[24];
  v22 = v47[25];
  v23 = v49;
  v24 = &v16[v18[7]];
  *v24 = v47[0];
  *(_OWORD *)(v24 + 8) = *(_OWORD *)&v47[8];
  v24[24] = v21;
  v24[25] = v22;
  *((_OWORD *)v24 + 2) = v48;
  v24[48] = v23;
  v50 = 4;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v25 = v48;
  v26 = &v16[v18[8]];
  v27 = *(_OWORD *)&v47[16];
  *(_OWORD *)v26 = *(_OWORD *)v47;
  *((_OWORD *)v26 + 1) = v27;
  *((_QWORD *)v26 + 4) = v25;
  v50 = 5;
  sub_1D58C87A4();
  sub_1D5AAECD0();
  v16[v18[9]] = v47[0];
  v50 = 6;
  sub_1D584FF48();
  sub_1D5AAECD0();
  v28 = *(_QWORD *)&v47[8];
  v29 = &v16[v18[10]];
  *(_QWORD *)v29 = *(_QWORD *)v47;
  *((_QWORD *)v29 + 1) = v28;
  v50 = 7;
  sub_1D58A5D74();
  sub_1D5AAECD0();
  *(_QWORD *)&v16[v18[11]] = *(_QWORD *)v47;
  v50 = 8;
  sub_1D58500C8();
  sub_1D5AAEC7C();
  v30 = v47[4];
  v31 = &v16[v18[12]];
  *(_DWORD *)v31 = *(_DWORD *)v47;
  v31[4] = v30;
  v50 = 9;
  sub_1D57CBF58();
  sub_1D5AAEC7C();
  v45[v46[13]] = v47[0];
  v50 = 10;
  sub_1D5987BA4();
  sub_1D5AAECD0();
  v32 = v47[1];
  v33 = v47[2];
  v34 = &v45[v46[14]];
  *v34 = v47[0];
  v34[1] = v32;
  v34[2] = v33;
  v50 = 11;
  sub_1D5850340();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v39, v43);
  v35 = (uint64_t)v45;
  v45[v46[15]] = v47[0];
  sub_1D59D65B8(v35, v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return sub_1D59D65FC(v35);
}

void sub_1D59D655C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59D5D4C();
    v7 = a3(a1, &type metadata for BannerAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59D65B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BannerAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59D65FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BannerAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59D6638@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BannerAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59D664C(_QWORD *a1)
{
  return BannerAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59D6660@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD838, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CD820, a1);
}

uint64_t sub_1D59D6684@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD840, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CDCD0, a1);
}

uint64_t sub_1D59D66A8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v13, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v13, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v13, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for BannerAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for BannerAdImpressionEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
}

uint64_t initializeWithCopy for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerAdImpressionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59D7EB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                        v8 = v23;
                        v12 = *(_QWORD *)(v23 - 8);
                        v13 = a3[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for BannerAdImpressionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59D81DC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                        v10 = v25;
                        v14 = *(_QWORD *)(v25 - 8);
                        v15 = a4[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59D8500()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9CD0D8, (void (*)(void))sub_1D58C87A4, (void (*)(void))sub_1D58C87EC);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9D1620, (void (*)(void))sub_1D5987BA4, (void (*)(void))sub_1D5987BEC);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                        if (v11 <= 0x3F)
                          swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for BannerAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    *v17 = *v18;
    v19 = *((_QWORD *)v18 + 2);
    *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
    *((_QWORD *)v17 + 2) = v19;
    *((_WORD *)v17 + 12) = *((_WORD *)v18 + 12);
    v20 = *((_QWORD *)v18 + 5);
    *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 5) = v20;
    v17[48] = v18[48];
    v21 = a3[8];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *(_QWORD *)((char *)a2 + v21 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24)
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *((_QWORD *)v22 + 1) = v24;
      *((_WORD *)v22 + 8) = *((_WORD *)v23 + 8);
      v25 = *((_QWORD *)v23 + 4);
      *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
      *((_QWORD *)v22 + 4) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v27 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v27;
      *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
    }
    v28 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v29 = (_QWORD *)((char *)a1 + v28);
    v30 = (_QWORD *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[12];
    *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    v35 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_WORD *)v36 = *(_WORD *)v37;
    v36[2] = v37[2];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 32) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = v18;
  *(_WORD *)(v16 + 24) = *(_WORD *)(v17 + 24);
  v19 = *(_QWORD *)(v17 + 40);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 40) = v19;
  *(_BYTE *)(v16 + 48) = *(_BYTE *)(v17 + 48);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a2 + v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23)
  {
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_QWORD *)(v21 + 8) = v23;
    *(_WORD *)(v21 + 16) = *(_WORD *)(v22 + 16);
    v24 = *(_QWORD *)(v22 + 32);
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
    *(_QWORD *)(v21 + 32) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v25;
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  }
  v26 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  v33 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_WORD *)v34 = *(_WORD *)v35;
  *(_BYTE *)(v34 + 2) = *(_BYTE *)(v35 + 2);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  int v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(a2 + v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 24) = *(_BYTE *)(v16 + 24);
  *(_BYTE *)(v15 + 25) = *(_BYTE *)(v16 + 25);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 48) = *(_BYTE *)(v16 + 48);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = (__int128 *)(a2 + v17);
  v20 = *(_QWORD *)(a1 + v17 + 8);
  v21 = *(_QWORD *)(a2 + v17 + 8);
  if (v20)
  {
    if (v21)
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *(_QWORD *)(v18 + 8) = *((_QWORD *)v19 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v18 + 16) = *((_BYTE *)v19 + 16);
      *(_BYTE *)(v18 + 17) = *((_BYTE *)v19 + 17);
      *(_QWORD *)(v18 + 24) = *((_QWORD *)v19 + 3);
      *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v18);
      v22 = *((_QWORD *)v19 + 4);
      v23 = v19[1];
      *(_OWORD *)v18 = *v19;
      *(_OWORD *)(v18 + 16) = v23;
      *(_QWORD *)(v18 + 32) = v22;
    }
  }
  else if (v21)
  {
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)(v18 + 8) = *((_QWORD *)v19 + 1);
    *(_BYTE *)(v18 + 16) = *((_BYTE *)v19 + 16);
    *(_BYTE *)(v18 + 17) = *((_BYTE *)v19 + 17);
    *(_QWORD *)(v18 + 24) = *((_QWORD *)v19 + 3);
    *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v24 = *v19;
    v25 = v19[1];
    *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
    *(_OWORD *)v18 = v24;
    *(_OWORD *)(v18 + 16) = v25;
  }
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v26 = a3[10];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[11];
  v30 = (_DWORD *)(a1 + v29);
  v31 = (_DWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  v32 = a3[12];
  v33 = a1 + v32;
  v34 = (int *)(a2 + v32);
  v35 = *v34;
  *(_BYTE *)(v33 + 4) = *((_BYTE *)v34 + 4);
  *(_DWORD *)v33 = v35;
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v36 = a3[14];
  v37 = (_BYTE *)(a1 + v36);
  v38 = (_BYTE *)(a2 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  v37[2] = v38[2];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t initializeWithTake for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v15 = a3[8];
  v16 = a3[9];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v20 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  v21 = a3[12];
  v22 = a3[13];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v25 = a3[14];
  v26 = a3[15];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_WORD *)v27 = *(_WORD *)v28;
  *(_BYTE *)(v27 + 2) = *(_BYTE *)(v28 + 2);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  return a1;
}

uint64_t assignWithTake for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)(a2 + v16);
  v19 = *(_QWORD *)(a2 + v16 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_BYTE *)(v17 + 25) = *(_BYTE *)(v18 + 25);
  v20 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  if (!*(_QWORD *)(a1 + v21 + 8))
    goto LABEL_5;
  v24 = *(_QWORD *)(v23 + 8);
  if (!v24)
  {
    sub_1D57E1784(v22);
LABEL_5:
    v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v26;
    *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
    goto LABEL_6;
  }
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = v24;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
  *(_BYTE *)(v22 + 17) = *(_BYTE *)(v23 + 17);
  v25 = *(_QWORD *)(v23 + 32);
  *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
  *(_QWORD *)(v22 + 32) = v25;
  swift_bridgeObjectRelease();
LABEL_6:
  v27 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v36 = (_BYTE *)(a1 + v35);
  v37 = (_BYTE *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  v36[2] = v37[2];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerAdImpressionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59D91C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerAdImpressionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59D9278(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D59D9320()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BannerAdImpressionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1D59D944C + 4 * byte_1D5AD89C1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1D59D9480 + 4 * byte_1D5AD89BC[v4]))();
}

uint64_t sub_1D59D9480(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59D9488(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59D9490);
  return result;
}

uint64_t sub_1D59D949C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59D94A4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1D59D94A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59D94B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BannerAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for BannerAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_1D59D94D0()
{
  unint64_t result;

  result = qword_1EFF4FD78;
  if (!qword_1EFF4FD78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD8CA4, &type metadata for BannerAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FD78);
  }
  return result;
}

unint64_t sub_1D59D9518()
{
  unint64_t result;

  result = qword_1EFF4FD80;
  if (!qword_1EFF4FD80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD8C14, &type metadata for BannerAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FD80);
  }
  return result;
}

unint64_t sub_1D59D9560()
{
  unint64_t result;

  result = qword_1EFF4FD88;
  if (!qword_1EFF4FD88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD8C3C, &type metadata for BannerAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FD88);
  }
  return result;
}

uint64_t sub_1D59D95A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4465746174536461 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6144657A69536461 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x697469736F506461 && a2 == 0xEE00617461446E6FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x644172656E6E6162 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

NewsAnalytics::SubscriptionStatus_optional __swiftcall SubscriptionStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SubscriptionStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SubscriptionStatus.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6269726373627573;
  if (*v0 != 1)
    v1 = 0x6373627553746F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D59D9BF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A39EA0(*a1, *a2);
}

unint64_t sub_1D59D9C04()
{
  unint64_t result;

  result = qword_1EFF4FD90;
  if (!qword_1EFF4FD90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionStatus, &type metadata for SubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF4FD90);
  }
  return result;
}

uint64_t sub_1D59D9C48()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59D9CF8()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59D9D84()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::SubscriptionStatus_optional sub_1D59D9E30(Swift::String *a1)
{
  return SubscriptionStatus.init(rawValue:)(*a1);
}

void sub_1D59D9E3C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xEA00000000006465;
  v5 = 0x6269726373627573;
  if (v2 != 1)
  {
    v5 = 0x6373627553746F6ELL;
    v4 = 0xED00006465626972;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D59D9EAC()
{
  sub_1D59DA020();
  return sub_1D5AAE928();
}

uint64_t sub_1D59D9F08()
{
  sub_1D59DA020();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for SubscriptionStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59D9FA0 + 4 * byte_1D5AD8D25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59D9FD4 + 4 * byte_1D5AD8D20[v4]))();
}

uint64_t sub_1D59D9FD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59D9FDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59D9FE4);
  return result;
}

uint64_t sub_1D59D9FF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59D9FF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59D9FFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59DA004(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStatus()
{
  return &type metadata for SubscriptionStatus;
}

unint64_t sub_1D59DA020()
{
  unint64_t result;

  result = qword_1ED9CA1C8;
  if (!qword_1ED9CA1C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionStatus, &type metadata for SubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1ED9CA1C8);
  }
  return result;
}

NewsAnalytics::MediaPlayMethod_optional __swiftcall MediaPlayMethod.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::MediaPlayMethod_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MediaPlayMethod.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x79616C706F747561;
  if (*v0 != 1)
    v1 = 0x7474754279616C70;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D59DA124(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3BD3C(*a1, *a2);
}

unint64_t sub_1D59DA134()
{
  unint64_t result;

  result = qword_1EFF4FD98;
  if (!qword_1EFF4FD98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaPlayMethod, &type metadata for MediaPlayMethod);
    atomic_store(result, (unint64_t *)&qword_1EFF4FD98);
  }
  return result;
}

uint64_t sub_1D59DA178()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59DA224()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59DA2AC()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::MediaPlayMethod_optional sub_1D59DA354(Swift::String *a1)
{
  return MediaPlayMethod.init(rawValue:)(*a1);
}

void sub_1D59DA360(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x79616C706F747561;
  if (v2 != 1)
  {
    v5 = 0x7474754279616C70;
    v4 = 0xEF73736572506E6FLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D59DA3CC()
{
  sub_1D59DA540();
  return sub_1D5AAE928();
}

uint64_t sub_1D59DA428()
{
  sub_1D59DA540();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for MediaPlayMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59DA4C0 + 4 * byte_1D5AD8E45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59DA4F4 + 4 * byte_1D5AD8E40[v4]))();
}

uint64_t sub_1D59DA4F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59DA4FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59DA504);
  return result;
}

uint64_t sub_1D59DA510(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59DA518);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59DA51C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59DA524(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayMethod()
{
  return &type metadata for MediaPlayMethod;
}

unint64_t sub_1D59DA540()
{
  unint64_t result;

  result = qword_1EFF4FDA0;
  if (!qword_1EFF4FDA0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaPlayMethod, &type metadata for MediaPlayMethod);
    atomic_store(result, (unint64_t *)&qword_1EFF4FDA0);
  }
  return result;
}

uint64_t JourneyTriggerInactiveErrorDetailData.triggerName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JourneyTriggerInactiveErrorDetailData.triggerName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JourneyTriggerInactiveErrorDetailData.triggerName.modify())()
{
  return nullsub_1;
}

void JourneyTriggerInactiveErrorDetailData.triggerInactiveErrorReason.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *JourneyTriggerInactiveErrorDetailData.triggerInactiveErrorReason.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*JourneyTriggerInactiveErrorDetailData.triggerInactiveErrorReason.modify())()
{
  return nullsub_1;
}

NewsAnalytics::JourneyTriggerInactiveErrorDetailData __swiftcall JourneyTriggerInactiveErrorDetailData.init(triggerName:triggerInactiveErrorReason:)(Swift::String_optional triggerName, NewsAnalytics::JourneyTriggerInactiveErrorReason_optional triggerInactiveErrorReason)
{
  uint64_t v2;
  char v3;
  NewsAnalytics::JourneyTriggerInactiveErrorDetailData result;

  v3 = *(_BYTE *)triggerInactiveErrorReason.value;
  *(Swift::String_optional *)v2 = triggerName;
  *(_BYTE *)(v2 + 16) = v3;
  result.triggerName = triggerName;
  result.triggerInactiveErrorReason = triggerInactiveErrorReason;
  return result;
}

uint64_t sub_1D59DA62C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ALL;
  else
    return 0x4E72656767697274;
}

uint64_t sub_1D59DA674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59DAD98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59DA698()
{
  sub_1D59DA830();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59DA6C0()
{
  sub_1D59DA830();
  return sub_1D5AAEEE0();
}

uint64_t JourneyTriggerInactiveErrorDetailData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1D59DAA64(0, &qword_1EFF4FDA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59DA830();
  sub_1D5AAEEC8();
  v14 = 0;
  v8 = v10[1];
  sub_1D5AAECF4();
  if (!v8)
  {
    v13 = v11;
    v12 = 1;
    sub_1D59DA874();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59DA830()
{
  unint64_t result;

  result = qword_1EFF4FDB0;
  if (!qword_1EFF4FDB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD90FC, &type metadata for JourneyTriggerInactiveErrorDetailData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FDB0);
  }
  return result;
}

unint64_t sub_1D59DA874()
{
  unint64_t result;

  result = qword_1EFF4FDB8;
  if (!qword_1EFF4FDB8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyTriggerInactiveErrorReason, &type metadata for JourneyTriggerInactiveErrorReason);
    atomic_store(result, (unint64_t *)&qword_1EFF4FDB8);
  }
  return result;
}

uint64_t JourneyTriggerInactiveErrorDetailData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1D59DAA64(0, &qword_1EFF4FDC0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59DA830();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v18 = 0;
    v10 = sub_1D5AAEC58();
    v12 = v11;
    v16 = 1;
    sub_1D59DAAC0();
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v13 = v17;
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_BYTE *)(a2 + 16) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D59DAA64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59DA830();
    v7 = a3(a1, &type metadata for JourneyTriggerInactiveErrorDetailData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59DAAC0()
{
  unint64_t result;

  result = qword_1EFF4FDC8;
  if (!qword_1EFF4FDC8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyTriggerInactiveErrorReason, &type metadata for JourneyTriggerInactiveErrorReason);
    atomic_store(result, (unint64_t *)&qword_1EFF4FDC8);
  }
  return result;
}

uint64_t sub_1D59DAB0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return JourneyTriggerInactiveErrorDetailData.init(from:)(a1, a2);
}

uint64_t sub_1D59DAB20(_QWORD *a1)
{
  return JourneyTriggerInactiveErrorDetailData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for JourneyTriggerInactiveErrorDetailData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JourneyTriggerInactiveErrorDetailData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JourneyTriggerInactiveErrorDetailData()
{
  return &type metadata for JourneyTriggerInactiveErrorDetailData;
}

uint64_t storeEnumTagSinglePayload for JourneyTriggerInactiveErrorDetailData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59DAC40 + 4 * byte_1D5AD8F65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59DAC74 + 4 * byte_1D5AD8F60[v4]))();
}

uint64_t sub_1D59DAC74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59DAC7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59DAC84);
  return result;
}

uint64_t sub_1D59DAC90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59DAC98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59DAC9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59DACA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JourneyTriggerInactiveErrorDetailData.CodingKeys()
{
  return &type metadata for JourneyTriggerInactiveErrorDetailData.CodingKeys;
}

unint64_t sub_1D59DACC4()
{
  unint64_t result;

  result = qword_1EFF4FDD0;
  if (!qword_1EFF4FDD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD90D4, &type metadata for JourneyTriggerInactiveErrorDetailData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FDD0);
  }
  return result;
}

unint64_t sub_1D59DAD0C()
{
  unint64_t result;

  result = qword_1EFF4FDD8;
  if (!qword_1EFF4FDD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9044, &type metadata for JourneyTriggerInactiveErrorDetailData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FDD8);
  }
  return result;
}

unint64_t sub_1D59DAD54()
{
  unint64_t result;

  result = qword_1EFF4FDE0;
  if (!qword_1EFF4FDE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD906C, &type metadata for JourneyTriggerInactiveErrorDetailData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FDE0);
  }
  return result;
}

uint64_t sub_1D59DAD98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4E72656767697274 && a2 == 0xEB00000000656D61;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AF1720)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D59DAE9C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4FDE8, MEMORY[0x1E0CF8078]);
}

uint64_t static SearchEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47378, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4FDE8, a1);
}

uint64_t sub_1D59DAEDC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4FE00, MEMORY[0x1E0CF8380]);
}

uint64_t static SearchEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47380, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4FE00, a1);
}

uint64_t SearchEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SearchEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SearchEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SearchEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4FE88);
}

uint64_t SearchEvent.searchData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchEvent.searchData.modify())(_QWORD)
{
  type metadata accessor for SearchEvent(0);
  return nullsub_1;
}

uint64_t SearchEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for SearchEvent(0);
  return nullsub_1;
}

uint64_t SearchEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for SearchEvent(0);
  return nullsub_1;
}

uint64_t SearchEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SearchEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t SearchEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SearchEvent.Model.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SearchEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4FF20);
}

uint64_t SearchEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SearchEvent.Model(0) + 24));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SearchEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

int *SearchEvent.Model.init(eventData:searchData:userBundleSubscriptionContextData:viewData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  int *result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((_BYTE *)a2 + 16);
  v10 = *a3;
  v11 = *((_QWORD *)a3 + 1);
  v12 = *((_QWORD *)a3 + 2);
  v13 = a3[24];
  v14 = a3[25];
  v21 = *((_QWORD *)a3 + 5);
  v22 = *((_QWORD *)a3 + 4);
  v20 = a3[48];
  v24 = a4[1];
  v25 = *a4;
  v23 = *((_WORD *)a4 + 8);
  v15 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, a1, v15);
  result = (int *)type metadata accessor for SearchEvent.Model(0);
  v17 = a5 + result[5];
  *(_QWORD *)v17 = v7;
  *(_QWORD *)(v17 + 8) = v8;
  *(_BYTE *)(v17 + 16) = v9;
  v18 = a5 + result[6];
  *(_BYTE *)v18 = v10;
  *(_QWORD *)(v18 + 8) = v11;
  *(_QWORD *)(v18 + 16) = v12;
  *(_BYTE *)(v18 + 24) = v13;
  *(_BYTE *)(v18 + 25) = v14;
  *(_QWORD *)(v18 + 32) = v22;
  *(_QWORD *)(v18 + 40) = v21;
  *(_BYTE *)(v18 + 48) = v20;
  v19 = a5 + result[7];
  *(_QWORD *)v19 = v25;
  *(_QWORD *)(v19 + 8) = v24;
  *(_WORD *)(v19 + 16) = v23;
  return result;
}

uint64_t sub_1D59DB5A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59DB5D4 + 4 * byte_1D5AD9150[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59DB5D4()
{
  return 0x6144686372616573;
}

unint64_t sub_1D59DB5F0()
{
  return 0xD000000000000021;
}

uint64_t sub_1D59DB60C()
{
  return 0x6174614477656976;
}

uint64_t sub_1D59DB624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59DD294(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59DB648()
{
  sub_1D59DB8D0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59DB670()
{
  sub_1D59DB8D0();
  return sub_1D5AAEEE0();
}

uint64_t SearchEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;
  char v29;

  v3 = v1;
  sub_1D59DBCD8(0, &qword_1EFF4FE18, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59DB8D0();
  sub_1D5AAEEC8();
  LOBYTE(v23) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SearchEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOBYTE(v11) = *((_BYTE *)v11 + 16);
    v23 = v12;
    *(_QWORD *)&v24 = v13;
    BYTE8(v24) = (_BYTE)v11;
    v29 = 1;
    sub_1D57CBC9C();
    sub_1D5AAED6C();
    v14 = v3 + v10[6];
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_BYTE *)(v14 + 25);
    v17 = *(_BYTE *)(v14 + 48);
    LOBYTE(v23) = *(_BYTE *)v14;
    v24 = *(_OWORD *)(v14 + 8);
    v25 = v15;
    v26 = v16;
    v27 = *(_OWORD *)(v14 + 32);
    v28 = v17;
    v29 = 2;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v18 = (uint64_t *)(v3 + v10[7]);
    v19 = *v18;
    v20 = v18[1];
    LOWORD(v18) = *((_WORD *)v18 + 8);
    v23 = v19;
    *(_QWORD *)&v24 = v20;
    WORD4(v24) = (_WORD)v18;
    v29 = 3;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59DB8D0()
{
  unint64_t result;

  result = qword_1EFF4FE20;
  if (!qword_1EFF4FE20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD934C, &type metadata for SearchEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FE20);
  }
  return result;
}

uint64_t SearchEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char *v18;
  char v19;
  char v20;
  char v21;
  char *v22;
  uint64_t v23;
  __int16 v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  __int128 v35;
  char v36;
  char v37;
  __int128 v38;
  char v39;
  char v40;

  v28 = a2;
  v3 = sub_1D5AADF98();
  v29 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59DBCD8(0, &qword_1EFF4FE28, MEMORY[0x1E0DED048]);
  v30 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  v9 = (int *)type metadata accessor for SearchEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59DB8D0();
  v32 = v8;
  v12 = (uint64_t)v33;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v33 = a1;
  v14 = v29;
  LOBYTE(v34) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v30;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v31, v3);
  v40 = 1;
  sub_1D57CBC58();
  sub_1D5AAECD0();
  v16 = v35;
  v17 = BYTE8(v35);
  v18 = &v11[v9[5]];
  *(_QWORD *)v18 = v34;
  *((_QWORD *)v18 + 1) = v16;
  v18[16] = v17;
  v40 = 2;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v19 = v36;
  v20 = v37;
  v21 = v39;
  v22 = &v11[v9[6]];
  *v22 = v34;
  *(_OWORD *)(v22 + 8) = v35;
  v22[24] = v19;
  v22[25] = v20;
  *((_OWORD *)v22 + 2) = v38;
  v22[48] = v21;
  v40 = 3;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v15);
  v23 = v35;
  v24 = WORD4(v35);
  v25 = &v11[v9[7]];
  *(_QWORD *)v25 = v34;
  *((_QWORD *)v25 + 1) = v23;
  *((_WORD *)v25 + 8) = v24;
  sub_1D59DBD34((uint64_t)v11, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_1D59DBD78((uint64_t)v11);
}

void sub_1D59DBCD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59DB8D0();
    v7 = a3(a1, &type metadata for SearchEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59DBD34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59DBD78(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59DBDB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59DBDC8(_QWORD *a1)
{
  return SearchEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59DBDDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47378, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4FDE8, a1);
}

uint64_t sub_1D59DBE00@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47380, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4FE00, a1);
}

uint64_t sub_1D59DBE24@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for SearchEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for SearchEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for SearchEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for SearchEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for SearchEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59DC6BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SearchEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59DC7E4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59DC908()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[16] = v11[16];
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *v13 = *v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    *((_WORD *)v13 + 12) = *((_WORD *)v14 + 12);
    v16 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v16;
    v13[48] = v14[48];
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v18[16] = v19[16];
    v18[17] = v19[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  *(_WORD *)(v12 + 24) = *(_WORD *)(v13 + 24);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
  *(_BYTE *)(v11 + 25) = *(_BYTE *)(v12 + 25);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
  return a1;
}

uint64_t initializeWithTake for SearchEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = a1 + v8;
  v12 = (__int128 *)(a2 + v8);
  *(_BYTE *)(v11 + 48) = *((_BYTE *)v12 + 48);
  v13 = v12[2];
  v14 = *v12;
  *(_OWORD *)(v11 + 16) = v12[1];
  *(_OWORD *)(v11 + 32) = v13;
  *(_OWORD *)v11 = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  return a1;
}

uint64_t assignWithTake for SearchEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59DCF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59DCFF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D59DD06C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D59DD13C + 4 * byte_1D5AD9159[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D59DD170 + 4 * byte_1D5AD9154[v4]))();
}

uint64_t sub_1D59DD170(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59DD178(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59DD180);
  return result;
}

uint64_t sub_1D59DD18C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59DD194);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D59DD198(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59DD1A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchEvent.Model.CodingKeys()
{
  return &type metadata for SearchEvent.Model.CodingKeys;
}

unint64_t sub_1D59DD1C0()
{
  unint64_t result;

  result = qword_1EFF4FF60;
  if (!qword_1EFF4FF60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9324, &type metadata for SearchEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FF60);
  }
  return result;
}

unint64_t sub_1D59DD208()
{
  unint64_t result;

  result = qword_1EFF4FF68;
  if (!qword_1EFF4FF68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9294, &type metadata for SearchEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FF68);
  }
  return result;
}

unint64_t sub_1D59DD250()
{
  unint64_t result;

  result = qword_1EFF4FF70;
  if (!qword_1EFF4FF70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD92BC, &type metadata for SearchEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FF70);
  }
  return result;
}

uint64_t sub_1D59DD294(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D59DD45C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4FF78, MEMORY[0x1E0CF8078]);
}

uint64_t static SubscribeButtonTapEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47388, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4FF78, a1);
}

uint64_t sub_1D59DD49C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4FF90, MEMORY[0x1E0CF8380]);
}

uint64_t static SubscribeButtonTapEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47390, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4FF90, a1);
}

uint64_t SubscribeButtonTapEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SubscribeButtonTapEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SubscribeButtonTapEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SubscribeButtonTapEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CAFE0);
}

uint64_t SubscribeButtonTapEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.sectionData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.purchaseData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.purchaseSessionData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.paywallData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.subscribeButtonContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.subscribeButtonContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.subscribeButtonContextData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 64);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 64);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.puzzleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.puzzleData.modify())(_QWORD)
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SubscribeButtonTapEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v6, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v6, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v6, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v6, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v6, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v6, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v6, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v6, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v2, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v6, v31);
}

uint64_t SubscribeButtonTapEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SubscribeButtonTapEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 20), (uint64_t)v5, (unint64_t *)&qword_1ED9CE420);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CE420);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t type metadata accessor for SubscribeButtonTapEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CAF20);
}

uint64_t SubscribeButtonTapEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t SubscribeButtonTapEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *SubscribeButtonTapEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 32), (uint64_t)v5, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CEEE0);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t SubscribeButtonTapEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonTapEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 40);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonTapEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonTapEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 48));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonTapEvent.Model.paywallData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t SubscribeButtonTapEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t SubscribeButtonTapEvent.Model.subscribeButtonContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t SubscribeButtonTapEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 64));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonTapEvent.Model.puzzleData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 68));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_1D57E8FE4(v4, v5);
}

__n128 SubscribeButtonTapEvent.Model.init(eventData:articleData:channelData:feedData:groupData:viewData:sectionData:purchaseData:purchaseSessionData:paywallData:issueData:subscribeButtonContextData:userBundleSubscriptionContextData:puzzleData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, __int128 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, __int16 *a11, __int128 *a12, __int16 *a13, char *a14, __int128 *a15)
{
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 result;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int16 v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int16 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _BYTE v67[136];
  _BYTE v68[144];

  sub_1D57E4810(a2, (uint64_t)v67, (unint64_t *)&qword_1ED9CE420);
  v39 = a3[1];
  v40 = *a3;
  v21 = *((_QWORD *)a3 + 4);
  v41 = *a4;
  v22 = *((_QWORD *)a4 + 2);
  sub_1D57E4810(a5, (uint64_t)v68, (unint64_t *)&qword_1ED9CEEE0);
  v42 = a6[1];
  v43 = *a6;
  LOWORD(a6) = *((_WORD *)a6 + 8);
  v45 = *a7;
  v44 = *((_QWORD *)a7 + 2);
  LOBYTE(a7) = *((_BYTE *)a7 + 24);
  v46 = a8[1];
  v47 = *a8;
  LOBYTE(a8) = *((_BYTE *)a8 + 16);
  v48 = a10[1];
  v49 = *a10;
  v50 = *a11;
  v53 = *a12;
  v51 = *((_QWORD *)a12 + 3);
  v52 = *((_QWORD *)a12 + 2);
  v23 = *a14;
  v60 = *((_QWORD *)a14 + 2);
  v61 = *((_QWORD *)a14 + 1);
  v58 = a14[25];
  v59 = a14[24];
  v56 = *((_QWORD *)a14 + 5);
  v57 = *((_QWORD *)a14 + 4);
  v54 = *a13;
  v55 = a14[48];
  v65 = a15[1];
  v66 = *a15;
  v62 = (__n128)a15[3];
  v64 = a15[2];
  v24 = *((_QWORD *)a15 + 8);
  v25 = *((_QWORD *)a15 + 9);
  v26 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a9, a1, v26);
  v27 = (int *)type metadata accessor for SubscribeButtonTapEvent.Model(0);
  sub_1D57E4810((uint64_t)v67, a9 + v27[5], (unint64_t *)&qword_1ED9CE420);
  v28 = a9 + v27[6];
  *(_OWORD *)v28 = v40;
  *(_OWORD *)(v28 + 16) = v39;
  *(_QWORD *)(v28 + 32) = v21;
  v29 = a9 + v27[7];
  *(_OWORD *)v29 = v41;
  *(_QWORD *)(v29 + 16) = v22;
  sub_1D57E4810((uint64_t)v68, a9 + v27[8], (unint64_t *)&qword_1ED9CEEE0);
  v30 = a9 + v27[9];
  *(_QWORD *)v30 = v43;
  *(_QWORD *)(v30 + 8) = v42;
  *(_WORD *)(v30 + 16) = (_WORD)a6;
  v31 = a9 + v27[10];
  *(_OWORD *)v31 = v45;
  *(_QWORD *)(v31 + 16) = v44;
  *(_BYTE *)(v31 + 24) = (_BYTE)a7;
  v32 = a9 + v27[11];
  *(_QWORD *)v32 = v47;
  *(_QWORD *)(v32 + 8) = v46;
  *(_BYTE *)(v32 + 16) = (_BYTE)a8;
  v33 = (_QWORD *)(a9 + v27[12]);
  *v33 = v49;
  v33[1] = v48;
  *(_WORD *)(a9 + v27[13]) = v50;
  v34 = a9 + v27[14];
  *(_OWORD *)v34 = v53;
  *(_QWORD *)(v34 + 16) = v52;
  *(_QWORD *)(v34 + 24) = v51;
  *(_WORD *)(a9 + v27[15]) = v54;
  v35 = a9 + v27[16];
  *(_BYTE *)v35 = v23;
  *(_QWORD *)(v35 + 8) = v61;
  *(_QWORD *)(v35 + 16) = v60;
  *(_BYTE *)(v35 + 24) = v59;
  *(_BYTE *)(v35 + 25) = v58;
  *(_QWORD *)(v35 + 32) = v57;
  *(_QWORD *)(v35 + 40) = v56;
  *(_BYTE *)(v35 + 48) = v55;
  v36 = a9 + v27[17];
  *(_OWORD *)v36 = v66;
  *(_OWORD *)(v36 + 16) = v65;
  result = v62;
  *(_OWORD *)(v36 + 32) = v64;
  *(__n128 *)(v36 + 48) = v62;
  *(_QWORD *)(v36 + 64) = v24;
  *(_QWORD *)(v36 + 72) = v25;
  return result;
}

uint64_t sub_1D59DECF8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59DED30 + 4 * byte_1D5AD93A0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59DED30()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D59DEE00()
{
  return 0x7461446575737369;
}

unint64_t sub_1D59DEE14()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1D59DEE4C()
{
  return 0x6144656C7A7A7570;
}

uint64_t sub_1D59DEE68()
{
  unsigned __int8 *v0;

  return sub_1D59DECF8(*v0);
}

uint64_t sub_1D59DEE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59E470C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59DEE94()
{
  sub_1D59DF470();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59DEEBC()
{
  sub_1D59DF470();
  return sub_1D5AAEEE0();
}

uint64_t SubscribeButtonTapEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v33;
  char v34;
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[2];
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  _BYTE v44[152];

  v3 = v1;
  sub_1D59DFEE0(0, &qword_1EFF4FFA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59DF470();
  sub_1D5AAEEC8();
  v44[135] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SubscribeButtonTapEvent.Model(0);
    sub_1D57E4810(v3 + v10[5], (uint64_t)v44, (unint64_t *)&qword_1ED9CE420);
    sub_1D57E4810((uint64_t)v44, (uint64_t)v39, (unint64_t *)&qword_1ED9CE420);
    LOBYTE(v35[0]) = 1;
    sub_1D57CB940();
    sub_1D5AAED18();
    v11 = v3 + v10[6];
    v12 = *(_QWORD *)(v11 + 32);
    v13 = *(_OWORD *)(v11 + 16);
    v39[0] = *(_OWORD *)v11;
    v39[1] = v13;
    v40 = v12;
    LOBYTE(v35[0]) = 2;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v14 = (__int128 *)(v3 + v10[7]);
    v15 = *((_QWORD *)v14 + 2);
    v42 = *v14;
    v43 = v15;
    v41 = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57E4810(v3 + v10[8], (uint64_t)v39, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v39, (uint64_t)v35, (unint64_t *)&qword_1ED9CEEE0);
    v34 = 4;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v16 = v3 + v10[9];
    v17 = *(_WORD *)(v16 + 16);
    v35[0] = *(_OWORD *)v16;
    LOWORD(v35[1]) = v17;
    v34 = 5;
    sub_1D57C62A4();
    sub_1D5AAED18();
    v18 = v3 + v10[10];
    v19 = *(_QWORD *)(v18 + 16);
    v20 = *(_BYTE *)(v18 + 24);
    v35[0] = *(_OWORD *)v18;
    *(_QWORD *)&v35[1] = v19;
    BYTE8(v35[1]) = v20;
    v34 = 6;
    sub_1D57CB720();
    sub_1D5AAED18();
    v21 = v3 + v10[11];
    v22 = *(_BYTE *)(v21 + 16);
    v35[0] = *(_OWORD *)v21;
    LOBYTE(v35[1]) = v22;
    v34 = 7;
    sub_1D580C07C();
    sub_1D5AAED18();
    v35[0] = *(_OWORD *)(v3 + v10[12]);
    v34 = 8;
    sub_1D583239C();
    sub_1D5AAED18();
    LOWORD(v35[0]) = *(_WORD *)(v3 + v10[13]);
    v34 = 9;
    sub_1D57CB830();
    sub_1D5AAED18();
    v23 = (_OWORD *)(v3 + v10[14]);
    v24 = v23[1];
    v35[0] = *v23;
    v35[1] = v24;
    v34 = 10;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    LOWORD(v35[0]) = *(_WORD *)(v3 + v10[15]);
    v34 = 11;
    sub_1D583270C();
    sub_1D5AAED6C();
    v25 = v3 + v10[16];
    v26 = *(_BYTE *)(v25 + 24);
    v27 = *(_BYTE *)(v25 + 25);
    v28 = *(_BYTE *)(v25 + 48);
    LOBYTE(v35[0]) = *(_BYTE *)v25;
    *(_OWORD *)((char *)v35 + 8) = *(_OWORD *)(v25 + 8);
    BYTE8(v35[1]) = v26;
    BYTE9(v35[1]) = v27;
    v36 = *(_OWORD *)(v25 + 32);
    LOBYTE(v37) = v28;
    v34 = 12;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v29 = (_OWORD *)(v3 + v10[17]);
    v30 = v29[1];
    v35[0] = *v29;
    v35[1] = v30;
    v31 = v29[3];
    v36 = v29[2];
    v37 = v31;
    v38 = v29[4];
    v34 = 13;
    sub_1D57CBD34();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59DF470()
{
  unint64_t result;

  result = qword_1EFF4FFB0;
  if (!qword_1EFF4FFB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD973C, &type metadata for SubscribeButtonTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FFB0);
  }
  return result;
}

uint64_t SubscribeButtonTapEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  int *v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  __int16 v24;
  char *v25;
  uint64_t v26;
  char v27;
  char *v28;
  char v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int *v56;
  _OWORD v57[2];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _BYTE v61[136];
  _BYTE v62[136];
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  _BOOL4 v67;
  char v68;
  char v69;
  char v70;

  v48 = a2;
  v4 = sub_1D5AADF98();
  v51 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59DFEE0(0, &qword_1EFF4FFB8, MEMORY[0x1E0DED048]);
  v52 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v47 - v9;
  v56 = (int *)type metadata accessor for SubscribeButtonTapEvent.Model(0);
  MEMORY[0x1E0C80A78](v56);
  v55 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v53 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D59DF470();
  v49 = v10;
  sub_1D5AAEEB0();
  v50 = v4;
  if (v2)
  {
    v54 = v2;
    LODWORD(v52) = 0;
    v13 = v55;
    result = __swift_destroy_boxed_opaque_existential_1(v53);
    v67 = 0;
    LODWORD(v53) = 0;
    v15 = v56;
    if ((_DWORD)v52)
      goto LABEL_5;
  }
  else
  {
    LOBYTE(v64) = 0;
    sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v16 = v55;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v55, v6, v4);
    v70 = 1;
    sub_1D57CB8FC();
    sub_1D5AAEC7C();
    sub_1D57E4810((uint64_t)&v63, (uint64_t)v62, (unint64_t *)&qword_1ED9CE420);
    v17 = v16;
    v18 = v56;
    sub_1D57E4810((uint64_t)v62, (uint64_t)&v17[v56[5]], (unint64_t *)&qword_1ED9CE420);
    v61[0] = 2;
    sub_1D57CB874();
    sub_1D5AAEC7C();
    v19 = v66;
    v20 = &v17[v18[6]];
    v21 = v65;
    *(_OWORD *)v20 = v64;
    *((_OWORD *)v20 + 1) = v21;
    *((_QWORD *)v20 + 4) = v19;
    v61[0] = 3;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v22 = v65;
    v23 = &v17[v18[7]];
    *(_OWORD *)v23 = v64;
    *((_QWORD *)v23 + 2) = v22;
    v69 = 4;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57E4810((uint64_t)&v64, (uint64_t)v61, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v61, (uint64_t)&v17[v18[8]], (unint64_t *)&qword_1ED9CEEE0);
    v68 = 5;
    sub_1D57C6260();
    sub_1D5AAEC7C();
    v24 = v57[1];
    v25 = &v17[v18[9]];
    *(_OWORD *)v25 = v57[0];
    *((_WORD *)v25 + 8) = v24;
    v68 = 6;
    sub_1D57CB6DC();
    sub_1D5AAEC7C();
    v26 = *(_QWORD *)&v57[1];
    v27 = BYTE8(v57[1]);
    v28 = &v17[v18[10]];
    *(_OWORD *)v28 = v57[0];
    *((_QWORD *)v28 + 2) = v26;
    v28[24] = v27;
    v68 = 7;
    sub_1D580C038();
    sub_1D5AAEC7C();
    v29 = v57[1];
    v30 = v18[11];
    v31 = v55;
    v32 = &v55[v30];
    *(_OWORD *)v32 = v57[0];
    v32[16] = v29;
    v68 = 8;
    sub_1D5832358();
    sub_1D5AAEC7C();
    *(_OWORD *)&v31[v56[12]] = v57[0];
    v68 = 9;
    sub_1D57CB7EC();
    sub_1D5AAEC7C();
    v54 = 0;
    *(_WORD *)&v55[v56[13]] = v57[0];
    v68 = 10;
    sub_1D57C5ED8();
    v33 = v54;
    sub_1D5AAEC7C();
    v67 = v33 == 0;
    v54 = v33;
    if (v33)
      goto LABEL_16;
    v34 = &v55[v56[14]];
    v35 = v57[1];
    *(_OWORD *)v34 = v57[0];
    *((_OWORD *)v34 + 1) = v35;
    v68 = 11;
    sub_1D58326C8();
    v36 = v54;
    sub_1D5AAECD0();
    v54 = v36;
    if (v36
      || (*(_WORD *)&v55[v56[15]] = v57[0], v68 = 12, sub_1D57C6AF8(), v37 = v54, sub_1D5AAECD0(), (v54 = v37) != 0))
    {
LABEL_16:
      (*(void (**)(char *, uint64_t))(v8 + 8))(v49, v52);
      __swift_destroy_boxed_opaque_existential_1(v53);
      LODWORD(v53) = 0;
    }
    else
    {
      v38 = BYTE8(v57[1]);
      v39 = BYTE9(v57[1]);
      v40 = v59;
      v41 = &v55[v56[16]];
      *v41 = v57[0];
      *(_OWORD *)(v41 + 8) = *(_OWORD *)((char *)v57 + 8);
      v41[24] = v38;
      v41[25] = v39;
      *((_OWORD *)v41 + 2) = v58;
      v41[48] = v40;
      v68 = 13;
      sub_1D57CBCF0();
      v42 = v54;
      sub_1D5AAEC7C();
      v54 = v42;
      if (!v42)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v49, v52);
        v43 = (uint64_t)v55;
        v44 = &v55[v56[17]];
        v45 = v57[1];
        *(_OWORD *)v44 = v57[0];
        *((_OWORD *)v44 + 1) = v45;
        v46 = v59;
        *((_OWORD *)v44 + 2) = v58;
        *((_OWORD *)v44 + 3) = v46;
        *((_OWORD *)v44 + 4) = v60;
        sub_1D59DFF3C(v43, v48);
        __swift_destroy_boxed_opaque_existential_1(v53);
        return sub_1D59DFF80(v43);
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v49, v52);
      __swift_destroy_boxed_opaque_existential_1(v53);
      LODWORD(v53) = 1;
    }
    v13 = v55;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v55, v50);
    LODWORD(v52) = 1;
    sub_1D57E4810((uint64_t)&v13[v56[5]], (uint64_t)&v64, (unint64_t *)&qword_1ED9CE420);
    sub_1D580D964((uint64_t)&v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580D9D8);
    v15 = v56;
    sub_1D57DEAB8(*(_QWORD *)&v13[v56[6]], *(_QWORD *)&v13[v56[6] + 8]);
    sub_1D57DAEDC(*(_QWORD *)&v13[v15[7]], *(_QWORD *)&v13[v15[7] + 8], *(_QWORD *)&v13[v15[7] + 16]);
    sub_1D57E4810((uint64_t)&v13[v15[8]], (uint64_t)&v64, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57DE9C8(&v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v52 & 1) != 0)
    {
LABEL_5:
      result = swift_bridgeObjectRelease();
      if (!v67)
        goto LABEL_6;
LABEL_10:
      result = sub_1D57EA700(*(_QWORD *)&v13[v15[14]], *(_QWORD *)&v13[v15[14] + 8]);
      if ((v53 & 1) == 0)
        return result;
      goto LABEL_11;
    }
  }
  if (v67)
    goto LABEL_10;
LABEL_6:
  if (!(_DWORD)v53)
    return result;
LABEL_11:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D59DFEE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59DF470();
    v7 = a3(a1, &type metadata for SubscribeButtonTapEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59DFF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59DFF80(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59DFFBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscribeButtonTapEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59DFFD0(_QWORD *a1)
{
  return SubscribeButtonTapEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59DFFE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47388, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4FF78, a1);
}

uint64_t sub_1D59E0008@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47390, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4FF90, a1);
}

uint64_t sub_1D59E002C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v7, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v7, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v7, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v7, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v7, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v7, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v7, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v7, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v4, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v7, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscribeButtonTapEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for SubscribeButtonTapEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
}

uint64_t initializeWithCopy for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscribeButtonTapEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59E1D28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                            v8 = v25;
                            v12 = *(_QWORD *)(v25 - 8);
                            v13 = a3[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonTapEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59E20F8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                            v10 = v27;
                            v14 = *(_QWORD *)(v27 - 8);
                            v15 = a4[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59E24C4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                            if (v13 <= 0x3F)
                              swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscribeButtonTapEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int16 v62;
  char *v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 3);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[8] = v10[8];
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v11;
      v9[32] = v10[32];
      v12 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v12;
      *((_WORD *)v9 + 28) = *((_WORD *)v10 + 28);
      v14 = *((_QWORD *)v10 + 8);
      v13 = *((_QWORD *)v10 + 9);
      v9[80] = v10[80];
      *((_QWORD *)v9 + 8) = v14;
      *((_QWORD *)v9 + 9) = v13;
      *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      v9[112] = v10[112];
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      *((_DWORD *)v9 + 32) = *((_DWORD *)v10 + 32);
      v9[132] = v10[132];
      *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v16;
      *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
      v17 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v17;
      v18 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v18;
      v19 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v19;
    }
    v20 = a3[6];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *((_QWORD *)v22 + 1);
    if (v23)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      *((_WORD *)v21 + 8) = *((_WORD *)v22 + 8);
      v24 = *((_QWORD *)v22 + 4);
      *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
      *((_QWORD *)v21 + 4) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v25 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v25;
      *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
    }
    v26 = a3[7];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *((_QWORD *)v28 + 2);
    if (v29 == 1)
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
    }
    else
    {
      *v27 = *v28;
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v29;
      swift_bridgeObjectRetain();
    }
    v30 = a3[8];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = *((_QWORD *)v32 + 2);
    if (v33)
    {
      *(_WORD *)v31 = *(_WORD *)v32;
      *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
      *((_QWORD *)v31 + 2) = v33;
      *((_QWORD *)v31 + 3) = *((_QWORD *)v32 + 3);
      v34 = *((_QWORD *)v32 + 5);
      *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
      *((_QWORD *)v31 + 5) = v34;
      v35 = *((_QWORD *)v32 + 7);
      *((_QWORD *)v31 + 6) = *((_QWORD *)v32 + 6);
      *((_QWORD *)v31 + 7) = v35;
      v36 = *((_QWORD *)v32 + 9);
      *((_QWORD *)v31 + 8) = *((_QWORD *)v32 + 8);
      *((_QWORD *)v31 + 9) = v36;
      v31[80] = v32[80];
      v37 = *((_QWORD *)v32 + 12);
      *((_QWORD *)v31 + 11) = *((_QWORD *)v32 + 11);
      *((_QWORD *)v31 + 12) = v37;
      *((_QWORD *)v31 + 13) = *((_QWORD *)v32 + 13);
      v31[112] = v32[112];
      v38 = *((_QWORD *)v32 + 16);
      *((_QWORD *)v31 + 15) = *((_QWORD *)v32 + 15);
      *((_QWORD *)v31 + 16) = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v39 = *((_OWORD *)v32 + 7);
      *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
      *((_OWORD *)v31 + 7) = v39;
      *((_QWORD *)v31 + 16) = *((_QWORD *)v32 + 16);
      v40 = *((_OWORD *)v32 + 3);
      *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
      *((_OWORD *)v31 + 3) = v40;
      v41 = *((_OWORD *)v32 + 5);
      *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
      *((_OWORD *)v31 + 5) = v41;
      v42 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v42;
    }
    v43 = a3[9];
    v44 = a3[10];
    v45 = (char *)a1 + v43;
    v46 = (char *)a2 + v43;
    v47 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = v47;
    *((_WORD *)v45 + 8) = *((_WORD *)v46 + 8);
    v48 = (char *)a1 + v44;
    v49 = (char *)a2 + v44;
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
    v48[24] = v49[24];
    v51 = a3[11];
    v52 = a3[12];
    v53 = (char *)a1 + v51;
    v54 = (char *)a2 + v51;
    v55 = *((_QWORD *)v54 + 1);
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *((_QWORD *)v53 + 1) = v55;
    v53[16] = v54[16];
    v56 = (uint64_t *)((char *)a1 + v52);
    v57 = (uint64_t *)((char *)a2 + v52);
    v58 = *v57;
    v59 = v57[1];
    v60 = a3[13];
    v61 = a3[14];
    v62 = *(_WORD *)((char *)a2 + v60);
    *v56 = v58;
    v56[1] = v59;
    *(_WORD *)((char *)a1 + v60) = v62;
    v63 = (char *)a1 + v61;
    v64 = (char *)a2 + v61;
    v65 = *(uint64_t *)((char *)a2 + v61 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v65)
    {
      *(_QWORD *)v63 = *(_QWORD *)v64;
      *((_QWORD *)v63 + 1) = v65;
      *((_WORD *)v63 + 8) = *((_WORD *)v64 + 8);
      *((_QWORD *)v63 + 3) = *((_QWORD *)v64 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v66 = *((_OWORD *)v64 + 1);
      *(_OWORD *)v63 = *(_OWORD *)v64;
      *((_OWORD *)v63 + 1) = v66;
    }
    v67 = a3[16];
    *(_WORD *)((char *)a1 + a3[15]) = *(_WORD *)((char *)a2 + a3[15]);
    v68 = (char *)a1 + v67;
    v69 = (char *)a2 + v67;
    *v68 = *v69;
    v70 = *((_QWORD *)v69 + 2);
    *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
    *((_QWORD *)v68 + 2) = v70;
    *((_WORD *)v68 + 12) = *((_WORD *)v69 + 12);
    v71 = *((_QWORD *)v69 + 5);
    *((_QWORD *)v68 + 4) = *((_QWORD *)v69 + 4);
    *((_QWORD *)v68 + 5) = v71;
    v68[48] = v69[48];
    v72 = a3[17];
    v73 = (char *)a1 + v72;
    v74 = (char *)a2 + v72;
    v75 = *(uint64_t *)((char *)a2 + v72 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v75)
    {
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v75;
      v76 = *((_QWORD *)v74 + 3);
      *((_QWORD *)v73 + 2) = *((_QWORD *)v74 + 2);
      *((_QWORD *)v73 + 3) = v76;
      v77 = *((_OWORD *)v74 + 3);
      *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
      *((_OWORD *)v73 + 3) = v77;
      *((_WORD *)v73 + 32) = *((_WORD *)v74 + 32);
      *((_QWORD *)v73 + 9) = *((_QWORD *)v74 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v78 = *((_OWORD *)v74 + 3);
      *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
      *((_OWORD *)v73 + 3) = v78;
      *((_OWORD *)v73 + 4) = *((_OWORD *)v74 + 4);
      v79 = *((_OWORD *)v74 + 1);
      *(_OWORD *)v73 = *(_OWORD *)v74;
      *((_OWORD *)v73 + 1) = v79;
    }
  }
  return a1;
}

uint64_t destroy for SubscribeButtonTapEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[5] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[6] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[14] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[17] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 24);
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v10;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    v11 = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = v11;
    *(_WORD *)(v8 + 56) = *(_WORD *)(v9 + 56);
    v13 = *(_QWORD *)(v9 + 64);
    v12 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 72) = v12;
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_DWORD *)(v8 + 128) = *(_DWORD *)(v9 + 128);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_WORD *)(v8 + 133) = *(_WORD *)(v9 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v14;
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    v15 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v15;
    v16 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v16;
    v17 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v17;
  }
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 8);
  if (v21)
  {
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *(_QWORD *)(v19 + 8) = v21;
    *(_WORD *)(v19 + 16) = *(_WORD *)(v20 + 16);
    v22 = *(_QWORD *)(v20 + 32);
    *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
    *(_QWORD *)(v19 + 32) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v23;
    *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  }
  v24 = a3[7];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 16);
  if (v27 == 1)
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  }
  else
  {
    *(_BYTE *)v25 = *(_BYTE *)v26;
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 16) = v27;
    swift_bridgeObjectRetain();
  }
  v28 = a3[8];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    *(_WORD *)v29 = *(_WORD *)v30;
    *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
    *(_QWORD *)(v29 + 16) = v31;
    *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
    v32 = *(_QWORD *)(v30 + 40);
    *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
    *(_QWORD *)(v29 + 40) = v32;
    v33 = *(_QWORD *)(v30 + 56);
    *(_QWORD *)(v29 + 48) = *(_QWORD *)(v30 + 48);
    *(_QWORD *)(v29 + 56) = v33;
    v34 = *(_QWORD *)(v30 + 72);
    *(_QWORD *)(v29 + 64) = *(_QWORD *)(v30 + 64);
    *(_QWORD *)(v29 + 72) = v34;
    *(_BYTE *)(v29 + 80) = *(_BYTE *)(v30 + 80);
    v35 = *(_QWORD *)(v30 + 96);
    *(_QWORD *)(v29 + 88) = *(_QWORD *)(v30 + 88);
    *(_QWORD *)(v29 + 96) = v35;
    *(_QWORD *)(v29 + 104) = *(_QWORD *)(v30 + 104);
    *(_BYTE *)(v29 + 112) = *(_BYTE *)(v30 + 112);
    v36 = *(_QWORD *)(v30 + 128);
    *(_QWORD *)(v29 + 120) = *(_QWORD *)(v30 + 120);
    *(_QWORD *)(v29 + 128) = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v37 = *(_OWORD *)(v30 + 112);
    *(_OWORD *)(v29 + 96) = *(_OWORD *)(v30 + 96);
    *(_OWORD *)(v29 + 112) = v37;
    *(_QWORD *)(v29 + 128) = *(_QWORD *)(v30 + 128);
    v38 = *(_OWORD *)(v30 + 48);
    *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
    *(_OWORD *)(v29 + 48) = v38;
    v39 = *(_OWORD *)(v30 + 80);
    *(_OWORD *)(v29 + 64) = *(_OWORD *)(v30 + 64);
    *(_OWORD *)(v29 + 80) = v39;
    v40 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v40;
  }
  v41 = a3[9];
  v42 = a3[10];
  v43 = a1 + v41;
  v44 = a2 + v41;
  v45 = *(_QWORD *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *(_QWORD *)(v43 + 8) = v45;
  *(_WORD *)(v43 + 16) = *(_WORD *)(v44 + 16);
  v46 = a1 + v42;
  v47 = a2 + v42;
  v48 = *(_QWORD *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_QWORD *)(v46 + 8) = v48;
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(v47 + 16);
  *(_BYTE *)(v46 + 24) = *(_BYTE *)(v47 + 24);
  v49 = a3[11];
  v50 = a3[12];
  v51 = a1 + v49;
  v52 = a2 + v49;
  v53 = *(_QWORD *)(v52 + 8);
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_QWORD *)(v51 + 8) = v53;
  *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
  v54 = (_QWORD *)(a1 + v50);
  v55 = (uint64_t *)(a2 + v50);
  v56 = *v55;
  v57 = v55[1];
  v58 = a3[13];
  v59 = a3[14];
  v60 = *(_WORD *)(a2 + v58);
  *v54 = v56;
  v54[1] = v57;
  *(_WORD *)(a1 + v58) = v60;
  v61 = a1 + v59;
  v62 = a2 + v59;
  v63 = *(_QWORD *)(a2 + v59 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v63)
  {
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *(_QWORD *)(v61 + 8) = v63;
    *(_WORD *)(v61 + 16) = *(_WORD *)(v62 + 16);
    *(_QWORD *)(v61 + 24) = *(_QWORD *)(v62 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v64 = *(_OWORD *)(v62 + 16);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *(_OWORD *)(v61 + 16) = v64;
  }
  v65 = a3[16];
  *(_WORD *)(a1 + a3[15]) = *(_WORD *)(a2 + a3[15]);
  v66 = a1 + v65;
  v67 = a2 + v65;
  *(_BYTE *)v66 = *(_BYTE *)v67;
  v68 = *(_QWORD *)(v67 + 16);
  *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
  *(_QWORD *)(v66 + 16) = v68;
  *(_WORD *)(v66 + 24) = *(_WORD *)(v67 + 24);
  v69 = *(_QWORD *)(v67 + 40);
  *(_QWORD *)(v66 + 32) = *(_QWORD *)(v67 + 32);
  *(_QWORD *)(v66 + 40) = v69;
  *(_BYTE *)(v66 + 48) = *(_BYTE *)(v67 + 48);
  v70 = a3[17];
  v71 = a1 + v70;
  v72 = a2 + v70;
  v73 = *(_QWORD *)(a2 + v70 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v73)
  {
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *(_QWORD *)(v71 + 8) = v73;
    v74 = *(_QWORD *)(v72 + 24);
    *(_QWORD *)(v71 + 16) = *(_QWORD *)(v72 + 16);
    *(_QWORD *)(v71 + 24) = v74;
    v75 = *(_OWORD *)(v72 + 48);
    *(_OWORD *)(v71 + 32) = *(_OWORD *)(v72 + 32);
    *(_OWORD *)(v71 + 48) = v75;
    *(_WORD *)(v71 + 64) = *(_WORD *)(v72 + 64);
    *(_QWORD *)(v71 + 72) = *(_QWORD *)(v72 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v76 = *(_OWORD *)(v72 + 48);
    *(_OWORD *)(v71 + 32) = *(_OWORD *)(v72 + 32);
    *(_OWORD *)(v71 + 48) = v76;
    *(_OWORD *)(v71 + 64) = *(_OWORD *)(v72 + 64);
    v77 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v77;
  }
  return a1;
}

uint64_t assignWithCopy for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 24);
  v11 = *(_QWORD *)(a2 + v7 + 24);
  if (v10)
  {
    if (v11)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
      *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      v12 = *(_QWORD *)(v9 + 48);
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      *(_QWORD *)(v8 + 48) = v12;
      *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_QWORD *)(v8 + 72) = v13;
      *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
      *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
      *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
      *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    }
    else
    {
      sub_1D5810518(v8);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v16 = *(_OWORD *)(v9 + 64);
      v18 = *(_OWORD *)(v9 + 16);
      v17 = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 64) = v16;
      *(_OWORD *)(v8 + 16) = v18;
      *(_OWORD *)(v8 + 32) = v17;
      v20 = *(_OWORD *)(v9 + 96);
      v19 = *(_OWORD *)(v9 + 112);
      v21 = *(_OWORD *)(v9 + 80);
      *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
      *(_OWORD *)(v8 + 96) = v20;
      *(_OWORD *)(v8 + 112) = v19;
      *(_OWORD *)(v8 + 80) = v21;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    v14 = *(_QWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    *(_QWORD *)(v8 + 48) = v14;
    *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
    *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
    v15 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 72) = v15;
    *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
    *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
    *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
    *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
    *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v22 = *(_OWORD *)(v9 + 16);
    v23 = *(_OWORD *)(v9 + 32);
    v24 = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 64) = v24;
    *(_OWORD *)(v8 + 16) = v22;
    *(_OWORD *)(v8 + 32) = v23;
    v25 = *(_OWORD *)(v9 + 80);
    v26 = *(_OWORD *)(v9 + 96);
    v27 = *(_OWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    *(_OWORD *)(v8 + 96) = v26;
    *(_OWORD *)(v8 + 112) = v27;
    *(_OWORD *)(v8 + 80) = v25;
  }
  v28 = a3[6];
  v29 = a1 + v28;
  v30 = (__int128 *)(a2 + v28);
  v31 = *(_QWORD *)(a1 + v28 + 8);
  v32 = *(_QWORD *)(a2 + v28 + 8);
  if (v31)
  {
    if (v32)
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *(_QWORD *)(v29 + 8) = *((_QWORD *)v30 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v29 + 16) = *((_BYTE *)v30 + 16);
      *(_BYTE *)(v29 + 17) = *((_BYTE *)v30 + 17);
      *(_QWORD *)(v29 + 24) = *((_QWORD *)v30 + 3);
      *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v29);
      v33 = *((_QWORD *)v30 + 4);
      v34 = v30[1];
      *(_OWORD *)v29 = *v30;
      *(_OWORD *)(v29 + 16) = v34;
      *(_QWORD *)(v29 + 32) = v33;
    }
  }
  else if (v32)
  {
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = *((_QWORD *)v30 + 1);
    *(_BYTE *)(v29 + 16) = *((_BYTE *)v30 + 16);
    *(_BYTE *)(v29 + 17) = *((_BYTE *)v30 + 17);
    *(_QWORD *)(v29 + 24) = *((_QWORD *)v30 + 3);
    *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v35 = *v30;
    v36 = v30[1];
    *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
    *(_OWORD *)v29 = v35;
    *(_OWORD *)(v29 + 16) = v36;
  }
  v37 = a3[7];
  v38 = a1 + v37;
  v39 = (__int128 *)(a2 + v37);
  v40 = *(_QWORD *)(a1 + v37 + 16);
  v41 = *(_QWORD *)(a2 + v37 + 16);
  if (v40 == 1)
  {
    if (v41 == 1)
    {
      v42 = *v39;
      *(_QWORD *)(v38 + 16) = *((_QWORD *)v39 + 2);
      *(_OWORD *)v38 = v42;
    }
    else
    {
      *(_BYTE *)v38 = *(_BYTE *)v39;
      *(_QWORD *)(v38 + 8) = *((_QWORD *)v39 + 1);
      *(_QWORD *)(v38 + 16) = *((_QWORD *)v39 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v41 == 1)
  {
    sub_1D57D9100(v38);
    v43 = *((_QWORD *)v39 + 2);
    *(_OWORD *)v38 = *v39;
    *(_QWORD *)(v38 + 16) = v43;
  }
  else
  {
    *(_BYTE *)v38 = *(_BYTE *)v39;
    *(_QWORD *)(v38 + 8) = *((_QWORD *)v39 + 1);
    *(_QWORD *)(v38 + 16) = *((_QWORD *)v39 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v44 = a3[8];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_QWORD *)(a1 + v44 + 16);
  v48 = *(_QWORD *)(a2 + v44 + 16);
  if (v47)
  {
    if (v48)
    {
      *(_BYTE *)v45 = *(_BYTE *)v46;
      *(_BYTE *)(v45 + 1) = *(_BYTE *)(v46 + 1);
      *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
      *(_QWORD *)(v45 + 16) = *(_QWORD *)(v46 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v45 + 24) = *(_DWORD *)(v46 + 24);
      *(_DWORD *)(v45 + 28) = *(_DWORD *)(v46 + 28);
      *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v45 + 40) = *(_QWORD *)(v46 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v45 + 48) = *(_QWORD *)(v46 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v45 + 56) = *(_QWORD *)(v46 + 56);
      *(_QWORD *)(v45 + 64) = *(_QWORD *)(v46 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v45 + 72) = *(_QWORD *)(v46 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v45 + 80) = *(_BYTE *)(v46 + 80);
      *(_QWORD *)(v45 + 88) = *(_QWORD *)(v46 + 88);
      *(_QWORD *)(v45 + 96) = *(_QWORD *)(v46 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v49 = *(_QWORD *)(v46 + 104);
      *(_BYTE *)(v45 + 112) = *(_BYTE *)(v46 + 112);
      *(_QWORD *)(v45 + 104) = v49;
      *(_QWORD *)(v45 + 120) = *(_QWORD *)(v46 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v45 + 128) = *(_QWORD *)(v46 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v45);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      v51 = *(_OWORD *)(v46 + 64);
      v53 = *(_OWORD *)(v46 + 16);
      v52 = *(_OWORD *)(v46 + 32);
      *(_OWORD *)(v45 + 48) = *(_OWORD *)(v46 + 48);
      *(_OWORD *)(v45 + 64) = v51;
      *(_OWORD *)(v45 + 16) = v53;
      *(_OWORD *)(v45 + 32) = v52;
      v55 = *(_OWORD *)(v46 + 96);
      v54 = *(_OWORD *)(v46 + 112);
      v56 = *(_OWORD *)(v46 + 80);
      *(_QWORD *)(v45 + 128) = *(_QWORD *)(v46 + 128);
      *(_OWORD *)(v45 + 96) = v55;
      *(_OWORD *)(v45 + 112) = v54;
      *(_OWORD *)(v45 + 80) = v56;
    }
  }
  else if (v48)
  {
    *(_BYTE *)v45 = *(_BYTE *)v46;
    *(_BYTE *)(v45 + 1) = *(_BYTE *)(v46 + 1);
    *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
    *(_QWORD *)(v45 + 16) = *(_QWORD *)(v46 + 16);
    *(_DWORD *)(v45 + 24) = *(_DWORD *)(v46 + 24);
    *(_DWORD *)(v45 + 28) = *(_DWORD *)(v46 + 28);
    *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
    *(_QWORD *)(v45 + 40) = *(_QWORD *)(v46 + 40);
    *(_QWORD *)(v45 + 48) = *(_QWORD *)(v46 + 48);
    *(_QWORD *)(v45 + 56) = *(_QWORD *)(v46 + 56);
    *(_QWORD *)(v45 + 64) = *(_QWORD *)(v46 + 64);
    *(_QWORD *)(v45 + 72) = *(_QWORD *)(v46 + 72);
    *(_BYTE *)(v45 + 80) = *(_BYTE *)(v46 + 80);
    *(_QWORD *)(v45 + 88) = *(_QWORD *)(v46 + 88);
    *(_QWORD *)(v45 + 96) = *(_QWORD *)(v46 + 96);
    v50 = *(_QWORD *)(v46 + 104);
    *(_BYTE *)(v45 + 112) = *(_BYTE *)(v46 + 112);
    *(_QWORD *)(v45 + 104) = v50;
    *(_QWORD *)(v45 + 120) = *(_QWORD *)(v46 + 120);
    *(_QWORD *)(v45 + 128) = *(_QWORD *)(v46 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v45 = *(_OWORD *)v46;
    v57 = *(_OWORD *)(v46 + 16);
    v58 = *(_OWORD *)(v46 + 32);
    v59 = *(_OWORD *)(v46 + 64);
    *(_OWORD *)(v45 + 48) = *(_OWORD *)(v46 + 48);
    *(_OWORD *)(v45 + 64) = v59;
    *(_OWORD *)(v45 + 16) = v57;
    *(_OWORD *)(v45 + 32) = v58;
    v60 = *(_OWORD *)(v46 + 80);
    v61 = *(_OWORD *)(v46 + 96);
    v62 = *(_OWORD *)(v46 + 112);
    *(_QWORD *)(v45 + 128) = *(_QWORD *)(v46 + 128);
    *(_OWORD *)(v45 + 96) = v61;
    *(_OWORD *)(v45 + 112) = v62;
    *(_OWORD *)(v45 + 80) = v60;
  }
  v63 = a3[9];
  v64 = a1 + v63;
  v65 = a2 + v63;
  *(_QWORD *)v64 = *(_QWORD *)(a2 + v63);
  *(_QWORD *)(v64 + 8) = *(_QWORD *)(a2 + v63 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v64 + 16) = *(_BYTE *)(v65 + 16);
  *(_BYTE *)(v64 + 17) = *(_BYTE *)(v65 + 17);
  v66 = a3[10];
  v67 = a1 + v66;
  v68 = a2 + v66;
  *(_QWORD *)v67 = *(_QWORD *)(a2 + v66);
  *(_QWORD *)(v67 + 8) = *(_QWORD *)(a2 + v66 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v69 = *(_QWORD *)(v68 + 16);
  *(_BYTE *)(v67 + 24) = *(_BYTE *)(v68 + 24);
  *(_QWORD *)(v67 + 16) = v69;
  v70 = a3[11];
  v71 = a1 + v70;
  v72 = a2 + v70;
  *(_QWORD *)v71 = *(_QWORD *)(a2 + v70);
  *(_QWORD *)(v71 + 8) = *(_QWORD *)(a2 + v70 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v71 + 16) = *(_BYTE *)(v72 + 16);
  v73 = a3[12];
  v74 = (_QWORD *)(a1 + v73);
  v75 = (_QWORD *)(a2 + v73);
  *v74 = *v75;
  v74[1] = v75[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  v76 = a3[14];
  v77 = a1 + v76;
  v78 = a2 + v76;
  v79 = *(_QWORD *)(a1 + v76 + 8);
  v80 = *(_QWORD *)(a2 + v76 + 8);
  if (v79)
  {
    if (v80)
    {
      *(_QWORD *)v77 = *(_QWORD *)v78;
      *(_QWORD *)(v77 + 8) = *(_QWORD *)(v78 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v77 + 16) = *(_BYTE *)(v78 + 16);
      *(_BYTE *)(v77 + 17) = *(_BYTE *)(v78 + 17);
      *(_QWORD *)(v77 + 24) = *(_QWORD *)(v78 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v77);
      v81 = *(_OWORD *)(v78 + 16);
      *(_OWORD *)v77 = *(_OWORD *)v78;
      *(_OWORD *)(v77 + 16) = v81;
    }
  }
  else if (v80)
  {
    *(_QWORD *)v77 = *(_QWORD *)v78;
    *(_QWORD *)(v77 + 8) = *(_QWORD *)(v78 + 8);
    *(_BYTE *)(v77 + 16) = *(_BYTE *)(v78 + 16);
    *(_BYTE *)(v77 + 17) = *(_BYTE *)(v78 + 17);
    *(_QWORD *)(v77 + 24) = *(_QWORD *)(v78 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v82 = *(_OWORD *)(v78 + 16);
    *(_OWORD *)v77 = *(_OWORD *)v78;
    *(_OWORD *)(v77 + 16) = v82;
  }
  v83 = a3[15];
  v84 = (_BYTE *)(a1 + v83);
  v85 = (_BYTE *)(a2 + v83);
  *v84 = *v85;
  v84[1] = v85[1];
  v86 = a3[16];
  v87 = a1 + v86;
  v88 = a2 + v86;
  *(_BYTE *)v87 = *(_BYTE *)(a2 + v86);
  *(_QWORD *)(v87 + 8) = *(_QWORD *)(a2 + v86 + 8);
  *(_QWORD *)(v87 + 16) = *(_QWORD *)(a2 + v86 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v87 + 24) = *(_BYTE *)(v88 + 24);
  *(_BYTE *)(v87 + 25) = *(_BYTE *)(v88 + 25);
  *(_QWORD *)(v87 + 32) = *(_QWORD *)(v88 + 32);
  *(_QWORD *)(v87 + 40) = *(_QWORD *)(v88 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v87 + 48) = *(_BYTE *)(v88 + 48);
  v89 = a3[17];
  v90 = a1 + v89;
  v91 = a2 + v89;
  v92 = *(_QWORD *)(a1 + v89 + 8);
  v93 = *(_QWORD *)(v91 + 8);
  if (v92)
  {
    if (v93)
    {
      *(_QWORD *)v90 = *(_QWORD *)v91;
      *(_QWORD *)(v90 + 8) = *(_QWORD *)(v91 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v90 + 16) = *(_QWORD *)(v91 + 16);
      *(_QWORD *)(v90 + 24) = *(_QWORD *)(v91 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v90 + 32) = *(_DWORD *)(v91 + 32);
      v94 = *(_QWORD *)(v91 + 40);
      *(_BYTE *)(v90 + 48) = *(_BYTE *)(v91 + 48);
      *(_QWORD *)(v90 + 40) = v94;
      v95 = *(_QWORD *)(v91 + 56);
      *(_BYTE *)(v90 + 64) = *(_BYTE *)(v91 + 64);
      *(_QWORD *)(v90 + 56) = v95;
      *(_BYTE *)(v90 + 65) = *(_BYTE *)(v91 + 65);
      *(_QWORD *)(v90 + 72) = *(_QWORD *)(v91 + 72);
    }
    else
    {
      sub_1D58388FC(v90);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      v98 = *(_OWORD *)(v91 + 64);
      v100 = *(_OWORD *)(v91 + 16);
      v99 = *(_OWORD *)(v91 + 32);
      *(_OWORD *)(v90 + 48) = *(_OWORD *)(v91 + 48);
      *(_OWORD *)(v90 + 64) = v98;
      *(_OWORD *)(v90 + 16) = v100;
      *(_OWORD *)(v90 + 32) = v99;
    }
  }
  else if (v93)
  {
    *(_QWORD *)v90 = *(_QWORD *)v91;
    *(_QWORD *)(v90 + 8) = *(_QWORD *)(v91 + 8);
    *(_QWORD *)(v90 + 16) = *(_QWORD *)(v91 + 16);
    *(_QWORD *)(v90 + 24) = *(_QWORD *)(v91 + 24);
    v96 = *(_OWORD *)(v91 + 32);
    v97 = *(_OWORD *)(v91 + 48);
    *(_BYTE *)(v90 + 64) = *(_BYTE *)(v91 + 64);
    *(_OWORD *)(v90 + 32) = v96;
    *(_OWORD *)(v90 + 48) = v97;
    *(_BYTE *)(v90 + 65) = *(_BYTE *)(v91 + 65);
    *(_QWORD *)(v90 + 72) = *(_QWORD *)(v91 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v90 = *(_OWORD *)v91;
    v101 = *(_OWORD *)(v91 + 16);
    v102 = *(_OWORD *)(v91 + 32);
    v103 = *(_OWORD *)(v91 + 64);
    *(_OWORD *)(v90 + 48) = *(_OWORD *)(v91 + 48);
    *(_OWORD *)(v90 + 64) = v103;
    *(_OWORD *)(v90 + 16) = v101;
    *(_OWORD *)(v90 + 32) = v102;
  }
  return a1;
}

uint64_t initializeWithTake for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  __int128 v49;
  __int128 v50;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v22 = a1 + v19;
  v23 = a2 + v19;
  v24 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v24;
  *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
  v25 = *(_OWORD *)(v23 + 112);
  *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 112) = v25;
  v26 = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 80) = v26;
  v27 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v27;
  v28 = a3[9];
  v29 = a3[10];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  v32 = (_OWORD *)(a1 + v29);
  v33 = (_OWORD *)(a2 + v29);
  *v32 = *v33;
  *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)((char *)v33 + 9);
  v34 = a3[11];
  v35 = a3[12];
  v36 = a1 + v34;
  v37 = a2 + v34;
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
  *(_OWORD *)(a1 + v35) = *(_OWORD *)(a2 + v35);
  v38 = a3[14];
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  v39 = (_OWORD *)(a1 + v38);
  v40 = (_OWORD *)(a2 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = a3[16];
  *(_WORD *)(a1 + a3[15]) = *(_WORD *)(a2 + a3[15]);
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(_OWORD *)(v43 + 32) = *(_OWORD *)(v44 + 32);
  *(_BYTE *)(v43 + 48) = *(_BYTE *)(v44 + 48);
  v46 = a3[17];
  v47 = (_OWORD *)(a1 + v46);
  v48 = (_OWORD *)(a2 + v46);
  v49 = v48[3];
  v47[2] = v48[2];
  v47[3] = v49;
  v47[4] = v48[4];
  v50 = v48[1];
  *v47 = *v48;
  v47[1] = v50;
  return a1;
}

uint64_t assignWithTake for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 24))
  {
    v10 = *(_QWORD *)(v9 + 24);
    if (v10)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
      *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v10;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 48);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = v11;
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
      *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
      *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
      *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
      goto LABEL_6;
    }
    sub_1D5810518(v8);
  }
  v12 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v12;
  *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
  v13 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v13;
  v14 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v14;
  v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
LABEL_6:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 8))
  {
    v19 = *(_QWORD *)(v18 + 8);
    if (v19)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_QWORD *)(v17 + 8) = v19;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
      *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
      v20 = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v17 + 32) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E1784(v17);
  }
  v21 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v21;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
LABEL_11:
  v22 = a3[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  if (*(_QWORD *)(a1 + v22 + 16) == 1)
  {
LABEL_14:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
    goto LABEL_16;
  }
  v25 = *(_QWORD *)(v24 + 16);
  if (v25 == 1)
  {
    sub_1D57D9100(v23);
    goto LABEL_14;
  }
  *(_BYTE *)v23 = *(_BYTE *)v24;
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  *(_QWORD *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
LABEL_16:
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  if (*(_QWORD *)(a1 + v26 + 16))
  {
    v29 = *(_QWORD *)(v28 + 16);
    if (v29)
    {
      *(_WORD *)v27 = *(_WORD *)v28;
      *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
      *(_QWORD *)(v27 + 16) = v29;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
      *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 40) = *(_QWORD *)(v28 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 48) = *(_QWORD *)(v28 + 48);
      swift_bridgeObjectRelease();
      v30 = *(_QWORD *)(v28 + 64);
      *(_QWORD *)(v27 + 56) = *(_QWORD *)(v28 + 56);
      *(_QWORD *)(v27 + 64) = v30;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 72) = *(_QWORD *)(v28 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v27 + 80) = *(_BYTE *)(v28 + 80);
      v31 = *(_QWORD *)(v28 + 96);
      *(_QWORD *)(v27 + 88) = *(_QWORD *)(v28 + 88);
      *(_QWORD *)(v27 + 96) = v31;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 104) = *(_QWORD *)(v28 + 104);
      *(_BYTE *)(v27 + 112) = *(_BYTE *)(v28 + 112);
      *(_QWORD *)(v27 + 120) = *(_QWORD *)(v28 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 128) = *(_QWORD *)(v28 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D57E17B8(v27);
  }
  v32 = *(_OWORD *)(v28 + 112);
  *(_OWORD *)(v27 + 96) = *(_OWORD *)(v28 + 96);
  *(_OWORD *)(v27 + 112) = v32;
  *(_QWORD *)(v27 + 128) = *(_QWORD *)(v28 + 128);
  v33 = *(_OWORD *)(v28 + 48);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  *(_OWORD *)(v27 + 48) = v33;
  v34 = *(_OWORD *)(v28 + 80);
  *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
  *(_OWORD *)(v27 + 80) = v34;
  v35 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v35;
LABEL_21:
  v36 = a3[9];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(a2 + v36 + 8);
  *(_QWORD *)v37 = *(_QWORD *)(a2 + v36);
  *(_QWORD *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  *(_WORD *)(v37 + 16) = *(_WORD *)(v38 + 16);
  v40 = a3[10];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(_QWORD *)(a2 + v40 + 8);
  *(_QWORD *)v41 = *(_QWORD *)(a2 + v40);
  *(_QWORD *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v41 + 16) = *(_QWORD *)(v42 + 16);
  *(_BYTE *)(v41 + 24) = *(_BYTE *)(v42 + 24);
  v44 = a3[11];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_QWORD *)(a2 + v44 + 8);
  *(_QWORD *)v45 = *(_QWORD *)(a2 + v44);
  *(_QWORD *)(v45 + 8) = v47;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
  v48 = a3[12];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  v53 = a3[14];
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  v54 = a1 + v53;
  v55 = a2 + v53;
  if (*(_QWORD *)(a1 + v53 + 8))
  {
    v56 = *(_QWORD *)(v55 + 8);
    if (v56)
    {
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *(_QWORD *)(v54 + 8) = v56;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v54 + 16) = *(_BYTE *)(v55 + 16);
      *(_BYTE *)(v54 + 17) = *(_BYTE *)(v55 + 17);
      *(_QWORD *)(v54 + 24) = *(_QWORD *)(v55 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1D57EE47C(a1 + v53);
  }
  v57 = *(_OWORD *)(v55 + 16);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *(_OWORD *)(v54 + 16) = v57;
LABEL_26:
  v58 = a3[16];
  *(_WORD *)(a1 + a3[15]) = *(_WORD *)(a2 + a3[15]);
  v59 = a1 + v58;
  v60 = a2 + v58;
  *(_BYTE *)v59 = *(_BYTE *)(a2 + v58);
  v61 = *(_QWORD *)(a2 + v58 + 8);
  v62 = *(_QWORD *)(a2 + v58 + 16);
  *(_QWORD *)(v59 + 8) = v61;
  *(_QWORD *)(v59 + 16) = v62;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v59 + 24) = *(_BYTE *)(v60 + 24);
  *(_BYTE *)(v59 + 25) = *(_BYTE *)(v60 + 25);
  v63 = *(_QWORD *)(v60 + 40);
  *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  *(_QWORD *)(v59 + 40) = v63;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v59 + 48) = *(_BYTE *)(v60 + 48);
  v64 = a3[17];
  v65 = a1 + v64;
  v66 = a2 + v64;
  if (!*(_QWORD *)(a1 + v64 + 8))
  {
LABEL_30:
    v69 = *(_OWORD *)(v66 + 48);
    *(_OWORD *)(v65 + 32) = *(_OWORD *)(v66 + 32);
    *(_OWORD *)(v65 + 48) = v69;
    *(_OWORD *)(v65 + 64) = *(_OWORD *)(v66 + 64);
    v70 = *(_OWORD *)(v66 + 16);
    *(_OWORD *)v65 = *(_OWORD *)v66;
    *(_OWORD *)(v65 + 16) = v70;
    return a1;
  }
  v67 = *(_QWORD *)(v66 + 8);
  if (!v67)
  {
    sub_1D58388FC(v65);
    goto LABEL_30;
  }
  *(_QWORD *)v65 = *(_QWORD *)v66;
  *(_QWORD *)(v65 + 8) = v67;
  swift_bridgeObjectRelease();
  v68 = *(_QWORD *)(v66 + 24);
  *(_QWORD *)(v65 + 16) = *(_QWORD *)(v66 + 16);
  *(_QWORD *)(v65 + 24) = v68;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v65 + 32) = *(_DWORD *)(v66 + 32);
  *(_QWORD *)(v65 + 40) = *(_QWORD *)(v66 + 40);
  *(_BYTE *)(v65 + 48) = *(_BYTE *)(v66 + 48);
  *(_QWORD *)(v65 + 56) = *(_QWORD *)(v66 + 56);
  *(_BYTE *)(v65 + 64) = *(_BYTE *)(v66 + 64);
  *(_BYTE *)(v65 + 65) = *(_BYTE *)(v66 + 65);
  *(_QWORD *)(v65 + 72) = *(_QWORD *)(v66 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscribeButtonTapEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59E436C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonTapEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59E4404(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  return result;
}

uint64_t sub_1D59E4480()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonTapEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1D59E45B4 + 4 * byte_1D5AD93B3[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1D59E45E8 + 4 * byte_1D5AD93AE[v4]))();
}

uint64_t sub_1D59E45E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59E45F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59E45F8);
  return result;
}

uint64_t sub_1D59E4604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59E460CLL);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1D59E4610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59E4618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonTapEvent.Model.CodingKeys()
{
  return &type metadata for SubscribeButtonTapEvent.Model.CodingKeys;
}

unint64_t sub_1D59E4638()
{
  unint64_t result;

  result = qword_1EFF4FFC0;
  if (!qword_1EFF4FFC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9714, &type metadata for SubscribeButtonTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FFC0);
  }
  return result;
}

unint64_t sub_1D59E4680()
{
  unint64_t result;

  result = qword_1EFF4FFC8;
  if (!qword_1EFF4FFC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9684, &type metadata for SubscribeButtonTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FFC8);
  }
  return result;
}

unint64_t sub_1D59E46C8()
{
  unint64_t result;

  result = qword_1EFF4FFD0;
  if (!qword_1EFF4FFD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD96AC, &type metadata for SubscribeButtonTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FFD0);
  }
  return result;
}

uint64_t sub_1D59E470C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AED700 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED720 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6144656C7A7A7570 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_1D59E4D10(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

NewsAnalytics::AdEngagementType_optional __swiftcall AdEngagementType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::AdEngagementType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdEngagementType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59E4DAC + 4 * byte_1D5AD9790[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D59E4DAC()
{
  return 0x615472656E6E6162;
}

uint64_t sub_1D59E4E38()
{
  return 0x6974737265746E69;
}

void sub_1D59E4E5C(char *a1)
{
  sub_1D5A3B678(*a1);
}

unint64_t sub_1D59E4E6C()
{
  unint64_t result;

  result = qword_1EFF4FFD8;
  if (!qword_1EFF4FFD8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdEngagementType, &type metadata for AdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1EFF4FFD8);
  }
  return result;
}

void sub_1D59E4EB0()
{
  char *v0;

  sub_1D5AA91F8(0, *v0);
}

void sub_1D59E4EBC(uint64_t a1)
{
  char *v1;

  sub_1D5AA8860(a1, *v1);
}

void sub_1D59E4EC4(uint64_t a1)
{
  char *v1;

  sub_1D5AA91F8(a1, *v1);
}

NewsAnalytics::AdEngagementType_optional sub_1D59E4ECC(Swift::String *a1)
{
  return AdEngagementType.init(rawValue:)(*a1);
}

uint64_t sub_1D59E4ED8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AdEngagementType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D59E4EFC()
{
  sub_1D59E5070();
  return sub_1D5AAE928();
}

uint64_t sub_1D59E4F58()
{
  sub_1D59E5070();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for AdEngagementType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D59E4FF0 + 4 * byte_1D5AD979C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D59E5024 + 4 * byte_1D5AD9797[v4]))();
}

uint64_t sub_1D59E5024(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59E502C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59E5034);
  return result;
}

uint64_t sub_1D59E5040(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59E5048);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D59E504C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59E5054(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdEngagementType()
{
  return &type metadata for AdEngagementType;
}

unint64_t sub_1D59E5070()
{
  unint64_t result;

  result = qword_1EFF4FFE0;
  if (!qword_1EFF4FFE0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdEngagementType, &type metadata for AdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1EFF4FFE0);
  }
  return result;
}

uint64_t static FeedGroupLayoutEvent2.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CE4B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CE5A8, a1);
}

uint64_t static FeedGroupLayoutEvent2.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CED50, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CED38, a1);
}

uint64_t FeedGroupLayoutEvent2.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FeedGroupLayoutEvent2.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FeedGroupLayoutEvent2.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent2.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupLayoutEvent2.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutEvent2.feedData.modify())(_QWORD)
{
  type metadata accessor for FeedGroupLayoutEvent2(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent2.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupLayoutEvent2.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutEvent2.groupData.modify())(_QWORD)
{
  type metadata accessor for FeedGroupLayoutEvent2(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent2.feedGroupLayoutData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupLayoutEvent2.feedGroupLayoutData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutEvent2.feedGroupLayoutData.modify())(_QWORD)
{
  type metadata accessor for FeedGroupLayoutEvent2(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent2.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D58DAC70(type metadata accessor for FeedGroupLayoutEvent2, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t FeedGroupLayoutEvent2.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2(0) + 32);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutEvent2.timedData.modify())(_QWORD)
{
  type metadata accessor for FeedGroupLayoutEvent2(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent2.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupLayoutEvent2.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutEvent2.viewData.modify())(_QWORD)
{
  type metadata accessor for FeedGroupLayoutEvent2(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent2.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for FeedGroupLayoutEvent2(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
}

uint64_t FeedGroupLayoutEvent2.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FeedGroupLayoutEvent2.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FeedGroupLayoutEvent2.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF50058);
}

uint64_t FeedGroupLayoutEvent2.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22 = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  v23 = *(_QWORD *)(v3 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v3 + 128);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D5802B14((uint64_t)v16);
}

uint64_t FeedGroupLayoutEvent2.Model.feedGroupLayoutData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedGroupLayoutEvent2.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t FeedGroupLayoutEvent2.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D58DAC70(type metadata accessor for FeedGroupLayoutEvent2.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t FeedGroupLayoutEvent2.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent2.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupLayoutEvent2.Model.init(eventData:feedData:groupData:feedGroupLayoutData:timedData:viewData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v10 = *a2;
  v11 = *((_QWORD *)a2 + 1);
  v12 = *((_QWORD *)a2 + 2);
  v31 = a3[6];
  v32 = a3[7];
  v33 = *((_QWORD *)a3 + 16);
  v27 = a3[2];
  v28 = a3[3];
  v29 = a3[4];
  v30 = a3[5];
  v25 = *a3;
  v26 = a3[1];
  v13 = *a4;
  v14 = *a6;
  v15 = a6[1];
  v16 = *((_WORD *)a6 + 8);
  v17 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v18 = (int *)type metadata accessor for FeedGroupLayoutEvent2.Model(0);
  v19 = a7 + v18[5];
  *(_BYTE *)v19 = v10;
  *(_QWORD *)(v19 + 8) = v11;
  *(_QWORD *)(v19 + 16) = v12;
  v20 = a7 + v18[6];
  *(_OWORD *)(v20 + 96) = v31;
  *(_OWORD *)(v20 + 112) = v32;
  *(_QWORD *)(v20 + 128) = v33;
  *(_OWORD *)(v20 + 32) = v27;
  *(_OWORD *)(v20 + 48) = v28;
  *(_OWORD *)(v20 + 64) = v29;
  *(_OWORD *)(v20 + 80) = v30;
  *(_OWORD *)v20 = v25;
  *(_OWORD *)(v20 + 16) = v26;
  *(_BYTE *)(a7 + v18[7]) = v13;
  v21 = a7 + v18[8];
  v22 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a5, v22);
  v24 = a7 + v18[9];
  *(_QWORD *)v24 = v14;
  *(_QWORD *)(v24 + 8) = v15;
  *(_WORD *)(v24 + 16) = v16;
  return result;
}

uint64_t sub_1D59E5A08()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59E5A3C + 4 * byte_1D5AD98D0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59E5A3C()
{
  return 0x6174614464656566;
}

uint64_t sub_1D59E5A54()
{
  return 0x74614470756F7267;
}

unint64_t sub_1D59E5A68()
{
  return 0xD000000000000013;
}

uint64_t sub_1D59E5A84()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D59E5A98()
{
  return 0x6174614477656976;
}

uint64_t sub_1D59E5AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59E7FB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59E5AD4()
{
  sub_1D59E5E18();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59E5AFC()
{
  sub_1D59E5E18();
  return sub_1D5AAEEE0();
}

uint64_t FeedGroupLayoutEvent2.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  char *v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  char v33;
  __int128 v34;

  v3 = v1;
  sub_1D59E6490(0, &qword_1EFF4FFE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59E5E18();
  sub_1D5AAEEC8();
  LOBYTE(v23) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for FeedGroupLayoutEvent2.Model(0);
    v11 = (char *)(v3 + v10[5]);
    v33 = *v11;
    v34 = *(_OWORD *)(v11 + 8);
    v32 = 1;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    v12 = (__int128 *)(v3 + v10[6]);
    v13 = v12[7];
    v29 = v12[6];
    v30 = v13;
    v31 = *((_QWORD *)v12 + 16);
    v14 = v12[3];
    v25 = v12[2];
    v26 = v14;
    v15 = v12[5];
    v27 = v12[4];
    v28 = v15;
    v16 = v12[1];
    v23 = *v12;
    v24 = v16;
    v22 = 2;
    sub_1D57C5FEC();
    sub_1D5AAED6C();
    LOBYTE(v23) = *(_BYTE *)(v3 + v10[7]);
    v22 = 3;
    sub_1D57C8C24();
    sub_1D5AAED18();
    LOBYTE(v23) = 4;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v17 = (uint64_t *)(v3 + v10[9]);
    v18 = *v17;
    v19 = v17[1];
    LOWORD(v17) = *((_WORD *)v17 + 8);
    *(_QWORD *)&v23 = v18;
    *((_QWORD *)&v23 + 1) = v19;
    LOWORD(v24) = (_WORD)v17;
    v22 = 5;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59E5E18()
{
  unint64_t result;

  result = qword_1EFF4FFF0;
  if (!qword_1EFF4FFF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9B14, &type metadata for FeedGroupLayoutEvent2.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4FFF0);
  }
  return result;
}

uint64_t FeedGroupLayoutEvent2.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  uint64_t v24;
  __int16 v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  char v40;
  char v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v29 = a2;
  v32 = sub_1D5AADFB0();
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v30 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1D5AADF98();
  v4 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v34 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59E6490(0, &qword_1EFF4FFF8, MEMORY[0x1E0DED048]);
  v35 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - v8;
  v10 = (int *)type metadata accessor for FeedGroupLayoutEvent2.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59E5E18();
  v36 = v9;
  v13 = v50;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = v7;
  v50 = v4;
  v15 = v32;
  v42[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v16 = v33;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v12, v34, v16);
  LOBYTE(v37) = 1;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v17 = &v12[v10[5]];
  *v17 = v42[0];
  *(_OWORD *)(v17 + 8) = *(_OWORD *)&v42[8];
  v41 = 2;
  sub_1D57C5FA8();
  sub_1D5AAECD0();
  v18 = &v12[v10[6]];
  v19 = v48;
  *((_OWORD *)v18 + 6) = v47;
  *((_OWORD *)v18 + 7) = v19;
  *((_QWORD *)v18 + 16) = v49;
  v20 = v44;
  *((_OWORD *)v18 + 2) = v43;
  *((_OWORD *)v18 + 3) = v20;
  v21 = v46;
  *((_OWORD *)v18 + 4) = v45;
  *((_OWORD *)v18 + 5) = v21;
  v22 = *(_OWORD *)&v42[16];
  *(_OWORD *)v18 = *(_OWORD *)v42;
  *((_OWORD *)v18 + 1) = v22;
  v40 = 3;
  sub_1D57C8BE0();
  v34 = 0;
  sub_1D5AAEC7C();
  v12[v10[7]] = v37;
  LOBYTE(v37) = 4;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v23 = v30;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v12[v10[8]], v23, v15);
  v40 = 5;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v35);
  v24 = v38;
  v25 = v39;
  v26 = &v12[v10[9]];
  *(_QWORD *)v26 = v37;
  *((_QWORD *)v26 + 1) = v24;
  *((_WORD *)v26 + 8) = v25;
  sub_1D59E64EC((uint64_t)v12, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D59E6530((uint64_t)v12);
}

void sub_1D59E6490(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59E5E18();
    v7 = a3(a1, &type metadata for FeedGroupLayoutEvent2.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59E64EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedGroupLayoutEvent2.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59E6530(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedGroupLayoutEvent2.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59E656C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupLayoutEvent2.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59E6580(_QWORD *a1)
{
  return FeedGroupLayoutEvent2.Model.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedGroupLayoutEvent2(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for FeedGroupLayoutEvent2(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for FeedGroupLayoutEvent2(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for FeedGroupLayoutEvent2(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for FeedGroupLayoutEvent2(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for FeedGroupLayoutEvent2(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupLayoutEvent2()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59E6FC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D57A8C9C();
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutEvent2()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59E7154(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D57A8C9C();
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedGroupLayoutEvent2.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *(_WORD *)v13 = *(_WORD *)v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
    v16 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v16;
    v17 = *((_QWORD *)v14 + 7);
    *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
    *((_QWORD *)v13 + 7) = v17;
    v32 = *((_QWORD *)v14 + 9);
    *((_QWORD *)v13 + 8) = *((_QWORD *)v14 + 8);
    *((_QWORD *)v13 + 9) = v32;
    v13[80] = v14[80];
    v18 = *((_QWORD *)v14 + 12);
    *((_QWORD *)v13 + 11) = *((_QWORD *)v14 + 11);
    *((_QWORD *)v13 + 12) = v18;
    v19 = *((_QWORD *)v14 + 13);
    v13[112] = v14[112];
    *((_QWORD *)v13 + 13) = v19;
    v31 = *((_QWORD *)v14 + 16);
    *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
    *((_QWORD *)v13 + 16) = v31;
    v20 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v30 = (char *)a1 + v20;
    v29 = (char *)a2 + v20;
    v21 = sub_1D5AADFB0();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v30, v29, v21);
    v22 = a3[9];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    *((_WORD *)v23 + 8) = *((_WORD *)v24 + 8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedGroupLayoutEvent2.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedGroupLayoutEvent2.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_WORD *)v12 = *(_WORD *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  v16 = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = v16;
  v30 = *(_QWORD *)(v13 + 72);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v12 + 72) = v30;
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  v17 = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = v17;
  v18 = *(_QWORD *)(v13 + 104);
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 104) = v18;
  v29 = *(_QWORD *)(v13 + 128);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  *(_QWORD *)(v12 + 128) = v29;
  v19 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v28 = a1 + v19;
  v27 = a2 + v19;
  v20 = sub_1D5AADFB0();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v28, v27, v20);
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = v24;
  *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedGroupLayoutEvent2.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_BYTE *)(v11 + 1) = *(_BYTE *)(a2 + v10 + 1);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 24) = *(_DWORD *)(v12 + 24);
  *(_DWORD *)(v11 + 28) = *(_DWORD *)(v12 + 28);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 48) = *(_QWORD *)(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 56) = *(_QWORD *)(v12 + 56);
  *(_QWORD *)(v11 + 64) = *(_QWORD *)(v12 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 72) = *(_QWORD *)(v12 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 80) = *(_BYTE *)(v12 + 80);
  *(_QWORD *)(v11 + 88) = *(_QWORD *)(v12 + 88);
  *(_QWORD *)(v11 + 96) = *(_QWORD *)(v12 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 104);
  *(_BYTE *)(v11 + 112) = *(_BYTE *)(v12 + 112);
  *(_QWORD *)(v11 + 104) = v13;
  *(_QWORD *)(v11 + 120) = *(_QWORD *)(v12 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 128) = *(_QWORD *)(v12 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v14 = a3[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  *(_BYTE *)(v19 + 17) = *(_BYTE *)(v20 + 17);
  return a1;
}

uint64_t initializeWithTake for FeedGroupLayoutEvent2.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = a1 + v8;
  v12 = a2 + v8;
  v13 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v11 + 48) = v13;
  v14 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v14;
  *(_QWORD *)(v11 + 128) = *(_QWORD *)(v12 + 128);
  v15 = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v11 + 96) = *(_OWORD *)(v12 + 96);
  *(_OWORD *)(v11 + 112) = v15;
  v16 = *(_OWORD *)(v12 + 80);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(v12 + 64);
  *(_OWORD *)(v11 + 80) = v16;
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
  return a1;
}

uint64_t assignWithTake for FeedGroupLayoutEvent2.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_WORD *)v13 = *(_WORD *)(a2 + v12);
  v15 = *(_QWORD *)(a2 + v12 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 48) = *(_QWORD *)(v14 + 48);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  *(_QWORD *)(v13 + 64) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 72) = *(_QWORD *)(v14 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  v17 = *(_QWORD *)(v14 + 96);
  *(_QWORD *)(v13 + 88) = *(_QWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 96) = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 128) = *(_QWORD *)(v14 + 128);
  swift_bridgeObjectRelease();
  v18 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(v23 + 8) = v25;
  swift_bridgeObjectRelease();
  *(_WORD *)(v23 + 16) = *(_WORD *)(v24 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupLayoutEvent2.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59E7C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1D5AADFB0();
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutEvent2.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59E7CC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
      return result;
    }
    v10 = sub_1D5AADFB0();
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D59E7D6C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutEvent2.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D59E7E60 + 4 * byte_1D5AD98DB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D59E7E94 + 4 * byte_1D5AD98D6[v4]))();
}

uint64_t sub_1D59E7E94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59E7E9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59E7EA4);
  return result;
}

uint64_t sub_1D59E7EB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59E7EB8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D59E7EBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59E7EC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupLayoutEvent2.Model.CodingKeys()
{
  return &type metadata for FeedGroupLayoutEvent2.Model.CodingKeys;
}

unint64_t sub_1D59E7EE4()
{
  unint64_t result;

  result = qword_1EFF500A0;
  if (!qword_1EFF500A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9AEC, &type metadata for FeedGroupLayoutEvent2.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF500A0);
  }
  return result;
}

unint64_t sub_1D59E7F2C()
{
  unint64_t result;

  result = qword_1EFF500A8;
  if (!qword_1EFF500A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9A5C, &type metadata for FeedGroupLayoutEvent2.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF500A8);
  }
  return result;
}

unint64_t sub_1D59E7F74()
{
  unint64_t result;

  result = qword_1EFF500B0;
  if (!qword_1EFF500B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9A84, &type metadata for FeedGroupLayoutEvent2.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF500B0);
  }
  return result;
}

uint64_t sub_1D59E7FB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF17D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t ExposedPaywallContentData.channelIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ExposedPaywallContentData.channelIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*ExposedPaywallContentData.channelIDs.modify())()
{
  return nullsub_1;
}

uint64_t ExposedPaywallContentData.init(channelIDs:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D59E8294()
{
  return 0x496C656E6E616863;
}

uint64_t sub_1D59E82B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x496C656E6E616863 && a2 == 0xEA00000000007344)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D59E8350()
{
  sub_1D59E84C4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59E8378()
{
  sub_1D59E84C4();
  return sub_1D5AAEEE0();
}

uint64_t ExposedPaywallContentData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D59E8660(0, &qword_1ED9D0DB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59E84C4();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED18();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59E84C4()
{
  unint64_t result;

  result = qword_1ED9D0840;
  if (!qword_1ED9D0840)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9CF0, &type metadata for ExposedPaywallContentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0840);
  }
  return result;
}

uint64_t ExposedPaywallContentData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D59E8660(0, &qword_1EFF500B8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59E84C4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59E8660(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59E84C4();
    v7 = a3(a1, &type metadata for ExposedPaywallContentData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59E86C0()
{
  unint64_t result;

  result = qword_1ED9D0860;
  if (!qword_1ED9D0860)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ExposedPaywallContentData, &type metadata for ExposedPaywallContentData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0860);
  }
  return result;
}

unint64_t sub_1D59E8708()
{
  unint64_t result;

  result = qword_1ED9D0858;
  if (!qword_1ED9D0858)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ExposedPaywallContentData, &type metadata for ExposedPaywallContentData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0858);
  }
  return result;
}

uint64_t sub_1D59E874C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ExposedPaywallContentData.init(from:)(a1, a2);
}

uint64_t sub_1D59E8760(_QWORD *a1)
{
  return ExposedPaywallContentData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ExposedPaywallContentData()
{
  return &type metadata for ExposedPaywallContentData;
}

uint64_t storeEnumTagSinglePayload for ExposedPaywallContentData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59E87C4 + 4 * byte_1D5AD9B70[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59E87E4 + 4 * byte_1D5AD9B75[v4]))();
}

_BYTE *sub_1D59E87C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59E87E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59E87EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59E87F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59E87FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59E8804(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ExposedPaywallContentData.CodingKeys()
{
  return &type metadata for ExposedPaywallContentData.CodingKeys;
}

unint64_t sub_1D59E8824()
{
  unint64_t result;

  result = qword_1EFF500C0;
  if (!qword_1EFF500C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9CC8, &type metadata for ExposedPaywallContentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF500C0);
  }
  return result;
}

unint64_t sub_1D59E886C()
{
  unint64_t result;

  result = qword_1ED9D0850;
  if (!qword_1ED9D0850)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9C38, &type metadata for ExposedPaywallContentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0850);
  }
  return result;
}

unint64_t sub_1D59E88B4()
{
  unint64_t result;

  result = qword_1ED9D0848;
  if (!qword_1ED9D0848)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD9C60, &type metadata for ExposedPaywallContentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0848);
  }
  return result;
}

uint64_t sub_1D59E88F8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF500C8, MEMORY[0x1E0CF8078]);
}

uint64_t static SubscriptionResultEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47398, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF500C8, a1);
}

uint64_t sub_1D59E8938(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF500E0, MEMORY[0x1E0CF8380]);
}

uint64_t static SubscriptionResultEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF500E0, a1);
}

uint64_t SubscriptionResultEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SubscriptionResultEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SubscriptionResultEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SubscriptionResultEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CB170);
}

uint64_t SubscriptionResultEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.sectionData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.campaignData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.purchaseData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.purchaseSessionData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.subscriptionResultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.subscriptionResultData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.subscriptionResultData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.storeKitErrorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.storeKitErrorData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.storeKitErrorData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 60);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 60);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.adReferralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.adReferralData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.adReferralData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.amsErrorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.amsErrorData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.amsErrorData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.articleExposureContextData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 76);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 76);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.tagData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 80);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.puzzleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 80);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.puzzleData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.sourceUrlData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 84);
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.sourceUrlData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 84);
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.sourceUrlData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SubscriptionResultEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v6, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v6, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v6, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v6, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v6, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v6, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v6, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v6, v31);
  v32 = a1 + v4[18];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v32, v6, v33);
  v34 = a1 + v4[19];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v34, v6, v35);
  v36 = a1 + v4[20];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v36, v6, v37);
  v38 = a1 + v4[21];
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v38, v6, v39);
}

uint64_t SubscriptionResultEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SubscriptionResultEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for SubscriptionResultEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 20), (uint64_t)v5, (unint64_t *)&qword_1ED9CE420);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CE420);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t type metadata accessor for SubscriptionResultEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CB0A0);
}

uint64_t SubscriptionResultEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *SubscriptionResultEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for SubscriptionResultEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 28), (uint64_t)v5, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CEEE0);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t SubscriptionResultEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 32);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionResultEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t SubscriptionResultEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionResultEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 44));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionResultEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t SubscriptionResultEvent.Model.subscriptionResultData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscriptionResultEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t SubscriptionResultEvent.Model.storeKitErrorData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscriptionResultEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t SubscriptionResultEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 60);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(v3 + 48);
  return sub_1D58D9DD8(v4, v5, v6);
}

uint64_t SubscriptionResultEvent.Model.adReferralData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 64));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionResultEvent.Model.amsErrorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for SubscriptionResultEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 68));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t SubscriptionResultEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 72));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57E90BC(v4, v5);
}

uint64_t SubscriptionResultEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 76));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionResultEvent.Model.puzzleData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 80));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t SubscriptionResultEvent.Model.sourceUrlData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 84));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D59EA454(v4, v5);
}

uint64_t sub_1D59EA454(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 SubscriptionResultEvent.Model.init(eventData:articleData:feedData:groupData:sectionData:campaignData:purchaseData:purchaseSessionData:issueData:subscriptionResultData:storeKitErrorData:userBundleSubscriptionContextData:adReferralData:amsErrorData:articleExposureContextData:tagData:puzzleData:sourceUrlData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, char *a11, char *a12, __int128 *a13, uint64_t *a14, int *a15, __int128 *a16, uint64_t *a17, __int128 *a18, __n128 *a19)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  __n128 *v45;
  __n128 result;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  int v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v81;
  __int128 v82;
  __n128 v83;
  _BYTE v84[136];
  _BYTE v85[144];

  sub_1D57E4810(a2, (uint64_t)v84, (unint64_t *)&qword_1ED9CE420);
  v47 = *a3;
  v24 = *((_QWORD *)a3 + 2);
  sub_1D57E4810(a4, (uint64_t)v85, (unint64_t *)&qword_1ED9CEEE0);
  v49 = *a5;
  v48 = *((_QWORD *)a5 + 2);
  LOBYTE(a5) = *((_BYTE *)a5 + 24);
  v52 = a6[1];
  v53 = *a6;
  v25 = *((_QWORD *)a6 + 4);
  v26 = *((_QWORD *)a6 + 5);
  v51 = v25;
  v54 = a7[1];
  v55 = *a7;
  LOBYTE(a7) = *((_BYTE *)a7 + 16);
  v56 = a8[1];
  v57 = *a8;
  v60 = *a10;
  v58 = *((_QWORD *)a10 + 3);
  v59 = *((_QWORD *)a10 + 2);
  v61 = *a11;
  v62 = *a12;
  v66 = a13[1];
  v67 = *a13;
  v64 = *((_QWORD *)a13 + 5);
  v65 = *((_QWORD *)a13 + 4);
  v63 = *((_BYTE *)a13 + 48);
  v68 = a14[1];
  v69 = *a14;
  v70 = *((_BYTE *)a15 + 4);
  v71 = *a15;
  v73 = a16[1];
  v74 = *a16;
  v72 = *((_QWORD *)a16 + 4);
  v76 = a17[1];
  v77 = *a17;
  v81 = a18[1];
  v82 = *a18;
  v78 = a18[3];
  v79 = a18[2];
  v27 = *((_QWORD *)a18 + 8);
  v28 = *((_QWORD *)a18 + 9);
  v83 = *a19;
  v29 = a19[1].n128_u64[0];
  v30 = a19[1].n128_u64[1];
  v31 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a9, a1, v31);
  v32 = (int *)type metadata accessor for SubscriptionResultEvent.Model(0);
  sub_1D57E4810((uint64_t)v84, a9 + v32[5], (unint64_t *)&qword_1ED9CE420);
  v33 = a9 + v32[6];
  *(_OWORD *)v33 = v47;
  *(_QWORD *)(v33 + 16) = v24;
  sub_1D57E4810((uint64_t)v85, a9 + v32[7], (unint64_t *)&qword_1ED9CEEE0);
  v34 = a9 + v32[8];
  *(_OWORD *)v34 = v49;
  *(_QWORD *)(v34 + 16) = v48;
  *(_BYTE *)(v34 + 24) = (_BYTE)a5;
  v35 = a9 + v32[9];
  *(_OWORD *)v35 = v53;
  *(_OWORD *)(v35 + 16) = v52;
  *(_QWORD *)(v35 + 32) = v51;
  *(_QWORD *)(v35 + 40) = v26;
  v36 = a9 + v32[10];
  *(_QWORD *)v36 = v55;
  *(_QWORD *)(v36 + 8) = v54;
  *(_BYTE *)(v36 + 16) = (_BYTE)a7;
  v37 = (_QWORD *)(a9 + v32[11]);
  *v37 = v57;
  v37[1] = v56;
  v38 = a9 + v32[12];
  *(_OWORD *)v38 = v60;
  *(_QWORD *)(v38 + 16) = v59;
  *(_QWORD *)(v38 + 24) = v58;
  *(_BYTE *)(a9 + v32[13]) = v61;
  *(_BYTE *)(a9 + v32[14]) = v62;
  v39 = a9 + v32[15];
  *(_OWORD *)v39 = v67;
  *(_OWORD *)(v39 + 16) = v66;
  *(_QWORD *)(v39 + 32) = v65;
  *(_QWORD *)(v39 + 40) = v64;
  *(_BYTE *)(v39 + 48) = v63;
  v40 = (_QWORD *)(a9 + v32[16]);
  *v40 = v69;
  v40[1] = v68;
  v41 = a9 + v32[17];
  *(_DWORD *)v41 = v71;
  *(_BYTE *)(v41 + 4) = v70;
  v42 = a9 + v32[18];
  *(_OWORD *)v42 = v74;
  *(_OWORD *)(v42 + 16) = v73;
  *(_QWORD *)(v42 + 32) = v72;
  v43 = (_QWORD *)(a9 + v32[19]);
  *v43 = v77;
  v43[1] = v76;
  v44 = a9 + v32[20];
  *(_OWORD *)v44 = v82;
  *(_OWORD *)(v44 + 16) = v81;
  *(_OWORD *)(v44 + 32) = v79;
  *(_OWORD *)(v44 + 48) = v78;
  *(_QWORD *)(v44 + 64) = v27;
  *(_QWORD *)(v44 + 72) = v28;
  v45 = (__n128 *)(a9 + v32[21]);
  result = v83;
  *v45 = v83;
  v45[1].n128_u64[0] = v29;
  v45[1].n128_u64[1] = v30;
  return result;
}

uint64_t sub_1D59EA82C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59EA864 + 4 * byte_1D5AD9D40[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59EA864()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D59EA8C4()
{
  return 0x6E676961706D6163;
}

void sub_1D59EA9A8()
{
  JUMPOUT(0x1D59EA9BCLL);
}

uint64_t sub_1D59EA9C8()
{
  return 0x61746144676174;
}

uint64_t sub_1D59EA9E0()
{
  return 0x6144656C7A7A7570;
}

uint64_t sub_1D59EA9FC()
{
  return 0x7255656372756F73;
}

uint64_t sub_1D59EAA20()
{
  unsigned __int8 *v0;

  return sub_1D59EA82C(*v0);
}

uint64_t sub_1D59EAA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59F178C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59EAA4C()
{
  sub_1D59EB134();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59EAA74()
{
  sub_1D59EB134();
  return sub_1D5AAEEE0();
}

uint64_t SubscriptionResultEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  char v15;
  __int128 *v16;
  __int128 v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  __int128 *v26;
  char v27;
  __int128 v28;
  int *v29;
  int v30;
  __int128 *v31;
  uint64_t v32;
  __int128 v33;
  __int128 *v34;
  __int128 v35;
  __int128 v36;
  __int128 *v37;
  __int128 v38;
  uint64_t v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[144];
  __int128 v48;
  uint64_t v49;
  _BYTE v50[152];

  v3 = v1;
  sub_1D59EBDD4(0, &qword_1EFF500F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59EB134();
  sub_1D5AAEEC8();
  v50[135] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SubscriptionResultEvent.Model(0);
    sub_1D57E4810(v3 + v10[5], (uint64_t)v50, (unint64_t *)&qword_1ED9CE420);
    sub_1D57E4810((uint64_t)v50, (uint64_t)v47, (unint64_t *)&qword_1ED9CE420);
    LOBYTE(v42) = 1;
    sub_1D57CB940();
    sub_1D5AAED18();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *((_QWORD *)v11 + 2);
    v48 = *v11;
    v49 = v12;
    v47[143] = 2;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57E4810(v3 + v10[7], (uint64_t)v47, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v47, (uint64_t)&v42, (unint64_t *)&qword_1ED9CEEE0);
    v41 = 3;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v13 = (__int128 *)(v3 + v10[8]);
    v14 = *((_QWORD *)v13 + 2);
    v15 = *((_BYTE *)v13 + 24);
    v42 = *v13;
    *(_QWORD *)&v43 = v14;
    BYTE8(v43) = v15;
    v41 = 4;
    sub_1D57CB720();
    sub_1D5AAED18();
    v16 = (__int128 *)(v3 + v10[9]);
    v17 = v16[1];
    v42 = *v16;
    v43 = v17;
    v44 = v16[2];
    v41 = 5;
    sub_1D57CB460();
    sub_1D5AAED18();
    v18 = (uint64_t *)(v3 + v10[10]);
    v19 = *v18;
    v20 = v18[1];
    LOBYTE(v18) = *((_BYTE *)v18 + 16);
    *(_QWORD *)&v42 = v19;
    *((_QWORD *)&v42 + 1) = v20;
    LOBYTE(v43) = (_BYTE)v18;
    v41 = 6;
    sub_1D580C07C();
    sub_1D5AAED6C();
    v21 = (uint64_t *)(v3 + v10[11]);
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)&v42 = v23;
    *((_QWORD *)&v42 + 1) = v22;
    v41 = 7;
    sub_1D583239C();
    sub_1D5AAED6C();
    v24 = (__int128 *)(v3 + v10[12]);
    v25 = v24[1];
    v42 = *v24;
    v43 = v25;
    v41 = 8;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    LOBYTE(v42) = *(_BYTE *)(v3 + v10[13]);
    v41 = 9;
    sub_1D57F4628();
    sub_1D5AAED6C();
    LOBYTE(v42) = *(_BYTE *)(v3 + v10[14]);
    v41 = 10;
    sub_1D588B56C();
    sub_1D5AAED18();
    v26 = (__int128 *)(v3 + v10[15]);
    v27 = *((_BYTE *)v26 + 48);
    v28 = v26[1];
    v42 = *v26;
    v43 = v28;
    v44 = v26[2];
    LOBYTE(v45) = v27;
    v41 = 11;
    sub_1D57C6B3C();
    sub_1D5AAED18();
    v42 = *(_OWORD *)(v3 + v10[16]);
    v41 = 12;
    sub_1D58FB808();
    sub_1D5AAED18();
    v29 = (int *)(v3 + v10[17]);
    v30 = *v29;
    LOBYTE(v29) = *((_BYTE *)v29 + 4);
    LODWORD(v42) = v30;
    BYTE4(v42) = (_BYTE)v29;
    v41 = 13;
    sub_1D589D064();
    sub_1D5AAED18();
    v31 = (__int128 *)(v3 + v10[18]);
    v32 = *((_QWORD *)v31 + 4);
    v33 = v31[1];
    v42 = *v31;
    v43 = v33;
    *(_QWORD *)&v44 = v32;
    v41 = 14;
    sub_1D57C71C4();
    sub_1D5AAED18();
    v42 = *(_OWORD *)(v3 + v10[19]);
    v41 = 15;
    sub_1D57C6738();
    sub_1D5AAED18();
    v34 = (__int128 *)(v3 + v10[20]);
    v35 = v34[1];
    v42 = *v34;
    v43 = v35;
    v36 = v34[3];
    v44 = v34[2];
    v45 = v36;
    v46 = v34[4];
    v41 = 16;
    sub_1D57CBD34();
    sub_1D5AAED18();
    v37 = (__int128 *)(v3 + v10[21]);
    v38 = v37[1];
    v42 = *v37;
    v43 = v38;
    v41 = 17;
    sub_1D58845E4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59EB134()
{
  unint64_t result;

  result = qword_1EFF50100;
  if (!qword_1EFF50100)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADA15C, &type metadata for SubscriptionResultEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50100);
  }
  return result;
}

uint64_t SubscriptionResultEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  char *v14;
  uint64_t result;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  int *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  _BYTE v77[136];
  _BYTE v78[136];
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  _BOOL4 v82;
  char v83;
  char v84;
  char v85;

  v65 = a2;
  v4 = sub_1D5AADF98();
  v62 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59EBDD4(0, &qword_1EFF50108, MEMORY[0x1E0DED048]);
  v68 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v60 - v9;
  v71 = (int *)type metadata accessor for SubscriptionResultEvent.Model(0);
  MEMORY[0x1E0C80A78](v71);
  v70 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v67 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D59EB134();
  v66 = v10;
  sub_1D5AAEEB0();
  v61 = v4;
  if (v2)
  {
    v69 = v2;
    LODWORD(v68) = 0;
    v13 = 0;
  }
  else
  {
    v64 = v8;
    LOBYTE(v80) = 0;
    sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v22 = v70;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v70, v6, v4);
    v85 = 1;
    sub_1D57CB8FC();
    sub_1D5AAEC7C();
    sub_1D57E4810((uint64_t)&v79, (uint64_t)v78, (unint64_t *)&qword_1ED9CE420);
    v23 = v71;
    sub_1D57E4810((uint64_t)v78, (uint64_t)&v22[v71[5]], (unint64_t *)&qword_1ED9CE420);
    v77[0] = 2;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v24 = v81;
    v25 = &v22[v23[6]];
    *(_OWORD *)v25 = v80;
    *((_QWORD *)v25 + 2) = v24;
    v84 = 3;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57E4810((uint64_t)&v80, (uint64_t)v77, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v77, (uint64_t)&v22[v23[7]], (unint64_t *)&qword_1ED9CEEE0);
    v83 = 4;
    sub_1D57CB6DC();
    sub_1D5AAEC7C();
    v26 = v73;
    v27 = BYTE8(v73);
    v28 = &v22[v23[8]];
    *(_OWORD *)v28 = v72;
    *((_QWORD *)v28 + 2) = v26;
    v28[24] = v27;
    v83 = 5;
    sub_1D57CB41C();
    sub_1D5AAEC7C();
    v29 = &v22[v23[9]];
    v30 = v73;
    *(_OWORD *)v29 = v72;
    *((_OWORD *)v29 + 1) = v30;
    *((_OWORD *)v29 + 2) = v74;
    v83 = 6;
    sub_1D580C038();
    sub_1D5AAECD0();
    v31 = *((_QWORD *)&v72 + 1);
    v32 = v73;
    v33 = &v22[v23[10]];
    *(_QWORD *)v33 = v72;
    *((_QWORD *)v33 + 1) = v31;
    v33[16] = v32;
    v83 = 7;
    sub_1D5832358();
    sub_1D5AAECD0();
    v34 = *((_QWORD *)&v72 + 1);
    v35 = &v22[v23[11]];
    *(_QWORD *)v35 = v72;
    *((_QWORD *)v35 + 1) = v34;
    v83 = 8;
    sub_1D57C5ED8();
    sub_1D5AAEC7C();
    v36 = &v22[v71[12]];
    v37 = v73;
    *(_OWORD *)v36 = v72;
    *((_OWORD *)v36 + 1) = v37;
    v83 = 9;
    sub_1D57F45E0();
    sub_1D5AAECD0();
    v69 = 0;
    v70[v71[13]] = v72;
    v83 = 10;
    sub_1D588B524();
    v38 = v69;
    sub_1D5AAEC7C();
    v69 = v38;
    if (v38 || (v70[v71[14]] = v72, v83 = 11, sub_1D57C6AF8(), v39 = v69, sub_1D5AAEC7C(), (v69 = v39) != 0))
    {
      (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v68);
      LODWORD(v68) = 0;
      v13 = 511;
    }
    else
    {
      v40 = v75;
      v41 = &v70[v71[15]];
      v42 = v73;
      *(_OWORD *)v41 = v72;
      *((_OWORD *)v41 + 1) = v42;
      *((_OWORD *)v41 + 2) = v74;
      v41[48] = v40;
      v83 = 12;
      sub_1D58FB7C0();
      v43 = v69;
      sub_1D5AAEC7C();
      v69 = v43;
      if (v43)
      {
        (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v68);
        LODWORD(v68) = 0;
        v13 = 2559;
      }
      else
      {
        *(_OWORD *)&v70[v71[16]] = v72;
        v83 = 13;
        sub_1D589D01C();
        v44 = v69;
        sub_1D5AAEC7C();
        v69 = v44;
        if (!v44)
        {
          v45 = BYTE4(v72);
          v46 = &v70[v71[17]];
          *(_DWORD *)v46 = v72;
          v46[4] = v45;
          v83 = 14;
          sub_1D57C7180();
          v47 = v69;
          sub_1D5AAEC7C();
          v82 = v47 == 0;
          v69 = v47;
          if (v47)
            goto LABEL_44;
          v48 = v74;
          v49 = &v70[v71[18]];
          v50 = v73;
          *(_OWORD *)v49 = v72;
          *((_OWORD *)v49 + 1) = v50;
          *((_QWORD *)v49 + 4) = v48;
          v83 = 15;
          sub_1D57C66F4();
          v51 = v69;
          sub_1D5AAEC7C();
          v69 = v51;
          if (v51)
          {
LABEL_44:
            (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v68);
            __swift_destroy_boxed_opaque_existential_1(v67);
            LODWORD(v66) = 0;
            LODWORD(v67) = 0;
          }
          else
          {
            *(_OWORD *)&v70[v71[19]] = v72;
            v83 = 16;
            sub_1D57CBCF0();
            v52 = v69;
            sub_1D5AAEC7C();
            v69 = v52;
            if (v52)
            {
              (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v68);
              __swift_destroy_boxed_opaque_existential_1(v67);
              LODWORD(v67) = 0;
              LODWORD(v66) = 1;
            }
            else
            {
              v53 = &v70[v71[20]];
              v54 = v73;
              *(_OWORD *)v53 = v72;
              *((_OWORD *)v53 + 1) = v54;
              v55 = v75;
              *((_OWORD *)v53 + 2) = v74;
              *((_OWORD *)v53 + 3) = v55;
              *((_OWORD *)v53 + 4) = v76;
              v83 = 17;
              sub_1D58845A0();
              v56 = v69;
              sub_1D5AAEC7C();
              v69 = v56;
              if (!v56)
              {
                (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v68);
                v57 = (uint64_t)v70;
                v58 = &v70[v71[21]];
                v59 = v73;
                *(_OWORD *)v58 = v72;
                *((_OWORD *)v58 + 1) = v59;
                sub_1D59EBE30(v57, v65);
                __swift_destroy_boxed_opaque_existential_1(v67);
                return sub_1D59EBE74(v57);
              }
              (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v68);
              __swift_destroy_boxed_opaque_existential_1(v67);
              LODWORD(v66) = 1;
              LODWORD(v67) = 1;
            }
          }
          v14 = v70;
          (*(void (**)(char *, uint64_t))(v62 + 8))(v70, v61);
          LODWORD(v68) = 1;
          LODWORD(v65) = 1;
          v63 = 1;
          LODWORD(v64) = 1;
          v20 = 1;
          v19 = 1;
          v18 = 1;
          v17 = 1;
          LOBYTE(v16) = 1;
          v21 = v71;
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v68);
        v13 = 6655;
        LODWORD(v68) = 1;
      }
    }
  }
  v14 = v70;
  result = __swift_destroy_boxed_opaque_existential_1(v67);
  v16 = (v13 >> 2) & 1;
  v17 = (v13 >> 3) & 1;
  v18 = (v13 >> 4) & 1;
  v19 = (v13 >> 5) & 1;
  v20 = (v13 >> 6) & 1;
  v63 = (v13 >> 7) & 1;
  LODWORD(v64) = (v13 >> 8) & 1;
  LODWORD(v65) = (v13 >> 11) & 1;
  if ((v13 & 1) != 0)
    result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v14, v61);
  v21 = v71;
  if ((v13 & 2) == 0)
  {
    v82 = 0;
    LODWORD(v66) = 0;
    LODWORD(v67) = 0;
    if ((v13 & 4) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
  LODWORD(v67) = 0;
  LODWORD(v66) = 0;
  v82 = 0;
LABEL_21:
  sub_1D57E4810((uint64_t)&v14[v21[5]], (uint64_t)&v80, (unint64_t *)&qword_1ED9CE420);
  result = sub_1D580D964((uint64_t)&v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580D9D8);
  if ((v16 & 1) == 0)
  {
LABEL_8:
    if (v17)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  result = sub_1D57DAEDC(*(_QWORD *)&v14[v21[6]], *(_QWORD *)&v14[v21[6] + 8], *(_QWORD *)&v14[v21[6] + 16]);
  if ((v17 & 1) != 0)
  {
LABEL_9:
    sub_1D57E4810((uint64_t)&v14[v21[7]], (uint64_t)&v80, (unint64_t *)&qword_1ED9CEEE0);
    result = (uint64_t)sub_1D57DE9C8(&v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
    if ((v18 & 1) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  if (!v18)
  {
LABEL_10:
    if (v19)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  result = swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
LABEL_11:
    result = sub_1D584ABF4(*(_QWORD *)&v14[v21[9]], *(_QWORD *)&v14[v21[9] + 8]);
    if ((v20 & 1) == 0)
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  if (!v20)
  {
LABEL_12:
    if (v63)
      goto LABEL_13;
    goto LABEL_27;
  }
LABEL_26:
  result = swift_bridgeObjectRelease();
  if ((v63 & 1) != 0)
  {
LABEL_13:
    result = swift_bridgeObjectRelease();
    if ((v64 & 1) == 0)
      goto LABEL_14;
    goto LABEL_28;
  }
LABEL_27:
  if (!(_DWORD)v64)
  {
LABEL_14:
    if ((_DWORD)v65)
      goto LABEL_15;
    goto LABEL_29;
  }
LABEL_28:
  result = sub_1D57EA700(*(_QWORD *)&v14[v21[12]], *(_QWORD *)&v14[v21[12] + 8]);
  if ((v65 & 1) != 0)
  {
LABEL_15:
    result = sub_1D58D9D0C(*(_QWORD *)&v14[v21[15]], *(_QWORD *)&v14[v21[15] + 8], *(_QWORD *)&v14[v21[15] + 16]);
    if ((v68 & 1) == 0)
      goto LABEL_16;
    goto LABEL_30;
  }
LABEL_29:
  if (!(_DWORD)v68)
  {
LABEL_16:
    if (v82)
      goto LABEL_17;
    goto LABEL_31;
  }
LABEL_30:
  result = swift_bridgeObjectRelease();
  if (v82)
  {
LABEL_17:
    result = sub_1D5967B0C(*(_QWORD *)&v14[v21[18]], *(_QWORD *)&v14[v21[18] + 8]);
    if ((v66 & 1) == 0)
      goto LABEL_18;
LABEL_32:
    result = swift_bridgeObjectRelease();
    if ((v67 & 1) == 0)
      return result;
    return sub_1D57EA700(*(_QWORD *)&v14[v21[20]], *(_QWORD *)&v14[v21[20] + 8]);
  }
LABEL_31:
  if ((_DWORD)v66)
    goto LABEL_32;
LABEL_18:
  if (!(_DWORD)v67)
    return result;
  return sub_1D57EA700(*(_QWORD *)&v14[v21[20]], *(_QWORD *)&v14[v21[20] + 8]);
}

void sub_1D59EBDD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59EB134();
    v7 = a3(a1, &type metadata for SubscriptionResultEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59EBE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscriptionResultEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59EBE74(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SubscriptionResultEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59EBEB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscriptionResultEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59EBEC4(_QWORD *a1)
{
  return SubscriptionResultEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59EBED8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47398, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF500C8, a1);
}

uint64_t sub_1D59EBEFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF500E0, a1);
}

uint64_t sub_1D59EBF20@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v7, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v7, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v7, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v7, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v7, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v7, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v7, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v7, v32);
  v33 = a2 + a1[18];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v33, v7, v34);
  v35 = a2 + a1[19];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v35, v7, v36);
  v37 = a2 + a1[20];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v37, v7, v38);
  v39 = a2 + a1[21];
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v39, v7, v40);
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscriptionResultEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v76 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v76 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = a3[18];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
    v64 = a3[19];
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
    v68 = a3[20];
    v69 = (char *)a1 + v68;
    v70 = (char *)a2 + v68;
    sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
    v72 = a3[21];
    v73 = (char *)a1 + v72;
    v74 = (char *)a2 + v72;
    sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
  }
  return a1;
}

uint64_t destroy for SubscriptionResultEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  v31 = a1 + a2[18];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  v33 = a1 + a2[19];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  v35 = a1 + a2[20];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  v37 = a1 + a2[21];
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
}

uint64_t initializeWithCopy for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
  return a1;
}

uint64_t assignWithCopy for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
  return a1;
}

uint64_t initializeWithTake for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
  return a1;
}

uint64_t assignWithTake for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionResultEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59EE43C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
                            v12 = *(_QWORD *)(v25 - 8);
                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                            {
                              v8 = v25;
                              v13 = a3[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                              v12 = *(_QWORD *)(v26 - 8);
                              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                              {
                                v8 = v26;
                                v13 = a3[18];
                              }
                              else
                              {
                                sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
                                v12 = *(_QWORD *)(v27 - 8);
                                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                {
                                  v8 = v27;
                                  v13 = a3[19];
                                }
                                else
                                {
                                  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                                  v12 = *(_QWORD *)(v28 - 8);
                                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                  {
                                    v8 = v28;
                                    v13 = a3[20];
                                  }
                                  else
                                  {
                                    sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
                                    v8 = v29;
                                    v12 = *(_QWORD *)(v29 - 8);
                                    v13 = a3[21];
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59EE91C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
                            v14 = *(_QWORD *)(v27 - 8);
                            if (*(_DWORD *)(v14 + 84) == a3)
                            {
                              v10 = v27;
                              v15 = a4[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                              v14 = *(_QWORD *)(v28 - 8);
                              if (*(_DWORD *)(v14 + 84) == a3)
                              {
                                v10 = v28;
                                v15 = a4[18];
                              }
                              else
                              {
                                sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
                                v14 = *(_QWORD *)(v29 - 8);
                                if (*(_DWORD *)(v14 + 84) == a3)
                                {
                                  v10 = v29;
                                  v15 = a4[19];
                                }
                                else
                                {
                                  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                                  v14 = *(_QWORD *)(v30 - 8);
                                  if (*(_DWORD *)(v14 + 84) == a3)
                                  {
                                    v10 = v30;
                                    v15 = a4[20];
                                  }
                                  else
                                  {
                                    sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
                                    v10 = v31;
                                    v14 = *(_QWORD *)(v31 - 8);
                                    v15 = a4[21];
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59EEDF8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C7220, (void (*)(void))sub_1D57F45E0, (void (*)(void))sub_1D57F4628);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C71C8, (void (*)(void))sub_1D588B524, (void (*)(void))sub_1D588B56C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9C7110, (void (*)(void))sub_1D589D01C, (void (*)(void))sub_1D589D064);
                            if (v13 <= 0x3F)
                            {
                              sub_1D579E208(319, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                              if (v14 <= 0x3F)
                              {
                                sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
                                if (v15 <= 0x3F)
                                {
                                  sub_1D579E208(319, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                                  if (v16 <= 0x3F)
                                  {
                                    sub_1D579E208(319, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
                                    if (v17 <= 0x3F)
                                      swift_initStructMetadata();
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SubscriptionResultEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 3);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[8] = v10[8];
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v11;
      v9[32] = v10[32];
      v12 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v12;
      *((_WORD *)v9 + 28) = *((_WORD *)v10 + 28);
      v14 = *((_QWORD *)v10 + 8);
      v13 = *((_QWORD *)v10 + 9);
      v9[80] = v10[80];
      *((_QWORD *)v9 + 8) = v14;
      *((_QWORD *)v9 + 9) = v13;
      *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      v9[112] = v10[112];
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      *((_DWORD *)v9 + 32) = *((_DWORD *)v10 + 32);
      v9[132] = v10[132];
      *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v16;
      *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
      v17 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v17;
      v18 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v18;
      v19 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v19;
    }
    v20 = a3[6];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *((_QWORD *)v22 + 2);
    if (v23 == 1)
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    }
    else
    {
      *v21 = *v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      *((_QWORD *)v21 + 2) = v23;
      swift_bridgeObjectRetain();
    }
    v24 = a3[7];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = *((_QWORD *)v26 + 2);
    if (v27)
    {
      *(_WORD *)v25 = *(_WORD *)v26;
      *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
      *((_QWORD *)v25 + 2) = v27;
      *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
      v28 = *((_QWORD *)v26 + 5);
      *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
      *((_QWORD *)v25 + 5) = v28;
      v29 = *((_QWORD *)v26 + 7);
      *((_QWORD *)v25 + 6) = *((_QWORD *)v26 + 6);
      *((_QWORD *)v25 + 7) = v29;
      v30 = *((_QWORD *)v26 + 9);
      *((_QWORD *)v25 + 8) = *((_QWORD *)v26 + 8);
      *((_QWORD *)v25 + 9) = v30;
      v25[80] = v26[80];
      v31 = *((_QWORD *)v26 + 12);
      *((_QWORD *)v25 + 11) = *((_QWORD *)v26 + 11);
      *((_QWORD *)v25 + 12) = v31;
      *((_QWORD *)v25 + 13) = *((_QWORD *)v26 + 13);
      v25[112] = v26[112];
      v32 = *((_QWORD *)v26 + 16);
      *((_QWORD *)v25 + 15) = *((_QWORD *)v26 + 15);
      *((_QWORD *)v25 + 16) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v33 = *((_OWORD *)v26 + 7);
      *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
      *((_OWORD *)v25 + 7) = v33;
      *((_QWORD *)v25 + 16) = *((_QWORD *)v26 + 16);
      v34 = *((_OWORD *)v26 + 3);
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      *((_OWORD *)v25 + 3) = v34;
      v35 = *((_OWORD *)v26 + 5);
      *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
      *((_OWORD *)v25 + 5) = v35;
      v36 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v36;
    }
    v37 = a3[8];
    v38 = a3[9];
    v39 = (char *)a1 + v37;
    v40 = (char *)a2 + v37;
    v41 = *((_QWORD *)v40 + 2);
    *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
    *((_QWORD *)v39 + 2) = v41;
    *(_QWORD *)v39 = *(_QWORD *)v40;
    v39[24] = v40[24];
    v42 = (_QWORD *)((char *)a1 + v38);
    v43 = (_QWORD *)((char *)a2 + v38);
    v44 = *(_QWORD *)((char *)a2 + v38 + 8);
    swift_bridgeObjectRetain();
    if (v44)
    {
      *v42 = *v43;
      v42[1] = v44;
      v45 = v43[3];
      v42[2] = v43[2];
      v42[3] = v45;
      v46 = v43[4];
      v47 = v43[5];
      v42[4] = v46;
      v42[5] = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v48 = *((_OWORD *)v43 + 1);
      *(_OWORD *)v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v48;
      *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
    }
    v49 = a3[10];
    v50 = a3[11];
    v51 = (char *)a1 + v49;
    v52 = (char *)a2 + v49;
    v53 = *((_QWORD *)v52 + 1);
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *((_QWORD *)v51 + 1) = v53;
    v51[16] = v52[16];
    v54 = (_QWORD *)((char *)a1 + v50);
    v55 = (_QWORD *)((char *)a2 + v50);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = a3[12];
    v58 = (char *)a1 + v57;
    v59 = (char *)a2 + v57;
    v60 = *(_QWORD *)((char *)a2 + v57 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v60)
    {
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v60;
      *((_WORD *)v58 + 8) = *((_WORD *)v59 + 8);
      *((_QWORD *)v58 + 3) = *((_QWORD *)v59 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v61 = *((_OWORD *)v59 + 1);
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v61;
    }
    v62 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *((_BYTE *)a1 + v62) = *((_BYTE *)a2 + v62);
    v63 = a3[15];
    v64 = (char *)a1 + v63;
    v65 = (char *)a2 + v63;
    v66 = *((_QWORD *)v65 + 2);
    if (v66 == 1)
    {
      v67 = *((_OWORD *)v65 + 1);
      *(_OWORD *)v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v67;
      *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
      v64[48] = v65[48];
    }
    else
    {
      *v64 = *v65;
      *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
      *((_QWORD *)v64 + 2) = v66;
      *((_WORD *)v64 + 12) = *((_WORD *)v65 + 12);
      v68 = *((_QWORD *)v65 + 5);
      *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
      *((_QWORD *)v64 + 5) = v68;
      v64[48] = v65[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v69 = a3[16];
    v70 = a3[17];
    v71 = (_QWORD *)((char *)a1 + v69);
    v72 = (_QWORD *)((char *)a2 + v69);
    v73 = v72[1];
    *v71 = *v72;
    v71[1] = v73;
    v74 = (char *)a1 + v70;
    v75 = (char *)a2 + v70;
    v74[4] = v75[4];
    *(_DWORD *)v74 = *(_DWORD *)v75;
    v76 = a3[18];
    v77 = (char *)a1 + v76;
    v78 = (char *)a2 + v76;
    v79 = *(_QWORD *)((char *)a2 + v76 + 8);
    swift_bridgeObjectRetain();
    if (v79 == 1)
    {
      v80 = *((_OWORD *)v78 + 1);
      *(_OWORD *)v77 = *(_OWORD *)v78;
      *((_OWORD *)v77 + 1) = v80;
      *((_QWORD *)v77 + 4) = *((_QWORD *)v78 + 4);
    }
    else
    {
      *(_QWORD *)v77 = *(_QWORD *)v78;
      *((_QWORD *)v77 + 1) = v79;
      v81 = *((_QWORD *)v78 + 3);
      *((_QWORD *)v77 + 2) = *((_QWORD *)v78 + 2);
      *((_QWORD *)v77 + 3) = v81;
      *((_QWORD *)v77 + 4) = *((_QWORD *)v78 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v82 = a3[19];
    v83 = a3[20];
    v84 = (_QWORD *)((char *)a1 + v82);
    v85 = (_QWORD *)((char *)a2 + v82);
    v86 = v85[1];
    *v84 = *v85;
    v84[1] = v86;
    v87 = (char *)a1 + v83;
    v88 = (char *)a2 + v83;
    v89 = *(_QWORD *)((char *)a2 + v83 + 8);
    swift_bridgeObjectRetain();
    if (v89)
    {
      *(_QWORD *)v87 = *(_QWORD *)v88;
      *((_QWORD *)v87 + 1) = v89;
      v90 = *((_QWORD *)v88 + 3);
      *((_QWORD *)v87 + 2) = *((_QWORD *)v88 + 2);
      *((_QWORD *)v87 + 3) = v90;
      v91 = *((_OWORD *)v88 + 3);
      *((_OWORD *)v87 + 2) = *((_OWORD *)v88 + 2);
      *((_OWORD *)v87 + 3) = v91;
      *((_WORD *)v87 + 32) = *((_WORD *)v88 + 32);
      *((_QWORD *)v87 + 9) = *((_QWORD *)v88 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v92 = *((_OWORD *)v88 + 3);
      *((_OWORD *)v87 + 2) = *((_OWORD *)v88 + 2);
      *((_OWORD *)v87 + 3) = v92;
      *((_OWORD *)v87 + 4) = *((_OWORD *)v88 + 4);
      v93 = *((_OWORD *)v88 + 1);
      *(_OWORD *)v87 = *(_OWORD *)v88;
      *((_OWORD *)v87 + 1) = v93;
    }
    v94 = a3[21];
    v95 = (_QWORD *)((char *)a1 + v94);
    v96 = (_QWORD *)((char *)a2 + v94);
    v97 = v96[1];
    if (v97)
    {
      *v95 = *v96;
      v95[1] = v97;
      v98 = v96[3];
      v95[2] = v96[2];
      v95[3] = v98;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v99 = *((_OWORD *)v96 + 1);
      *(_OWORD *)v95 = *(_OWORD *)v96;
      *((_OWORD *)v95 + 1) = v99;
    }
  }
  return a1;
}

uint64_t destroy for SubscriptionResultEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[5] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[6] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[12] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[15] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[18] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[20] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + a2[21] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 24);
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v10;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    v11 = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = v11;
    *(_WORD *)(v8 + 56) = *(_WORD *)(v9 + 56);
    v13 = *(_QWORD *)(v9 + 64);
    v12 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 72) = v12;
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_DWORD *)(v8 + 128) = *(_DWORD *)(v9 + 128);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_WORD *)(v8 + 133) = *(_WORD *)(v9 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v14;
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    v15 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v15;
    v16 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v16;
    v17 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v17;
  }
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 16);
  if (v21 == 1)
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  }
  else
  {
    *(_BYTE *)v19 = *(_BYTE *)v20;
    *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
    *(_QWORD *)(v19 + 16) = v21;
    swift_bridgeObjectRetain();
  }
  v22 = a3[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    *(_WORD *)v23 = *(_WORD *)v24;
    *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
    *(_QWORD *)(v23 + 16) = v25;
    *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
    v26 = *(_QWORD *)(v24 + 40);
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
    *(_QWORD *)(v23 + 40) = v26;
    v27 = *(_QWORD *)(v24 + 56);
    *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
    *(_QWORD *)(v23 + 56) = v27;
    v28 = *(_QWORD *)(v24 + 72);
    *(_QWORD *)(v23 + 64) = *(_QWORD *)(v24 + 64);
    *(_QWORD *)(v23 + 72) = v28;
    *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
    v29 = *(_QWORD *)(v24 + 96);
    *(_QWORD *)(v23 + 88) = *(_QWORD *)(v24 + 88);
    *(_QWORD *)(v23 + 96) = v29;
    *(_QWORD *)(v23 + 104) = *(_QWORD *)(v24 + 104);
    *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
    v30 = *(_QWORD *)(v24 + 128);
    *(_QWORD *)(v23 + 120) = *(_QWORD *)(v24 + 120);
    *(_QWORD *)(v23 + 128) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v31 = *(_OWORD *)(v24 + 112);
    *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
    *(_OWORD *)(v23 + 112) = v31;
    *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
    v32 = *(_OWORD *)(v24 + 48);
    *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
    *(_OWORD *)(v23 + 48) = v32;
    v33 = *(_OWORD *)(v24 + 80);
    *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
    *(_OWORD *)(v23 + 80) = v33;
    v34 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v34;
  }
  v35 = a3[8];
  v36 = a3[9];
  v37 = a1 + v35;
  v38 = a2 + v35;
  v39 = *(_QWORD *)(v38 + 16);
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  *(_QWORD *)(v37 + 16) = v39;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 24) = *(_BYTE *)(v38 + 24);
  v40 = (_QWORD *)(a1 + v36);
  v41 = (_QWORD *)(a2 + v36);
  v42 = *(_QWORD *)(a2 + v36 + 8);
  swift_bridgeObjectRetain();
  if (v42)
  {
    *v40 = *v41;
    v40[1] = v42;
    v43 = v41[3];
    v40[2] = v41[2];
    v40[3] = v43;
    v44 = v41[4];
    v45 = v41[5];
    v40[4] = v44;
    v40[5] = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v46 = *((_OWORD *)v41 + 1);
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *((_OWORD *)v40 + 1) = v46;
    *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
  }
  v47 = a3[10];
  v48 = a3[11];
  v49 = a1 + v47;
  v50 = a2 + v47;
  v51 = *(_QWORD *)(v50 + 8);
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_QWORD *)(v49 + 8) = v51;
  *(_BYTE *)(v49 + 16) = *(_BYTE *)(v50 + 16);
  v52 = (_QWORD *)(a1 + v48);
  v53 = (_QWORD *)(a2 + v48);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = a3[12];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = *(_QWORD *)(a2 + v55 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v58)
  {
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *(_QWORD *)(v56 + 8) = v58;
    *(_WORD *)(v56 + 16) = *(_WORD *)(v57 + 16);
    *(_QWORD *)(v56 + 24) = *(_QWORD *)(v57 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v59 = *(_OWORD *)(v57 + 16);
    *(_OWORD *)v56 = *(_OWORD *)v57;
    *(_OWORD *)(v56 + 16) = v59;
  }
  v60 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v60) = *(_BYTE *)(a2 + v60);
  v61 = a3[15];
  v62 = a1 + v61;
  v63 = a2 + v61;
  v64 = *(_QWORD *)(v63 + 16);
  if (v64 == 1)
  {
    v65 = *(_OWORD *)(v63 + 16);
    *(_OWORD *)v62 = *(_OWORD *)v63;
    *(_OWORD *)(v62 + 16) = v65;
    *(_OWORD *)(v62 + 32) = *(_OWORD *)(v63 + 32);
    *(_BYTE *)(v62 + 48) = *(_BYTE *)(v63 + 48);
  }
  else
  {
    *(_BYTE *)v62 = *(_BYTE *)v63;
    *(_QWORD *)(v62 + 8) = *(_QWORD *)(v63 + 8);
    *(_QWORD *)(v62 + 16) = v64;
    *(_WORD *)(v62 + 24) = *(_WORD *)(v63 + 24);
    v66 = *(_QWORD *)(v63 + 40);
    *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
    *(_QWORD *)(v62 + 40) = v66;
    *(_BYTE *)(v62 + 48) = *(_BYTE *)(v63 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v67 = a3[16];
  v68 = a3[17];
  v69 = (_QWORD *)(a1 + v67);
  v70 = (_QWORD *)(a2 + v67);
  v71 = v70[1];
  *v69 = *v70;
  v69[1] = v71;
  v72 = a1 + v68;
  v73 = a2 + v68;
  *(_BYTE *)(v72 + 4) = *(_BYTE *)(v73 + 4);
  *(_DWORD *)v72 = *(_DWORD *)v73;
  v74 = a3[18];
  v75 = a1 + v74;
  v76 = a2 + v74;
  v77 = *(_QWORD *)(a2 + v74 + 8);
  swift_bridgeObjectRetain();
  if (v77 == 1)
  {
    v78 = *(_OWORD *)(v76 + 16);
    *(_OWORD *)v75 = *(_OWORD *)v76;
    *(_OWORD *)(v75 + 16) = v78;
    *(_QWORD *)(v75 + 32) = *(_QWORD *)(v76 + 32);
  }
  else
  {
    *(_QWORD *)v75 = *(_QWORD *)v76;
    *(_QWORD *)(v75 + 8) = v77;
    v79 = *(_QWORD *)(v76 + 24);
    *(_QWORD *)(v75 + 16) = *(_QWORD *)(v76 + 16);
    *(_QWORD *)(v75 + 24) = v79;
    *(_QWORD *)(v75 + 32) = *(_QWORD *)(v76 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v80 = a3[19];
  v81 = a3[20];
  v82 = (_QWORD *)(a1 + v80);
  v83 = (_QWORD *)(a2 + v80);
  v84 = v83[1];
  *v82 = *v83;
  v82[1] = v84;
  v85 = a1 + v81;
  v86 = a2 + v81;
  v87 = *(_QWORD *)(a2 + v81 + 8);
  swift_bridgeObjectRetain();
  if (v87)
  {
    *(_QWORD *)v85 = *(_QWORD *)v86;
    *(_QWORD *)(v85 + 8) = v87;
    v88 = *(_QWORD *)(v86 + 24);
    *(_QWORD *)(v85 + 16) = *(_QWORD *)(v86 + 16);
    *(_QWORD *)(v85 + 24) = v88;
    v89 = *(_OWORD *)(v86 + 48);
    *(_OWORD *)(v85 + 32) = *(_OWORD *)(v86 + 32);
    *(_OWORD *)(v85 + 48) = v89;
    *(_WORD *)(v85 + 64) = *(_WORD *)(v86 + 64);
    *(_QWORD *)(v85 + 72) = *(_QWORD *)(v86 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v90 = *(_OWORD *)(v86 + 48);
    *(_OWORD *)(v85 + 32) = *(_OWORD *)(v86 + 32);
    *(_OWORD *)(v85 + 48) = v90;
    *(_OWORD *)(v85 + 64) = *(_OWORD *)(v86 + 64);
    v91 = *(_OWORD *)(v86 + 16);
    *(_OWORD *)v85 = *(_OWORD *)v86;
    *(_OWORD *)(v85 + 16) = v91;
  }
  v92 = a3[21];
  v93 = (_QWORD *)(a1 + v92);
  v94 = (_QWORD *)(a2 + v92);
  v95 = v94[1];
  if (v95)
  {
    *v93 = *v94;
    v93[1] = v95;
    v96 = v94[3];
    v93[2] = v94[2];
    v93[3] = v96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v97 = *((_OWORD *)v94 + 1);
    *(_OWORD *)v93 = *(_OWORD *)v94;
    *((_OWORD *)v93 + 1) = v97;
  }
  return a1;
}

uint64_t assignWithCopy for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  __int128 *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  __int128 *v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  __int128 v131;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 24);
  v11 = *(_QWORD *)(a2 + v7 + 24);
  if (v10)
  {
    if (v11)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
      *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      v12 = *(_QWORD *)(v9 + 48);
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      *(_QWORD *)(v8 + 48) = v12;
      *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_QWORD *)(v8 + 72) = v13;
      *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
      *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
      *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
      *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    }
    else
    {
      sub_1D5810518(v8);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v16 = *(_OWORD *)(v9 + 64);
      v18 = *(_OWORD *)(v9 + 16);
      v17 = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 64) = v16;
      *(_OWORD *)(v8 + 16) = v18;
      *(_OWORD *)(v8 + 32) = v17;
      v20 = *(_OWORD *)(v9 + 96);
      v19 = *(_OWORD *)(v9 + 112);
      v21 = *(_OWORD *)(v9 + 80);
      *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
      *(_OWORD *)(v8 + 96) = v20;
      *(_OWORD *)(v8 + 112) = v19;
      *(_OWORD *)(v8 + 80) = v21;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    v14 = *(_QWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    *(_QWORD *)(v8 + 48) = v14;
    *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
    *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
    v15 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 72) = v15;
    *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
    *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
    *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
    *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
    *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v22 = *(_OWORD *)(v9 + 16);
    v23 = *(_OWORD *)(v9 + 32);
    v24 = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 64) = v24;
    *(_OWORD *)(v8 + 16) = v22;
    *(_OWORD *)(v8 + 32) = v23;
    v25 = *(_OWORD *)(v9 + 80);
    v26 = *(_OWORD *)(v9 + 96);
    v27 = *(_OWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    *(_OWORD *)(v8 + 96) = v26;
    *(_OWORD *)(v8 + 112) = v27;
    *(_OWORD *)(v8 + 80) = v25;
  }
  v28 = a3[6];
  v29 = a1 + v28;
  v30 = (__int128 *)(a2 + v28);
  v31 = *(_QWORD *)(a1 + v28 + 16);
  v32 = *(_QWORD *)(a2 + v28 + 16);
  if (v31 == 1)
  {
    if (v32 == 1)
    {
      v33 = *v30;
      *(_QWORD *)(v29 + 16) = *((_QWORD *)v30 + 2);
      *(_OWORD *)v29 = v33;
    }
    else
    {
      *(_BYTE *)v29 = *(_BYTE *)v30;
      *(_QWORD *)(v29 + 8) = *((_QWORD *)v30 + 1);
      *(_QWORD *)(v29 + 16) = *((_QWORD *)v30 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v32 == 1)
  {
    sub_1D57D9100(v29);
    v34 = *((_QWORD *)v30 + 2);
    *(_OWORD *)v29 = *v30;
    *(_QWORD *)(v29 + 16) = v34;
  }
  else
  {
    *(_BYTE *)v29 = *(_BYTE *)v30;
    *(_QWORD *)(v29 + 8) = *((_QWORD *)v30 + 1);
    *(_QWORD *)(v29 + 16) = *((_QWORD *)v30 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v35 = a3[7];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_QWORD *)(a1 + v35 + 16);
  v39 = *(_QWORD *)(a2 + v35 + 16);
  if (v38)
  {
    if (v39)
    {
      *(_BYTE *)v36 = *(_BYTE *)v37;
      *(_BYTE *)(v36 + 1) = *(_BYTE *)(v37 + 1);
      *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
      *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v36 + 24) = *(_DWORD *)(v37 + 24);
      *(_DWORD *)(v36 + 28) = *(_DWORD *)(v37 + 28);
      *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v36 + 40) = *(_QWORD *)(v37 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
      *(_QWORD *)(v36 + 64) = *(_QWORD *)(v37 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v36 + 72) = *(_QWORD *)(v37 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v36 + 80) = *(_BYTE *)(v37 + 80);
      *(_QWORD *)(v36 + 88) = *(_QWORD *)(v37 + 88);
      *(_QWORD *)(v36 + 96) = *(_QWORD *)(v37 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v40 = *(_QWORD *)(v37 + 104);
      *(_BYTE *)(v36 + 112) = *(_BYTE *)(v37 + 112);
      *(_QWORD *)(v36 + 104) = v40;
      *(_QWORD *)(v36 + 120) = *(_QWORD *)(v37 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v36);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      v42 = *(_OWORD *)(v37 + 64);
      v44 = *(_OWORD *)(v37 + 16);
      v43 = *(_OWORD *)(v37 + 32);
      *(_OWORD *)(v36 + 48) = *(_OWORD *)(v37 + 48);
      *(_OWORD *)(v36 + 64) = v42;
      *(_OWORD *)(v36 + 16) = v44;
      *(_OWORD *)(v36 + 32) = v43;
      v46 = *(_OWORD *)(v37 + 96);
      v45 = *(_OWORD *)(v37 + 112);
      v47 = *(_OWORD *)(v37 + 80);
      *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
      *(_OWORD *)(v36 + 96) = v46;
      *(_OWORD *)(v36 + 112) = v45;
      *(_OWORD *)(v36 + 80) = v47;
    }
  }
  else if (v39)
  {
    *(_BYTE *)v36 = *(_BYTE *)v37;
    *(_BYTE *)(v36 + 1) = *(_BYTE *)(v37 + 1);
    *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
    *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
    *(_DWORD *)(v36 + 24) = *(_DWORD *)(v37 + 24);
    *(_DWORD *)(v36 + 28) = *(_DWORD *)(v37 + 28);
    *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
    *(_QWORD *)(v36 + 40) = *(_QWORD *)(v37 + 40);
    *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
    *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
    *(_QWORD *)(v36 + 64) = *(_QWORD *)(v37 + 64);
    *(_QWORD *)(v36 + 72) = *(_QWORD *)(v37 + 72);
    *(_BYTE *)(v36 + 80) = *(_BYTE *)(v37 + 80);
    *(_QWORD *)(v36 + 88) = *(_QWORD *)(v37 + 88);
    *(_QWORD *)(v36 + 96) = *(_QWORD *)(v37 + 96);
    v41 = *(_QWORD *)(v37 + 104);
    *(_BYTE *)(v36 + 112) = *(_BYTE *)(v37 + 112);
    *(_QWORD *)(v36 + 104) = v41;
    *(_QWORD *)(v36 + 120) = *(_QWORD *)(v37 + 120);
    *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v48 = *(_OWORD *)(v37 + 16);
    v49 = *(_OWORD *)(v37 + 32);
    v50 = *(_OWORD *)(v37 + 64);
    *(_OWORD *)(v36 + 48) = *(_OWORD *)(v37 + 48);
    *(_OWORD *)(v36 + 64) = v50;
    *(_OWORD *)(v36 + 16) = v48;
    *(_OWORD *)(v36 + 32) = v49;
    v51 = *(_OWORD *)(v37 + 80);
    v52 = *(_OWORD *)(v37 + 96);
    v53 = *(_OWORD *)(v37 + 112);
    *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
    *(_OWORD *)(v36 + 96) = v52;
    *(_OWORD *)(v36 + 112) = v53;
    *(_OWORD *)(v36 + 80) = v51;
  }
  v54 = a3[8];
  v55 = a1 + v54;
  v56 = a2 + v54;
  *(_QWORD *)v55 = *(_QWORD *)(a2 + v54);
  *(_QWORD *)(v55 + 8) = *(_QWORD *)(a2 + v54 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57 = *(_QWORD *)(v56 + 16);
  *(_BYTE *)(v55 + 24) = *(_BYTE *)(v56 + 24);
  *(_QWORD *)(v55 + 16) = v57;
  v58 = a3[9];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (_QWORD *)(a2 + v58);
  v61 = *(_QWORD *)(a1 + v58 + 8);
  v62 = *(_QWORD *)(a2 + v58 + 8);
  if (v61)
  {
    if (v62)
    {
      *v59 = *v60;
      v59[1] = v60[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v59[2] = v60[2];
      v59[3] = v60[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v59[4] = v60[4];
      v59[5] = v60[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5829E98((uint64_t)v59);
      v64 = *((_OWORD *)v60 + 1);
      v63 = *((_OWORD *)v60 + 2);
      *(_OWORD *)v59 = *(_OWORD *)v60;
      *((_OWORD *)v59 + 1) = v64;
      *((_OWORD *)v59 + 2) = v63;
    }
  }
  else if (v62)
  {
    *v59 = *v60;
    v59[1] = v60[1];
    v59[2] = v60[2];
    v59[3] = v60[3];
    v59[4] = v60[4];
    v59[5] = v60[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v65 = *(_OWORD *)v60;
    v66 = *((_OWORD *)v60 + 2);
    *((_OWORD *)v59 + 1) = *((_OWORD *)v60 + 1);
    *((_OWORD *)v59 + 2) = v66;
    *(_OWORD *)v59 = v65;
  }
  v67 = a3[10];
  v68 = a1 + v67;
  v69 = a2 + v67;
  *(_QWORD *)v68 = *(_QWORD *)(a2 + v67);
  *(_QWORD *)(v68 + 8) = *(_QWORD *)(a2 + v67 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v68 + 16) = *(_BYTE *)(v69 + 16);
  v70 = a3[11];
  v71 = (_QWORD *)(a1 + v70);
  v72 = (_QWORD *)(a2 + v70);
  *v71 = *v72;
  v71[1] = v72[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v73 = a3[12];
  v74 = a1 + v73;
  v75 = a2 + v73;
  v76 = *(_QWORD *)(a1 + v73 + 8);
  v77 = *(_QWORD *)(a2 + v73 + 8);
  if (v76)
  {
    if (v77)
    {
      *(_QWORD *)v74 = *(_QWORD *)v75;
      *(_QWORD *)(v74 + 8) = *(_QWORD *)(v75 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v74 + 16) = *(_BYTE *)(v75 + 16);
      *(_BYTE *)(v74 + 17) = *(_BYTE *)(v75 + 17);
      *(_QWORD *)(v74 + 24) = *(_QWORD *)(v75 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v74);
      v78 = *(_OWORD *)(v75 + 16);
      *(_OWORD *)v74 = *(_OWORD *)v75;
      *(_OWORD *)(v74 + 16) = v78;
    }
  }
  else if (v77)
  {
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *(_QWORD *)(v74 + 8) = *(_QWORD *)(v75 + 8);
    *(_BYTE *)(v74 + 16) = *(_BYTE *)(v75 + 16);
    *(_BYTE *)(v74 + 17) = *(_BYTE *)(v75 + 17);
    *(_QWORD *)(v74 + 24) = *(_QWORD *)(v75 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v79 = *(_OWORD *)(v75 + 16);
    *(_OWORD *)v74 = *(_OWORD *)v75;
    *(_OWORD *)(v74 + 16) = v79;
  }
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v80 = a3[15];
  v81 = a1 + v80;
  v82 = (__int128 *)(a2 + v80);
  v83 = *(_QWORD *)(a1 + v80 + 16);
  v84 = *(_QWORD *)(a2 + v80 + 16);
  if (v83 == 1)
  {
    if (v84 == 1)
    {
      v85 = *v82;
      v86 = v82[1];
      v87 = v82[2];
      *(_BYTE *)(v81 + 48) = *((_BYTE *)v82 + 48);
      *(_OWORD *)(v81 + 16) = v86;
      *(_OWORD *)(v81 + 32) = v87;
      *(_OWORD *)v81 = v85;
    }
    else
    {
      *(_BYTE *)v81 = *(_BYTE *)v82;
      *(_QWORD *)(v81 + 8) = *((_QWORD *)v82 + 1);
      *(_QWORD *)(v81 + 16) = *((_QWORD *)v82 + 2);
      *(_BYTE *)(v81 + 24) = *((_BYTE *)v82 + 24);
      *(_BYTE *)(v81 + 25) = *((_BYTE *)v82 + 25);
      *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
      *(_QWORD *)(v81 + 40) = *((_QWORD *)v82 + 5);
      *(_BYTE *)(v81 + 48) = *((_BYTE *)v82 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v84 == 1)
  {
    sub_1D5971944(v81);
    v89 = v82[1];
    v88 = v82[2];
    v90 = *v82;
    *(_BYTE *)(v81 + 48) = *((_BYTE *)v82 + 48);
    *(_OWORD *)(v81 + 16) = v89;
    *(_OWORD *)(v81 + 32) = v88;
    *(_OWORD *)v81 = v90;
  }
  else
  {
    *(_BYTE *)v81 = *(_BYTE *)v82;
    *(_QWORD *)(v81 + 8) = *((_QWORD *)v82 + 1);
    *(_QWORD *)(v81 + 16) = *((_QWORD *)v82 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v81 + 24) = *((_BYTE *)v82 + 24);
    *(_BYTE *)(v81 + 25) = *((_BYTE *)v82 + 25);
    *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
    *(_QWORD *)(v81 + 40) = *((_QWORD *)v82 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v81 + 48) = *((_BYTE *)v82 + 48);
  }
  v91 = a3[16];
  v92 = (_QWORD *)(a1 + v91);
  v93 = (_QWORD *)(a2 + v91);
  *v92 = *v93;
  v92[1] = v93[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v94 = a3[17];
  v95 = a1 + v94;
  v96 = (int *)(a2 + v94);
  v97 = *v96;
  *(_BYTE *)(v95 + 4) = *((_BYTE *)v96 + 4);
  *(_DWORD *)v95 = v97;
  v98 = a3[18];
  v99 = a1 + v98;
  v100 = (__int128 *)(a2 + v98);
  v101 = *(_QWORD *)(a1 + v98 + 8);
  v102 = *(_QWORD *)(a2 + v98 + 8);
  if (v101 == 1)
  {
    if (v102 == 1)
    {
      v103 = *v100;
      v104 = v100[1];
      *(_QWORD *)(v99 + 32) = *((_QWORD *)v100 + 4);
      *(_OWORD *)v99 = v103;
      *(_OWORD *)(v99 + 16) = v104;
    }
    else
    {
      *(_QWORD *)v99 = *(_QWORD *)v100;
      *(_QWORD *)(v99 + 8) = *((_QWORD *)v100 + 1);
      *(_QWORD *)(v99 + 16) = *((_QWORD *)v100 + 2);
      *(_QWORD *)(v99 + 24) = *((_QWORD *)v100 + 3);
      *(_QWORD *)(v99 + 32) = *((_QWORD *)v100 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v102 == 1)
  {
    sub_1D57EE4B0(v99);
    v105 = *((_QWORD *)v100 + 4);
    v106 = v100[1];
    *(_OWORD *)v99 = *v100;
    *(_OWORD *)(v99 + 16) = v106;
    *(_QWORD *)(v99 + 32) = v105;
  }
  else
  {
    *(_QWORD *)v99 = *(_QWORD *)v100;
    *(_QWORD *)(v99 + 8) = *((_QWORD *)v100 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v99 + 16) = *((_QWORD *)v100 + 2);
    *(_QWORD *)(v99 + 24) = *((_QWORD *)v100 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v99 + 32) = *((_QWORD *)v100 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v107 = a3[19];
  v108 = (_QWORD *)(a1 + v107);
  v109 = (_QWORD *)(a2 + v107);
  *v108 = *v109;
  v108[1] = v109[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v110 = a3[20];
  v111 = a1 + v110;
  v112 = a2 + v110;
  v113 = *(_QWORD *)(a1 + v110 + 8);
  v114 = *(_QWORD *)(a2 + v110 + 8);
  if (v113)
  {
    if (v114)
    {
      *(_QWORD *)v111 = *(_QWORD *)v112;
      *(_QWORD *)(v111 + 8) = *(_QWORD *)(v112 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v111 + 16) = *(_QWORD *)(v112 + 16);
      *(_QWORD *)(v111 + 24) = *(_QWORD *)(v112 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v111 + 32) = *(_DWORD *)(v112 + 32);
      v115 = *(_QWORD *)(v112 + 40);
      *(_BYTE *)(v111 + 48) = *(_BYTE *)(v112 + 48);
      *(_QWORD *)(v111 + 40) = v115;
      v116 = *(_QWORD *)(v112 + 56);
      *(_BYTE *)(v111 + 64) = *(_BYTE *)(v112 + 64);
      *(_QWORD *)(v111 + 56) = v116;
      *(_BYTE *)(v111 + 65) = *(_BYTE *)(v112 + 65);
      *(_QWORD *)(v111 + 72) = *(_QWORD *)(v112 + 72);
    }
    else
    {
      sub_1D58388FC(v111);
      *(_OWORD *)v111 = *(_OWORD *)v112;
      v119 = *(_OWORD *)(v112 + 64);
      v121 = *(_OWORD *)(v112 + 16);
      v120 = *(_OWORD *)(v112 + 32);
      *(_OWORD *)(v111 + 48) = *(_OWORD *)(v112 + 48);
      *(_OWORD *)(v111 + 64) = v119;
      *(_OWORD *)(v111 + 16) = v121;
      *(_OWORD *)(v111 + 32) = v120;
    }
  }
  else if (v114)
  {
    *(_QWORD *)v111 = *(_QWORD *)v112;
    *(_QWORD *)(v111 + 8) = *(_QWORD *)(v112 + 8);
    *(_QWORD *)(v111 + 16) = *(_QWORD *)(v112 + 16);
    *(_QWORD *)(v111 + 24) = *(_QWORD *)(v112 + 24);
    v117 = *(_OWORD *)(v112 + 32);
    v118 = *(_OWORD *)(v112 + 48);
    *(_BYTE *)(v111 + 64) = *(_BYTE *)(v112 + 64);
    *(_OWORD *)(v111 + 32) = v117;
    *(_OWORD *)(v111 + 48) = v118;
    *(_BYTE *)(v111 + 65) = *(_BYTE *)(v112 + 65);
    *(_QWORD *)(v111 + 72) = *(_QWORD *)(v112 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v111 = *(_OWORD *)v112;
    v122 = *(_OWORD *)(v112 + 16);
    v123 = *(_OWORD *)(v112 + 32);
    v124 = *(_OWORD *)(v112 + 64);
    *(_OWORD *)(v111 + 48) = *(_OWORD *)(v112 + 48);
    *(_OWORD *)(v111 + 64) = v124;
    *(_OWORD *)(v111 + 16) = v122;
    *(_OWORD *)(v111 + 32) = v123;
  }
  v125 = a3[21];
  v126 = (_QWORD *)(a1 + v125);
  v127 = (_QWORD *)(a2 + v125);
  v128 = *(_QWORD *)(a1 + v125 + 8);
  v129 = v127[1];
  if (v128)
  {
    if (v129)
    {
      *v126 = *v127;
      v126[1] = v127[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v126[2] = v127[2];
      v126[3] = v127[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D59F0B90((uint64_t)v126);
      v130 = *((_OWORD *)v127 + 1);
      *(_OWORD *)v126 = *(_OWORD *)v127;
      *((_OWORD *)v126 + 1) = v130;
    }
  }
  else if (v129)
  {
    *v126 = *v127;
    v126[1] = v127[1];
    v126[2] = v127[2];
    v126[3] = v127[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v131 = *((_OWORD *)v127 + 1);
    *(_OWORD *)v126 = *(_OWORD *)v127;
    *((_OWORD *)v126 + 1) = v131;
  }
  return a1;
}

uint64_t sub_1D59F0B90(uint64_t a1)
{
  destroy for IssueData();
  return a1;
}

uint64_t initializeWithTake for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _OWORD *v52;
  __int128 *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _OWORD *v58;
  _OWORD *v59;
  __int128 v60;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  v21 = *(_OWORD *)(v20 + 48);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(_OWORD *)(v19 + 48) = v21;
  *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
  v22 = *(_OWORD *)(v20 + 112);
  *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
  *(_OWORD *)(v19 + 112) = v22;
  v23 = *(_OWORD *)(v20 + 80);
  *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
  *(_OWORD *)(v19 + 80) = v23;
  v24 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v24;
  v25 = (_OWORD *)(a1 + v18);
  v26 = (_OWORD *)(a2 + v18);
  *v25 = *v26;
  *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v26 + 9);
  v27 = a3[9];
  v28 = a3[10];
  v29 = (_OWORD *)(a1 + v27);
  v30 = (_OWORD *)(a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v29[2] = v30[2];
  v32 = a1 + v28;
  v33 = a2 + v28;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  v34 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v35 = (_OWORD *)(a1 + v34);
  v36 = (_OWORD *)(a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  v39 = a3[15];
  v40 = a3[16];
  v41 = a1 + v39;
  v42 = a2 + v39;
  v43 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v43;
  *(_OWORD *)(v41 + 32) = *(_OWORD *)(v42 + 32);
  *(_BYTE *)(v41 + 48) = *(_BYTE *)(v42 + 48);
  *(_OWORD *)(a1 + v40) = *(_OWORD *)(a2 + v40);
  v44 = a3[17];
  v45 = a3[18];
  v46 = a1 + v44;
  v47 = a2 + v44;
  *(_DWORD *)v46 = *(_DWORD *)v47;
  *(_BYTE *)(v46 + 4) = *(_BYTE *)(v47 + 4);
  v48 = a1 + v45;
  v49 = a2 + v45;
  v50 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 16) = v50;
  *(_QWORD *)(v48 + 32) = *(_QWORD *)(v49 + 32);
  v51 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  v52 = (_OWORD *)(a1 + v51);
  v53 = (__int128 *)(a2 + v51);
  v54 = v53[4];
  v55 = v53[2];
  v52[3] = v53[3];
  v52[4] = v54;
  v56 = *v53;
  v52[1] = v53[1];
  v52[2] = v55;
  *v52 = v56;
  v57 = a3[21];
  v58 = (_OWORD *)(a1 + v57);
  v59 = (_OWORD *)(a2 + v57);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  return a1;
}

uint64_t assignWithTake for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 24))
  {
    v10 = *(_QWORD *)(v9 + 24);
    if (v10)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
      *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v10;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 48);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = v11;
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
      *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
      *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
      *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
      goto LABEL_6;
    }
    sub_1D5810518(v8);
  }
  v12 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v12;
  *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
  v13 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v13;
  v14 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v14;
  v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
LABEL_6:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    goto LABEL_11;
  }
  v19 = *(_QWORD *)(v18 + 16);
  if (v19 == 1)
  {
    sub_1D57D9100(v17);
    goto LABEL_9;
  }
  *(_BYTE *)v17 = *(_BYTE *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
LABEL_11:
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  if (*(_QWORD *)(a1 + v20 + 16))
  {
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      *(_WORD *)v21 = *(_WORD *)v22;
      *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
      *(_QWORD *)(v21 + 16) = v23;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
      *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v22 + 64);
      *(_QWORD *)(v21 + 56) = *(_QWORD *)(v22 + 56);
      *(_QWORD *)(v21 + 64) = v24;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 72) = *(_QWORD *)(v22 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v21 + 80) = *(_BYTE *)(v22 + 80);
      v25 = *(_QWORD *)(v22 + 96);
      *(_QWORD *)(v21 + 88) = *(_QWORD *)(v22 + 88);
      *(_QWORD *)(v21 + 96) = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 104) = *(_QWORD *)(v22 + 104);
      *(_BYTE *)(v21 + 112) = *(_BYTE *)(v22 + 112);
      *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 128) = *(_QWORD *)(v22 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57E17B8(v21);
  }
  v26 = *(_OWORD *)(v22 + 112);
  *(_OWORD *)(v21 + 96) = *(_OWORD *)(v22 + 96);
  *(_OWORD *)(v21 + 112) = v26;
  *(_QWORD *)(v21 + 128) = *(_QWORD *)(v22 + 128);
  v27 = *(_OWORD *)(v22 + 48);
  *(_OWORD *)(v21 + 32) = *(_OWORD *)(v22 + 32);
  *(_OWORD *)(v21 + 48) = v27;
  v28 = *(_OWORD *)(v22 + 80);
  *(_OWORD *)(v21 + 64) = *(_OWORD *)(v22 + 64);
  *(_OWORD *)(v21 + 80) = v28;
  v29 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v29;
LABEL_16:
  v30 = a3[8];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a2 + v30 + 8);
  *(_QWORD *)v31 = *(_QWORD *)(a2 + v30);
  *(_QWORD *)(v31 + 8) = v33;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v31 + 24) = *(_BYTE *)(v32 + 24);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  v34 = a3[9];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  if (*(_QWORD *)(a1 + v34 + 8))
  {
    v37 = v36[1];
    if (v37)
    {
      *v35 = *v36;
      v35[1] = v37;
      swift_bridgeObjectRelease();
      v38 = v36[3];
      v35[2] = v36[2];
      v35[3] = v38;
      swift_bridgeObjectRelease();
      v39 = v36[5];
      v35[4] = v36[4];
      v35[5] = v39;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D5829E98((uint64_t)v35);
  }
  v40 = *((_OWORD *)v36 + 1);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *((_OWORD *)v35 + 1) = v40;
  *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
LABEL_21:
  v41 = a3[10];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = *(_QWORD *)(a2 + v41 + 8);
  *(_QWORD *)v42 = *(_QWORD *)(a2 + v41);
  *(_QWORD *)(v42 + 8) = v44;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v42 + 16) = *(_BYTE *)(v43 + 16);
  v45 = a3[11];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (uint64_t *)(a2 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  v50 = a3[12];
  v51 = a1 + v50;
  v52 = a2 + v50;
  if (*(_QWORD *)(a1 + v50 + 8))
  {
    v53 = *(_QWORD *)(v52 + 8);
    if (v53)
    {
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *(_QWORD *)(v51 + 8) = v53;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
      *(_BYTE *)(v51 + 17) = *(_BYTE *)(v52 + 17);
      *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1D57EE47C(v51);
  }
  v54 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v54;
LABEL_26:
  v55 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v55) = *(_BYTE *)(a2 + v55);
  v56 = a3[15];
  v57 = a1 + v56;
  v58 = a2 + v56;
  if (*(_QWORD *)(a1 + v56 + 16) == 1)
  {
LABEL_29:
    v60 = *(_OWORD *)(v58 + 16);
    *(_OWORD *)v57 = *(_OWORD *)v58;
    *(_OWORD *)(v57 + 16) = v60;
    *(_OWORD *)(v57 + 32) = *(_OWORD *)(v58 + 32);
    goto LABEL_31;
  }
  v59 = *(_QWORD *)(v58 + 16);
  if (v59 == 1)
  {
    sub_1D5971944(v57);
    goto LABEL_29;
  }
  *(_BYTE *)v57 = *(_BYTE *)v58;
  *(_QWORD *)(v57 + 8) = *(_QWORD *)(v58 + 8);
  *(_QWORD *)(v57 + 16) = v59;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v57 + 24) = *(_BYTE *)(v58 + 24);
  *(_BYTE *)(v57 + 25) = *(_BYTE *)(v58 + 25);
  v61 = *(_QWORD *)(v58 + 40);
  *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
  *(_QWORD *)(v57 + 40) = v61;
  swift_bridgeObjectRelease();
LABEL_31:
  *(_BYTE *)(v57 + 48) = *(_BYTE *)(v58 + 48);
  v62 = a3[16];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)(a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  v67 = a3[17];
  v68 = a3[18];
  v69 = a1 + v67;
  v70 = a2 + v67;
  *(_BYTE *)(v69 + 4) = *(_BYTE *)(v70 + 4);
  *(_DWORD *)v69 = *(_DWORD *)v70;
  v71 = a1 + v68;
  v72 = a2 + v68;
  if (*(_QWORD *)(a1 + v68 + 8) == 1)
  {
LABEL_34:
    v74 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v74;
    *(_QWORD *)(v71 + 32) = *(_QWORD *)(v72 + 32);
    goto LABEL_36;
  }
  v73 = *(_QWORD *)(v72 + 8);
  if (v73 == 1)
  {
    sub_1D57EE4B0(a1 + v68);
    goto LABEL_34;
  }
  *(_QWORD *)v71 = *(_QWORD *)v72;
  *(_QWORD *)(v71 + 8) = v73;
  swift_bridgeObjectRelease();
  v75 = *(_QWORD *)(v72 + 24);
  *(_QWORD *)(v71 + 16) = *(_QWORD *)(v72 + 16);
  *(_QWORD *)(v71 + 24) = v75;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v71 + 32) = *(_QWORD *)(v72 + 32);
  swift_bridgeObjectRelease();
LABEL_36:
  v76 = a3[19];
  v77 = (_QWORD *)(a1 + v76);
  v78 = (uint64_t *)(a2 + v76);
  v80 = *v78;
  v79 = v78[1];
  *v77 = v80;
  v77[1] = v79;
  swift_bridgeObjectRelease();
  v81 = a3[20];
  v82 = a1 + v81;
  v83 = a2 + v81;
  if (*(_QWORD *)(a1 + v81 + 8))
  {
    v84 = *(_QWORD *)(v83 + 8);
    if (v84)
    {
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *(_QWORD *)(v82 + 8) = v84;
      swift_bridgeObjectRelease();
      v85 = *(_QWORD *)(v83 + 24);
      *(_QWORD *)(v82 + 16) = *(_QWORD *)(v83 + 16);
      *(_QWORD *)(v82 + 24) = v85;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v82 + 32) = *(_DWORD *)(v83 + 32);
      *(_QWORD *)(v82 + 40) = *(_QWORD *)(v83 + 40);
      *(_BYTE *)(v82 + 48) = *(_BYTE *)(v83 + 48);
      *(_QWORD *)(v82 + 56) = *(_QWORD *)(v83 + 56);
      *(_BYTE *)(v82 + 64) = *(_BYTE *)(v83 + 64);
      *(_BYTE *)(v82 + 65) = *(_BYTE *)(v83 + 65);
      *(_QWORD *)(v82 + 72) = *(_QWORD *)(v83 + 72);
      goto LABEL_41;
    }
    sub_1D58388FC(v82);
  }
  v86 = *(_OWORD *)(v83 + 48);
  *(_OWORD *)(v82 + 32) = *(_OWORD *)(v83 + 32);
  *(_OWORD *)(v82 + 48) = v86;
  *(_OWORD *)(v82 + 64) = *(_OWORD *)(v83 + 64);
  v87 = *(_OWORD *)(v83 + 16);
  *(_OWORD *)v82 = *(_OWORD *)v83;
  *(_OWORD *)(v82 + 16) = v87;
LABEL_41:
  v88 = a3[21];
  v89 = a1 + v88;
  v90 = a2 + v88;
  if (!*(_QWORD *)(a1 + v88 + 8))
  {
LABEL_45:
    v93 = *(_OWORD *)(v90 + 16);
    *(_OWORD *)v89 = *(_OWORD *)v90;
    *(_OWORD *)(v89 + 16) = v93;
    return a1;
  }
  v91 = *(_QWORD *)(v90 + 8);
  if (!v91)
  {
    sub_1D59F0B90(v89);
    goto LABEL_45;
  }
  *(_QWORD *)v89 = *(_QWORD *)v90;
  *(_QWORD *)(v89 + 8) = v91;
  swift_bridgeObjectRelease();
  v92 = *(_QWORD *)(v90 + 24);
  *(_QWORD *)(v89 + 16) = *(_QWORD *)(v90 + 16);
  *(_QWORD *)(v89 + 24) = v92;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionResultEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59F13E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 40) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59F146C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 40) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D59F14E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1D59F1634 + 4 * byte_1D5AD9D57[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1D59F1668 + 4 * byte_1D5AD9D52[v4]))();
}

uint64_t sub_1D59F1668(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F1670(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59F1678);
  return result;
}

uint64_t sub_1D59F1684(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59F168CLL);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1D59F1690(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F1698(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultEvent.Model.CodingKeys()
{
  return &type metadata for SubscriptionResultEvent.Model.CodingKeys;
}

unint64_t sub_1D59F16B8()
{
  unint64_t result;

  result = qword_1EFF50110;
  if (!qword_1EFF50110)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADA134, &type metadata for SubscriptionResultEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50110);
  }
  return result;
}

unint64_t sub_1D59F1700()
{
  unint64_t result;

  result = qword_1EFF50118;
  if (!qword_1EFF50118)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADA0A4, &type metadata for SubscriptionResultEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50118);
  }
  return result;
}

unint64_t sub_1D59F1748()
{
  unint64_t result;

  result = qword_1EFF50120;
  if (!qword_1EFF50120)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADA0CC, &type metadata for SubscriptionResultEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50120);
  }
  return result;
}

uint64_t sub_1D59F178C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AED700 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AF17F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF1810 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7272656665526461 && a2 == 0xEE00617461446C61 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x726F727245736D61 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED320 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6144656C7A7A7570 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x7255656372756F73 && a2 == 0xED0000617461446CLL)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 17;
    else
      return 18;
  }
}

uint64_t sub_1D59F1F4C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1EFF50128);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF50128);
  *(_QWORD *)v1 = 0x726F70732E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xEA00000000007374;
  *(_QWORD *)(v1 + 16) = 6;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static FollowSportsTagEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50128, a1);
}

uint64_t sub_1D59F1FF0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1EFF50140);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF50140);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8380], v0);
}

uint64_t static FollowSportsTagEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50140, a1);
}

uint64_t FollowSportsTagEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FollowSportsTagEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FollowSportsTagEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FollowSportsTagEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowSportsTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for FollowSportsTagEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF501C8);
}

uint64_t FollowSportsTagEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowSportsTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowSportsTagEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for FollowSportsTagEvent(0);
  return nullsub_1;
}

uint64_t FollowSportsTagEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowSportsTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FollowSportsTagEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowSportsTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowSportsTagEvent.tagData.modify())(_QWORD)
{
  type metadata accessor for FollowSportsTagEvent(0);
  return nullsub_1;
}

uint64_t FollowSportsTagEvent.sportsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowSportsTagEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FollowSportsTagEvent.sportsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowSportsTagEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowSportsTagEvent.sportsData.modify())(_QWORD)
{
  type metadata accessor for FollowSportsTagEvent(0);
  return nullsub_1;
}

uint64_t FollowSportsTagEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowSportsTagEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FollowSportsTagEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowSportsTagEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowSportsTagEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for FollowSportsTagEvent(0);
  return nullsub_1;
}

uint64_t FollowSportsTagEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for FollowSportsTagEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t FollowSportsTagEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FollowSportsTagEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for FollowSportsTagEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FollowSportsTagEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF50268);
}

uint64_t FollowSportsTagEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for FollowSportsTagEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t FollowSportsTagEvent.Model.sportsData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for FollowSportsTagEvent.Model(0) + 28));
  return swift_bridgeObjectRetain();
}

uint64_t FollowSportsTagEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FollowSportsTagEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

int *FollowSportsTagEvent.Model.init(eventData:userBundleSubscriptionContextData:tagData:sportsData:viewData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int *result;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;

  v8 = *a2;
  v9 = *((_QWORD *)a2 + 1);
  v10 = *((_QWORD *)a2 + 2);
  v11 = a2[24];
  v12 = a2[25];
  v13 = *((_QWORD *)a2 + 4);
  v14 = *((_QWORD *)a2 + 5);
  v15 = a2[48];
  v21 = a3[1];
  v22 = *a3;
  v23 = *a4;
  v25 = a5[1];
  v26 = *a5;
  v24 = *((_WORD *)a5 + 8);
  v16 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  result = (int *)type metadata accessor for FollowSportsTagEvent.Model(0);
  v18 = a6 + result[5];
  *(_BYTE *)v18 = v8;
  *(_QWORD *)(v18 + 8) = v9;
  *(_QWORD *)(v18 + 16) = v10;
  *(_BYTE *)(v18 + 24) = v11;
  *(_BYTE *)(v18 + 25) = v12;
  *(_QWORD *)(v18 + 32) = v13;
  *(_QWORD *)(v18 + 40) = v14;
  *(_BYTE *)(v18 + 48) = v15;
  v19 = (_QWORD *)(a6 + result[6]);
  *v19 = v22;
  v19[1] = v21;
  *(_QWORD *)(a6 + result[7]) = v23;
  v20 = a6 + result[8];
  *(_QWORD *)v20 = v26;
  *(_QWORD *)(v20 + 8) = v25;
  *(_WORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1D59F285C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59F2890 + 4 * byte_1D5ADA1B0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1D59F2890()
{
  return 0xD000000000000021;
}

uint64_t sub_1D59F28AC()
{
  return 0x61746144676174;
}

uint64_t sub_1D59F28C4()
{
  return 0x61447374726F7073;
}

uint64_t sub_1D59F28E0()
{
  return 0x6174614477656976;
}

uint64_t sub_1D59F28F8()
{
  sub_1D59F2BBC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59F2920()
{
  sub_1D59F2BBC();
  return sub_1D5AAEEE0();
}

uint64_t FollowSportsTagEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;

  v3 = v1;
  sub_1D59F306C(0, &qword_1EFF50158, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59F2BBC();
  sub_1D5AAEEC8();
  LOBYTE(v23) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for FollowSportsTagEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v23) = *(_BYTE *)v11;
    v24 = *(_OWORD *)(v11 + 8);
    v25 = v12;
    v26 = v13;
    v27 = *(_OWORD *)(v11 + 32);
    v28 = v14;
    HIBYTE(v22) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v15 = (uint64_t *)(v3 + v10[6]);
    v17 = *v15;
    v16 = v15[1];
    v23 = v17;
    *(_QWORD *)&v24 = v16;
    HIBYTE(v22) = 2;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v23 = *(_QWORD *)(v3 + v10[7]);
    HIBYTE(v22) = 3;
    sub_1D57CBB60();
    sub_1D5AAED6C();
    v18 = (uint64_t *)(v3 + v10[8]);
    v19 = *v18;
    v20 = v18[1];
    LOWORD(v18) = *((_WORD *)v18 + 8);
    v23 = v19;
    *(_QWORD *)&v24 = v20;
    WORD4(v24) = (_WORD)v18;
    HIBYTE(v22) = 4;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59F2BBC()
{
  unint64_t result;

  result = qword_1EFF50160;
  if (!qword_1EFF50160)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADA3CC, &type metadata for FollowSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50160);
  }
  return result;
}

uint64_t FollowSportsTagEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int16 v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  char v34;
  __int128 v35;
  char v36;
  char v37;

  v25 = a2;
  v3 = sub_1D5AADF98();
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59F306C(0, &qword_1EFF50168, MEMORY[0x1E0DED048]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - v7;
  v9 = (int *)type metadata accessor for FollowSportsTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59F2BBC();
  v29 = v8;
  v12 = (uint64_t)v30;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = v6;
  v13 = v26;
  v30 = a1;
  LOBYTE(v31) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v28, v3);
  v37 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v14 = v33;
  v15 = v34;
  v16 = v36;
  v17 = &v11[v9[5]];
  *v17 = v31;
  *(_OWORD *)(v17 + 8) = v32;
  v17[24] = v14;
  v17[25] = v15;
  *((_OWORD *)v17 + 2) = v35;
  v17[48] = v16;
  v37 = 2;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v18 = v32;
  v19 = &v11[v9[6]];
  *(_QWORD *)v19 = v31;
  *((_QWORD *)v19 + 1) = v18;
  v37 = 3;
  sub_1D57CBB1C();
  sub_1D5AAECD0();
  *(_QWORD *)&v11[v9[7]] = v31;
  v37 = 4;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v27);
  v20 = v32;
  v21 = WORD4(v32);
  v22 = &v11[v9[8]];
  *(_QWORD *)v22 = v31;
  *((_QWORD *)v22 + 1) = v20;
  *((_WORD *)v22 + 8) = v21;
  sub_1D59F30C8((uint64_t)v11, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_1D59F310C((uint64_t)v11);
}

void sub_1D59F306C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59F2BBC();
    v7 = a3(a1, &type metadata for FollowSportsTagEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59F30C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FollowSportsTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59F310C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FollowSportsTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59F3148@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FollowSportsTagEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59F315C(_QWORD *a1)
{
  return FollowSportsTagEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59F3170@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50128, a1);
}

uint64_t sub_1D59F3194@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50140, a1);
}

uint64_t getEnumTagSinglePayload for FollowSportsTagEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59F31C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FollowSportsTagEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59F3330(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for FollowSportsTagEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59F34A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowSportsTagEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59F3530(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D59F35AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FollowSportsTagEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D59F368C + 4 * byte_1D5ADA1BA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D59F36C0 + 4 * byte_1D5ADA1B5[v4]))();
}

uint64_t sub_1D59F36C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F36C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59F36D0);
  return result;
}

uint64_t sub_1D59F36DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59F36E4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D59F36E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F36F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FollowSportsTagEvent.Model.CodingKeys()
{
  return &type metadata for FollowSportsTagEvent.Model.CodingKeys;
}

unint64_t sub_1D59F3710()
{
  unint64_t result;

  result = qword_1EFF502B0;
  if (!qword_1EFF502B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADA3A4, &type metadata for FollowSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF502B0);
  }
  return result;
}

unint64_t sub_1D59F3758()
{
  unint64_t result;

  result = qword_1EFF502B8;
  if (!qword_1EFF502B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADA314, &type metadata for FollowSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF502B8);
  }
  return result;
}

unint64_t sub_1D59F37A0()
{
  unint64_t result;

  result = qword_1EFF502C0;
  if (!qword_1EFF502C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADA33C, &type metadata for FollowSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF502C0);
  }
  return result;
}

uint64_t sub_1D59F37E4()
{
  return 0;
}

uint64_t sub_1D59F37F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1D59F381C()
{
  sub_1D59F3984();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59F3844()
{
  sub_1D59F3984();
  return sub_1D5AAEEE0();
}

uint64_t NotificationTagData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59F392C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59F3984();
  sub_1D5AAEEC8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1D59F392C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF502C8)
  {
    sub_1D59F3984();
    v0 = sub_1D5AAED90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF502C8);
  }
}

unint64_t sub_1D59F3984()
{
  unint64_t result;

  result = qword_1EFF502D0;
  if (!qword_1EFF502D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADA520, &type metadata for NotificationTagData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF502D0);
  }
  return result;
}

uint64_t NotificationTagData.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

unint64_t sub_1D59F39F0()
{
  unint64_t result;

  result = qword_1EFF502D8;
  if (!qword_1EFF502D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationTagData, &type metadata for NotificationTagData);
    atomic_store(result, (unint64_t *)&qword_1EFF502D8);
  }
  return result;
}

unint64_t sub_1D59F3A38()
{
  unint64_t result;

  result = qword_1EFF502E0;
  if (!qword_1EFF502E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationTagData, &type metadata for NotificationTagData);
    atomic_store(result, (unint64_t *)&qword_1EFF502E0);
  }
  return result;
}

uint64_t sub_1D59F3A7C(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1D59F3AA0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59F392C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59F3984();
  sub_1D5AAEEC8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for NotificationTagData()
{
  return &type metadata for NotificationTagData;
}

ValueMetadata *type metadata accessor for NotificationTagData.CodingKeys()
{
  return &type metadata for NotificationTagData.CodingKeys;
}

unint64_t sub_1D59F3B84()
{
  unint64_t result;

  result = qword_1ED9CD0A8;
  if (!qword_1ED9CD0A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADA4D0, &type metadata for NotificationTagData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD0A8);
  }
  return result;
}

unint64_t sub_1D59F3BCC()
{
  unint64_t result;

  result = qword_1EFF502E8;
  if (!qword_1EFF502E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADA4F8, &type metadata for NotificationTagData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF502E8);
  }
  return result;
}

NewsAnalytics::DialogStyle_optional __swiftcall DialogStyle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::DialogStyle_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DialogStyle.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59F3C94 + 4 * byte_1D5ADA570[*v0]))(0x656E696C6E69, 0xE600000000000000);
}

uint64_t sub_1D59F3C94()
{
  return 0x72656E6E6162;
}

uint64_t sub_1D59F3CA4()
{
  return 0x7473616F74;
}

uint64_t sub_1D59F3CB8()
{
  return 0x6954656C62627562;
}

void sub_1D59F3CD4(char *a1)
{
  sub_1D5A3D854(*a1);
}

unint64_t sub_1D59F3CE4()
{
  unint64_t result;

  result = qword_1EFF502F0;
  if (!qword_1EFF502F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DialogStyle, &type metadata for DialogStyle);
    atomic_store(result, (unint64_t *)&qword_1EFF502F0);
  }
  return result;
}

void sub_1D59F3D28()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D59F3D70()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D59F3DD8()
{
  __asm { BR              X10 }
}

uint64_t sub_1D59F3E10()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D59F3E64()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D59F3EA8()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::DialogStyle_optional sub_1D59F3F10(Swift::String *a1)
{
  return DialogStyle.init(rawValue:)(*a1);
}

uint64_t sub_1D59F3F1C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D59F3F48 + 4 * byte_1D5ADA580[*v0]))();
}

void sub_1D59F3F48(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x72656E6E6162;
  a1[1] = v1;
}

void sub_1D59F3F5C(_QWORD *a1@<X8>)
{
  *a1 = 0x7473616F74;
  a1[1] = 0xE500000000000000;
}

void sub_1D59F3F74(_QWORD *a1@<X8>)
{
  *a1 = 0x6954656C62627562;
  a1[1] = 0xE900000000000070;
}

uint64_t sub_1D59F3F94()
{
  sub_1D59F4108();
  return sub_1D5AAE928();
}

uint64_t sub_1D59F3FF0()
{
  sub_1D59F4108();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for DialogStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D59F4088 + 4 * byte_1D5ADA589[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D59F40BC + 4 * byte_1D5ADA584[v4]))();
}

uint64_t sub_1D59F40BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F40C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59F40CCLL);
  return result;
}

uint64_t sub_1D59F40D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59F40E0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D59F40E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F40EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DialogStyle()
{
  return &type metadata for DialogStyle;
}

unint64_t sub_1D59F4108()
{
  unint64_t result;

  result = qword_1ED9CD750;
  if (!qword_1ED9CD750)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DialogStyle, &type metadata for DialogStyle);
    atomic_store(result, (unint64_t *)&qword_1ED9CD750);
  }
  return result;
}

NewsAnalytics::PurchaseSource_optional __swiftcall PurchaseSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::PurchaseSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PurchaseSource.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59F41D4 + 4 * byte_1D5ADA6A4[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D59F41D4()
{
  return 0x65726F7453707061;
}

uint64_t sub_1D59F41EC()
{
  return 1937204590;
}

uint64_t sub_1D59F41FC()
{
  return 6448503;
}

void sub_1D59F420C(char *a1)
{
  sub_1D5A3C430(*a1);
}

unint64_t sub_1D59F421C()
{
  unint64_t result;

  result = qword_1EFF502F8;
  if (!qword_1EFF502F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseSource, &type metadata for PurchaseSource);
    atomic_store(result, (unint64_t *)&qword_1EFF502F8);
  }
  return result;
}

void sub_1D59F4260()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D59F42AC()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D59F430C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D59F4348()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D59F4394()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D59F43DC()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::PurchaseSource_optional sub_1D59F443C(Swift::String *a1)
{
  return PurchaseSource.init(rawValue:)(*a1);
}

uint64_t sub_1D59F4448()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D59F4478 + 4 * byte_1D5ADA6B4[*v0]))();
}

void sub_1D59F4478(_QWORD *a1@<X8>)
{
  *a1 = 0x65726F7453707061;
  a1[1] = 0xE800000000000000;
}

void sub_1D59F4494(_QWORD *a1@<X8>)
{
  *a1 = 1937204590;
  a1[1] = 0xE400000000000000;
}

void sub_1D59F44A8(_QWORD *a1@<X8>)
{
  *a1 = 6448503;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1D59F44BC()
{
  sub_1D59F4630();
  return sub_1D5AAE928();
}

uint64_t sub_1D59F4518()
{
  sub_1D59F4630();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for PurchaseSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D59F45B0 + 4 * byte_1D5ADA6BD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D59F45E4 + 4 * byte_1D5ADA6B8[v4]))();
}

uint64_t sub_1D59F45E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F45EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59F45F4);
  return result;
}

uint64_t sub_1D59F4600(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59F4608);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D59F460C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F4614(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseSource()
{
  return &type metadata for PurchaseSource;
}

unint64_t sub_1D59F4630()
{
  unint64_t result;

  result = qword_1EFF50300;
  if (!qword_1EFF50300)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseSource, &type metadata for PurchaseSource);
    atomic_store(result, (unint64_t *)&qword_1EFF50300);
  }
  return result;
}

NewsAnalytics::NotificationInterruptionLevel_optional __swiftcall NotificationInterruptionLevel.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::NotificationInterruptionLevel_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t NotificationInterruptionLevel.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59F46FC + 4 * byte_1D5ADA7E0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D59F46FC()
{
  return 0x65766973736170;
}

uint64_t sub_1D59F4710()
{
  return 0x657669746361;
}

uint64_t sub_1D59F4724()
{
  return 0x736E6553656D6974;
}

uint64_t sub_1D59F4748()
{
  return 0x6C61636974697263;
}

void sub_1D59F4760(char *a1)
{
  sub_1D5A36324(*a1);
}

unint64_t sub_1D59F4770()
{
  unint64_t result;

  result = qword_1EFF50308;
  if (!qword_1EFF50308)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationInterruptionLevel, &type metadata for NotificationInterruptionLevel);
    atomic_store(result, (unint64_t *)&qword_1EFF50308);
  }
  return result;
}

void sub_1D59F47B4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D59F4800()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D59F488C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D59F48C8()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D59F4940()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D59F4988()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::NotificationInterruptionLevel_optional sub_1D59F4A14(Swift::String *a1)
{
  return NotificationInterruptionLevel.init(rawValue:)(*a1);
}

uint64_t sub_1D59F4A20()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D59F4A50 + 4 * byte_1D5ADA7F4[*v0]))();
}

void sub_1D59F4A50(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x65766973736170;
  a1[1] = v1;
}

void sub_1D59F4A68(_QWORD *a1@<X8>)
{
  *a1 = 0x657669746361;
  a1[1] = 0xE600000000000000;
}

void sub_1D59F4A80(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "timeSensitive");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1D59F4AA8(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61636974697263;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1D59F4AC4()
{
  sub_1D59F4C38();
  return sub_1D5AAE928();
}

uint64_t sub_1D59F4B20()
{
  sub_1D59F4C38();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for NotificationInterruptionLevel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D59F4BB8 + 4 * byte_1D5ADA7FE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D59F4BEC + 4 * byte_1D5ADA7F9[v4]))();
}

uint64_t sub_1D59F4BEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F4BF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59F4BFCLL);
  return result;
}

uint64_t sub_1D59F4C08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59F4C10);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D59F4C14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F4C1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationInterruptionLevel()
{
  return &type metadata for NotificationInterruptionLevel;
}

unint64_t sub_1D59F4C38()
{
  unint64_t result;

  result = qword_1EFF50310;
  if (!qword_1EFF50310)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationInterruptionLevel, &type metadata for NotificationInterruptionLevel);
    atomic_store(result, (unint64_t *)&qword_1EFF50310);
  }
  return result;
}

NewsAnalytics::NotificationSubscribedAction_optional __swiftcall NotificationSubscribedAction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::NotificationSubscribedAction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t NotificationSubscribedAction.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1869903201;
  if (*v0 != 1)
    v1 = 0x746963696C707865;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D59F4D28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3696C(*a1, *a2);
}

unint64_t sub_1D59F4D38()
{
  unint64_t result;

  result = qword_1EFF50318;
  if (!qword_1EFF50318)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSubscribedAction, &type metadata for NotificationSubscribedAction);
    atomic_store(result, (unint64_t *)&qword_1EFF50318);
  }
  return result;
}

uint64_t sub_1D59F4D7C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59F4E14()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59F4E88()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::NotificationSubscribedAction_optional sub_1D59F4F1C(Swift::String *a1)
{
  return NotificationSubscribedAction.init(rawValue:)(*a1);
}

void sub_1D59F4F28(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE400000000000000;
  v5 = 1869903201;
  if (v2 != 1)
  {
    v5 = 0x746963696C707865;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D59F4F80()
{
  sub_1D59F50F4();
  return sub_1D5AAE928();
}

uint64_t sub_1D59F4FDC()
{
  sub_1D59F50F4();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for NotificationSubscribedAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59F5074 + 4 * byte_1D5ADA945[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59F50A8 + 4 * byte_1D5ADA940[v4]))();
}

uint64_t sub_1D59F50A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F50B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59F50B8);
  return result;
}

uint64_t sub_1D59F50C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59F50CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59F50D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F50D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSubscribedAction()
{
  return &type metadata for NotificationSubscribedAction;
}

unint64_t sub_1D59F50F4()
{
  unint64_t result;

  result = qword_1EFF50320;
  if (!qword_1EFF50320)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSubscribedAction, &type metadata for NotificationSubscribedAction);
    atomic_store(result, (unint64_t *)&qword_1EFF50320);
  }
  return result;
}

uint64_t sub_1D59F5138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  int64_t v23;
  unsigned int *v24;
  int64_t v25;
  int v26;
  int v27;
  char v28;
  int v29;
  void *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  void *v41;
  char **p_name;
  id v43;
  char **v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t result;
  uint64_t v81;
  unint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void *v92;
  uint64_t ObjectType;
  unint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;

  v1 = sub_1D5AADC8C();
  v91 = *(_QWORD *)(v1 - 8);
  v92 = (void *)v1;
  MEMORY[0x1E0C80A78](v1);
  v90 = (char *)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1D5AADC68();
  v3 = *(_QWORD *)(v89 - 8);
  v4 = MEMORY[0x1E0C80A78](v89);
  v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v81 - v7;
  v9 = sub_1D5AAE340();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B5C60(0, &qword_1EFF50498, (void (*)(uint64_t))sub_1D59F5EE8);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D5ABF230;
  v88 = (uint64_t *)(v13 + 32);
  v84 = v0;
  ObjectType = swift_getObjectType();
  sub_1D5AADE00();
  v14 = sub_1D5AADC5C();
  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16 = v8;
  v17 = v89;
  v15(v16, v89);
  *v12 = v14 & 1;
  v18 = *MEMORY[0x1E0DB6810];
  v96 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v97 = v9;
  v96(v12, v18, v9);
  v95 = sub_1D5AAE3A0();
  *(_QWORD *)(v13 + 56) = v95;
  v19 = sub_1D59F5F3C();
  v83 = (uint64_t *)v13;
  v94 = v19;
  *(_QWORD *)(v13 + 64) = v19;
  __swift_allocate_boxed_opaque_existential_1(v88);
  sub_1D5AAE394();
  sub_1D57B5C60(0, (unint64_t *)&unk_1EFF504B0, (void (*)(uint64_t))MEMORY[0x1E0DB57C8]);
  v20 = *(_QWORD *)(sub_1D5AAD86C() - 8);
  v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v86 = *(_QWORD *)(v20 + 72);
  v85 = swift_allocObject();
  *(_OWORD *)(v85 + 16) = xmmword_1D5ABA5C0;
  sub_1D5AADE00();
  v22 = (uint64_t *)sub_1D5AADC50();
  v15(v6, v17);
  v23 = v22[2];
  v24 = (unsigned int *)MEMORY[0x1E0DB6820];
  if (v23)
  {
    v82 = v21;
    v101 = MEMORY[0x1E0DEE9D8];
    sub_1D5AAB088(0, v23, 0);
    v25 = sub_1D59F5F84((uint64_t)v22);
    v27 = v26;
    v29 = v28 & 1;
    v88 = v22;
    v89 = (uint64_t)(v22 + 7);
    v87 = *v24;
    v30 = v92;
    while ((v25 & 0x8000000000000000) == 0 && v25 < 1 << *((_BYTE *)v22 + 32))
    {
      if (((*(_QWORD *)(v89 + (((unint64_t)v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
        goto LABEL_47;
      if (*((_DWORD *)v22 + 9) != v27)
        goto LABEL_48;
      LODWORD(ObjectType) = v29;
      v31 = v22[6];
      v32 = v90;
      v33 = v91;
      (*(void (**)(char *, uint64_t, void *))(v91 + 16))(v90, v31 + *(_QWORD *)(v91 + 72) * v25, v30);
      v99 = v95;
      v100 = v94;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v98);
      sub_1D5AADC74();
      *(_QWORD *)v12 = 0;
      *((_QWORD *)v12 + 1) = 0;
      v96(v12, v87, v97);
      sub_1D5AAE394();
      (*(void (**)(char *, void *))(v33 + 8))(v32, v30);
      v34 = v101;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D5AAB088(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v34 = v101;
      }
      v36 = *(_QWORD *)(v34 + 16);
      v35 = *(_QWORD *)(v34 + 24);
      v22 = v88;
      if (v36 >= v35 >> 1)
      {
        sub_1D5AAB088((_QWORD *)(v35 > 1), v36 + 1, 1);
        v34 = v101;
      }
      *(_QWORD *)(v34 + 16) = v36 + 1;
      sub_1D57ADBD0(&v98, v34 + 40 * v36 + 32);
      v37 = sub_1D59F6024(v25, v27, ObjectType & 1, (uint64_t)v22);
      v25 = v37;
      v27 = v38;
      v29 = v39 & 1;
      if (!--v23)
      {
        sub_1D59F6108(v37, v38, v29);
        swift_bridgeObjectRelease();
        v24 = (unsigned int *)MEMORY[0x1E0DB6820];
        v21 = v82;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  swift_bridgeObjectRelease();
LABEL_14:
  v40 = v85 + v21;
  sub_1D5AAD860();
  v41 = *(void **)(v84 + 16);
  p_name = &MediaEngageCompletedEventQueryItemsGenerator.name;
  v43 = objc_msgSend(v41, sel_appConfiguration);
  v44 = &MediaEngageCompletedEventQueryItemsGenerator.name;
  if ((objc_msgSend(v43, sel_respondsToSelector_, sel_analyticsDenylistDescriptorsPublic) & 1) == 0)
  {
LABEL_49:
    swift_unknownObjectRelease();
    __break(1u);
LABEL_50:
    swift_unknownObjectRelease();
    __break(1u);
    goto LABEL_51;
  }
  v45 = objc_msgSend(v43, sel_analyticsDenylistDescriptorsPublic);
  swift_unknownObjectRelease();
  v46 = MEMORY[0x1E0DEE9D8];
  if (v45)
  {
    v47 = sub_1D5AAE94C();

    v48 = v47;
  }
  else
  {
    v48 = 0;
    v47 = MEMORY[0x1E0DEE9D8];
  }
  v49 = *(_QWORD *)(v47 + 16);
  v92 = v41;
  ObjectType = v40;
  if (v49)
  {
    v101 = v46;
    v91 = v48;
    swift_bridgeObjectRetain();
    sub_1D5AAB088(0, v49, 0);
    v50 = v101;
    v51 = *v24;
    v52 = v47 + 40;
    do
    {
      v99 = v95;
      v100 = v94;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v98);
      *(_QWORD *)v12 = 0;
      *((_QWORD *)v12 + 1) = 0;
      v96(v12, v51, v97);
      swift_bridgeObjectRetain();
      sub_1D5AAE394();
      v101 = v50;
      v54 = *(_QWORD *)(v50 + 16);
      v53 = *(_QWORD *)(v50 + 24);
      if (v54 >= v53 >> 1)
      {
        sub_1D5AAB088((_QWORD *)(v53 > 1), v54 + 1, 1);
        v50 = v101;
      }
      v52 += 16;
      *(_QWORD *)(v50 + 16) = v54 + 1;
      sub_1D57ADBD0(&v98, v50 + 40 * v54 + 32);
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease();
    v24 = (unsigned int *)MEMORY[0x1E0DB6820];
    v41 = v92;
    p_name = (char **)(&MediaEngageCompletedEventQueryItemsGenerator + 24);
    v44 = (char **)(&MediaEngageCompletedEventQueryItemsGenerator + 24);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  sub_1D5AAD860();
  swift_bridgeObjectRelease();
  v55 = objc_msgSend(v41, p_name[337]);
  if ((objc_msgSend(v55, v44[101], sel_analyticsDenylistDescriptorsSeed) & 1) == 0)
    goto LABEL_50;
  v56 = objc_msgSend(v55, sel_analyticsDenylistDescriptorsSeed);
  swift_unknownObjectRelease();
  v57 = MEMORY[0x1E0DEE9D8];
  if (v56)
  {
    v58 = sub_1D5AAE94C();

    v59 = v58;
    v60 = *(_QWORD *)(v58 + 16);
    if (v60)
      goto LABEL_28;
LABEL_34:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  v59 = 0;
  v58 = MEMORY[0x1E0DEE9D8];
  v60 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (!v60)
    goto LABEL_34;
LABEL_28:
  v101 = v57;
  v91 = v59;
  swift_bridgeObjectRetain();
  sub_1D5AAB088(0, v60, 0);
  v61 = v101;
  v62 = *v24;
  v63 = v58 + 40;
  do
  {
    v99 = v95;
    v100 = v94;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v98);
    *(_QWORD *)v12 = 0;
    *((_QWORD *)v12 + 1) = 0;
    v96(v12, v62, v97);
    swift_bridgeObjectRetain();
    sub_1D5AAE394();
    v101 = v61;
    v65 = *(_QWORD *)(v61 + 16);
    v64 = *(_QWORD *)(v61 + 24);
    if (v65 >= v64 >> 1)
    {
      sub_1D5AAB088((_QWORD *)(v64 > 1), v65 + 1, 1);
      v61 = v101;
    }
    v63 += 16;
    *(_QWORD *)(v61 + 16) = v65 + 1;
    sub_1D57ADBD0(&v98, v61 + 40 * v65 + 32);
    --v60;
  }
  while (v60);
  swift_bridgeObjectRelease();
  v24 = (unsigned int *)MEMORY[0x1E0DB6820];
  v41 = v92;
  p_name = (char **)(&MediaEngageCompletedEventQueryItemsGenerator + 24);
  v44 = (char **)(&MediaEngageCompletedEventQueryItemsGenerator + 24);
LABEL_35:
  sub_1D5AAD860();
  swift_bridgeObjectRelease();
  v66 = objc_msgSend(v41, p_name[337]);
  if ((objc_msgSend(v66, v44[101], sel_analyticsDenylistDescriptorsInternal) & 1) != 0)
  {
    v67 = objc_msgSend(v66, sel_analyticsDenylistDescriptorsInternal);
    swift_unknownObjectRelease();
    v68 = MEMORY[0x1E0DEE9D8];
    if (v67)
    {
      v69 = sub_1D5AAE94C();

      v70 = v69;
      v71 = *(_QWORD *)(v69 + 16);
      if (v71)
        goto LABEL_38;
    }
    else
    {
      v70 = 0;
      v69 = MEMORY[0x1E0DEE9D8];
      v71 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v71)
      {
LABEL_38:
        v101 = v68;
        v92 = (void *)v70;
        swift_bridgeObjectRetain();
        sub_1D5AAB088(0, v71, 0);
        v72 = v101;
        v73 = *v24;
        v74 = v69 + 40;
        do
        {
          v99 = v95;
          v100 = v94;
          __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v98);
          *(_QWORD *)v12 = 0;
          *((_QWORD *)v12 + 1) = 0;
          v96(v12, v73, v97);
          swift_bridgeObjectRetain();
          sub_1D5AAE394();
          v101 = v72;
          v76 = *(_QWORD *)(v72 + 16);
          v75 = *(_QWORD *)(v72 + 24);
          if (v76 >= v75 >> 1)
          {
            sub_1D5AAB088((_QWORD *)(v75 > 1), v76 + 1, 1);
            v72 = v101;
          }
          v74 += 16;
          *(_QWORD *)(v72 + 16) = v76 + 1;
          sub_1D57ADBD0(&v98, v72 + 40 * v76 + 32);
          --v71;
        }
        while (v71);
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRetain();
LABEL_45:
    swift_bridgeObjectRelease();
    v77 = v83;
    sub_1D5AAD860();
    swift_bridgeObjectRelease();
    v78 = sub_1D5AAD854();
    v79 = MEMORY[0x1E0DB5790];
    v77[12] = v78;
    v77[13] = v79;
    __swift_allocate_boxed_opaque_existential_1(v77 + 9);
    sub_1D5AAD848();
    return (uint64_t)v77;
  }
LABEL_51:
  result = swift_unknownObjectRelease();
  __break(1u);
  return result;
}

uint64_t DenylistDescriptor.debugItem.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v0 = sub_1D5AAE340();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5AADC74();
  *v3 = 0;
  v3[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB6820], v0);
  return sub_1D5AAE394();
}

uint64_t String.denylistDescriptorValueDebugItem.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = sub_1D5AAE340();
  MEMORY[0x1E0C80A78](v0);
  v2 = (uint64_t *)((char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v2 = 0;
  v2[1] = 0;
  (*(void (**)(_QWORD *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB6820]);
  swift_bridgeObjectRetain();
  return sub_1D5AAE394();
}

uint64_t dispatch thunk of PrivacyValidationDebugGroupProviderType.makeGroup()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D59F5D24()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PrivacyValidationDebugGroupProvider()
{
  return objc_opt_self();
}

uint64_t sub_1D59F5D70()
{
  return sub_1D59F5138();
}

uint64_t sub_1D59F5D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  v1 = v0
     + OBJC_IVAR____TtC13NewsAnalyticsP33_4BAC674B03D5EF9FD60C84EBCE16AA2930DebugPrivacyValidationProvider_privacyValidation;
  v2 = sub_1D5AADC68();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D59F5DE8()
{
  return type metadata accessor for DebugPrivacyValidationProvider();
}

uint64_t type metadata accessor for DebugPrivacyValidationProvider()
{
  uint64_t result;

  result = qword_1EFF50408;
  if (!qword_1EFF50408)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D59F5E2C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADC68();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D59F5EA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1
     + OBJC_IVAR____TtC13NewsAnalyticsP33_4BAC674B03D5EF9FD60C84EBCE16AA2930DebugPrivacyValidationProvider_privacyValidation;
  v4 = sub_1D5AADC68();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D59F5EE8()
{
  unint64_t result;

  result = qword_1EFF504A0;
  if (!qword_1EFF504A0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFF504A0);
  }
  return result;
}

unint64_t sub_1D59F5F3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFF504A8;
  if (!qword_1EFF504A8)
  {
    v1 = sub_1D5AAE3A0();
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DBC828], v1);
    atomic_store(result, (unint64_t *)&qword_1EFF504A8);
  }
  return result;
}

uint64_t sub_1D59F5F84(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1D59F6024(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D59F6108(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

NewsAnalytics::NetworkEventType_optional __swiftcall NetworkEventType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::NetworkEventType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEE08();
  result.value = swift_bridgeObjectRelease();
  v5 = 19;
  if (v3 < 0x13)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1D59F6174(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3B2A4(*a1, *a2);
}

unint64_t sub_1D59F6184()
{
  unint64_t result;

  result = qword_1EFF504C0;
  if (!qword_1EFF504C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NetworkEventType, &type metadata for NetworkEventType);
    atomic_store(result, (unint64_t *)&qword_1EFF504C0);
  }
  return result;
}

uint64_t sub_1D59F61C8()
{
  sub_1D5AAEE80();
  NetworkEventType.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59F622C()
{
  NetworkEventType.rawValue.getter();
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59F627C()
{
  sub_1D5AAEE80();
  NetworkEventType.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::NetworkEventType_optional sub_1D59F62DC(Swift::String *a1)
{
  return NetworkEventType.init(rawValue:)(*a1);
}

uint64_t sub_1D59F62E8()
{
  sub_1D579F328();
  return sub_1D5AAE928();
}

uint64_t getEnumTagSinglePayload for NetworkEventType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkEventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1D59F6420 + 4 * byte_1D5ADAB98[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1D59F6454 + 4 * byte_1D5ADAB93[v4]))();
}

uint64_t sub_1D59F6454(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F645C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59F6464);
  return result;
}

uint64_t sub_1D59F6470(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59F6478);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1D59F647C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F6484(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

NewsAnalytics::GroupType_optional __swiftcall GroupType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsAnalytics::GroupType_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1D5AAEE08();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 64;
  switch(v3)
  {
    case 0:
      goto LABEL_66;
    case 1:
      v5 = 1;
      goto LABEL_66;
    case 2:
      v5 = 2;
      goto LABEL_66;
    case 3:
      v5 = 3;
      goto LABEL_66;
    case 4:
      v5 = 4;
      goto LABEL_66;
    case 5:
      v5 = 5;
      goto LABEL_66;
    case 6:
      v5 = 6;
      goto LABEL_66;
    case 7:
      v5 = 7;
      goto LABEL_66;
    case 8:
      v5 = 8;
      goto LABEL_66;
    case 9:
      v5 = 9;
      goto LABEL_66;
    case 10:
      v5 = 10;
      goto LABEL_66;
    case 11:
      v5 = 11;
      goto LABEL_66;
    case 12:
      v5 = 12;
      goto LABEL_66;
    case 13:
      v5 = 13;
      goto LABEL_66;
    case 14:
      v5 = 14;
      goto LABEL_66;
    case 15:
      v5 = 15;
      goto LABEL_66;
    case 16:
      v5 = 16;
      goto LABEL_66;
    case 17:
      v5 = 17;
      goto LABEL_66;
    case 18:
      v5 = 18;
      goto LABEL_66;
    case 19:
      v5 = 19;
      goto LABEL_66;
    case 20:
      v5 = 20;
      goto LABEL_66;
    case 21:
      v5 = 21;
      goto LABEL_66;
    case 22:
      v5 = 22;
      goto LABEL_66;
    case 23:
      v5 = 23;
      goto LABEL_66;
    case 24:
      v5 = 24;
      goto LABEL_66;
    case 25:
      v5 = 25;
      goto LABEL_66;
    case 26:
      v5 = 26;
      goto LABEL_66;
    case 27:
      v5 = 27;
      goto LABEL_66;
    case 28:
      v5 = 28;
      goto LABEL_66;
    case 29:
      v5 = 29;
      goto LABEL_66;
    case 30:
      v5 = 30;
      goto LABEL_66;
    case 31:
      v5 = 31;
      goto LABEL_66;
    case 32:
      v5 = 32;
      goto LABEL_66;
    case 33:
      v5 = 33;
      goto LABEL_66;
    case 34:
      v5 = 34;
      goto LABEL_66;
    case 35:
      v5 = 35;
      goto LABEL_66;
    case 36:
      v5 = 36;
      goto LABEL_66;
    case 37:
      v5 = 37;
      goto LABEL_66;
    case 38:
      v5 = 38;
      goto LABEL_66;
    case 39:
      v5 = 39;
      goto LABEL_66;
    case 40:
      v5 = 40;
      goto LABEL_66;
    case 41:
      v5 = 41;
      goto LABEL_66;
    case 42:
      v5 = 42;
      goto LABEL_66;
    case 43:
      v5 = 43;
      goto LABEL_66;
    case 44:
      v5 = 44;
      goto LABEL_66;
    case 45:
      v5 = 45;
      goto LABEL_66;
    case 46:
      v5 = 46;
      goto LABEL_66;
    case 47:
      v5 = 47;
      goto LABEL_66;
    case 48:
      v5 = 48;
      goto LABEL_66;
    case 49:
      v5 = 49;
      goto LABEL_66;
    case 50:
      v5 = 50;
      goto LABEL_66;
    case 51:
      v5 = 51;
      goto LABEL_66;
    case 52:
      v5 = 52;
      goto LABEL_66;
    case 53:
      v5 = 53;
      goto LABEL_66;
    case 54:
      v5 = 54;
      goto LABEL_66;
    case 55:
      v5 = 55;
      goto LABEL_66;
    case 56:
      v5 = 56;
      goto LABEL_66;
    case 57:
      v5 = 57;
      goto LABEL_66;
    case 58:
      v5 = 58;
      goto LABEL_66;
    case 59:
      v5 = 59;
      goto LABEL_66;
    case 60:
      v5 = 60;
      goto LABEL_66;
    case 61:
      v5 = 61;
      goto LABEL_66;
    case 62:
      v5 = 62;
      goto LABEL_66;
    case 63:
      v5 = 63;
LABEL_66:
      v6 = v5;
      break;
    case 64:
      break;
    case 65:
      v6 = 65;
      break;
    case 66:
      v6 = 66;
      break;
    case 67:
      v6 = 67;
      break;
    case 68:
      v6 = 68;
      break;
    case 69:
      v6 = 69;
      break;
    case 70:
      v6 = 70;
      break;
    case 71:
      v6 = 71;
      break;
    case 72:
      v6 = 72;
      break;
    case 73:
      v6 = 73;
      break;
    case 74:
      v6 = 74;
      break;
    case 75:
      v6 = 75;
      break;
    case 76:
      v6 = 76;
      break;
    case 77:
      v6 = 77;
      break;
    case 78:
      v6 = 78;
      break;
    case 79:
      v6 = 79;
      break;
    case 80:
      v6 = 80;
      break;
    case 81:
      v6 = 81;
      break;
    default:
      v6 = 82;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t sub_1D59F6794(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A352C4(*a1, *a2);
}

uint64_t sub_1D59F67A0()
{
  sub_1D5AAEE80();
  GroupType.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59F6804()
{
  GroupType.rawValue.getter();
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

NewsAnalytics::GroupType_optional sub_1D59F6854(Swift::String *a1)
{
  return GroupType.init(rawValue:)(*a1);
}

uint64_t sub_1D59F6860()
{
  sub_1D57A4690();
  return sub_1D5AAE928();
}

void ResultData.result.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ResultData.result.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ResultData.result.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ResultData __swiftcall ResultData.init(result:)(NewsAnalytics::ResultData result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result.result;
  return result;
}

uint64_t sub_1D59F68F0()
{
  return 0x746C75736572;
}

uint64_t sub_1D59F6904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D59F6990()
{
  sub_1D59F6AE4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59F69B8()
{
  sub_1D59F6AE4();
  return sub_1D5AAEEE0();
}

uint64_t ResultData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D59F6CA4(0, &qword_1EFF504C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59F6AE4();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D59F6B28();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59F6AE4()
{
  unint64_t result;

  result = qword_1EFF504D0;
  if (!qword_1EFF504D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB1C0, &type metadata for ResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF504D0);
  }
  return result;
}

unint64_t sub_1D59F6B28()
{
  unint64_t result;

  result = qword_1EFF504D8;
  if (!qword_1EFF504D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultType, &type metadata for ResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF504D8);
  }
  return result;
}

uint64_t ResultData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D59F6CA4(0, &qword_1EFF504E0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59F6AE4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D59F6D00();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59F6CA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59F6AE4();
    v7 = a3(a1, &type metadata for ResultData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59F6D00()
{
  unint64_t result;

  result = qword_1EFF504E8;
  if (!qword_1EFF504E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultType, &type metadata for ResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF504E8);
  }
  return result;
}

uint64_t sub_1D59F6D4C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ResultData.init(from:)(a1, a2);
}

uint64_t sub_1D59F6D60(_QWORD *a1)
{
  return ResultData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for ResultData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59F6DC0 + 4 * byte_1D5ADB04D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59F6DF4 + 4 * byte_1D5ADB048[v4]))();
}

uint64_t sub_1D59F6DF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F6DFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59F6E04);
  return result;
}

uint64_t sub_1D59F6E10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59F6E18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59F6E1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59F6E24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResultData()
{
  return &type metadata for ResultData;
}

uint64_t storeEnumTagSinglePayload for ResultData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59F6E80 + 4 * byte_1D5ADB052[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59F6EA0 + 4 * byte_1D5ADB057[v4]))();
}

_BYTE *sub_1D59F6E80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59F6EA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59F6EA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59F6EB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59F6EB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59F6EC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ResultData.CodingKeys()
{
  return &type metadata for ResultData.CodingKeys;
}

unint64_t sub_1D59F6EE0()
{
  unint64_t result;

  result = qword_1EFF504F0;
  if (!qword_1EFF504F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB198, &type metadata for ResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF504F0);
  }
  return result;
}

unint64_t sub_1D59F6F28()
{
  unint64_t result;

  result = qword_1EFF504F8;
  if (!qword_1EFF504F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB108, &type metadata for ResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF504F8);
  }
  return result;
}

unint64_t sub_1D59F6F70()
{
  unint64_t result;

  result = qword_1EFF50500;
  if (!qword_1EFF50500)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB130, &type metadata for ResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50500);
  }
  return result;
}

uint64_t sub_1D59F6FB4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF50508, MEMORY[0x1E0CF8078]);
}

uint64_t static AudioUpsellMessageStarted.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50508, a1);
}

uint64_t sub_1D59F6FF4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF50520, MEMORY[0x1E0CF8380]);
}

uint64_t static AudioUpsellMessageStarted.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50520, a1);
}

uint64_t AudioUpsellMessageStarted.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AudioUpsellMessageStarted.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AudioUpsellMessageStarted.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioUpsellMessageStarted.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AudioUpsellMessageStarted(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF505B0);
}

uint64_t AudioUpsellMessageStarted.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioUpsellMessageStarted.articleData.modify())(_QWORD)
{
  type metadata accessor for AudioUpsellMessageStarted(0);
  return nullsub_1;
}

uint64_t AudioUpsellMessageStarted.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioUpsellMessageStarted.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioUpsellMessageStarted.channelData.modify())(_QWORD)
{
  type metadata accessor for AudioUpsellMessageStarted(0);
  return nullsub_1;
}

uint64_t AudioUpsellMessageStarted.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioUpsellMessageStarted.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioUpsellMessageStarted.feedData.modify())(_QWORD)
{
  type metadata accessor for AudioUpsellMessageStarted(0);
  return nullsub_1;
}

uint64_t AudioUpsellMessageStarted.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioUpsellMessageStarted.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioUpsellMessageStarted.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for AudioUpsellMessageStarted(0);
  return nullsub_1;
}

uint64_t AudioUpsellMessageStarted.upsellVariantData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted(0) + 36);
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioUpsellMessageStarted.upsellVariantData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted(0) + 36);
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioUpsellMessageStarted.upsellVariantData.modify())(_QWORD)
{
  type metadata accessor for AudioUpsellMessageStarted(0);
  return nullsub_1;
}

uint64_t AudioUpsellMessageStarted.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AudioUpsellMessageStarted(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v6, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v6, v15);
}

uint64_t AudioUpsellMessageStarted.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AudioUpsellMessageStarted.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for AudioUpsellMessageStarted.Model(0);
  sub_1D580C534(v1 + *(int *)(v3 + 20), (uint64_t)v5);
  sub_1D580C534((uint64_t)v5, a1);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t type metadata accessor for AudioUpsellMessageStarted.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF50650);
}

uint64_t AudioUpsellMessageStarted.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t AudioUpsellMessageStarted.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t AudioUpsellMessageStarted.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted.Model(0) + 32));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AudioUpsellMessageStarted.Model.upsellVariantData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AudioUpsellMessageStarted.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

__n128 AudioUpsellMessageStarted.Model.init(eventData:articleData:channelData:feedData:userBundleSubscriptionContextData:upsellVariantData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __n128 *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  __n128 *v22;
  __n128 result;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[144];

  sub_1D580C534(a2, (uint64_t)v34);
  v26 = a3[1];
  v27 = *a3;
  v13 = *((_QWORD *)a3 + 4);
  v28 = *a4;
  v14 = a4[1].n128_u64[0];
  v15 = *a5;
  v16 = *((_QWORD *)a5 + 1);
  v17 = *((_QWORD *)a5 + 2);
  v18 = a5[24];
  v31 = a5[25];
  v29 = *((_QWORD *)a5 + 5);
  v30 = *((_QWORD *)a5 + 4);
  LOBYTE(a5) = a5[48];
  v32 = a6[1];
  v33 = *a6;
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a7, a1, v19);
  v20 = (int *)type metadata accessor for AudioUpsellMessageStarted.Model(0);
  sub_1D580C534((uint64_t)v34, a7 + v20[5]);
  v21 = a7 + v20[6];
  *(_OWORD *)v21 = v27;
  *(_OWORD *)(v21 + 16) = v26;
  *(_QWORD *)(v21 + 32) = v13;
  v22 = (__n128 *)(a7 + v20[7]);
  result = v28;
  *v22 = v28;
  v22[1].n128_u64[0] = v14;
  v24 = a7 + v20[8];
  *(_BYTE *)v24 = v15;
  *(_QWORD *)(v24 + 8) = v16;
  *(_QWORD *)(v24 + 16) = v17;
  *(_BYTE *)(v24 + 24) = v18;
  *(_BYTE *)(v24 + 25) = v31;
  *(_QWORD *)(v24 + 32) = v30;
  *(_QWORD *)(v24 + 40) = v29;
  *(_BYTE *)(v24 + 48) = (_BYTE)a5;
  v25 = (_QWORD *)(a7 + v20[9]);
  *v25 = v33;
  v25[1] = v32;
  return result;
}

uint64_t sub_1D59F7A34(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59F7A6C + 4 * byte_1D5ADB210[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59F7A6C()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D59F7AA0()
{
  return 0x6174614464656566;
}

unint64_t sub_1D59F7AB8()
{
  return 0xD000000000000021;
}

unint64_t sub_1D59F7AD8()
{
  return 0xD000000000000011;
}

uint64_t sub_1D59F7AF4()
{
  unsigned __int8 *v0;

  return sub_1D59F7A34(*v0);
}

uint64_t sub_1D59F7AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59FA740(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59F7B20()
{
  sub_1D59F7E4C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59F7B48()
{
  sub_1D59F7E4C();
  return sub_1D5AAEEE0();
}

uint64_t AudioUpsellMessageStarted.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  _OWORD v21[2];
  __int128 v22;
  char v23;
  _BYTE v24[144];
  char v25;
  char v26;

  v3 = v1;
  sub_1D59F8378(0, &qword_1EFF50540, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59F7E4C();
  sub_1D5AAEEC8();
  v26 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AudioUpsellMessageStarted.Model(0);
    sub_1D580C534(v3 + v10[5], (uint64_t)v24);
    sub_1D580C534((uint64_t)v24, (uint64_t)v21);
    v25 = 1;
    sub_1D57CB940();
    sub_1D5AAED18();
    v11 = v3 + v10[6];
    v12 = *(_QWORD *)(v11 + 32);
    v13 = *(_OWORD *)(v11 + 16);
    v21[0] = *(_OWORD *)v11;
    v21[1] = v13;
    *(_QWORD *)&v22 = v12;
    v25 = 2;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v14 = v3 + v10[7];
    v15 = *(_QWORD *)(v14 + 16);
    v21[0] = *(_OWORD *)v14;
    *(_QWORD *)&v21[1] = v15;
    v25 = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v16 = v3 + v10[8];
    v17 = *(_BYTE *)(v16 + 24);
    v18 = *(_BYTE *)(v16 + 25);
    v19 = *(_BYTE *)(v16 + 48);
    LOBYTE(v21[0]) = *(_BYTE *)v16;
    *(_OWORD *)((char *)v21 + 8) = *(_OWORD *)(v16 + 8);
    BYTE8(v21[1]) = v17;
    BYTE9(v21[1]) = v18;
    v22 = *(_OWORD *)(v16 + 32);
    v23 = v19;
    v25 = 4;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v21[0] = *(_OWORD *)(v3 + v10[9]);
    v25 = 5;
    sub_1D59AE3CC();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59F7E4C()
{
  unint64_t result;

  result = qword_1EFF50548;
  if (!qword_1EFF50548)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB46C, &type metadata for AudioUpsellMessageStarted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50548);
  }
  return result;
}

uint64_t AudioUpsellMessageStarted.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  char v36;
  _BYTE v37[136];
  char v38[144];
  char v39;
  char v40;

  v27 = a2;
  v3 = sub_1D5AADF98();
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59F8378(0, &qword_1EFF50550, MEMORY[0x1E0DED048]);
  v31 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  v9 = (int *)type metadata accessor for AudioUpsellMessageStarted.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D59F7E4C();
  v30 = v8;
  v13 = v33;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  v14 = v6;
  v15 = v28;
  v38[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v29, v3);
  v40 = 1;
  sub_1D57CB8FC();
  sub_1D5AAEC7C();
  sub_1D580C534((uint64_t)v38, (uint64_t)v37);
  sub_1D580C534((uint64_t)v37, (uint64_t)&v11[v9[5]]);
  v39 = 2;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v16 = v35;
  v17 = &v11[v9[6]];
  v18 = v34[1];
  *(_OWORD *)v17 = v34[0];
  *((_OWORD *)v17 + 1) = v18;
  *((_QWORD *)v17 + 4) = v16;
  v39 = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v19 = *(_QWORD *)&v34[1];
  v20 = &v11[v9[7]];
  *(_OWORD *)v20 = v34[0];
  *((_QWORD *)v20 + 2) = v19;
  v39 = 4;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v21 = BYTE8(v34[1]);
  v22 = BYTE9(v34[1]);
  v23 = v36;
  v24 = &v11[MEMORY[0x20]];
  *v24 = v34[0];
  *(_OWORD *)(v24 + 8) = *(_OWORD *)((char *)v34 + 8);
  v24[24] = v21;
  v24[25] = v22;
  *((_OWORD *)v24 + 2) = v35;
  v24[48] = v23;
  v39 = 5;
  sub_1D59AE384();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v30, v31);
  *(_OWORD *)&v11[MEMORY[0x24]] = v34[0];
  sub_1D59F83D4((uint64_t)v11, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1D59F8418((uint64_t)v11);
}

void sub_1D59F8378(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59F7E4C();
    v7 = a3(a1, &type metadata for AudioUpsellMessageStarted.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59F83D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioUpsellMessageStarted.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59F8418(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioUpsellMessageStarted.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59F8454@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioUpsellMessageStarted.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59F8468(_QWORD *a1)
{
  return AudioUpsellMessageStarted.Model.encode(to:)(a1);
}

uint64_t sub_1D59F847C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50508, a1);
}

uint64_t sub_1D59F84A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50520, a1);
}

uint64_t sub_1D59F84C4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v7, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v7, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioUpsellMessageStarted(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for AudioUpsellMessageStarted(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for AudioUpsellMessageStarted(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for AudioUpsellMessageStarted(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for AudioUpsellMessageStarted(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for AudioUpsellMessageStarted(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioUpsellMessageStarted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59F9180(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AudioUpsellMessageStarted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59F9330(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59F94DC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioUpsellMessageStarted.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 3);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[8] = v10[8];
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v11;
      v9[32] = v10[32];
      v12 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v12;
      *((_WORD *)v9 + 28) = *((_WORD *)v10 + 28);
      v14 = *((_QWORD *)v10 + 8);
      v13 = *((_QWORD *)v10 + 9);
      v9[80] = v10[80];
      *((_QWORD *)v9 + 8) = v14;
      *((_QWORD *)v9 + 9) = v13;
      *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      v9[112] = v10[112];
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      *((_DWORD *)v9 + 32) = *((_DWORD *)v10 + 32);
      v9[132] = v10[132];
      *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v16;
      *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
      v17 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v17;
      v18 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v18;
      v19 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v19;
    }
    v20 = a3[6];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *((_QWORD *)v22 + 1);
    if (v23)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      *((_WORD *)v21 + 8) = *((_WORD *)v22 + 8);
      v24 = *((_QWORD *)v22 + 4);
      *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
      *((_QWORD *)v21 + 4) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v25 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v25;
      *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
    }
    v26 = a3[7];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *((_QWORD *)v28 + 2);
    if (v29 == 1)
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
    }
    else
    {
      *v27 = *v28;
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v29;
      swift_bridgeObjectRetain();
    }
    v30 = a3[8];
    v31 = a3[9];
    v32 = (char *)a1 + v30;
    v33 = (char *)a2 + v30;
    *v32 = *v33;
    v34 = *((_QWORD *)v33 + 2);
    *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
    *((_QWORD *)v32 + 2) = v34;
    *((_WORD *)v32 + 12) = *((_WORD *)v33 + 12);
    v35 = *((_QWORD *)v33 + 5);
    *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
    *((_QWORD *)v32 + 5) = v35;
    v32[48] = v33[48];
    v36 = (uint64_t *)((char *)a1 + v31);
    v37 = (uint64_t *)((char *)a2 + v31);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioUpsellMessageStarted.Model(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[5] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[6] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioUpsellMessageStarted.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 24);
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v10;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    v11 = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = v11;
    *(_WORD *)(v8 + 56) = *(_WORD *)(v9 + 56);
    v13 = *(_QWORD *)(v9 + 64);
    v12 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 72) = v12;
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_DWORD *)(v8 + 128) = *(_DWORD *)(v9 + 128);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_WORD *)(v8 + 133) = *(_WORD *)(v9 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v14;
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    v15 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v15;
    v16 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v16;
    v17 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v17;
  }
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 8);
  if (v21)
  {
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *(_QWORD *)(v19 + 8) = v21;
    *(_WORD *)(v19 + 16) = *(_WORD *)(v20 + 16);
    v22 = *(_QWORD *)(v20 + 32);
    *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
    *(_QWORD *)(v19 + 32) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v23;
    *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  }
  v24 = a3[7];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 16);
  if (v27 == 1)
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  }
  else
  {
    *(_BYTE *)v25 = *(_BYTE *)v26;
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 16) = v27;
    swift_bridgeObjectRetain();
  }
  v28 = a3[8];
  v29 = a3[9];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_BYTE *)v30 = *(_BYTE *)v31;
  v32 = *(_QWORD *)(v31 + 16);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  *(_QWORD *)(v30 + 16) = v32;
  *(_WORD *)(v30 + 24) = *(_WORD *)(v31 + 24);
  v33 = *(_QWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v30 + 40) = v33;
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  v34 = (_QWORD *)(a1 + v29);
  v35 = (_QWORD *)(a2 + v29);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioUpsellMessageStarted.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 24);
  v11 = *(_QWORD *)(a2 + v7 + 24);
  if (v10)
  {
    if (v11)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
      *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      v12 = *(_QWORD *)(v9 + 48);
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      *(_QWORD *)(v8 + 48) = v12;
      *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_QWORD *)(v8 + 72) = v13;
      *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
      *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
      *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
      *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    }
    else
    {
      sub_1D5810518(v8);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v16 = *(_OWORD *)(v9 + 64);
      v18 = *(_OWORD *)(v9 + 16);
      v17 = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 64) = v16;
      *(_OWORD *)(v8 + 16) = v18;
      *(_OWORD *)(v8 + 32) = v17;
      v20 = *(_OWORD *)(v9 + 96);
      v19 = *(_OWORD *)(v9 + 112);
      v21 = *(_OWORD *)(v9 + 80);
      *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
      *(_OWORD *)(v8 + 96) = v20;
      *(_OWORD *)(v8 + 112) = v19;
      *(_OWORD *)(v8 + 80) = v21;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    v14 = *(_QWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    *(_QWORD *)(v8 + 48) = v14;
    *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
    *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
    v15 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 72) = v15;
    *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
    *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
    *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
    *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
    *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v22 = *(_OWORD *)(v9 + 16);
    v23 = *(_OWORD *)(v9 + 32);
    v24 = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 64) = v24;
    *(_OWORD *)(v8 + 16) = v22;
    *(_OWORD *)(v8 + 32) = v23;
    v25 = *(_OWORD *)(v9 + 80);
    v26 = *(_OWORD *)(v9 + 96);
    v27 = *(_OWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    *(_OWORD *)(v8 + 96) = v26;
    *(_OWORD *)(v8 + 112) = v27;
    *(_OWORD *)(v8 + 80) = v25;
  }
  v28 = a3[6];
  v29 = a1 + v28;
  v30 = (__int128 *)(a2 + v28);
  v31 = *(_QWORD *)(a1 + v28 + 8);
  v32 = *(_QWORD *)(a2 + v28 + 8);
  if (v31)
  {
    if (v32)
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *(_QWORD *)(v29 + 8) = *((_QWORD *)v30 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v29 + 16) = *((_BYTE *)v30 + 16);
      *(_BYTE *)(v29 + 17) = *((_BYTE *)v30 + 17);
      *(_QWORD *)(v29 + 24) = *((_QWORD *)v30 + 3);
      *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v29);
      v33 = *((_QWORD *)v30 + 4);
      v34 = v30[1];
      *(_OWORD *)v29 = *v30;
      *(_OWORD *)(v29 + 16) = v34;
      *(_QWORD *)(v29 + 32) = v33;
    }
  }
  else if (v32)
  {
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = *((_QWORD *)v30 + 1);
    *(_BYTE *)(v29 + 16) = *((_BYTE *)v30 + 16);
    *(_BYTE *)(v29 + 17) = *((_BYTE *)v30 + 17);
    *(_QWORD *)(v29 + 24) = *((_QWORD *)v30 + 3);
    *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v35 = *v30;
    v36 = v30[1];
    *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
    *(_OWORD *)v29 = v35;
    *(_OWORD *)(v29 + 16) = v36;
  }
  v37 = a3[7];
  v38 = a1 + v37;
  v39 = (__int128 *)(a2 + v37);
  v40 = *(_QWORD *)(a1 + v37 + 16);
  v41 = *(_QWORD *)(a2 + v37 + 16);
  if (v40 == 1)
  {
    if (v41 == 1)
    {
      v42 = *v39;
      *(_QWORD *)(v38 + 16) = *((_QWORD *)v39 + 2);
      *(_OWORD *)v38 = v42;
    }
    else
    {
      *(_BYTE *)v38 = *(_BYTE *)v39;
      *(_QWORD *)(v38 + 8) = *((_QWORD *)v39 + 1);
      *(_QWORD *)(v38 + 16) = *((_QWORD *)v39 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v41 == 1)
  {
    sub_1D57D9100(v38);
    v43 = *((_QWORD *)v39 + 2);
    *(_OWORD *)v38 = *v39;
    *(_QWORD *)(v38 + 16) = v43;
  }
  else
  {
    *(_BYTE *)v38 = *(_BYTE *)v39;
    *(_QWORD *)(v38 + 8) = *((_QWORD *)v39 + 1);
    *(_QWORD *)(v38 + 16) = *((_QWORD *)v39 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v44 = a3[8];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_BYTE *)v45 = *(_BYTE *)(a2 + v44);
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(a2 + v44 + 8);
  *(_QWORD *)(v45 + 16) = *(_QWORD *)(a2 + v44 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 24) = *(_BYTE *)(v46 + 24);
  *(_BYTE *)(v45 + 25) = *(_BYTE *)(v46 + 25);
  *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
  *(_QWORD *)(v45 + 40) = *(_QWORD *)(v46 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 48) = *(_BYTE *)(v46 + 48);
  v47 = a3[9];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AudioUpsellMessageStarted.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  v22 = a1 + v19;
  v23 = a2 + v19;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_BYTE *)(v22 + 48) = *(_BYTE *)(v23 + 48);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for AudioUpsellMessageStarted.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 24))
  {
    v10 = *(_QWORD *)(v9 + 24);
    if (v10)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
      *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v10;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 48);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = v11;
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
      *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
      *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
      *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
      goto LABEL_6;
    }
    sub_1D5810518(v8);
  }
  v12 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v12;
  *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
  v13 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v13;
  v14 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v14;
  v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
LABEL_6:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 8))
  {
    v19 = *(_QWORD *)(v18 + 8);
    if (v19)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_QWORD *)(v17 + 8) = v19;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
      *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
      v20 = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v17 + 32) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E1784(v17);
  }
  v21 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v21;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
LABEL_11:
  v22 = a3[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  if (*(_QWORD *)(a1 + v22 + 16) != 1)
  {
    v25 = *(_QWORD *)(v24 + 16);
    if (v25 != 1)
    {
      *(_BYTE *)v23 = *(_BYTE *)v24;
      *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
      *(_QWORD *)(v23 + 16) = v25;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57D9100(v23);
  }
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
LABEL_16:
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_BYTE *)v27 = *(_BYTE *)(a2 + v26);
  v29 = *(_QWORD *)(a2 + v26 + 16);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(a2 + v26 + 8);
  *(_QWORD *)(v27 + 16) = v29;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v27 + 24) = *(_BYTE *)(v28 + 24);
  *(_BYTE *)(v27 + 25) = *(_BYTE *)(v28 + 25);
  v30 = *(_QWORD *)(v28 + 40);
  *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
  *(_QWORD *)(v27 + 40) = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v27 + 48) = *(_BYTE *)(v28 + 48);
  v31 = a3[9];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioUpsellMessageStarted.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59FA3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioUpsellMessageStarted.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59FA488(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  return result;
}

uint64_t sub_1D59FA504()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioUpsellMessageStarted.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D59FA5E8 + 4 * byte_1D5ADB21B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D59FA61C + 4 * byte_1D5ADB216[v4]))();
}

uint64_t sub_1D59FA61C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59FA624(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59FA62CLL);
  return result;
}

uint64_t sub_1D59FA638(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59FA640);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D59FA644(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59FA64C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioUpsellMessageStarted.Model.CodingKeys()
{
  return &type metadata for AudioUpsellMessageStarted.Model.CodingKeys;
}

unint64_t sub_1D59FA66C()
{
  unint64_t result;

  result = qword_1EFF50698;
  if (!qword_1EFF50698)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB444, &type metadata for AudioUpsellMessageStarted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50698);
  }
  return result;
}

unint64_t sub_1D59FA6B4()
{
  unint64_t result;

  result = qword_1EFF506A0;
  if (!qword_1EFF506A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB3B4, &type metadata for AudioUpsellMessageStarted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF506A0);
  }
  return result;
}

unint64_t sub_1D59FA6FC()
{
  unint64_t result;

  result = qword_1EFF506A8;
  if (!qword_1EFF506A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB3DC, &type metadata for AudioUpsellMessageStarted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF506A8);
  }
  return result;
}

uint64_t sub_1D59FA740(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF1960)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void __swiftcall TabiData.init(tabiConfigurationVersion:tabiPackageVersions:tabiCachedResources:resolvedGlobalGraph:requestSummary:)(NewsAnalytics::TabiData *__return_ptr retstr, Swift::String tabiConfigurationVersion, Swift::OpaquePointer tabiPackageVersions, Swift::OpaquePointer tabiCachedResources, Swift::Bool resolvedGlobalGraph, NewsAnalytics::TabiRequestSummary_optional *requestSummary)
{
  __int128 v6;
  __int128 v7;

  v6 = *(_OWORD *)&requestSummary->value.feedPersonalization._rawValue;
  *(_OWORD *)&retstr->requestSummary.value.channelPicker._rawValue = *(_OWORD *)&requestSummary->value.channelPicker._rawValue;
  *(_OWORD *)&retstr->requestSummary.value.feedPersonalization._rawValue = v6;
  v7 = *(_OWORD *)&requestSummary->value.tagScoring._rawValue;
  *(_OWORD *)&retstr->requestSummary.value.recommendedIssues._rawValue = *(_OWORD *)&requestSummary->value.recommendedIssues._rawValue;
  retstr->tabiConfigurationVersion = tabiConfigurationVersion;
  retstr->tabiPackageVersions = tabiPackageVersions;
  retstr->tabiCachedResources = tabiCachedResources;
  retstr->resolvedGlobalGraph = resolvedGlobalGraph;
  *(_OWORD *)&retstr->requestSummary.value.tagScoring._rawValue = v7;
}

uint64_t TabiData.tabiConfigurationVersion.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TabiData.tabiConfigurationVersion.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TabiData.tabiConfigurationVersion.modify())()
{
  return nullsub_1;
}

uint64_t TabiData.tabiPackageVersions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TabiData.tabiPackageVersions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*TabiData.tabiPackageVersions.modify())()
{
  return nullsub_1;
}

uint64_t TabiData.tabiCachedResources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TabiData.tabiCachedResources.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*TabiData.tabiCachedResources.modify())()
{
  return nullsub_1;
}

uint64_t TabiData.resolvedGlobalGraph.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t TabiData.resolvedGlobalGraph.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*TabiData.resolvedGlobalGraph.modify())()
{
  return nullsub_1;
}

uint64_t TabiData.requestSummary.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1[5];
  v3 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  v6 = v1[9];
  v7 = v1[10];
  v8 = v1[11];
  v9 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_1D586E278(v2);
}

__n128 TabiData.requestSummary.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  sub_1D58B0684(*(_QWORD *)(v1 + 40));
  *(_OWORD *)(v1 + 40) = v7;
  *(_OWORD *)(v1 + 56) = v6;
  result = v5;
  *(__n128 *)(v1 + 72) = v5;
  *(_QWORD *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v3;
  return result;
}

uint64_t (*TabiData.requestSummary.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D59FABC4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D59FAC00 + 4 * byte_1D5ADB4BC[a1]))(0xD000000000000018, 0x80000001D5AF1980);
}

unint64_t sub_1D59FAC00()
{
  return 0xD000000000000013;
}

uint64_t sub_1D59FAC34()
{
  return 0x5374736575716572;
}

uint64_t sub_1D59FAC58()
{
  unsigned __int8 *v0;

  return sub_1D59FABC4(*v0);
}

uint64_t sub_1D59FAC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59FBBB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59FAC84()
{
  sub_1D59FAF40();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59FACAC()
{
  sub_1D59FAF40();
  return sub_1D5AAEEE0();
}

uint64_t TabiData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;

  sub_1D59FB414(0, &qword_1ED9D0DD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v17 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v25 = *(_QWORD *)(v1 + 24);
  v26 = v8;
  v36 = *(unsigned __int8 *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 48);
  v23 = *(_QWORD *)(v1 + 56);
  v24 = v10;
  v11 = *(_QWORD *)(v1 + 64);
  v21 = *(_QWORD *)(v1 + 72);
  v22 = v11;
  v12 = *(_QWORD *)(v1 + 80);
  v19 = *(_QWORD *)(v1 + 88);
  v20 = v12;
  v13 = *(_QWORD *)(v1 + 96);
  v17 = v9;
  v18 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59FAF40();
  sub_1D5AAEEC8();
  LOBYTE(v28) = 0;
  v14 = v27;
  sub_1D5AAED3C();
  if (!v14)
  {
    v15 = v25;
    v28 = v26;
    v37 = 1;
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1D5AAED6C();
    v28 = v15;
    v37 = 2;
    sub_1D5AAED6C();
    LOBYTE(v28) = 3;
    sub_1D5AAED48();
    v28 = v17;
    v29 = v24;
    v30 = v23;
    v31 = v22;
    v32 = v21;
    v33 = v20;
    v34 = v19;
    v35 = v18;
    v37 = 4;
    sub_1D59D1F78();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59FAF40()
{
  unint64_t result;

  result = qword_1ED9D0BA0;
  if (!qword_1ED9D0BA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB640, &type metadata for TabiData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0BA0);
  }
  return result;
}

uint64_t TabiData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char v53;

  sub_1D59FB414(0, &qword_1ED9D0D20, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59FAF40();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v30 = 0;
  }
  else
  {
    LOBYTE(v44) = 0;
    v10 = sub_1D5AAECA0();
    v13 = v12;
    v42 = v10;
    v43 = a2;
    sub_1D57B4558();
    v53 = 1;
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v53 = 2;
    v41 = v44;
    swift_bridgeObjectRetain();
    v40 = 0;
    sub_1D5AAECD0();
    v14 = v44;
    LOBYTE(v44) = 3;
    swift_bridgeObjectRetain();
    v15 = sub_1D5AAECAC();
    v53 = 4;
    sub_1D59D1F30();
    sub_1D5AAEC7C();
    v52 = v15 & 1;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v17 = v44;
    v16 = v45;
    v38 = v49;
    v39 = v48;
    v36 = v51;
    v37 = v50;
    v32 = v46;
    v34 = v47;
    sub_1D586E278(v44);
    sub_1D58B0684(0);
    v35 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = v17;
    v40 = v16;
    sub_1D586E278(v17);
    v18 = v17;
    v19 = v32;
    v20 = v34;
    sub_1D58B0684(v18);
    v21 = v35;
    swift_bridgeObjectRelease();
    v22 = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v43;
    *v43 = v42;
    v23[1] = v21;
    v23[2] = v22;
    v23[3] = v14;
    *((_BYTE *)v23 + 32) = v52;
    v24 = v33;
    v26 = v39;
    v25 = v40;
    v23[5] = v33;
    v23[6] = v25;
    v23[7] = v19;
    v23[8] = v20;
    v27 = v37;
    v28 = v38;
    v23[9] = v26;
    v23[10] = v28;
    v29 = v36;
    v23[11] = v27;
    v23[12] = v29;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = v24;
  }
  return sub_1D58B0684(v30);
}

void sub_1D59FB414(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59FAF40();
    v7 = a3(a1, &type metadata for TabiData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59FB478@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return TabiData.init(from:)(a1, a2);
}

uint64_t sub_1D59FB48C(_QWORD *a1)
{
  return TabiData.encode(to:)(a1);
}

uint64_t destroy for TabiData(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TabiData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 48);
    v9 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v8;
    v10 = *(_QWORD *)(a2 + 64);
    v11 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 64) = v10;
    v12 = *(_QWORD *)(a2 + 80);
    v13 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 72) = v11;
    *(_QWORD *)(a1 + 80) = v12;
    v14 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v13;
    *(_QWORD *)(a1 + 96) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = v7[1];
    *(_OWORD *)(a1 + 40) = *v7;
    *(_OWORD *)(a1 + 56) = v15;
    v16 = v7[3];
    *(_OWORD *)(a1 + 72) = v7[2];
    *(_OWORD *)(a1 + 88) = v16;
  }
  return a1;
}

uint64_t assignWithCopy for TabiData(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = (__int128 *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 40);
  if (v5)
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D586E8CC(a1 + 40);
      v8 = *(_OWORD *)(a2 + 88);
      v10 = *v7;
      v9 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v8;
      *v4 = v10;
      *(_OWORD *)(a1 + 56) = v9;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *v7;
    v12 = *(_OWORD *)(a2 + 56);
    v13 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v13;
    *v4 = v11;
    *(_OWORD *)(a1 + 56) = v12;
  }
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for TabiData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (!v6)
    goto LABEL_5;
  if (!v5)
  {
    sub_1D586E8CC(a1 + 40);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v7;
    v8 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v8;
    return a1;
  }
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TabiData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TabiData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TabiData()
{
  return &type metadata for TabiData;
}

uint64_t storeEnumTagSinglePayload for TabiData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D59FBA60 + 4 * byte_1D5ADB4C6[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D59FBA94 + 4 * byte_1D5ADB4C1[v4]))();
}

uint64_t sub_1D59FBA94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59FBA9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59FBAA4);
  return result;
}

uint64_t sub_1D59FBAB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59FBAB8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D59FBABC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59FBAC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TabiData.CodingKeys()
{
  return &type metadata for TabiData.CodingKeys;
}

unint64_t sub_1D59FBAE4()
{
  unint64_t result;

  result = qword_1EFF506B0;
  if (!qword_1EFF506B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB618, &type metadata for TabiData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF506B0);
  }
  return result;
}

unint64_t sub_1D59FBB2C()
{
  unint64_t result;

  result = qword_1ED9D0BB0;
  if (!qword_1ED9D0BB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB588, &type metadata for TabiData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0BB0);
  }
  return result;
}

unint64_t sub_1D59FBB74()
{
  unint64_t result;

  result = qword_1ED9D0BA8;
  if (!qword_1ED9D0BA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB5B0, &type metadata for TabiData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0BA8);
  }
  return result;
}

uint64_t sub_1D59FBBB8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AF1980 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF19A0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF19C0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF19E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5374736575716572 && a2 == 0xEE007972616D6D75)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

NewsAnalytics::WidgetEngagementType_optional __swiftcall WidgetEngagementType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::WidgetEngagementType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t WidgetEngagementType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59FBE58 + 4 * byte_1D5ADB690[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D59FBE58()
{
  return 0x656C6369747261;
}

uint64_t sub_1D59FBE6C()
{
  return 0x6569726F74536F6ELL;
}

uint64_t sub_1D59FBE88()
{
  return 0x4E6E6F6974636573;
}

uint64_t sub_1D59FBEA8()
{
  return 0x6465626D45626577;
}

uint64_t sub_1D59FBEC0()
{
  return 0x756F72676B636162;
}

uint64_t sub_1D59FBEDC()
{
  return 0x646957656C6F6877;
}

void sub_1D59FBEFC(char *a1)
{
  sub_1D5A38F00(*a1);
}

unint64_t sub_1D59FBF0C()
{
  unint64_t result;

  result = qword_1EFF506B8;
  if (!qword_1EFF506B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetEngagementType, &type metadata for WidgetEngagementType);
    atomic_store(result, (unint64_t *)&qword_1EFF506B8);
  }
  return result;
}

void sub_1D59FBF50()
{
  char *v0;

  sub_1D5AA97C0(0, *v0);
}

void sub_1D59FBF5C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D59FBF98()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D59FC050(uint64_t a1)
{
  char *v1;

  sub_1D5AA97C0(a1, *v1);
}

NewsAnalytics::WidgetEngagementType_optional sub_1D59FC058(Swift::String *a1)
{
  return WidgetEngagementType.init(rawValue:)(*a1);
}

uint64_t sub_1D59FC064()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D59FC094 + 4 * byte_1D5ADB69E[*v0]))();
}

void sub_1D59FC094(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656C6369747261;
  a1[1] = v1;
}

void sub_1D59FC0AC(_QWORD *a1@<X8>)
{
  *a1 = 0x6569726F74536F6ELL;
  a1[1] = 0xE900000000000073;
}

void sub_1D59FC0CC(_QWORD *a1@<X8>)
{
  *a1 = 0x4E6E6F6974636573;
  a1[1] = 0xEB00000000656D61;
}

void sub_1D59FC0F0(_QWORD *a1@<X8>)
{
  *a1 = 0x6465626D45626577;
  a1[1] = 0xE800000000000000;
}

void sub_1D59FC10C(_QWORD *a1@<X8>)
{
  *a1 = 0x756F72676B636162;
  a1[1] = 0xEA0000000000646ELL;
}

void sub_1D59FC12C(_QWORD *a1@<X8>)
{
  *a1 = 0x646957656C6F6877;
  a1[1] = 0xEB00000000746567;
}

uint64_t sub_1D59FC150()
{
  sub_1D59FC2C4();
  return sub_1D5AAE928();
}

uint64_t sub_1D59FC1AC()
{
  sub_1D59FC2C4();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for WidgetEngagementType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D59FC244 + 4 * byte_1D5ADB6AA[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D59FC278 + 4 * byte_1D5ADB6A5[v4]))();
}

uint64_t sub_1D59FC278(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59FC280(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59FC288);
  return result;
}

uint64_t sub_1D59FC294(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59FC29CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D59FC2A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59FC2A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetEngagementType()
{
  return &type metadata for WidgetEngagementType;
}

unint64_t sub_1D59FC2C4()
{
  unint64_t result;

  result = qword_1ED9D1518;
  if (!qword_1ED9D1518)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetEngagementType, &type metadata for WidgetEngagementType);
    atomic_store(result, (unint64_t *)&qword_1ED9D1518);
  }
  return result;
}

uint64_t ViewData.viewSessionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ViewData.viewSessionID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ViewData.viewSessionID.modify())()
{
  return nullsub_1;
}

void ViewData.viewType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *ViewData.viewType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*ViewData.viewType.modify())()
{
  return nullsub_1;
}

void ViewData.viewAction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

_BYTE *ViewData.viewAction.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*ViewData.viewAction.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D59FC3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59FC800(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59FC3EC()
{
  sub_1D57ADFD4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59FC414()
{
  sub_1D57ADFD4();
  return sub_1D5AAEEE0();
}

uint64_t ViewData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  int v16;
  char v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  char v21;

  sub_1D57ADF34(0, &qword_1ED9CC878, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57ADFD4();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v19 = 1;
  sub_1D59FC634();
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  v16 = v20;
  v17 = 2;
  sub_1D59FC678();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = v18;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 17) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D59FC634()
{
  unint64_t result;

  result = qword_1ED9CC4E8;
  if (!qword_1ED9CC4E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewType, &type metadata for ViewType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4E8);
  }
  return result;
}

unint64_t sub_1D59FC678()
{
  unint64_t result;

  result = qword_1ED9C7638;
  if (!qword_1ED9C7638)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewAction, &type metadata for ViewAction);
    atomic_store(result, (unint64_t *)&qword_1ED9C7638);
  }
  return result;
}

uint64_t sub_1D59FC6BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for ViewData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for ViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewData.CodingKeys()
{
  return &type metadata for ViewData.CodingKeys;
}

unint64_t sub_1D59FC7BC()
{
  unint64_t result;

  result = qword_1EFF506C0;
  if (!qword_1EFF506C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADB934, &type metadata for ViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF506C0);
  }
  return result;
}

uint64_t sub_1D59FC800(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7373655377656976 && a2 == 0xED000044496E6F69;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570795477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974634177656976 && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

NewsAnalytics::OsInstallVariant_optional __swiftcall OsInstallVariant.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::OsInstallVariant_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t OsInstallVariant.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C616E7265746E69;
  if (*v0 != 1)
    v1 = 0x6C616E7265747865;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D59FCA2C(char *a1, unsigned __int8 *a2)
{
  return sub_1D5A3AEFC(*a1, *a2);
}

unint64_t sub_1D59FCA3C()
{
  unint64_t result;

  result = qword_1EFF506C8;
  if (!qword_1EFF506C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OsInstallVariant, &type metadata for OsInstallVariant);
    atomic_store(result, (unint64_t *)&qword_1EFF506C8);
  }
  return result;
}

uint64_t sub_1D59FCA80()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59FCB14()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59FCB84()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::OsInstallVariant_optional sub_1D59FCC14(Swift::String *a1)
{
  return OsInstallVariant.init(rawValue:)(*a1);
}

uint64_t sub_1D59FCC20()
{
  sub_1D57A3ADC();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for OsInstallVariant(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59FCCC8 + 4 * byte_1D5ADB9B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59FCCFC + 4 * byte_1D5ADB9B0[v4]))();
}

uint64_t sub_1D59FCCFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59FCD04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59FCD0CLL);
  return result;
}

uint64_t sub_1D59FCD18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59FCD20);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59FCD24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59FCD2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t ShareContextData.activityType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ShareContextData.activityType.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ShareContextData.activityType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ShareContextData __swiftcall ShareContextData.init(activityType:)(NewsAnalytics::ShareContextData activityType)
{
  NewsAnalytics::ShareContextData *v1;

  *v1 = activityType;
  return activityType;
}

uint64_t sub_1D59FCDB0()
{
  return 0x7974697669746361;
}

uint64_t sub_1D59FCDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7974697669746361 && a2 == 0xEC00000065707954)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D59FCE7C()
{
  sub_1D59FCFC0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59FCEA4()
{
  sub_1D59FCFC0();
  return sub_1D5AAEEE0();
}

uint64_t ShareContextData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59FD128(0, &qword_1EFF506D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59FCFC0();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D59FCFC0()
{
  unint64_t result;

  result = qword_1EFF506D8;
  if (!qword_1EFF506D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADBC44, &type metadata for ShareContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF506D8);
  }
  return result;
}

uint64_t ShareContextData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D59FD128(0, &qword_1EFF506E0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59FCFC0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59FD128(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59FCFC0();
    v7 = a3(a1, &type metadata for ShareContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59FD18C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ShareContextData.init(from:)(a1, a2);
}

uint64_t sub_1D59FD1A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59FD128(0, &qword_1EFF506D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59FCFC0();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for ShareContextData()
{
  return &type metadata for ShareContextData;
}

uint64_t storeEnumTagSinglePayload for ShareContextData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59FD2E4 + 4 * byte_1D5ADBAD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59FD304 + 4 * byte_1D5ADBAD5[v4]))();
}

_BYTE *sub_1D59FD2E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59FD304(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59FD30C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59FD314(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59FD31C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59FD324(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShareContextData.CodingKeys()
{
  return &type metadata for ShareContextData.CodingKeys;
}

unint64_t sub_1D59FD344()
{
  unint64_t result;

  result = qword_1EFF506E8;
  if (!qword_1EFF506E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADBC1C, &type metadata for ShareContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF506E8);
  }
  return result;
}

unint64_t sub_1D59FD38C()
{
  unint64_t result;

  result = qword_1EFF506F0;
  if (!qword_1EFF506F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADBB8C, &type metadata for ShareContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF506F0);
  }
  return result;
}

unint64_t sub_1D59FD3D4()
{
  unint64_t result;

  result = qword_1EFF506F8;
  if (!qword_1EFF506F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADBBB4, &type metadata for ShareContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF506F8);
  }
  return result;
}

unint64_t sub_1D59FD418()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFF50760;
  if (!qword_1EFF50760)
  {
    v1 = type metadata accessor for TimestampJitterFactory();
    result = MEMORY[0x1D8279680](&unk_1D5ADBCF0, v1);
    atomic_store(result, (unint64_t *)&qword_1EFF50760);
  }
  return result;
}

_BYTE *AlternateHeadlineData.init(articleHeadlineTreatmentState:articleHeadlineTreatmentId:)@<X0>(_BYTE *result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = *result;
  *(_DWORD *)(a3 + 4) = a2;
  return result;
}

void AlternateHeadlineData.articleHeadlineTreatmentState.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AlternateHeadlineData.articleHeadlineTreatmentState.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AlternateHeadlineData.articleHeadlineTreatmentState.modify())()
{
  return nullsub_1;
}

uint64_t AlternateHeadlineData.articleHeadlineTreatmentId.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t AlternateHeadlineData.articleHeadlineTreatmentId.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*AlternateHeadlineData.articleHeadlineTreatmentId.modify())()
{
  return nullsub_1;
}

unint64_t sub_1D59FD4B4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ALL;
  else
    return 0xD00000000000001DLL;
}

uint64_t sub_1D59FD4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59FDBA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59FD518()
{
  sub_1D59FD6A4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59FD540()
{
  sub_1D59FD6A4();
  return sub_1D5AAEEE0();
}

uint64_t AlternateHeadlineData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;

  sub_1D59FD898(0, &qword_1ED9CC930, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = *((_DWORD *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59FD6A4();
  sub_1D5AAEEC8();
  v15 = v9;
  v14 = 0;
  sub_1D59FD6E8();
  sub_1D5AAED6C();
  if (!v2)
  {
    v13 = 1;
    sub_1D5AAED78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D59FD6A4()
{
  unint64_t result;

  result = qword_1ED9CA678;
  if (!qword_1ED9CA678)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADBECC, &type metadata for AlternateHeadlineData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA678);
  }
  return result;
}

unint64_t sub_1D59FD6E8()
{
  unint64_t result;

  result = qword_1ED9CBFC0;
  if (!qword_1ED9CBFC0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AlternateHeadlineTreatmentStateData, &type metadata for AlternateHeadlineTreatmentStateData);
    atomic_store(result, (unint64_t *)&qword_1ED9CBFC0);
  }
  return result;
}

uint64_t AlternateHeadlineData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  int v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  sub_1D59FD898(0, &qword_1ED9CC818, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59FD6A4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v15 = 0;
    sub_1D59FD8F4();
    sub_1D5AAECD0();
    v10 = v16;
    v14 = 1;
    v12 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_BYTE *)a2 = v10;
    *(_DWORD *)(a2 + 4) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59FD898(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59FD6A4();
    v7 = a3(a1, &type metadata for AlternateHeadlineData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59FD8F4()
{
  unint64_t result;

  result = qword_1ED9CBFD0;
  if (!qword_1ED9CBFD0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AlternateHeadlineTreatmentStateData, &type metadata for AlternateHeadlineTreatmentStateData);
    atomic_store(result, (unint64_t *)&qword_1ED9CBFD0);
  }
  return result;
}

uint64_t sub_1D59FD940@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AlternateHeadlineData.init(from:)(a1, a2);
}

uint64_t sub_1D59FD954(_QWORD *a1)
{
  return AlternateHeadlineData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for AlternateHeadlineData(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && a1[8])
    return (*(_DWORD *)a1 + 250);
  v3 = *a1;
  v4 = v3 >= 7;
  v5 = v3 - 7;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AlternateHeadlineData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 6;
  }
  return result;
}

ValueMetadata *type metadata accessor for AlternateHeadlineData()
{
  return &type metadata for AlternateHeadlineData;
}

uint64_t storeEnumTagSinglePayload for AlternateHeadlineData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59FDA48 + 4 * byte_1D5ADBD45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59FDA7C + 4 * byte_1D5ADBD40[v4]))();
}

uint64_t sub_1D59FDA7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59FDA84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59FDA8CLL);
  return result;
}

uint64_t sub_1D59FDA98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59FDAA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59FDAA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59FDAAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlternateHeadlineData.CodingKeys()
{
  return &type metadata for AlternateHeadlineData.CodingKeys;
}

unint64_t sub_1D59FDACC()
{
  unint64_t result;

  result = qword_1EFF50770;
  if (!qword_1EFF50770)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADBEA4, &type metadata for AlternateHeadlineData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50770);
  }
  return result;
}

unint64_t sub_1D59FDB14()
{
  unint64_t result;

  result = qword_1ED9CA688;
  if (!qword_1ED9CA688)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADBE14, &type metadata for AlternateHeadlineData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA688);
  }
  return result;
}

unint64_t sub_1D59FDB5C()
{
  unint64_t result;

  result = qword_1ED9CA680;
  if (!qword_1ED9CA680)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADBE3C, &type metadata for AlternateHeadlineData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA680);
  }
  return result;
}

uint64_t sub_1D59FDBA0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5AF1A50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AF1A70)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D59FDC8C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF50778, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleSaveEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50778, a1);
}

uint64_t sub_1D59FDCCC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF50790, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleSaveEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50790, a1);
}

uint64_t ArticleSaveEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleSaveEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleSaveEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleSaveEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleSaveEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleSaveEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for ArticleSaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleSaveEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleSaveEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleSaveEvent.actionData.modify())(_QWORD)
{
  type metadata accessor for ArticleSaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleSaveEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleSaveEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleSaveEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for ArticleSaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleSaveEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleSaveEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleSaveEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for ArticleSaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleSaveEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleSaveEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleSaveEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for ArticleSaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleSaveEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleSaveEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleSaveEvent.userChannelContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleSaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleSaveEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleSaveEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleSaveEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleSaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleSaveEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleSaveEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleSaveEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for ArticleSaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleSaveEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleSaveEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleSaveEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for ArticleSaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleSaveEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleSaveEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleSaveEvent.articleExposureContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleSaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleSaveEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleSaveEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
}

uint64_t ArticleSaveEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleSaveEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ArticleSaveEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleSaveEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ArticleSaveEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleSaveEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *ArticleSaveEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for ArticleSaveEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t ArticleSaveEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleSaveEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleSaveEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ArticleSaveEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 40));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ArticleSaveEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleSaveEvent.Model(0) + 44));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleSaveEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleSaveEvent.Model(0) + 48);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleSaveEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleSaveEvent.Model(0) + 52));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleSaveEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleSaveEvent.Model(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57E90BC(v4, v5);
}

__n128 ArticleSaveEvent.Model.init(eventData:articleData:actionData:feedData:groupData:viewData:userChannelContextData:userBundleSubscriptionContextData:channelData:issueData:articleExposureContextData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, __int128 *a11, __int128 *a12)
{
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 result;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __n128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _BYTE v61[23];
  _BYTE v62[144];

  v60 = a2[6];
  *(_OWORD *)v61 = a2[7];
  *(_QWORD *)&v61[15] = *(_QWORD *)((char *)a2 + 127);
  v56 = a2[2];
  v57 = a2[3];
  v58 = a2[4];
  v59 = a2[5];
  v54 = *a2;
  v55 = a2[1];
  v17 = *a3;
  v33 = *a4;
  v18 = *((_QWORD *)a4 + 2);
  sub_1D57DD5B8(a5, (uint64_t)v62);
  v34 = a6[1];
  v35 = *a6;
  LOWORD(a6) = *((_WORD *)a6 + 8);
  v36 = a7[1];
  v37 = *a7;
  LOWORD(a7) = *((_WORD *)a7 + 1);
  v44 = *a8;
  v42 = *((_QWORD *)a8 + 2);
  v43 = *((_QWORD *)a8 + 1);
  v40 = a8[25];
  v41 = a8[24];
  v38 = *((_QWORD *)a8 + 5);
  v39 = *((_QWORD *)a8 + 4);
  LOBYTE(a8) = a8[48];
  v49 = a10[1];
  v50 = *a10;
  v47 = *((_BYTE *)a10 + 17);
  v48 = *((_BYTE *)a10 + 16);
  v45 = a10[4];
  v46 = a10[3];
  v20 = *((_QWORD *)a11 + 2);
  v19 = *((_QWORD *)a11 + 3);
  v53 = *a12;
  v51 = *a11;
  v52 = (__n128)a12[1];
  v21 = *((_QWORD *)a12 + 4);
  v22 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v23 = (int *)type metadata accessor for ArticleSaveEvent.Model(0);
  v24 = a9 + v23[5];
  *(_OWORD *)(v24 + 96) = v60;
  *(_OWORD *)(v24 + 112) = *(_OWORD *)v61;
  *(_QWORD *)(v24 + 127) = *(_QWORD *)&v61[15];
  *(_OWORD *)(v24 + 32) = v56;
  *(_OWORD *)(v24 + 48) = v57;
  *(_OWORD *)(v24 + 64) = v58;
  *(_OWORD *)(v24 + 80) = v59;
  *(_OWORD *)v24 = v54;
  *(_OWORD *)(v24 + 16) = v55;
  *(_BYTE *)(a9 + v23[6]) = v17;
  v25 = a9 + v23[7];
  *(_OWORD *)v25 = v33;
  *(_QWORD *)(v25 + 16) = v18;
  sub_1D57DD5B8((uint64_t)v62, a9 + v23[8]);
  v26 = a9 + v23[9];
  *(_QWORD *)v26 = v35;
  *(_QWORD *)(v26 + 8) = v34;
  *(_WORD *)(v26 + 16) = (_WORD)a6;
  v27 = a9 + v23[10];
  *(_BYTE *)v27 = v37;
  *(_BYTE *)(v27 + 1) = v36;
  *(_WORD *)(v27 + 2) = (_WORD)a7;
  v28 = a9 + v23[11];
  *(_BYTE *)v28 = v44;
  *(_QWORD *)(v28 + 8) = v43;
  *(_QWORD *)(v28 + 16) = v42;
  *(_BYTE *)(v28 + 24) = v41;
  *(_BYTE *)(v28 + 25) = v40;
  *(_QWORD *)(v28 + 32) = v39;
  *(_QWORD *)(v28 + 40) = v38;
  *(_BYTE *)(v28 + 48) = (_BYTE)a8;
  v29 = a9 + v23[12];
  *(_QWORD *)v29 = v50;
  *(_QWORD *)(v29 + 8) = v49;
  *(_BYTE *)(v29 + 16) = v48;
  *(_BYTE *)(v29 + 17) = v47;
  *(_QWORD *)(v29 + 24) = v46;
  *(_QWORD *)(v29 + 32) = v45;
  v30 = a9 + v23[13];
  *(_OWORD *)v30 = v51;
  *(_QWORD *)(v30 + 16) = v20;
  *(_QWORD *)(v30 + 24) = v19;
  v31 = a9 + v23[14];
  result = v52;
  *(_OWORD *)v31 = v53;
  *(__n128 *)(v31 + 16) = v52;
  *(_QWORD *)(v31 + 32) = v21;
  return result;
}

uint64_t sub_1D59FEFF0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59FF028 + 4 * byte_1D5ADBF20[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59FF028()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D59FF11C()
{
  unsigned __int8 *v0;

  return sub_1D59FEFF0(*v0);
}

uint64_t sub_1D59FF124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A03544(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59FF148()
{
  sub_1D59FF630();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59FF170()
{
  sub_1D59FF630();
  return sub_1D5AAEEE0();
}

uint64_t ArticleSaveEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  char *v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v40;
  char v41;
  _OWORD v42[2];
  __int128 v43;
  char v44;
  _OWORD v45[7];
  _BYTE v46[23];
  char v47;
  __int128 v48;
  uint64_t v49;
  char v50;

  v3 = v1;
  sub_1D59FFE70(0, &qword_1EFF507A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59FF630();
  sub_1D5AAEEC8();
  v50 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleSaveEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_OWORD *)(v11 + 112);
    v45[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v46 = v12;
    *(_QWORD *)&v46[15] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    v45[2] = *(_OWORD *)(v11 + 32);
    v45[3] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v45[4] = *(_OWORD *)(v11 + 64);
    v45[5] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    v45[0] = *(_OWORD *)v11;
    v45[1] = v15;
    LOBYTE(v42[0]) = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    LOBYTE(v45[0]) = *(_BYTE *)(v3 + v10[6]);
    LOBYTE(v42[0]) = 2;
    sub_1D57CC038();
    sub_1D5AAED6C();
    v16 = (__int128 *)(v3 + v10[7]);
    v17 = *((_QWORD *)v16 + 2);
    v48 = *v16;
    v49 = v17;
    v47 = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[8], (uint64_t)v45);
    sub_1D57DD5B8((uint64_t)v45, (uint64_t)v42);
    v41 = 4;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v18 = v3 + v10[9];
    v19 = *(_WORD *)(v18 + 16);
    v42[0] = *(_OWORD *)v18;
    LOWORD(v42[1]) = v19;
    v41 = 5;
    sub_1D57C62A4();
    sub_1D5AAED18();
    v20 = (char *)(v3 + v10[10]);
    v21 = *v20;
    v22 = v20[1];
    LOWORD(v20) = *((_WORD *)v20 + 1);
    LOBYTE(v42[0]) = v21;
    BYTE1(v42[0]) = v22;
    WORD1(v42[0]) = (_WORD)v20;
    v41 = 6;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v23 = v3 + v10[11];
    v24 = *(_BYTE *)(v23 + 24);
    v25 = *(_BYTE *)(v23 + 25);
    v26 = *(_BYTE *)(v23 + 48);
    LOBYTE(v42[0]) = *(_BYTE *)v23;
    *(_OWORD *)((char *)v42 + 8) = *(_OWORD *)(v23 + 8);
    BYTE8(v42[1]) = v24;
    BYTE9(v42[1]) = v25;
    v43 = *(_OWORD *)(v23 + 32);
    v44 = v26;
    v41 = 7;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v27 = (uint64_t *)(v3 + v10[12]);
    v28 = *v27;
    v29 = v27[1];
    v30 = *((_BYTE *)v27 + 16);
    v31 = *((_BYTE *)v27 + 17);
    v33 = v27[3];
    v32 = v27[4];
    *(_QWORD *)&v42[0] = v28;
    *((_QWORD *)&v42[0] + 1) = v29;
    LOBYTE(v42[1]) = v30;
    BYTE1(v42[1]) = v31;
    *((_QWORD *)&v42[1] + 1) = v33;
    *(_QWORD *)&v43 = v32;
    v41 = 8;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v34 = (_OWORD *)(v3 + v10[13]);
    v35 = v34[1];
    v42[0] = *v34;
    v42[1] = v35;
    v41 = 9;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v36 = v3 + v10[14];
    v37 = *(_QWORD *)(v36 + 32);
    v38 = *(_OWORD *)(v36 + 16);
    v42[0] = *(_OWORD *)v36;
    v42[1] = v38;
    *(_QWORD *)&v43 = v37;
    v41 = 10;
    sub_1D57C71C4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59FF630()
{
  unint64_t result;

  result = qword_1EFF507B0;
  if (!qword_1EFF507B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC23C, &type metadata for ArticleSaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF507B0);
  }
  return result;
}

uint64_t ArticleSaveEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  __int16 v24;
  char *v25;
  char v26;
  __int16 v27;
  char *v28;
  char v29;
  char v30;
  char v31;
  char *v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __int128 v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  _QWORD *v52;
  char *v53;
  _OWORD v54[2];
  __int128 v55;
  char v56;
  char v57;
  _BYTE v58[144];
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _BYTE v66[23];
  __int128 v67;
  __int128 v68;
  int *v69;

  v46 = a2;
  v4 = sub_1D5AADF98();
  v50 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59FFE70(0, &qword_1EFF507B8, MEMORY[0x1E0DED048]);
  v48 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v46 - v9;
  v69 = (int *)type metadata accessor for ArticleSaveEvent.Model(0);
  MEMORY[0x1E0C80A78](v69);
  v52 = a1;
  v53 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59FF630();
  v47 = v10;
  sub_1D5AAEEB0();
  v49 = v4;
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  v12 = v8;
  v13 = v46;
  LOBYTE(v67) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v14 = v4;
  v15 = v53;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v6, v14);
  v58[143] = 1;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v16 = v69;
  v17 = &v15[v69[5]];
  v18 = *(_OWORD *)v66;
  *((_OWORD *)v17 + 6) = v65;
  *((_OWORD *)v17 + 7) = v18;
  *(_QWORD *)(v17 + 127) = *(_QWORD *)&v66[15];
  v19 = v62;
  *((_OWORD *)v17 + 2) = v61;
  *((_OWORD *)v17 + 3) = v19;
  v20 = v64;
  *((_OWORD *)v17 + 4) = v63;
  *((_OWORD *)v17 + 5) = v20;
  v21 = v60;
  *(_OWORD *)v17 = v59;
  *((_OWORD *)v17 + 1) = v21;
  v58[0] = 2;
  sub_1D57CBFF4();
  sub_1D5AAECD0();
  v15[v16[6]] = v67;
  v58[0] = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v22 = v68;
  v23 = &v15[v16[7]];
  *(_OWORD *)v23 = v67;
  *((_QWORD *)v23 + 2) = v22;
  v58[142] = 4;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)&v67, (uint64_t)v58);
  sub_1D57DD5B8((uint64_t)v58, (uint64_t)&v15[v16[8]]);
  v57 = 5;
  sub_1D57C6260();
  sub_1D5AAEC7C();
  v24 = v54[1];
  v25 = &v15[v16[9]];
  *(_OWORD *)v25 = v54[0];
  *((_WORD *)v25 + 8) = v24;
  v57 = 6;
  sub_1D57C7AE0();
  sub_1D5AAECD0();
  v26 = BYTE1(v54[0]);
  v27 = WORD1(v54[0]);
  v28 = &v15[v16[10]];
  *v28 = v54[0];
  v28[1] = v26;
  *((_WORD *)v28 + 1) = v27;
  v57 = 7;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v51 = 1;
  v29 = BYTE8(v54[1]);
  v30 = BYTE9(v54[1]);
  v31 = v56;
  v32 = &v15[v16[11]];
  *v32 = v54[0];
  *(_OWORD *)(v32 + 8) = *(_OWORD *)((char *)v54 + 8);
  v32[24] = v29;
  v32[25] = v30;
  *((_OWORD *)v32 + 2) = v55;
  v32[48] = v31;
  v57 = 8;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v33 = *((_QWORD *)&v54[0] + 1);
  v34 = v54[1];
  v35 = BYTE1(v54[1]);
  v36 = *((_QWORD *)&v54[1] + 1);
  v37 = v55;
  v38 = &v15[v16[12]];
  *(_QWORD *)v38 = *(_QWORD *)&v54[0];
  *((_QWORD *)v38 + 1) = v33;
  v38[16] = v34;
  v38[17] = v35;
  *((_QWORD *)v38 + 3) = v36;
  *((_QWORD *)v38 + 4) = v37;
  v57 = 9;
  sub_1D57C5ED8();
  sub_1D5AAEC7C();
  v39 = &v53[v69[13]];
  v40 = v54[1];
  *(_OWORD *)v39 = v54[0];
  *((_OWORD *)v39 + 1) = v40;
  v57 = 10;
  sub_1D57C7180();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v47, v48);
  v41 = v55;
  v42 = (uint64_t)v53;
  v43 = &v53[v69[14]];
  v44 = v54[1];
  *(_OWORD *)v43 = v54[0];
  *((_OWORD *)v43 + 1) = v44;
  *((_QWORD *)v43 + 4) = v41;
  sub_1D59FFECC(v42, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return sub_1D59FFF10(v42);
}

void sub_1D59FFE70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59FF630();
    v7 = a3(a1, &type metadata for ArticleSaveEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59FFECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleSaveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59FFF10(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleSaveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59FFF4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleSaveEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59FFF60(_QWORD *a1)
{
  return ArticleSaveEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59FFF74@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50778, a1);
}

uint64_t sub_1D59FFF98@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50790, a1);
}

uint64_t sub_1D59FFFBC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v11, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleSaveEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for ArticleSaveEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
}

uint64_t initializeWithCopy for ArticleSaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for ArticleSaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for ArticleSaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for ArticleSaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleSaveEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A016A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                      v8 = v22;
                      v12 = *(_QWORD *)(v22 - 8);
                      v13 = a3[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleSaveEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A019A4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                      v10 = v24;
                      v14 = *(_QWORD *)(v24 - 8);
                      v15 = a4[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleSaveEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v12;
    v10[32] = v11[32];
    v13 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    v14 = *((_QWORD *)v11 + 9);
    *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
    v10[112] = v11[112];
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(_QWORD *)((char *)a2 + v15 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18 == 1)
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    }
    else
    {
      *v16 = *v17;
      *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
      *((_QWORD *)v16 + 2) = v18;
      swift_bridgeObjectRetain();
    }
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *((_QWORD *)v22 + 2);
    if (v23)
    {
      *(_WORD *)v21 = *(_WORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      *((_QWORD *)v21 + 2) = v23;
      *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
      v24 = *((_QWORD *)v22 + 5);
      *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
      *((_QWORD *)v21 + 5) = v24;
      v25 = *((_QWORD *)v22 + 7);
      *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
      *((_QWORD *)v21 + 7) = v25;
      v26 = *((_QWORD *)v22 + 9);
      *((_QWORD *)v21 + 8) = *((_QWORD *)v22 + 8);
      *((_QWORD *)v21 + 9) = v26;
      v21[80] = v22[80];
      v27 = *((_QWORD *)v22 + 12);
      *((_QWORD *)v21 + 11) = *((_QWORD *)v22 + 11);
      *((_QWORD *)v21 + 12) = v27;
      *((_QWORD *)v21 + 13) = *((_QWORD *)v22 + 13);
      v21[112] = v22[112];
      v28 = *((_QWORD *)v22 + 16);
      *((_QWORD *)v21 + 15) = *((_QWORD *)v22 + 15);
      *((_QWORD *)v21 + 16) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v29 = *((_OWORD *)v22 + 7);
      *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
      *((_OWORD *)v21 + 7) = v29;
      *((_QWORD *)v21 + 16) = *((_QWORD *)v22 + 16);
      v30 = *((_OWORD *)v22 + 3);
      *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
      *((_OWORD *)v21 + 3) = v30;
      v31 = *((_OWORD *)v22 + 5);
      *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
      *((_OWORD *)v21 + 5) = v31;
      v32 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v32;
    }
    v33 = a3[9];
    v34 = a3[10];
    v35 = (char *)a1 + v33;
    v36 = (char *)a2 + v33;
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    *((_WORD *)v35 + 8) = *((_WORD *)v36 + 8);
    *(_DWORD *)((char *)a1 + v34) = *(_DWORD *)((char *)a2 + v34);
    v38 = a3[11];
    v39 = a3[12];
    v40 = (char *)a1 + v38;
    v41 = (char *)a2 + v38;
    *v40 = *v41;
    v42 = *((_QWORD *)v41 + 2);
    *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
    *((_QWORD *)v40 + 2) = v42;
    v40[24] = v41[24];
    v40[25] = v41[25];
    v43 = *((_QWORD *)v41 + 5);
    *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
    *((_QWORD *)v40 + 5) = v43;
    v40[48] = v41[48];
    v44 = (char *)a1 + v39;
    v45 = (char *)a2 + v39;
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v44[16] = v45[16];
    v44[17] = v45[17];
    v47 = *((_QWORD *)v45 + 4);
    *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
    *((_QWORD *)v44 + 4) = v47;
    v48 = a3[13];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    v51 = *(_QWORD *)((char *)a2 + v48 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v51)
    {
      *(_QWORD *)v49 = *(_QWORD *)v50;
      *((_QWORD *)v49 + 1) = v51;
      *((_WORD *)v49 + 8) = *((_WORD *)v50 + 8);
      *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v52 = *((_OWORD *)v50 + 1);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v52;
    }
    v53 = a3[14];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    v56 = *((_QWORD *)v55 + 1);
    if (v56 == 1)
    {
      v57 = *((_OWORD *)v55 + 1);
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v57;
      *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
    }
    else
    {
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *((_QWORD *)v54 + 1) = v56;
      v58 = *((_QWORD *)v55 + 3);
      *((_QWORD *)v54 + 2) = *((_QWORD *)v55 + 2);
      *((_QWORD *)v54 + 3) = v58;
      *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for ArticleSaveEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[13] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + a2[14] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ArticleSaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v12;
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  v13 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 72) = v13;
  *(_BYTE *)(v9 + 80) = *(_BYTE *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 + 104);
  *(_BYTE *)(v9 + 112) = *(_BYTE *)(v10 + 112);
  *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(_BYTE *)(v9 + 132) = *(_BYTE *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17 == 1)
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  }
  else
  {
    *(_BYTE *)v15 = *(_BYTE *)v16;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
    *(_QWORD *)(v15 + 16) = v17;
    swift_bridgeObjectRetain();
  }
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    *(_WORD *)v19 = *(_WORD *)v20;
    *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
    *(_QWORD *)(v19 + 16) = v21;
    *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
    v22 = *(_QWORD *)(v20 + 40);
    *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
    *(_QWORD *)(v19 + 40) = v22;
    v23 = *(_QWORD *)(v20 + 56);
    *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
    *(_QWORD *)(v19 + 56) = v23;
    v24 = *(_QWORD *)(v20 + 72);
    *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
    *(_QWORD *)(v19 + 72) = v24;
    *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
    v25 = *(_QWORD *)(v20 + 96);
    *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
    *(_QWORD *)(v19 + 96) = v25;
    *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
    *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
    v26 = *(_QWORD *)(v20 + 128);
    *(_QWORD *)(v19 + 120) = *(_QWORD *)(v20 + 120);
    *(_QWORD *)(v19 + 128) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)(v20 + 112);
    *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
    *(_OWORD *)(v19 + 112) = v27;
    *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
    v28 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    *(_OWORD *)(v19 + 48) = v28;
    v29 = *(_OWORD *)(v20 + 80);
    *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
    *(_OWORD *)(v19 + 80) = v29;
    v30 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v30;
  }
  v31 = a3[9];
  v32 = a3[10];
  v33 = a1 + v31;
  v34 = a2 + v31;
  v35 = *(_QWORD *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_QWORD *)(v33 + 8) = v35;
  *(_WORD *)(v33 + 16) = *(_WORD *)(v34 + 16);
  *(_DWORD *)(a1 + v32) = *(_DWORD *)(a2 + v32);
  v36 = a3[11];
  v37 = a3[12];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_BYTE *)v38 = *(_BYTE *)v39;
  v40 = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  *(_QWORD *)(v38 + 16) = v40;
  *(_BYTE *)(v38 + 24) = *(_BYTE *)(v39 + 24);
  *(_BYTE *)(v38 + 25) = *(_BYTE *)(v39 + 25);
  v41 = *(_QWORD *)(v39 + 40);
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  *(_QWORD *)(v38 + 40) = v41;
  *(_BYTE *)(v38 + 48) = *(_BYTE *)(v39 + 48);
  v42 = a1 + v37;
  v43 = a2 + v37;
  v44 = *(_QWORD *)(v43 + 8);
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_QWORD *)(v42 + 8) = v44;
  *(_BYTE *)(v42 + 16) = *(_BYTE *)(v43 + 16);
  *(_BYTE *)(v42 + 17) = *(_BYTE *)(v43 + 17);
  v45 = *(_QWORD *)(v43 + 32);
  *(_QWORD *)(v42 + 24) = *(_QWORD *)(v43 + 24);
  *(_QWORD *)(v42 + 32) = v45;
  v46 = a3[13];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(_QWORD *)(a2 + v46 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49)
  {
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *(_QWORD *)(v47 + 8) = v49;
    *(_WORD *)(v47 + 16) = *(_WORD *)(v48 + 16);
    *(_QWORD *)(v47 + 24) = *(_QWORD *)(v48 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v50 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v50;
  }
  v51 = a3[14];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = *(_QWORD *)(v53 + 8);
  if (v54 == 1)
  {
    v55 = *(_OWORD *)(v53 + 16);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *(_OWORD *)(v52 + 16) = v55;
    *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
  }
  else
  {
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *(_QWORD *)(v52 + 8) = v54;
    v56 = *(_QWORD *)(v53 + 24);
    *(_QWORD *)(v52 + 16) = *(_QWORD *)(v53 + 16);
    *(_QWORD *)(v52 + 24) = v56;
    *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ArticleSaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  __int128 *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = (__int128 *)(a2 + v12);
  v15 = *(_QWORD *)(a1 + v12 + 16);
  v16 = *(_QWORD *)(a2 + v12 + 16);
  if (v15 == 1)
  {
    if (v16 == 1)
    {
      v17 = *v14;
      *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
      *(_OWORD *)v13 = v17;
    }
    else
    {
      *(_BYTE *)v13 = *(_BYTE *)v14;
      *(_QWORD *)(v13 + 8) = *((_QWORD *)v14 + 1);
      *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v16 == 1)
  {
    sub_1D57D9100(v13);
    v18 = *((_QWORD *)v14 + 2);
    *(_OWORD *)v13 = *v14;
    *(_QWORD *)(v13 + 16) = v18;
  }
  else
  {
    *(_BYTE *)v13 = *(_BYTE *)v14;
    *(_QWORD *)(v13 + 8) = *((_QWORD *)v14 + 1);
    *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a1 + v19 + 16);
  v23 = *(_QWORD *)(a2 + v19 + 16);
  if (v22)
  {
    if (v23)
    {
      *(_BYTE *)v20 = *(_BYTE *)v21;
      *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
      *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
      *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
      *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
      *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
      *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
      *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
      *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v21 + 104);
      *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
      *(_QWORD *)(v20 + 104) = v24;
      *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v20);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v26 = *(_OWORD *)(v21 + 64);
      v28 = *(_OWORD *)(v21 + 16);
      v27 = *(_OWORD *)(v21 + 32);
      *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
      *(_OWORD *)(v20 + 64) = v26;
      *(_OWORD *)(v20 + 16) = v28;
      *(_OWORD *)(v20 + 32) = v27;
      v30 = *(_OWORD *)(v21 + 96);
      v29 = *(_OWORD *)(v21 + 112);
      v31 = *(_OWORD *)(v21 + 80);
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      *(_OWORD *)(v20 + 96) = v30;
      *(_OWORD *)(v20 + 112) = v29;
      *(_OWORD *)(v20 + 80) = v31;
    }
  }
  else if (v23)
  {
    *(_BYTE *)v20 = *(_BYTE *)v21;
    *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
    *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
    *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
    *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
    *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
    *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
    *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
    *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
    *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
    *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
    *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
    *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
    v25 = *(_QWORD *)(v21 + 104);
    *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
    *(_QWORD *)(v20 + 104) = v25;
    *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v32 = *(_OWORD *)(v21 + 16);
    v33 = *(_OWORD *)(v21 + 32);
    v34 = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 64) = v34;
    *(_OWORD *)(v20 + 16) = v32;
    *(_OWORD *)(v20 + 32) = v33;
    v35 = *(_OWORD *)(v21 + 80);
    v36 = *(_OWORD *)(v21 + 96);
    v37 = *(_OWORD *)(v21 + 112);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    *(_OWORD *)(v20 + 96) = v36;
    *(_OWORD *)(v20 + 112) = v37;
    *(_OWORD *)(v20 + 80) = v35;
  }
  v38 = a3[9];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_QWORD *)v39 = *(_QWORD *)(a2 + v38);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(a2 + v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
  *(_BYTE *)(v39 + 17) = *(_BYTE *)(v40 + 17);
  v41 = a3[10];
  v42 = (_BYTE *)(a1 + v41);
  v43 = (_BYTE *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  v42[2] = v43[2];
  v42[3] = v43[3];
  v44 = a3[11];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_BYTE *)v45 = *(_BYTE *)(a2 + v44);
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(a2 + v44 + 8);
  *(_QWORD *)(v45 + 16) = *(_QWORD *)(a2 + v44 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 24) = *(_BYTE *)(v46 + 24);
  *(_BYTE *)(v45 + 25) = *(_BYTE *)(v46 + 25);
  *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
  *(_QWORD *)(v45 + 40) = *(_QWORD *)(v46 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 48) = *(_BYTE *)(v46 + 48);
  v47 = a3[12];
  v48 = a1 + v47;
  v49 = a2 + v47;
  *(_QWORD *)v48 = *(_QWORD *)(a2 + v47);
  *(_QWORD *)(v48 + 8) = *(_QWORD *)(a2 + v47 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
  *(_BYTE *)(v48 + 17) = *(_BYTE *)(v49 + 17);
  *(_QWORD *)(v48 + 24) = *(_QWORD *)(v49 + 24);
  *(_QWORD *)(v48 + 32) = *(_QWORD *)(v49 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = a3[13];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = *(_QWORD *)(a1 + v50 + 8);
  v54 = *(_QWORD *)(a2 + v50 + 8);
  if (v53)
  {
    if (v54)
    {
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *(_QWORD *)(v51 + 8) = *(_QWORD *)(v52 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
      *(_BYTE *)(v51 + 17) = *(_BYTE *)(v52 + 17);
      *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v51);
      v55 = *(_OWORD *)(v52 + 16);
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *(_OWORD *)(v51 + 16) = v55;
    }
  }
  else if (v54)
  {
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *(_QWORD *)(v51 + 8) = *(_QWORD *)(v52 + 8);
    *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
    *(_BYTE *)(v51 + 17) = *(_BYTE *)(v52 + 17);
    *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v56 = *(_OWORD *)(v52 + 16);
    *(_OWORD *)v51 = *(_OWORD *)v52;
    *(_OWORD *)(v51 + 16) = v56;
  }
  v57 = a3[14];
  v58 = a1 + v57;
  v59 = (__int128 *)(a2 + v57);
  v60 = *(_QWORD *)(a1 + v57 + 8);
  v61 = *((_QWORD *)v59 + 1);
  if (v60 == 1)
  {
    if (v61 == 1)
    {
      v62 = *v59;
      v63 = v59[1];
      *(_QWORD *)(v58 + 32) = *((_QWORD *)v59 + 4);
      *(_OWORD *)v58 = v62;
      *(_OWORD *)(v58 + 16) = v63;
    }
    else
    {
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *(_QWORD *)(v58 + 8) = *((_QWORD *)v59 + 1);
      *(_QWORD *)(v58 + 16) = *((_QWORD *)v59 + 2);
      *(_QWORD *)(v58 + 24) = *((_QWORD *)v59 + 3);
      *(_QWORD *)(v58 + 32) = *((_QWORD *)v59 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v61 == 1)
  {
    sub_1D57EE4B0(v58);
    v64 = *((_QWORD *)v59 + 4);
    v65 = v59[1];
    *(_OWORD *)v58 = *v59;
    *(_OWORD *)(v58 + 16) = v65;
    *(_QWORD *)(v58 + 32) = v64;
  }
  else
  {
    *(_QWORD *)v58 = *(_QWORD *)v59;
    *(_QWORD *)(v58 + 8) = *((_QWORD *)v59 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v58 + 16) = *((_QWORD *)v59 + 2);
    *(_QWORD *)(v58 + 24) = *((_QWORD *)v59 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v58 + 32) = *((_QWORD *)v59 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t initializeWithTake for ArticleSaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  __int128 v41;
  uint64_t v42;
  __int128 *v43;
  __int128 v44;
  __int128 v45;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v19 = a1 + v16;
  v20 = a2 + v16;
  v21 = *(_OWORD *)(v20 + 48);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(_OWORD *)(v19 + 48) = v21;
  *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
  v22 = *(_OWORD *)(v20 + 112);
  *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
  *(_OWORD *)(v19 + 112) = v22;
  v23 = *(_OWORD *)(v20 + 80);
  *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
  *(_OWORD *)(v19 + 80) = v23;
  v24 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v24;
  v25 = a3[9];
  v26 = a3[10];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_WORD *)(v27 + 16) = *(_WORD *)(v28 + 16);
  *(_DWORD *)(a1 + v26) = *(_DWORD *)(a2 + v26);
  v29 = a3[11];
  v30 = a3[12];
  v31 = a1 + v29;
  v32 = a2 + v29;
  v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
  *(_BYTE *)(v31 + 48) = *(_BYTE *)(v32 + 48);
  v34 = a1 + v30;
  v35 = a2 + v30;
  v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  v37 = a3[13];
  v38 = a3[14];
  v39 = (_OWORD *)(a1 + v37);
  v40 = (_OWORD *)(a2 + v37);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = a1 + v38;
  v43 = (__int128 *)(a2 + v38);
  v44 = *v43;
  v45 = v43[1];
  *(_QWORD *)(v42 + 32) = *((_QWORD *)v43 + 4);
  *(_OWORD *)v42 = v44;
  *(_OWORD *)(v42 + 16) = v45;
  return a1;
}

uint64_t assignWithTake for ArticleSaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v11;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  if (*(_QWORD *)(a1 + v12 + 16) == 1)
    goto LABEL_4;
  v15 = *(_QWORD *)(v14 + 16);
  if (v15 == 1)
  {
    sub_1D57D9100(a1 + v12);
LABEL_4:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v13 = *(_BYTE *)v14;
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 16))
  {
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      *(_WORD *)v17 = *(_WORD *)v18;
      *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
      *(_QWORD *)(v17 + 16) = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v18 + 64);
      *(_QWORD *)(v17 + 56) = *(_QWORD *)(v18 + 56);
      *(_QWORD *)(v17 + 64) = v20;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 72) = *(_QWORD *)(v18 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v17 + 80) = *(_BYTE *)(v18 + 80);
      v21 = *(_QWORD *)(v18 + 96);
      *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
      *(_QWORD *)(v17 + 96) = v21;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
      *(_BYTE *)(v17 + 112) = *(_BYTE *)(v18 + 112);
      *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 128) = *(_QWORD *)(v18 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E17B8(v17);
  }
  v22 = *(_OWORD *)(v18 + 112);
  *(_OWORD *)(v17 + 96) = *(_OWORD *)(v18 + 96);
  *(_OWORD *)(v17 + 112) = v22;
  *(_QWORD *)(v17 + 128) = *(_QWORD *)(v18 + 128);
  v23 = *(_OWORD *)(v18 + 48);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(_OWORD *)(v17 + 48) = v23;
  v24 = *(_OWORD *)(v18 + 80);
  *(_OWORD *)(v17 + 64) = *(_OWORD *)(v18 + 64);
  *(_OWORD *)(v17 + 80) = v24;
  v25 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v25;
LABEL_11:
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a2 + v26 + 8);
  *(_QWORD *)v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(v27 + 8) = v29;
  swift_bridgeObjectRelease();
  *(_WORD *)(v27 + 16) = *(_WORD *)(v28 + 16);
  v30 = a3[10];
  v31 = a3[11];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_BYTE *)v32 = *(_BYTE *)v33;
  *(_BYTE *)(v32 + 1) = *(_BYTE *)(v33 + 1);
  *(_WORD *)(v32 + 2) = *(_WORD *)(v33 + 2);
  v34 = a1 + v31;
  v35 = a2 + v31;
  *(_BYTE *)v34 = *(_BYTE *)(a2 + v31);
  v36 = *(_QWORD *)(a2 + v31 + 8);
  v37 = *(_QWORD *)(a2 + v31 + 16);
  *(_QWORD *)(v34 + 8) = v36;
  *(_QWORD *)(v34 + 16) = v37;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v34 + 24) = *(_BYTE *)(v35 + 24);
  *(_BYTE *)(v34 + 25) = *(_BYTE *)(v35 + 25);
  v38 = *(_QWORD *)(v35 + 40);
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  *(_QWORD *)(v34 + 40) = v38;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v34 + 48) = *(_BYTE *)(v35 + 48);
  v39 = a3[12];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)(a2 + v39 + 8);
  *(_QWORD *)v40 = *(_QWORD *)(a2 + v39);
  *(_QWORD *)(v40 + 8) = v42;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
  *(_BYTE *)(v40 + 17) = *(_BYTE *)(v41 + 17);
  v43 = *(_QWORD *)(v41 + 32);
  *(_QWORD *)(v40 + 24) = *(_QWORD *)(v41 + 24);
  *(_QWORD *)(v40 + 32) = v43;
  swift_bridgeObjectRelease();
  v44 = a3[13];
  v45 = a1 + v44;
  v46 = a2 + v44;
  if (*(_QWORD *)(a1 + v44 + 8))
  {
    v47 = *(_QWORD *)(v46 + 8);
    if (v47)
    {
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *(_QWORD *)(v45 + 8) = v47;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
      *(_BYTE *)(v45 + 17) = *(_BYTE *)(v46 + 17);
      *(_QWORD *)(v45 + 24) = *(_QWORD *)(v46 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57EE47C(v45);
  }
  v48 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *(_OWORD *)(v45 + 16) = v48;
LABEL_16:
  v49 = a3[14];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  if (*(_QWORD *)(a1 + v49 + 8) != 1)
  {
    v52 = v51[1];
    if (v52 != 1)
    {
      *v50 = *v51;
      v50[1] = v52;
      swift_bridgeObjectRelease();
      v54 = v51[3];
      v50[2] = v51[2];
      v50[3] = v54;
      swift_bridgeObjectRelease();
      v50[4] = v51[4];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D57EE4B0((uint64_t)v50);
  }
  v53 = *((_OWORD *)v51 + 1);
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v53;
  v50[4] = v51[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleSaveEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A03298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleSaveEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A03324(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleSaveEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D5A033EC + 4 * byte_1D5ADBF30[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D5A03420 + 4 * byte_1D5ADBF2B[v4]))();
}

uint64_t sub_1D5A03420(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A03428(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A03430);
  return result;
}

uint64_t sub_1D5A0343C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A03444);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D5A03448(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A03450(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleSaveEvent.Model.CodingKeys()
{
  return &type metadata for ArticleSaveEvent.Model.CodingKeys;
}

unint64_t sub_1D5A03470()
{
  unint64_t result;

  result = qword_1EFF507C0;
  if (!qword_1EFF507C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC214, &type metadata for ArticleSaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF507C0);
  }
  return result;
}

unint64_t sub_1D5A034B8()
{
  unint64_t result;

  result = qword_1EFF507C8;
  if (!qword_1EFF507C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC184, &type metadata for ArticleSaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF507C8);
  }
  return result;
}

unint64_t sub_1D5A03500()
{
  unint64_t result;

  result = qword_1EFF507D0;
  if (!qword_1EFF507D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC1AC, &type metadata for ArticleSaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF507D0);
  }
  return result;
}

uint64_t sub_1D5A03544(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED320)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_1D5A039F4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF507D8, MEMORY[0x1E0CF8078]);
}

uint64_t static SportScoreConcernEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF507D8, a1);
}

uint64_t sub_1D5A03A34(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF507F0, MEMORY[0x1E0CF8380]);
}

uint64_t static SportScoreConcernEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF507F0, a1);
}

uint64_t SportScoreConcernEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SportScoreConcernEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SportScoreConcernEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SportScoreConcernEvent.scoreConcernData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportScoreConcernEvent(0) + 20);
  sub_1D5A03B24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SportScoreConcernEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF50890);
}

void sub_1D5A03B24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF50808)
  {
    sub_1D5A03B88();
    sub_1D5A03BCC();
    v0 = sub_1D5AADB48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF50808);
  }
}

unint64_t sub_1D5A03B88()
{
  unint64_t result;

  result = qword_1EFF50810;
  if (!qword_1EFF50810)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportScoreConcernData, &type metadata for SportScoreConcernData);
    atomic_store(result, (unint64_t *)&qword_1EFF50810);
  }
  return result;
}

unint64_t sub_1D5A03BCC()
{
  unint64_t result;

  result = qword_1EFF50818;
  if (!qword_1EFF50818)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportScoreConcernData, &type metadata for SportScoreConcernData);
    atomic_store(result, (unint64_t *)&qword_1EFF50818);
  }
  return result;
}

uint64_t SportScoreConcernEvent.scoreConcernData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportScoreConcernEvent(0) + 20);
  sub_1D5A03B24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportScoreConcernEvent.scoreConcernData.modify())(_QWORD)
{
  type metadata accessor for SportScoreConcernEvent(0);
  return nullsub_1;
}

uint64_t SportScoreConcernEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for SportScoreConcernEvent(0) + 20);
  sub_1D5A03B24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t SportScoreConcernEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SportScoreConcernEvent.Model.scoreConcernData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1 + *(int *)(type metadata accessor for SportScoreConcernEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v8 = *(_QWORD *)(v3 + 40);
  v9 = *(_QWORD *)(v3 + 48);
  v10 = *(_QWORD *)(v3 + 56);
  v11 = *(_QWORD *)(v3 + 80);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v3 + 64);
  *(_QWORD *)(a1 + 80) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SportScoreConcernEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF50920);
}

__n128 SportScoreConcernEvent.Model.init(eventData:scoreConcernData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 result;
  __int128 v14;
  __int128 v15;
  __n128 v16;

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 3);
  v8 = *((_QWORD *)a2 + 4);
  v15 = *(_OWORD *)(a2 + 8);
  v16 = *(__n128 *)(a2 + 56);
  v9 = *((_QWORD *)a2 + 9);
  v10 = *((_QWORD *)a2 + 10);
  v11 = sub_1D5AADF98();
  v14 = *(_OWORD *)(a2 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a3, a1, v11);
  v12 = a3 + *(int *)(type metadata accessor for SportScoreConcernEvent.Model(0) + 20);
  *(_BYTE *)v12 = v6;
  *(_OWORD *)(v12 + 8) = v15;
  *(_QWORD *)(v12 + 24) = v7;
  *(_QWORD *)(v12 + 32) = v8;
  *(_OWORD *)(v12 + 40) = v14;
  result = v16;
  *(__n128 *)(v12 + 56) = v16;
  *(_QWORD *)(v12 + 72) = v9;
  *(_QWORD *)(v12 + 80) = v10;
  return result;
}

uint64_t sub_1D5A03E6C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D5A03EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A05188(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A03ED4()
{
  sub_1D5A040B4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A03EFC()
{
  sub_1D5A040B4();
  return sub_1D5AAEEE0();
}

uint64_t SportScoreConcernEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _BYTE v16[8];
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v3 = v1;
  sub_1D5A043AC(0, &qword_1EFF50820, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v16[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A040B4();
  sub_1D5AAEEC8();
  v17 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (char *)(v3 + *(int *)(type metadata accessor for SportScoreConcernEvent.Model(0) + 20));
    v11 = *(_OWORD *)(v10 + 8);
    v12 = *((_QWORD *)v10 + 3);
    v13 = *((_QWORD *)v10 + 4);
    v17 = *v10;
    v18 = v11;
    v19 = v12;
    v20 = v13;
    v14 = *(_OWORD *)(v10 + 56);
    v21 = *(_OWORD *)(v10 + 40);
    v22 = v14;
    v23 = *(_OWORD *)(v10 + 72);
    v16[7] = 1;
    sub_1D5A03BCC();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A040B4()
{
  unint64_t result;

  result = qword_1EFF50828;
  if (!qword_1EFF50828)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC44C, &type metadata for SportScoreConcernEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50828);
  }
  return result;
}

uint64_t SportScoreConcernEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char v36;

  v24 = a2;
  v28 = sub_1D5AADF98();
  v25 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A043AC(0, &qword_1EFF50830, MEMORY[0x1E0DED048]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for SportScoreConcernEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A040B4();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = a1;
  v23 = v6;
  v12 = (uint64_t)v11;
  v13 = v25;
  v29 = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v26;
  v14 = v27;
  v16 = v28;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v36 = 1;
  sub_1D5A03B88();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v14);
  v17 = v30;
  v18 = v31;
  v19 = v32;
  v20 = v12 + *(int *)(v9 + 20);
  *(_BYTE *)v20 = v29;
  *(_OWORD *)(v20 + 8) = v17;
  *(_QWORD *)(v20 + 24) = v18;
  *(_QWORD *)(v20 + 32) = v19;
  *(_OWORD *)(v20 + 40) = v33;
  *(_OWORD *)(v20 + 56) = v34;
  *(_OWORD *)(v20 + 72) = v35;
  sub_1D5A04408(v12, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_1D5A0444C(v12);
}

void sub_1D5A043AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A040B4();
    v7 = a3(a1, &type metadata for SportScoreConcernEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A04408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportScoreConcernEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A0444C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SportScoreConcernEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A04488@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportScoreConcernEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A0449C(_QWORD *a1)
{
  return SportScoreConcernEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A044B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF507D8, a1);
}

uint64_t sub_1D5A044D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF507F0, a1);
}

uint64_t sub_1D5A044F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D5A03B24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for SportScoreConcernEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D5A03B24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for SportScoreConcernEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D5A03B24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for SportScoreConcernEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5A03B24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for SportScoreConcernEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5A03B24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for SportScoreConcernEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5A03B24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SportScoreConcernEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5A03B24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportScoreConcernEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A04870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D5A03B24();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SportScoreConcernEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A048F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D5A03B24();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A0496C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D5A03B24();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SportScoreConcernEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *v9 = *v10;
    v11 = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    *((_QWORD *)v9 + 2) = v11;
    v12 = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
    *((_QWORD *)v9 + 4) = v12;
    v13 = *((_QWORD *)v10 + 6);
    *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
    *((_QWORD *)v9 + 6) = v13;
    v14 = *((_QWORD *)v10 + 8);
    *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
    *((_QWORD *)v9 + 8) = v14;
    v15 = *((_QWORD *)v10 + 10);
    *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
    *((_QWORD *)v9 + 10) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SportScoreConcernEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportScoreConcernEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  v11 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v11;
  v12 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v12;
  v13 = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = v13;
  v14 = *(_QWORD *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 80) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportScoreConcernEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SportScoreConcernEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v10;
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v11;
  return a1;
}

uint64_t assignWithTake for SportScoreConcernEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 80) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportScoreConcernEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A04E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SportScoreConcernEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A04EF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A04F74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportScoreConcernEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5A05030 + 4 * byte_1D5ADC295[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5A05064 + 4 * byte_1D5ADC290[v4]))();
}

uint64_t sub_1D5A05064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A0506C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A05074);
  return result;
}

uint64_t sub_1D5A05080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A05088);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5A0508C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A05094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportScoreConcernEvent.Model.CodingKeys()
{
  return &type metadata for SportScoreConcernEvent.Model.CodingKeys;
}

unint64_t sub_1D5A050B4()
{
  unint64_t result;

  result = qword_1EFF50958;
  if (!qword_1EFF50958)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC424, &type metadata for SportScoreConcernEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50958);
  }
  return result;
}

unint64_t sub_1D5A050FC()
{
  unint64_t result;

  result = qword_1EFF50960;
  if (!qword_1EFF50960)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC394, &type metadata for SportScoreConcernEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50960);
  }
  return result;
}

unint64_t sub_1D5A05144()
{
  unint64_t result;

  result = qword_1EFF50968;
  if (!qword_1EFF50968)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC3BC, &type metadata for SportScoreConcernEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50968);
  }
  return result;
}

uint64_t sub_1D5A05188(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF1A90)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t CommandExecutionSource.tracker.getter()
{
  uint64_t v1;

  sub_1D5AAE37C();
  sub_1D5A052E0();
  sub_1D5AADF68();
  if (swift_dynamicCast())
    return v1;
  else
    return 0;
}

unint64_t sub_1D5A052E0()
{
  unint64_t result;

  result = qword_1EFF50970;
  if (!qword_1EFF50970)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFF50970);
  }
  return result;
}

NewsAnalytics::PuzzleLayout_optional __swiftcall PuzzleLayout.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsAnalytics::PuzzleLayout_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t PuzzleLayout.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5A053D4(char *a1, char *a2)
{
  return sub_1D5A3CF04(*a1, *a2);
}

unint64_t sub_1D5A053E4()
{
  unint64_t result;

  result = qword_1EFF50978;
  if (!qword_1EFF50978)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleLayout, &type metadata for PuzzleLayout);
    atomic_store(result, (unint64_t *)&qword_1EFF50978);
  }
  return result;
}

uint64_t sub_1D5A05428()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A054AC()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A0550C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::PuzzleLayout_optional sub_1D5A0558C(Swift::String *a1)
{
  return PuzzleLayout.init(rawValue:)(*a1);
}

void sub_1D5A05598(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x6E776F6E6B6E75;
  if (*v1)
    v2 = 0xD000000000000011;
  v3 = 0x80000001D5AEC150;
  if (!*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D5A055DC()
{
  sub_1D5A05750();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A05638()
{
  sub_1D5A05750();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for PuzzleLayout(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5A056D0 + 4 * byte_1D5ADC4A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5A05704 + 4 * byte_1D5ADC4A0[v4]))();
}

uint64_t sub_1D5A05704(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A0570C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A05714);
  return result;
}

uint64_t sub_1D5A05720(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A05728);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5A0572C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A05734(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLayout()
{
  return &type metadata for PuzzleLayout;
}

unint64_t sub_1D5A05750()
{
  unint64_t result;

  result = qword_1EFF50980;
  if (!qword_1EFF50980)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleLayout, &type metadata for PuzzleLayout);
    atomic_store(result, (unint64_t *)&qword_1EFF50980);
  }
  return result;
}

uint64_t sub_1D5A05794(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF50988, MEMORY[0x1E0CF8078]);
}

uint64_t static FollowTagEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50988, a1);
}

uint64_t sub_1D5A057D4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF509A0, MEMORY[0x1E0CF8380]);
}

uint64_t static FollowTagEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF509A0, a1);
}

uint64_t FollowTagEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FollowTagEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FollowTagEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FollowTagEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FollowTagEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowTagEvent.tagData.modify())(_QWORD)
{
  type metadata accessor for FollowTagEvent(0);
  return nullsub_1;
}

uint64_t FollowTagEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FollowTagEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowTagEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for FollowTagEvent(0);
  return nullsub_1;
}

uint64_t FollowTagEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FollowTagEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowTagEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for FollowTagEvent(0);
  return nullsub_1;
}

uint64_t FollowTagEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FollowTagEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowTagEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for FollowTagEvent(0);
  return nullsub_1;
}

uint64_t FollowTagEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FollowTagEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowTagEvent.actionData.modify())(_QWORD)
{
  type metadata accessor for FollowTagEvent(0);
  return nullsub_1;
}

uint64_t FollowTagEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FollowTagEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowTagEvent.sectionData.modify())(_QWORD)
{
  type metadata accessor for FollowTagEvent(0);
  return nullsub_1;
}

uint64_t FollowTagEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for FollowTagEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v8, v17);
}

uint64_t FollowTagEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FollowTagEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for FollowTagEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t FollowTagEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FollowTagEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t FollowTagEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FollowTagEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t FollowTagEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for FollowTagEvent.Model(0) + 32));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FollowTagEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FollowTagEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t FollowTagEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowTagEvent.Model(0) + 40);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

__n128 FollowTagEvent.Model.init(eventData:tagData:feedData:viewData:userBundleSubscriptionContextData:actionData:sectionData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, char *a6@<X5>, __n128 *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 *v24;
  __n128 result;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  unsigned __int8 v34;
  unint64_t v35;
  __n128 v36;

  v10 = *a2;
  v11 = a2[1];
  v26 = *a3;
  v12 = *((_QWORD *)a3 + 2);
  v13 = *a4;
  v14 = a4[1];
  v15 = *((_WORD *)a4 + 8);
  v16 = *a5;
  v17 = *((_QWORD *)a5 + 1);
  v32 = *((_QWORD *)a5 + 2);
  v30 = a5[25];
  v31 = a5[24];
  v28 = *((_QWORD *)a5 + 5);
  v29 = *((_QWORD *)a5 + 4);
  v27 = a5[48];
  v36 = *a7;
  v35 = a7[1].n128_u64[0];
  v33 = *a6;
  v34 = a7[1].n128_u8[8];
  v18 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a8, a1, v18);
  v19 = (int *)type metadata accessor for FollowTagEvent.Model(0);
  v20 = (_QWORD *)(a8 + v19[5]);
  *v20 = v10;
  v20[1] = v11;
  v21 = a8 + v19[6];
  *(_OWORD *)v21 = v26;
  *(_QWORD *)(v21 + 16) = v12;
  v22 = a8 + v19[7];
  *(_QWORD *)v22 = v13;
  *(_QWORD *)(v22 + 8) = v14;
  *(_WORD *)(v22 + 16) = v15;
  v23 = a8 + v19[8];
  *(_BYTE *)v23 = v16;
  *(_QWORD *)(v23 + 8) = v17;
  *(_QWORD *)(v23 + 16) = v32;
  *(_BYTE *)(v23 + 24) = v31;
  *(_BYTE *)(v23 + 25) = v30;
  *(_QWORD *)(v23 + 32) = v29;
  *(_QWORD *)(v23 + 40) = v28;
  *(_BYTE *)(v23 + 48) = v27;
  *(_BYTE *)(a8 + v19[9]) = v33;
  v24 = (__n128 *)(a8 + v19[10]);
  result = v36;
  *v24 = v36;
  v24[1].n128_u64[0] = v35;
  v24[1].n128_u8[8] = v34;
  return result;
}

uint64_t sub_1D5A0634C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A06384 + 4 * byte_1D5ADC5B8[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A06384()
{
  return 0x61746144676174;
}

uint64_t sub_1D5A0639C()
{
  return 0x6174614464656566;
}

unint64_t sub_1D5A063C4()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5A063E0()
{
  return 0x61446E6F69746361;
}

uint64_t sub_1D5A063FC()
{
  return 0x446E6F6974636573;
}

uint64_t sub_1D5A0641C()
{
  unsigned __int8 *v0;

  return sub_1D5A0634C(*v0);
}

uint64_t sub_1D5A06424()
{
  sub_1D5A06790();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A0644C()
{
  sub_1D5A06790();
  return sub_1D5AAEEE0();
}

uint64_t FollowTagEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _BYTE v27[24];
  char v28;
  char v29;
  __int128 v30;
  char v31;
  char v32;

  v3 = v1;
  sub_1D5A06D04(0, &qword_1EFF509B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v27[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A06790();
  sub_1D5AAEEC8();
  v27[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for FollowTagEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)v27 = v13;
    *(_QWORD *)&v27[8] = v12;
    v32 = 1;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v14 = v3 + v10[6];
    v15 = *(_QWORD *)(v14 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v14;
    *(_QWORD *)&v27[16] = v15;
    v32 = 2;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    LOWORD(v16) = *((_WORD *)v16 + 8);
    *(_QWORD *)v27 = v17;
    *(_QWORD *)&v27[8] = v18;
    *(_WORD *)&v27[16] = (_WORD)v16;
    v32 = 3;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v19 = v3 + v10[8];
    v20 = *(_BYTE *)(v19 + 24);
    v21 = *(_BYTE *)(v19 + 25);
    v22 = *(_BYTE *)(v19 + 48);
    v27[0] = *(_BYTE *)v19;
    *(_OWORD *)&v27[8] = *(_OWORD *)(v19 + 8);
    v28 = v20;
    v29 = v21;
    v30 = *(_OWORD *)(v19 + 32);
    v31 = v22;
    v32 = 4;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v27[0] = *(_BYTE *)(v3 + v10[9]);
    v32 = 5;
    sub_1D57CC038();
    sub_1D5AAED6C();
    v23 = v3 + v10[10];
    v24 = *(_QWORD *)(v23 + 16);
    v25 = *(_BYTE *)(v23 + 24);
    *(_OWORD *)v27 = *(_OWORD *)v23;
    *(_QWORD *)&v27[16] = v24;
    v28 = v25;
    v32 = 6;
    sub_1D57CB720();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A06790()
{
  unint64_t result;

  result = qword_1EFF509C0;
  if (!qword_1EFF509C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC834, &type metadata for FollowTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF509C0);
  }
  return result;
}

uint64_t FollowTagEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int16 v21;
  char *v22;
  char v23;
  char v24;
  char v25;
  char *v26;
  uint64_t v27;
  char v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  _BYTE v37[24];
  char v38;
  char v39;
  __int128 v40;
  char v41;
  char v42;

  v31 = a2;
  v3 = sub_1D5AADF98();
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A06D04(0, &qword_1EFF509C8, MEMORY[0x1E0DED048]);
  v33 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - v7;
  v9 = (int *)type metadata accessor for FollowTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A06790();
  v35 = v8;
  v12 = (uint64_t)v36;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v32;
  v36 = a1;
  v37[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v33;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v34, v3);
  v42 = 1;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v16 = *(_QWORD *)&v37[8];
  v17 = &v11[v9[5]];
  *(_QWORD *)v17 = *(_QWORD *)v37;
  *((_QWORD *)v17 + 1) = v16;
  v42 = 2;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v18 = *(_QWORD *)&v37[16];
  v19 = &v11[v9[6]];
  *(_OWORD *)v19 = *(_OWORD *)v37;
  *((_QWORD *)v19 + 2) = v18;
  v42 = 3;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v20 = *(_QWORD *)&v37[8];
  v21 = *(_WORD *)&v37[16];
  v22 = &v11[v9[7]];
  *(_QWORD *)v22 = *(_QWORD *)v37;
  *((_QWORD *)v22 + 1) = v20;
  *((_WORD *)v22 + 8) = v21;
  v42 = 4;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v23 = v38;
  v24 = v39;
  v25 = v41;
  v26 = &v11[v9[8]];
  *v26 = v37[0];
  *(_OWORD *)(v26 + 8) = *(_OWORD *)&v37[8];
  v26[24] = v23;
  v26[25] = v24;
  *((_OWORD *)v26 + 2) = v40;
  v26[48] = v25;
  v42 = 5;
  sub_1D57CBFF4();
  sub_1D5AAECD0();
  v11[v9[9]] = v37[0];
  v42 = 6;
  sub_1D57CB6DC();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v35, v15);
  v27 = *(_QWORD *)&v37[16];
  v28 = v38;
  v29 = &v11[v9[10]];
  *(_OWORD *)v29 = *(_OWORD *)v37;
  *((_QWORD *)v29 + 2) = v27;
  v29[24] = v28;
  sub_1D5A06D60((uint64_t)v11, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_1D5A06DA4((uint64_t)v11);
}

void sub_1D5A06D04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A06790();
    v7 = a3(a1, &type metadata for FollowTagEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A06D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FollowTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A06DA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FollowTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A06DE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FollowTagEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A06DF4(_QWORD *a1)
{
  return FollowTagEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A06E08@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50988, a1);
}

uint64_t sub_1D5A06E2C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF509A0, a1);
}

uint64_t getEnumTagSinglePayload for FollowTagEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A06E5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FollowTagEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A07050(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for FollowTagEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A0724C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowTagEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A072D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for FollowTagEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D5A073A0 + 4 * byte_1D5ADC5C4[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D5A073D4 + 4 * byte_1D5ADC5BF[v4]))();
}

uint64_t sub_1D5A073D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A073DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A073E4);
  return result;
}

uint64_t sub_1D5A073F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A073F8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D5A073FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A07404(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FollowTagEvent.Model.CodingKeys()
{
  return &type metadata for FollowTagEvent.Model.CodingKeys;
}

unint64_t sub_1D5A07424()
{
  unint64_t result;

  result = qword_1EFF509D0;
  if (!qword_1EFF509D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC80C, &type metadata for FollowTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF509D0);
  }
  return result;
}

unint64_t sub_1D5A0746C()
{
  unint64_t result;

  result = qword_1EFF509D8;
  if (!qword_1EFF509D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC77C, &type metadata for FollowTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF509D8);
  }
  return result;
}

unint64_t sub_1D5A074B4()
{
  unint64_t result;

  result = qword_1EFF509E0;
  if (!qword_1EFF509E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADC7A4, &type metadata for FollowTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF509E0);
  }
  return result;
}

uint64_t sub_1D5A074F8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF509E8, MEMORY[0x1E0CF8078]);
}

uint64_t static AudioEngagementCompletedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF473F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF509E8, a1);
}

uint64_t sub_1D5A07538(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF50A00, MEMORY[0x1E0CF8380]);
}

uint64_t static AudioEngagementCompletedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47400, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50A00, a1);
}

uint64_t AudioEngagementCompletedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AudioEngagementCompletedEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AudioEngagementCompletedEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AudioEngagementCompletedEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CBA20);
}

uint64_t AudioEngagementCompletedEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.trackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.trackData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.audioEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.audioEngagementData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.issueViewData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.playbackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.playbackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.playbackData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.userChannelContextData.modify())(_QWORD)
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AudioEngagementCompletedEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v10, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v2, v29);
}

uint64_t AudioEngagementCompletedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AudioEngagementCompletedEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t type metadata accessor for AudioEngagementCompletedEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CB960);
}

uint64_t AudioEngagementCompletedEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *AudioEngagementCompletedEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 28), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t AudioEngagementCompletedEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t AudioEngagementCompletedEvent.Model.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AudioEngagementCompletedEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementCompletedEvent.Model.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 44);
  v4 = *(_BYTE *)(v3 + 16);
  v5 = *(_DWORD *)(v3 + 20);
  v7 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v8 = *(_WORD *)(v3 + 40);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 20) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = v8;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementCompletedEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 48));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementCompletedEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 52));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t AudioEngagementCompletedEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 56));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

float AudioEngagementCompletedEvent.Model.playbackData.getter@<S0>(float *a1@<X8>)
{
  uint64_t v1;
  float result;

  result = *(float *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 60));
  *a1 = result;
  return result;
}

uint64_t AudioEngagementCompletedEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 64));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

__n128 AudioEngagementCompletedEvent.Model.init(eventData:articleData:channelData:groupData:feedData:trackData:viewData:audioEngagementData:userBundleSubscriptionContextData:issueData:issueViewData:playbackData:userChannelContextData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X4>, int *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, char *a10, __n128 *a11, uint64_t *a12, int *a13, char *a14)
{
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  char v23;
  __int16 v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 *v34;
  __n128 result;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  unint64_t v64;
  __n128 v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _BYTE v74[23];
  _BYTE v75[144];

  v73 = a2[6];
  *(_OWORD *)v74 = a2[7];
  *(_QWORD *)&v74[15] = *(_QWORD *)((char *)a2 + 127);
  v69 = a2[2];
  v70 = a2[3];
  v71 = a2[4];
  v72 = a2[5];
  v67 = *a2;
  v68 = a2[1];
  v43 = a3[1];
  v44 = *a3;
  v41 = *((_BYTE *)a3 + 17);
  v42 = *((_BYTE *)a3 + 16);
  v39 = a3[4];
  v40 = a3[3];
  sub_1D57DD5B8(a4, (uint64_t)v75);
  v45 = *a5;
  v19 = *((_QWORD *)a5 + 2);
  v46 = *a6;
  LOBYTE(a6) = *((_BYTE *)a6 + 4);
  v47 = a7[1];
  v48 = *a7;
  LOWORD(a7) = *((_WORD *)a7 + 8);
  v53 = a8[1];
  v54 = *a8;
  v51 = *((_DWORD *)a8 + 5);
  v52 = *((_BYTE *)a8 + 16);
  v49 = a8[4];
  v50 = a8[3];
  LOWORD(a8) = *((_WORD *)a8 + 20);
  v62 = *a10;
  v60 = *((_QWORD *)a10 + 2);
  v61 = *((_QWORD *)a10 + 1);
  v58 = a10[25];
  v59 = a10[24];
  v56 = *((_QWORD *)a10 + 5);
  v57 = *((_QWORD *)a10 + 4);
  v55 = a10[48];
  v65 = *a11;
  v63 = a11[1].n128_u64[1];
  v64 = a11[1].n128_u64[0];
  v20 = *a12;
  v66 = a12[1];
  v21 = *a13;
  v22 = *a14;
  v23 = a14[1];
  v24 = *((_WORD *)a14 + 1);
  v25 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a9, a1, v25);
  v26 = (int *)type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  v27 = a9 + v26[5];
  *(_OWORD *)(v27 + 96) = v73;
  *(_OWORD *)(v27 + 112) = *(_OWORD *)v74;
  *(_QWORD *)(v27 + 127) = *(_QWORD *)&v74[15];
  *(_OWORD *)(v27 + 32) = v69;
  *(_OWORD *)(v27 + 48) = v70;
  *(_OWORD *)(v27 + 64) = v71;
  *(_OWORD *)(v27 + 80) = v72;
  *(_OWORD *)v27 = v67;
  *(_OWORD *)(v27 + 16) = v68;
  v28 = a9 + v26[6];
  *(_QWORD *)v28 = v44;
  *(_QWORD *)(v28 + 8) = v43;
  *(_BYTE *)(v28 + 16) = v42;
  *(_BYTE *)(v28 + 17) = v41;
  *(_QWORD *)(v28 + 24) = v40;
  *(_QWORD *)(v28 + 32) = v39;
  sub_1D57DD5B8((uint64_t)v75, a9 + v26[7]);
  v29 = a9 + v26[8];
  *(_OWORD *)v29 = v45;
  *(_QWORD *)(v29 + 16) = v19;
  v30 = a9 + v26[9];
  *(_DWORD *)v30 = v46;
  *(_BYTE *)(v30 + 4) = (_BYTE)a6;
  v31 = a9 + v26[10];
  *(_QWORD *)v31 = v48;
  *(_QWORD *)(v31 + 8) = v47;
  *(_WORD *)(v31 + 16) = (_WORD)a7;
  v32 = a9 + v26[11];
  *(_QWORD *)v32 = v54;
  *(_QWORD *)(v32 + 8) = v53;
  *(_BYTE *)(v32 + 16) = v52;
  *(_DWORD *)(v32 + 20) = v51;
  *(_QWORD *)(v32 + 24) = v50;
  *(_QWORD *)(v32 + 32) = v49;
  *(_WORD *)(v32 + 40) = (_WORD)a8;
  v33 = a9 + v26[12];
  *(_BYTE *)v33 = v62;
  *(_QWORD *)(v33 + 8) = v61;
  *(_QWORD *)(v33 + 16) = v60;
  *(_BYTE *)(v33 + 24) = v59;
  *(_BYTE *)(v33 + 25) = v58;
  *(_QWORD *)(v33 + 32) = v57;
  *(_QWORD *)(v33 + 40) = v56;
  *(_BYTE *)(v33 + 48) = v55;
  v34 = (__n128 *)(a9 + v26[13]);
  result = v65;
  *v34 = v65;
  v34[1].n128_u64[0] = v64;
  v34[1].n128_u64[1] = v63;
  v36 = (_QWORD *)(a9 + v26[14]);
  *v36 = v20;
  v36[1] = v66;
  *(_DWORD *)(a9 + v26[15]) = v21;
  v37 = a9 + v26[16];
  *(_BYTE *)v37 = v22;
  *(_BYTE *)(v37 + 1) = v23;
  *(_WORD *)(v37 + 2) = v24;
  return result;
}

uint64_t sub_1D5A08C0C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A08C44 + 4 * byte_1D5ADC890[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A08C44()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D5A08C78()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D5A08C8C()
{
  return 0x6174614464656566;
}

unint64_t sub_1D5A08CC8()
{
  return 0xD000000000000013;
}

unint64_t sub_1D5A08CE4()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5A08D74()
{
  unsigned __int8 *v0;

  return sub_1D5A08C0C(*v0);
}

uint64_t sub_1D5A08D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A0DD1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A08DA0()
{
  sub_1D5A09334();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A08DC8()
{
  sub_1D5A09334();
  return sub_1D5AAEEE0();
}

uint64_t AudioEngagementCompletedEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  int v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  char v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  _OWORD *v39;
  __int128 v40;
  char *v41;
  char v42;
  char v43;
  uint64_t v45;
  char v46;
  _OWORD v47[2];
  __int128 v48;
  char v49;
  _OWORD v50[7];
  _BYTE v51[23];
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;

  v3 = v1;
  sub_1D5A09D08(0, &qword_1EFF50A18, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v45 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A09334();
  sub_1D5AAEEC8();
  v59 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AudioEngagementCompletedEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_OWORD *)(v11 + 112);
    v50[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v51 = v12;
    *(_QWORD *)&v51[15] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    v50[2] = *(_OWORD *)(v11 + 32);
    v50[3] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v50[4] = *(_OWORD *)(v11 + 64);
    v50[5] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    v50[0] = *(_OWORD *)v11;
    v50[1] = v15;
    LOBYTE(v47[0]) = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[6]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    v53 = v17;
    v54 = v18;
    v55 = v19;
    v56 = v20;
    v57 = v22;
    v58 = v21;
    v52 = 2;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[7], (uint64_t)v50);
    sub_1D57DD5B8((uint64_t)v50, (uint64_t)v47);
    v46 = 3;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v23 = v3 + v10[8];
    v24 = *(_QWORD *)(v23 + 16);
    v47[0] = *(_OWORD *)v23;
    *(_QWORD *)&v47[1] = v24;
    v46 = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v25 = (int *)(v3 + v10[9]);
    v26 = *v25;
    LOBYTE(v25) = *((_BYTE *)v25 + 4);
    LODWORD(v47[0]) = v26;
    BYTE4(v47[0]) = (_BYTE)v25;
    v46 = 5;
    sub_1D57C5E0C();
    sub_1D5AAED6C();
    v27 = v3 + v10[10];
    v28 = *(_WORD *)(v27 + 16);
    v47[0] = *(_OWORD *)v27;
    LOWORD(v47[1]) = v28;
    v46 = 6;
    sub_1D57C62A4();
    sub_1D5AAED18();
    v29 = v3 + v10[11];
    v30 = *(_BYTE *)(v29 + 16);
    v31 = *(_DWORD *)(v29 + 20);
    v32 = *(_QWORD *)(v29 + 24);
    v33 = *(_QWORD *)(v29 + 32);
    v34 = *(_WORD *)(v29 + 40);
    v47[0] = *(_OWORD *)v29;
    LOBYTE(v47[1]) = v30;
    DWORD1(v47[1]) = v31;
    *((_QWORD *)&v47[1] + 1) = v32;
    *(_QWORD *)&v48 = v33;
    WORD4(v48) = v34;
    v46 = 7;
    sub_1D57C8D54();
    sub_1D5AAED6C();
    v35 = v3 + v10[12];
    v36 = *(_BYTE *)(v35 + 24);
    v37 = *(_BYTE *)(v35 + 25);
    v38 = *(_BYTE *)(v35 + 48);
    LOBYTE(v47[0]) = *(_BYTE *)v35;
    *(_OWORD *)((char *)v47 + 8) = *(_OWORD *)(v35 + 8);
    BYTE8(v47[1]) = v36;
    BYTE9(v47[1]) = v37;
    v48 = *(_OWORD *)(v35 + 32);
    v49 = v38;
    v46 = 8;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v39 = (_OWORD *)(v3 + v10[13]);
    v40 = v39[1];
    v47[0] = *v39;
    v47[1] = v40;
    v46 = 9;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v47[0] = *(_OWORD *)(v3 + v10[14]);
    v46 = 10;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    LODWORD(v47[0]) = *(_DWORD *)(v3 + v10[15]);
    v46 = 11;
    sub_1D57CB3C8();
    sub_1D5AAED6C();
    v41 = (char *)(v3 + v10[16]);
    v42 = *v41;
    v43 = v41[1];
    LOWORD(v41) = *((_WORD *)v41 + 1);
    LOBYTE(v47[0]) = v42;
    BYTE1(v47[0]) = v43;
    WORD1(v47[0]) = (_WORD)v41;
    v46 = 12;
    sub_1D57C7B24();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A09334()
{
  unint64_t result;

  result = qword_1EFF50A20;
  if (!qword_1EFF50A20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADCBF4, &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50A20);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int v21;
  int v22;
  int *v23;
  char *v24;
  int *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char v39;
  char *v40;
  __int16 v41;
  char *v42;
  char v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  __int16 v47;
  char *v48;
  char v49;
  char v50;
  char v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __int16 v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  _OWORD v72[2];
  __int128 v73;
  char v74;
  char v75;
  _BYTE v76[144];
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _BYTE v84[23];
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _OWORD v92[3];
  int *v93;

  v64 = a2;
  v4 = sub_1D5AADF98();
  v66 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A09D08(0, &qword_1EFF50A28, MEMORY[0x1E0DED048]);
  v67 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v62 - v9;
  v93 = (int *)type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  MEMORY[0x1E0C80A78](v93);
  v71 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v69 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D5A09334();
  v65 = v10;
  sub_1D5AAEEB0();
  if (v2)
  {
    v70 = v2;
    LODWORD(v67) = 0;
    v14 = v71;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    v21 = 0;
    v68 = 0;
    v22 = 0;
    v23 = v93;
    if ((_DWORD)v67)
      goto LABEL_5;
  }
  else
  {
    v63 = v8;
    LOBYTE(v85) = 0;
    sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v13 = v4;
    v24 = v71;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v71, v6, v13);
    v76[143] = 1;
    sub_1D57CB8FC();
    sub_1D5AAECD0();
    v25 = v93;
    v26 = &v24[v93[5]];
    v27 = *(_OWORD *)v84;
    *((_OWORD *)v26 + 6) = v83;
    *((_OWORD *)v26 + 7) = v27;
    *(_QWORD *)(v26 + 127) = *(_QWORD *)&v84[15];
    v28 = v80;
    *((_OWORD *)v26 + 2) = v79;
    *((_OWORD *)v26 + 3) = v28;
    v29 = v82;
    *((_OWORD *)v26 + 4) = v81;
    *((_OWORD *)v26 + 5) = v29;
    v30 = v78;
    *(_OWORD *)v26 = v77;
    *((_OWORD *)v26 + 1) = v30;
    v76[0] = 2;
    sub_1D57CB874();
    sub_1D5AAECD0();
    v31 = *((_QWORD *)&v85 + 1);
    v32 = v86;
    v33 = BYTE1(v86);
    v34 = *((_QWORD *)&v86 + 1);
    v35 = v87;
    v36 = &v24[v25[6]];
    *(_QWORD *)v36 = v85;
    *((_QWORD *)v36 + 1) = v31;
    v36[16] = v32;
    v36[17] = v33;
    *((_QWORD *)v36 + 3) = v34;
    *((_QWORD *)v36 + 4) = v35;
    v76[142] = 3;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57DD5B8((uint64_t)&v85, (uint64_t)v76);
    sub_1D57DD5B8((uint64_t)v76, (uint64_t)&v24[v25[7]]);
    v75 = 4;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v37 = *(_QWORD *)&v72[1];
    v38 = &v24[v25[8]];
    *(_OWORD *)v38 = v72[0];
    *((_QWORD *)v38 + 2) = v37;
    v75 = 5;
    sub_1D57C5DC8();
    sub_1D5AAECD0();
    v39 = BYTE4(v72[0]);
    v40 = &v24[v25[9]];
    *(_DWORD *)v40 = v72[0];
    v40[4] = v39;
    v75 = 6;
    sub_1D57C6260();
    sub_1D5AAEC7C();
    v41 = v72[1];
    v42 = &v24[v25[10]];
    *(_OWORD *)v42 = v72[0];
    *((_WORD *)v42 + 8) = v41;
    v75 = 7;
    sub_1D57C8D10();
    sub_1D5AAECD0();
    v43 = v72[1];
    v44 = DWORD1(v72[1]);
    v45 = *((_QWORD *)&v72[1] + 1);
    v46 = v73;
    v47 = WORD4(v73);
    v48 = &v24[v25[11]];
    *(_OWORD *)v48 = v72[0];
    v48[16] = v43;
    *((_DWORD *)v48 + 5) = v44;
    *((_QWORD *)v48 + 3) = v45;
    *((_QWORD *)v48 + 4) = v46;
    *((_WORD *)v48 + 20) = v47;
    v75 = 8;
    sub_1D57C6AF8();
    sub_1D5AAECD0();
    v49 = BYTE8(v72[1]);
    v50 = BYTE9(v72[1]);
    v51 = v74;
    v52 = &v24[v93[12]];
    *v52 = v72[0];
    *(_OWORD *)(v52 + 8) = *(_OWORD *)((char *)v72 + 8);
    v52[24] = v49;
    v52[25] = v50;
    *((_OWORD *)v52 + 2) = v73;
    v52[48] = v51;
    v75 = 9;
    sub_1D57C5ED8();
    sub_1D5AAEC7C();
    v68 = 1;
    v70 = 0;
    v53 = &v71[v93[13]];
    v54 = v72[1];
    *(_OWORD *)v53 = v72[0];
    *((_OWORD *)v53 + 1) = v54;
    v75 = 10;
    sub_1D57CAD28();
    v55 = v70;
    sub_1D5AAEC7C();
    v70 = v55;
    if (v55)
    {
      (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v67);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
      v22 = 0;
    }
    else
    {
      *(_OWORD *)&v71[v93[14]] = v72[0];
      v75 = 11;
      sub_1D57CB384();
      v56 = v70;
      sub_1D5AAECD0();
      v70 = v56;
      if (!v56)
      {
        *(_DWORD *)&v71[v93[15]] = v72[0];
        v75 = 12;
        sub_1D57C7AE0();
        v57 = v70;
        sub_1D5AAECD0();
        v70 = v57;
        if (!v57)
        {
          (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v67);
          v58 = BYTE1(v72[0]);
          v59 = WORD1(v72[0]);
          v60 = (uint64_t)v71;
          v61 = &v71[v93[16]];
          *v61 = v72[0];
          v61[1] = v58;
          *((_WORD *)v61 + 1) = v59;
          sub_1D5A09D64(v60, v64);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
          return sub_1D5A09DA8(v60);
        }
      }
      (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v67);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
      v22 = 1;
    }
    v14 = v71;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v71, v13);
    v21 = 1;
    LODWORD(v67) = 1;
    v16 = &v14[v93[5]];
    v17 = *((_OWORD *)v16 + 7);
    v91 = *((_OWORD *)v16 + 6);
    v92[0] = v17;
    *(_QWORD *)((char *)v92 + 15) = *(_QWORD *)(v16 + 127);
    v18 = *((_OWORD *)v16 + 3);
    v87 = *((_OWORD *)v16 + 2);
    v88 = v18;
    v19 = *((_OWORD *)v16 + 5);
    v89 = *((_OWORD *)v16 + 4);
    v90 = v19;
    v20 = *((_OWORD *)v16 + 1);
    v85 = *(_OWORD *)v16;
    v86 = v20;
    sub_1D57D5AE0((uint64_t)&v85);
    v23 = v93;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D57DD5B8((uint64_t)&v14[v23[7]], (uint64_t)&v85);
    sub_1D57DE9C8(&v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
    sub_1D57DAEDC(*(_QWORD *)&v14[v23[8]], *(_QWORD *)&v14[v23[8] + 8], *(_QWORD *)&v14[v23[8] + 16]);
    result = swift_bridgeObjectRelease();
    if ((v67 & 1) != 0)
    {
LABEL_5:
      result = swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
        goto LABEL_6;
      goto LABEL_11;
    }
  }
  if (!v21)
  {
LABEL_6:
    if (v68)
      goto LABEL_7;
LABEL_12:
    if (!v22)
      return result;
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v68 & 1) == 0)
    goto LABEL_12;
LABEL_7:
  result = sub_1D57EA700(*(_QWORD *)&v14[v23[13]], *(_QWORD *)&v14[v23[13] + 8]);
  if ((v22 & 1) == 0)
    return result;
  return swift_bridgeObjectRelease();
}

void sub_1D5A09D08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A09334();
    v7 = a3(a1, &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A09D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A09DA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A09DE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngagementCompletedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A09DF8(_QWORD *a1)
{
  return AudioEngagementCompletedEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A09E0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF473F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF509E8, a1);
}

uint64_t sub_1D5A09E30@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47400, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50A00, a1);
}

uint64_t sub_1D5A09E54@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v11, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v11, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v4, v30);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioEngagementCompletedEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v56 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v56 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  }
  return a1;
}

uint64_t destroy for AudioEngagementCompletedEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
}

uint64_t initializeWithCopy for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  return a1;
}

uint64_t assignWithCopy for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

uint64_t initializeWithTake for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  return a1;
}

uint64_t assignWithTake for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementCompletedEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A0B948(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                          v8 = v24;
                          v12 = *(_QWORD *)(v24 - 8);
                          v13 = a3[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementCompletedEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A0BCD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                          v10 = v26;
                          v14 = *(_QWORD *)(v26 - 8);
                          v15 = a4[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A0C05C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                          if (v12 <= 0x3F)
                            swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioEngagementCompletedEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v65;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v12;
    v10[32] = v11[32];
    v13 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    v14 = *((_QWORD *)v11 + 9);
    *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
    v10[112] = v11[112];
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    v15 = (char *)a1 + v9;
    v16 = (char *)a2 + v9;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    *((_WORD *)v15 + 8) = *((_WORD *)v16 + 8);
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = *((_QWORD *)v16 + 3);
    *((_QWORD *)v15 + 4) = v18;
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v65 = a2;
    v21 = (char *)a2 + v19;
    v22 = *(_QWORD *)((char *)a2 + v19 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22)
    {
      *(_WORD *)v20 = *(_WORD *)v21;
      *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
      *((_QWORD *)v20 + 2) = v22;
      *((_QWORD *)v20 + 3) = *((_QWORD *)v21 + 3);
      v23 = *((_QWORD *)v21 + 5);
      *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
      *((_QWORD *)v20 + 5) = v23;
      v24 = *((_QWORD *)v21 + 7);
      *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
      *((_QWORD *)v20 + 7) = v24;
      v25 = *((_QWORD *)v21 + 9);
      *((_QWORD *)v20 + 8) = *((_QWORD *)v21 + 8);
      *((_QWORD *)v20 + 9) = v25;
      v20[80] = v21[80];
      v26 = *((_QWORD *)v21 + 12);
      *((_QWORD *)v20 + 11) = *((_QWORD *)v21 + 11);
      *((_QWORD *)v20 + 12) = v26;
      *((_QWORD *)v20 + 13) = *((_QWORD *)v21 + 13);
      v20[112] = v21[112];
      v28 = *((_QWORD *)v21 + 15);
      v27 = *((_QWORD *)v21 + 16);
      *((_QWORD *)v20 + 15) = v28;
      *((_QWORD *)v20 + 16) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v30 = *((_OWORD *)v21 + 7);
      *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
      *((_OWORD *)v20 + 7) = v30;
      *((_QWORD *)v20 + 16) = *((_QWORD *)v21 + 16);
      v31 = *((_OWORD *)v21 + 3);
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      *((_OWORD *)v20 + 3) = v31;
      v32 = *((_OWORD *)v21 + 5);
      *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
      *((_OWORD *)v20 + 5) = v32;
      v33 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v33;
    }
    v34 = a3[8];
    v35 = (char *)a1 + v34;
    v36 = (char *)v65 + v34;
    v37 = *((_QWORD *)v36 + 2);
    if (v37 == 1)
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
    }
    else
    {
      *v35 = *v36;
      *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
      *((_QWORD *)v35 + 2) = v37;
      swift_bridgeObjectRetain();
    }
    v38 = a3[9];
    v39 = a3[10];
    v40 = (char *)a1 + v38;
    v41 = (char *)v65 + v38;
    *(_DWORD *)v40 = *(_DWORD *)v41;
    v40[4] = v41[4];
    v42 = (char *)a1 + v39;
    v43 = (char *)v65 + v39;
    v44 = *((_QWORD *)v43 + 1);
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *((_QWORD *)v42 + 1) = v44;
    *((_WORD *)v42 + 8) = *((_WORD *)v43 + 8);
    v45 = a3[11];
    v46 = a3[12];
    v47 = (char *)a1 + v45;
    v48 = (char *)v65 + v45;
    *(_OWORD *)v47 = *(_OWORD *)v48;
    v47[16] = v48[16];
    *((_DWORD *)v47 + 5) = *((_DWORD *)v48 + 5);
    v49 = *((_QWORD *)v48 + 4);
    *((_QWORD *)v47 + 3) = *((_QWORD *)v48 + 3);
    *((_QWORD *)v47 + 4) = v49;
    v47[40] = v48[40];
    v47[41] = v48[41];
    v50 = (char *)a1 + v46;
    v51 = (char *)v65 + v46;
    *v50 = *v51;
    v52 = *((_QWORD *)v51 + 2);
    *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
    *((_QWORD *)v50 + 2) = v52;
    v50[24] = v51[24];
    v50[25] = v51[25];
    v53 = *((_QWORD *)v51 + 5);
    *((_QWORD *)v50 + 4) = *((_QWORD *)v51 + 4);
    *((_QWORD *)v50 + 5) = v53;
    v50[48] = v51[48];
    v54 = a3[13];
    v55 = (char *)a1 + v54;
    v56 = (char *)v65 + v54;
    v57 = *(_QWORD *)((char *)v65 + v54 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v57)
    {
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = v57;
      *((_WORD *)v55 + 8) = *((_WORD *)v56 + 8);
      *((_QWORD *)v55 + 3) = *((_QWORD *)v56 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v58 = *((_OWORD *)v56 + 1);
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *((_OWORD *)v55 + 1) = v58;
    }
    v59 = a3[14];
    v60 = a3[15];
    v61 = (_QWORD *)((char *)a1 + v59);
    v62 = (_QWORD *)((char *)v65 + v59);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    *(_DWORD *)((char *)a1 + v60) = *(_DWORD *)((char *)v65 + v60);
    *(_DWORD *)((char *)a1 + a3[16]) = *(_DWORD *)((char *)v65 + a3[16]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioEngagementCompletedEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[8] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[13] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  int *v63;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v12;
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  v13 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 72) = v13;
  *(_BYTE *)(v9 + 80) = *(_BYTE *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 + 104);
  *(_BYTE *)(v9 + 112) = *(_BYTE *)(v10 + 112);
  *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(_BYTE *)(v9 + 132) = *(_BYTE *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  v14 = a1 + v8;
  v15 = a2 + v8;
  v16 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
  v17 = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 32) = v17;
  v63 = a3;
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(a2 + v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21)
  {
    *(_WORD *)v19 = *(_WORD *)v20;
    *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
    *(_QWORD *)(v19 + 16) = v21;
    *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
    v22 = *(_QWORD *)(v20 + 40);
    *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
    *(_QWORD *)(v19 + 40) = v22;
    v23 = *(_QWORD *)(v20 + 56);
    *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
    *(_QWORD *)(v19 + 56) = v23;
    v24 = *(_QWORD *)(v20 + 72);
    *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
    *(_QWORD *)(v19 + 72) = v24;
    *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
    v25 = *(_QWORD *)(v20 + 96);
    *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
    *(_QWORD *)(v19 + 96) = v25;
    *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
    *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
    v27 = *(_QWORD *)(v20 + 120);
    v26 = *(_QWORD *)(v20 + 128);
    *(_QWORD *)(v19 + 120) = v27;
    *(_QWORD *)(v19 + 128) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *(_OWORD *)(v20 + 112);
    *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
    *(_OWORD *)(v19 + 112) = v28;
    *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
    v29 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    *(_OWORD *)(v19 + 48) = v29;
    v30 = *(_OWORD *)(v20 + 80);
    *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
    *(_OWORD *)(v19 + 80) = v30;
    v31 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v31;
  }
  v32 = v63[8];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(v34 + 16);
  if (v35 == 1)
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  }
  else
  {
    *(_BYTE *)v33 = *(_BYTE *)v34;
    *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
    *(_QWORD *)(v33 + 16) = v35;
    swift_bridgeObjectRetain();
  }
  v36 = v63[9];
  v37 = v63[10];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_DWORD *)v38 = *(_DWORD *)v39;
  *(_BYTE *)(v38 + 4) = *(_BYTE *)(v39 + 4);
  v40 = a1 + v37;
  v41 = a2 + v37;
  v42 = *(_QWORD *)(v41 + 8);
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_QWORD *)(v40 + 8) = v42;
  *(_WORD *)(v40 + 16) = *(_WORD *)(v41 + 16);
  v43 = v63[11];
  v44 = v63[12];
  v45 = a1 + v43;
  v46 = a2 + v43;
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
  *(_DWORD *)(v45 + 20) = *(_DWORD *)(v46 + 20);
  v47 = *(_QWORD *)(v46 + 32);
  *(_QWORD *)(v45 + 24) = *(_QWORD *)(v46 + 24);
  *(_QWORD *)(v45 + 32) = v47;
  *(_BYTE *)(v45 + 40) = *(_BYTE *)(v46 + 40);
  *(_BYTE *)(v45 + 41) = *(_BYTE *)(v46 + 41);
  v48 = a1 + v44;
  v49 = a2 + v44;
  *(_BYTE *)v48 = *(_BYTE *)v49;
  v50 = *(_QWORD *)(v49 + 16);
  *(_QWORD *)(v48 + 8) = *(_QWORD *)(v49 + 8);
  *(_QWORD *)(v48 + 16) = v50;
  *(_BYTE *)(v48 + 24) = *(_BYTE *)(v49 + 24);
  *(_BYTE *)(v48 + 25) = *(_BYTE *)(v49 + 25);
  v51 = *(_QWORD *)(v49 + 40);
  *(_QWORD *)(v48 + 32) = *(_QWORD *)(v49 + 32);
  *(_QWORD *)(v48 + 40) = v51;
  *(_BYTE *)(v48 + 48) = *(_BYTE *)(v49 + 48);
  v52 = v63[13];
  v53 = a1 + v52;
  v54 = a2 + v52;
  v55 = *(_QWORD *)(a2 + v52 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v55)
  {
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *(_QWORD *)(v53 + 8) = v55;
    *(_WORD *)(v53 + 16) = *(_WORD *)(v54 + 16);
    *(_QWORD *)(v53 + 24) = *(_QWORD *)(v54 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v56 = *(_OWORD *)(v54 + 16);
    *(_OWORD *)v53 = *(_OWORD *)v54;
    *(_OWORD *)(v53 + 16) = v56;
  }
  v57 = v63[14];
  v58 = v63[15];
  v59 = (_QWORD *)(a1 + v57);
  v60 = (_QWORD *)(a2 + v57);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  *(_DWORD *)(a1 + v58) = *(_DWORD *)(a2 + v58);
  *(_DWORD *)(a1 + v63[16]) = *(_DWORD *)(a2 + v63[16]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a1 + v15 + 16);
  v19 = *(_QWORD *)(a2 + v15 + 16);
  if (v18)
  {
    if (v19)
    {
      *(_BYTE *)v16 = *(_BYTE *)v17;
      *(_BYTE *)(v16 + 1) = *(_BYTE *)(v17 + 1);
      *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
      *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v16 + 24) = *(_DWORD *)(v17 + 24);
      *(_DWORD *)(v16 + 28) = *(_DWORD *)(v17 + 28);
      *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
      *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
      *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
      *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v17 + 104);
      *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
      *(_QWORD *)(v16 + 104) = v20;
      *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v16);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      v22 = *(_OWORD *)(v17 + 64);
      v24 = *(_OWORD *)(v17 + 16);
      v23 = *(_OWORD *)(v17 + 32);
      *(_OWORD *)(v16 + 48) = *(_OWORD *)(v17 + 48);
      *(_OWORD *)(v16 + 64) = v22;
      *(_OWORD *)(v16 + 16) = v24;
      *(_OWORD *)(v16 + 32) = v23;
      v26 = *(_OWORD *)(v17 + 96);
      v25 = *(_OWORD *)(v17 + 112);
      v27 = *(_OWORD *)(v17 + 80);
      *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
      *(_OWORD *)(v16 + 96) = v26;
      *(_OWORD *)(v16 + 112) = v25;
      *(_OWORD *)(v16 + 80) = v27;
    }
  }
  else if (v19)
  {
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_BYTE *)(v16 + 1) = *(_BYTE *)(v17 + 1);
    *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
    *(_DWORD *)(v16 + 24) = *(_DWORD *)(v17 + 24);
    *(_DWORD *)(v16 + 28) = *(_DWORD *)(v17 + 28);
    *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
    *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
    *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
    *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
    *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
    *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
    *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
    *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
    *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
    v21 = *(_QWORD *)(v17 + 104);
    *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
    *(_QWORD *)(v16 + 104) = v21;
    *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
    *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
    v28 = *(_OWORD *)(v17 + 16);
    v29 = *(_OWORD *)(v17 + 32);
    v30 = *(_OWORD *)(v17 + 64);
    *(_OWORD *)(v16 + 48) = *(_OWORD *)(v17 + 48);
    *(_OWORD *)(v16 + 64) = v30;
    *(_OWORD *)(v16 + 16) = v28;
    *(_OWORD *)(v16 + 32) = v29;
    v31 = *(_OWORD *)(v17 + 80);
    v32 = *(_OWORD *)(v17 + 96);
    v33 = *(_OWORD *)(v17 + 112);
    *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
    *(_OWORD *)(v16 + 96) = v32;
    *(_OWORD *)(v16 + 112) = v33;
    *(_OWORD *)(v16 + 80) = v31;
  }
  v34 = a3[8];
  v35 = a1 + v34;
  v36 = (__int128 *)(a2 + v34);
  v37 = *(_QWORD *)(a1 + v34 + 16);
  v38 = *(_QWORD *)(a2 + v34 + 16);
  if (v37 == 1)
  {
    if (v38 == 1)
    {
      v39 = *v36;
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      *(_OWORD *)v35 = v39;
    }
    else
    {
      *(_BYTE *)v35 = *(_BYTE *)v36;
      *(_QWORD *)(v35 + 8) = *((_QWORD *)v36 + 1);
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v38 == 1)
  {
    sub_1D57D9100(v35);
    v40 = *((_QWORD *)v36 + 2);
    *(_OWORD *)v35 = *v36;
    *(_QWORD *)(v35 + 16) = v40;
  }
  else
  {
    *(_BYTE *)v35 = *(_BYTE *)v36;
    *(_QWORD *)(v35 + 8) = *((_QWORD *)v36 + 1);
    *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v41 = a3[9];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_DWORD *)v42 = *(_DWORD *)v43;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  v44 = a3[10];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_QWORD *)v45 = *(_QWORD *)(a2 + v44);
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(a2 + v44 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
  *(_BYTE *)(v45 + 17) = *(_BYTE *)(v46 + 17);
  v47 = a3[11];
  v48 = a1 + v47;
  v49 = a2 + v47;
  *(_QWORD *)v48 = *(_QWORD *)(a2 + v47);
  *(_QWORD *)(v48 + 8) = *(_QWORD *)(a2 + v47 + 8);
  *(_BYTE *)(v48 + 16) = *(_BYTE *)(a2 + v47 + 16);
  *(_DWORD *)(v48 + 20) = *(_DWORD *)(a2 + v47 + 20);
  *(_QWORD *)(v48 + 24) = *(_QWORD *)(a2 + v47 + 24);
  *(_QWORD *)(v48 + 32) = *(_QWORD *)(a2 + v47 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v48 + 40) = *(_BYTE *)(v49 + 40);
  *(_BYTE *)(v48 + 41) = *(_BYTE *)(v49 + 41);
  v50 = a3[12];
  v51 = a1 + v50;
  v52 = a2 + v50;
  *(_BYTE *)v51 = *(_BYTE *)(a2 + v50);
  *(_QWORD *)(v51 + 8) = *(_QWORD *)(a2 + v50 + 8);
  *(_QWORD *)(v51 + 16) = *(_QWORD *)(a2 + v50 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 24) = *(_BYTE *)(v52 + 24);
  *(_BYTE *)(v51 + 25) = *(_BYTE *)(v52 + 25);
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
  *(_QWORD *)(v51 + 40) = *(_QWORD *)(v52 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 48) = *(_BYTE *)(v52 + 48);
  v53 = a3[13];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = *(_QWORD *)(a1 + v53 + 8);
  v57 = *(_QWORD *)(a2 + v53 + 8);
  if (v56)
  {
    if (v57)
    {
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *(_QWORD *)(v54 + 8) = *(_QWORD *)(v55 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v54 + 16) = *(_BYTE *)(v55 + 16);
      *(_BYTE *)(v54 + 17) = *(_BYTE *)(v55 + 17);
      *(_QWORD *)(v54 + 24) = *(_QWORD *)(v55 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v54);
      v58 = *(_OWORD *)(v55 + 16);
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *(_OWORD *)(v54 + 16) = v58;
    }
  }
  else if (v57)
  {
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *(_QWORD *)(v54 + 8) = *(_QWORD *)(v55 + 8);
    *(_BYTE *)(v54 + 16) = *(_BYTE *)(v55 + 16);
    *(_BYTE *)(v54 + 17) = *(_BYTE *)(v55 + 17);
    *(_QWORD *)(v54 + 24) = *(_QWORD *)(v55 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v59 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)v54 = *(_OWORD *)v55;
    *(_OWORD *)(v54 + 16) = v59;
  }
  v60 = a3[14];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (_QWORD *)(a2 + v60);
  *v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  v63 = a3[16];
  v64 = (_BYTE *)(a1 + v63);
  v65 = (_BYTE *)(a2 + v63);
  *v64 = *v65;
  v64[1] = v65[1];
  v64[2] = v65[2];
  v64[3] = v65[3];
  return a1;
}

uint64_t initializeWithTake for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  __int128 v38;
  uint64_t v39;
  __int128 *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  _OWORD *v47;
  __int128 v48;
  uint64_t v49;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v22;
  *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
  v23 = *(_OWORD *)(v21 + 112);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
  *(_OWORD *)(v20 + 112) = v23;
  v24 = *(_OWORD *)(v21 + 80);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(v21 + 64);
  *(_OWORD *)(v20 + 80) = v24;
  v25 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v25;
  v26 = a1 + v19;
  v27 = a2 + v19;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  v28 = a3[9];
  v29 = a3[10];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  v34 = a3[11];
  v35 = a3[12];
  v36 = (_OWORD *)(a1 + v34);
  v37 = (_OWORD *)(a2 + v34);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  *(_OWORD *)((char *)v36 + 26) = *(_OWORD *)((char *)v37 + 26);
  v39 = a1 + v35;
  v40 = (__int128 *)(a2 + v35);
  v41 = *v40;
  v42 = v40[1];
  v43 = v40[2];
  *(_BYTE *)(v39 + 48) = *((_BYTE *)v40 + 48);
  *(_OWORD *)(v39 + 16) = v42;
  *(_OWORD *)(v39 + 32) = v43;
  *(_OWORD *)v39 = v41;
  v44 = a3[13];
  v45 = a3[14];
  v46 = (_OWORD *)(a1 + v44);
  v47 = (_OWORD *)(a2 + v44);
  v48 = v47[1];
  *v46 = *v47;
  v46[1] = v48;
  *(_OWORD *)(a1 + v45) = *(_OWORD *)(a2 + v45);
  v49 = a3[16];
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(_DWORD *)(a1 + v49) = *(_DWORD *)(a2 + v49);
  return a1;
}

uint64_t assignWithTake for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v11;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  v16 = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = v16;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (*(_QWORD *)(a1 + v17 + 16))
  {
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      *(_WORD *)v18 = *(_WORD *)v19;
      *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
      *(_QWORD *)(v18 + 16) = v20;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
      *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 40) = *(_QWORD *)(v19 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 48) = *(_QWORD *)(v19 + 48);
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v19 + 64);
      *(_QWORD *)(v18 + 56) = *(_QWORD *)(v19 + 56);
      *(_QWORD *)(v18 + 64) = v21;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 72) = *(_QWORD *)(v19 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v18 + 80) = *(_BYTE *)(v19 + 80);
      v22 = *(_QWORD *)(v19 + 96);
      *(_QWORD *)(v18 + 88) = *(_QWORD *)(v19 + 88);
      *(_QWORD *)(v18 + 96) = v22;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 104) = *(_QWORD *)(v19 + 104);
      *(_BYTE *)(v18 + 112) = *(_BYTE *)(v19 + 112);
      *(_QWORD *)(v18 + 120) = *(_QWORD *)(v19 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 128) = *(_QWORD *)(v19 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E17B8(v18);
  }
  v23 = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = v23;
  *(_QWORD *)(v18 + 128) = *(_QWORD *)(v19 + 128);
  v24 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v24;
  v25 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 80) = v25;
  v26 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v26;
LABEL_6:
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  if (*(_QWORD *)(a1 + v27 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
    goto LABEL_11;
  }
  v30 = *(_QWORD *)(v29 + 16);
  if (v30 == 1)
  {
    sub_1D57D9100(v28);
    goto LABEL_9;
  }
  *(_BYTE *)v28 = *(_BYTE *)v29;
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
LABEL_11:
  v31 = a3[9];
  v32 = a3[10];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = a1 + v32;
  v36 = a2 + v32;
  v37 = *(_QWORD *)(a2 + v32);
  v38 = *(_QWORD *)(a2 + v32 + 8);
  *(_QWORD *)v35 = v37;
  *(_QWORD *)(v35 + 8) = v38;
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 16) = *(_WORD *)(v36 + 16);
  v39 = a3[11];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_OWORD *)v40 = *(_OWORD *)(a2 + v39);
  *(_BYTE *)(v40 + 16) = *(_BYTE *)(a2 + v39 + 16);
  *(_DWORD *)(v40 + 20) = *(_DWORD *)(a2 + v39 + 20);
  v42 = *(_QWORD *)(a2 + v39 + 32);
  *(_QWORD *)(v40 + 24) = *(_QWORD *)(a2 + v39 + 24);
  *(_QWORD *)(v40 + 32) = v42;
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 40) = *(_WORD *)(v41 + 40);
  v43 = a3[12];
  v44 = a1 + v43;
  v45 = a2 + v43;
  *(_BYTE *)v44 = *(_BYTE *)(a2 + v43);
  v46 = *(_QWORD *)(a2 + v43 + 16);
  *(_QWORD *)(v44 + 8) = *(_QWORD *)(a2 + v43 + 8);
  *(_QWORD *)(v44 + 16) = v46;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v44 + 24) = *(_BYTE *)(v45 + 24);
  *(_BYTE *)(v44 + 25) = *(_BYTE *)(v45 + 25);
  v47 = *(_QWORD *)(v45 + 40);
  *(_QWORD *)(v44 + 32) = *(_QWORD *)(v45 + 32);
  *(_QWORD *)(v44 + 40) = v47;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v44 + 48) = *(_BYTE *)(v45 + 48);
  v48 = a3[13];
  v49 = a1 + v48;
  v50 = a2 + v48;
  if (!*(_QWORD *)(a1 + v48 + 8))
  {
LABEL_15:
    v52 = *(_OWORD *)(v50 + 16);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = v52;
    goto LABEL_16;
  }
  v51 = *(_QWORD *)(v50 + 8);
  if (!v51)
  {
    sub_1D57EE47C(v49);
    goto LABEL_15;
  }
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_QWORD *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 16) = *(_BYTE *)(v50 + 16);
  *(_BYTE *)(v49 + 17) = *(_BYTE *)(v50 + 17);
  *(_QWORD *)(v49 + 24) = *(_QWORD *)(v50 + 24);
  swift_bridgeObjectRelease();
LABEL_16:
  v53 = a3[14];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (uint64_t *)(a2 + v53);
  v57 = *v55;
  v56 = v55[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  v58 = a3[16];
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  v59 = a1 + v58;
  v60 = a2 + v58;
  *(_BYTE *)v59 = *(_BYTE *)v60;
  *(_BYTE *)(v59 + 1) = *(_BYTE *)(v60 + 1);
  *(_WORD *)(v59 + 2) = *(_WORD *)(v60 + 2);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementCompletedEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A0D98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementCompletedEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A0DA18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A0DA94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioEngagementCompletedEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D5A0DBC4 + 4 * byte_1D5ADC8A2[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D5A0DBF8 + 4 * byte_1D5ADC89D[v4]))();
}

uint64_t sub_1D5A0DBF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A0DC00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A0DC08);
  return result;
}

uint64_t sub_1D5A0DC14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A0DC1CLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D5A0DC20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A0DC28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementCompletedEvent.Model.CodingKeys()
{
  return &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys;
}

unint64_t sub_1D5A0DC48()
{
  unint64_t result;

  result = qword_1EFF50A30;
  if (!qword_1EFF50A30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADCBCC, &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50A30);
  }
  return result;
}

unint64_t sub_1D5A0DC90()
{
  unint64_t result;

  result = qword_1EFF50A38;
  if (!qword_1EFF50A38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADCB3C, &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50A38);
  }
  return result;
}

unint64_t sub_1D5A0DCD8()
{
  unint64_t result;

  result = qword_1EFF50A40;
  if (!qword_1EFF50A40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADCB64, &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50A40);
  }
  return result;
}

uint64_t sub_1D5A0DD1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446B63617274 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF0000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t sub_1D5A0E2B8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF50A48, MEMORY[0x1E0CF8078]);
}

uint64_t static BlockTagEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47408, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50A48, a1);
}

uint64_t sub_1D5A0E2F8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF50A60, MEMORY[0x1E0CF8380]);
}

uint64_t static BlockTagEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47410, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50A60, a1);
}

uint64_t BlockTagEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t BlockTagEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*BlockTagEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t BlockTagEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for BlockTagEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C7940);
}

uint64_t BlockTagEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BlockTagEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for BlockTagEvent(0);
  return nullsub_1;
}

uint64_t BlockTagEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BlockTagEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BlockTagEvent.tagData.modify())(_QWORD)
{
  type metadata accessor for BlockTagEvent(0);
  return nullsub_1;
}

uint64_t BlockTagEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BlockTagEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BlockTagEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for BlockTagEvent(0);
  return nullsub_1;
}

uint64_t BlockTagEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BlockTagEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BlockTagEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for BlockTagEvent(0);
  return nullsub_1;
}

uint64_t BlockTagEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BlockTagEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BlockTagEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for BlockTagEvent(0);
  return nullsub_1;
}

uint64_t BlockTagEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BlockTagEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BlockTagEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BlockTagEvent.actionData.modify())(_QWORD)
{
  type metadata accessor for BlockTagEvent(0);
  return nullsub_1;
}

uint64_t BlockTagEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for BlockTagEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
}

uint64_t BlockTagEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t BlockTagEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for BlockTagEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for BlockTagEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C7890);
}

uint64_t BlockTagEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for BlockTagEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t BlockTagEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for BlockTagEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t BlockTagEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for BlockTagEvent.Model(0);
  sub_1D580C534(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1D580C534((uint64_t)v5, a1);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t BlockTagEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for BlockTagEvent.Model(0) + 36));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t BlockTagEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BlockTagEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t BlockTagEvent.Model.init(eventData:viewData:tagData:feedData:articleData:userBundleSubscriptionContextData:actionData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  _BYTE v35[144];

  v12 = *a2;
  v13 = a2[1];
  v14 = *((_WORD *)a2 + 8);
  v15 = *a3;
  v16 = a3[1];
  v26 = *a4;
  v17 = *((_QWORD *)a4 + 2);
  sub_1D580C534(a5, (uint64_t)v35);
  v18 = *a6;
  v31 = *((_QWORD *)a6 + 2);
  v32 = *((_QWORD *)a6 + 1);
  v29 = a6[25];
  v30 = a6[24];
  v27 = *((_QWORD *)a6 + 5);
  v28 = *((_QWORD *)a6 + 4);
  LOBYTE(a6) = a6[48];
  v33 = v18;
  v34 = *a7;
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a8, a1, v19);
  v20 = (int *)type metadata accessor for BlockTagEvent.Model(0);
  v21 = a8 + v20[5];
  *(_QWORD *)v21 = v12;
  *(_QWORD *)(v21 + 8) = v13;
  *(_WORD *)(v21 + 16) = v14;
  v22 = (_QWORD *)(a8 + v20[6]);
  *v22 = v15;
  v22[1] = v16;
  v23 = a8 + v20[7];
  *(_OWORD *)v23 = v26;
  *(_QWORD *)(v23 + 16) = v17;
  result = sub_1D580C534((uint64_t)v35, a8 + v20[8]);
  v25 = a8 + v20[9];
  *(_BYTE *)v25 = v33;
  *(_QWORD *)(v25 + 8) = v32;
  *(_QWORD *)(v25 + 16) = v31;
  *(_BYTE *)(v25 + 24) = v30;
  *(_BYTE *)(v25 + 25) = v29;
  *(_QWORD *)(v25 + 32) = v28;
  *(_QWORD *)(v25 + 40) = v27;
  *(_BYTE *)(v25 + 48) = (_BYTE)a6;
  *(_BYTE *)(a8 + v20[10]) = v34;
  return result;
}

uint64_t sub_1D5A0EEA0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A0EED8 + 4 * byte_1D5ADCC48[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A0EED8()
{
  return 0x6174614477656976;
}

uint64_t sub_1D5A0EF18()
{
  return 0x44656C6369747261;
}

unint64_t sub_1D5A0EF38()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5A0EF54()
{
  return 0x61446E6F69746361;
}

uint64_t sub_1D5A0EF70()
{
  unsigned __int8 *v0;

  return sub_1D5A0EEA0(*v0);
}

uint64_t sub_1D5A0EF78()
{
  sub_1D5A0F2F0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A0EFA0()
{
  sub_1D5A0F2F0();
  return sub_1D5AAEEE0();
}

uint64_t BlockTagEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v24;
  char v25;
  char v26[8];
  __int128 v27;
  char v28;
  char v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  char v35;
  __int128 v36;
  uint64_t v37;

  v3 = v1;
  sub_1D5A0F8F0(0, &qword_1EFF50A78, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A0F2F0();
  sub_1D5AAEEC8();
  LOBYTE(v32) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for BlockTagEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    v32 = v12;
    v33 = v13;
    v34 = (__int16)v11;
    v26[0] = 1;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v14 = (uint64_t *)(v3 + v10[6]);
    v16 = *v14;
    v15 = v14[1];
    v32 = v16;
    v33 = v15;
    v26[0] = 2;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v17 = (__int128 *)(v3 + v10[7]);
    v18 = *((_QWORD *)v17 + 2);
    v36 = *v17;
    v37 = v18;
    v35 = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D580C534(v3 + v10[8], (uint64_t)&v32);
    sub_1D580C534((uint64_t)&v32, (uint64_t)v26);
    v25 = 4;
    sub_1D57CB940();
    sub_1D5AAED18();
    v19 = v3 + v10[9];
    v20 = *(_BYTE *)(v19 + 24);
    v21 = *(_BYTE *)(v19 + 25);
    v22 = *(_BYTE *)(v19 + 48);
    v26[0] = *(_BYTE *)v19;
    v27 = *(_OWORD *)(v19 + 8);
    v28 = v20;
    v29 = v21;
    v30 = *(_OWORD *)(v19 + 32);
    v31 = v22;
    v25 = 5;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v26[0] = *(_BYTE *)(v3 + v10[10]);
    v25 = 6;
    sub_1D57CC038();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A0F2F0()
{
  unint64_t result;

  result = qword_1EFF50A80;
  if (!qword_1EFF50A80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADCEC4, &type metadata for BlockTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50A80);
  }
  return result;
}

uint64_t BlockTagEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _QWORD *v35;
  char v36;
  char v37;
  __int128 v38;
  char v39;
  char v40;
  __int128 v41;
  char v42;
  _BYTE v43[136];
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v30 = a2;
  v3 = sub_1D5AADF98();
  v31 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A0F8F0(0, &qword_1EFF50A88, MEMORY[0x1E0DED048]);
  v32 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - v7;
  v9 = (int *)type metadata accessor for BlockTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D5A0F2F0();
  v34 = v8;
  v13 = v46;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  v46 = v6;
  v14 = v31;
  LOBYTE(v44) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v33, v3);
  v43[0] = 1;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v15 = *((_QWORD *)&v44 + 1);
  v16 = v45;
  v17 = &v11[v9[5]];
  *(_QWORD *)v17 = v44;
  *((_QWORD *)v17 + 1) = v15;
  *((_WORD *)v17 + 8) = v16;
  v43[0] = 2;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v18 = *((_QWORD *)&v44 + 1);
  v19 = &v11[v9[6]];
  *(_QWORD *)v19 = v44;
  *((_QWORD *)v19 + 1) = v18;
  v43[0] = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v20 = v45;
  v21 = &v11[v9[7]];
  *(_OWORD *)v21 = v44;
  *((_QWORD *)v21 + 2) = v20;
  v43[135] = 4;
  sub_1D57CB8FC();
  v22 = v32;
  v33 = 0;
  sub_1D5AAEC7C();
  v23 = v46;
  sub_1D580C534((uint64_t)&v44, (uint64_t)v43);
  sub_1D580C534((uint64_t)v43, (uint64_t)&v11[v9[8]]);
  v36 = 5;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v24 = v39;
  v25 = v40;
  v26 = v42;
  v27 = &v11[v9[9]];
  *v27 = v37;
  *(_OWORD *)(v27 + 8) = v38;
  v27[24] = v24;
  v27[25] = v25;
  *((_OWORD *)v27 + 2) = v41;
  v27[48] = v26;
  v36 = 6;
  sub_1D57CBFF4();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v34, v22);
  v11[v9[10]] = v37;
  sub_1D5A0F94C((uint64_t)v11, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_1D5A0F990((uint64_t)v11);
}

void sub_1D5A0F8F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A0F2F0();
    v7 = a3(a1, &type metadata for BlockTagEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A0F94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BlockTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A0F990(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BlockTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A0F9CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BlockTagEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A0F9E0(_QWORD *a1)
{
  return BlockTagEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A0F9F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47408, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50A48, a1);
}

uint64_t sub_1D5A0FA18@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47410, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50A60, a1);
}

uint64_t getEnumTagSinglePayload for BlockTagEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A0FA48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for BlockTagEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A0FC3C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for BlockTagEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A0FE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockTagEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A0FEC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A0FF40()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BlockTagEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D5A10030 + 4 * byte_1D5ADCC54[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D5A10064 + 4 * byte_1D5ADCC4F[v4]))();
}

uint64_t sub_1D5A10064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A1006C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A10074);
  return result;
}

uint64_t sub_1D5A10080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A10088);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D5A1008C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A10094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlockTagEvent.Model.CodingKeys()
{
  return &type metadata for BlockTagEvent.Model.CodingKeys;
}

unint64_t sub_1D5A100B4()
{
  unint64_t result;

  result = qword_1EFF50A90;
  if (!qword_1EFF50A90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADCE9C, &type metadata for BlockTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50A90);
  }
  return result;
}

unint64_t sub_1D5A100FC()
{
  unint64_t result;

  result = qword_1EFF50A98;
  if (!qword_1EFF50A98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADCE0C, &type metadata for BlockTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50A98);
  }
  return result;
}

unint64_t sub_1D5A10144()
{
  unint64_t result;

  result = qword_1EFF50AA0;
  if (!qword_1EFF50AA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADCE34, &type metadata for BlockTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50AA0);
  }
  return result;
}

uint64_t IssueData.issueID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IssueData.issueID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IssueData.issueID.modify())()
{
  return nullsub_1;
}

uint64_t IssueData.isBundlePaid.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t IssueData.isBundlePaid.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*IssueData.isBundlePaid.modify())()
{
  return nullsub_1;
}

void IssueData.issueType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

_BYTE *IssueData.issueType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*IssueData.issueType.modify())()
{
  return nullsub_1;
}

uint64_t IssueData.topicIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IssueData.topicIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*IssueData.topicIDs.modify())()
{
  return nullsub_1;
}

NewsAnalytics::IssueData __swiftcall IssueData.init(issueID:isBundlePaid:issueType:topicIDs:)(NewsAnalytics::IssueData issueID, Swift::Bool isBundlePaid, NewsAnalytics::IssueType issueType, Swift::OpaquePointer topicIDs)
{
  uint64_t v4;
  char v5;

  v5 = *(_BYTE *)issueType;
  *(Swift::String *)v4 = issueID.issueID;
  *(_BYTE *)(v4 + 16) = isBundlePaid;
  *(_BYTE *)(v4 + 17) = v5;
  *(Swift::OpaquePointer *)(v4 + 24) = topicIDs;
  LOBYTE(issueID.topicIDs._rawValue) = issueType;
  issueID.isBundlePaid = isBundlePaid;
  return issueID;
}

uint64_t sub_1D5A10298()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A102C8 + 4 * byte_1D5ADCF14[*v0]))(0x44496575737369, 0xE700000000000000);
}

uint64_t sub_1D5A102C8()
{
  return 0x656C646E75427369;
}

uint64_t sub_1D5A102E8()
{
  return 0x7079546575737369;
}

uint64_t sub_1D5A10304()
{
  return 0x7344496369706F74;
}

uint64_t sub_1D5A1031C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A10BEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A10340()
{
  sub_1D5A1056C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A10368()
{
  sub_1D5A1056C();
  return sub_1D5AAEEE0();
}

uint64_t IssueData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  sub_1D5A1085C(0, &qword_1ED9CC9C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - v6;
  v8 = *(unsigned __int8 *)(v1 + 16);
  v18 = *(unsigned __int8 *)(v1 + 17);
  v19 = v8;
  v17 = *(_QWORD *)(v1 + 24);
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1D5A1056C();
  sub_1D5AAEEC8();
  v25 = 0;
  sub_1D5AAED3C();
  if (!v2)
  {
    v13 = v18;
    v14 = v17;
    v24 = 1;
    sub_1D5AAED48();
    v23 = v13;
    v22 = 2;
    sub_1D5A105B0();
    sub_1D5AAED6C();
    v20 = v14;
    v21 = 3;
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

unint64_t sub_1D5A1056C()
{
  unint64_t result;

  result = qword_1ED9CC568;
  if (!qword_1ED9CC568)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD094, &type metadata for IssueData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC568);
  }
  return result;
}

unint64_t sub_1D5A105B0()
{
  unint64_t result;

  result = qword_1ED9CC590;
  if (!qword_1ED9CC590)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueType, &type metadata for IssueType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC590);
  }
  return result;
}

uint64_t IssueData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  char v21;
  char v22;

  sub_1D5A1085C(0, &qword_1ED9CC888, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A1056C();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v21 = 1;
  swift_bridgeObjectRetain();
  v16 = sub_1D5AAECAC();
  v19 = 2;
  sub_1D5A108B8();
  sub_1D5AAECD0();
  v15 = v20;
  sub_1D57B4558();
  v18 = 3;
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1D5AAECD0();
  v16 &= 1u;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = v17;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 17) = v15;
  *(_QWORD *)(a2 + 24) = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D5A1085C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A1056C();
    v7 = a3(a1, &type metadata for IssueData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A108B8()
{
  unint64_t result;

  result = qword_1ED9CC5A0;
  if (!qword_1ED9CC5A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueType, &type metadata for IssueType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC5A0);
  }
  return result;
}

uint64_t sub_1D5A10904@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IssueData.init(from:)(a1, a2);
}

uint64_t sub_1D5A10918(_QWORD *a1)
{
  return IssueData.encode(to:)(a1);
}

uint64_t initializeWithCopy for IssueData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IssueData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IssueData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for IssueData()
{
  return &type metadata for IssueData;
}

uint64_t storeEnumTagSinglePayload for IssueData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5A10A94 + 4 * byte_1D5ADCF1D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5A10AC8 + 4 * byte_1D5ADCF18[v4]))();
}

uint64_t sub_1D5A10AC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A10AD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A10AD8);
  return result;
}

uint64_t sub_1D5A10AE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A10AECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5A10AF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A10AF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueData.CodingKeys()
{
  return &type metadata for IssueData.CodingKeys;
}

unint64_t sub_1D5A10B18()
{
  unint64_t result;

  result = qword_1EFF50AA8;
  if (!qword_1EFF50AA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD06C, &type metadata for IssueData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50AA8);
  }
  return result;
}

unint64_t sub_1D5A10B60()
{
  unint64_t result;

  result = qword_1ED9CC578;
  if (!qword_1ED9CC578)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADCFDC, &type metadata for IssueData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC578);
  }
  return result;
}

unint64_t sub_1D5A10BA8()
{
  unint64_t result;

  result = qword_1ED9CC570;
  if (!qword_1ED9CC570)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD004, &type metadata for IssueData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC570);
  }
  return result;
}

uint64_t sub_1D5A10BEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44496575737369 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C646E75427369 && a2 == 0xEC00000064696150 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7079546575737369 && a2 == 0xE900000000000065 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7344496369706F74 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

NewsAnalytics::ResultType_optional __swiftcall ResultType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ResultType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ResultType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73736563637573;
  if (*v0 != 1)
    v1 = 1818845542;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5A10E74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3DCC0(*a1, *a2);
}

unint64_t sub_1D5A10E84()
{
  unint64_t result;

  result = qword_1EFF50AB0;
  if (!qword_1EFF50AB0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultType, &type metadata for ResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF50AB0);
  }
  return result;
}

uint64_t sub_1D5A10EC8()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A10F60()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A10FD4()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::ResultType_optional sub_1D5A11068(Swift::String *a1)
{
  return ResultType.init(rawValue:)(*a1);
}

void sub_1D5A11074(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x73736563637573;
  if (v2 != 1)
  {
    v5 = 1818845542;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D5A110CC()
{
  sub_1D5A11240();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A11128()
{
  sub_1D5A11240();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for ResultType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A111C0 + 4 * byte_1D5ADD0E9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A111F4 + 4 * byte_1D5ADD0E4[v4]))();
}

uint64_t sub_1D5A111F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A111FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A11204);
  return result;
}

uint64_t sub_1D5A11210(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A11218);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A1121C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A11224(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResultType()
{
  return &type metadata for ResultType;
}

unint64_t sub_1D5A11240()
{
  unint64_t result;

  result = qword_1EFF50AB8;
  if (!qword_1EFF50AB8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultType, &type metadata for ResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF50AB8);
  }
  return result;
}

NewsAnalytics::FractionalCohortMembershipDetails __swiftcall FractionalCohortMembershipDetails.init(tagID:score:)(Swift::String tagID, Swift::Double score)
{
  uint64_t v2;
  NewsAnalytics::FractionalCohortMembershipDetails result;

  *(Swift::String *)v2 = tagID;
  *(Swift::Double *)(v2 + 16) = score;
  result.tagID = tagID;
  result.score = score;
  return result;
}

uint64_t FractionalCohortMembershipDetails.tagID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FractionalCohortMembershipDetails.tagID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FractionalCohortMembershipDetails.tagID.modify())()
{
  return nullsub_1;
}

double FractionalCohortMembershipDetails.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void FractionalCohortMembershipDetails.score.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*FractionalCohortMembershipDetails.score.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A11320()
{
  _BYTE *v0;

  if (*v0)
    return 0x65726F6373;
  else
    return 0x4449676174;
}

uint64_t sub_1D5A1134C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A119EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A11370()
{
  sub_1D5A114F4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A11398()
{
  sub_1D5A114F4();
  return sub_1D5AAEEE0();
}

uint64_t FractionalCohortMembershipDetails.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  sub_1D5A116D0(0, &qword_1ED9CC988, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A114F4();
  sub_1D5AAEEC8();
  v11 = 0;
  v7 = v9;
  sub_1D5AAED3C();
  if (!v7)
  {
    v10 = 1;
    sub_1D5AAED54();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5A114F4()
{
  unint64_t result;

  result = qword_1ED9CBDD8;
  if (!qword_1ED9CBDD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD398, &type metadata for FractionalCohortMembershipDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CBDD8);
  }
  return result;
}

uint64_t FractionalCohortMembershipDetails.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  sub_1D5A116D0(0, &qword_1ED9CC840, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v16[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A114F4();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16[15] = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v16[14] = 1;
  swift_bridgeObjectRetain();
  sub_1D5AAECB8();
  v14 = v13;
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D5A116D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A114F4();
    v7 = a3(a1, &type metadata for FractionalCohortMembershipDetails.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A11730()
{
  unint64_t result;

  result = qword_1ED9CBDF8;
  if (!qword_1ED9CBDF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FractionalCohortMembershipDetails, &type metadata for FractionalCohortMembershipDetails);
    atomic_store(result, (unint64_t *)&qword_1ED9CBDF8);
  }
  return result;
}

unint64_t sub_1D5A11778()
{
  unint64_t result;

  result = qword_1ED9CBDF0;
  if (!qword_1ED9CBDF0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FractionalCohortMembershipDetails, &type metadata for FractionalCohortMembershipDetails);
    atomic_store(result, (unint64_t *)&qword_1ED9CBDF0);
  }
  return result;
}

uint64_t sub_1D5A117BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FractionalCohortMembershipDetails.init(from:)(a1, a2);
}

uint64_t sub_1D5A117D0(_QWORD *a1)
{
  return FractionalCohortMembershipDetails.encode(to:)(a1);
}

_QWORD *assignWithCopy for FractionalCohortMembershipDetails(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for FractionalCohortMembershipDetails()
{
  return &type metadata for FractionalCohortMembershipDetails;
}

uint64_t storeEnumTagSinglePayload for FractionalCohortMembershipDetails.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5A11894 + 4 * byte_1D5ADD205[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5A118C8 + 4 * byte_1D5ADD200[v4]))();
}

uint64_t sub_1D5A118C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A118D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A118D8);
  return result;
}

uint64_t sub_1D5A118E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A118ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5A118F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A118F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FractionalCohortMembershipDetails.CodingKeys()
{
  return &type metadata for FractionalCohortMembershipDetails.CodingKeys;
}

unint64_t sub_1D5A11918()
{
  unint64_t result;

  result = qword_1EFF50AC0;
  if (!qword_1EFF50AC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD370, &type metadata for FractionalCohortMembershipDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50AC0);
  }
  return result;
}

unint64_t sub_1D5A11960()
{
  unint64_t result;

  result = qword_1ED9CBDE8;
  if (!qword_1ED9CBDE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD2E0, &type metadata for FractionalCohortMembershipDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CBDE8);
  }
  return result;
}

unint64_t sub_1D5A119A8()
{
  unint64_t result;

  result = qword_1ED9CBDE0;
  if (!qword_1ED9CBDE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD308, &type metadata for FractionalCohortMembershipDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CBDE0);
  }
  return result;
}

uint64_t sub_1D5A119EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449676174 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void EngagementData.audioEngagementStatus.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *EngagementData.audioEngagementStatus.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*EngagementData.audioEngagementStatus.modify())()
{
  return nullsub_1;
}

NewsAnalytics::EngagementData __swiftcall EngagementData.init(audioEngagementStatus:)(NewsAnalytics::EngagementData audioEngagementStatus)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)audioEngagementStatus.audioEngagementStatus;
  return audioEngagementStatus;
}

unint64_t sub_1D5A11B00()
{
  return 0xD000000000000015;
}

uint64_t sub_1D5A11B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A12168(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5A11B44()
{
  sub_1D5A11C98();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A11B6C()
{
  sub_1D5A11C98();
  return sub_1D5AAEEE0();
}

uint64_t EngagementData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5A11E58(0, &qword_1EFF50AC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A11C98();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5A11CDC();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A11C98()
{
  unint64_t result;

  result = qword_1EFF50AD0;
  if (!qword_1EFF50AD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD564, &type metadata for EngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50AD0);
  }
  return result;
}

unint64_t sub_1D5A11CDC()
{
  unint64_t result;

  result = qword_1EFF50AD8;
  if (!qword_1EFF50AD8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementStatus, &type metadata for AudioEngagementStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF50AD8);
  }
  return result;
}

uint64_t EngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5A11E58(0, &qword_1EFF50AE0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A11C98();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5A11EB4();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A11E58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A11C98();
    v7 = a3(a1, &type metadata for EngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A11EB4()
{
  unint64_t result;

  result = qword_1EFF50AE8;
  if (!qword_1EFF50AE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementStatus, &type metadata for AudioEngagementStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF50AE8);
  }
  return result;
}

uint64_t sub_1D5A11F00@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return EngagementData.init(from:)(a1, a2);
}

uint64_t sub_1D5A11F14(_QWORD *a1)
{
  return EngagementData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for EngagementData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A11F74 + 4 * byte_1D5ADD3ED[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A11FA8 + 4 * byte_1D5ADD3E8[v4]))();
}

uint64_t sub_1D5A11FA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A11FB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A11FB8);
  return result;
}

uint64_t sub_1D5A11FC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A11FCCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A11FD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A11FD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementData()
{
  return &type metadata for EngagementData;
}

uint64_t storeEnumTagSinglePayload for EngagementData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A12034 + 4 * byte_1D5ADD3F2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A12054 + 4 * byte_1D5ADD3F7[v4]))();
}

_BYTE *sub_1D5A12034(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A12054(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A1205C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A12064(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A1206C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A12074(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EngagementData.CodingKeys()
{
  return &type metadata for EngagementData.CodingKeys;
}

unint64_t sub_1D5A12094()
{
  unint64_t result;

  result = qword_1EFF50AF0;
  if (!qword_1EFF50AF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD53C, &type metadata for EngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50AF0);
  }
  return result;
}

unint64_t sub_1D5A120DC()
{
  unint64_t result;

  result = qword_1EFF50AF8;
  if (!qword_1EFF50AF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD4AC, &type metadata for EngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50AF8);
  }
  return result;
}

unint64_t sub_1D5A12124()
{
  unint64_t result;

  result = qword_1EFF50B00;
  if (!qword_1EFF50B00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD4D4, &type metadata for EngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50B00);
  }
  return result;
}

uint64_t sub_1D5A12168(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF1AB0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t PersonalizationFeatureCTRDataList.personalizationFeatureIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PersonalizationFeatureCTRDataList.personalizationFeatureIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PersonalizationFeatureCTRDataList.personalizationFeatureIDs.modify())()
{
  return nullsub_1;
}

NewsAnalytics::PersonalizationFeatureCTRDataList __swiftcall PersonalizationFeatureCTRDataList.init(personalizationFeatureIDs:)(NewsAnalytics::PersonalizationFeatureCTRDataList personalizationFeatureIDs)
{
  NewsAnalytics::PersonalizationFeatureCTRDataList *v1;

  v1->personalizationFeatureIDs._rawValue = personalizationFeatureIDs.personalizationFeatureIDs._rawValue;
  return personalizationFeatureIDs;
}

unint64_t sub_1D5A12234()
{
  return 0xD000000000000019;
}

uint64_t sub_1D5A12250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A12850(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5A12278()
{
  sub_1D5A123EC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A122A0()
{
  sub_1D5A123EC();
  return sub_1D5AAEEE0();
}

uint64_t PersonalizationFeatureCTRDataList.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D5A125DC(0, &qword_1EFF50B08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A123EC();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D5A12430();
  sub_1D5A12638(&qword_1EFF50B20, (uint64_t (*)(void))sub_1D58E0E50, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A123EC()
{
  unint64_t result;

  result = qword_1EFF50B10;
  if (!qword_1EFF50B10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD748, &type metadata for PersonalizationFeatureCTRDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50B10);
  }
  return result;
}

void sub_1D5A12430()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF50B18)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF50B18);
  }
}

uint64_t PersonalizationFeatureCTRDataList.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D5A125DC(0, &qword_1EFF50B28, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A123EC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5A12430();
    sub_1D5A12638(&qword_1EFF50B30, (uint64_t (*)(void))sub_1D58E0E08, MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A125DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A123EC();
    v7 = a3(a1, &type metadata for PersonalizationFeatureCTRDataList.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A12638(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D5A12430();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D5A126A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PersonalizationFeatureCTRDataList.init(from:)(a1, a2);
}

uint64_t sub_1D5A126B8(_QWORD *a1)
{
  return PersonalizationFeatureCTRDataList.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PersonalizationFeatureCTRDataList()
{
  return &type metadata for PersonalizationFeatureCTRDataList;
}

uint64_t storeEnumTagSinglePayload for PersonalizationFeatureCTRDataList.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A1271C + 4 * byte_1D5ADD5C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A1273C + 4 * byte_1D5ADD5C5[v4]))();
}

_BYTE *sub_1D5A1271C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A1273C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A12744(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A1274C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A12754(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A1275C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationFeatureCTRDataList.CodingKeys()
{
  return &type metadata for PersonalizationFeatureCTRDataList.CodingKeys;
}

unint64_t sub_1D5A1277C()
{
  unint64_t result;

  result = qword_1EFF50B38;
  if (!qword_1EFF50B38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD720, &type metadata for PersonalizationFeatureCTRDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50B38);
  }
  return result;
}

unint64_t sub_1D5A127C4()
{
  unint64_t result;

  result = qword_1EFF50B40;
  if (!qword_1EFF50B40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD690, &type metadata for PersonalizationFeatureCTRDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50B40);
  }
  return result;
}

unint64_t sub_1D5A1280C()
{
  unint64_t result;

  result = qword_1EFF50B48;
  if (!qword_1EFF50B48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD6B8, &type metadata for PersonalizationFeatureCTRDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50B48);
  }
  return result;
}

uint64_t sub_1D5A12850(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AF1AD0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

NewsAnalytics::AdCreativeType_optional __swiftcall AdCreativeType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::AdCreativeType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdCreativeType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A1295C + 4 * byte_1D5ADD798[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A1295C()
{
  return 0x72656E6E6162;
}

uint64_t sub_1D5A12970()
{
  return 0x566C6C6F52657270;
}

uint64_t sub_1D5A12990()
{
  return 0x644165766974616ELL;
}

uint64_t sub_1D5A129A8()
{
  return 0x6974737265746E69;
}

void sub_1D5A129C8(char *a1)
{
  sub_1D5A3C6A8(*a1);
}

unint64_t sub_1D5A129D8()
{
  unint64_t result;

  result = qword_1EFF50B50;
  if (!qword_1EFF50B50)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdCreativeType, &type metadata for AdCreativeType);
    atomic_store(result, (unint64_t *)&qword_1EFF50B50);
  }
  return result;
}

void sub_1D5A12A1C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A12A68()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A12AFC()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A12B38()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A12BB8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A12C00()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::AdCreativeType_optional sub_1D5A12C94(Swift::String *a1)
{
  return AdCreativeType.init(rawValue:)(*a1);
}

uint64_t sub_1D5A12CA0()
{
  sub_1D57A1664();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for AdCreativeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A12D48 + 4 * byte_1D5ADD7B6[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A12D7C + 4 * byte_1D5ADD7B1[v4]))();
}

uint64_t sub_1D5A12D7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A12D84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A12D8CLL);
  return result;
}

uint64_t sub_1D5A12D98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A12DA0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A12DA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A12DAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void PaywallData.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *PaywallData.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*PaywallData.type.modify())()
{
  return nullsub_1;
}

void PaywallData.visualContentType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *PaywallData.visualContentType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*PaywallData.visualContentType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::PaywallData __swiftcall PaywallData.init(type:visualContentType:)(NewsAnalytics::PaywallType type, NewsAnalytics::PaywallVisualContentType_optional visualContentType)
{
  _BYTE *v2;
  char v3;
  NewsAnalytics::PaywallData result;

  v3 = *(_BYTE *)visualContentType.value;
  *v2 = *(_BYTE *)type;
  v2[1] = v3;
  result.type = type;
  return result;
}

uint64_t sub_1D5A12E1C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 1701869940;
}

uint64_t sub_1D5A12E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A135F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A12E78()
{
  sub_1D5A1301C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A12EA0()
{
  sub_1D5A1301C();
  return sub_1D5AAEEE0();
}

uint64_t PaywallData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1D5A1326C(0, &qword_1ED9CC8B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A1301C();
  sub_1D5AAEEC8();
  v16 = v9;
  v15 = 0;
  sub_1D5A13060();
  sub_1D5AAED6C();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1D5A130A4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5A1301C()
{
  unint64_t result;

  result = qword_1ED9C76E8;
  if (!qword_1ED9C76E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADDA58, &type metadata for PaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C76E8);
  }
  return result;
}

unint64_t sub_1D5A13060()
{
  unint64_t result;

  result = qword_1ED9C7710;
  if (!qword_1ED9C7710)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallType, &type metadata for PaywallType);
    atomic_store(result, (unint64_t *)&qword_1ED9C7710);
  }
  return result;
}

unint64_t sub_1D5A130A4()
{
  unint64_t result;

  result = qword_1ED9CD048;
  if (!qword_1ED9CD048)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallVisualContentType, &type metadata for PaywallVisualContentType);
    atomic_store(result, (unint64_t *)&qword_1ED9CD048);
  }
  return result;
}

uint64_t PaywallData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1D5A1326C(0, &qword_1ED9D0CC0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A1301C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    sub_1D5A132C8();
    sub_1D5AAECD0();
    v10 = v17;
    v14 = 1;
    sub_1D5A1330C();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A1326C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A1301C();
    v7 = a3(a1, &type metadata for PaywallData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A132C8()
{
  unint64_t result;

  result = qword_1ED9CF228;
  if (!qword_1ED9CF228)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallType, &type metadata for PaywallType);
    atomic_store(result, (unint64_t *)&qword_1ED9CF228);
  }
  return result;
}

unint64_t sub_1D5A1330C()
{
  unint64_t result;

  result = qword_1ED9D0808;
  if (!qword_1ED9D0808)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallVisualContentType, &type metadata for PaywallVisualContentType);
    atomic_store(result, (unint64_t *)&qword_1ED9D0808);
  }
  return result;
}

uint64_t sub_1D5A13358@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return PaywallData.init(from:)(a1, a2);
}

uint64_t sub_1D5A1336C(_QWORD *a1)
{
  return PaywallData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for PaywallData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A133CC + 4 * byte_1D5ADD8DD[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_1D5A13400 + 4 * byte_1D5ADD8D8[v4]))();
}

uint64_t sub_1D5A13400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D5A13408(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1D5A13410);
  return result;
}

uint64_t sub_1D5A1341C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1D5A13424);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A13428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D5A13430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallData()
{
  return &type metadata for PaywallData;
}

uint64_t storeEnumTagSinglePayload for PaywallData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5A13498 + 4 * byte_1D5ADD8E7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5A134CC + 4 * byte_1D5ADD8E2[v4]))();
}

uint64_t sub_1D5A134CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A134D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A134DCLL);
  return result;
}

uint64_t sub_1D5A134E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A134F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5A134F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A134FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallData.CodingKeys()
{
  return &type metadata for PaywallData.CodingKeys;
}

unint64_t sub_1D5A1351C()
{
  unint64_t result;

  result = qword_1EFF50B58;
  if (!qword_1EFF50B58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADDA30, &type metadata for PaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50B58);
  }
  return result;
}

unint64_t sub_1D5A13564()
{
  unint64_t result;

  result = qword_1ED9C76F8;
  if (!qword_1ED9C76F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD9A0, &type metadata for PaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C76F8);
  }
  return result;
}

unint64_t sub_1D5A135AC()
{
  unint64_t result;

  result = qword_1ED9C76F0;
  if (!qword_1ED9C76F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADD9C8, &type metadata for PaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C76F0);
  }
  return result;
}

uint64_t sub_1D5A135F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF1AF0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::PersonalizedAdsUserSelectionType_optional __swiftcall PersonalizedAdsUserSelectionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::PersonalizedAdsUserSelectionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PersonalizedAdsUserSelectionType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E49646574706FLL;
  if (*v0 != 1)
    v1 = 0x74754F646574706FLL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5A13780(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A36200(*a1, *a2);
}

unint64_t sub_1D5A13790()
{
  unint64_t result;

  result = qword_1EFF50B60;
  if (!qword_1EFF50B60)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PersonalizedAdsUserSelectionType, &type metadata for PersonalizedAdsUserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1EFF50B60);
  }
  return result;
}

uint64_t sub_1D5A137D4()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A13874()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A138F0()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::PersonalizedAdsUserSelectionType_optional sub_1D5A1398C(Swift::String *a1)
{
  return PersonalizedAdsUserSelectionType.init(rawValue:)(*a1);
}

void sub_1D5A13998(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x6E49646574706FLL;
  if (v2 != 1)
  {
    v5 = 0x74754F646574706FLL;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D5A139F8()
{
  sub_1D5A13B6C();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A13A54()
{
  sub_1D5A13B6C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsUserSelectionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A13AEC + 4 * byte_1D5ADDAB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A13B20 + 4 * byte_1D5ADDAB0[v4]))();
}

uint64_t sub_1D5A13B20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A13B28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A13B30);
  return result;
}

uint64_t sub_1D5A13B3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A13B44);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A13B48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A13B50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsUserSelectionType()
{
  return &type metadata for PersonalizedAdsUserSelectionType;
}

unint64_t sub_1D5A13B6C()
{
  unint64_t result;

  result = qword_1EFF50B68;
  if (!qword_1EFF50B68)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PersonalizedAdsUserSelectionType, &type metadata for PersonalizedAdsUserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1EFF50B68);
  }
  return result;
}

uint64_t sub_1D5A13BB0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF50B70, MEMORY[0x1E0CF8078]);
}

uint64_t static AudioEngageEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47418, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50B70, a1);
}

uint64_t sub_1D5A13BF0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF50B88, MEMORY[0x1E0CF8380]);
}

uint64_t static AudioEngageEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47420, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50B88, a1);
}

uint64_t AudioEngageEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AudioEngageEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AudioEngageEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for AudioEngageEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t AudioEngageEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.trackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.trackData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.audioEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.audioEngagementData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.articleScienceData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 56);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 56);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.issueViewData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.playbackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.playbackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.playbackData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.audioEngagementOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.audioEngagementOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.audioEngagementOriginationData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 76);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 76);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.userChannelContextData.modify())(_QWORD)
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AudioEngageEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v12, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v12, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v12, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v2, v31);
  v32 = a1 + v4[18];
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v32, v2, v33);
  v34 = a1 + v4[19];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v34, v2, v35);
}

uint64_t AudioEngageEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AudioEngageEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for AudioEngageEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t AudioEngageEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t AudioEngageEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *AudioEngageEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for AudioEngageEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t AudioEngageEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t AudioEngageEvent.Model.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for AudioEngageEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 40));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AudioEngageEvent.Model.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 44);
  v4 = *(_BYTE *)(v3 + 16);
  v5 = *(_DWORD *)(v3 + 20);
  v7 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v8 = *(_WORD *)(v3 + 40);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 20) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = v8;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 48));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.articleScienceData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE __dst[280];

  v3 = (const void *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 52));
  memcpy(__dst, v3, 0x111uLL);
  memcpy(a1, v3, 0x111uLL);
  return sub_1D57D42AC((uint64_t)__dst);
}

uint64_t AudioEngageEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 56));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 60));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t AudioEngageEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 64));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

float AudioEngageEvent.Model.playbackData.getter@<S0>(float *a1@<X8>)
{
  uint64_t v1;
  float result;

  result = *(float *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 68));
  *a1 = result;
  return result;
}

uint64_t AudioEngageEvent.Model.audioEngagementOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AudioEngageEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 72));
  return result;
}

uint64_t AudioEngageEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for AudioEngageEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 76));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

__n128 AudioEngageEvent.Model.init(eventData:timedData:articleData:channelData:groupData:feedData:trackData:audioEngagementData:viewData:articleScienceData:userBundleSubscriptionContextData:issueData:issueViewData:playbackData:audioEngagementOriginationData:userChannelContextData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, __int128 *a6@<X5>, int *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, const void *a11, char *a12, __n128 *a13, uint64_t *a14, int *a15, char *a16, char *a17)
{
  uint64_t v21;
  int v22;
  char v23;
  int v24;
  char v25;
  char v26;
  char v27;
  __int16 v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 *v40;
  __n128 result;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  int v53;
  __int16 v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  _BYTE v83[23];
  _BYTE v84[136];
  _BYTE __dst[273];

  v82 = a3[6];
  *(_OWORD *)v83 = a3[7];
  *(_QWORD *)&v83[15] = *(_QWORD *)((char *)a3 + 127);
  v78 = a3[2];
  v79 = a3[3];
  v80 = a3[4];
  v81 = a3[5];
  v76 = *a3;
  v77 = a3[1];
  v49 = a4[1];
  v50 = *a4;
  v47 = *((_BYTE *)a4 + 17);
  v48 = *((_BYTE *)a4 + 16);
  v45 = a4[4];
  v46 = a4[3];
  sub_1D57DD5B8(a5, (uint64_t)v84);
  v51 = *a6;
  v21 = *((_QWORD *)a6 + 2);
  v22 = *a7;
  LOBYTE(a7) = *((_BYTE *)a7 + 4);
  v59 = a8[1];
  v60 = *a8;
  v57 = *((_DWORD *)a8 + 5);
  v58 = *((_BYTE *)a8 + 16);
  v55 = a8[4];
  v56 = a8[3];
  v53 = v22;
  v54 = *((_WORD *)a8 + 20);
  v62 = a10[1];
  v63 = *a10;
  v61 = *((_WORD *)a10 + 8);
  memcpy(__dst, a11, sizeof(__dst));
  v23 = *a12;
  v69 = *((_QWORD *)a12 + 2);
  v70 = *((_QWORD *)a12 + 1);
  v67 = a12[25];
  v68 = a12[24];
  v65 = *((_QWORD *)a12 + 5);
  v66 = *((_QWORD *)a12 + 4);
  v64 = a12[48];
  v73 = *a13;
  v71 = a13[1].n128_u64[1];
  v72 = a13[1].n128_u64[0];
  v74 = a14[1];
  v75 = *a14;
  v24 = *a15;
  v25 = *a16;
  v26 = *a17;
  v27 = a17[1];
  v28 = *((_WORD *)a17 + 1);
  v29 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a9, a1, v29);
  v30 = (int *)type metadata accessor for AudioEngageEvent.Model(0);
  v31 = a9 + v30[5];
  v32 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v31, a2, v32);
  v33 = a9 + v30[6];
  *(_OWORD *)(v33 + 96) = v82;
  *(_OWORD *)(v33 + 112) = *(_OWORD *)v83;
  *(_QWORD *)(v33 + 127) = *(_QWORD *)&v83[15];
  *(_OWORD *)(v33 + 32) = v78;
  *(_OWORD *)(v33 + 48) = v79;
  *(_OWORD *)(v33 + 64) = v80;
  *(_OWORD *)(v33 + 80) = v81;
  *(_OWORD *)v33 = v76;
  *(_OWORD *)(v33 + 16) = v77;
  v34 = a9 + v30[7];
  *(_QWORD *)v34 = v50;
  *(_QWORD *)(v34 + 8) = v49;
  *(_BYTE *)(v34 + 16) = v48;
  *(_BYTE *)(v34 + 17) = v47;
  *(_QWORD *)(v34 + 24) = v46;
  *(_QWORD *)(v34 + 32) = v45;
  sub_1D57DD5B8((uint64_t)v84, a9 + v30[8]);
  v35 = a9 + v30[9];
  *(_OWORD *)v35 = v51;
  *(_QWORD *)(v35 + 16) = v21;
  v36 = a9 + v30[10];
  *(_DWORD *)v36 = v53;
  *(_BYTE *)(v36 + 4) = (_BYTE)a7;
  v37 = a9 + v30[11];
  *(_QWORD *)v37 = v60;
  *(_QWORD *)(v37 + 8) = v59;
  *(_BYTE *)(v37 + 16) = v58;
  *(_DWORD *)(v37 + 20) = v57;
  *(_QWORD *)(v37 + 24) = v56;
  *(_QWORD *)(v37 + 32) = v55;
  *(_WORD *)(v37 + 40) = v54;
  v38 = a9 + v30[12];
  *(_QWORD *)v38 = v63;
  *(_QWORD *)(v38 + 8) = v62;
  *(_WORD *)(v38 + 16) = v61;
  memcpy((void *)(a9 + v30[13]), __dst, 0x111uLL);
  v39 = a9 + v30[14];
  *(_BYTE *)v39 = v23;
  *(_QWORD *)(v39 + 8) = v70;
  *(_QWORD *)(v39 + 16) = v69;
  *(_BYTE *)(v39 + 24) = v68;
  *(_BYTE *)(v39 + 25) = v67;
  *(_QWORD *)(v39 + 32) = v66;
  *(_QWORD *)(v39 + 40) = v65;
  *(_BYTE *)(v39 + 48) = v64;
  v40 = (__n128 *)(a9 + v30[15]);
  result = v73;
  *v40 = v73;
  v40[1].n128_u64[0] = v72;
  v40[1].n128_u64[1] = v71;
  v42 = (_QWORD *)(a9 + v30[16]);
  *v42 = v75;
  v42[1] = v74;
  *(_DWORD *)(a9 + v30[17]) = v24;
  *(_BYTE *)(a9 + v30[18]) = v25;
  v43 = a9 + v30[19];
  *(_BYTE *)v43 = v26;
  *(_BYTE *)(v43 + 1) = v27;
  *(_WORD *)(v43 + 2) = v28;
  return result;
}

uint64_t sub_1D5A156EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A15724 + 4 * byte_1D5ADDBE0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A15724()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5A15738()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D5A1576C()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D5A15780()
{
  return 0x6174614464656566;
}

unint64_t sub_1D5A157D4()
{
  return 0xD000000000000012;
}

unint64_t sub_1D5A157F0()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5A15808()
{
  return 0x7461446575737369;
}

uint64_t sub_1D5A1581C()
{
  return 0x6569566575737369;
}

uint64_t sub_1D5A15840()
{
  return 0x6B63616279616C70;
}

unint64_t sub_1D5A15860()
{
  return 0xD00000000000001ELL;
}

void sub_1D5A15878()
{
  JUMPOUT(0x1D5A1588CLL);
}

uint64_t sub_1D5A15898()
{
  unsigned __int8 *v0;

  return sub_1D5A156EC(*v0);
}

uint64_t sub_1D5A158A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A1B37C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A158C4()
{
  sub_1D5A15F50();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A158EC()
{
  sub_1D5A15F50();
  return sub_1D5AAEEE0();
}

uint64_t AudioEngageEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  int v26;
  uint64_t v27;
  char v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  __int128 *v33;
  __int16 v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  _OWORD *v39;
  __int128 v40;
  char *v41;
  char v42;
  char v43;
  uint64_t v45;
  char v46;
  _BYTE v47[273];
  char v48;
  __int128 v49;
  __int16 v50;
  _BYTE v51[144];
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;

  v3 = v1;
  sub_1D5A16B7C(0, &qword_1EFF50BA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v45 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A15F50();
  sub_1D5AAEEC8();
  v47[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AudioEngageEvent.Model(0);
    v58 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + v10[6];
    v12 = *(_OWORD *)(v11 + 112);
    *(_OWORD *)&v47[96] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)&v47[112] = v12;
    *(_QWORD *)&v47[127] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    *(_OWORD *)&v47[32] = *(_OWORD *)(v11 + 32);
    *(_OWORD *)&v47[48] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    *(_OWORD *)&v47[64] = *(_OWORD *)(v11 + 64);
    *(_OWORD *)&v47[80] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v47 = *(_OWORD *)v11;
    *(_OWORD *)&v47[16] = v15;
    v51[0] = 2;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    v52 = v17;
    v53 = v18;
    v54 = v19;
    v55 = v20;
    v56 = v22;
    v57 = v21;
    v51[143] = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[8], (uint64_t)v51);
    sub_1D57DD5B8((uint64_t)v51, (uint64_t)v47);
    LOBYTE(v49) = 4;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v23 = v3 + v10[9];
    v24 = *(_QWORD *)(v23 + 16);
    *(_OWORD *)v47 = *(_OWORD *)v23;
    *(_QWORD *)&v47[16] = v24;
    LOBYTE(v49) = 5;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v25 = (int *)(v3 + v10[10]);
    v26 = *v25;
    LOBYTE(v25) = *((_BYTE *)v25 + 4);
    *(_DWORD *)v47 = v26;
    v47[4] = (_BYTE)v25;
    LOBYTE(v49) = 6;
    sub_1D57C5E0C();
    sub_1D5AAED6C();
    v27 = v3 + v10[11];
    v28 = *(_BYTE *)(v27 + 16);
    v29 = *(_DWORD *)(v27 + 20);
    v30 = *(_QWORD *)(v27 + 24);
    v31 = *(_QWORD *)(v27 + 32);
    v32 = *(_WORD *)(v27 + 40);
    *(_OWORD *)v47 = *(_OWORD *)v27;
    v47[16] = v28;
    *(_DWORD *)&v47[20] = v29;
    *(_QWORD *)&v47[24] = v30;
    *(_QWORD *)&v47[32] = v31;
    *(_WORD *)&v47[40] = v32;
    LOBYTE(v49) = 7;
    sub_1D57C8D54();
    sub_1D5AAED6C();
    v33 = (__int128 *)(v3 + v10[12]);
    v34 = *((_WORD *)v33 + 8);
    v49 = *v33;
    v50 = v34;
    v48 = 8;
    sub_1D57C62A4();
    sub_1D5AAED18();
    memcpy(v47, (const void *)(v3 + v10[13]), sizeof(v47));
    v46 = 9;
    sub_1D57CB7A8();
    sub_1D5AAED6C();
    v35 = v3 + v10[14];
    v36 = *(_BYTE *)(v35 + 24);
    v37 = *(_BYTE *)(v35 + 25);
    v38 = *(_BYTE *)(v35 + 48);
    v47[0] = *(_BYTE *)v35;
    *(_OWORD *)&v47[8] = *(_OWORD *)(v35 + 8);
    v47[24] = v36;
    v47[25] = v37;
    *(_OWORD *)&v47[32] = *(_OWORD *)(v35 + 32);
    v47[48] = v38;
    v46 = 10;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v39 = (_OWORD *)(v3 + v10[15]);
    v40 = v39[1];
    *(_OWORD *)v47 = *v39;
    *(_OWORD *)&v47[16] = v40;
    v46 = 11;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    *(_OWORD *)v47 = *(_OWORD *)(v3 + v10[16]);
    v46 = 12;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    *(_DWORD *)v47 = *(_DWORD *)(v3 + v10[17]);
    v46 = 13;
    sub_1D57CB3C8();
    sub_1D5AAED6C();
    v47[0] = *(_BYTE *)(v3 + v10[18]);
    v46 = 14;
    sub_1D57C6C7C();
    sub_1D5AAED6C();
    v41 = (char *)(v3 + v10[19]);
    v42 = *v41;
    v43 = v41[1];
    LOWORD(v41) = *((_WORD *)v41 + 1);
    v47[0] = v42;
    v47[1] = v43;
    *(_WORD *)&v47[2] = (_WORD)v41;
    v46 = 15;
    sub_1D57C7B24();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A15F50()
{
  unint64_t result;

  result = qword_1EFF50BA8;
  if (!qword_1EFF50BA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADDFA4, &type metadata for AudioEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50BA8);
  }
  return result;
}

uint64_t AudioEngageEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  char *v16;
  uint64_t result;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  int *v29;
  char *v30;
  uint64_t v31;
  int *v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char v46;
  char *v47;
  char v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  __int16 v52;
  char *v53;
  __int16 v54;
  char *v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char *v60;
  uint64_t v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  __int16 v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _BOOL4 v82;
  uint64_t v83;
  char *v84;
  char v85;
  _OWORD v86[3];
  char v87;
  char v88;
  _BYTE v89[144];
  _BYTE v90[144];
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _BYTE v98[23];
  _OWORD v99[19];
  int *v100;

  v74 = a2;
  v79 = sub_1D5AADFB0();
  v77 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v4 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v78 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A16B7C(0, &qword_1EFF50BB0, MEMORY[0x1E0DED048]);
  v75 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v72 - v10;
  v100 = (int *)type metadata accessor for AudioEngageEvent.Model(0);
  MEMORY[0x1E0C80A78](v100);
  v84 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v80 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D5A15F50();
  v81 = v11;
  v14 = v83;
  sub_1D5AAEEB0();
  v76 = v5;
  if (v14)
  {
    v83 = v14;
    LODWORD(v81) = 0;
    v15 = 0;
  }
  else
  {
    v73 = v9;
    LOBYTE(v99[0]) = 0;
    sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v30 = v84;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v84, v7, v5);
    LOBYTE(v99[0]) = 1;
    sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v31 = v79;
    sub_1D5AAECD0();
    v32 = v100;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v30[v100[5]], v4, v31);
    v90[143] = 2;
    sub_1D57CB8FC();
    sub_1D5AAECD0();
    v33 = &v30[v32[6]];
    v34 = *(_OWORD *)v98;
    *((_OWORD *)v33 + 6) = v97;
    *((_OWORD *)v33 + 7) = v34;
    *(_QWORD *)(v33 + 127) = *(_QWORD *)&v98[15];
    v35 = v94;
    *((_OWORD *)v33 + 2) = v93;
    *((_OWORD *)v33 + 3) = v35;
    v36 = v96;
    *((_OWORD *)v33 + 4) = v95;
    *((_OWORD *)v33 + 5) = v36;
    v37 = v92;
    *(_OWORD *)v33 = v91;
    *((_OWORD *)v33 + 1) = v37;
    v90[0] = 3;
    sub_1D57CB874();
    sub_1D5AAECD0();
    v38 = *((_QWORD *)&v99[0] + 1);
    v39 = v99[1];
    v40 = BYTE1(v99[1]);
    v41 = *((_QWORD *)&v99[1] + 1);
    v42 = *(_QWORD *)&v99[2];
    v43 = &v30[v32[7]];
    *(_QWORD *)v43 = *(_QWORD *)&v99[0];
    *((_QWORD *)v43 + 1) = v38;
    v43[16] = v39;
    v43[17] = v40;
    *((_QWORD *)v43 + 3) = v41;
    *((_QWORD *)v43 + 4) = v42;
    v89[143] = 4;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57DD5B8((uint64_t)v90, (uint64_t)v89);
    sub_1D57DD5B8((uint64_t)v89, (uint64_t)&v30[v32[8]]);
    LOBYTE(v86[0]) = 5;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v44 = *(_QWORD *)&v99[1];
    v45 = &v30[v32[9]];
    *(_OWORD *)v45 = v99[0];
    *((_QWORD *)v45 + 2) = v44;
    LOBYTE(v86[0]) = 6;
    sub_1D57C5DC8();
    sub_1D5AAECD0();
    v46 = BYTE4(v99[0]);
    v47 = &v30[v32[10]];
    *(_DWORD *)v47 = v99[0];
    v47[4] = v46;
    LOBYTE(v86[0]) = 7;
    sub_1D57C8D10();
    sub_1D5AAECD0();
    v48 = v99[1];
    v49 = DWORD1(v99[1]);
    v50 = *((_QWORD *)&v99[1] + 1);
    v51 = *(_QWORD *)&v99[2];
    v52 = WORD4(v99[2]);
    v53 = &v30[v100[11]];
    *(_OWORD *)v53 = v99[0];
    v53[16] = v48;
    *((_DWORD *)v53 + 5) = v49;
    *((_QWORD *)v53 + 3) = v50;
    *((_QWORD *)v53 + 4) = v51;
    *((_WORD *)v53 + 20) = v52;
    LOBYTE(v86[0]) = 8;
    sub_1D57C6260();
    sub_1D5AAEC7C();
    v54 = v99[1];
    v55 = &v30[v100[12]];
    *(_OWORD *)v55 = v99[0];
    *((_WORD *)v55 + 8) = v54;
    v88 = 9;
    sub_1D57CB764();
    sub_1D5AAECD0();
    v83 = 0;
    memcpy(&v84[v100[13]], v99, 0x111uLL);
    v85 = 10;
    sub_1D57C6AF8();
    v56 = v83;
    sub_1D5AAECD0();
    v83 = v56;
    if (v56)
    {
      (*(void (**)(char *, uint64_t))(v73 + 8))(v81, v75);
      LODWORD(v81) = 0;
      v15 = 959;
    }
    else
    {
      v57 = BYTE8(v86[1]);
      v58 = BYTE9(v86[1]);
      v59 = v87;
      v60 = &v84[v100[14]];
      *v60 = v86[0];
      *(_OWORD *)(v60 + 8) = *(_OWORD *)((char *)v86 + 8);
      v60[24] = v57;
      v60[25] = v58;
      *((_OWORD *)v60 + 2) = v86[2];
      v60[48] = v59;
      v85 = 11;
      sub_1D57C5ED8();
      v61 = v83;
      sub_1D5AAEC7C();
      v83 = v61;
      if (!v61)
      {
        v62 = &v84[v100[15]];
        v63 = v86[1];
        *(_OWORD *)v62 = v86[0];
        *((_OWORD *)v62 + 1) = v63;
        v85 = 12;
        sub_1D57CAD28();
        v64 = v83;
        sub_1D5AAEC7C();
        v82 = v64 == 0;
        v83 = v64;
        if (!v64)
        {
          *(_OWORD *)&v84[v100[16]] = v86[0];
          v85 = 13;
          sub_1D57CB384();
          v65 = v83;
          sub_1D5AAECD0();
          v83 = v65;
          if (!v65)
          {
            *(_DWORD *)&v84[v100[17]] = v86[0];
            v85 = 14;
            sub_1D57C6C38();
            v66 = v83;
            sub_1D5AAECD0();
            v83 = v66;
            if (!v66)
            {
              v84[v100[18]] = v86[0];
              v85 = 15;
              sub_1D57C7AE0();
              v67 = v83;
              sub_1D5AAECD0();
              v83 = v67;
              if (!v67)
              {
                (*(void (**)(char *, uint64_t))(v73 + 8))(v81, v75);
                v68 = BYTE1(v86[0]);
                v69 = WORD1(v86[0]);
                v70 = (uint64_t)v84;
                v71 = &v84[v100[19]];
                *v71 = v86[0];
                v71[1] = v68;
                *((_WORD *)v71 + 1) = v69;
                sub_1D5A16BD8(v70, v74);
                __swift_destroy_boxed_opaque_existential_1(v80);
                return sub_1D5A16C1C(v70);
              }
            }
          }
        }
        (*(void (**)(char *, uint64_t))(v73 + 8))(v81, v75);
        __swift_destroy_boxed_opaque_existential_1(v80);
        v16 = v84;
        (*(void (**)(char *, uint64_t))(v78 + 8))(v84, v76);
        (*(void (**)(char *, uint64_t))(v77 + 8))(&v16[v100[5]], v79);
        LOBYTE(v18) = 1;
        v19 = 1;
        v20 = 1;
        v21 = 1;
        v22 = 1;
        v23 = 1;
        LODWORD(v81) = 1;
        LODWORD(v80) = 1;
LABEL_9:
        v24 = &v16[v100[6]];
        v25 = *((_OWORD *)v24 + 4);
        v99[5] = *((_OWORD *)v24 + 5);
        v26 = *((_OWORD *)v24 + 7);
        v99[6] = *((_OWORD *)v24 + 6);
        v99[7] = v26;
        *(_QWORD *)((char *)&v99[7] + 15) = *(_QWORD *)(v24 + 127);
        v27 = *((_OWORD *)v24 + 3);
        v99[2] = *((_OWORD *)v24 + 2);
        v99[3] = v27;
        v99[4] = v25;
        v28 = *((_OWORD *)v24 + 1);
        v99[0] = *(_OWORD *)v24;
        v99[1] = v28;
        result = sub_1D57D5AE0((uint64_t)v99);
        if ((v18 & 1) != 0)
          goto LABEL_10;
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v81, v75);
      v15 = 1983;
      LODWORD(v81) = 1;
    }
  }
  v16 = v84;
  result = __swift_destroy_boxed_opaque_existential_1(v80);
  v18 = (v15 >> 3) & 1;
  v19 = (v15 >> 4) & 1;
  v20 = (v15 >> 5) & 1;
  v21 = (v15 >> 7) & 1;
  v22 = (v15 >> 8) & 1;
  v23 = (v15 >> 9) & 1;
  if ((v15 & 1) != 0)
    result = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v16, v76);
  if ((v15 & 2) != 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(&v16[v100[5]], v79);
    if ((v15 & 4) != 0)
      goto LABEL_8;
  }
  else if ((v15 & 4) != 0)
  {
LABEL_8:
    LODWORD(v80) = 0;
    v82 = 0;
    goto LABEL_9;
  }
  v82 = 0;
  LODWORD(v80) = 0;
  if ((v15 & 8) != 0)
  {
LABEL_10:
    v29 = v100;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  v29 = v100;
  if (!v19)
  {
LABEL_11:
    if (v20)
      goto LABEL_12;
    goto LABEL_23;
  }
LABEL_22:
  sub_1D57DD5B8((uint64_t)&v16[v29[8]], (uint64_t)v99);
  result = (uint64_t)sub_1D57DE9C8(v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
  if ((v20 & 1) != 0)
  {
LABEL_12:
    result = sub_1D57DAEDC(*(_QWORD *)&v16[v29[9]], *(_QWORD *)&v16[v29[9] + 8], *(_QWORD *)&v16[v29[9] + 16]);
    if ((v21 & 1) == 0)
      goto LABEL_13;
    goto LABEL_24;
  }
LABEL_23:
  if (!v21)
  {
LABEL_13:
    if (v22)
      goto LABEL_14;
    goto LABEL_25;
  }
LABEL_24:
  result = swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
      goto LABEL_15;
    goto LABEL_26;
  }
LABEL_25:
  if (!v23)
  {
LABEL_15:
    if ((_DWORD)v81)
      goto LABEL_16;
    goto LABEL_27;
  }
LABEL_26:
  memcpy(v99, &v16[v29[13]], 0x111uLL);
  result = sub_1D57D5AB8((uint64_t)v99);
  if ((v81 & 1) != 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v80 & 1) == 0)
      goto LABEL_17;
LABEL_28:
    result = sub_1D57EA700(*(_QWORD *)&v16[v29[15]], *(_QWORD *)&v16[v29[15] + 8]);
    if (!v82)
      return result;
    return swift_bridgeObjectRelease();
  }
LABEL_27:
  if ((_DWORD)v80)
    goto LABEL_28;
LABEL_17:
  if (!v82)
    return result;
  return swift_bridgeObjectRelease();
}

void sub_1D5A16B7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A15F50();
    v7 = a3(a1, &type metadata for AudioEngageEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A16BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A16C1C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A16C58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngageEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A16C6C(_QWORD *a1)
{
  return AudioEngageEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A16C80@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47418, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50B70, a1);
}

uint64_t sub_1D5A16CA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47420, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50B88, a1);
}

uint64_t sub_1D5A16CC8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v13, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v13, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v13, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v13, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v4, v32);
  v33 = a2 + a1[18];
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v33, v4, v34);
  v35 = a2 + a1[19];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v35, v4, v36);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioEngageEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v68 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v68 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = a3[18];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
    v64 = a3[19];
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
  }
  return a1;
}

uint64_t destroy for AudioEngageEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  v31 = a1 + a2[18];
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  v33 = a1 + a2[19];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
}

uint64_t initializeWithCopy for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
  return a1;
}

uint64_t assignWithCopy for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
  return a1;
}

uint64_t initializeWithTake for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
  return a1;
}

uint64_t assignWithTake for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngageEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A18CF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
                            v12 = *(_QWORD *)(v25 - 8);
                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                            {
                              v8 = v25;
                              v13 = a3[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
                              v12 = *(_QWORD *)(v26 - 8);
                              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                              {
                                v8 = v26;
                                v13 = a3[18];
                              }
                              else
                              {
                                sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                                v8 = v27;
                                v12 = *(_QWORD *)(v27 - 8);
                                v13 = a3[19];
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AudioEngageEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A1912C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
                            v14 = *(_QWORD *)(v27 - 8);
                            if (*(_DWORD *)(v14 + 84) == a3)
                            {
                              v10 = v27;
                              v15 = a4[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
                              v14 = *(_QWORD *)(v28 - 8);
                              if (*(_DWORD *)(v14 + 84) == a3)
                              {
                                v10 = v28;
                                v15 = a4[18];
                              }
                              else
                              {
                                sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                                v10 = v29;
                                v14 = *(_QWORD *)(v29 - 8);
                                v15 = a4[19];
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioEngageEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v87;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v16;
    v14[32] = v15[32];
    v17 = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 6) = v17;
    v14[56] = v15[56];
    v14[57] = v15[57];
    v18 = *((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
    *((_QWORD *)v14 + 9) = v18;
    v14[80] = v15[80];
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    v14[112] = v15[112];
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    *((_DWORD *)v14 + 32) = *((_DWORD *)v15 + 32);
    v14[132] = v15[132];
    *(_WORD *)(v14 + 133) = *(_WORD *)(v15 + 133);
    v19 = (char *)a1 + v13;
    v20 = (char *)a2 + v13;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    v22 = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 4) = v22;
    v23 = a3[8];
    v24 = (char *)a1 + v23;
    v87 = a2;
    v25 = (char *)a2 + v23;
    v26 = *((_QWORD *)v25 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26)
    {
      *(_WORD *)v24 = *(_WORD *)v25;
      *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
      *((_QWORD *)v24 + 2) = v26;
      *((_QWORD *)v24 + 3) = *((_QWORD *)v25 + 3);
      v27 = *((_QWORD *)v25 + 5);
      *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
      *((_QWORD *)v24 + 5) = v27;
      v28 = *((_QWORD *)v25 + 7);
      *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
      *((_QWORD *)v24 + 7) = v28;
      v29 = *((_QWORD *)v25 + 9);
      *((_QWORD *)v24 + 8) = *((_QWORD *)v25 + 8);
      *((_QWORD *)v24 + 9) = v29;
      v24[80] = v25[80];
      v30 = *((_QWORD *)v25 + 12);
      *((_QWORD *)v24 + 11) = *((_QWORD *)v25 + 11);
      *((_QWORD *)v24 + 12) = v30;
      *((_QWORD *)v24 + 13) = *((_QWORD *)v25 + 13);
      v24[112] = v25[112];
      v32 = *((_QWORD *)v25 + 15);
      v31 = *((_QWORD *)v25 + 16);
      *((_QWORD *)v24 + 15) = v32;
      *((_QWORD *)v24 + 16) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v34 = *((_OWORD *)v25 + 7);
      *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
      *((_OWORD *)v24 + 7) = v34;
      *((_QWORD *)v24 + 16) = *((_QWORD *)v25 + 16);
      v35 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v35;
      v36 = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
      *((_OWORD *)v24 + 5) = v36;
      v37 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v37;
    }
    v38 = a3[9];
    v39 = (char *)a1 + v38;
    v40 = (char *)v87 + v38;
    v41 = *((_QWORD *)v40 + 2);
    if (v41 == 1)
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
    }
    else
    {
      *v39 = *v40;
      *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
      *((_QWORD *)v39 + 2) = v41;
      swift_bridgeObjectRetain();
    }
    v42 = a3[10];
    v43 = a3[11];
    v44 = (char *)a1 + v42;
    v45 = (char *)v87 + v42;
    *(_DWORD *)v44 = *(_DWORD *)v45;
    v44[4] = v45[4];
    v46 = (char *)a1 + v43;
    v47 = (char *)v87 + v43;
    *(_OWORD *)v46 = *(_OWORD *)v47;
    v46[16] = v47[16];
    *((_DWORD *)v46 + 5) = *((_DWORD *)v47 + 5);
    v48 = *((_QWORD *)v47 + 4);
    *((_QWORD *)v46 + 3) = *((_QWORD *)v47 + 3);
    *((_QWORD *)v46 + 4) = v48;
    v46[40] = v47[40];
    v46[41] = v47[41];
    v49 = a3[12];
    v50 = a3[13];
    v51 = (char *)a1 + v49;
    v52 = (char *)v87 + v49;
    v53 = *((_QWORD *)v52 + 1);
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *((_QWORD *)v51 + 1) = v53;
    v51[16] = v52[16];
    v51[17] = v52[17];
    v54 = (char *)a1 + v50;
    v55 = (char *)v87 + v50;
    v56 = *((_OWORD *)v55 + 1);
    *(_OWORD *)v54 = *(_OWORD *)v55;
    *((_OWORD *)v54 + 1) = v56;
    v57 = *((_OWORD *)v55 + 3);
    *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
    *((_OWORD *)v54 + 3) = v57;
    v58 = *((_OWORD *)v55 + 5);
    *((_OWORD *)v54 + 4) = *((_OWORD *)v55 + 4);
    *((_OWORD *)v54 + 5) = v58;
    *((_OWORD *)v54 + 6) = *((_OWORD *)v55 + 6);
    v60 = *((_QWORD *)v55 + 14);
    v59 = *((_QWORD *)v55 + 15);
    v54[128] = v55[128];
    *((_QWORD *)v54 + 14) = v60;
    *((_QWORD *)v54 + 15) = v59;
    v61 = *((_QWORD *)v55 + 17);
    v54[144] = v55[144];
    *((_QWORD *)v54 + 17) = v61;
    v62 = *((_QWORD *)v55 + 19);
    v54[160] = v55[160];
    *((_QWORD *)v54 + 19) = v62;
    v63 = *((_QWORD *)v55 + 21);
    v54[176] = v55[176];
    *((_QWORD *)v54 + 21) = v63;
    v64 = *((_QWORD *)v55 + 23);
    v54[192] = v55[192];
    *((_QWORD *)v54 + 23) = v64;
    v65 = *((_QWORD *)v55 + 25);
    v54[208] = v55[208];
    *((_QWORD *)v54 + 25) = v65;
    v66 = *((_QWORD *)v55 + 27);
    v54[224] = v55[224];
    *((_QWORD *)v54 + 27) = v66;
    v67 = *((_QWORD *)v55 + 29);
    v54[240] = v55[240];
    *((_QWORD *)v54 + 29) = v67;
    v68 = *((_QWORD *)v55 + 31);
    v54[256] = v55[256];
    *((_QWORD *)v54 + 31) = v68;
    v69 = *((_QWORD *)v55 + 33);
    v54[272] = v55[272];
    *((_QWORD *)v54 + 33) = v69;
    v70 = a3[14];
    v71 = a3[15];
    v72 = (char *)a1 + v70;
    v73 = (char *)v87 + v70;
    *v72 = *v73;
    v74 = *((_QWORD *)v73 + 2);
    *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
    *((_QWORD *)v72 + 2) = v74;
    v72[24] = v73[24];
    v72[25] = v73[25];
    v75 = *((_QWORD *)v73 + 5);
    *((_QWORD *)v72 + 4) = *((_QWORD *)v73 + 4);
    *((_QWORD *)v72 + 5) = v75;
    v72[48] = v73[48];
    v76 = (char *)a1 + v71;
    v77 = (char *)v87 + v71;
    v78 = *(_QWORD *)((char *)v87 + v71 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v78)
    {
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v78;
      *((_WORD *)v76 + 8) = *((_WORD *)v77 + 8);
      *((_QWORD *)v76 + 3) = *((_QWORD *)v77 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v79 = *((_OWORD *)v77 + 1);
      *(_OWORD *)v76 = *(_OWORD *)v77;
      *((_OWORD *)v76 + 1) = v79;
    }
    v80 = a3[16];
    v81 = a3[17];
    v82 = (_QWORD *)((char *)a1 + v80);
    v83 = (_QWORD *)((char *)v87 + v80);
    v84 = v83[1];
    *v82 = *v83;
    v82[1] = v84;
    *(_DWORD *)((char *)a1 + v81) = *(_DWORD *)((char *)v87 + v81);
    v85 = a3[19];
    *((_BYTE *)a1 + a3[18]) = *((_BYTE *)v87 + a3[18]);
    *(_DWORD *)((char *)a1 + v85) = *(_DWORD *)((char *)v87 + v85);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioEngageEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[9] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[15] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  int *v85;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 48) = v16;
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
  *(_BYTE *)(v13 + 57) = *(_BYTE *)(v14 + 57);
  v17 = *(_QWORD *)(v14 + 72);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 72) = v17;
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  *(_DWORD *)(v13 + 128) = *(_DWORD *)(v14 + 128);
  *(_BYTE *)(v13 + 132) = *(_BYTE *)(v14 + 132);
  *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
  v18 = a1 + v12;
  v19 = a2 + v12;
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  v21 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 32) = v21;
  v85 = a3;
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    *(_WORD *)v23 = *(_WORD *)v24;
    *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
    *(_QWORD *)(v23 + 16) = v25;
    *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
    v26 = *(_QWORD *)(v24 + 40);
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
    *(_QWORD *)(v23 + 40) = v26;
    v27 = *(_QWORD *)(v24 + 56);
    *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
    *(_QWORD *)(v23 + 56) = v27;
    v28 = *(_QWORD *)(v24 + 72);
    *(_QWORD *)(v23 + 64) = *(_QWORD *)(v24 + 64);
    *(_QWORD *)(v23 + 72) = v28;
    *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
    v29 = *(_QWORD *)(v24 + 96);
    *(_QWORD *)(v23 + 88) = *(_QWORD *)(v24 + 88);
    *(_QWORD *)(v23 + 96) = v29;
    *(_QWORD *)(v23 + 104) = *(_QWORD *)(v24 + 104);
    *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
    v31 = *(_QWORD *)(v24 + 120);
    v30 = *(_QWORD *)(v24 + 128);
    *(_QWORD *)(v23 + 120) = v31;
    *(_QWORD *)(v23 + 128) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v32 = *(_OWORD *)(v24 + 112);
    *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
    *(_OWORD *)(v23 + 112) = v32;
    *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
    v33 = *(_OWORD *)(v24 + 48);
    *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
    *(_OWORD *)(v23 + 48) = v33;
    v34 = *(_OWORD *)(v24 + 80);
    *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
    *(_OWORD *)(v23 + 80) = v34;
    v35 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v35;
  }
  v36 = v85[9];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(v38 + 16);
  if (v39 == 1)
  {
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *(_QWORD *)(v37 + 16) = *(_QWORD *)(v38 + 16);
  }
  else
  {
    *(_BYTE *)v37 = *(_BYTE *)v38;
    *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
    *(_QWORD *)(v37 + 16) = v39;
    swift_bridgeObjectRetain();
  }
  v40 = v85[10];
  v41 = v85[11];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_DWORD *)v42 = *(_DWORD *)v43;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  v44 = a1 + v41;
  v45 = a2 + v41;
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *(_BYTE *)(v44 + 16) = *(_BYTE *)(v45 + 16);
  *(_DWORD *)(v44 + 20) = *(_DWORD *)(v45 + 20);
  v46 = *(_QWORD *)(v45 + 32);
  *(_QWORD *)(v44 + 24) = *(_QWORD *)(v45 + 24);
  *(_QWORD *)(v44 + 32) = v46;
  *(_BYTE *)(v44 + 40) = *(_BYTE *)(v45 + 40);
  *(_BYTE *)(v44 + 41) = *(_BYTE *)(v45 + 41);
  v47 = v85[12];
  v48 = v85[13];
  v49 = a1 + v47;
  v50 = a2 + v47;
  v51 = *(_QWORD *)(v50 + 8);
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_QWORD *)(v49 + 8) = v51;
  *(_BYTE *)(v49 + 16) = *(_BYTE *)(v50 + 16);
  *(_BYTE *)(v49 + 17) = *(_BYTE *)(v50 + 17);
  v52 = a1 + v48;
  v53 = a2 + v48;
  v54 = *(_OWORD *)(v53 + 16);
  *(_OWORD *)v52 = *(_OWORD *)v53;
  *(_OWORD *)(v52 + 16) = v54;
  v55 = *(_OWORD *)(v53 + 48);
  *(_OWORD *)(v52 + 32) = *(_OWORD *)(v53 + 32);
  *(_OWORD *)(v52 + 48) = v55;
  v56 = *(_OWORD *)(v53 + 80);
  *(_OWORD *)(v52 + 64) = *(_OWORD *)(v53 + 64);
  *(_OWORD *)(v52 + 80) = v56;
  *(_OWORD *)(v52 + 96) = *(_OWORD *)(v53 + 96);
  v58 = *(_QWORD *)(v53 + 112);
  v57 = *(_QWORD *)(v53 + 120);
  *(_BYTE *)(v52 + 128) = *(_BYTE *)(v53 + 128);
  *(_QWORD *)(v52 + 112) = v58;
  *(_QWORD *)(v52 + 120) = v57;
  v59 = *(_QWORD *)(v53 + 136);
  *(_BYTE *)(v52 + 144) = *(_BYTE *)(v53 + 144);
  *(_QWORD *)(v52 + 136) = v59;
  v60 = *(_QWORD *)(v53 + 152);
  *(_BYTE *)(v52 + 160) = *(_BYTE *)(v53 + 160);
  *(_QWORD *)(v52 + 152) = v60;
  v61 = *(_QWORD *)(v53 + 168);
  *(_BYTE *)(v52 + 176) = *(_BYTE *)(v53 + 176);
  *(_QWORD *)(v52 + 168) = v61;
  v62 = *(_QWORD *)(v53 + 184);
  *(_BYTE *)(v52 + 192) = *(_BYTE *)(v53 + 192);
  *(_QWORD *)(v52 + 184) = v62;
  v63 = *(_QWORD *)(v53 + 200);
  *(_BYTE *)(v52 + 208) = *(_BYTE *)(v53 + 208);
  *(_QWORD *)(v52 + 200) = v63;
  v64 = *(_QWORD *)(v53 + 216);
  *(_BYTE *)(v52 + 224) = *(_BYTE *)(v53 + 224);
  *(_QWORD *)(v52 + 216) = v64;
  v65 = *(_QWORD *)(v53 + 232);
  *(_BYTE *)(v52 + 240) = *(_BYTE *)(v53 + 240);
  *(_QWORD *)(v52 + 232) = v65;
  v66 = *(_QWORD *)(v53 + 248);
  *(_BYTE *)(v52 + 256) = *(_BYTE *)(v53 + 256);
  *(_QWORD *)(v52 + 248) = v66;
  v67 = *(_QWORD *)(v53 + 264);
  *(_BYTE *)(v52 + 272) = *(_BYTE *)(v53 + 272);
  *(_QWORD *)(v52 + 264) = v67;
  v68 = v85[14];
  v69 = v85[15];
  v70 = a1 + v68;
  v71 = a2 + v68;
  *(_BYTE *)v70 = *(_BYTE *)v71;
  v72 = *(_QWORD *)(v71 + 16);
  *(_QWORD *)(v70 + 8) = *(_QWORD *)(v71 + 8);
  *(_QWORD *)(v70 + 16) = v72;
  *(_BYTE *)(v70 + 24) = *(_BYTE *)(v71 + 24);
  *(_BYTE *)(v70 + 25) = *(_BYTE *)(v71 + 25);
  v73 = *(_QWORD *)(v71 + 40);
  *(_QWORD *)(v70 + 32) = *(_QWORD *)(v71 + 32);
  *(_QWORD *)(v70 + 40) = v73;
  *(_BYTE *)(v70 + 48) = *(_BYTE *)(v71 + 48);
  v74 = a1 + v69;
  v75 = a2 + v69;
  v76 = *(_QWORD *)(a2 + v69 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v76)
  {
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *(_QWORD *)(v74 + 8) = v76;
    *(_WORD *)(v74 + 16) = *(_WORD *)(v75 + 16);
    *(_QWORD *)(v74 + 24) = *(_QWORD *)(v75 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v77 = *(_OWORD *)(v75 + 16);
    *(_OWORD *)v74 = *(_OWORD *)v75;
    *(_OWORD *)(v74 + 16) = v77;
  }
  v78 = v85[16];
  v79 = v85[17];
  v80 = (_QWORD *)(a1 + v78);
  v81 = (_QWORD *)(a2 + v78);
  v82 = v81[1];
  *v80 = *v81;
  v80[1] = v82;
  *(_DWORD *)(a1 + v79) = *(_DWORD *)(a2 + v79);
  v83 = v85[19];
  *(_BYTE *)(a1 + v85[18]) = *(_BYTE *)(a2 + v85[18]);
  *(_DWORD *)(a1 + v83) = *(_DWORD *)(a2 + v83);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(a2 + v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  v14 = *(_QWORD *)(v13 + 48);
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_QWORD *)(v12 + 48) = v14;
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 72) = v15;
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a1 + v19 + 16);
  v23 = *(_QWORD *)(a2 + v19 + 16);
  if (v22)
  {
    if (v23)
    {
      *(_BYTE *)v20 = *(_BYTE *)v21;
      *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
      *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
      *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
      *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
      *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
      *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
      *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
      *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v21 + 104);
      *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
      *(_QWORD *)(v20 + 104) = v24;
      *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v20);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v26 = *(_OWORD *)(v21 + 64);
      v28 = *(_OWORD *)(v21 + 16);
      v27 = *(_OWORD *)(v21 + 32);
      *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
      *(_OWORD *)(v20 + 64) = v26;
      *(_OWORD *)(v20 + 16) = v28;
      *(_OWORD *)(v20 + 32) = v27;
      v30 = *(_OWORD *)(v21 + 96);
      v29 = *(_OWORD *)(v21 + 112);
      v31 = *(_OWORD *)(v21 + 80);
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      *(_OWORD *)(v20 + 96) = v30;
      *(_OWORD *)(v20 + 112) = v29;
      *(_OWORD *)(v20 + 80) = v31;
    }
  }
  else if (v23)
  {
    *(_BYTE *)v20 = *(_BYTE *)v21;
    *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
    *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
    *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
    *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
    *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
    *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
    *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
    *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
    *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
    *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
    *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
    *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
    v25 = *(_QWORD *)(v21 + 104);
    *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
    *(_QWORD *)(v20 + 104) = v25;
    *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v32 = *(_OWORD *)(v21 + 16);
    v33 = *(_OWORD *)(v21 + 32);
    v34 = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 64) = v34;
    *(_OWORD *)(v20 + 16) = v32;
    *(_OWORD *)(v20 + 32) = v33;
    v35 = *(_OWORD *)(v21 + 80);
    v36 = *(_OWORD *)(v21 + 96);
    v37 = *(_OWORD *)(v21 + 112);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    *(_OWORD *)(v20 + 96) = v36;
    *(_OWORD *)(v20 + 112) = v37;
    *(_OWORD *)(v20 + 80) = v35;
  }
  v38 = a3[9];
  v39 = a1 + v38;
  v40 = (__int128 *)(a2 + v38);
  v41 = *(_QWORD *)(a1 + v38 + 16);
  v42 = *(_QWORD *)(a2 + v38 + 16);
  if (v41 == 1)
  {
    if (v42 == 1)
    {
      v43 = *v40;
      *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
      *(_OWORD *)v39 = v43;
    }
    else
    {
      *(_BYTE *)v39 = *(_BYTE *)v40;
      *(_QWORD *)(v39 + 8) = *((_QWORD *)v40 + 1);
      *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v42 == 1)
  {
    sub_1D57D9100(v39);
    v44 = *((_QWORD *)v40 + 2);
    *(_OWORD *)v39 = *v40;
    *(_QWORD *)(v39 + 16) = v44;
  }
  else
  {
    *(_BYTE *)v39 = *(_BYTE *)v40;
    *(_QWORD *)(v39 + 8) = *((_QWORD *)v40 + 1);
    *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v45 = a3[10];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_DWORD *)v46 = *(_DWORD *)v47;
  *(_BYTE *)(v46 + 4) = *(_BYTE *)(v47 + 4);
  v48 = a3[11];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_QWORD *)v49 = *(_QWORD *)(a2 + v48);
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(a2 + v48 + 8);
  *(_BYTE *)(v49 + 16) = *(_BYTE *)(a2 + v48 + 16);
  *(_DWORD *)(v49 + 20) = *(_DWORD *)(a2 + v48 + 20);
  *(_QWORD *)(v49 + 24) = *(_QWORD *)(a2 + v48 + 24);
  *(_QWORD *)(v49 + 32) = *(_QWORD *)(a2 + v48 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 40) = *(_BYTE *)(v50 + 40);
  *(_BYTE *)(v49 + 41) = *(_BYTE *)(v50 + 41);
  v51 = a3[12];
  v52 = a1 + v51;
  v53 = a2 + v51;
  *(_QWORD *)v52 = *(_QWORD *)(a2 + v51);
  *(_QWORD *)(v52 + 8) = *(_QWORD *)(a2 + v51 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v52 + 16) = *(_BYTE *)(v53 + 16);
  *(_BYTE *)(v52 + 17) = *(_BYTE *)(v53 + 17);
  v54 = a3[13];
  v55 = a1 + v54;
  v56 = a2 + v54;
  *(_QWORD *)v55 = *(_QWORD *)(a2 + v54);
  *(_QWORD *)(v55 + 8) = *(_QWORD *)(a2 + v54 + 8);
  *(_QWORD *)(v55 + 16) = *(_QWORD *)(a2 + v54 + 16);
  *(_QWORD *)(v55 + 24) = *(_QWORD *)(a2 + v54 + 24);
  *(_QWORD *)(v55 + 32) = *(_QWORD *)(a2 + v54 + 32);
  *(_QWORD *)(v55 + 40) = *(_QWORD *)(a2 + v54 + 40);
  *(_QWORD *)(v55 + 48) = *(_QWORD *)(a2 + v54 + 48);
  *(_QWORD *)(v55 + 56) = *(_QWORD *)(a2 + v54 + 56);
  *(_QWORD *)(v55 + 64) = *(_QWORD *)(a2 + v54 + 64);
  *(_QWORD *)(v55 + 72) = *(_QWORD *)(a2 + v54 + 72);
  *(_QWORD *)(v55 + 80) = *(_QWORD *)(a2 + v54 + 80);
  *(_QWORD *)(v55 + 88) = *(_QWORD *)(a2 + v54 + 88);
  *(_QWORD *)(v55 + 96) = *(_QWORD *)(a2 + v54 + 96);
  *(_QWORD *)(v55 + 104) = *(_QWORD *)(a2 + v54 + 104);
  *(_QWORD *)(v55 + 112) = *(_QWORD *)(a2 + v54 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57 = *(_QWORD *)(v56 + 120);
  *(_BYTE *)(v55 + 128) = *(_BYTE *)(v56 + 128);
  *(_QWORD *)(v55 + 120) = v57;
  v58 = *(_QWORD *)(v56 + 136);
  *(_BYTE *)(v55 + 144) = *(_BYTE *)(v56 + 144);
  *(_QWORD *)(v55 + 136) = v58;
  v59 = *(_QWORD *)(v56 + 152);
  *(_BYTE *)(v55 + 160) = *(_BYTE *)(v56 + 160);
  *(_QWORD *)(v55 + 152) = v59;
  v60 = *(_QWORD *)(v56 + 168);
  *(_BYTE *)(v55 + 176) = *(_BYTE *)(v56 + 176);
  *(_QWORD *)(v55 + 168) = v60;
  v61 = *(_QWORD *)(v56 + 184);
  *(_BYTE *)(v55 + 192) = *(_BYTE *)(v56 + 192);
  *(_QWORD *)(v55 + 184) = v61;
  v62 = *(_QWORD *)(v56 + 200);
  *(_BYTE *)(v55 + 208) = *(_BYTE *)(v56 + 208);
  *(_QWORD *)(v55 + 200) = v62;
  v63 = *(_QWORD *)(v56 + 216);
  *(_BYTE *)(v55 + 224) = *(_BYTE *)(v56 + 224);
  *(_QWORD *)(v55 + 216) = v63;
  v64 = *(_QWORD *)(v56 + 232);
  *(_BYTE *)(v55 + 240) = *(_BYTE *)(v56 + 240);
  *(_QWORD *)(v55 + 232) = v64;
  v65 = *(_QWORD *)(v56 + 248);
  *(_BYTE *)(v55 + 256) = *(_BYTE *)(v56 + 256);
  *(_QWORD *)(v55 + 248) = v65;
  v66 = *(_QWORD *)(v56 + 264);
  *(_BYTE *)(v55 + 272) = *(_BYTE *)(v56 + 272);
  *(_QWORD *)(v55 + 264) = v66;
  v67 = a3[14];
  v68 = a1 + v67;
  v69 = a2 + v67;
  *(_BYTE *)v68 = *(_BYTE *)(a2 + v67);
  *(_QWORD *)(v68 + 8) = *(_QWORD *)(a2 + v67 + 8);
  *(_QWORD *)(v68 + 16) = *(_QWORD *)(a2 + v67 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v68 + 24) = *(_BYTE *)(v69 + 24);
  *(_BYTE *)(v68 + 25) = *(_BYTE *)(v69 + 25);
  *(_QWORD *)(v68 + 32) = *(_QWORD *)(v69 + 32);
  *(_QWORD *)(v68 + 40) = *(_QWORD *)(v69 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v68 + 48) = *(_BYTE *)(v69 + 48);
  v70 = a3[15];
  v71 = a1 + v70;
  v72 = a2 + v70;
  v73 = *(_QWORD *)(a1 + v70 + 8);
  v74 = *(_QWORD *)(a2 + v70 + 8);
  if (v73)
  {
    if (v74)
    {
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v71 + 16) = *(_BYTE *)(v72 + 16);
      *(_BYTE *)(v71 + 17) = *(_BYTE *)(v72 + 17);
      *(_QWORD *)(v71 + 24) = *(_QWORD *)(v72 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v71);
      v75 = *(_OWORD *)(v72 + 16);
      *(_OWORD *)v71 = *(_OWORD *)v72;
      *(_OWORD *)(v71 + 16) = v75;
    }
  }
  else if (v74)
  {
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
    *(_BYTE *)(v71 + 16) = *(_BYTE *)(v72 + 16);
    *(_BYTE *)(v71 + 17) = *(_BYTE *)(v72 + 17);
    *(_QWORD *)(v71 + 24) = *(_QWORD *)(v72 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v76 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v76;
  }
  v77 = a3[16];
  v78 = (_QWORD *)(a1 + v77);
  v79 = (_QWORD *)(a2 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v80 = a3[19];
  v81 = (_BYTE *)(a1 + v80);
  v82 = (_BYTE *)(a2 + v80);
  *v81 = *v82;
  v81[1] = v82[1];
  v81[2] = v82[2];
  v81[3] = v82[3];
  return a1;
}

uint64_t initializeWithTake for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  __int128 v47;
  __int128 v48;
  _OWORD *v49;
  _OWORD *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  *(_QWORD *)(v24 + 128) = *(_QWORD *)(v25 + 128);
  v27 = *(_OWORD *)(v25 + 112);
  *(_OWORD *)(v24 + 96) = *(_OWORD *)(v25 + 96);
  *(_OWORD *)(v24 + 112) = v27;
  v28 = *(_OWORD *)(v25 + 80);
  *(_OWORD *)(v24 + 64) = *(_OWORD *)(v25 + 64);
  *(_OWORD *)(v24 + 80) = v28;
  v29 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v29;
  v30 = a1 + v23;
  v31 = a2 + v23;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  v32 = a3[10];
  v33 = a3[11];
  v34 = a1 + v32;
  v35 = a2 + v32;
  *(_DWORD *)v34 = *(_DWORD *)v35;
  *(_BYTE *)(v34 + 4) = *(_BYTE *)(v35 + 4);
  v36 = (_OWORD *)(a1 + v33);
  v37 = (_OWORD *)(a2 + v33);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  *(_OWORD *)((char *)v36 + 26) = *(_OWORD *)((char *)v37 + 26);
  v39 = a3[12];
  v40 = a3[13];
  v41 = a1 + v39;
  v42 = a2 + v39;
  *(_WORD *)(v41 + 16) = *(_WORD *)(v42 + 16);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  memcpy((void *)(a1 + v40), (const void *)(a2 + v40), 0x111uLL);
  v43 = a3[14];
  v44 = a3[15];
  v45 = a1 + v43;
  v46 = (__int128 *)(a2 + v43);
  *(_BYTE *)(v45 + 48) = *((_BYTE *)v46 + 48);
  v47 = v46[2];
  v48 = *v46;
  *(_OWORD *)(v45 + 16) = v46[1];
  *(_OWORD *)(v45 + 32) = v47;
  *(_OWORD *)v45 = v48;
  v49 = (_OWORD *)(a1 + v44);
  v50 = (_OWORD *)(a2 + v44);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v52 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_DWORD *)(a1 + v52) = *(_DWORD *)(a2 + v52);
  v53 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_DWORD *)(a1 + v53) = *(_DWORD *)(a2 + v53);
  return a1;
}

uint64_t assignWithTake for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  v14 = *(_QWORD *)(a2 + v11 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  if (*(_QWORD *)(a1 + v21 + 16))
  {
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      *(_WORD *)v22 = *(_WORD *)v23;
      *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
      *(_QWORD *)(v22 + 16) = v24;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
      *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 48) = *(_QWORD *)(v23 + 48);
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)(v23 + 64);
      *(_QWORD *)(v22 + 56) = *(_QWORD *)(v23 + 56);
      *(_QWORD *)(v22 + 64) = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 72) = *(_QWORD *)(v23 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v22 + 80) = *(_BYTE *)(v23 + 80);
      v26 = *(_QWORD *)(v23 + 96);
      *(_QWORD *)(v22 + 88) = *(_QWORD *)(v23 + 88);
      *(_QWORD *)(v22 + 96) = v26;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 104) = *(_QWORD *)(v23 + 104);
      *(_BYTE *)(v22 + 112) = *(_BYTE *)(v23 + 112);
      *(_QWORD *)(v22 + 120) = *(_QWORD *)(v23 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E17B8(v22);
  }
  v27 = *(_OWORD *)(v23 + 112);
  *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 112) = v27;
  *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
  v28 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v28;
  v29 = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 80) = v29;
  v30 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v30;
LABEL_6:
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  if (*(_QWORD *)(a1 + v31 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
    goto LABEL_11;
  }
  v34 = *(_QWORD *)(v33 + 16);
  if (v34 == 1)
  {
    sub_1D57D9100(v32);
    goto LABEL_9;
  }
  *(_BYTE *)v32 = *(_BYTE *)v33;
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  swift_bridgeObjectRelease();
LABEL_11:
  v35 = a3[10];
  v36 = a3[11];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_DWORD *)v37 = *(_DWORD *)v38;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  v39 = a1 + v36;
  v40 = a2 + v36;
  *(_OWORD *)v39 = *(_OWORD *)(a2 + v36);
  *(_BYTE *)(v39 + 16) = *(_BYTE *)(a2 + v36 + 16);
  *(_DWORD *)(v39 + 20) = *(_DWORD *)(a2 + v36 + 20);
  v41 = *(_QWORD *)(a2 + v36 + 24);
  v42 = *(_QWORD *)(a2 + v36 + 32);
  *(_QWORD *)(v39 + 24) = v41;
  *(_QWORD *)(v39 + 32) = v42;
  swift_bridgeObjectRelease();
  *(_WORD *)(v39 + 40) = *(_WORD *)(v40 + 40);
  v43 = a3[12];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)(a2 + v43 + 8);
  *(_QWORD *)v44 = *(_QWORD *)(a2 + v43);
  *(_QWORD *)(v44 + 8) = v46;
  swift_bridgeObjectRelease();
  *(_WORD *)(v44 + 16) = *(_WORD *)(v45 + 16);
  v47 = a3[13];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = *(_OWORD *)(a2 + v47 + 16);
  *(_OWORD *)v48 = *(_OWORD *)(a2 + v47);
  *(_OWORD *)(v48 + 16) = v50;
  v51 = *(_OWORD *)(a2 + v47 + 48);
  *(_OWORD *)(v48 + 32) = *(_OWORD *)(a2 + v47 + 32);
  *(_OWORD *)(v48 + 48) = v51;
  v52 = *(_OWORD *)(a2 + v47 + 80);
  *(_OWORD *)(v48 + 64) = *(_OWORD *)(a2 + v47 + 64);
  *(_OWORD *)(v48 + 80) = v52;
  *(_OWORD *)(v48 + 96) = *(_OWORD *)(a2 + v47 + 96);
  *(_QWORD *)(v48 + 112) = *(_QWORD *)(a2 + v47 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v48 + 120) = *(_QWORD *)(v49 + 120);
  *(_BYTE *)(v48 + 128) = *(_BYTE *)(v49 + 128);
  *(_QWORD *)(v48 + 136) = *(_QWORD *)(v49 + 136);
  *(_BYTE *)(v48 + 144) = *(_BYTE *)(v49 + 144);
  *(_QWORD *)(v48 + 152) = *(_QWORD *)(v49 + 152);
  *(_BYTE *)(v48 + 160) = *(_BYTE *)(v49 + 160);
  *(_BYTE *)(v48 + 176) = *(_BYTE *)(v49 + 176);
  *(_QWORD *)(v48 + 168) = *(_QWORD *)(v49 + 168);
  v53 = *(_QWORD *)(v49 + 184);
  *(_BYTE *)(v48 + 192) = *(_BYTE *)(v49 + 192);
  *(_QWORD *)(v48 + 184) = v53;
  *(_QWORD *)(v48 + 200) = *(_QWORD *)(v49 + 200);
  *(_BYTE *)(v48 + 208) = *(_BYTE *)(v49 + 208);
  *(_QWORD *)(v48 + 216) = *(_QWORD *)(v49 + 216);
  *(_BYTE *)(v48 + 224) = *(_BYTE *)(v49 + 224);
  *(_QWORD *)(v48 + 232) = *(_QWORD *)(v49 + 232);
  *(_BYTE *)(v48 + 240) = *(_BYTE *)(v49 + 240);
  *(_BYTE *)(v48 + 256) = *(_BYTE *)(v49 + 256);
  *(_QWORD *)(v48 + 248) = *(_QWORD *)(v49 + 248);
  *(_BYTE *)(v48 + 272) = *(_BYTE *)(v49 + 272);
  *(_QWORD *)(v48 + 264) = *(_QWORD *)(v49 + 264);
  v54 = a3[14];
  v55 = a1 + v54;
  v56 = a2 + v54;
  *(_BYTE *)v55 = *(_BYTE *)(a2 + v54);
  v57 = *(_QWORD *)(a2 + v54 + 16);
  *(_QWORD *)(v55 + 8) = *(_QWORD *)(a2 + v54 + 8);
  *(_QWORD *)(v55 + 16) = v57;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v55 + 24) = *(_BYTE *)(v56 + 24);
  *(_BYTE *)(v55 + 25) = *(_BYTE *)(v56 + 25);
  v58 = *(_QWORD *)(v56 + 40);
  *(_QWORD *)(v55 + 32) = *(_QWORD *)(v56 + 32);
  *(_QWORD *)(v55 + 40) = v58;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v55 + 48) = *(_BYTE *)(v56 + 48);
  v59 = a3[15];
  v60 = a1 + v59;
  v61 = a2 + v59;
  if (!*(_QWORD *)(a1 + v59 + 8))
  {
LABEL_15:
    v63 = *(_OWORD *)(v61 + 16);
    *(_OWORD *)v60 = *(_OWORD *)v61;
    *(_OWORD *)(v60 + 16) = v63;
    goto LABEL_16;
  }
  v62 = *(_QWORD *)(v61 + 8);
  if (!v62)
  {
    sub_1D57EE47C(v60);
    goto LABEL_15;
  }
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *(_QWORD *)(v60 + 8) = v62;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v60 + 16) = *(_BYTE *)(v61 + 16);
  *(_BYTE *)(v60 + 17) = *(_BYTE *)(v61 + 17);
  *(_QWORD *)(v60 + 24) = *(_QWORD *)(v61 + 24);
  swift_bridgeObjectRelease();
LABEL_16:
  v64 = a3[16];
  v65 = (_QWORD *)(a1 + v64);
  v66 = (uint64_t *)(a2 + v64);
  v68 = *v66;
  v67 = v66[1];
  *v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
  v69 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_BYTE *)(a1 + v69) = *(_BYTE *)(a2 + v69);
  v70 = a3[19];
  v71 = a1 + v70;
  v72 = a2 + v70;
  *(_BYTE *)v71 = *(_BYTE *)v72;
  *(_BYTE *)(v71 + 1) = *(_BYTE *)(v72 + 1);
  *(_WORD *)(v71 + 2) = *(_WORD *)(v72 + 2);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngageEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A1B078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngageEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A1B130(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioEngageEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1D5A1B224 + 4 * byte_1D5ADDBF5[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1D5A1B258 + 4 * byte_1D5ADDBF0[v4]))();
}

uint64_t sub_1D5A1B258(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A1B260(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A1B268);
  return result;
}

uint64_t sub_1D5A1B274(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A1B27CLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1D5A1B280(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A1B288(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngageEvent.Model.CodingKeys()
{
  return &type metadata for AudioEngageEvent.Model.CodingKeys;
}

unint64_t sub_1D5A1B2A8()
{
  unint64_t result;

  result = qword_1EFF50BB8;
  if (!qword_1EFF50BB8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADDF7C, &type metadata for AudioEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50BB8);
  }
  return result;
}

unint64_t sub_1D5A1B2F0()
{
  unint64_t result;

  result = qword_1EFF50BC0;
  if (!qword_1EFF50BC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADDEEC, &type metadata for AudioEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50BC0);
  }
  return result;
}

unint64_t sub_1D5A1B338()
{
  unint64_t result;

  result = qword_1EFF50BC8;
  if (!qword_1EFF50BC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADDF14, &type metadata for AudioEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50BC8);
  }
  return result;
}

uint64_t sub_1D5A1B37C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7461446B63617274 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF0000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEC9D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5AF0020 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t PrivateUserType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D5AAEC4C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t PrivateUserType.rawValue.getter()
{
  return 0x7374726F7073;
}

unint64_t sub_1D5A1BA98()
{
  unint64_t result;

  result = qword_1EFF50BD0;
  if (!qword_1EFF50BD0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PrivateUserType, &type metadata for PrivateUserType);
    atomic_store(result, (unint64_t *)&qword_1EFF50BD0);
  }
  return result;
}

uint64_t sub_1D5A1BADC()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A1BB28()
{
  return sub_1D5AAE874();
}

uint64_t sub_1D5A1BB3C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A1BB84@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D5AAEC4C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1D5A1BBD4()
{
  sub_1D579F768();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for PrivateUserType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A1BC70 + 4 * byte_1D5ADDFF4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A1BC90 + 4 * byte_1D5ADDFF9[v4]))();
}

_BYTE *sub_1D5A1BC70(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A1BC90(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A1BC98(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A1BCA0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A1BCA8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A1BCB0(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t ReferralCampaignData.referralCampaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ReferralCampaignData.referralCampaignData.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v5;
  *(_OWORD *)v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  return result;
}

uint64_t (*ReferralCampaignData.referralCampaignData.modify())()
{
  return nullsub_1;
}

void __swiftcall ReferralCampaignData.init(referralCampaignData:)(NewsAnalytics::ReferralCampaignData *__return_ptr retstr, NewsAnalytics::CampaignData *referralCampaignData)
{
  void *object;
  Swift::String_optional creativeId;

  object = referralCampaignData->campaignId._object;
  retstr->referralCampaignData.campaignId._countAndFlagsBits = referralCampaignData->campaignId._countAndFlagsBits;
  retstr->referralCampaignData.campaignId._object = object;
  creativeId = referralCampaignData->creativeId;
  retstr->referralCampaignData.campaignType = referralCampaignData->campaignType;
  retstr->referralCampaignData.creativeId = creativeId;
}

unint64_t sub_1D5A1BD9C()
{
  return 0xD000000000000014;
}

uint64_t sub_1D5A1BDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A1C370(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5A1BDE0()
{
  sub_1D5A1BF50();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A1BE08()
{
  sub_1D5A1BF50();
  return sub_1D5AAEEE0();
}

uint64_t ReferralCampaignData.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D5A1C0D8(0, &qword_1EFF50BD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  v8 = *v1;
  v12 = v1[1];
  v13 = v8;
  v10 = *((_QWORD *)v1 + 4);
  v9 = *((_QWORD *)v1 + 5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A1BF50();
  sub_1D5AAEEC8();
  v14 = v13;
  v15 = v12;
  v16 = v10;
  v17 = v9;
  sub_1D57CB460();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A1BF50()
{
  unint64_t result;

  result = qword_1EFF50BE0;
  if (!qword_1EFF50BE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE288, &type metadata for ReferralCampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50BE0);
  }
  return result;
}

uint64_t ReferralCampaignData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _QWORD v14[2];
  __int128 v15;
  __int128 v16;

  sub_1D5A1C0D8(0, &qword_1EFF50BE8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A1BF50();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57CB41C();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v10 = v14[1];
    v11 = v15;
    v12 = v16;
    *(_QWORD *)a2 = v14[0];
    *(_QWORD *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 32) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A1C0D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A1BF50();
    v7 = a3(a1, &type metadata for ReferralCampaignData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A1C138()
{
  unint64_t result;

  result = qword_1EFF50BF0;
  if (!qword_1EFF50BF0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ReferralCampaignData, &type metadata for ReferralCampaignData);
    atomic_store(result, (unint64_t *)&qword_1EFF50BF0);
  }
  return result;
}

unint64_t sub_1D5A1C180()
{
  unint64_t result;

  result = qword_1EFF50BF8;
  if (!qword_1EFF50BF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ReferralCampaignData, &type metadata for ReferralCampaignData);
    atomic_store(result, (unint64_t *)&qword_1EFF50BF8);
  }
  return result;
}

uint64_t sub_1D5A1C1C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReferralCampaignData.init(from:)(a1, a2);
}

uint64_t sub_1D5A1C1D8(_QWORD *a1)
{
  return ReferralCampaignData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ReferralCampaignData()
{
  return &type metadata for ReferralCampaignData;
}

uint64_t storeEnumTagSinglePayload for ReferralCampaignData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A1C23C + 4 * asc_1D5ADE110[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A1C25C + 4 * byte_1D5ADE115[v4]))();
}

_BYTE *sub_1D5A1C23C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A1C25C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A1C264(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A1C26C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A1C274(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A1C27C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReferralCampaignData.CodingKeys()
{
  return &type metadata for ReferralCampaignData.CodingKeys;
}

unint64_t sub_1D5A1C29C()
{
  unint64_t result;

  result = qword_1EFF50C00;
  if (!qword_1EFF50C00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE260, &type metadata for ReferralCampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50C00);
  }
  return result;
}

unint64_t sub_1D5A1C2E4()
{
  unint64_t result;

  result = qword_1EFF50C08;
  if (!qword_1EFF50C08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE1D0, &type metadata for ReferralCampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50C08);
  }
  return result;
}

unint64_t sub_1D5A1C32C()
{
  unint64_t result;

  result = qword_1EFF50C10;
  if (!qword_1EFF50C10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE1F8, &type metadata for ReferralCampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50C10);
  }
  return result;
}

uint64_t sub_1D5A1C370(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AEE620)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

NewsAnalytics::WebAccessTagListData __swiftcall WebAccessTagListData.init(tagIDs:)(NewsAnalytics::WebAccessTagListData tagIDs)
{
  NewsAnalytics::WebAccessTagListData *v1;

  v1->tagIDs._rawValue = tagIDs.tagIDs._rawValue;
  return tagIDs;
}

uint64_t WebAccessTagListData.tagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WebAccessTagListData.tagIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*WebAccessTagListData.tagIDs.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A1C43C()
{
  sub_1D57AD754();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A1C464()
{
  sub_1D57AD754();
  return sub_1D5AAEEE0();
}

ValueMetadata *type metadata accessor for WebAccessTagListData()
{
  return &type metadata for WebAccessTagListData;
}

ValueMetadata *type metadata accessor for WebAccessTagListData.CodingKeys()
{
  return &type metadata for WebAccessTagListData.CodingKeys;
}

unint64_t sub_1D5A1C4B8()
{
  unint64_t result;

  result = qword_1EFF50C18;
  if (!qword_1EFF50C18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE430, &type metadata for WebAccessTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50C18);
  }
  return result;
}

NewsAnalytics::WidgetTypeData __swiftcall WidgetTypeData.init(type:)(NewsAnalytics::WidgetTypeData type)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)type.type;
  return type;
}

void WidgetTypeData.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *WidgetTypeData.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*WidgetTypeData.type.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A1C530()
{
  sub_1D5A1C684();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A1C558()
{
  sub_1D5A1C684();
  return sub_1D5AAEEE0();
}

uint64_t WidgetTypeData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5A1C844(0, &qword_1ED9D15F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A1C684();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5A1C6C8();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A1C684()
{
  unint64_t result;

  result = qword_1ED9D1480;
  if (!qword_1ED9D1480)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE624, &type metadata for WidgetTypeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1480);
  }
  return result;
}

unint64_t sub_1D5A1C6C8()
{
  unint64_t result;

  result = qword_1ED9D1450;
  if (!qword_1ED9D1450)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetType, &type metadata for WidgetType);
    atomic_store(result, (unint64_t *)&qword_1ED9D1450);
  }
  return result;
}

uint64_t WidgetTypeData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5A1C844(0, &qword_1ED9D15E0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A1C684();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5A1C8A0();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A1C844(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A1C684();
    v7 = a3(a1, &type metadata for WidgetTypeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A1C8A0()
{
  unint64_t result;

  result = qword_1ED9D1460;
  if (!qword_1ED9D1460)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetType, &type metadata for WidgetType);
    atomic_store(result, (unint64_t *)&qword_1ED9D1460);
  }
  return result;
}

uint64_t sub_1D5A1C8EC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return WidgetTypeData.init(from:)(a1, a2);
}

uint64_t sub_1D5A1C900(_QWORD *a1)
{
  return WidgetTypeData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for WidgetTypeData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5A1C960 + 4 * byte_1D5ADE4AD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5A1C994 + 4 * byte_1D5ADE4A8[v4]))();
}

uint64_t sub_1D5A1C994(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A1C99C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A1C9A4);
  return result;
}

uint64_t sub_1D5A1C9B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A1C9B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5A1C9BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A1C9C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetTypeData()
{
  return &type metadata for WidgetTypeData;
}

uint64_t storeEnumTagSinglePayload for WidgetTypeData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A1CA20 + 4 * byte_1D5ADE4B2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A1CA40 + 4 * byte_1D5ADE4B7[v4]))();
}

_BYTE *sub_1D5A1CA20(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A1CA40(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A1CA48(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A1CA50(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A1CA58(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A1CA60(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WidgetTypeData.CodingKeys()
{
  return &type metadata for WidgetTypeData.CodingKeys;
}

unint64_t sub_1D5A1CA80()
{
  unint64_t result;

  result = qword_1EFF50C20;
  if (!qword_1EFF50C20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE5FC, &type metadata for WidgetTypeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50C20);
  }
  return result;
}

unint64_t sub_1D5A1CAC8()
{
  unint64_t result;

  result = qword_1ED9D1490;
  if (!qword_1ED9D1490)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE56C, &type metadata for WidgetTypeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1490);
  }
  return result;
}

unint64_t sub_1D5A1CB10()
{
  unint64_t result;

  result = qword_1ED9D1488;
  if (!qword_1ED9D1488)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADE594, &type metadata for WidgetTypeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1488);
  }
  return result;
}

NewsAnalytics::PaywallConfigOfferType_optional __swiftcall PaywallConfigOfferType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::PaywallConfigOfferType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PaywallConfigOfferType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A1CBDC + 4 * byte_1D5ADE680[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A1CBDC()
{
  return 0x73756C507377656ELL;
}

uint64_t sub_1D5A1CBF4()
{
  return 0x726566664F62;
}

uint64_t sub_1D5A1CC08()
{
  return 0x656C646E754273;
}

uint64_t sub_1D5A1CC1C()
{
  return 0x61746C654470;
}

void sub_1D5A1CC30(char *a1)
{
  sub_1D5A37F10(*a1);
}

unint64_t sub_1D5A1CC40()
{
  unint64_t result;

  result = qword_1EFF50C28;
  if (!qword_1EFF50C28)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallConfigOfferType, &type metadata for PaywallConfigOfferType);
    atomic_store(result, (unint64_t *)&qword_1EFF50C28);
  }
  return result;
}

void sub_1D5A1CC84()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A1CCD0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A1CD4C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A1CD88()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A1CDF0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A1CE38()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::PaywallConfigOfferType_optional sub_1D5A1CEB4(Swift::String *a1)
{
  return PaywallConfigOfferType.init(rawValue:)(*a1);
}

uint64_t sub_1D5A1CEC0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5A1CEF0 + 4 * byte_1D5ADE694[*v0]))();
}

void sub_1D5A1CEF0(_QWORD *a1@<X8>)
{
  *a1 = 0x73756C507377656ELL;
  a1[1] = 0xE800000000000000;
}

void sub_1D5A1CF0C(_QWORD *a1@<X8>)
{
  *a1 = 0x726566664F62;
  a1[1] = 0xE600000000000000;
}

void sub_1D5A1CF24(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656C646E754273;
  a1[1] = v1;
}

void sub_1D5A1CF3C(_QWORD *a1@<X8>)
{
  *a1 = 0x61746C654470;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1D5A1CF54()
{
  sub_1D5A1D0C8();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A1CFB0()
{
  sub_1D5A1D0C8();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for PaywallConfigOfferType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A1D048 + 4 * byte_1D5ADE69E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A1D07C + 4 * byte_1D5ADE699[v4]))();
}

uint64_t sub_1D5A1D07C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A1D084(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A1D08CLL);
  return result;
}

uint64_t sub_1D5A1D098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A1D0A0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A1D0A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A1D0AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallConfigOfferType()
{
  return &type metadata for PaywallConfigOfferType;
}

unint64_t sub_1D5A1D0C8()
{
  unint64_t result;

  result = qword_1EFF50C30;
  if (!qword_1EFF50C30)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallConfigOfferType, &type metadata for PaywallConfigOfferType);
    atomic_store(result, (unint64_t *)&qword_1EFF50C30);
  }
  return result;
}

_QWORD *ExternalAnalyticsEventProcessor.__allocating_init(appConfigurationManager:uploader:urlProvider:featureAvailability:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[19] = 0;
  v8[20] = 0;
  v8[18] = 0;
  v8[2] = a1;
  sub_1D57B6254(a2, (uint64_t)(v8 + 3));
  sub_1D57B6254(a3, (uint64_t)(v8 + 8));
  sub_1D57B6254(a4, (uint64_t)(v8 + 13));
  sub_1D5A1D240();
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v8;
}

_QWORD *ExternalAnalyticsEventProcessor.init(appConfigurationManager:uploader:urlProvider:featureAvailability:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[18] = 0;
  v4[19] = 0;
  v4[20] = 0;
  v4[2] = a1;
  sub_1D57B6254(a2, (uint64_t)(v4 + 3));
  sub_1D57B6254(a3, (uint64_t)(v4 + 8));
  sub_1D57B6254(a4, (uint64_t)(v4 + 13));
  swift_unknownObjectRetain();
  sub_1D5A1D240();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v4;
}

void sub_1D5A1D240()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[6];

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedManagerForAllUsers);
  if (v2)
  {
    v3 = v2;
    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CE120);
    v4 = (void *)sub_1D5AAEA48();
    v6[4] = sub_1D5A1EC2C;
    v6[5] = v1;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 1107296256;
    v6[2] = sub_1D5A1D87C;
    v6[3] = &block_descriptor_4;
    v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
    objc_msgSend(v3, sel_loadConfigurationsWithCompletionQueue_handler_, v4, v5);
    _Block_release(v5);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D5A1D344(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a2)
  {
    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
    v5 = a2;
    v6 = (void *)sub_1D5AAEAC0();
    sub_1D5AAEA0C();
    sub_1D57B34CC();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1D5AB0170;
    sub_1D57E6B18(0, (unint64_t *)&qword_1ED9CD090);
    sub_1D5AAEBEC();
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 64) = sub_1D57B356C();
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 40) = 0xE000000000000000;
    sub_1D5AAE328();

    swift_bridgeObjectRelease();
    *(_QWORD *)(a3 + 144) = MEMORY[0x1E0DEE9D8];
    return swift_bridgeObjectRelease();
  }
  if (!a1 || (v9 = sub_1D5A1D764(a1)) == 0)
  {
    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
    v24 = (void *)sub_1D5AAEAC0();
    sub_1D5AAEA24();
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1D5AAE328();

    *(_QWORD *)(a3 + 144) = v25;
    return swift_bridgeObjectRelease();
  }
  v10 = v9;
  v31 = a3;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D5AAEC04();
    v11 = result;
    if (result)
      goto LABEL_8;
LABEL_23:
    v13 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_24:
    swift_bridgeObjectRelease_n();
    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
    v26 = (void *)sub_1D5AAEAC0();
    sub_1D57B34CC();
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1D5AB0170;
    sub_1D57B4558();
    sub_1D57A8DE4((unint64_t *)&unk_1ED9CE100, (uint64_t (*)(uint64_t))sub_1D57B4558, MEMORY[0x1E0DEAF20]);
    v28 = sub_1D5AAE7CC();
    v30 = v29;
    *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v27 + 64) = sub_1D57B356C();
    *(_QWORD *)(v27 + 32) = v28;
    *(_QWORD *)(v27 + 40) = v30;
    sub_1D5AAEA24();
    sub_1D5AAE328();

    swift_bridgeObjectRelease();
    *(_QWORD *)(v31 + 144) = v13;
    return swift_bridgeObjectRelease();
  }
  v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v11)
    goto LABEL_23;
LABEL_8:
  if (v11 >= 1)
  {
    v12 = 0;
    v13 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x1D8278F6C](v12, v10);
      else
        v14 = *(id *)(v10 + 8 * v12 + 32);
      v15 = v14;
      v16 = objc_msgSend(v14, sel_name, v31);
      if (v16)
      {
        v17 = v16;
        v18 = sub_1D5AAE820();
        v20 = v19;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_1D5873168(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
        v22 = *((_QWORD *)v13 + 2);
        v21 = *((_QWORD *)v13 + 3);
        if (v22 >= v21 >> 1)
          v13 = sub_1D5873168((char *)(v21 > 1), v22 + 1, 1, v13);
        *((_QWORD *)v13 + 2) = v22 + 1;
        v23 = &v13[16 * v22];
        *((_QWORD *)v23 + 4) = v18;
        *((_QWORD *)v23 + 5) = v20;
      }
      else
      {

      }
      ++v12;
    }
    while (v11 != v12);
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D5A1D764(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_1D5AAEBC8();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_1D57E6B64(i, (uint64_t)v5);
    sub_1D57B663C(0, (unint64_t *)&unk_1ED9CE110);
    if (!swift_dynamicCast())
      break;
    sub_1D5AAEBB0();
    sub_1D5AAEBD4();
    sub_1D5AAEBE0();
    sub_1D5AAEBBC();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

uint64_t sub_1D5A1D87C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1D5AAE94C();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t ExternalAnalyticsEventProcessor.didStartSession(_:)()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 152) = sub_1D5AADEE4();
  *(_QWORD *)(v0 + 160) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t ExternalAnalyticsEventProcessor.process<A>(processEvent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  BOOL v16;
  id v17;
  void *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v7 = v3[16];
  v8 = v3[17];
  __swift_project_boxed_opaque_existential_1(v3 + 13, v7);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  if ((result & 1) != 0)
  {
    result = sub_1D5A1E4E0(a1);
    if ((result & 1) != 0)
    {
      v21 = v3[20];
      if (v21)
      {
        if (v3[18])
        {
          v20 = v3[19];
          v10 = (void *)v3[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v11 = objc_msgSend(objc_msgSend(v10, sel_appConfiguration), sel_externalAnalyticsConfigurations);
          swift_unknownObjectRelease();
          sub_1D57B663C(0, &qword_1ED9CC760);
          v12 = sub_1D5AAE94C();

          if (v12 >> 62)
            goto LABEL_21;
          v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
          while (v13)
          {
            v14 = 0;
            v19 = xmmword_1D5AB0170;
            while ((v12 & 0xC000000000000001) != 0)
            {
              v15 = (id)MEMORY[0x1D8278F6C](v14, v12);
              v16 = __OFADD__(v14++, 1);
              if (v16)
                goto LABEL_19;
LABEL_15:
              v22 = v15;
              v17 = objc_msgSend(v15, sel_vpnProfileNames, v19);
              if (v17)
              {
                v18 = v17;
                sub_1D5AAE940();

              }
              sub_1D5A1DD90(a1, (uint64_t)v22, v20, v21, a2, a3);

              if (v14 == v13)
                goto LABEL_17;
            }
            if (v14 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_20;
            v15 = *(id *)(v12 + 32 + 8 * v14);
            v16 = __OFADD__(v14++, 1);
            if (!v16)
              goto LABEL_15;
LABEL_19:
            __break(1u);
            __break(1u);
LABEL_20:
            __break(1u);
LABEL_21:
            swift_bridgeObjectRetain();
            v13 = sub_1D5AAEC04();
            swift_bridgeObjectRelease();
          }
LABEL_17:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D5A1DD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v44[2];
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v7 = v6;
  v58 = a4;
  v59 = a6;
  v56 = a2;
  v57 = a3;
  v54 = sub_1D5AADAAC();
  v50 = *(_QWORD *)(v54 - 8);
  v10 = *(_QWORD *)(v50 + 64);
  MEMORY[0x1E0C80A78](v54);
  v49 = (char *)v44 - v11;
  v12 = sub_1D5AAD668();
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  v13 = *(_QWORD *)(v51 + 64);
  v14 = MEMORY[0x1E0C80A78](v12);
  v48 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v44 - v15;
  sub_1D57CC7FC();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v44 - v21;
  v23 = v7[11];
  v24 = v7[12];
  __swift_project_boxed_opaque_existential_1(v7 + 8, v23);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8);
  v53 = v22;
  v55 = a1;
  v26 = a1;
  v27 = a5;
  v25(v26, v56, v57, v58, a5, v59, v23, v24);
  v56 = v10;
  v57 = v13;
  v28 = v16;
  v30 = v49;
  v29 = v50;
  v58 = v27;
  v32 = v54;
  v31 = v55;
  sub_1D57CC7A0((uint64_t)v53, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v20, 1, v52) == 1)
  {
    sub_1D57E6C28((uint64_t)v53);
    v33 = (uint64_t)v20;
  }
  else
  {
    v34 = v51;
    v35 = v52;
    v45 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
    v45(v28, v20, v52);
    v36 = v7[7];
    v46 = v7[6];
    v47 = v36;
    v44[1] = __swift_project_boxed_opaque_existential_1(v7 + 3, v46);
    v37 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v30, v31, v32);
    v38 = v48;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v48, v28, v35);
    v39 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v40 = (v56 + *(unsigned __int8 *)(v34 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v41 = swift_allocObject();
    v42 = v59;
    *(_QWORD *)(v41 + 16) = v58;
    *(_QWORD *)(v41 + 24) = v42;
    (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v41 + v39, v30, v32);
    v45((char *)(v41 + v40), v38, v35);
    sub_1D5AAD8F0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
    v33 = (uint64_t)v53;
  }
  return sub_1D57E6C28(v33);
}

void sub_1D5A1E138(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1D5A1EBC8();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (id *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v7 = (*(uint64_t (**)(id *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == *MEMORY[0x1E0CF8190])
  {
    (*(void (**)(id *, uint64_t))(v4 + 96))(v6, v3);

    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
    v8 = (void *)sub_1D5AAEAC0();
    sub_1D57B34CC();
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1D5ABF230;
    sub_1D5AADAAC();
    v10 = sub_1D5AADA94();
    v12 = v11;
    v13 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    v14 = sub_1D57B356C();
    *(_QWORD *)(v9 + 64) = v14;
    *(_QWORD *)(v9 + 32) = v10;
    *(_QWORD *)(v9 + 40) = v12;
    v15 = sub_1D5AAD62C();
    *(_QWORD *)(v9 + 96) = v13;
    *(_QWORD *)(v9 + 104) = v14;
    *(_QWORD *)(v9 + 72) = v15;
    *(_QWORD *)(v9 + 80) = v16;
    sub_1D5AAEA24();
    sub_1D5AAE328();

    swift_bridgeObjectRelease();
  }
  else if (v7 == *MEMORY[0x1E0CF8188])
  {
    (*(void (**)(id *, uint64_t))(v4 + 96))(v6, v3);
    v17 = *v6;
    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
    v18 = (void *)sub_1D5AAEAC0();
    sub_1D5AAEA0C();
    sub_1D57B34CC();
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1D5AB1850;
    sub_1D5AADAAC();
    v20 = sub_1D5AADA94();
    v22 = v21;
    v23 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
    v24 = sub_1D57B356C();
    *(_QWORD *)(v19 + 64) = v24;
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v22;
    v25 = sub_1D5AAD62C();
    *(_QWORD *)(v19 + 96) = v23;
    *(_QWORD *)(v19 + 104) = v24;
    *(_QWORD *)(v19 + 72) = v25;
    *(_QWORD *)(v19 + 80) = v26;
    swift_getErrorValue();
    v27 = sub_1D5AAEE38();
    *(_QWORD *)(v19 + 136) = v23;
    *(_QWORD *)(v19 + 144) = v24;
    *(_QWORD *)(v19 + 112) = v27;
    *(_QWORD *)(v19 + 120) = v28;
    sub_1D5AAE328();

    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(id *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t ExternalAnalyticsEventProcessor.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ExternalAnalyticsEventProcessor.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D5A1E4B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 152) = sub_1D5AADEE4();
  *(_QWORD *)(v0 + 160) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A1E4E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;

  sub_1D58D482C(0, (unint64_t *)&qword_1ED9C70B0, type metadata accessor for AppSessionStartEvent, (unint64_t *)&qword_1ED9CA3C0, (uint64_t)&protocol conformance descriptor for AppSessionStartEvent);
  v56 = v2;
  v52 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v55 = (char *)&v52 - v3;
  sub_1D58D482C(0, (unint64_t *)&qword_1ED9C7080, type metadata accessor for MediaEngageCompleteEvent, &qword_1ED9CB328, (uint64_t)&protocol conformance descriptor for MediaEngageCompleteEvent);
  v60 = v4;
  v54 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v59 = (char *)&v52 - v5;
  sub_1D58D482C(0, (unint64_t *)&qword_1ED9C7040, type metadata accessor for MediaEngageEvent, &qword_1ED9C8C80, (uint64_t)&protocol conformance descriptor for MediaEngageEvent);
  v64 = v6;
  v58 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v63 = (char *)&v52 - v7;
  sub_1D58D482C(0, (unint64_t *)&qword_1ED9C7090, type metadata accessor for FeedViewEvent, &qword_1ED9C7AC8, (uint64_t)&protocol conformance descriptor for FeedViewEvent);
  v67 = v8;
  v62 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v66 = (char *)&v52 - v9;
  sub_1D58D482C(0, (unint64_t *)&qword_1ED9C7030, type metadata accessor for ArticleViewEvent, &qword_1ED9C8788, (uint64_t)&protocol conformance descriptor for ArticleViewEvent);
  v11 = v10;
  v65 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v52 - v12;
  v14 = sub_1D5AADAAC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v53 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v69 = (char *)&v52 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v57 = (char *)&v52 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v68 = (char *)&v52 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v61 = (char *)&v52 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v52 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)&v52 - v30;
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v52 - v33;
  MEMORY[0x1E0C80A78](v32);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v35((char *)&v52 - v36, a1, v14);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v13, v11);
    v35(v34, a1, v14);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v34, v14);
    v37 = a1;
LABEL_5:
    v35(v28, v37, v14);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v28, v14);
LABEL_6:
    v41 = v68;
    v35(v68, v37, v14);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v14);
LABEL_7:
    v42 = v69;
    v35(v69, v37, v14);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v42, v14);
    return 1;
  }
  v35(v34, a1, v14);
  v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v38(v31, v34, v14);
  v40 = v66;
  v39 = v67;
  v37 = a1;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v40, v39);
    goto LABEL_5;
  }
  v35(v28, a1, v14);
  v38(v61, v28, v14);
  v44 = v63;
  v45 = v64;
  if ((swift_dynamicCast() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v45);
    goto LABEL_6;
  }
  v46 = v68;
  v35(v68, v37, v14);
  v38(v57, v46, v14);
  v48 = v59;
  v47 = v60;
  if ((swift_dynamicCast() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v47);
    goto LABEL_7;
  }
  v49 = v69;
  v35(v69, v37, v14);
  v38(v53, v49, v14);
  v51 = v55;
  v50 = v56;
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v50);
  return 1;
}

uint64_t method lookup function for ExternalAnalyticsEventProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExternalAnalyticsEventProcessor.__allocating_init(appConfigurationManager:uploader:urlProvider:featureAvailability:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1D5A1EA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1D5AADAAC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1D5AAD668();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_1D5A1EB44(uint64_t a1)
{
  sub_1D5AADAAC();
  sub_1D5AAD668();
  sub_1D5A1E138(a1);
}

void sub_1D5A1EBC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C72E0)
  {
    sub_1D57B663C(255, (unint64_t *)&unk_1ED9CC718);
    v0 = sub_1D5AADB60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C72E0);
  }
}

uint64_t sub_1D5A1EC2C(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1D5A1D344(a1, a2, v2);
}

NewsAnalytics::LiveActivityUserAction_optional __swiftcall LiveActivityUserAction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::LiveActivityUserAction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t LiveActivityUserAction.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6269726373627573;
  if (*v0 != 1)
    v1 = 0x7263736275736E75;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5A1ECF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A38088(*a1, *a2);
}

unint64_t sub_1D5A1ED04()
{
  unint64_t result;

  result = qword_1EFF50C38;
  if (!qword_1EFF50C38)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityUserAction, &type metadata for LiveActivityUserAction);
    atomic_store(result, (unint64_t *)&qword_1EFF50C38);
  }
  return result;
}

uint64_t sub_1D5A1ED48()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A1EDF4()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A1EE7C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::LiveActivityUserAction_optional sub_1D5A1EF24(Swift::String *a1)
{
  return LiveActivityUserAction.init(rawValue:)(*a1);
}

void sub_1D5A1EF30(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE900000000000065;
  v5 = 0x6269726373627573;
  if (v2 != 1)
  {
    v5 = 0x7263736275736E75;
    v4 = 0xEB00000000656269;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D5A1EF9C()
{
  sub_1D5A1F110();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A1EFF8()
{
  sub_1D5A1F110();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for LiveActivityUserAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A1F090 + 4 * byte_1D5ADE895[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A1F0C4 + 4 * byte_1D5ADE890[v4]))();
}

uint64_t sub_1D5A1F0C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A1F0CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A1F0D4);
  return result;
}

uint64_t sub_1D5A1F0E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A1F0E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A1F0EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A1F0F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityUserAction()
{
  return &type metadata for LiveActivityUserAction;
}

unint64_t sub_1D5A1F110()
{
  unint64_t result;

  result = qword_1EFF50C40;
  if (!qword_1EFF50C40)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityUserAction, &type metadata for LiveActivityUserAction);
    atomic_store(result, (unint64_t *)&qword_1EFF50C40);
  }
  return result;
}

NewsAnalytics::PaidSubscribedTagListData __swiftcall PaidSubscribedTagListData.init(tagIDs:)(NewsAnalytics::PaidSubscribedTagListData tagIDs)
{
  NewsAnalytics::PaidSubscribedTagListData *v1;

  v1->tagIDs._rawValue = tagIDs.tagIDs._rawValue;
  return tagIDs;
}

uint64_t PaidSubscribedTagListData.tagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PaidSubscribedTagListData.tagIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PaidSubscribedTagListData.tagIDs.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A1F19C()
{
  sub_1D57AB1B8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A1F1C4()
{
  sub_1D57AB1B8();
  return sub_1D5AAEEE0();
}

ValueMetadata *type metadata accessor for PaidSubscribedTagListData()
{
  return &type metadata for PaidSubscribedTagListData;
}

ValueMetadata *type metadata accessor for PaidSubscribedTagListData.CodingKeys()
{
  return &type metadata for PaidSubscribedTagListData.CodingKeys;
}

unint64_t sub_1D5A1F218()
{
  unint64_t result;

  result = qword_1EFF50C48;
  if (!qword_1EFF50C48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADEB18, &type metadata for PaidSubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50C48);
  }
  return result;
}

uint64_t sub_1D5A1F25C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CECE0, MEMORY[0x1E0CF8078]);
}

uint64_t static WebEmbedLinkTapEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CECF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CECE0, a1);
}

uint64_t sub_1D5A1F29C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CED00, MEMORY[0x1E0CF8378]);
}

uint64_t static WebEmbedLinkTapEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CED20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CED00, a1);
}

uint64_t WebEmbedLinkTapEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t WebEmbedLinkTapEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*WebEmbedLinkTapEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WebEmbedLinkTapEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLinkTapEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for WebEmbedLinkTapEvent(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9CED28);
}

uint64_t WebEmbedLinkTapEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLinkTapEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLinkTapEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedLinkTapEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLinkTapEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLinkTapEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLinkTapEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLinkTapEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLinkTapEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedLinkTapEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLinkTapEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLinkTapEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLinkTapEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLinkTapEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLinkTapEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedLinkTapEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLinkTapEvent.urlData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLinkTapEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLinkTapEvent.urlData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLinkTapEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLinkTapEvent.urlData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedLinkTapEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLinkTapEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for WebEmbedLinkTapEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
}

uint64_t WebEmbedLinkTapEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t WebEmbedLinkTapEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for WebEmbedLinkTapEvent.Model(0);
  sub_1D580C534(v1 + *(int *)(v3 + 20), (uint64_t)v5);
  sub_1D580C534((uint64_t)v5, a1);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t type metadata accessor for WebEmbedLinkTapEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF50CC0);
}

uint64_t WebEmbedLinkTapEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebEmbedLinkTapEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedLinkTapEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for WebEmbedLinkTapEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedLinkTapEvent.Model.urlData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WebEmbedLinkTapEvent.Model(0) + 32));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 WebEmbedLinkTapEvent.Model.init(eventData:articleData:viewData:userBundleSubscriptionContextData:urlData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 *v20;
  __n128 result;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  __n128 v28;
  _BYTE v29[144];

  sub_1D580C534(a2, (uint64_t)v29);
  v11 = *a3;
  v12 = a3[1];
  LOWORD(a3) = *((_WORD *)a3 + 8);
  v13 = *a4;
  v14 = *((_QWORD *)a4 + 1);
  v15 = *((_QWORD *)a4 + 2);
  v24 = a4[25];
  v25 = a4[24];
  v22 = *((_QWORD *)a4 + 5);
  v23 = *((_QWORD *)a4 + 4);
  LOBYTE(a4) = a4[48];
  v28 = *a5;
  v26 = a5[1].n128_u64[1];
  v27 = a5[1].n128_u64[0];
  v16 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  v17 = (int *)type metadata accessor for WebEmbedLinkTapEvent.Model(0);
  sub_1D580C534((uint64_t)v29, a6 + v17[5]);
  v18 = a6 + v17[6];
  *(_QWORD *)v18 = v11;
  *(_QWORD *)(v18 + 8) = v12;
  *(_WORD *)(v18 + 16) = (_WORD)a3;
  v19 = a6 + v17[7];
  *(_BYTE *)v19 = v13;
  *(_QWORD *)(v19 + 8) = v14;
  *(_QWORD *)(v19 + 16) = v15;
  *(_BYTE *)(v19 + 24) = v25;
  *(_BYTE *)(v19 + 25) = v24;
  *(_QWORD *)(v19 + 32) = v23;
  *(_QWORD *)(v19 + 40) = v22;
  *(_BYTE *)(v19 + 48) = (_BYTE)a4;
  v20 = (__n128 *)(a6 + v17[8]);
  result = v28;
  *v20 = v28;
  v20[1].n128_u64[0] = v27;
  v20[1].n128_u64[1] = v26;
  return result;
}

uint64_t sub_1D5A1FB48()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A1FB7C + 4 * byte_1D5ADEB90[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A1FB7C()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D5A1FB9C()
{
  return 0x6174614477656976;
}

unint64_t sub_1D5A1FBB4()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5A1FBD0()
{
  return 0x617461446C7275;
}

uint64_t sub_1D5A1FBE8()
{
  sub_1D5A1FED0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A1FC10()
{
  sub_1D5A1FED0();
  return sub_1D5AAEEE0();
}

uint64_t WebEmbedLinkTapEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[3];
  char v21;
  _BYTE v22[144];
  char v23;
  char v24;

  v3 = v1;
  sub_1D5A20394(0, &qword_1EFF50C50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A1FED0();
  sub_1D5AAEEC8();
  v24 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for WebEmbedLinkTapEvent.Model(0);
    sub_1D580C534(v3 + v10[5], (uint64_t)v22);
    sub_1D580C534((uint64_t)v22, (uint64_t)v20);
    v23 = 1;
    sub_1D57CB940();
    sub_1D5AAED18();
    v11 = v3 + v10[6];
    v12 = *(_WORD *)(v11 + 16);
    v20[0] = *(_OWORD *)v11;
    LOWORD(v20[1]) = v12;
    v23 = 2;
    sub_1D57C62A4();
    sub_1D5AAED18();
    v13 = v3 + v10[7];
    v14 = *(_BYTE *)(v13 + 24);
    v15 = *(_BYTE *)(v13 + 25);
    v16 = *(_BYTE *)(v13 + 48);
    LOBYTE(v20[0]) = *(_BYTE *)v13;
    *(_OWORD *)((char *)v20 + 8) = *(_OWORD *)(v13 + 8);
    BYTE8(v20[1]) = v14;
    BYTE9(v20[1]) = v15;
    v20[2] = *(_OWORD *)(v13 + 32);
    v21 = v16;
    v23 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v17 = v3 + v10[8];
    v18 = *(_QWORD *)(v17 + 8);
    *(_QWORD *)&v20[0] = *(_QWORD *)v17;
    *((_QWORD *)&v20[0] + 1) = v18;
    v20[1] = *(_OWORD *)(v17 + 16);
    v23 = 4;
    sub_1D58845E4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A1FED0()
{
  unint64_t result;

  result = qword_1EFF50C58;
  if (!qword_1EFF50C58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADEDC4, &type metadata for WebEmbedLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50C58);
  }
  return result;
}

uint64_t WebEmbedLinkTapEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _OWORD v36[3];
  char v37;
  _BYTE v38[136];
  char v39[144];
  char v40;
  char v41;

  v29 = a2;
  v3 = sub_1D5AADF98();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A20394(0, &qword_1EFF50C60, MEMORY[0x1E0DED048]);
  v33 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - v7;
  v9 = (int *)type metadata accessor for WebEmbedLinkTapEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A1FED0();
  v34 = v8;
  v12 = v35;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v35 = v6;
  v13 = v30;
  v28 = a1;
  v14 = (uint64_t)v11;
  v39[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v16 = v31;
  v15 = v32;
  v17 = v33;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v14, v15, v16);
  v41 = 1;
  sub_1D57CB8FC();
  sub_1D5AAEC7C();
  v18 = v35;
  sub_1D580C534((uint64_t)v39, (uint64_t)v38);
  sub_1D580C534((uint64_t)v38, v14 + v9[5]);
  v40 = 2;
  sub_1D57C6260();
  v32 = 0;
  sub_1D5AAEC7C();
  v19 = v36[1];
  v20 = v14 + v9[6];
  *(_OWORD *)v20 = v36[0];
  *(_WORD *)(v20 + 16) = v19;
  v40 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v21 = BYTE8(v36[1]);
  v22 = BYTE9(v36[1]);
  v23 = v37;
  v24 = v14 + v9[7];
  *(_BYTE *)v24 = v36[0];
  *(_OWORD *)(v24 + 8) = *(_OWORD *)((char *)v36 + 8);
  *(_BYTE *)(v24 + 24) = v21;
  *(_BYTE *)(v24 + 25) = v22;
  *(_OWORD *)(v24 + 32) = v36[2];
  *(_BYTE *)(v24 + 48) = v23;
  v40 = 4;
  sub_1D58845A0();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v34, v17);
  v25 = *((_QWORD *)&v36[0] + 1);
  v26 = v14 + v9[8];
  *(_QWORD *)v26 = *(_QWORD *)&v36[0];
  *(_QWORD *)(v26 + 8) = v25;
  *(_OWORD *)(v26 + 16) = v36[1];
  sub_1D5A203F0(v14, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_1D5A20434(v14);
}

void sub_1D5A20394(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A1FED0();
    v7 = a3(a1, &type metadata for WebEmbedLinkTapEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A203F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebEmbedLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A20434(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebEmbedLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A20470@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WebEmbedLinkTapEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A20484(_QWORD *a1)
{
  return WebEmbedLinkTapEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A20498@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CECF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CECE0, a1);
}

uint64_t sub_1D5A204BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CED20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CED00, a1);
}

uint64_t sub_1D5A204E0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
}

uint64_t getEnumTagSinglePayload for WebEmbedLinkTapEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A20670(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WebEmbedLinkTapEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A207DC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedLinkTapEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 3);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[8] = v10[8];
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v11;
      v9[32] = v10[32];
      v12 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v12;
      *((_WORD *)v9 + 28) = *((_WORD *)v10 + 28);
      v14 = *((_QWORD *)v10 + 8);
      v13 = *((_QWORD *)v10 + 9);
      v9[80] = v10[80];
      *((_QWORD *)v9 + 8) = v14;
      *((_QWORD *)v9 + 9) = v13;
      *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      v9[112] = v10[112];
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      *((_DWORD *)v9 + 32) = *((_DWORD *)v10 + 32);
      v9[132] = v10[132];
      *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v16;
      *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
      v17 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v17;
      v18 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v18;
      v19 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v19;
    }
    v20 = a3[6];
    v21 = a3[7];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    *((_WORD *)v22 + 8) = *((_WORD *)v23 + 8);
    v25 = (char *)a1 + v21;
    v26 = (char *)a2 + v21;
    *v25 = *v26;
    v27 = *((_QWORD *)v26 + 2);
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    *((_QWORD *)v25 + 2) = v27;
    *((_WORD *)v25 + 12) = *((_WORD *)v26 + 12);
    v28 = *((_QWORD *)v26 + 5);
    *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
    *((_QWORD *)v25 + 5) = v28;
    v25[48] = v26[48];
    v29 = a3[8];
    v30 = (uint64_t *)((char *)a1 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = v31[3];
    v30[2] = v31[2];
    v30[3] = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WebEmbedLinkTapEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 20) + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WebEmbedLinkTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 24);
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v10;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    v11 = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = v11;
    *(_WORD *)(v8 + 56) = *(_WORD *)(v9 + 56);
    v13 = *(_QWORD *)(v9 + 64);
    v12 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 72) = v12;
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_DWORD *)(v8 + 128) = *(_DWORD *)(v9 + 128);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_WORD *)(v8 + 133) = *(_WORD *)(v9 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v14;
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    v15 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v15;
    v16 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v16;
    v17 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v17;
  }
  v18 = a3[6];
  v19 = a3[7];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v22;
  *(_WORD *)(v20 + 16) = *(_WORD *)(v21 + 16);
  v23 = a1 + v19;
  v24 = a2 + v19;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  v25 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  *(_QWORD *)(v23 + 16) = v25;
  *(_WORD *)(v23 + 24) = *(_WORD *)(v24 + 24);
  v26 = *(_QWORD *)(v24 + 40);
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  *(_QWORD *)(v23 + 40) = v26;
  *(_BYTE *)(v23 + 48) = *(_BYTE *)(v24 + 48);
  v27 = a3[8];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = v29[3];
  v28[2] = v29[2];
  v28[3] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WebEmbedLinkTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 24);
  v11 = *(_QWORD *)(a2 + v7 + 24);
  if (v10)
  {
    if (v11)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
      *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      v12 = *(_QWORD *)(v9 + 48);
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      *(_QWORD *)(v8 + 48) = v12;
      *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_QWORD *)(v8 + 72) = v13;
      *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
      *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
      *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
      *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    }
    else
    {
      sub_1D5810518(v8);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v16 = *(_OWORD *)(v9 + 64);
      v18 = *(_OWORD *)(v9 + 16);
      v17 = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 64) = v16;
      *(_OWORD *)(v8 + 16) = v18;
      *(_OWORD *)(v8 + 32) = v17;
      v20 = *(_OWORD *)(v9 + 96);
      v19 = *(_OWORD *)(v9 + 112);
      v21 = *(_OWORD *)(v9 + 80);
      *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
      *(_OWORD *)(v8 + 96) = v20;
      *(_OWORD *)(v8 + 112) = v19;
      *(_OWORD *)(v8 + 80) = v21;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    v14 = *(_QWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    *(_QWORD *)(v8 + 48) = v14;
    *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
    *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
    v15 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 72) = v15;
    *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
    *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
    *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
    *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
    *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v22 = *(_OWORD *)(v9 + 16);
    v23 = *(_OWORD *)(v9 + 32);
    v24 = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 64) = v24;
    *(_OWORD *)(v8 + 16) = v22;
    *(_OWORD *)(v8 + 32) = v23;
    v25 = *(_OWORD *)(v9 + 80);
    v26 = *(_OWORD *)(v9 + 96);
    v27 = *(_OWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    *(_OWORD *)(v8 + 96) = v26;
    *(_OWORD *)(v8 + 112) = v27;
    *(_OWORD *)(v8 + 80) = v25;
  }
  v28 = a3[6];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)v29 = *(_QWORD *)(a2 + v28);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(a2 + v28 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
  *(_BYTE *)(v29 + 17) = *(_BYTE *)(v30 + 17);
  v31 = a3[7];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_BYTE *)v32 = *(_BYTE *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(a2 + v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 24) = *(_BYTE *)(v33 + 24);
  *(_BYTE *)(v32 + 25) = *(_BYTE *)(v33 + 25);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v33 + 48);
  v34 = a3[8];
  v35 = (_QWORD *)(a1 + v34);
  v36 = a2 + v34;
  *v35 = *(_QWORD *)(a2 + v34);
  v35[1] = *(_QWORD *)(a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[2] = *(_QWORD *)(v36 + 16);
  v35[3] = *(_QWORD *)(v36 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WebEmbedLinkTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (!*(_QWORD *)(a1 + v7 + 24))
    goto LABEL_5;
  v10 = *(_QWORD *)(v9 + 24);
  if (!v10)
  {
    sub_1D5810518(v8);
LABEL_5:
    v12 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v12;
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    v13 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v13;
    v14 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v14;
    v15 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v15;
    goto LABEL_6;
  }
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v11;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
LABEL_6:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)(a2 + v20);
  v23 = *(_QWORD *)(a2 + v20 + 16);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(a2 + v20 + 8);
  *(_QWORD *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 24) = *(_BYTE *)(v22 + 24);
  *(_BYTE *)(v21 + 25) = *(_BYTE *)(v22 + 25);
  v24 = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = v24;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 48) = *(_BYTE *)(v22 + 48);
  v25 = a3[8];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v29 = v27[3];
  v26[2] = v27[2];
  v26[3] = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedLinkTapEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A21370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for WebEmbedLinkTapEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A213FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A21478()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WebEmbedLinkTapEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A21554 + 4 * byte_1D5ADEB9A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A21588 + 4 * byte_1D5ADEB95[v4]))();
}

uint64_t sub_1D5A21588(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A21590(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A21598);
  return result;
}

uint64_t sub_1D5A215A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A215ACLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A215B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A215B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedLinkTapEvent.Model.CodingKeys()
{
  return &type metadata for WebEmbedLinkTapEvent.Model.CodingKeys;
}

unint64_t sub_1D5A215D8()
{
  unint64_t result;

  result = qword_1EFF50D08;
  if (!qword_1EFF50D08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADED9C, &type metadata for WebEmbedLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50D08);
  }
  return result;
}

unint64_t sub_1D5A21620()
{
  unint64_t result;

  result = qword_1EFF50D10;
  if (!qword_1EFF50D10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADED0C, &type metadata for WebEmbedLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50D10);
  }
  return result;
}

unint64_t sub_1D5A21668()
{
  unint64_t result;

  result = qword_1EFF50D18;
  if (!qword_1EFF50D18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADED34, &type metadata for WebEmbedLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50D18);
  }
  return result;
}

NewsAnalytics::EmailSignupUserActionType_optional __swiftcall EmailSignupUserActionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::EmailSignupUserActionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EmailSignupUserActionType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x70756E676973;
  if (*v0 != 1)
    v1 = 0x776F6E746F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5A21758(char *a1, unsigned __int8 *a2)
{
  return sub_1D5A37110(*a1, *a2);
}

unint64_t sub_1D5A21768()
{
  unint64_t result;

  result = qword_1EFF50D20;
  if (!qword_1EFF50D20)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailSignupUserActionType, &type metadata for EmailSignupUserActionType);
    atomic_store(result, (unint64_t *)&qword_1EFF50D20);
  }
  return result;
}

uint64_t sub_1D5A217AC()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A21844()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A218B8()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::EmailSignupUserActionType_optional sub_1D5A2194C(Swift::String *a1)
{
  return EmailSignupUserActionType.init(rawValue:)(*a1);
}

void sub_1D5A21958(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x70756E676973;
  if (v2 != 1)
    v4 = 0x776F6E746F6ELL;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE600000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1D5A219B0()
{
  sub_1D5A21B24();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A21A0C()
{
  sub_1D5A21B24();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for EmailSignupUserActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A21AA4 + 4 * byte_1D5ADEE25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A21AD8 + 4 * byte_1D5ADEE20[v4]))();
}

uint64_t sub_1D5A21AD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A21AE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A21AE8);
  return result;
}

uint64_t sub_1D5A21AF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A21AFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A21B00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A21B08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmailSignupUserActionType()
{
  return &type metadata for EmailSignupUserActionType;
}

unint64_t sub_1D5A21B24()
{
  unint64_t result;

  result = qword_1ED9CB5D8;
  if (!qword_1ED9CB5D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailSignupUserActionType, &type metadata for EmailSignupUserActionType);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5D8);
  }
  return result;
}

void VideoAdEngagementData.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *VideoAdEngagementData.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*VideoAdEngagementData.type.modify())()
{
  return nullsub_1;
}

void VideoAdEngagementData.milestone.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *VideoAdEngagementData.milestone.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*VideoAdEngagementData.milestone.modify())()
{
  return nullsub_1;
}

NewsAnalytics::VideoAdEngagementData __swiftcall VideoAdEngagementData.init(type:milestone:)(NewsAnalytics::VideoAdEngagementType type, NewsAnalytics::Milestone milestone)
{
  _BYTE *v2;
  char v3;
  NewsAnalytics::VideoAdEngagementData result;

  v3 = *(_BYTE *)milestone;
  *v2 = *(_BYTE *)type;
  v2[1] = v3;
  result.type = type;
  return result;
}

uint64_t sub_1D5A21BCC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F7473656C696DLL;
  else
    return 1701869940;
}

uint64_t sub_1D5A21C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A224BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A21C28()
{
  sub_1D5A21DCC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A21C50()
{
  sub_1D5A21DCC();
  return sub_1D5AAEEE0();
}

uint64_t VideoAdEngagementData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1D5A2201C(0, &qword_1EFF50D28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A21DCC();
  sub_1D5AAEEC8();
  v16 = v9;
  v15 = 0;
  sub_1D5A21E10();
  sub_1D5AAED6C();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1D5A21E54();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5A21DCC()
{
  unint64_t result;

  result = qword_1EFF50D30;
  if (!qword_1EFF50D30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF0DC, &type metadata for VideoAdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50D30);
  }
  return result;
}

unint64_t sub_1D5A21E10()
{
  unint64_t result;

  result = qword_1EFF50D38;
  if (!qword_1EFF50D38)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdEngagementType, &type metadata for VideoAdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1EFF50D38);
  }
  return result;
}

unint64_t sub_1D5A21E54()
{
  unint64_t result;

  result = qword_1EFF50D40;
  if (!qword_1EFF50D40)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Milestone, &type metadata for Milestone);
    atomic_store(result, (unint64_t *)&qword_1EFF50D40);
  }
  return result;
}

uint64_t VideoAdEngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1D5A2201C(0, &qword_1EFF50D48, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A21DCC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    sub_1D5A22078();
    sub_1D5AAECD0();
    v10 = v17;
    v14 = 1;
    sub_1D5A220BC();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A2201C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A21DCC();
    v7 = a3(a1, &type metadata for VideoAdEngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A22078()
{
  unint64_t result;

  result = qword_1EFF50D50;
  if (!qword_1EFF50D50)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdEngagementType, &type metadata for VideoAdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1EFF50D50);
  }
  return result;
}

unint64_t sub_1D5A220BC()
{
  unint64_t result;

  result = qword_1EFF50D58;
  if (!qword_1EFF50D58)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Milestone, &type metadata for Milestone);
    atomic_store(result, (unint64_t *)&qword_1EFF50D58);
  }
  return result;
}

unint64_t sub_1D5A22104()
{
  unint64_t result;

  result = qword_1EFF50D60;
  if (!qword_1EFF50D60)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdEngagementData, &type metadata for VideoAdEngagementData);
    atomic_store(result, (unint64_t *)&qword_1EFF50D60);
  }
  return result;
}

unint64_t sub_1D5A2214C()
{
  unint64_t result;

  result = qword_1EFF50D68;
  if (!qword_1EFF50D68)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdEngagementData, &type metadata for VideoAdEngagementData);
    atomic_store(result, (unint64_t *)&qword_1EFF50D68);
  }
  return result;
}

uint64_t sub_1D5A22190@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return VideoAdEngagementData.init(from:)(a1, a2);
}

uint64_t sub_1D5A221A4(_QWORD *a1)
{
  return VideoAdEngagementData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for VideoAdEngagementData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 65285 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65285 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65285;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65285;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65285;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65285 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65285 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A22298 + 4 * byte_1D5ADEF55[v4]))();
  *a1 = a2 - 251;
  return ((uint64_t (*)(void))((char *)sub_1D5A222CC + 4 * byte_1D5ADEF50[v4]))();
}

uint64_t sub_1D5A222CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D5A222D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1D5A222DCLL);
  return result;
}

uint64_t sub_1D5A222E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1D5A222F0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A222F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D5A222FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementData()
{
  return &type metadata for VideoAdEngagementData;
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5A22364 + 4 * byte_1D5ADEF5F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5A22398 + 4 * byte_1D5ADEF5A[v4]))();
}

uint64_t sub_1D5A22398(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A223A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A223A8);
  return result;
}

uint64_t sub_1D5A223B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A223BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5A223C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A223C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementData.CodingKeys()
{
  return &type metadata for VideoAdEngagementData.CodingKeys;
}

unint64_t sub_1D5A223E8()
{
  unint64_t result;

  result = qword_1EFF50D70;
  if (!qword_1EFF50D70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF0B4, &type metadata for VideoAdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50D70);
  }
  return result;
}

unint64_t sub_1D5A22430()
{
  unint64_t result;

  result = qword_1EFF50D78;
  if (!qword_1EFF50D78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF024, &type metadata for VideoAdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50D78);
  }
  return result;
}

unint64_t sub_1D5A22478()
{
  unint64_t result;

  result = qword_1EFF50D80;
  if (!qword_1EFF50D80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF04C, &type metadata for VideoAdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50D80);
  }
  return result;
}

uint64_t sub_1D5A224BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F7473656C696DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t URLReferralData.referralData.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v6 = v1[4];
  v5 = v1[5];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v6;
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t URLReferralData.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1[6];
  v3 = v1[7];
  v4 = v1[8];
  v5 = v1[9];
  v6 = v1[10];
  v7 = v1[11];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1D5828094(v2, v3);
}

uint64_t URLReferralData.adReferralData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 104);
  *a1 = *(_QWORD *)(v1 + 96);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t URLReferralData.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;

  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 128);
  v5 = *(_QWORD *)(v1 + 136);
  v6 = *(_QWORD *)(v1 + 144);
  v7 = *(_QWORD *)(v1 + 152);
  v8 = *(_QWORD *)(v1 + 160);
  v9 = *(_QWORD *)(v1 + 168);
  v10 = *(_QWORD *)(v1 + 176);
  v11 = *(_WORD *)(v1 + 184);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_WORD *)(a1 + 72) = v11;
  return sub_1D58AEDC8(v2, v3);
}

uint64_t *URLReferralData.widgetEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v4[57];

  sub_1D5975960(v1 + 192, (uint64_t)v4);
  sub_1D5975960((uint64_t)v4, a1);
  return sub_1D5A226B0(v4);
}

uint64_t *sub_1D5A226B0(uint64_t *a1)
{
  sub_1D59759F8(*a1, a1[1]);
  return a1;
}

uint64_t destroy for URLReferralData(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[15] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = a1[25];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for URLReferralData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v8;
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  v11 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v11;
  v12 = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  if (v12 != 1)
  {
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v12;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    v26 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v26;
    v27 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = v27;
    v28 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v28;
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = *(_QWORD *)(a2 + 200);
    if (v15)
      goto LABEL_6;
LABEL_8:
    memcpy((void *)(a1 + 192), (const void *)(a2 + 192), 0x1C0uLL);
    return a1;
  }
  v13 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v13;
  *(_OWORD *)(a1 + 170) = *(_OWORD *)(a2 + 170);
  v14 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v14;
  v15 = *(_QWORD *)(a2 + 200);
  if (!v15)
    goto LABEL_8;
LABEL_6:
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v15;
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v16 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v16;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v17 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v17;
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v18 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v18;
  *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
  v19 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v19;
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_DWORD *)(a1 + 360) = *(_DWORD *)(a2 + 360);
  *(_BYTE *)(a1 + 364) = *(_BYTE *)(a2 + 364);
  *(_WORD *)(a1 + 365) = *(_WORD *)(a2 + 365);
  *(_WORD *)(a1 + 368) = *(_WORD *)(a2 + 368);
  v20 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v20;
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  v21 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v21;
  v22 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v22;
  v30 = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = v30;
  *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
  v23 = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v23;
  *(_BYTE *)(a1 + 480) = *(_BYTE *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  v24 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v24;
  v25 = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = v25;
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_BYTE *)(a1 + 584) = *(_BYTE *)(a2 + 584);
  *(_BYTE *)(a1 + 585) = *(_BYTE *)(a2 + 585);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for URLReferralData(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 48);
  v5 = (_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5829E98(a1 + 48);
      v8 = *(_OWORD *)(a2 + 64);
      v7 = *(_OWORD *)(a2 + 80);
      *v4 = *v5;
      *(_OWORD *)(a1 + 64) = v8;
      *(_OWORD *)(a1 + 80) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v5;
    v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    *v4 = v9;
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (_OWORD *)(a1 + 112);
  v12 = (_OWORD *)(a2 + 112);
  v13 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120) == 1)
  {
    if (v13 == 1)
    {
      *v11 = *v12;
      v14 = *(_OWORD *)(a2 + 128);
      v15 = *(_OWORD *)(a2 + 144);
      v16 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 170) = *(_OWORD *)(a2 + 170);
      *(_OWORD *)(a1 + 144) = v15;
      *(_OWORD *)(a1 + 160) = v16;
      *(_OWORD *)(a1 + 128) = v14;
    }
    else
    {
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v13 == 1)
  {
    sub_1D58B3718(a1 + 112);
    *v11 = *v12;
    v18 = *(_OWORD *)(a2 + 144);
    v17 = *(_OWORD *)(a2 + 160);
    v19 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 170) = *(_OWORD *)(a2 + 170);
    *(_OWORD *)(a1 + 144) = v18;
    *(_OWORD *)(a1 + 160) = v17;
    *(_OWORD *)(a1 + 128) = v19;
  }
  else
  {
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  }
  v20 = *(_QWORD *)(a2 + 200);
  if (!*(_QWORD *)(a1 + 200))
  {
    if (v20)
    {
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      v24 = *(_QWORD *)(a2 + 280);
      *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
      *(_QWORD *)(a1 + 280) = v24;
      *(_BYTE *)(a1 + 289) = *(_BYTE *)(a2 + 289);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      v25 = *(_QWORD *)(a2 + 304);
      *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
      *(_QWORD *)(a1 + 304) = v25;
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
      *(_BYTE *)(a1 + 361) = *(_BYTE *)(a2 + 361);
      *(_BYTE *)(a1 + 362) = *(_BYTE *)(a2 + 362);
      *(_BYTE *)(a1 + 363) = *(_BYTE *)(a2 + 363);
      *(_BYTE *)(a1 + 364) = *(_BYTE *)(a2 + 364);
      *(_BYTE *)(a1 + 365) = *(_BYTE *)(a2 + 365);
      *(_BYTE *)(a1 + 366) = *(_BYTE *)(a2 + 366);
      *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
      *(_BYTE *)(a1 + 369) = *(_BYTE *)(a2 + 369);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
      *(_DWORD *)(a1 + 396) = *(_DWORD *)(a2 + 396);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
      *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
      v26 = *(_QWORD *)(a2 + 472);
      *(_BYTE *)(a1 + 480) = *(_BYTE *)(a2 + 480);
      *(_QWORD *)(a1 + 472) = v26;
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
      *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
      *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
      *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
      *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
      *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
      *(_BYTE *)(a1 + 584) = *(_BYTE *)(a2 + 584);
      *(_BYTE *)(a1 + 585) = *(_BYTE *)(a2 + 585);
      *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
      *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
      *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
      *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
      *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
      *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_21:
    memcpy((void *)(a1 + 192), (const void *)(a2 + 192), 0x1C0uLL);
    return a1;
  }
  if (!v20)
  {
    sub_1D5978DF0(a1 + 192);
    goto LABEL_21;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  v21 = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = v21;
  *(_BYTE *)(a1 + 289) = *(_BYTE *)(a2 + 289);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = v22;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
  *(_BYTE *)(a1 + 361) = *(_BYTE *)(a2 + 361);
  *(_BYTE *)(a1 + 362) = *(_BYTE *)(a2 + 362);
  *(_BYTE *)(a1 + 363) = *(_BYTE *)(a2 + 363);
  *(_BYTE *)(a1 + 364) = *(_BYTE *)(a2 + 364);
  *(_BYTE *)(a1 + 365) = *(_BYTE *)(a2 + 365);
  *(_BYTE *)(a1 + 366) = *(_BYTE *)(a2 + 366);
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_BYTE *)(a1 + 369) = *(_BYTE *)(a2 + 369);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
  *(_DWORD *)(a1 + 396) = *(_DWORD *)(a2 + 396);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(a2 + 472);
  *(_BYTE *)(a1 + 480) = *(_BYTE *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = v23;
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 584) = *(_BYTE *)(a2 + 584);
  *(_BYTE *)(a1 + 585) = *(_BYTE *)(a2 + 585);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy640_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x280uLL);
}

uint64_t assignWithTake for URLReferralData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
  {
    v7 = *(_QWORD *)(a2 + 56);
    if (v7)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D5829E98(a1 + 48);
  }
  v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
LABEL_6:
  v11 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v11;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 120) == 1)
  {
LABEL_9:
    v13 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v13;
    *(_OWORD *)(a1 + 170) = *(_OWORD *)(a2 + 170);
    v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    goto LABEL_11;
  }
  v12 = *(_QWORD *)(a2 + 120);
  if (v12 == 1)
  {
    sub_1D58B3718(a1 + 112);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v15 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v17;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
LABEL_11:
  if (!*(_QWORD *)(a1 + 200))
  {
LABEL_15:
    memcpy((void *)(a1 + 192), (const void *)(a2 + 192), 0x1C0uLL);
    return a1;
  }
  v18 = *(_QWORD *)(a2 + 200);
  if (!v18)
  {
    sub_1D5978DF0(a1 + 192);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v18;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v19 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v20 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v21 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v21;
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_BYTE *)(a1 + 289) = *(_BYTE *)(a2 + 289);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
  *(_BYTE *)(a1 + 361) = *(_BYTE *)(a2 + 361);
  *(_BYTE *)(a1 + 362) = *(_BYTE *)(a2 + 362);
  *(_BYTE *)(a1 + 363) = *(_BYTE *)(a2 + 363);
  *(_BYTE *)(a1 + 364) = *(_BYTE *)(a2 + 364);
  *(_BYTE *)(a1 + 365) = *(_BYTE *)(a2 + 365);
  *(_BYTE *)(a1 + 366) = *(_BYTE *)(a2 + 366);
  *(_WORD *)(a1 + 368) = *(_WORD *)(a2 + 368);
  v22 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v23;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
  v24 = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_BYTE *)(a1 + 480) = *(_BYTE *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 584) = *(_WORD *)(a2 + 584);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLReferralData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 640))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLReferralData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 632) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 640) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 640) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for URLReferralData()
{
  return &type metadata for URLReferralData;
}

uint64_t Tracker.feedbackSubmit<A>(_:)()
{
  sub_1D5AADEFC();
  sub_1D5AADF50();
  return sub_1D5AADF08();
}

uint64_t AccessTracker.feedbackSubmit<A>(_:)()
{
  _OWORD v1[2];

  sub_1D5AADAC4();
  memset(v1, 0, sizeof(v1));
  sub_1D5AADB0C();
  sub_1D57C5484((uint64_t)v1);
  return sub_1D5AADAD0();
}

uint64_t sub_1D5A23CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  sub_1D5A23D40(v0 + OBJC_IVAR____TtC13NewsAnalytics37RollingTimestampConfigurationProvider_lastConfig);
  v1 = v0 + OBJC_IVAR____TtC13NewsAnalytics37RollingTimestampConfigurationProvider_lastConfigRollDate;
  v2 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D5A23D38()
{
  return type metadata accessor for RollingTimestampConfigurationProvider();
}

uint64_t sub_1D5A23D40(uint64_t a1)
{
  uint64_t v2;

  sub_1D57B35B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PurchaseSessionData.purchaseSessionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseSessionData.purchaseSessionID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PurchaseSessionData.purchaseSessionID.modify())()
{
  return nullsub_1;
}

NewsAnalytics::PurchaseSessionData __swiftcall PurchaseSessionData.init(purchaseSessionID:)(NewsAnalytics::PurchaseSessionData purchaseSessionID)
{
  NewsAnalytics::PurchaseSessionData *v1;

  *v1 = purchaseSessionID;
  return purchaseSessionID;
}

unint64_t sub_1D5A23DF4()
{
  return 0xD000000000000011;
}

uint64_t sub_1D5A23E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A243D4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5A23E38()
{
  sub_1D5A23F7C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A23E60()
{
  sub_1D5A23F7C();
  return sub_1D5AAEEE0();
}

uint64_t PurchaseSessionData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A240E4(0, &qword_1ED9CC928, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A23F7C();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5A23F7C()
{
  unint64_t result;

  result = qword_1ED9CA398;
  if (!qword_1ED9CA398)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF368, &type metadata for PurchaseSessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA398);
  }
  return result;
}

uint64_t PurchaseSessionData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D5A240E4(0, &qword_1EFF50D88, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A23F7C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A240E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A23F7C();
    v7 = a3(a1, &type metadata for PurchaseSessionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A24148@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PurchaseSessionData.init(from:)(a1, a2);
}

uint64_t sub_1D5A2415C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A240E4(0, &qword_1ED9CC928, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A23F7C();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for PurchaseSessionData()
{
  return &type metadata for PurchaseSessionData;
}

uint64_t storeEnumTagSinglePayload for PurchaseSessionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A242A0 + 4 * byte_1D5ADF1F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A242C0 + 4 * byte_1D5ADF1F5[v4]))();
}

_BYTE *sub_1D5A242A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A242C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A242C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A242D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A242D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A242E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseSessionData.CodingKeys()
{
  return &type metadata for PurchaseSessionData.CodingKeys;
}

unint64_t sub_1D5A24300()
{
  unint64_t result;

  result = qword_1EFF50D90;
  if (!qword_1EFF50D90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF340, &type metadata for PurchaseSessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50D90);
  }
  return result;
}

unint64_t sub_1D5A24348()
{
  unint64_t result;

  result = qword_1ED9CA3A8;
  if (!qword_1ED9CA3A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF2B0, &type metadata for PurchaseSessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA3A8);
  }
  return result;
}

unint64_t sub_1D5A24390()
{
  unint64_t result;

  result = qword_1ED9CA3A0;
  if (!qword_1ED9CA3A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF2D8, &type metadata for PurchaseSessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA3A0);
  }
  return result;
}

uint64_t sub_1D5A243D4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF1F00)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

NewsAnalytics::ArticleAccessType_optional __swiftcall ArticleAccessType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ArticleAccessType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ArticleAccessType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701147238;
  if (*v0 != 1)
    v1 = 1684627824;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5A244FC(char *a1, unsigned __int8 *a2)
{
  return sub_1D5A3AAD8(*a1, *a2);
}

unint64_t sub_1D5A2450C()
{
  unint64_t result;

  result = qword_1EFF50D98;
  if (!qword_1EFF50D98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleAccessType, &type metadata for ArticleAccessType);
    atomic_store(result, (unint64_t *)&qword_1EFF50D98);
  }
  return result;
}

uint64_t sub_1D5A24550()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A245E0()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A2464C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::ArticleAccessType_optional sub_1D5A246D8(Swift::String *a1)
{
  return ArticleAccessType.init(rawValue:)(*a1);
}

void sub_1D5A246E4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 1701147238;
  if (v2 != 1)
    v4 = 1684627824;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE400000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1D5A24734()
{
  sub_1D5A248A8();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A24790()
{
  sub_1D5A248A8();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for ArticleAccessType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A24828 + 4 * byte_1D5ADF3C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A2485C + 4 * byte_1D5ADF3C0[v4]))();
}

uint64_t sub_1D5A2485C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A24864(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A2486CLL);
  return result;
}

uint64_t sub_1D5A24878(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A24880);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A24884(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2488C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleAccessType()
{
  return &type metadata for ArticleAccessType;
}

unint64_t sub_1D5A248A8()
{
  unint64_t result;

  result = qword_1ED9C9250;
  if (!qword_1ED9C9250)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleAccessType, &type metadata for ArticleAccessType);
    atomic_store(result, (unint64_t *)&qword_1ED9C9250);
  }
  return result;
}

uint64_t PurchaseData.purchaseID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseData.purchaseID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PurchaseData.purchaseID.modify())()
{
  return nullsub_1;
}

void PurchaseData.purchaseType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *PurchaseData.purchaseType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*PurchaseData.purchaseType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::PurchaseData __swiftcall PurchaseData.init(purchaseID:purchaseType:)(Swift::String purchaseID, NewsAnalytics::PurchaseType purchaseType)
{
  uint64_t v2;
  char v3;
  NewsAnalytics::PurchaseData result;

  v3 = *(_BYTE *)purchaseType;
  *(Swift::String *)v2 = purchaseID;
  *(_BYTE *)(v2 + 16) = v3;
  result.purchaseID = purchaseID;
  result.purchaseType = purchaseType;
  return result;
}

uint64_t sub_1D5A24994()
{
  return 0x6573616863727570;
}

uint64_t sub_1D5A249C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A25038(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A249EC()
{
  sub_1D5A24B84();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A24A14()
{
  sub_1D5A24B84();
  return sub_1D5AAEEE0();
}

uint64_t PurchaseData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1D5A24DB4(0, &qword_1ED9CC8E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A24B84();
  sub_1D5AAEEC8();
  v14 = 0;
  v8 = v10[1];
  sub_1D5AAED3C();
  if (!v8)
  {
    v13 = v11;
    v12 = 1;
    sub_1D5A24BC8();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A24B84()
{
  unint64_t result;

  result = qword_1ED9C7820;
  if (!qword_1ED9C7820)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF658, &type metadata for PurchaseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7820);
  }
  return result;
}

unint64_t sub_1D5A24BC8()
{
  unint64_t result;

  result = qword_1ED9C7848;
  if (!qword_1ED9C7848)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseType, &type metadata for PurchaseType);
    atomic_store(result, (unint64_t *)&qword_1ED9C7848);
  }
  return result;
}

uint64_t PurchaseData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1D5A24DB4(0, &qword_1ED9D0CD0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A24B84();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v16 = 1;
  sub_1D5A24E10();
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = v17;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D5A24DB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A24B84();
    v7 = a3(a1, &type metadata for PurchaseData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A24E10()
{
  unint64_t result;

  result = qword_1ED9CF278;
  if (!qword_1ED9CF278)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseType, &type metadata for PurchaseType);
    atomic_store(result, (unint64_t *)&qword_1ED9CF278);
  }
  return result;
}

uint64_t sub_1D5A24E5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseData.init(from:)(a1, a2);
}

uint64_t sub_1D5A24E70(_QWORD *a1)
{
  return PurchaseData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PurchaseData()
{
  return &type metadata for PurchaseData;
}

uint64_t storeEnumTagSinglePayload for PurchaseData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5A24EE0 + 4 * byte_1D5ADF4E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5A24F14 + 4 * byte_1D5ADF4E0[v4]))();
}

uint64_t sub_1D5A24F14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A24F1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A24F24);
  return result;
}

uint64_t sub_1D5A24F30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A24F38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5A24F3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A24F44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseData.CodingKeys()
{
  return &type metadata for PurchaseData.CodingKeys;
}

unint64_t sub_1D5A24F64()
{
  unint64_t result;

  result = qword_1EFF50DA0;
  if (!qword_1EFF50DA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF630, &type metadata for PurchaseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50DA0);
  }
  return result;
}

unint64_t sub_1D5A24FAC()
{
  unint64_t result;

  result = qword_1ED9C7830;
  if (!qword_1ED9C7830)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF5A0, &type metadata for PurchaseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7830);
  }
  return result;
}

unint64_t sub_1D5A24FF4()
{
  unint64_t result;

  result = qword_1ED9C7828;
  if (!qword_1ED9C7828)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF5C8, &type metadata for PurchaseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7828);
  }
  return result;
}

uint64_t sub_1D5A25038(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6573616863727570 && a2 == 0xEA00000000004449;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::InterfaceOrientation_optional __swiftcall InterfaceOrientation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::InterfaceOrientation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t InterfaceOrientation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A251CC + 4 * byte_1D5ADF6B0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A251CC()
{
  return 0x7469617274726F70;
}

unint64_t sub_1D5A251E4()
{
  return 0xD000000000000012;
}

uint64_t sub_1D5A25200()
{
  return 0x70616373646E616CLL;
}

void sub_1D5A25238(char *a1)
{
  sub_1D5A392BC(*a1);
}

unint64_t sub_1D5A25248()
{
  unint64_t result;

  result = qword_1EFF50DA8;
  if (!qword_1EFF50DA8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InterfaceOrientation, &type metadata for InterfaceOrientation);
    atomic_store(result, (unint64_t *)&qword_1EFF50DA8);
  }
  return result;
}

void sub_1D5A2528C()
{
  char *v0;

  sub_1D5A80F64(*v0);
}

void sub_1D5A25294()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A252D0()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A25350(uint64_t a1)
{
  char *v1;

  sub_1D5AA96E0(a1, *v1);
}

NewsAnalytics::InterfaceOrientation_optional sub_1D5A25358(Swift::String *a1)
{
  return InterfaceOrientation.init(rawValue:)(*a1);
}

uint64_t sub_1D5A25364()
{
  sub_1D579F448();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for InterfaceOrientation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A2540C + 4 * byte_1D5ADF6C4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A25440 + 4 * byte_1D5ADF6BF[v4]))();
}

uint64_t sub_1D5A25440(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A25448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A25450);
  return result;
}

uint64_t sub_1D5A2545C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A25464);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A25468(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A25470(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InterfaceOrientation()
{
  return &type metadata for InterfaceOrientation;
}

uint64_t ArticleViewData.viewSessionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleViewData.viewSessionID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ArticleViewData.viewSessionID.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ArticleViewData __swiftcall ArticleViewData.init(viewSessionID:)(NewsAnalytics::ArticleViewData viewSessionID)
{
  NewsAnalytics::ArticleViewData *v1;

  *v1 = viewSessionID;
  return viewSessionID;
}

uint64_t sub_1D5A25504()
{
  return 0x7373655377656976;
}

uint64_t sub_1D5A25528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7373655377656976 && a2 == 0xED000044496E6F69)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5A255E0()
{
  sub_1D5A25724();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A25608()
{
  sub_1D5A25724();
  return sub_1D5AAEEE0();
}

uint64_t ArticleViewData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A2588C(0, &qword_1ED9CD6E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A25724();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5A25724()
{
  unint64_t result;

  result = qword_1ED9CD1B0;
  if (!qword_1ED9CD1B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF964, &type metadata for ArticleViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD1B0);
  }
  return result;
}

uint64_t ArticleViewData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D5A2588C(0, &qword_1ED9CD690, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A25724();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A2588C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A25724();
    v7 = a3(a1, &type metadata for ArticleViewData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A258F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ArticleViewData.init(from:)(a1, a2);
}

uint64_t sub_1D5A25904(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A2588C(0, &qword_1ED9CD6E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A25724();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for ArticleViewData()
{
  return &type metadata for ArticleViewData;
}

uint64_t storeEnumTagSinglePayload for ArticleViewData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A25A48 + 4 * byte_1D5ADF7EC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A25A68 + 4 * byte_1D5ADF7F1[v4]))();
}

_BYTE *sub_1D5A25A48(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A25A68(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A25A70(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A25A78(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A25A80(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A25A88(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ArticleViewData.CodingKeys()
{
  return &type metadata for ArticleViewData.CodingKeys;
}

unint64_t sub_1D5A25AA8()
{
  unint64_t result;

  result = qword_1EFF50DB0;
  if (!qword_1EFF50DB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF93C, &type metadata for ArticleViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50DB0);
  }
  return result;
}

unint64_t sub_1D5A25AF0()
{
  unint64_t result;

  result = qword_1ED9CCD90;
  if (!qword_1ED9CCD90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF8AC, &type metadata for ArticleViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CCD90);
  }
  return result;
}

unint64_t sub_1D5A25B38()
{
  unint64_t result;

  result = qword_1ED9CD1B8;
  if (!qword_1ED9CD1B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADF8D4, &type metadata for ArticleViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD1B8);
  }
  return result;
}

uint64_t sub_1D5A25B7C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCC00, MEMORY[0x1E0CF8078]);
}

uint64_t static AppSessionResignEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCF28, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC00, a1);
}

uint64_t sub_1D5A25BBC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCF30, MEMORY[0x1E0CF8380]);
}

uint64_t static AppSessionResignEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCF50, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCF30, a1);
}

uint64_t AppSessionResignEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AppSessionResignEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppSessionResignEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionResignEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionResignEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AppSessionResignEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CA6A0);
}

uint64_t AppSessionResignEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionResignEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionResignEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for AppSessionResignEvent(0);
  return nullsub_1;
}

uint64_t AppSessionResignEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionResignEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionResignEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionResignEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionResignEvent.orientationData.modify())(_QWORD)
{
  type metadata accessor for AppSessionResignEvent(0);
  return nullsub_1;
}

uint64_t AppSessionResignEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for AppSessionResignEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t AppSessionResignEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppSessionResignEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AppSessionResignEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AppSessionResignEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF50E28);
}

uint64_t AppSessionResignEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppSessionResignEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AppSessionResignEvent.Model.init(eventData:userBundleSubscriptionContextData:orientationData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  __int16 v17;

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v9 = a2[24];
  v10 = a2[25];
  v11 = *((_QWORD *)a2 + 4);
  v12 = *((_QWORD *)a2 + 5);
  v13 = a2[48];
  v17 = *a3;
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  result = type metadata accessor for AppSessionResignEvent.Model(0);
  v16 = a4 + *(int *)(result + 20);
  *(_BYTE *)v16 = v6;
  *(_QWORD *)(v16 + 8) = v7;
  *(_QWORD *)(v16 + 16) = v8;
  *(_BYTE *)(v16 + 24) = v9;
  *(_BYTE *)(v16 + 25) = v10;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 40) = v12;
  *(_BYTE *)(v16 + 48) = v13;
  *(_WORD *)(a4 + *(int *)(result + 24)) = v17;
  return result;
}

uint64_t sub_1D5A260AC()
{
  sub_1D5A262D8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A260D4()
{
  sub_1D5A262D8();
  return sub_1D5AAEEE0();
}

uint64_t AppSessionResignEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  __int16 v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;

  v3 = v1;
  sub_1D5A2665C(0, &qword_1EFF50DB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A262D8();
  sub_1D5AAEEC8();
  LOBYTE(v17) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for AppSessionResignEvent.Model(0);
    v11 = v3 + *(int *)(v10 + 20);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v17) = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    HIBYTE(v16) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v17 = *(_WORD *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v16) = 2;
    sub_1D57CA4E4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A262D8()
{
  unint64_t result;

  result = qword_1EFF50DC0;
  if (!qword_1EFF50DC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADFBA4, &type metadata for AppSessionResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50DC0);
  }
  return result;
}

uint64_t AppSessionResignEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  __int16 v28;
  __int128 v29;
  char v30;
  char v31;
  __int128 v32;
  char v33;
  char v34;

  v22 = a2;
  v3 = sub_1D5AADF98();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A2665C(0, &qword_1EFF50DC8, MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for AppSessionResignEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A262D8();
  v26 = v8;
  v12 = v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v9;
  v13 = (uint64_t)a1;
  v14 = v24;
  LOBYTE(v28) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v25, v3);
  v34 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v15 = v30;
  v16 = v31;
  v17 = v33;
  v18 = v27;
  v19 = &v11[*(int *)(v27 + 20)];
  *v19 = v28;
  *(_OWORD *)(v19 + 8) = v29;
  v19[24] = v15;
  v19[25] = v16;
  *((_OWORD *)v19 + 2) = v32;
  v19[48] = v17;
  v34 = 2;
  sub_1D57CA4A0();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v23);
  *(_WORD *)&v11[*(int *)(v18 + 24)] = v28;
  sub_1D5A266B8((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1D5A266FC((uint64_t)v11);
}

void sub_1D5A2665C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A262D8();
    v7 = a3(a1, &type metadata for AppSessionResignEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A266B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppSessionResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A266FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppSessionResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A26738@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionResignEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A2674C(_QWORD *a1)
{
  return AppSessionResignEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A26760@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCF28, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC00, a1);
}

uint64_t sub_1D5A26784@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCF50, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCF30, a1);
}

uint64_t getEnumTagSinglePayload for AppSessionResignEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A267B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AppSessionResignEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A26898(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for AppSessionResignEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A26984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AppSessionResignEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A26A1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = a2;
  return result;
}

uint64_t sub_1D5A26A98()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppSessionResignEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A26B60 + 4 * byte_1D5ADF9C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A26B94 + 4 * byte_1D5ADF9C0[v4]))();
}

uint64_t sub_1D5A26B94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A26B9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A26BA4);
  return result;
}

uint64_t sub_1D5A26BB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A26BB8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A26BBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A26BC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppSessionResignEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionResignEvent.Model.CodingKeys;
}

unint64_t sub_1D5A26BE4()
{
  unint64_t result;

  result = qword_1EFF50E68;
  if (!qword_1EFF50E68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADFB7C, &type metadata for AppSessionResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50E68);
  }
  return result;
}

unint64_t sub_1D5A26C2C()
{
  unint64_t result;

  result = qword_1EFF50E70;
  if (!qword_1EFF50E70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADFAEC, &type metadata for AppSessionResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50E70);
  }
  return result;
}

unint64_t sub_1D5A26C74()
{
  unint64_t result;

  result = qword_1EFF50E78;
  if (!qword_1EFF50E78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADFB14, &type metadata for AppSessionResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50E78);
  }
  return result;
}

uint64_t ExternalAnalyticsURLProvider.__allocating_init(queryItemsGenerators:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ExternalAnalyticsURLProvider.init(queryItemsGenerators:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t ExternalAnalyticsURLProvider.generateURL<A>(from:configuration:sessionID:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  _BYTE *v31;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a5;
  v8 = v7;
  v38 = a6;
  v35 = a2;
  v39 = a7;
  v12 = sub_1D5AAD734();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B76A8(0, (unint64_t *)&qword_1ED9C6F30, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v34 - v20;
  v36 = v8;
  v22 = sub_1D5A26F6C(v8, a1, a3, a4, v37, v38);
  if (v22)
  {
    v23 = v22;
    v24 = v39;
    sub_1D5AAD728();
    v25 = (_QWORD *)sub_1D5AAD71C();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_1D5A2706C(v35, v23, v25, v27, (uint64_t)v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D57CC7A0((uint64_t)v21, (uint64_t)v19);
    v28 = sub_1D5AAD668();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v19, 1, v28) == 1)
    {
      v30 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      sub_1D57C0394((uint64_t)v19, (unint64_t *)&qword_1ED9C6F30, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      sub_1D5A27A3C();
      swift_allocError();
      *v31 = 2;
      swift_willThrow();
      return sub_1D57C0394((uint64_t)v21, (unint64_t *)&qword_1ED9C6F30, v30);
    }
    else
    {
      sub_1D57C0394((uint64_t)v21, (unint64_t *)&qword_1ED9C6F30, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v24, v19, v28);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v24, 0, 1, v28);
    }
  }
  else
  {
    v33 = sub_1D5AAD668();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v39, 1, 1, v33);
  }
}

uint64_t sub_1D5A26F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 16);
  if (!*(_QWORD *)(v6 + 16))
    return 0;
  v11 = v6 + 32;
  swift_bridgeObjectRetain();
  sub_1D57B6254(v11, (uint64_t)v17);
  v13 = v18;
  v12 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(a2, a3, a4, a5, a6, v13, v12);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v14;
}

id sub_1D5A2706C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  void *v36;
  unsigned int (*v37)(char *, uint64_t, _QWORD *);
  id result;
  id v39;
  void *v40;
  unint64_t v41;
  uint64_t v42;
  BOOL v43;
  _QWORD *v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void *v57;
  _QWORD *v58;
  uint64_t (*v59)(uint64_t, uint64_t, _QWORD *);
  size_t v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, _QWORD *);
  char *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  void *v76;
  char *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t (*v94)(uint64_t, uint64_t, _QWORD *);
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  id v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;

  sub_1D57B76A8(0, (unint64_t *)&qword_1ED9C6F30, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v10);
  v97 = (char *)&v84 - v11;
  v12 = sub_1D5AAD668();
  v101 = *(_QWORD *)(v12 - 8);
  v102 = v12;
  MEMORY[0x1E0C80A78](v12);
  v93 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D5AAD560();
  v108 = *(_QWORD *)(v14 - 8);
  v109 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v107 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v106 = (char *)&v84 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v92 = (char *)&v84 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v91 = (char *)&v84 - v22;
  MEMORY[0x1E0C80A78](v21);
  v95 = (char *)&v84 - v23;
  sub_1D57B76A8(0, (unint64_t *)&unk_1ED9C6F20, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  v25 = MEMORY[0x1E0C80A78](v24);
  v104 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v84 - v27;
  v29 = (_QWORD *)sub_1D5AAD5A8();
  v30 = *(v29 - 1);
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v96 = (char *)&v84 - v34;
  v105 = a1;
  v35 = objc_msgSend(a1, sel_analyticsBaseUrl);
  if (!v35)
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56))(a5, 1, 1, v102);
  v36 = v35;
  v88 = v33;
  v89 = a2;
  sub_1D5AAE820();

  sub_1D5AAD59C();
  swift_bridgeObjectRelease();
  v37 = *(unsigned int (**)(char *, uint64_t, _QWORD *))(v30 + 48);
  if (v37(v28, 1, v29) == 1)
  {
    sub_1D57C0394((uint64_t)v28, (unint64_t *)&unk_1ED9C6F20, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56))(a5, 1, 1, v102);
  }
  v94 = (uint64_t (*)(uint64_t, uint64_t, _QWORD *))v37;
  (*(void (**)(char *, char *, _QWORD *))(v30 + 32))(v96, v28, v29);
  v39 = objc_msgSend(v105, sel_queryParameterConfigs);
  if (!v39 || (v40 = v39, v110 = 0, sub_1D5A27D84(), sub_1D5AAE940(), v40, (v41 = v110) == 0))
  {
    sub_1D5A27A80();
    v82 = v96;
    sub_1D5AAD578();
    sub_1D5AAD590();
    return (id)(*(uint64_t (**)(char *, _QWORD *))(v30 + 8))(v82, v29);
  }
  v100 = v110;
  if (v110 >> 62)
  {
LABEL_51:
    swift_bridgeObjectRetain();
    v41 = v100;
    v42 = sub_1D5AAEC04();
    swift_bridgeObjectRelease();
  }
  else
  {
    v42 = *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v84 = a5;
  v90 = v29;
  if (!v42)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    v83 = v96;
    sub_1D5AAD578();
    sub_1D5AAD590();
    return (id)(*(uint64_t (**)(char *, _QWORD *))(v30 + 8))(v83, v90);
  }
  v85 = a3;
  v86 = a4;
  v98 = v42;
  v99 = v41 & 0xC000000000000001;
  a3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  a5 = 4;
  v103 = v30;
  a4 = (uint64_t)v104;
  while (1)
  {
    if (v99)
      v44 = (_QWORD *)MEMORY[0x1D8278F6C](a5 - 4, v41);
    else
      v44 = *(id *)(v41 + 8 * a5);
    v29 = v44;
    v30 = a5 - 3;
    if (__OFADD__(a5 - 4, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    v45 = objc_msgSend(v105, sel_eventQueryParameterName, v84, v85, v86);
    if (!v45)
      break;
    v46 = v45;
    v47 = a4;
    v48 = sub_1D5AAE820();
    v50 = v49;

    v51 = objc_msgSend(v29, sel_name);
    if (!v51)
      goto LABEL_39;
    v52 = v51;
    v53 = sub_1D5AAE820();
    v55 = v54;

    if (v53 == v48 && v55 == v50)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v56 = sub_1D5AAEDE4();
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0)
      {
LABEL_39:
        swift_bridgeObjectRelease();
        break;
      }
    }
    v87 = v48;
    result = objc_msgSend(v29, sel_value);
    if (!result)
      goto LABEL_53;
    v57 = result;
    sub_1D5AAE820();

    a4 = v47;
    sub_1D5AAD59C();
    swift_bridgeObjectRelease();
    v58 = v90;
    v59 = v94;
    if (!v94(v47, 1, v90))
    {
      v110 = MEMORY[0x1E0DEE9D8];
      v60 = swift_bridgeObjectRetain();
      sub_1D5820354(v60);
      sub_1D5AAD53C();
      v61 = (_QWORD *)v110;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v61 = (_QWORD *)sub_1D5873060(0, v61[2] + 1, 1, v61);
      v63 = v61[2];
      v62 = v61[3];
      if (v63 >= v62 >> 1)
        v61 = (_QWORD *)sub_1D5873060(v62 > 1, v63 + 1, 1, v61);
      v61[2] = v63 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v108 + 32))((unint64_t)v61+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ *(_QWORD *)(v108 + 72) * v63, v95, v109);
      sub_1D5AAD578();
      v58 = v90;
      v59 = v94;
    }
    v64 = v59(v47, 1, v58);
    v65 = (uint64_t)v97;
    if (v64)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v97, 1, 1, v102);
    }
    else
    {
      v66 = v103;
      v67 = v88;
      (*(void (**)(char *, char *, _QWORD *))(v103 + 16))(v88, v104, v58);
      sub_1D5AAD590();
      v68 = *(void (**)(char *, _QWORD *))(v66 + 8);
      a4 = (uint64_t)v104;
      v68(v67, v58);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v65, 1, v102) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v93, v65, v102);
        sub_1D5AAD62C();
        v69 = v91;
        sub_1D5AAD53C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v92, v69, v109);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a3 = (_QWORD *)sub_1D5873060(0, a3[2] + 1, 1, a3);
        v71 = a3[2];
        v70 = a3[3];
        if (v71 >= v70 >> 1)
          a3 = (_QWORD *)sub_1D5873060(v70 > 1, v71 + 1, 1, a3);
        a3[2] = v71 + 1;
        v73 = v108;
        v72 = v109;
        (*(void (**)(unint64_t, char *, uint64_t))(v108 + 32))((unint64_t)a3+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(_QWORD *)(v108 + 72) * v71, v92, v109);

        (*(void (**)(char *, uint64_t))(v73 + 8))(v91, v72);
        (*(void (**)(char *, uint64_t))(v101 + 8))(v93, v102);
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();

    sub_1D57C0394(v65, (unint64_t *)&qword_1ED9C6F30, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
LABEL_13:
    sub_1D57C0394(a4, (unint64_t *)&unk_1ED9C6F20, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
LABEL_14:
    v41 = v100;
    ++a5;
    v43 = v30 == v98;
    v30 = v103;
    if (v43)
      goto LABEL_49;
  }
  result = objc_msgSend(v29, sel_name);
  if (result)
  {
    v74 = result;
    sub_1D5AAE820();

    v75 = objc_msgSend(v29, sel_value);
    if (v75)
    {
      v76 = v75;
      sub_1D5AAE820();

    }
    v77 = v106;
    sub_1D5AAD53C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v107, v77, v109);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      a3 = (_QWORD *)sub_1D5873060(0, a3[2] + 1, 1, a3);
    a4 = (uint64_t)v104;
    v79 = a3[2];
    v78 = a3[3];
    if (v79 >= v78 >> 1)
      a3 = (_QWORD *)sub_1D5873060(v78 > 1, v79 + 1, 1, a3);
    a3[2] = v79 + 1;
    v80 = v108;
    v81 = v109;
    (*(void (**)(unint64_t, char *, uint64_t))(v108 + 32))((unint64_t)a3+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v108 + 72) * v79, v107, v109);

    (*(void (**)(char *, uint64_t))(v80 + 8))(v106, v81);
    goto LABEL_14;
  }
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

unint64_t sub_1D5A27A3C()
{
  unint64_t result;

  result = qword_1EFF50E80;
  if (!qword_1EFF50E80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADFCFC, &type metadata for ExternalAnalyticsURLProvider.URLProviderError);
    atomic_store(result, (unint64_t *)&qword_1EFF50E80);
  }
  return result;
}

_QWORD *sub_1D5A27A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  size_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  _QWORD *v10;

  v0 = sub_1D5AAD560();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = swift_bridgeObjectRetain();
  sub_1D5820354(v4);
  sub_1D5AAD53C();
  v5 = v10;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = (_QWORD *)sub_1D5873060(0, v5[2] + 1, 1, v5);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = (_QWORD *)sub_1D5873060(v6 > 1, v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))((unint64_t)v5+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v7, v3, v0);
  return v5;
}

uint64_t ExternalAnalyticsURLProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ExternalAnalyticsURLProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D5A27C04@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return ExternalAnalyticsURLProvider.generateURL<A>(from:configuration:sessionID:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of ExternalAnalyticsURLProviderType.generateURL<A>(from:configuration:sessionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t type metadata accessor for ExternalAnalyticsURLProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ExternalAnalyticsURLProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExternalAnalyticsURLProvider.__allocating_init(queryItemsGenerators:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsURLProvider.URLProviderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A27CBC + 4 * byte_1D5ADFC05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A27CF0 + 4 * byte_1D5ADFC00[v4]))();
}

uint64_t sub_1D5A27CF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A27CF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A27D00);
  return result;
}

uint64_t sub_1D5A27D0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A27D14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A27D18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A27D20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsURLProvider.URLProviderError()
{
  return &type metadata for ExternalAnalyticsURLProvider.URLProviderError;
}

unint64_t sub_1D5A27D40()
{
  unint64_t result;

  result = qword_1EFF50E88;
  if (!qword_1EFF50E88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADFCD4, &type metadata for ExternalAnalyticsURLProvider.URLProviderError);
    atomic_store(result, (unint64_t *)&qword_1EFF50E88);
  }
  return result;
}

unint64_t sub_1D5A27D84()
{
  unint64_t result;

  result = qword_1ED9CC788;
  if (!qword_1ED9CC788)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CC788);
  }
  return result;
}

uint64_t HeartbeatData.init(userID:timestamp:eventID:osVersion:osBundleVersion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  int *v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;

  *a9 = a1;
  a9[1] = a2;
  v17 = (int *)type metadata accessor for HeartbeatData();
  v18 = (char *)a9 + v17[5];
  v19 = sub_1D5AAD710();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a3, v19);
  v21 = (_QWORD *)((char *)a9 + v17[6]);
  *v21 = a4;
  v21[1] = a5;
  v22 = (_QWORD *)((char *)a9 + v17[7]);
  *v22 = a6;
  v22[1] = a7;
  v23 = (_QWORD *)((char *)a9 + v17[8]);
  *v23 = a8;
  v23[1] = a10;
  return result;
}

uint64_t HeartbeatData.userID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.userID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.userID.modify())()
{
  return nullsub_1;
}

uint64_t HeartbeatData.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeartbeatData() + 20);
  v4 = sub_1D5AAD710();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeartbeatData.timestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeartbeatData() + 20);
  v4 = sub_1D5AAD710();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeartbeatData.timestamp.modify())(_QWORD)
{
  type metadata accessor for HeartbeatData();
  return nullsub_1;
}

uint64_t HeartbeatData.eventID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for HeartbeatData() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.eventID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for HeartbeatData() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.eventID.modify())(_QWORD)
{
  type metadata accessor for HeartbeatData();
  return nullsub_1;
}

uint64_t HeartbeatData.osVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for HeartbeatData() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.osVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for HeartbeatData() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.osVersion.modify())(_QWORD)
{
  type metadata accessor for HeartbeatData();
  return nullsub_1;
}

uint64_t HeartbeatData.osBundleVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for HeartbeatData() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.osBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for HeartbeatData() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.osBundleVersion.modify())(_QWORD)
{
  type metadata accessor for HeartbeatData();
  return nullsub_1;
}

uint64_t sub_1D5A28194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A28C78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A281B8()
{
  sub_1D57CAF94();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A281E0()
{
  sub_1D57CAF94();
  return sub_1D5AAEEE0();
}

uint64_t HeartbeatData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v31 = a2;
  v3 = sub_1D5AAD710();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57C5838(0, &qword_1EFF50E90, MEMORY[0x1E0DED048]);
  v34 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - v8;
  v10 = (int *)type metadata accessor for HeartbeatData();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CAF94();
  v35 = v9;
  v13 = (uint64_t)v36;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = v7;
  v36 = a1;
  v14 = v32;
  v15 = v33;
  v41 = 0;
  v16 = v34;
  *v12 = sub_1D5AAECA0();
  v12[1] = v17;
  v40 = 1;
  sub_1D57A8DE4(&qword_1EFF50E98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)v12 + v10[5], v5, v15);
  v39 = 2;
  v18 = sub_1D5AAECA0();
  v19 = (uint64_t *)((char *)v12 + v10[6]);
  *v19 = v18;
  v19[1] = v20;
  v38 = 3;
  v21 = sub_1D5AAECA0();
  v22 = (uint64_t *)((char *)v12 + v10[7]);
  *v22 = v21;
  v22[1] = v23;
  v37 = 4;
  v24 = sub_1D5AAECA0();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v16);
  v27 = (uint64_t *)((char *)v12 + v10[8]);
  *v27 = v24;
  v27[1] = v26;
  sub_1D589BA88((uint64_t)v12, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_1D5A285D0((uint64_t)v12);
}

uint64_t sub_1D5A285D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HeartbeatData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A2860C()
{
  return sub_1D57A8DE4(&qword_1EFF4ADE8, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatData, (uint64_t)&protocol conformance descriptor for HeartbeatData);
}

uint64_t sub_1D5A28638()
{
  return sub_1D57A8DE4(&qword_1ED9CEB50, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatData, (uint64_t)&protocol conformance descriptor for HeartbeatData);
}

uint64_t sub_1D5A28664@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HeartbeatData.init(from:)(a1, a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for HeartbeatData(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AAD710();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (uint64_t *)((char *)v4 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[8];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for HeartbeatData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for HeartbeatData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D5AAD710();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for HeartbeatData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AAD710();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for HeartbeatData(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AAD710();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for HeartbeatData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D5AAD710();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A28B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D5AAD710();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for HeartbeatData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A28BAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D5AAD710();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeartbeatData.CodingKeys()
{
  return &type metadata for HeartbeatData.CodingKeys;
}

unint64_t sub_1D5A28C34()
{
  unint64_t result;

  result = qword_1EFF50EA0;
  if (!qword_1EFF50EA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ADFECC, &type metadata for HeartbeatData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50EA0);
  }
  return result;
}

uint64_t sub_1D5A28C78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x444972657375 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449746E657665 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C646E7542736FLL && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

NewsAnalytics::SubscribeButtonTargetType_optional __swiftcall SubscribeButtonTargetType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SubscribeButtonTargetType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SubscribeButtonTargetType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A28F48 + 4 * byte_1D5ADFF50[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A28F48()
{
  return 0x6573616863727570;
}

uint64_t sub_1D5A28F6C()
{
  return 0x50676E69646E616CLL;
}

uint64_t sub_1D5A28F8C()
{
  return 1802398060;
}

uint64_t sub_1D5A28F9C()
{
  return 0x65676150706D61;
}

void sub_1D5A28FB0(char *a1)
{
  sub_1D5A36F70(*a1);
}

unint64_t sub_1D5A28FC0()
{
  unint64_t result;

  result = qword_1EFF50EA8;
  if (!qword_1EFF50EA8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribeButtonTargetType, &type metadata for SubscribeButtonTargetType);
    atomic_store(result, (unint64_t *)&qword_1EFF50EA8);
  }
  return result;
}

void sub_1D5A29004()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A29050()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A290E0()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A2911C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A29198()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A291E0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::SubscribeButtonTargetType_optional sub_1D5A29270(Swift::String *a1)
{
  return SubscribeButtonTargetType.init(rawValue:)(*a1);
}

uint64_t sub_1D5A2927C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5A292AC + 4 * byte_1D5ADFF64[*v0]))();
}

void sub_1D5A292AC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "purchaseSheet");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1D5A292D4(_QWORD *a1@<X8>)
{
  *a1 = 0x50676E69646E616CLL;
  a1[1] = 0xEB00000000656761;
}

void sub_1D5A292F8(_QWORD *a1@<X8>)
{
  *a1 = 1802398060;
  a1[1] = 0xE400000000000000;
}

void sub_1D5A2930C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x65676150706D61;
  a1[1] = v1;
}

uint64_t sub_1D5A29324()
{
  sub_1D5A29498();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A29380()
{
  sub_1D5A29498();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonTargetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A29418 + 4 * byte_1D5ADFF6E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A2944C + 4 * byte_1D5ADFF69[v4]))();
}

uint64_t sub_1D5A2944C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A29454(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A2945CLL);
  return result;
}

uint64_t sub_1D5A29468(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A29470);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A29474(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2947C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonTargetType()
{
  return &type metadata for SubscribeButtonTargetType;
}

unint64_t sub_1D5A29498()
{
  unint64_t result;

  result = qword_1EFF50EB0;
  if (!qword_1EFF50EB0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribeButtonTargetType, &type metadata for SubscribeButtonTargetType);
    atomic_store(result, (unint64_t *)&qword_1EFF50EB0);
  }
  return result;
}

NewsAnalytics::LiveActivityOrigination_optional __swiftcall LiveActivityOrigination.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::LiveActivityOrigination_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t LiveActivityOrigination.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A29564 + 4 * byte_1D5AE00A0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A29564()
{
  return 0x6163696669746F6ELL;
}

uint64_t sub_1D5A29584()
{
  return 0x6C69546F63736964;
}

uint64_t sub_1D5A295A0()
{
  return 0x6465626D45626577;
}

uint64_t sub_1D5A295B8()
{
  return 0x50676E69646E616CLL;
}

uint64_t sub_1D5A295D8()
{
  return 0x6B6E696C70656564;
}

void sub_1D5A295F0(char *a1)
{
  sub_1D5A37A98(*a1);
}

unint64_t sub_1D5A29600()
{
  unint64_t result;

  result = qword_1EFF50EB8;
  if (!qword_1EFF50EB8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityOrigination, &type metadata for LiveActivityOrigination);
    atomic_store(result, (unint64_t *)&qword_1EFF50EB8);
  }
  return result;
}

void sub_1D5A29644()
{
  char *v0;

  sub_1D5A81048(*v0);
}

void sub_1D5A2964C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A29688()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A29728(uint64_t a1)
{
  char *v1;

  sub_1D5AA9B2C(a1, *v1);
}

NewsAnalytics::LiveActivityOrigination_optional sub_1D5A29730(Swift::String *a1)
{
  return LiveActivityOrigination.init(rawValue:)(*a1);
}

uint64_t sub_1D5A2973C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5A2976C + 4 * byte_1D5AE00AC[*v0]))();
}

void sub_1D5A2976C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "notification");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1D5A29790(_QWORD *a1@<X8>)
{
  *a1 = 0x6C69546F63736964;
  a1[1] = 0xE900000000000065;
}

void sub_1D5A297B0(_QWORD *a1@<X8>)
{
  *a1 = 0x6465626D45626577;
  a1[1] = 0xE800000000000000;
}

void sub_1D5A297CC(_QWORD *a1@<X8>)
{
  *a1 = 0x50676E69646E616CLL;
  a1[1] = 0xEB00000000656761;
}

void sub_1D5A297F0(_QWORD *a1@<X8>)
{
  *a1 = 0x6B6E696C70656564;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1D5A2980C()
{
  sub_1D5A29980();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A29868()
{
  sub_1D5A29980();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for LiveActivityOrigination(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A29900 + 4 * byte_1D5AE00B7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5A29934 + 4 * byte_1D5AE00B2[v4]))();
}

uint64_t sub_1D5A29934(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2993C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A29944);
  return result;
}

uint64_t sub_1D5A29950(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A29958);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A2995C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A29964(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityOrigination()
{
  return &type metadata for LiveActivityOrigination;
}

unint64_t sub_1D5A29980()
{
  unint64_t result;

  result = qword_1EFF50EC0;
  if (!qword_1EFF50EC0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityOrigination, &type metadata for LiveActivityOrigination);
    atomic_store(result, (unint64_t *)&qword_1EFF50EC0);
  }
  return result;
}

uint64_t sub_1D5A299C4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t backgroundTask(withName:work:)(uint64_t a1, uint64_t a2, void (*a3)(void (*)(), uint64_t))
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v5 = (void *)sub_1D5AAE7FC();
  v6 = objc_msgSend(v4, sel_beginBackgroundTaskWithName_expirationHandler_, v5, 0);

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  a3(sub_1D5A29AB4, v7);
  return swift_release();
}

uint64_t sub_1D5A29AA4()
{
  return swift_deallocObject();
}

void sub_1D5A29AB4()
{
  uint64_t v0;

  sub_1D5A29DCC(*(_QWORD *)(v0 + 16));
}

uint64_t backgroundTask(withName:timeout:work:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  void *v16;
  id v17;
  void (*v18)(_BYTE *, uint64_t);
  void *v19;
  void *v20;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;

  v8 = sub_1D5AAE43C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v22[-v13];
  v23 = a4;
  v24 = a5;
  sub_1D5A29D74();
  swift_allocObject();
  sub_1D5AAE2C8();
  v15 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v16 = (void *)sub_1D5AAE7FC();
  v17 = objc_msgSend(v15, sel_beginBackgroundTaskWithName_expirationHandler_, v16, 0);

  sub_1D5AAE430();
  MEMORY[0x1D8278828](v12, a1);
  v18 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
  v18(v12, v8);
  v19 = (void *)sub_1D5AAE25C();
  sub_1D5AAE2BC();

  v18(v14, v8);
  sub_1D57C5A78();
  v20 = (void *)sub_1D5AAEA48();
  *(_QWORD *)(swift_allocObject() + 16) = v17;
  sub_1D5AAE2B0();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1D5A29CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t (*)(), uint64_t))
{
  uint64_t v8;
  uint64_t v9;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1D58DA1AC;
  *(_QWORD *)(v9 + 24) = v8;
  swift_retain();
  a5(sub_1D58DA1AC, v9);
  return swift_release();
}

uint64_t sub_1D5A29D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1D5A29CD8(a1, a2, a3, a4, *(void (**)(uint64_t (*)(), uint64_t))(v4 + 16));
}

void sub_1D5A29D74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CC630)
  {
    v0 = sub_1D5AAE2D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CC630);
  }
}

void sub_1D5A29DCC(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  objc_msgSend(v2, sel_endBackgroundTask_, a1);

}

uint64_t sub_1D5A29E28()
{
  return swift_deallocObject();
}

uint64_t sub_1D5A29E38()
{
  swift_release();
  return swift_deallocObject();
}

void __swiftcall ChannelData.init(channelID:adSupportedChannel:isBundleChannel:language:)(NewsAnalytics::ChannelData *__return_ptr retstr, Swift::String channelID, Swift::Bool adSupportedChannel, Swift::Bool isBundleChannel, Swift::String language)
{
  retstr->channelID = channelID;
  retstr->adSupportedChannel = adSupportedChannel;
  retstr->isBundleChannel = isBundleChannel;
  retstr->language = language;
}

uint64_t ChannelData.channelID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelData.channelID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ChannelData.channelID.modify())()
{
  return nullsub_1;
}

uint64_t ChannelData.adSupportedChannel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ChannelData.adSupportedChannel.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*ChannelData.adSupportedChannel.modify())()
{
  return nullsub_1;
}

uint64_t ChannelData.isBundleChannel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t ChannelData.isBundleChannel.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*ChannelData.isBundleChannel.modify())()
{
  return nullsub_1;
}

uint64_t ChannelData.language.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelData.language.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ChannelData.language.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A29F98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A29FCC + 4 * byte_1D5AE01E0[*v0]))(0x496C656E6E616863, 0xE900000000000044);
}

unint64_t sub_1D5A29FCC()
{
  return 0xD000000000000012;
}

uint64_t sub_1D5A29FE8()
{
  return 0x656C646E75427369;
}

uint64_t sub_1D5A2A00C()
{
  return 0x65676175676E616CLL;
}

uint64_t sub_1D5A2A024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A2A7E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A2A048()
{
  sub_1D5A2A238();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A2A070()
{
  sub_1D5A2A238();
  return sub_1D5AAEEE0();
}

uint64_t ChannelData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  int v12;
  uint64_t v13;
  int v14;
  char v15;
  char v16;
  char v17;
  char v18;

  sub_1D5A2A4A0(0, &qword_1ED9CC8B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v14 = *(unsigned __int8 *)(v1 + 16);
  v12 = *(unsigned __int8 *)(v1 + 17);
  v8 = *(_QWORD *)(v1 + 24);
  v11[0] = *(_QWORD *)(v1 + 32);
  v11[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A2A238();
  sub_1D5AAEEC8();
  v18 = 0;
  v9 = v13;
  sub_1D5AAED3C();
  if (!v9)
  {
    v17 = 1;
    sub_1D5AAED48();
    v16 = 2;
    sub_1D5AAED48();
    v15 = 3;
    sub_1D5AAED3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A2A238()
{
  unint64_t result;

  result = qword_1ED9C76B0;
  if (!qword_1ED9C76B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0364, &type metadata for ChannelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C76B0);
  }
  return result;
}

uint64_t ChannelData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  char v22;
  char v23;
  char v24;
  char v25;

  sub_1D5A2A4A0(0, &qword_1ED9CC7D0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A2A238();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v24 = 1;
  swift_bridgeObjectRetain();
  v21 = sub_1D5AAECAC();
  v23 = 2;
  v20 = sub_1D5AAECAC();
  v22 = 3;
  v13 = sub_1D5AAECA0();
  v16 = v15;
  v21 &= 1u;
  v20 &= 1u;
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18 = v13;
  v17(v9, v6);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v21;
  *(_BYTE *)(a2 + 17) = v20;
  *(_QWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D5A2A4A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A2A238();
    v7 = a3(a1, &type metadata for ChannelData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A2A504@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ChannelData.init(from:)(a1, a2);
}

uint64_t sub_1D5A2A518(_QWORD *a1)
{
  return ChannelData.encode(to:)(a1);
}

uint64_t initializeWithCopy for ChannelData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ChannelData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ChannelData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for ChannelData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5A2A68C + 4 * byte_1D5AE01E9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5A2A6C0 + 4 * byte_1D5AE01E4[v4]))();
}

uint64_t sub_1D5A2A6C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2A6C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A2A6D0);
  return result;
}

uint64_t sub_1D5A2A6DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A2A6E4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5A2A6E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2A6F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChannelData.CodingKeys()
{
  return &type metadata for ChannelData.CodingKeys;
}

unint64_t sub_1D5A2A710()
{
  unint64_t result;

  result = qword_1EFF50EC8;
  if (!qword_1EFF50EC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE033C, &type metadata for ChannelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50EC8);
  }
  return result;
}

unint64_t sub_1D5A2A758()
{
  unint64_t result;

  result = qword_1ED9C76C0;
  if (!qword_1ED9C76C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE02AC, &type metadata for ChannelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C76C0);
  }
  return result;
}

unint64_t sub_1D5A2A7A0()
{
  unint64_t result;

  result = qword_1ED9C76B8;
  if (!qword_1ED9C76B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE02D4, &type metadata for ChannelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C76B8);
  }
  return result;
}

uint64_t sub_1D5A2A7E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x496C656E6E616863 && a2 == 0xE900000000000044;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF1F80 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C646E75427369 && a2 == 0xEF6C656E6E616843 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void AppLaunchTakeoverTriggerData.result.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AppLaunchTakeoverTriggerData.result.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AppLaunchTakeoverTriggerData.result.modify())()
{
  return nullsub_1;
}

uint64_t AppLaunchTakeoverTriggerData.articleId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLaunchTakeoverTriggerData.articleId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*AppLaunchTakeoverTriggerData.articleId.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AppLaunchTakeoverTriggerData __swiftcall AppLaunchTakeoverTriggerData.init(result:articleId:)(NewsAnalytics::AppLaunchTakeoverTriggerResult result, Swift::String_optional articleId)
{
  uint64_t v2;
  NewsAnalytics::AppLaunchTakeoverTriggerData v3;

  *(_BYTE *)v2 = *(_BYTE *)result;
  *(Swift::String_optional *)(v2 + 8) = articleId;
  v3.articleId = articleId;
  v3.result = result;
  return v3;
}

uint64_t sub_1D5A2AA6C()
{
  _BYTE *v0;

  if (*v0)
    return 0x49656C6369747261;
  else
    return 0x746C75736572;
}

uint64_t sub_1D5A2AAA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A2B188(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A2AACC()
{
  sub_1D5A2AC60();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A2AAF4()
{
  sub_1D5A2AC60();
  return sub_1D5AAEEE0();
}

uint64_t AppLaunchTakeoverTriggerData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  sub_1D5A2AE7C(0, &qword_1ED9D1618, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v12[0] = *((_QWORD *)v1 + 2);
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A2AC60();
  sub_1D5AAEEC8();
  v15 = v9;
  v14 = 0;
  sub_1D5A2ACA4();
  sub_1D5AAED6C();
  if (!v2)
  {
    v13 = 1;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5A2AC60()
{
  unint64_t result;

  result = qword_1ED9D1568;
  if (!qword_1ED9D1568)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0550, &type metadata for AppLaunchTakeoverTriggerData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1568);
  }
  return result;
}

unint64_t sub_1D5A2ACA4()
{
  unint64_t result;

  result = qword_1ED9D15C8;
  if (!qword_1ED9D15C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppLaunchTakeoverTriggerResult, &type metadata for AppLaunchTakeoverTriggerResult);
    atomic_store(result, (unint64_t *)&qword_1ED9D15C8);
  }
  return result;
}

uint64_t AppLaunchTakeoverTriggerData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1D5A2AE7C(0, &qword_1EFF50ED0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A2AC60();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v17 = 0;
    sub_1D5A2AED8();
    sub_1D5AAECD0();
    v10 = v18;
    v16 = 1;
    v12 = sub_1D5AAEC58();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D5A2AE7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A2AC60();
    v7 = a3(a1, &type metadata for AppLaunchTakeoverTriggerData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A2AED8()
{
  unint64_t result;

  result = qword_1EFF50ED8;
  if (!qword_1EFF50ED8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppLaunchTakeoverTriggerResult, &type metadata for AppLaunchTakeoverTriggerResult);
    atomic_store(result, (unint64_t *)&qword_1EFF50ED8);
  }
  return result;
}

unint64_t sub_1D5A2AF20()
{
  unint64_t result;

  result = qword_1ED9D13B8;
  if (!qword_1ED9D13B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppLaunchTakeoverTriggerData, &type metadata for AppLaunchTakeoverTriggerData);
    atomic_store(result, (unint64_t *)&qword_1ED9D13B8);
  }
  return result;
}

unint64_t sub_1D5A2AF68()
{
  unint64_t result;

  result = qword_1ED9D1580;
  if (!qword_1ED9D1580)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppLaunchTakeoverTriggerData, &type metadata for AppLaunchTakeoverTriggerData);
    atomic_store(result, (unint64_t *)&qword_1ED9D1580);
  }
  return result;
}

uint64_t sub_1D5A2AFAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppLaunchTakeoverTriggerData.init(from:)(a1, a2);
}

uint64_t sub_1D5A2AFC0(_QWORD *a1)
{
  return AppLaunchTakeoverTriggerData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for AppLaunchTakeoverTriggerData()
{
  return &type metadata for AppLaunchTakeoverTriggerData;
}

uint64_t storeEnumTagSinglePayload for AppLaunchTakeoverTriggerData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5A2B030 + 4 * byte_1D5AE03C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5A2B064 + 4 * byte_1D5AE03C0[v4]))();
}

uint64_t sub_1D5A2B064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2B06C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A2B074);
  return result;
}

uint64_t sub_1D5A2B080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A2B088);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5A2B08C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2B094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppLaunchTakeoverTriggerData.CodingKeys()
{
  return &type metadata for AppLaunchTakeoverTriggerData.CodingKeys;
}

unint64_t sub_1D5A2B0B4()
{
  unint64_t result;

  result = qword_1EFF50EE0;
  if (!qword_1EFF50EE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0528, &type metadata for AppLaunchTakeoverTriggerData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50EE0);
  }
  return result;
}

unint64_t sub_1D5A2B0FC()
{
  unint64_t result;

  result = qword_1ED9D1578;
  if (!qword_1ED9D1578)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0498, &type metadata for AppLaunchTakeoverTriggerData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1578);
  }
  return result;
}

unint64_t sub_1D5A2B144()
{
  unint64_t result;

  result = qword_1ED9D1570;
  if (!qword_1ED9D1570)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE04C0, &type metadata for AppLaunchTakeoverTriggerData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1570);
  }
  return result;
}

uint64_t sub_1D5A2B188(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746C75736572 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49656C6369747261 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D5A2B27C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  _QWORD v16[12];

  v16[11] = *MEMORY[0x1E0C80C00];
  v5 = sub_1D5AAE778();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1D5AAE76C();
  v16[0] = *(_QWORD *)(v6 - 8);
  v16[1] = v6;
  MEMORY[0x1E0C80A78](v6);
  v16[2] = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D5AAE844();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A2B888(a1, a2, v2);
  sub_1D5AAE838();
  sub_1D5AAE82C();
  v13 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v13 >> 60 != 15)
  {
    sub_1D57A8DE4((unint64_t *)&unk_1ED9D1330, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
    sub_1D5AAE760();
    __asm { BR              X10 }
  }
  sub_1D57B3530();
  v14 = (void *)sub_1D5AAEAC0();
  sub_1D5AAEA0C();
  sub_1D5AAE328();

  return 0;
}

uint64_t sub_1D5A2B888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;

  if (a2)
  {
    v5 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 40)) + 24);
    swift_bridgeObjectRetain();
    sub_1D5AAE898();
    sub_1D5AAE898();
    return v5;
  }
  else
  {
    v3 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 40)) + 24);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_1D5A2B924()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

_BYTE *sub_1D5A2B948@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1D5A2BA94(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1D5A2BB54((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1D5A2BBCC((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1D5A2B9BC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1D5AAD5C0();
  if (!result || (result = sub_1D5AAD5D8(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1D5AAD5CC();
      sub_1D5AAE778();
      sub_1D57A8DE4((unint64_t *)&unk_1ED9D1330, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
      return sub_1D5AAE748();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D5A2BA80(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1D581B6EC(a1, a2);
  return a1;
}

uint64_t sub_1D5A2BA94(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1D5A2BB54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1D5AAD5E4();
  swift_allocObject();
  result = sub_1D5AAD5B4();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D5AAD680();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1D5A2BBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1D5AAD5E4();
  swift_allocObject();
  result = sub_1D5AAD5B4();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

NewsAnalytics::ArticleConcernContentType_optional __swiftcall ArticleConcernContentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ArticleConcernContentType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ArticleConcernContentType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D5A2BCD8 + 4 * byte_1D5AE05E0[*v0]))(0xD000000000000011, 0x80000001D5AEC200);
}

uint64_t sub_1D5A2BCD8(uint64_t a1)
{
  return a1 + 6;
}

void sub_1D5A2BD20(char *a1)
{
  sub_1D5A37218(*a1);
}

unint64_t sub_1D5A2BD30()
{
  unint64_t result;

  result = qword_1EFF50EF0;
  if (!qword_1EFF50EF0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleConcernContentType, &type metadata for ArticleConcernContentType);
    atomic_store(result, (unint64_t *)&qword_1EFF50EF0);
  }
  return result;
}

void sub_1D5A2BD74()
{
  char *v0;

  sub_1D5A8114C(*v0);
}

void sub_1D5A2BD7C(uint64_t a1)
{
  char *v1;

  sub_1D5AA8214(a1, *v1);
}

void sub_1D5A2BD84(uint64_t a1)
{
  char *v1;

  sub_1D5AA9CEC(a1, *v1);
}

NewsAnalytics::ArticleConcernContentType_optional sub_1D5A2BD8C(Swift::String *a1)
{
  return ArticleConcernContentType.init(rawValue:)(*a1);
}

uint64_t sub_1D5A2BD98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ArticleConcernContentType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D5A2BDBC()
{
  sub_1D5A2BF30();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A2BE18()
{
  sub_1D5A2BF30();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for ArticleConcernContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5A2BEB0 + 4 * byte_1D5AE05E9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5A2BEE4 + 4 * byte_1D5AE05E4[v4]))();
}

uint64_t sub_1D5A2BEE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2BEEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A2BEF4);
  return result;
}

uint64_t sub_1D5A2BF00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A2BF08);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5A2BF0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2BF14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleConcernContentType()
{
  return &type metadata for ArticleConcernContentType;
}

unint64_t sub_1D5A2BF30()
{
  unint64_t result;

  result = qword_1EFF50EF8;
  if (!qword_1EFF50EF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleConcernContentType, &type metadata for ArticleConcernContentType);
    atomic_store(result, (unint64_t *)&qword_1EFF50EF8);
  }
  return result;
}

uint64_t sub_1D5A2BF74(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF50F00, MEMORY[0x1E0CF8078]);
}

uint64_t static AudioUpsellMessageCompleted.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47428, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50F00, a1);
}

uint64_t sub_1D5A2BFB4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF50F18, MEMORY[0x1E0CF8380]);
}

uint64_t static AudioUpsellMessageCompleted.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47430, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50F18, a1);
}

uint64_t AudioUpsellMessageCompleted.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AudioUpsellMessageCompleted.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AudioUpsellMessageCompleted.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioUpsellMessageCompleted.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AudioUpsellMessageCompleted(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF50FA0);
}

uint64_t AudioUpsellMessageCompleted.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioUpsellMessageCompleted.articleData.modify())(_QWORD)
{
  type metadata accessor for AudioUpsellMessageCompleted(0);
  return nullsub_1;
}

uint64_t AudioUpsellMessageCompleted.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioUpsellMessageCompleted.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioUpsellMessageCompleted.channelData.modify())(_QWORD)
{
  type metadata accessor for AudioUpsellMessageCompleted(0);
  return nullsub_1;
}

uint64_t AudioUpsellMessageCompleted.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioUpsellMessageCompleted.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioUpsellMessageCompleted.feedData.modify())(_QWORD)
{
  type metadata accessor for AudioUpsellMessageCompleted(0);
  return nullsub_1;
}

uint64_t AudioUpsellMessageCompleted.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioUpsellMessageCompleted.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioUpsellMessageCompleted.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for AudioUpsellMessageCompleted(0);
  return nullsub_1;
}

uint64_t AudioUpsellMessageCompleted.upsellVariantData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted(0) + 36);
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioUpsellMessageCompleted.upsellVariantData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted(0) + 36);
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioUpsellMessageCompleted.upsellVariantData.modify())(_QWORD)
{
  type metadata accessor for AudioUpsellMessageCompleted(0);
  return nullsub_1;
}

uint64_t AudioUpsellMessageCompleted.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AudioUpsellMessageCompleted(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v6, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v6, v15);
}

uint64_t AudioUpsellMessageCompleted.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AudioUpsellMessageCompleted.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for AudioUpsellMessageCompleted.Model(0);
  sub_1D580C534(v1 + *(int *)(v3 + 20), (uint64_t)v5);
  sub_1D580C534((uint64_t)v5, a1);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t type metadata accessor for AudioUpsellMessageCompleted.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF51040);
}

uint64_t AudioUpsellMessageCompleted.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t AudioUpsellMessageCompleted.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t AudioUpsellMessageCompleted.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted.Model(0) + 32));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AudioUpsellMessageCompleted.Model.upsellVariantData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AudioUpsellMessageCompleted.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

__n128 AudioUpsellMessageCompleted.Model.init(eventData:articleData:channelData:feedData:userBundleSubscriptionContextData:upsellVariantData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __n128 *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  __n128 *v22;
  __n128 result;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[144];

  sub_1D580C534(a2, (uint64_t)v34);
  v26 = a3[1];
  v27 = *a3;
  v13 = *((_QWORD *)a3 + 4);
  v28 = *a4;
  v14 = a4[1].n128_u64[0];
  v15 = *a5;
  v16 = *((_QWORD *)a5 + 1);
  v17 = *((_QWORD *)a5 + 2);
  v18 = a5[24];
  v31 = a5[25];
  v29 = *((_QWORD *)a5 + 5);
  v30 = *((_QWORD *)a5 + 4);
  LOBYTE(a5) = a5[48];
  v32 = a6[1];
  v33 = *a6;
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a7, a1, v19);
  v20 = (int *)type metadata accessor for AudioUpsellMessageCompleted.Model(0);
  sub_1D580C534((uint64_t)v34, a7 + v20[5]);
  v21 = a7 + v20[6];
  *(_OWORD *)v21 = v27;
  *(_OWORD *)(v21 + 16) = v26;
  *(_QWORD *)(v21 + 32) = v13;
  v22 = (__n128 *)(a7 + v20[7]);
  result = v28;
  *v22 = v28;
  v22[1].n128_u64[0] = v14;
  v24 = a7 + v20[8];
  *(_BYTE *)v24 = v15;
  *(_QWORD *)(v24 + 8) = v16;
  *(_QWORD *)(v24 + 16) = v17;
  *(_BYTE *)(v24 + 24) = v18;
  *(_BYTE *)(v24 + 25) = v31;
  *(_QWORD *)(v24 + 32) = v30;
  *(_QWORD *)(v24 + 40) = v29;
  *(_BYTE *)(v24 + 48) = (_BYTE)a5;
  v25 = (_QWORD *)(a7 + v20[9]);
  *v25 = v33;
  v25[1] = v32;
  return result;
}

uint64_t sub_1D5A2C9F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A2CA2C + 4 * byte_1D5AE0720[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A2CA2C()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D5A2CA60()
{
  return 0x6174614464656566;
}

unint64_t sub_1D5A2CA78()
{
  return 0xD000000000000021;
}

unint64_t sub_1D5A2CA98()
{
  return 0xD000000000000011;
}

uint64_t sub_1D5A2CAB4()
{
  unsigned __int8 *v0;

  return sub_1D5A2C9F4(*v0);
}

uint64_t sub_1D5A2CABC()
{
  sub_1D5A2CDE8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A2CAE4()
{
  sub_1D5A2CDE8();
  return sub_1D5AAEEE0();
}

uint64_t AudioUpsellMessageCompleted.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  _OWORD v21[2];
  __int128 v22;
  char v23;
  _BYTE v24[144];
  char v25;
  char v26;

  v3 = v1;
  sub_1D5A2D314(0, &qword_1EFF50F30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A2CDE8();
  sub_1D5AAEEC8();
  v26 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AudioUpsellMessageCompleted.Model(0);
    sub_1D580C534(v3 + v10[5], (uint64_t)v24);
    sub_1D580C534((uint64_t)v24, (uint64_t)v21);
    v25 = 1;
    sub_1D57CB940();
    sub_1D5AAED18();
    v11 = v3 + v10[6];
    v12 = *(_QWORD *)(v11 + 32);
    v13 = *(_OWORD *)(v11 + 16);
    v21[0] = *(_OWORD *)v11;
    v21[1] = v13;
    *(_QWORD *)&v22 = v12;
    v25 = 2;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v14 = v3 + v10[7];
    v15 = *(_QWORD *)(v14 + 16);
    v21[0] = *(_OWORD *)v14;
    *(_QWORD *)&v21[1] = v15;
    v25 = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v16 = v3 + v10[8];
    v17 = *(_BYTE *)(v16 + 24);
    v18 = *(_BYTE *)(v16 + 25);
    v19 = *(_BYTE *)(v16 + 48);
    LOBYTE(v21[0]) = *(_BYTE *)v16;
    *(_OWORD *)((char *)v21 + 8) = *(_OWORD *)(v16 + 8);
    BYTE8(v21[1]) = v17;
    BYTE9(v21[1]) = v18;
    v22 = *(_OWORD *)(v16 + 32);
    v23 = v19;
    v25 = 4;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v21[0] = *(_OWORD *)(v3 + v10[9]);
    v25 = 5;
    sub_1D59AE3CC();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A2CDE8()
{
  unint64_t result;

  result = qword_1EFF50F38;
  if (!qword_1EFF50F38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0984, &type metadata for AudioUpsellMessageCompleted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF50F38);
  }
  return result;
}

uint64_t AudioUpsellMessageCompleted.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  char v36;
  _BYTE v37[136];
  char v38[144];
  char v39;
  char v40;

  v27 = a2;
  v3 = sub_1D5AADF98();
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A2D314(0, &qword_1EFF50F40, MEMORY[0x1E0DED048]);
  v31 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  v9 = (int *)type metadata accessor for AudioUpsellMessageCompleted.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D5A2CDE8();
  v30 = v8;
  v13 = v33;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  v14 = v6;
  v15 = v28;
  v38[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v29, v3);
  v40 = 1;
  sub_1D57CB8FC();
  sub_1D5AAEC7C();
  sub_1D580C534((uint64_t)v38, (uint64_t)v37);
  sub_1D580C534((uint64_t)v37, (uint64_t)&v11[v9[5]]);
  v39 = 2;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v16 = v35;
  v17 = &v11[v9[6]];
  v18 = v34[1];
  *(_OWORD *)v17 = v34[0];
  *((_OWORD *)v17 + 1) = v18;
  *((_QWORD *)v17 + 4) = v16;
  v39 = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v19 = *(_QWORD *)&v34[1];
  v20 = &v11[v9[7]];
  *(_OWORD *)v20 = v34[0];
  *((_QWORD *)v20 + 2) = v19;
  v39 = 4;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v21 = BYTE8(v34[1]);
  v22 = BYTE9(v34[1]);
  v23 = v36;
  v24 = &v11[MEMORY[0x20]];
  *v24 = v34[0];
  *(_OWORD *)(v24 + 8) = *(_OWORD *)((char *)v34 + 8);
  v24[24] = v21;
  v24[25] = v22;
  *((_OWORD *)v24 + 2) = v35;
  v24[48] = v23;
  v39 = 5;
  sub_1D59AE384();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v30, v31);
  *(_OWORD *)&v11[MEMORY[0x24]] = v34[0];
  sub_1D5A2D370((uint64_t)v11, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1D5A2D3B4((uint64_t)v11);
}

void sub_1D5A2D314(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A2CDE8();
    v7 = a3(a1, &type metadata for AudioUpsellMessageCompleted.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A2D370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioUpsellMessageCompleted.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A2D3B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioUpsellMessageCompleted.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A2D3F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioUpsellMessageCompleted.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A2D404(_QWORD *a1)
{
  return AudioUpsellMessageCompleted.Model.encode(to:)(a1);
}

uint64_t sub_1D5A2D418@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47428, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF50F00, a1);
}

uint64_t sub_1D5A2D43C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47430, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF50F18, a1);
}

uint64_t getEnumTagSinglePayload for AudioUpsellMessageCompleted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A2D46C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AudioUpsellMessageCompleted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A2D61C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF50538, (void (*)(void))sub_1D59AE384, (void (*)(void))sub_1D59AE3CC);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for AudioUpsellMessageCompleted.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A2D7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioUpsellMessageCompleted.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A2D86C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  return result;
}

uint64_t sub_1D5A2D8E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioUpsellMessageCompleted.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A2D9CC + 4 * byte_1D5AE072B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5A2DA00 + 4 * byte_1D5AE0726[v4]))();
}

uint64_t sub_1D5A2DA00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2DA08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A2DA10);
  return result;
}

uint64_t sub_1D5A2DA1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A2DA24);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A2DA28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2DA30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioUpsellMessageCompleted.Model.CodingKeys()
{
  return &type metadata for AudioUpsellMessageCompleted.Model.CodingKeys;
}

unint64_t sub_1D5A2DA50()
{
  unint64_t result;

  result = qword_1EFF51088;
  if (!qword_1EFF51088)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE095C, &type metadata for AudioUpsellMessageCompleted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51088);
  }
  return result;
}

unint64_t sub_1D5A2DA98()
{
  unint64_t result;

  result = qword_1EFF51090;
  if (!qword_1EFF51090)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE08CC, &type metadata for AudioUpsellMessageCompleted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51090);
  }
  return result;
}

unint64_t sub_1D5A2DAE0()
{
  unint64_t result;

  result = qword_1EFF51098;
  if (!qword_1EFF51098)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE08F4, &type metadata for AudioUpsellMessageCompleted.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51098);
  }
  return result;
}

NewsAnalytics::IssueType_optional __swiftcall IssueType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::IssueType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t IssueType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 6712929;
  if (*v0 != 1)
    v1 = 6710384;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5A2DC04(char *a1, unsigned __int8 *a2)
{
  return sub_1D5A351DC(*a1, *a2);
}

unint64_t sub_1D5A2DC14()
{
  unint64_t result;

  result = qword_1EFF51110;
  if (!qword_1EFF51110)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueType, &type metadata for IssueType);
    atomic_store(result, (unint64_t *)&qword_1EFF51110);
  }
  return result;
}

uint64_t sub_1D5A2DC58()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A2DCEC()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A2DD5C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::IssueType_optional sub_1D5A2DDEC(Swift::String *a1)
{
  return IssueType.init(rawValue:)(*a1);
}

void sub_1D5A2DDF8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 6712929;
  if (v2 != 1)
    v4 = 6710384;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE300000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1D5A2DE4C()
{
  sub_1D5A2DFC0();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A2DEA8()
{
  sub_1D5A2DFC0();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for IssueType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A2DF40 + 4 * byte_1D5AE09D9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A2DF74 + 4 * byte_1D5AE09D4[v4]))();
}

uint64_t sub_1D5A2DF74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2DF7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A2DF84);
  return result;
}

uint64_t sub_1D5A2DF90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A2DF98);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A2DF9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A2DFA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueType()
{
  return &type metadata for IssueType;
}

unint64_t sub_1D5A2DFC0()
{
  unint64_t result;

  result = qword_1ED9CC598;
  if (!qword_1ED9CC598)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueType, &type metadata for IssueType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC598);
  }
  return result;
}

double ScienceDataFactory.scienceData(for:scoringContext:)@<D0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  void *v4;
  double result;
  _BYTE v11[280];
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v3 = sub_1D5A2E138(a1);
  if (v3)
  {
    v4 = v3;
    FCFeedPersonalizedItemScoreProfile.scienceData.getter((uint64_t)v11);

    memcpy(a2, v11, 0x111uLL);
  }
  else
  {
    v11[0] = 1;
    v20 = 1;
    v19 = 1;
    v18 = 1;
    v17 = 1;
    v16 = 1;
    v15 = 1;
    v14 = 1;
    v13 = 1;
    v12 = 1;
    a2[1] = 0;
    a2[2] = 0;
    *a2 = 0;
    __asm { FMOV            V0.2D, #1.0 }
    *(_OWORD *)(a2 + 3) = _Q0;
    a2[6] = 0;
    a2[7] = 0;
    a2[5] = 0;
    result = 1.0;
    *((_OWORD *)a2 + 4) = xmmword_1D5AB7BA0;
    a2[10] = 0x3FF0000000000000;
    a2[11] = 0;
    a2[12] = 0;
    a2[13] = 0;
    a2[14] = MEMORY[0x1E0DEE9D8];
    a2[15] = 0;
    *((_BYTE *)a2 + 128) = v11[0];
    a2[17] = 0;
    *((_BYTE *)a2 + 144) = v20;
    a2[19] = 0;
    *((_BYTE *)a2 + 160) = v19;
    a2[21] = 0;
    *((_BYTE *)a2 + 176) = v18;
    a2[23] = 0;
    *((_BYTE *)a2 + 192) = v17;
    a2[25] = 0;
    *((_BYTE *)a2 + 208) = v16;
    a2[27] = 0;
    *((_BYTE *)a2 + 224) = v15;
    a2[29] = 0;
    *((_BYTE *)a2 + 240) = v14;
    a2[31] = 0;
    *((_BYTE *)a2 + 256) = v13;
    a2[33] = 0;
    *((_BYTE *)a2 + 272) = v12;
  }
  return result;
}

id sub_1D5A2E138(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  sub_1D5A2E384();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AAE4C0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_scoreProfile);
  if (v10)
    return v10;
  v12 = v1[5];
  v17[0] = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v12);
  sub_1D5A2E3D8();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D5AE0AF0;
  *(_QWORD *)(v13 + 32) = a1;
  v17[1] = v13;
  sub_1D5AAE964();
  swift_unknownObjectRetain();
  v14 = sub_1D5AAE574();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v14 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    v15 = 0;
  }
  else
  {
    v15 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v15, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D5A2E430((uint64_t)v5);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v11 = sub_1D5AAE4B4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return (id)v11;
}

uint64_t ScienceDataFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ScienceDataFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t method lookup function for ScienceDataFactory()
{
  return swift_lookUpClassMethod();
}

void sub_1D5A2E384()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CC638)
  {
    sub_1D5AAE4C0();
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CC638);
  }
}

void sub_1D5A2E3D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9D0E00)
  {
    v0 = sub_1D5AAEDB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9D0E00);
  }
}

uint64_t sub_1D5A2E430(uint64_t a1)
{
  uint64_t v2;

  sub_1D5A2E384();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void GroupData.groupLocation.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *GroupData.groupLocation.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*GroupData.groupLocation.modify())()
{
  return nullsub_1;
}

_BYTE *GroupData.groupType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*GroupData.groupType.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GroupData.groupID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*GroupData.groupID.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24);
}

uint64_t GroupData.groupCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*GroupData.groupCount.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupPosition.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 28);
}

uint64_t GroupData.groupPosition.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 28) = result;
  return result;
}

uint64_t (*GroupData.groupPosition.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupedArticleIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupData.groupedArticleIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*GroupData.groupedArticleIDs.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupedIssueIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupData.groupedIssueIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*GroupData.groupedIssueIDs.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupedTagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupData.groupedTagIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*GroupData.groupedTagIDs.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.curatedSubtype.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GroupData.curatedSubtype.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*GroupData.curatedSubtype.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.layoutIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupData.layoutIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*GroupData.layoutIDs.modify())()
{
  return nullsub_1;
}

void GroupData.formationReason.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 80);
}

_BYTE *GroupData.formationReason.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = *result;
  return result;
}

uint64_t (*GroupData.formationReason.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupBackingTagId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GroupData.groupBackingTagId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*GroupData.groupBackingTagId.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.personalizationScore.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

uint64_t GroupData.personalizationScore.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = result;
  *(_BYTE *)(v2 + 112) = a2 & 1;
  return result;
}

uint64_t (*GroupData.personalizationScore.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.competingGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupData.competingGroups.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 120) = a1;
  return result;
}

uint64_t (*GroupData.competingGroups.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupedAuxiliaryData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 128);
  return swift_bridgeObjectRetain();
}

uint64_t GroupData.groupedAuxiliaryData.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 128) = v2;
  return result;
}

uint64_t (*GroupData.groupedAuxiliaryData.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A2E818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A2F390(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A2E83C()
{
  sub_1D57B5858();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A2E864()
{
  sub_1D57B5858();
  return sub_1D5AAEEE0();
}

uint64_t GroupData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _QWORD v58[3];
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  _BYTE v68[7];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  _BYTE v73[7];
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  _BYTE v78[7];
  char v79;
  _BYTE v80[11];
  __int16 v81;
  uint64_t v82;

  sub_1D57B5744(0, &qword_1ED9CC880, MEMORY[0x1E0DED048]);
  v82 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - v7;
  v79 = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B5858();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v47 = a1;
    v48 = v6;
    LOBYTE(v49) = 0;
    sub_1D5A2F258();
    sub_1D5AAECD0();
    v9 = LOBYTE(v58[0]);
    LOBYTE(v49) = 1;
    sub_1D5922208();
    sub_1D5AAECD0();
    v10 = LOBYTE(v58[0]);
    LOBYTE(v58[0]) = 2;
    v11 = sub_1D5AAECA0();
    v13 = v12;
    v44 = v10;
    v43 = v11;
    LOBYTE(v58[0]) = 3;
    swift_bridgeObjectRetain();
    v41 = sub_1D5AAECDC();
    v42 = v13;
    LOBYTE(v58[0]) = 4;
    v40 = sub_1D5AAECDC();
    sub_1D57B5700(0, (unint64_t *)&qword_1ED9CC6B0);
    LOBYTE(v49) = 5;
    sub_1D57B5694((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAEC7C();
    LOBYTE(v49) = 6;
    v39 = v58[0];
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    LOBYTE(v49) = 7;
    v38 = v58[0];
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    v37 = v9;
    v35 = a2;
    v14 = v58[0];
    LOBYTE(v58[0]) = 8;
    swift_bridgeObjectRetain();
    v36 = sub_1D5AAEC58();
    v46 = v14;
    LOBYTE(v49) = 9;
    v45 = v15;
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    v16 = v58[0];
    LOBYTE(v49) = 10;
    sub_1D5A2F29C();
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    v17 = v58[0];
    LOBYTE(v58[0]) = 11;
    v18 = sub_1D5AAEC58();
    v20 = v19;
    LOBYTE(v58[0]) = 12;
    swift_bridgeObjectRetain();
    v33 = sub_1D5AAEC70();
    v34 = v21;
    v79 = v21 & 1;
    sub_1D57B5700(0, &qword_1ED9C6EA0);
    LOBYTE(v49) = 13;
    sub_1D57B57A0(&qword_1ED9C6EB0, (uint64_t (*)(void))sub_1D5A2F2E0, MEMORY[0x1E0DEAF40]);
    sub_1D5AAEC7C();
    v22 = v58[0];
    v76 = 14;
    sub_1D588F8C4();
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v82);
    v23 = v77;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    LOBYTE(v49) = v37;
    BYTE1(v49) = v44;
    *((_QWORD *)&v49 + 1) = v43;
    *(_QWORD *)&v50 = v42;
    *((_QWORD *)&v50 + 1) = __PAIR64__(v40, v41);
    *(_QWORD *)&v51 = v39;
    *((_QWORD *)&v51 + 1) = v38;
    *(_QWORD *)&v52 = v46;
    *((_QWORD *)&v52 + 1) = v36;
    *(_QWORD *)&v53 = v45;
    *((_QWORD *)&v53 + 1) = v16;
    LOBYTE(v54) = v17;
    v32 = v18;
    *((_QWORD *)&v54 + 1) = v18;
    *(_QWORD *)&v55 = v20;
    *((_QWORD *)&v55 + 1) = v33;
    LOBYTE(v56) = v34 & 1;
    *((_QWORD *)&v56 + 1) = v22;
    v57 = v23;
    sub_1D5802B14((uint64_t)&v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v46;
    swift_bridgeObjectRelease();
    v25 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = v56;
    v27 = v35;
    *(_OWORD *)(v35 + 96) = v55;
    *(_OWORD *)(v27 + 112) = v26;
    *(_QWORD *)(v27 + 128) = v57;
    v28 = v52;
    *(_OWORD *)(v27 + 32) = v51;
    *(_OWORD *)(v27 + 48) = v28;
    v29 = v54;
    *(_OWORD *)(v27 + 64) = v53;
    *(_OWORD *)(v27 + 80) = v29;
    v30 = v50;
    *(_OWORD *)v27 = v49;
    *(_OWORD *)(v27 + 16) = v30;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    LOBYTE(v58[0]) = v37;
    BYTE1(v58[0]) = v44;
    *(_DWORD *)((char *)v58 + 2) = *(_DWORD *)&v80[7];
    HIWORD(v58[0]) = v81;
    v58[1] = v43;
    v58[2] = v42;
    v59 = v41;
    v60 = v40;
    v61 = v39;
    v62 = v38;
    v63 = v24;
    v64 = v36;
    v65 = v25;
    v66 = v16;
    v67 = v17;
    *(_DWORD *)&v68[3] = *(_DWORD *)&v80[3];
    *(_DWORD *)v68 = *(_DWORD *)v80;
    v69 = v32;
    v70 = v20;
    v71 = v33;
    v72 = v79;
    *(_DWORD *)v73 = *(_DWORD *)v78;
    *(_DWORD *)&v73[3] = *(_DWORD *)&v78[3];
    v74 = v22;
    v75 = v23;
    return sub_1D5803C78((uint64_t)v58);
  }
}

unint64_t sub_1D5A2F258()
{
  unint64_t result;

  result = qword_1ED9C7BB0;
  if (!qword_1ED9C7BB0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupLocation, &type metadata for GroupLocation);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BB0);
  }
  return result;
}

unint64_t sub_1D5A2F29C()
{
  unint64_t result;

  result = qword_1ED9CA498;
  if (!qword_1ED9CA498)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupFormationReason, &type metadata for GroupFormationReason);
    atomic_store(result, (unint64_t *)&qword_1ED9CA498);
  }
  return result;
}

unint64_t sub_1D5A2F2E0()
{
  unint64_t result;

  result = qword_1ED9C6E78;
  if (!qword_1ED9C6E78)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CompetingGroupPersonalizationListData, &type metadata for CompetingGroupPersonalizationListData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6E78);
  }
  return result;
}

uint64_t sub_1D5A2F324@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for GroupData.CodingKeys()
{
  return &type metadata for GroupData.CodingKeys;
}

unint64_t sub_1D5A2F34C()
{
  unint64_t result;

  result = qword_1EFF51118;
  if (!qword_1EFF51118)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0CC8, &type metadata for GroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51118);
  }
  return result;
}

uint64_t sub_1D5A2F390(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x636F4C70756F7267 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70795470756F7267 && a2 == 0xE900000000000065 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x444970756F7267 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756F4370756F7267 && a2 == 0xEA0000000000746ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736F5070756F7267 && a2 == 0xED00006E6F697469 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF2170 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x49646570756F7267 && a2 == 0xEF73444965757373 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x54646570756F7267 && a2 == 0xED00007344496761 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x5364657461727563 && a2 == 0xEE00657079746275 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x444974756F79616CLL && a2 == 0xE900000000000073 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6F6974616D726F66 && a2 == 0xEF6E6F736165526ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF2190 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AEE6C0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6E697465706D6F63 && a2 == 0xEF7370756F724767 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF21B0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t AMSMarketingItemData.amsPurchaseID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AMSMarketingItemData.amsPurchaseID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AMSMarketingItemData.amsPurchaseID.modify())()
{
  return nullsub_1;
}

uint64_t AMSMarketingItemData.campaignId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AMSMarketingItemData.campaignId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AMSMarketingItemData.campaignId.modify())()
{
  return nullsub_1;
}

uint64_t AMSMarketingItemData.isPaidBundleViaOffer.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t AMSMarketingItemData.isPaidBundleViaOffer.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*AMSMarketingItemData.isPaidBundleViaOffer.modify())()
{
  return nullsub_1;
}

void __swiftcall AMSMarketingItemData.init(amsPurchaseID:campaignId:isPaidBundleViaOffer:)(NewsAnalytics::AMSMarketingItemData *__return_ptr retstr, Swift::String_optional amsPurchaseID, Swift::String_optional campaignId, Swift::Bool_optional isPaidBundleViaOffer)
{
  retstr->amsPurchaseID = amsPurchaseID;
  retstr->campaignId = campaignId;
  retstr->isPaidBundleViaOffer = isPaidBundleViaOffer;
}

uint64_t sub_1D5A2FB74()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6E676961706D6163;
  if (*v0 != 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0x6863727550736D61;
}

uint64_t sub_1D5A2FBE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A30380(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A2FC08()
{
  sub_1D5A2FDC0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A2FC30()
{
  sub_1D5A2FDC0();
  return sub_1D5AAEEE0();
}

uint64_t AMSMarketingItemData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;
  char v15;

  sub_1D5A30004(0, &qword_1ED9C6F08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  v12 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A2FDC0();
  sub_1D5AAEEC8();
  v15 = 0;
  v9 = v11[3];
  sub_1D5AAECF4();
  if (!v9)
  {
    v14 = 1;
    sub_1D5AAECF4();
    v13 = 2;
    sub_1D5AAED00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A2FDC0()
{
  unint64_t result;

  result = qword_1ED9C6960;
  if (!qword_1ED9C6960)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0EC8, &type metadata for AMSMarketingItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6960);
  }
  return result;
}

uint64_t AMSMarketingItemData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;

  sub_1D5A30004(0, &qword_1EFF51120, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A2FDC0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v22 = 0;
    v10 = sub_1D5AAEC58();
    v13 = v12;
    v19 = v10;
    v21 = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1D5AAEC58();
    v16 = v15;
    v18 = v14;
    v20 = 2;
    swift_bridgeObjectRetain();
    v17 = sub_1D5AAEC64();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_QWORD *)a2 = v19;
    *(_QWORD *)(a2 + 8) = v13;
    *(_QWORD *)(a2 + 16) = v18;
    *(_QWORD *)(a2 + 24) = v16;
    *(_BYTE *)(a2 + 32) = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D5A30004(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A2FDC0();
    v7 = a3(a1, &type metadata for AMSMarketingItemData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A30064()
{
  unint64_t result;

  result = qword_1ED9C6988;
  if (!qword_1ED9C6988)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AMSMarketingItemData, &type metadata for AMSMarketingItemData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6988);
  }
  return result;
}

unint64_t sub_1D5A300AC()
{
  unint64_t result;

  result = qword_1ED9C6980;
  if (!qword_1ED9C6980)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AMSMarketingItemData, &type metadata for AMSMarketingItemData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6980);
  }
  return result;
}

uint64_t sub_1D5A300F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AMSMarketingItemData.init(from:)(a1, a2);
}

uint64_t sub_1D5A30104(_QWORD *a1)
{
  return AMSMarketingItemData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for AMSMarketingItemData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AMSMarketingItemData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AMSMarketingItemData()
{
  return &type metadata for AMSMarketingItemData;
}

uint64_t storeEnumTagSinglePayload for AMSMarketingItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A30228 + 4 * byte_1D5AE0D45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A3025C + 4 * byte_1D5AE0D40[v4]))();
}

uint64_t sub_1D5A3025C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A30264(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A3026CLL);
  return result;
}

uint64_t sub_1D5A30278(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A30280);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A30284(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A3028C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AMSMarketingItemData.CodingKeys()
{
  return &type metadata for AMSMarketingItemData.CodingKeys;
}

unint64_t sub_1D5A302AC()
{
  unint64_t result;

  result = qword_1EFF51128;
  if (!qword_1EFF51128)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0EA0, &type metadata for AMSMarketingItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51128);
  }
  return result;
}

unint64_t sub_1D5A302F4()
{
  unint64_t result;

  result = qword_1ED9C6970;
  if (!qword_1ED9C6970)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0E10, &type metadata for AMSMarketingItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6970);
  }
  return result;
}

unint64_t sub_1D5A3033C()
{
  unint64_t result;

  result = qword_1ED9C6968;
  if (!qword_1ED9C6968)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE0E38, &type metadata for AMSMarketingItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6968);
  }
  return result;
}

uint64_t sub_1D5A30380(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6863727550736D61 && a2 == 0xED00004449657361;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEA00000000006449 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF21D0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D5A30500(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF51130, MEMORY[0x1E0CF8078]);
}

uint64_t static InteractivePuzzleTeaserEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47438, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF51130, a1);
}

uint64_t sub_1D5A30540(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF51148, MEMORY[0x1E0CF8380]);
}

uint64_t static InteractivePuzzleTeaserEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47440, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF51148, a1);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*InteractivePuzzleTeaserEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t InteractivePuzzleTeaserEngagementEvent.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for InteractivePuzzleTeaserEngagementEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF511D8);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.puzzleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InteractivePuzzleTeaserEngagementEvent.puzzleData.modify())(_QWORD)
{
  type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0);
  return nullsub_1;
}

uint64_t InteractivePuzzleTeaserEngagementEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InteractivePuzzleTeaserEngagementEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0);
  return nullsub_1;
}

uint64_t InteractivePuzzleTeaserEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InteractivePuzzleTeaserEngagementEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0);
  return nullsub_1;
}

uint64_t InteractivePuzzleTeaserEngagementEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InteractivePuzzleTeaserEngagementEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0);
  return nullsub_1;
}

uint64_t InteractivePuzzleTeaserEngagementEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InteractivePuzzleTeaserEngagementEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0);
  return nullsub_1;
}

uint64_t InteractivePuzzleTeaserEngagementEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InteractivePuzzleTeaserEngagementEvent.feedPositionData.modify())(_QWORD)
{
  type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0);
  return nullsub_1;
}

uint64_t InteractivePuzzleTeaserEngagementEvent.interactivePuzzleTeaserEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 44);
  sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.interactivePuzzleTeaserEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0) + 44);
  sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InteractivePuzzleTeaserEngagementEvent.interactivePuzzleTeaserEngagementData.modify())(_QWORD)
{
  type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0);
  return nullsub_1;
}

uint64_t InteractivePuzzleTeaserEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for InteractivePuzzleTeaserEngagementEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v8, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v8, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.Model.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_DWORD *)v3 + 8);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = v3[9];
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF51280);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0) + 32));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *InteractivePuzzleTeaserEngagementEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 36), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t InteractivePuzzleTeaserEngagementEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 40));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t InteractivePuzzleTeaserEngagementEvent.Model.interactivePuzzleTeaserEngagementData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t InteractivePuzzleTeaserEngagementEvent.Model.init(eventData:puzzleData:feedData:channelData:userBundleSubscriptionContextData:groupData:feedPositionData:interactivePuzzleTeaserEngagementData:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, int *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  int v45;
  char v46;
  _BYTE v47[144];

  v31 = *a2;
  v13 = *((_QWORD *)a2 + 2);
  v14 = *((_QWORD *)a2 + 3);
  v15 = *((_DWORD *)a2 + 8);
  v16 = *((_QWORD *)a2 + 5);
  v17 = *((_BYTE *)a2 + 48);
  v18 = *((_QWORD *)a2 + 7);
  v29 = *((_BYTE *)a2 + 65);
  v30 = *((_BYTE *)a2 + 64);
  v28 = *((_QWORD *)a2 + 9);
  v33 = *a3;
  v32 = *((_QWORD *)a3 + 2);
  v35 = a4[1];
  v36 = *a4;
  v34 = *((_QWORD *)a4 + 4);
  v44 = *a5;
  v42 = *((_QWORD *)a5 + 2);
  v43 = *((_QWORD *)a5 + 1);
  v40 = a5[25];
  v41 = a5[24];
  v38 = *((_QWORD *)a5 + 5);
  v39 = *((_QWORD *)a5 + 4);
  v37 = a5[48];
  sub_1D57DD5B8(a6, (uint64_t)v47);
  v19 = *a7;
  LOBYTE(a7) = *((_BYTE *)a7 + 4);
  v45 = v19;
  v46 = *a8;
  v20 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v21 = (int *)type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0);
  v22 = a9 + v21[5];
  *(_OWORD *)v22 = v31;
  *(_QWORD *)(v22 + 16) = v13;
  *(_QWORD *)(v22 + 24) = v14;
  *(_DWORD *)(v22 + 32) = v15;
  *(_QWORD *)(v22 + 40) = v16;
  *(_BYTE *)(v22 + 48) = v17;
  *(_QWORD *)(v22 + 56) = v18;
  *(_BYTE *)(v22 + 64) = v30;
  *(_BYTE *)(v22 + 65) = v29;
  *(_QWORD *)(v22 + 72) = v28;
  v23 = a9 + v21[6];
  *(_OWORD *)v23 = v33;
  *(_QWORD *)(v23 + 16) = v32;
  v24 = a9 + v21[7];
  *(_OWORD *)v24 = v36;
  *(_OWORD *)(v24 + 16) = v35;
  *(_QWORD *)(v24 + 32) = v34;
  v25 = a9 + v21[8];
  *(_BYTE *)v25 = v44;
  *(_QWORD *)(v25 + 8) = v43;
  *(_QWORD *)(v25 + 16) = v42;
  *(_BYTE *)(v25 + 24) = v41;
  *(_BYTE *)(v25 + 25) = v40;
  *(_QWORD *)(v25 + 32) = v39;
  *(_QWORD *)(v25 + 40) = v38;
  *(_BYTE *)(v25 + 48) = v37;
  result = sub_1D57DD5B8((uint64_t)v47, a9 + v21[9]);
  v27 = a9 + v21[10];
  *(_DWORD *)v27 = v45;
  *(_BYTE *)(v27 + 4) = (_BYTE)a7;
  *(_BYTE *)(a9 + v21[11]) = v46;
  return result;
}

uint64_t sub_1D5A31358(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A31390 + 4 * byte_1D5AE0F20[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A31390()
{
  return 0x6144656C7A7A7570;
}

uint64_t sub_1D5A313AC()
{
  return 0x6174614464656566;
}

uint64_t sub_1D5A313C4()
{
  return 0x446C656E6E616863;
}

unint64_t sub_1D5A313E4()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5A3144C()
{
  unsigned __int8 *v0;

  return sub_1D5A31358(*v0);
}

uint64_t sub_1D5A31454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A34B18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A31478()
{
  sub_1D5A31880();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A314A0()
{
  sub_1D5A31880();
  return sub_1D5AAEEE0();
}

uint64_t InteractivePuzzleTeaserEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  char *v27;
  char v28;
  char v29;
  char v30;
  int *v31;
  int v32;
  uint64_t v34;
  int v35;
  char v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  char v47;
  __int128 v48;
  char v49;
  char v50;
  __int128 v51;
  char v52;

  v3 = v1;
  sub_1D5A31F38(0, &qword_1EFF51168, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A31880();
  sub_1D5AAEEC8();
  LOBYTE(v37) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_DWORD *)v11 + 8);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_QWORD *)v11 + 9);
    v37 = v12;
    *(_QWORD *)&v38 = v13;
    *((_QWORD *)&v38 + 1) = v14;
    LODWORD(v39) = v15;
    v40 = v16;
    v41 = v17;
    v42 = v18;
    v43 = v19;
    v44 = v20;
    v45 = v21;
    LOBYTE(v35) = 1;
    sub_1D57CBD34();
    sub_1D5AAED6C();
    v22 = (__int128 *)(v3 + v10[6]);
    v23 = *((_QWORD *)v22 + 2);
    v37 = *v22;
    *(_QWORD *)&v38 = v23;
    LOBYTE(v35) = 2;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v24 = (__int128 *)(v3 + v10[7]);
    v25 = *((_QWORD *)v24 + 4);
    v26 = v24[1];
    v37 = *v24;
    v38 = v26;
    v39 = v25;
    LOBYTE(v35) = 3;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v27 = (char *)(v3 + v10[8]);
    v28 = v27[24];
    v29 = v27[25];
    v30 = v27[48];
    v47 = *v27;
    v48 = *(_OWORD *)(v27 + 8);
    v49 = v28;
    v50 = v29;
    v51 = *((_OWORD *)v27 + 2);
    v52 = v30;
    v46 = 4;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[9], (uint64_t)&v37);
    sub_1D57DD5B8((uint64_t)&v37, (uint64_t)&v35);
    HIBYTE(v34) = 5;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v31 = (int *)(v3 + v10[10]);
    v32 = *v31;
    LOBYTE(v31) = *((_BYTE *)v31 + 4);
    v35 = v32;
    v36 = (char)v31;
    HIBYTE(v34) = 6;
    sub_1D57C9C4C();
    sub_1D5AAED18();
    LOBYTE(v35) = *(_BYTE *)(v3 + v10[11]);
    HIBYTE(v34) = 7;
    sub_1D588ADB0();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A31880()
{
  unint64_t result;

  result = qword_1EFF51170;
  if (!qword_1EFF51170)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE11DC, &type metadata for InteractivePuzzleTeaserEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51170);
  }
  return result;
}

uint64_t InteractivePuzzleTeaserEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  char v45;
  int v46;
  char v47;
  _BYTE v48[144];
  _OWORD v49[2];
  __int128 v50;
  char v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;

  v39 = a2;
  v4 = sub_1D5AADF98();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A31F38(0, &qword_1EFF51178, MEMORY[0x1E0DED048]);
  v41 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - v8;
  v56 = type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v56);
  v43 = a1;
  v44 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A31880();
  v11 = v9;
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v12 = v7;
  LOBYTE(v49[0]) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v13 = v40;
  sub_1D5AAECD0();
  v14 = (char *)v4;
  v15 = (uint64_t)v44;
  (*(void (**)(char *, char *, char *))(v42 + 32))(v44, v13, v14);
  v48[0] = 1;
  sub_1D57CBCF0();
  sub_1D5AAECD0();
  v16 = v49[1];
  v17 = v50;
  v18 = *((_QWORD *)&v50 + 1);
  v19 = v51;
  v20 = v52;
  v21 = v53;
  v22 = v54;
  v23 = v55;
  v24 = (int *)v56;
  v25 = v15 + *(int *)(v56 + 20);
  *(_OWORD *)v25 = v49[0];
  *(_OWORD *)(v25 + 16) = v16;
  *(_DWORD *)(v25 + 32) = v17;
  *(_QWORD *)(v25 + 40) = v18;
  *(_BYTE *)(v25 + 48) = v19;
  *(_QWORD *)(v25 + 56) = v20;
  *(_BYTE *)(v25 + 64) = v21;
  *(_BYTE *)(v25 + 65) = v22;
  *(_QWORD *)(v25 + 72) = v23;
  v48[0] = 2;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v26 = *(_QWORD *)&v49[1];
  v27 = v15 + v24[6];
  *(_OWORD *)v27 = v49[0];
  *(_QWORD *)(v27 + 16) = v26;
  v48[0] = 3;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v40 = v14;
  v28 = v50;
  v29 = v15 + v24[7];
  v30 = v49[1];
  *(_OWORD *)v29 = v49[0];
  *(_OWORD *)(v29 + 16) = v30;
  *(_QWORD *)(v29 + 32) = v28;
  v48[0] = 4;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v31 = BYTE8(v49[1]);
  v32 = BYTE9(v49[1]);
  v33 = v51;
  v34 = v15 + v24[8];
  *(_BYTE *)v34 = v49[0];
  *(_OWORD *)(v34 + 8) = *(_OWORD *)((char *)v49 + 8);
  *(_BYTE *)(v34 + 24) = v31;
  *(_BYTE *)(v34 + 25) = v32;
  *(_OWORD *)(v34 + 32) = v50;
  *(_BYTE *)(v34 + 48) = v33;
  v48[143] = 5;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)v49, (uint64_t)v48);
  sub_1D57DD5B8((uint64_t)v48, v15 + v24[9]);
  v45 = 6;
  sub_1D57C9C08();
  sub_1D5AAEC7C();
  v35 = v47;
  v36 = v15 + v24[10];
  *(_DWORD *)v36 = v46;
  *(_BYTE *)(v36 + 4) = v35;
  v45 = 7;
  sub_1D588AD68();
  v37 = v41;
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v37);
  *(_BYTE *)(v15 + *(int *)(v56 + 44)) = v46;
  sub_1D5A31F94(v15, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return sub_1D5A31FD8(v15);
}

void sub_1D5A31F38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A31880();
    v7 = a3(a1, &type metadata for InteractivePuzzleTeaserEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A31F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A31FD8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A32014@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InteractivePuzzleTeaserEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A32028(_QWORD *a1)
{
  return InteractivePuzzleTeaserEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A3203C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47438, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF51130, a1);
}

uint64_t sub_1D5A32060@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47440, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF51148, a1);
}

uint64_t sub_1D5A32084@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v9, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v9, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for InteractivePuzzleTeaserEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for InteractivePuzzleTeaserEngagementEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for InteractivePuzzleTeaserEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for InteractivePuzzleTeaserEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for InteractivePuzzleTeaserEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for InteractivePuzzleTeaserEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractivePuzzleTeaserEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A33150(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for InteractivePuzzleTeaserEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A33388(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A335BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1EFF51160, (void (*)(void))sub_1D588AD68, (void (*)(void))sub_1D588ADB0);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for InteractivePuzzleTeaserEngagementEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 32) = *((_WORD *)v11 + 32);
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    v14 = *((_OWORD *)v11 + 3);
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 3) = v14;
    *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
    v15 = (char *)a1 + v9;
    v16 = (char *)a2 + v9;
    v17 = *(_QWORD *)((char *)a2 + v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 == 1)
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
    }
    else
    {
      *v15 = *v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      *((_QWORD *)v15 + 2) = v17;
      swift_bridgeObjectRetain();
    }
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = *((_QWORD *)v21 + 1);
    if (v22)
    {
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      *((_WORD *)v20 + 8) = *((_WORD *)v21 + 8);
      v23 = *((_QWORD *)v21 + 4);
      *((_QWORD *)v20 + 3) = *((_QWORD *)v21 + 3);
      *((_QWORD *)v20 + 4) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v24;
      *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
    }
    v25 = a3[8];
    v26 = a3[9];
    v27 = (char *)a1 + v25;
    v28 = (char *)a2 + v25;
    *v27 = *v28;
    v29 = *((_QWORD *)v28 + 2);
    *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
    *((_QWORD *)v27 + 2) = v29;
    *((_WORD *)v27 + 12) = *((_WORD *)v28 + 12);
    v30 = *((_QWORD *)v28 + 5);
    *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
    *((_QWORD *)v27 + 5) = v30;
    v27[48] = v28[48];
    v31 = (char *)a1 + v26;
    v32 = (char *)a2 + v26;
    v33 = *(_QWORD *)((char *)a2 + v26 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33)
    {
      *(_WORD *)v31 = *(_WORD *)v32;
      *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
      *((_QWORD *)v31 + 2) = v33;
      *((_QWORD *)v31 + 3) = *((_QWORD *)v32 + 3);
      v34 = *((_QWORD *)v32 + 5);
      *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
      *((_QWORD *)v31 + 5) = v34;
      v35 = *((_QWORD *)v32 + 7);
      *((_QWORD *)v31 + 6) = *((_QWORD *)v32 + 6);
      *((_QWORD *)v31 + 7) = v35;
      v48 = *((_QWORD *)v32 + 9);
      *((_QWORD *)v31 + 8) = *((_QWORD *)v32 + 8);
      *((_QWORD *)v31 + 9) = v48;
      v31[80] = v32[80];
      v36 = *((_QWORD *)v32 + 12);
      *((_QWORD *)v31 + 11) = *((_QWORD *)v32 + 11);
      *((_QWORD *)v31 + 12) = v36;
      *((_QWORD *)v31 + 13) = *((_QWORD *)v32 + 13);
      v31[112] = v32[112];
      v38 = *((_QWORD *)v32 + 15);
      v37 = *((_QWORD *)v32 + 16);
      *((_QWORD *)v31 + 15) = v38;
      *((_QWORD *)v31 + 16) = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v39 = *((_OWORD *)v32 + 7);
      *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
      *((_OWORD *)v31 + 7) = v39;
      *((_QWORD *)v31 + 16) = *((_QWORD *)v32 + 16);
      v40 = *((_OWORD *)v32 + 3);
      *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
      *((_OWORD *)v31 + 3) = v40;
      v41 = *((_OWORD *)v32 + 5);
      *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
      *((_OWORD *)v31 + 5) = v41;
      v42 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v42;
    }
    v43 = a3[10];
    v44 = a3[11];
    v45 = (char *)a1 + v43;
    v46 = (char *)a2 + v43;
    *(_DWORD *)v45 = *(_DWORD *)v46;
    v45[4] = v46[4];
    *((_BYTE *)a1 + v44) = *((_BYTE *)a2 + v44);
  }
  return a1;
}

uint64_t destroy for InteractivePuzzleTeaserEngagementEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[6] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[9] + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for InteractivePuzzleTeaserEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 64) = *(_WORD *)(v10 + 64);
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  v13 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v13;
  *(_QWORD *)(v9 + 72) = *(_QWORD *)(v10 + 72);
  v14 = a1 + v8;
  v15 = a2 + v8;
  v16 = *(_QWORD *)(a2 + v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16 == 1)
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  }
  else
  {
    *(_BYTE *)v14 = *(_BYTE *)v15;
    *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
    *(_QWORD *)(v14 + 16) = v16;
    swift_bridgeObjectRetain();
  }
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(v19 + 8);
  if (v20)
  {
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)(v18 + 8) = v20;
    *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
    v21 = *(_QWORD *)(v19 + 32);
    *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v18 + 32) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  }
  v23 = a3[8];
  v24 = a3[9];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v27 = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 16) = v27;
  *(_WORD *)(v25 + 24) = *(_WORD *)(v26 + 24);
  v28 = *(_QWORD *)(v26 + 40);
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  *(_QWORD *)(v25 + 40) = v28;
  *(_BYTE *)(v25 + 48) = *(_BYTE *)(v26 + 48);
  v29 = a1 + v24;
  v30 = a2 + v24;
  v31 = *(_QWORD *)(a2 + v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31)
  {
    *(_WORD *)v29 = *(_WORD *)v30;
    *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
    *(_QWORD *)(v29 + 16) = v31;
    *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
    v32 = *(_QWORD *)(v30 + 40);
    *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
    *(_QWORD *)(v29 + 40) = v32;
    v33 = *(_QWORD *)(v30 + 56);
    *(_QWORD *)(v29 + 48) = *(_QWORD *)(v30 + 48);
    *(_QWORD *)(v29 + 56) = v33;
    v46 = *(_QWORD *)(v30 + 72);
    *(_QWORD *)(v29 + 64) = *(_QWORD *)(v30 + 64);
    *(_QWORD *)(v29 + 72) = v46;
    *(_BYTE *)(v29 + 80) = *(_BYTE *)(v30 + 80);
    v34 = *(_QWORD *)(v30 + 96);
    *(_QWORD *)(v29 + 88) = *(_QWORD *)(v30 + 88);
    *(_QWORD *)(v29 + 96) = v34;
    *(_QWORD *)(v29 + 104) = *(_QWORD *)(v30 + 104);
    *(_BYTE *)(v29 + 112) = *(_BYTE *)(v30 + 112);
    v36 = *(_QWORD *)(v30 + 120);
    v35 = *(_QWORD *)(v30 + 128);
    *(_QWORD *)(v29 + 120) = v36;
    *(_QWORD *)(v29 + 128) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v37 = *(_OWORD *)(v30 + 112);
    *(_OWORD *)(v29 + 96) = *(_OWORD *)(v30 + 96);
    *(_OWORD *)(v29 + 112) = v37;
    *(_QWORD *)(v29 + 128) = *(_QWORD *)(v30 + 128);
    v38 = *(_OWORD *)(v30 + 48);
    *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
    *(_OWORD *)(v29 + 48) = v38;
    v39 = *(_OWORD *)(v30 + 80);
    *(_OWORD *)(v29 + 64) = *(_OWORD *)(v30 + 64);
    *(_OWORD *)(v29 + 80) = v39;
    v40 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v40;
  }
  v41 = a3[10];
  v42 = a3[11];
  v43 = a1 + v41;
  v44 = a2 + v41;
  *(_DWORD *)v43 = *(_DWORD *)v44;
  *(_BYTE *)(v43 + 4) = *(_BYTE *)(v44 + 4);
  *(_BYTE *)(a1 + v42) = *(_BYTE *)(a2 + v42);
  return a1;
}

uint64_t assignWithCopy for InteractivePuzzleTeaserEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  int v53;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 32) = *(_DWORD *)(v9 + 32);
  v10 = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = v10;
  v11 = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_QWORD *)(v8 + 56) = v11;
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = (__int128 *)(a2 + v12);
  v15 = *(_QWORD *)(a1 + v12 + 16);
  v16 = *(_QWORD *)(a2 + v12 + 16);
  if (v15 == 1)
  {
    if (v16 == 1)
    {
      v17 = *v14;
      *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
      *(_OWORD *)v13 = v17;
    }
    else
    {
      *(_BYTE *)v13 = *(_BYTE *)v14;
      *(_QWORD *)(v13 + 8) = *((_QWORD *)v14 + 1);
      *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v16 == 1)
  {
    sub_1D57D9100(v13);
    v18 = *((_QWORD *)v14 + 2);
    *(_OWORD *)v13 = *v14;
    *(_QWORD *)(v13 + 16) = v18;
  }
  else
  {
    *(_BYTE *)v13 = *(_BYTE *)v14;
    *(_QWORD *)(v13 + 8) = *((_QWORD *)v14 + 1);
    *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = (__int128 *)(a2 + v19);
  v22 = *(_QWORD *)(a1 + v19 + 8);
  v23 = *(_QWORD *)(a2 + v19 + 8);
  if (v22)
  {
    if (v23)
    {
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v20 + 16) = *((_BYTE *)v21 + 16);
      *(_BYTE *)(v20 + 17) = *((_BYTE *)v21 + 17);
      *(_QWORD *)(v20 + 24) = *((_QWORD *)v21 + 3);
      *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v20);
      v24 = *((_QWORD *)v21 + 4);
      v25 = v21[1];
      *(_OWORD *)v20 = *v21;
      *(_OWORD *)(v20 + 16) = v25;
      *(_QWORD *)(v20 + 32) = v24;
    }
  }
  else if (v23)
  {
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
    *(_BYTE *)(v20 + 16) = *((_BYTE *)v21 + 16);
    *(_BYTE *)(v20 + 17) = *((_BYTE *)v21 + 17);
    *(_QWORD *)(v20 + 24) = *((_QWORD *)v21 + 3);
    *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v26 = *v21;
    v27 = v21[1];
    *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
    *(_OWORD *)v20 = v26;
    *(_OWORD *)(v20 + 16) = v27;
  }
  v28 = a3[8];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_BYTE *)v29 = *(_BYTE *)(a2 + v28);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(a2 + v28 + 8);
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(a2 + v28 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 24) = *(_BYTE *)(v30 + 24);
  *(_BYTE *)(v29 + 25) = *(_BYTE *)(v30 + 25);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 48) = *(_BYTE *)(v30 + 48);
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a1 + v31 + 16);
  v35 = *(_QWORD *)(a2 + v31 + 16);
  if (v34)
  {
    if (v35)
    {
      *(_BYTE *)v32 = *(_BYTE *)v33;
      *(_BYTE *)(v32 + 1) = *(_BYTE *)(v33 + 1);
      *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
      *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v32 + 24) = *(_DWORD *)(v33 + 24);
      *(_DWORD *)(v32 + 28) = *(_DWORD *)(v33 + 28);
      *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
      *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 72) = *(_QWORD *)(v33 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v32 + 80) = *(_BYTE *)(v33 + 80);
      *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
      *(_QWORD *)(v32 + 96) = *(_QWORD *)(v33 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36 = *(_QWORD *)(v33 + 104);
      *(_BYTE *)(v32 + 112) = *(_BYTE *)(v33 + 112);
      *(_QWORD *)(v32 + 104) = v36;
      *(_QWORD *)(v32 + 120) = *(_QWORD *)(v33 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v32);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v38 = *(_OWORD *)(v33 + 64);
      v40 = *(_OWORD *)(v33 + 16);
      v39 = *(_OWORD *)(v33 + 32);
      *(_OWORD *)(v32 + 48) = *(_OWORD *)(v33 + 48);
      *(_OWORD *)(v32 + 64) = v38;
      *(_OWORD *)(v32 + 16) = v40;
      *(_OWORD *)(v32 + 32) = v39;
      v42 = *(_OWORD *)(v33 + 96);
      v41 = *(_OWORD *)(v33 + 112);
      v43 = *(_OWORD *)(v33 + 80);
      *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
      *(_OWORD *)(v32 + 96) = v42;
      *(_OWORD *)(v32 + 112) = v41;
      *(_OWORD *)(v32 + 80) = v43;
    }
  }
  else if (v35)
  {
    *(_BYTE *)v32 = *(_BYTE *)v33;
    *(_BYTE *)(v32 + 1) = *(_BYTE *)(v33 + 1);
    *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
    *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
    *(_DWORD *)(v32 + 24) = *(_DWORD *)(v33 + 24);
    *(_DWORD *)(v32 + 28) = *(_DWORD *)(v33 + 28);
    *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
    *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
    *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
    *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
    *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
    *(_QWORD *)(v32 + 72) = *(_QWORD *)(v33 + 72);
    *(_BYTE *)(v32 + 80) = *(_BYTE *)(v33 + 80);
    *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
    *(_QWORD *)(v32 + 96) = *(_QWORD *)(v33 + 96);
    v37 = *(_QWORD *)(v33 + 104);
    *(_BYTE *)(v32 + 112) = *(_BYTE *)(v33 + 112);
    *(_QWORD *)(v32 + 104) = v37;
    *(_QWORD *)(v32 + 120) = *(_QWORD *)(v33 + 120);
    *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v44 = *(_OWORD *)(v33 + 16);
    v45 = *(_OWORD *)(v33 + 32);
    v46 = *(_OWORD *)(v33 + 64);
    *(_OWORD *)(v32 + 48) = *(_OWORD *)(v33 + 48);
    *(_OWORD *)(v32 + 64) = v46;
    *(_OWORD *)(v32 + 16) = v44;
    *(_OWORD *)(v32 + 32) = v45;
    v47 = *(_OWORD *)(v33 + 80);
    v48 = *(_OWORD *)(v33 + 96);
    v49 = *(_OWORD *)(v33 + 112);
    *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
    *(_OWORD *)(v32 + 96) = v48;
    *(_OWORD *)(v32 + 112) = v49;
    *(_OWORD *)(v32 + 80) = v47;
  }
  v50 = a3[10];
  v51 = a1 + v50;
  v52 = (int *)(a2 + v50);
  v53 = *v52;
  *(_BYTE *)(v51 + 4) = *((_BYTE *)v52 + 4);
  *(_DWORD *)v51 = v53;
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for InteractivePuzzleTeaserEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[4];
  v12 = v10[2];
  v9[3] = v10[3];
  v9[4] = v11;
  v13 = v10[1];
  *v9 = *v10;
  v9[1] = v13;
  v9[2] = v12;
  v14 = a1 + v8;
  v15 = a2 + v8;
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  v21 = a1 + v17;
  v22 = (__int128 *)(a2 + v17);
  v23 = *v22;
  v24 = v22[1];
  v25 = v22[2];
  *(_BYTE *)(v21 + 48) = *((_BYTE *)v22 + 48);
  *(_OWORD *)(v21 + 16) = v24;
  *(_OWORD *)(v21 + 32) = v25;
  *(_OWORD *)v21 = v23;
  v26 = a3[9];
  v27 = a3[10];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_QWORD *)(v28 + 128) = *(_QWORD *)(v29 + 128);
  v30 = *(_OWORD *)(v29 + 48);
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  *(_OWORD *)(v28 + 48) = v30;
  v31 = *(_OWORD *)(v29 + 112);
  *(_OWORD *)(v28 + 96) = *(_OWORD *)(v29 + 96);
  *(_OWORD *)(v28 + 112) = v31;
  v32 = *(_OWORD *)(v29 + 80);
  *(_OWORD *)(v28 + 64) = *(_OWORD *)(v29 + 64);
  *(_OWORD *)(v28 + 80) = v32;
  v33 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v33;
  v34 = a1 + v27;
  v35 = a2 + v27;
  *(_DWORD *)v34 = *(_DWORD *)v35;
  *(_BYTE *)(v34 + 4) = *(_BYTE *)(v35 + 4);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for InteractivePuzzleTeaserEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 32) = *(_DWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  if (*(_QWORD *)(a1 + v12 + 16) == 1)
    goto LABEL_4;
  v15 = *(_QWORD *)(v14 + 16);
  if (v15 == 1)
  {
    sub_1D57D9100(v13);
LABEL_4:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v13 = *(_BYTE *)v14;
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 8))
  {
    v19 = *(_QWORD *)(v18 + 8);
    if (v19)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_QWORD *)(v17 + 8) = v19;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
      *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
      v20 = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v17 + 32) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E1784(v17);
  }
  v21 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v21;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
LABEL_11:
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)v23 = *(_BYTE *)(a2 + v22);
  v25 = *(_QWORD *)(a2 + v22 + 16);
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(a2 + v22 + 8);
  *(_QWORD *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v23 + 24) = *(_BYTE *)(v24 + 24);
  *(_BYTE *)(v23 + 25) = *(_BYTE *)(v24 + 25);
  v26 = *(_QWORD *)(v24 + 40);
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  *(_QWORD *)(v23 + 40) = v26;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v23 + 48) = *(_BYTE *)(v24 + 48);
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  if (!*(_QWORD *)(a1 + v27 + 16))
  {
LABEL_15:
    v33 = *(_OWORD *)(v29 + 112);
    *(_OWORD *)(v28 + 96) = *(_OWORD *)(v29 + 96);
    *(_OWORD *)(v28 + 112) = v33;
    *(_QWORD *)(v28 + 128) = *(_QWORD *)(v29 + 128);
    v34 = *(_OWORD *)(v29 + 48);
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
    *(_OWORD *)(v28 + 48) = v34;
    v35 = *(_OWORD *)(v29 + 80);
    *(_OWORD *)(v28 + 64) = *(_OWORD *)(v29 + 64);
    *(_OWORD *)(v28 + 80) = v35;
    v36 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v36;
    goto LABEL_16;
  }
  v30 = *(_QWORD *)(v29 + 16);
  if (!v30)
  {
    sub_1D57E17B8(v28);
    goto LABEL_15;
  }
  *(_WORD *)v28 = *(_WORD *)v29;
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v28 + 40) = *(_QWORD *)(v29 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v28 + 48) = *(_QWORD *)(v29 + 48);
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v29 + 64);
  *(_QWORD *)(v28 + 56) = *(_QWORD *)(v29 + 56);
  *(_QWORD *)(v28 + 64) = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v28 + 72) = *(_QWORD *)(v29 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v28 + 80) = *(_BYTE *)(v29 + 80);
  v32 = *(_QWORD *)(v29 + 96);
  *(_QWORD *)(v28 + 88) = *(_QWORD *)(v29 + 88);
  *(_QWORD *)(v28 + 96) = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v28 + 104) = *(_QWORD *)(v29 + 104);
  *(_BYTE *)(v28 + 112) = *(_BYTE *)(v29 + 112);
  *(_QWORD *)(v28 + 120) = *(_QWORD *)(v29 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v28 + 128) = *(_QWORD *)(v29 + 128);
  swift_bridgeObjectRelease();
LABEL_16:
  v37 = a3[10];
  v38 = a3[11];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractivePuzzleTeaserEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A347C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractivePuzzleTeaserEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A3484C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A348C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for InteractivePuzzleTeaserEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5A349C0 + 4 * byte_1D5AE0F2D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D5A349F4 + 4 * byte_1D5AE0F28[v4]))();
}

uint64_t sub_1D5A349F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A349FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A34A04);
  return result;
}

uint64_t sub_1D5A34A10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A34A18);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D5A34A1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A34A24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InteractivePuzzleTeaserEngagementEvent.Model.CodingKeys()
{
  return &type metadata for InteractivePuzzleTeaserEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1D5A34A44()
{
  unint64_t result;

  result = qword_1EFF512D0;
  if (!qword_1EFF512D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE11B4, &type metadata for InteractivePuzzleTeaserEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF512D0);
  }
  return result;
}

unint64_t sub_1D5A34A8C()
{
  unint64_t result;

  result = qword_1EFF512D8;
  if (!qword_1EFF512D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE1124, &type metadata for InteractivePuzzleTeaserEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF512D8);
  }
  return result;
}

unint64_t sub_1D5A34AD4()
{
  unint64_t result;

  result = qword_1EFF512E0;
  if (!qword_1EFF512E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE114C, &type metadata for InteractivePuzzleTeaserEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF512E0);
  }
  return result;
}

uint64_t sub_1D5A34B18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144656C7A7A7570 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001D5AF21F0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void sub_1D5A34E7C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A34EBC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A34F58 + 4 * byte_1D5AE1236[a2]))(7234932);
}

uint64_t sub_1D5A34F58(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7234932 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A35044(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A35094(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A35110 + 4 * byte_1D5AE1242[a2]))(0x6F65646976);
}

uint64_t sub_1D5A35110(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F65646976 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A351DC(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 6712929;
    else
      v2 = 6710384;
    v3 = 0xE300000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 6712929;
      else
        v5 = 6710384;
      v6 = 0xE300000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1D5AAEDE4();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D5A352C4(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3DC28(a1, a2, GroupType.rawValue.getter);
}

uint64_t sub_1D5A352D0(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3DC28(a1, a2, EventPath.rawValue.getter);
}

void sub_1D5A352DC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3532C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A35424 + 4 * byte_1D5AE1250[a2]))(0x676B636142707061);
}

uint64_t sub_1D5A35424(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x676B636142707061 && v1 == 0xED0000646E756F72)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3557C(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3DC28(a1, a2, ViewType.rawValue.getter);
}

uint64_t sub_1D5A35588(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 7824750;
    else
      v3 = 0x6E696E7275746572;
    if (v2 == 1)
      v4 = 0xE300000000000000;
    else
      v4 = 0xE900000000000067;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 7824750;
      else
        v6 = 0x6E696E7275746572;
      if (v5 == 1)
        v7 = 0xE300000000000000;
      else
        v7 = 0xE900000000000067;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A35698(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3DC28(a1, a2, TextSize.rawValue.getter);
}

void sub_1D5A356A4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A356E4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3573C + 4 * byte_1D5AE125C[a2]))(0x6C616D726F6ELL);
}

uint64_t sub_1D5A3573C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C616D726F6ELL && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A357D8(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3DC28(a1, a2, FeedType.rawValue.getter);
}

void sub_1D5A357E4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A35834(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A35894 + 4 * byte_1D5AE1264[a2]))(0x676E69646E6570);
}

uint64_t sub_1D5A35894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x676E69646E6570 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1D5A35938(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A35988(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A35A6C + 4 * byte_1D5AE1271[a2]))(0x656C6369747261);
}

uint64_t sub_1D5A35A6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x656C6369747261 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1D5A35BA4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A35BF4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A35CB4 + 4 * byte_1D5AE1281[a2]))(0x746C7561666564);
}

uint64_t sub_1D5A35CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x746C7561666564 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1D5A35DCC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1D5A35E24@<X0>(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A35EF4 + 4 * byte_1D5AE1292[a1]))(a2 - 4);
}

uint64_t sub_1D5A35EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  if (a1 == a2 - 4 && v2 == 0x80000001D5AEB320)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1D5A35FF8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7972756372656DLL;
  else
    v3 = 0x6D6F6F727377656ELL;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7972756372656DLL;
  else
    v5 = 0x6D6F6F727377656ELL;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D5A3609C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1D5A360E8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A36154 + 4 * byte_1D5AE12A0[a2]))(0x64657269707865);
}

uint64_t sub_1D5A36154(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64657269707865 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A36200(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6E49646574706FLL;
    else
      v3 = 0x74754F646574706FLL;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6E49646574706FLL;
      else
        v6 = 0x74754F646574706FLL;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A36318(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3DC28(a1, a2, AppLaunchTakeoverTriggerResult.rawValue.getter);
}

void sub_1D5A36324(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A36374(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A363F4 + 4 * byte_1D5AE12A9[a2]))(0x65766973736170);
}

uint64_t sub_1D5A363F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x65766973736170 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1D5A364BC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3650C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3657C + 4 * byte_1D5AE12B3[a2]))(1768319351);
}

uint64_t sub_1D5A3657C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1768319351 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A36634(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000011;
    else
      v3 = 0x4572657474696D65;
    if (v2 == 1)
      v4 = 0x80000001D5AEB200;
    else
      v4 = 0xEC000000726F7272;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000011;
      else
        v6 = 0x4572657474696D65;
      if (v5 == 1)
        v7 = 0x80000001D5AEB200;
      else
        v7 = 0xEC000000726F7272;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A3675C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A367C8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A36870 + 4 * byte_1D5AE12BE[a2]))(0x53646579616C6564);
}

uint64_t sub_1D5A36870(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x53646579616C6564 && v1 == 0xEC00000065726F63)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3696C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1869903201;
    else
      v3 = 0x746963696C707865;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 1869903201;
      else
        v6 = 0x746963696C707865;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A36A74(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A36AC4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A36B44 + 4 * byte_1D5AE12CB[a2]))(1954047342);
}

uint64_t sub_1D5A36B44(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1954047342 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A36C1C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A36C6C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A36D14 + 4 * byte_1D5AE12D9[a2]))(0x6C656E6E616863);
}

uint64_t sub_1D5A36D14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x6C656E6E616863 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1D5A36E14(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A36E64(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A36EC8 + 4 * byte_1D5AE12E4[a2]))(1701736302);
}

uint64_t sub_1D5A36EC8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1701736302 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A36F70(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A36FC0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A37044 + 4 * byte_1D5AE12ED[a2]))(0x6573616863727570);
}

uint64_t sub_1D5A37044(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6573616863727570 && v1 == 0xED00007465656853)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A37110(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x70756E676973;
    else
      v2 = 0x776F6E746F6ELL;
    v3 = 0xE600000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x70756E676973;
      else
        v5 = 0x776F6E746F6ELL;
      v6 = 0xE600000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1D5AAEDE4();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D5A37218(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1D5A37264(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A372C8 + 4 * byte_1D5AE12F6[a2]))(a3 + 6);
}

uint64_t sub_1D5A372C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 6 && v3 == 0x80000001D5AEC220)
    v4 = 1;
  else
    v4 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1D5A37360(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A373B0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A37418 + 4 * byte_1D5AE12FE[a2]))(0x6F69647561);
}

uint64_t sub_1D5A37418(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F69647561 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A374C4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A37514(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3756C + 4 * byte_1D5AE1306[a2]))(0x6572616873);
}

uint64_t sub_1D5A3756C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6572616873 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A37608(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A37658(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A376C8 + 4 * byte_1D5AE130E[a2]))(0x6C61697274);
}

uint64_t sub_1D5A376C8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C61697274 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3777C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A377CC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A378FC + 4 * byte_1D5AE131D[a2]))(0x656C6369747261);
}

uint64_t sub_1D5A378FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x656C6369747261 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1D5A37A98(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A37AE8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A37B90 + 4 * byte_1D5AE132E[a2]))(0x6163696669746F6ELL);
}

uint64_t sub_1D5A37B90(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6163696669746F6ELL && v1 == 0xEC0000006E6F6974)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A37C88(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A37CD8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A37D4C + 4 * byte_1D5AE1339[a2]))(0x73736563637573);
}

uint64_t sub_1D5A37D4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x73736563637573 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1D5A37E08(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x656C6369747261;
    else
      v2 = 0x6E776F6E6B6E75;
    v3 = 0xE700000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x656C6369747261;
      else
        v5 = 0x6E776F6E6B6E75;
      v6 = 0xE700000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE400000000000000;
    v2 = 1684366694;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE400000000000000;
  if (v2 != 1684366694)
  {
LABEL_15:
    v7 = sub_1D5AAEDE4();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D5A37F10(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A37F60(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A37FD0 + 4 * byte_1D5AE1343[a2]))(0x73756C507377656ELL);
}

uint64_t sub_1D5A37FD0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x73756C507377656ELL && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A38088(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6269726373627573;
    else
      v3 = 0x7263736275736E75;
    if (v2 == 1)
      v4 = 0xE900000000000065;
    else
      v4 = 0xEB00000000656269;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6269726373627573;
      else
        v6 = 0x7263736275736E75;
      if (v5 == 1)
        v7 = 0xE900000000000065;
      else
        v7 = 0xEB00000000656269;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A381B8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD00000000000001ALL;
  v3 = 0x80000001D5AEB0B0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x7247756F59726F66;
    else
      v5 = 0xD000000000000016;
    if (v4 == 1)
      v6 = 0xEB0000000070756FLL;
    else
      v6 = 0x80000001D5AEB0E0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD00000000000001ALL;
  v6 = 0x80000001D5AEB0B0;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0x7247756F59726F66;
    else
      v2 = 0xD000000000000016;
    if (v7 == 1)
      v3 = 0xEB0000000070756FLL;
    else
      v3 = 0x80000001D5AEB0E0;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A382C4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A38314(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3837C + 4 * byte_1D5AE134D[a2]))(0x69746375646F7270);
}

uint64_t sub_1D5A3837C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x69746375646F7270 && v1 == 0xEA00000000006E6FLL)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3842C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3846C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A384FC + 4 * byte_1D5AE1358[a2]))(0x6573756170);
}

uint64_t sub_1D5A384FC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6573756170 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A385DC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6142686372616573;
    else
      v3 = 0x6553746E65636572;
    if (v2 == 1)
      v4 = 0xE900000000000072;
    else
      v4 = 0xEC00000068637261;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6142686372616573;
      else
        v6 = 0x6553746E65636572;
      if (v5 == 1)
        v7 = 0xE900000000000072;
      else
        v7 = 0xEC00000068637261;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A3870C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3875C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A387C0 + 4 * byte_1D5AE1362[a2]))(0x6D6574737973);
}

uint64_t sub_1D5A387C0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D6574737973 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A38868(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A388B8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A38940 + 4 * byte_1D5AE136B[a2]))(0x6F4E6E657473696CLL);
}

uint64_t sub_1D5A38940(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F4E6E657473696CLL && v1 == 0xE900000000000077)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A38A10(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x656C6369747261;
    else
      v3 = 1684366694;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x656C6369747261;
      else
        v6 = 1684366694;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A38B18(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x64656761676E65;
    else
      v3 = 0x6761676E45746F6ELL;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xEA00000000006465;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x64656761676E65;
      else
        v6 = 0x6761676E45746F6ELL;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xEA00000000006465;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A38C38(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A38C88(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A38D8C + 4 * byte_1D5AE137A[a2]))(0x7473696C79616C70);
}

uint64_t sub_1D5A38D8C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7473696C79616C70 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A38F00(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A38F50(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3900C + 4 * byte_1D5AE138B[a2]))(0x656C6369747261);
}

uint64_t sub_1D5A3900C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x656C6369747261 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1D5A3911C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3916C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A391F0 + 4 * byte_1D5AE1397[a2]))(0x45736569726F7473);
}

uint64_t sub_1D5A391F0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x45736569726F7473 && v1 == 0xEE006465736F7078)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A392BC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3930C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A393A4 + 4 * byte_1D5AE13A1[a2]))(0x7469617274726F70);
}

uint64_t sub_1D5A393A4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7469617274726F70 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A39484(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A394D4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A39540 + 4 * byte_1D5AE13AB[a2]))(1869903201);
}

uint64_t sub_1D5A39540(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1869903201 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A395F4(char a1, char a2)
{
  char v2;

  if (*(_QWORD *)&aUnknown_90[8 * a1] == *(_QWORD *)&aUnknown_90[8 * a2])
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1D5A39658(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1937204590;
    else
      v3 = 0x7972756372656DLL;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xE700000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 1937204590;
      else
        v6 = 0x7972756372656DLL;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xE700000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A39760(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A397B0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A39838 + 4 * byte_1D5AE13B6[a2]))(0x64656C696166);
}

uint64_t sub_1D5A39838(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64656C696166 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A398F4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6F69647561;
    else
      v3 = 0x7274656D656C6574;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE900000000000079;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6F69647561;
      else
        v6 = 0x7274656D656C6574;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE900000000000079;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE300000000000000;
    v3 = 7368801;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE300000000000000;
  if (v3 != 7368801)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A399FC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000011;
    else
      v3 = 0x73757361676570;
    if (v2 == 1)
      v4 = 0x80000001D5AEADC0;
    else
      v4 = 0xE700000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000011;
      else
        v6 = 0x73757361676570;
      if (v5 == 1)
        v7 = 0x80000001D5AEADC0;
      else
        v7 = 0xE700000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A39B14(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1953718630;
    else
      v3 = 0x6568636163;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xE500000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 1953718630;
      else
        v6 = 0x6568636163;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xE500000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 2003790963;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 2003790963)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A39C04(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A39C4C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A39CCC + 4 * byte_1D5AE13C0[a2]))(0xD000000000000015);
}

uint64_t sub_1D5A39CCC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000015 && v1 == 0x80000001D5AEC2C0)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A39D90(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEA00000000006465;
  v3 = 0x676E616843746F6ELL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x72656C6C616D73;
    else
      v5 = 0x72656772616CLL;
    if (v4 == 1)
      v6 = 0xE700000000000000;
    else
      v6 = 0xE600000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x676E616843746F6ELL;
  v6 = 0xEA00000000006465;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x72656C6C616D73;
    else
      v3 = 0x72656772616CLL;
    if (v7 == 1)
      v2 = 0xE700000000000000;
    else
      v2 = 0xE600000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A39EA0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6269726373627573;
    else
      v3 = 0x6373627553746F6ELL;
    if (v2 == 1)
      v4 = 0xEA00000000006465;
    else
      v4 = 0xED00006465626972;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6269726373627573;
      else
        v6 = 0x6373627553746F6ELL;
      if (v5 == 1)
        v7 = 0xEA00000000006465;
      else
        v7 = 0xED00006465626972;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A39FD8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3A028(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3A07C + 4 * byte_1D5AE13C8[a2]))(1937204590);
}

uint64_t sub_1D5A3A07C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1937204590 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3A114(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3A164(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3A1DC + 4 * byte_1D5AE13D0[a2]))(0x6469577961646F74);
}

uint64_t sub_1D5A3A1DC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6469577961646F74 && v1 == 0xEB00000000746567)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3A29C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x656C6369747261;
    else
      v3 = 6775156;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE300000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x656C6369747261;
      else
        v6 = 6775156;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE300000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A3A3A4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6564726163736964;
    else
      v3 = 0x6465766965636572;
    if (v2 == 1)
      v4 = 0xE900000000000064;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6564726163736964;
      else
        v6 = 0x6465766965636572;
      if (v5 == 1)
        v7 = 0xE900000000000064;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6465766F6D6572;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6465766F6D6572)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A3A4C4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6E496E6567676F6CLL;
    else
      v3 = 0x754F646567676F6CLL;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0xE900000000000074;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6E496E6567676F6CLL;
      else
        v6 = 0x754F646567676F6CLL;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xE900000000000074;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A3A5E4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEA00000000006465;
  v3 = 0x766C6F7365726E75;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6C75666574617473;
    else
      v5 = 0x73656C6574617473;
    if (v4 == 1)
      v6 = 0xE800000000000000;
    else
      v6 = 0xE900000000000073;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x766C6F7365726E75;
  v6 = 0xEA00000000006465;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x6C75666574617473;
    else
      v3 = 0x73656C6574617473;
    if (v7 == 1)
      v2 = 0xE800000000000000;
    else
      v2 = 0xE900000000000073;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A3A704(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x6E4F6E727574;
    else
      v2 = 0x776F4E746F6ELL;
    v3 = 0xE600000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x6E4F6E727574;
      else
        v5 = 0x776F4E746F6ELL;
      v6 = 0xE600000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1D5AAEDE4();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D5A3A80C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1684366694;
  else
    v3 = 0x656C6369747261;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1684366694;
  else
    v5 = 0x656C6369747261;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D5A3A8A8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3A8F8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3A9BC + 4 * byte_1D5AE13DB[a2]))(0x7469617274726F70);
}

uint64_t sub_1D5A3A9BC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7469617274726F70 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3AAD8(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 1701147238;
    else
      v2 = 1684627824;
    v3 = 0xE400000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 1701147238;
      else
        v5 = 1684627824;
      v6 = 0xE400000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1D5AAEDE4();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D5A3ABD0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3AC20(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3ACCC + 4 * byte_1D5AE13E8[a2]))(0x6572676F72506E69);
}

uint64_t sub_1D5A3ACCC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6572676F72506E69 && v1 == 0xEA00000000007373)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3ADC8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3AE18(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3AE68 + 4 * byte_1D5AE13F2[a2]))(7105633);
}

uint64_t sub_1D5A3AE68(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7105633 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3AEFC(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x6C616E7265746E69;
    else
      v2 = 0x6C616E7265747865;
    v3 = 0xE800000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x6C616E7265746E69;
      else
        v5 = 0x6C616E7265747865;
      v6 = 0xE800000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1D5AAEDE4();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D5A3AFEC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3B03C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3B13C + 4 * byte_1D5AE13FF[a2]))(0x6E6974656B72616DLL);
}

uint64_t sub_1D5A3B13C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E6974656B72616DLL && v1 == 0xE900000000000067)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3B2A4(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3DC28(a1, a2, NetworkEventType.rawValue.getter);
}

uint64_t sub_1D5A3B2B0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6572676761736964;
    else
      v3 = 0x6575737369;
    if (v2 == 1)
      v4 = 0xED00006465746167;
    else
      v4 = 0xE500000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6572676761736964;
      else
        v6 = 0x6575737369;
      if (v5 == 1)
        v7 = 0xED00006465746167;
      else
        v7 = 0xE500000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A3B3D8(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x74694B64756F6C63;
    else
      v2 = 0x656764457377656ELL;
    v3 = 0xE800000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x74694B64756F6C63;
      else
        v5 = 0x656764457377656ELL;
      v6 = 0xE800000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1D5AAEDE4();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D5A3B4F0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3B540(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3B5B8 + 4 * byte_1D5AE140D[a2]))(0x656E697A6167616DLL);
}

uint64_t sub_1D5A3B5B8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656E697A6167616DLL && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3B678(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3B6C8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3B794 + 4 * byte_1D5AE1419[a2]))(0x615472656E6E6162);
}

uint64_t sub_1D5A3B794(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x615472656E6E6162 && v1 == 0xE900000000000070)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3B8C0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3B910(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3B980 + 4 * byte_1D5AE1424[a2]))(0x656C6369747261);
}

uint64_t sub_1D5A3B980(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x656C6369747261 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1D5A3BA34(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1937204590;
  else
    v3 = 0x697261666173;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1937204590;
  else
    v5 = 0x697261666173;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D5A3BACC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3BB1C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3BBF8 + 4 * byte_1D5AE1431[a2]))(0x616C506F54706174);
}

uint64_t sub_1D5A3BBF8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x616C506F54706174 && v1 == 0xE900000000000079)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3BD3C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x79616C706F747561;
    else
      v3 = 0x7474754279616C70;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0xEF73736572506E6FLL;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x79616C706F747561;
      else
        v6 = 0x7474754279616C70;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xEF73736572506E6FLL;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A3BE6C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3BEBC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3BF18 + 4 * byte_1D5AE143E[a2]))(0x7070416E69);
}

uint64_t sub_1D5A3BF18(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7070416E69 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3BFB8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEB00000000797274;
  v3 = 0x6E4572657474656CLL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000010;
    else
      v5 = 1752461154;
    if (v4 == 1)
      v6 = 0x80000001D5AEB250;
    else
      v6 = 0xE400000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6E4572657474656CLL;
  v6 = 0xEB00000000797274;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000010;
    else
      v3 = 1752461154;
    if (v7 == 1)
      v2 = 0x80000001D5AEB250;
    else
      v2 = 0xE400000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A3C0C8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3C118(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3C1A0 + 4 * byte_1D5AE1448[a2]))(0x6F775479426F7774);
}

uint64_t sub_1D5A3C1A0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F775479426F7774 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3C284(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1D5A3C2DC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3C364 + 4 * byte_1D5AE1454[a2]))(0x6761507961646F74);
}

uint64_t sub_1D5A3C364(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6761507961646F74 && v1 == 0xE900000000000065)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3C430(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3C480(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3C4D4 + 4 * byte_1D5AE145E[a2]))(0x65726F7453707061);
}

uint64_t sub_1D5A3C4D4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x65726F7453707061 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3C56C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3C5BC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3C610 + 4 * byte_1D5AE1466[a2]))(5459817);
}

uint64_t sub_1D5A3C610(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 5459817 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3C6A8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3C6F8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3C77C + 4 * byte_1D5AE146F[a2]))(0x72656E6E6162);
}

uint64_t sub_1D5A3C77C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x72656E6E6162 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3C844(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3DC28(a1, a2, StoreKitError.rawValue.getter);
}

void sub_1D5A3C850(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3C8A0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3C900 + 4 * byte_1D5AE1478[a2]))(0x656C6369747261);
}

uint64_t sub_1D5A3C900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x656C6369747261 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1D5A3C9A4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3C9F4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3CAA4 + 4 * byte_1D5AE1482[a2]))(0x6E69776F6C6C6F66);
}

uint64_t sub_1D5A3CAA4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E69776F6C6C6F66 && v1 == 0xE900000000000067)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3CB88(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x7472617473;
    else
      v3 = 0x6C65636E6163;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE600000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x7472617473;
      else
        v6 = 0x6C65636E6163;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE600000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A3CC90(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x656C706D6173;
    else
      v3 = 1819047270;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x656C706D6173;
      else
        v6 = 1819047270;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A3CD90(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3CDE0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3CE50 + 4 * byte_1D5AE148C[a2]))(0x656E6F646E616261);
}

uint64_t sub_1D5A3CE50(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656E6F646E616261 && v1 == 0xE900000000000064)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3CF04(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000011;
  else
    v3 = 0x6E776F6E6B6E75;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0x80000001D5AEC150;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000011;
  else
    v5 = 0x6E776F6E6B6E75;
  if ((a2 & 1) != 0)
    v6 = 0x80000001D5AEC150;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D5A3CFAC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3CFFC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3D0B0 + 4 * byte_1D5AE1497[a2]))(0x6574726143616C61);
}

uint64_t sub_1D5A3D0B0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6574726143616C61 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3D1BC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3D20C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3D25C + 4 * byte_1D5AE14A2[a2]))(1702195828);
}

uint64_t sub_1D5A3D25C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1702195828 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3D2F4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6C61756E616DLL;
    else
      v3 = 1869903201;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6C61756E616DLL;
      else
        v6 = 1869903201;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A3D3F4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3D444(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3D51C + 4 * byte_1D5AE14AF[a2]))(0x776F7272616873);
}

uint64_t sub_1D5A3D51C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x776F7272616873 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1D5A3D648(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3DC28(a1, a2, StartMethod.rawValue.getter);
}

uint64_t sub_1D5A3D654(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 1952870259;
    else
      v2 = 1685217640;
    v3 = 0xE400000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 1952870259;
      else
        v5 = 1685217640;
      v6 = 0xE400000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1D5AAEDE4();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D5A3D74C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x636961736F6DLL;
    else
      v3 = 0x7069727473;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE500000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x636961736F6DLL;
      else
        v6 = 0x7069727473;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE500000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A3D854(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3D89C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3D8F8 + 4 * byte_1D5AE14BC[a2]))(0x72656E6E6162);
}

uint64_t sub_1D5A3D8F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x72656E6E6162 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1D5A3D998(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 6712929;
    else
      v2 = 6448503;
    v3 = 0xE300000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 6712929;
      else
        v5 = 6448503;
      v6 = 0xE300000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1D5AAEDE4();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D5A3DA90(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3DAE0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3DB5C + 4 * byte_1D5AE14C4[a2]))(0x695764656E6E6970);
}

uint64_t sub_1D5A3DB5C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x695764656E6E6970 && v1 == 0xEC00000074656764)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3DC1C(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3DC28(a1, a2, ViewAction.rawValue.getter);
}

uint64_t sub_1D5A3DC28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1D5A3DCC0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x73736563637573;
    else
      v3 = 1818845542;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x73736563637573;
      else
        v6 = 1818845542;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1D5A3DDC8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3DE18(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3DE80 + 4 * byte_1D5AE14CD[a2]))(1869768058);
}

uint64_t sub_1D5A3DE80(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1869768058 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D5A3DF1C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3DF6C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D5A3E008 + 4 * byte_1D5AE14D8[a2]))(1869768058);
}

uint64_t sub_1D5A3E008(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1869768058 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1D5AAEDE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D5A3E0F4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 7629160;
    else
      v3 = 1936943469;
    if (v2 == 1)
      v4 = 0xE300000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 7629160;
      else
        v6 = 1936943469;
      if (v5 == 1)
        v7 = 0xE300000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1D5AAEDE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

NewsAnalytics::TextSizeData __swiftcall TextSizeData.init(contentSizeCategory:)(UIContentSizeCategory contentSizeCategory)
{
  _BYTE *v1;
  _BYTE *v2;
  NewsAnalytics::TextSizeData result;
  char v4;

  v2 = v1;
  sub_1D57B94F0(contentSizeCategory, &v4);
  *v2 = v4;
  return result;
}

NewsAnalytics::ArticleTextSizeData __swiftcall ArticleTextSizeData.init(startContentSizeCategory:endContentSizeCategory:diagnosticsEnabled:)(UIContentSizeCategory startContentSizeCategory, UIContentSizeCategory endContentSizeCategory, Swift::Bool diagnosticsEnabled)
{
  char *v3;
  char *v7;
  char v8;
  char v9;
  NewsAnalytics::ArticleTextSizeData v10;
  char v11;
  char v12;

  v7 = v3;
  if ((sub_1D5AAEA6C() & 1) != 0)
  {
    v8 = 1;
LABEL_5:
    v9 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0 && !diagnosticsEnabled)
      goto LABEL_7;
LABEL_9:
    sub_1D57B94F0(endContentSizeCategory, &v12);

    v11 = v12;
    goto LABEL_10;
  }
  if ((sub_1D5AAEA78() & 1) != 0)
  {
    v8 = 2;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v8 = 0;
  if (diagnosticsEnabled)
    goto LABEL_9;
LABEL_7:

  v11 = 13;
LABEL_10:
  *v7 = v8;
  v7[1] = v11;
  return v10;
}

NewsAnalytics::NotificationType_optional __swiftcall NotificationType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::NotificationType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t NotificationType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A3E3B0 + 4 * a8_20[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A3E3B0()
{
  return 0x6E6974656B72616DLL;
}

uint64_t sub_1D5A3E3CC()
{
  return 0x6169726F74696465;
}

uint64_t sub_1D5A3E3EC()
{
  return 0x657573734977656ELL;
}

uint64_t sub_1D5A3E404()
{
  return 0x656C6369747261;
}

uint64_t sub_1D5A3E418()
{
  return 0x647541664F646E65;
}

unint64_t sub_1D5A3E43C()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1D5A3E458()
{
  return 0x6E4F64656B636970;
}

uint64_t sub_1D5A3E47C()
{
  return 0x64657265746C6966;
}

void sub_1D5A3E494(char *a1)
{
  sub_1D5A3AFEC(*a1);
}

unint64_t sub_1D5A3E4A4()
{
  unint64_t result;

  result = qword_1EFF512E8;
  if (!qword_1EFF512E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationType, &type metadata for NotificationType);
    atomic_store(result, (unint64_t *)&qword_1EFF512E8);
  }
  return result;
}

uint64_t sub_1D5A3E4E8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA8728((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

void sub_1D5A3E52C(uint64_t a1)
{
  char *v1;

  sub_1D5AA8728(a1, *v1);
}

uint64_t sub_1D5A3E534()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA8728((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

NewsAnalytics::NotificationType_optional sub_1D5A3E574(Swift::String *a1)
{
  return NotificationType.init(rawValue:)(*a1);
}

uint64_t sub_1D5A3E580@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = NotificationType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D5A3E5A4()
{
  sub_1D5A3E718();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A3E600()
{
  sub_1D5A3E718();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for NotificationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D5A3E698 + 4 * byte_1D5AE150E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D5A3E6CC + 4 * byte_1D5AE1509[v4]))();
}

uint64_t sub_1D5A3E6CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A3E6D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A3E6DCLL);
  return result;
}

uint64_t sub_1D5A3E6E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A3E6F0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D5A3E6F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A3E6FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationType()
{
  return &type metadata for NotificationType;
}

unint64_t sub_1D5A3E718()
{
  unint64_t result;

  result = qword_1EFF512F0;
  if (!qword_1EFF512F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationType, &type metadata for NotificationType);
    atomic_store(result, (unint64_t *)&qword_1EFF512F0);
  }
  return result;
}

NewsAnalytics::AdJournalEntryError_optional __swiftcall AdJournalEntryError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::AdJournalEntryError_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdJournalEntryError.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A3E7E0 + 4 * byte_1D5AE1650[*v0]))(0x726568746FLL, 0xE500000000000000);
}

unint64_t sub_1D5A3E7E0()
{
  return 0xD000000000000015;
}

uint64_t sub_1D5A3E7FC()
{
  return 0x6F5464656C696166;
}

uint64_t sub_1D5A3E820()
{
  return 0x4674736575716572;
}

void sub_1D5A3E844(char *a1)
{
  sub_1D5A39C04(*a1);
}

unint64_t sub_1D5A3E854()
{
  unint64_t result;

  result = qword_1EFF512F8;
  if (!qword_1EFF512F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdJournalEntryError, &type metadata for AdJournalEntryError);
    atomic_store(result, (unint64_t *)&qword_1EFF512F8);
  }
  return result;
}

void sub_1D5A3E898()
{
  char *v0;

  sub_1D5A8121C(*v0);
}

void sub_1D5A3E8A0()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A3E8D8()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A3E950(uint64_t a1)
{
  char *v1;

  sub_1D5AA952C(a1, *v1);
}

NewsAnalytics::AdJournalEntryError_optional sub_1D5A3E958(Swift::String *a1)
{
  return AdJournalEntryError.init(rawValue:)(*a1);
}

uint64_t sub_1D5A3E964()
{
  sub_1D57C8F90();
  return sub_1D5AAE928();
}

float PlaybackData.playbackSpeed.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void PlaybackData.playbackSpeed.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*PlaybackData.playbackSpeed.modify())()
{
  return nullsub_1;
}

NewsAnalytics::PlaybackData __swiftcall PlaybackData.init(playbackSpeed:)(NewsAnalytics::PlaybackData playbackSpeed)
{
  NewsAnalytics::PlaybackData *v1;

  v1->playbackSpeed = playbackSpeed.playbackSpeed;
  return playbackSpeed;
}

uint64_t sub_1D5A3E9E8()
{
  return 0x6B63616279616C70;
}

uint64_t sub_1D5A3EA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6B63616279616C70 && a2 == 0xED00006465657053)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5A3EAC4()
{
  sub_1D5A3EC04();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A3EAEC()
{
  sub_1D5A3EC04();
  return sub_1D5AAEEE0();
}

uint64_t PlaybackData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A3ED70(0, &qword_1EFF51300, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A3EC04();
  sub_1D5AAEEC8();
  sub_1D5AAED60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5A3EC04()
{
  unint64_t result;

  result = qword_1EFF51308;
  if (!qword_1EFF51308)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE18F8, &type metadata for PlaybackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51308);
  }
  return result;
}

uint64_t PlaybackData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v13;

  sub_1D5A3ED70(0, &qword_1EFF51310, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A3EC04();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5AAECC4();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A3ED70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A3EC04();
    v7 = a3(a1, &type metadata for PlaybackData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A3EDD4@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return PlaybackData.init(from:)(a1, a2);
}

uint64_t sub_1D5A3EDE8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A3ED70(0, &qword_1EFF51300, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A3EC04();
  sub_1D5AAEEC8();
  sub_1D5AAED60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for PlaybackData()
{
  return &type metadata for PlaybackData;
}

uint64_t storeEnumTagSinglePayload for PlaybackData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A3EF28 + 4 * byte_1D5AE1784[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A3EF48 + 4 * byte_1D5AE1789[v4]))();
}

_BYTE *sub_1D5A3EF28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A3EF48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A3EF50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A3EF58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A3EF60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A3EF68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackData.CodingKeys()
{
  return &type metadata for PlaybackData.CodingKeys;
}

unint64_t sub_1D5A3EF88()
{
  unint64_t result;

  result = qword_1EFF51318;
  if (!qword_1EFF51318)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE18D0, &type metadata for PlaybackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51318);
  }
  return result;
}

unint64_t sub_1D5A3EFD0()
{
  unint64_t result;

  result = qword_1EFF51320;
  if (!qword_1EFF51320)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE1840, &type metadata for PlaybackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51320);
  }
  return result;
}

unint64_t sub_1D5A3F018()
{
  unint64_t result;

  result = qword_1EFF51328;
  if (!qword_1EFF51328)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE1868, &type metadata for PlaybackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51328);
  }
  return result;
}

uint64_t sub_1D5A3F05C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1EFF51330);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF51330);
  *(_QWORD *)v1 = 0x726F70732E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xEA00000000007374;
  *(_QWORD *)(v1 + 16) = 6;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static IgnoreSportsTagEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47448, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF51330, a1);
}

uint64_t sub_1D5A3F100()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1EFF51348);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF51348);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8380], v0);
}

uint64_t static IgnoreSportsTagEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47450, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF51348, a1);
}

uint64_t IgnoreSportsTagEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t IgnoreSportsTagEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*IgnoreSportsTagEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t IgnoreSportsTagEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for IgnoreSportsTagEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF513D0);
}

uint64_t IgnoreSportsTagEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IgnoreSportsTagEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for IgnoreSportsTagEvent(0);
  return nullsub_1;
}

uint64_t IgnoreSportsTagEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IgnoreSportsTagEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IgnoreSportsTagEvent.tagData.modify())(_QWORD)
{
  type metadata accessor for IgnoreSportsTagEvent(0);
  return nullsub_1;
}

uint64_t IgnoreSportsTagEvent.sportsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IgnoreSportsTagEvent.sportsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IgnoreSportsTagEvent.sportsData.modify())(_QWORD)
{
  type metadata accessor for IgnoreSportsTagEvent(0);
  return nullsub_1;
}

uint64_t IgnoreSportsTagEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IgnoreSportsTagEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IgnoreSportsTagEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for IgnoreSportsTagEvent(0);
  return nullsub_1;
}

uint64_t IgnoreSportsTagEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for IgnoreSportsTagEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t IgnoreSportsTagEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t IgnoreSportsTagEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for IgnoreSportsTagEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF51470);
}

uint64_t IgnoreSportsTagEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t IgnoreSportsTagEvent.Model.sportsData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent.Model(0) + 28));
  return swift_bridgeObjectRetain();
}

uint64_t IgnoreSportsTagEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IgnoreSportsTagEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

int *IgnoreSportsTagEvent.Model.init(eventData:userBundleSubscriptionContextData:tagData:sportsData:viewData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int *result;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;

  v8 = *a2;
  v9 = *((_QWORD *)a2 + 1);
  v10 = *((_QWORD *)a2 + 2);
  v11 = a2[24];
  v12 = a2[25];
  v13 = *((_QWORD *)a2 + 4);
  v14 = *((_QWORD *)a2 + 5);
  v15 = a2[48];
  v21 = a3[1];
  v22 = *a3;
  v23 = *a4;
  v25 = a5[1];
  v26 = *a5;
  v24 = *((_WORD *)a5 + 8);
  v16 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  result = (int *)type metadata accessor for IgnoreSportsTagEvent.Model(0);
  v18 = a6 + result[5];
  *(_BYTE *)v18 = v8;
  *(_QWORD *)(v18 + 8) = v9;
  *(_QWORD *)(v18 + 16) = v10;
  *(_BYTE *)(v18 + 24) = v11;
  *(_BYTE *)(v18 + 25) = v12;
  *(_QWORD *)(v18 + 32) = v13;
  *(_QWORD *)(v18 + 40) = v14;
  *(_BYTE *)(v18 + 48) = v15;
  v19 = (_QWORD *)(a6 + result[6]);
  *v19 = v22;
  v19[1] = v21;
  *(_QWORD *)(a6 + result[7]) = v23;
  v20 = a6 + result[8];
  *(_QWORD *)v20 = v26;
  *(_QWORD *)(v20 + 8) = v25;
  *(_WORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1D5A3F96C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A3F9A0 + 4 * byte_1D5AE1950[*v0]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1D5A3F9A0()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5A3F9BC()
{
  return 0x61746144676174;
}

uint64_t sub_1D5A3F9D4()
{
  return 0x61447374726F7073;
}

uint64_t sub_1D5A3F9F0()
{
  return 0x6174614477656976;
}

uint64_t sub_1D5A3FA08()
{
  sub_1D5A3FCCC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A3FA30()
{
  sub_1D5A3FCCC();
  return sub_1D5AAEEE0();
}

uint64_t IgnoreSportsTagEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;

  v3 = v1;
  sub_1D5A4017C(0, &qword_1EFF51360, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A3FCCC();
  sub_1D5AAEEC8();
  LOBYTE(v23) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for IgnoreSportsTagEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v23) = *(_BYTE *)v11;
    v24 = *(_OWORD *)(v11 + 8);
    v25 = v12;
    v26 = v13;
    v27 = *(_OWORD *)(v11 + 32);
    v28 = v14;
    HIBYTE(v22) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v15 = (uint64_t *)(v3 + v10[6]);
    v17 = *v15;
    v16 = v15[1];
    v23 = v17;
    *(_QWORD *)&v24 = v16;
    HIBYTE(v22) = 2;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v23 = *(_QWORD *)(v3 + v10[7]);
    HIBYTE(v22) = 3;
    sub_1D57CBB60();
    sub_1D5AAED6C();
    v18 = (uint64_t *)(v3 + v10[8]);
    v19 = *v18;
    v20 = v18[1];
    LOWORD(v18) = *((_WORD *)v18 + 8);
    v23 = v19;
    *(_QWORD *)&v24 = v20;
    WORD4(v24) = (_WORD)v18;
    HIBYTE(v22) = 4;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A3FCCC()
{
  unint64_t result;

  result = qword_1EFF51368;
  if (!qword_1EFF51368)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE1B6C, &type metadata for IgnoreSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51368);
  }
  return result;
}

uint64_t IgnoreSportsTagEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int16 v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  char v34;
  __int128 v35;
  char v36;
  char v37;

  v25 = a2;
  v3 = sub_1D5AADF98();
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A4017C(0, &qword_1EFF51370, MEMORY[0x1E0DED048]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - v7;
  v9 = (int *)type metadata accessor for IgnoreSportsTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A3FCCC();
  v29 = v8;
  v12 = (uint64_t)v30;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = v6;
  v13 = v26;
  v30 = a1;
  LOBYTE(v31) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v28, v3);
  v37 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v14 = v33;
  v15 = v34;
  v16 = v36;
  v17 = &v11[v9[5]];
  *v17 = v31;
  *(_OWORD *)(v17 + 8) = v32;
  v17[24] = v14;
  v17[25] = v15;
  *((_OWORD *)v17 + 2) = v35;
  v17[48] = v16;
  v37 = 2;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v18 = v32;
  v19 = &v11[v9[6]];
  *(_QWORD *)v19 = v31;
  *((_QWORD *)v19 + 1) = v18;
  v37 = 3;
  sub_1D57CBB1C();
  sub_1D5AAECD0();
  *(_QWORD *)&v11[v9[7]] = v31;
  v37 = 4;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v27);
  v20 = v32;
  v21 = WORD4(v32);
  v22 = &v11[v9[8]];
  *(_QWORD *)v22 = v31;
  *((_QWORD *)v22 + 1) = v20;
  *((_WORD *)v22 + 8) = v21;
  sub_1D5A401D8((uint64_t)v11, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_1D5A4021C((uint64_t)v11);
}

void sub_1D5A4017C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A3FCCC();
    v7 = a3(a1, &type metadata for IgnoreSportsTagEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A401D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IgnoreSportsTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A4021C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IgnoreSportsTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A40258@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IgnoreSportsTagEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A4026C(_QWORD *a1)
{
  return IgnoreSportsTagEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A40280@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47448, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF51330, a1);
}

uint64_t sub_1D5A402A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47450, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF51348, a1);
}

uint64_t getEnumTagSinglePayload for IgnoreSportsTagEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A402D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for IgnoreSportsTagEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A40440(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for IgnoreSportsTagEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A405B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for IgnoreSportsTagEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A40640(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A406BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IgnoreSportsTagEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A4079C + 4 * byte_1D5AE195A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A407D0 + 4 * byte_1D5AE1955[v4]))();
}

uint64_t sub_1D5A407D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A407D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A407E0);
  return result;
}

uint64_t sub_1D5A407EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A407F4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A407F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A40800(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IgnoreSportsTagEvent.Model.CodingKeys()
{
  return &type metadata for IgnoreSportsTagEvent.Model.CodingKeys;
}

unint64_t sub_1D5A40820()
{
  unint64_t result;

  result = qword_1EFF514B8;
  if (!qword_1EFF514B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE1B44, &type metadata for IgnoreSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF514B8);
  }
  return result;
}

unint64_t sub_1D5A40868()
{
  unint64_t result;

  result = qword_1EFF514C0;
  if (!qword_1EFF514C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE1AB4, &type metadata for IgnoreSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF514C0);
  }
  return result;
}

unint64_t sub_1D5A408B0()
{
  unint64_t result;

  result = qword_1EFF514C8;
  if (!qword_1EFF514C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE1ADC, &type metadata for IgnoreSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF514C8);
  }
  return result;
}

void PersonalizedAdsUserSelectionData.selectionType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *PersonalizedAdsUserSelectionData.selectionType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*PersonalizedAdsUserSelectionData.selectionType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::PersonalizedAdsUserSelectionData __swiftcall PersonalizedAdsUserSelectionData.init(selectionType:)(NewsAnalytics::PersonalizedAdsUserSelectionData selectionType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)selectionType.selectionType;
  return selectionType;
}

uint64_t sub_1D5A40928()
{
  sub_1D5A40A7C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A40950()
{
  sub_1D5A40A7C();
  return sub_1D5AAEEE0();
}

uint64_t PersonalizedAdsUserSelectionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5A40C3C(0, &qword_1EFF514D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A40A7C();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5A40AC0();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A40A7C()
{
  unint64_t result;

  result = qword_1EFF514D8;
  if (!qword_1EFF514D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE1D54, &type metadata for PersonalizedAdsUserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF514D8);
  }
  return result;
}

unint64_t sub_1D5A40AC0()
{
  unint64_t result;

  result = qword_1EFF514E0;
  if (!qword_1EFF514E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PersonalizedAdsUserSelectionType, &type metadata for PersonalizedAdsUserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1EFF514E0);
  }
  return result;
}

uint64_t PersonalizedAdsUserSelectionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5A40C3C(0, &qword_1EFF514E8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A40A7C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5A40C98();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A40C3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A40A7C();
    v7 = a3(a1, &type metadata for PersonalizedAdsUserSelectionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A40C98()
{
  unint64_t result;

  result = qword_1EFF514F0;
  if (!qword_1EFF514F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PersonalizedAdsUserSelectionType, &type metadata for PersonalizedAdsUserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1EFF514F0);
  }
  return result;
}

uint64_t sub_1D5A40CE4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return PersonalizedAdsUserSelectionData.init(from:)(a1, a2);
}

uint64_t sub_1D5A40CF8(_QWORD *a1)
{
  return PersonalizedAdsUserSelectionData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsUserSelectionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A40D58 + 4 * byte_1D5AE1BC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A40D8C + 4 * byte_1D5AE1BC0[v4]))();
}

uint64_t sub_1D5A40D8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A40D94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A40D9CLL);
  return result;
}

uint64_t sub_1D5A40DA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A40DB0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A40DB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A40DBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsUserSelectionData()
{
  return &type metadata for PersonalizedAdsUserSelectionData;
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsUserSelectionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A40E18 + 4 * byte_1D5AE1BCA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A40E38 + 4 * byte_1D5AE1BCF[v4]))();
}

_BYTE *sub_1D5A40E18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A40E38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A40E40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A40E48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A40E50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A40E58(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsUserSelectionData.CodingKeys()
{
  return &type metadata for PersonalizedAdsUserSelectionData.CodingKeys;
}

unint64_t sub_1D5A40E78()
{
  unint64_t result;

  result = qword_1EFF514F8;
  if (!qword_1EFF514F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE1D2C, &type metadata for PersonalizedAdsUserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF514F8);
  }
  return result;
}

unint64_t sub_1D5A40EC0()
{
  unint64_t result;

  result = qword_1EFF51500;
  if (!qword_1EFF51500)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE1C9C, &type metadata for PersonalizedAdsUserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51500);
  }
  return result;
}

unint64_t sub_1D5A40F08()
{
  unint64_t result;

  result = qword_1EFF51508;
  if (!qword_1EFF51508)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE1CC4, &type metadata for PersonalizedAdsUserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51508);
  }
  return result;
}

NewsAnalytics::GroupLocation_optional __swiftcall GroupLocation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::GroupLocation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t GroupLocation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A40FD4 + 4 * byte_1D5AE1DA4[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A40FD4()
{
  return 0x656C6369747261;
}

uint64_t sub_1D5A40FE8()
{
  return 1684366694;
}

uint64_t sub_1D5A40FF8()
{
  return 0x747241664F646E65;
}

void sub_1D5A41018(char *a1)
{
  sub_1D5A3C850(*a1);
}

unint64_t sub_1D5A41028()
{
  unint64_t result;

  result = qword_1EFF51510;
  if (!qword_1EFF51510)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupLocation, &type metadata for GroupLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF51510);
  }
  return result;
}

void sub_1D5A4106C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A410B8()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A41124()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A41160()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A411B8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A41200()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::GroupLocation_optional sub_1D5A4126C(Swift::String *a1)
{
  return GroupLocation.init(rawValue:)(*a1);
}

uint64_t sub_1D5A41278()
{
  sub_1D57A4A2C();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for GroupLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5A41320 + 4 * byte_1D5AE1DBD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5A41354 + 4 * byte_1D5AE1DB8[v4]))();
}

uint64_t sub_1D5A41354(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A4135C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A41364);
  return result;
}

uint64_t sub_1D5A41370(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A41378);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5A4137C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A41384(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

Swift::Bool __swiftcall FCChannelProviding.isAdSupported()()
{
  void *v0;

  return (uint64_t)objc_msgSend(v0, sel_contentProvider) > 1;
}

NewsAnalytics::ListenSheetActionData_optional __swiftcall ListenSheetActionData.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ListenSheetActionData_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ListenSheetActionData.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A41440 + 4 * byte_1D5AE1EE0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A41440()
{
  return 0x6F4E6E657473696CLL;
}

uint64_t sub_1D5A4145C()
{
  return 0x654E6E657473696CLL;
}

uint64_t sub_1D5A41478()
{
  return 0x614C6E657473696CLL;
}

uint64_t sub_1D5A41498()
{
  return 0x6C65636E6163;
}

void sub_1D5A414AC(char *a1)
{
  sub_1D5A38868(*a1);
}

unint64_t sub_1D5A414BC()
{
  unint64_t result;

  result = qword_1EFF51518;
  if (!qword_1EFF51518)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ListenSheetActionData, &type metadata for ListenSheetActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF51518);
  }
  return result;
}

void sub_1D5A41500()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A4154C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A415E0()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A4161C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A4169C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A416E4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::ListenSheetActionData_optional sub_1D5A41778(Swift::String *a1)
{
  return ListenSheetActionData.init(rawValue:)(*a1);
}

uint64_t sub_1D5A41784()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5A417B4 + 4 * byte_1D5AE1EF4[*v0]))();
}

void sub_1D5A417B4(_QWORD *a1@<X8>)
{
  *a1 = 0x6F4E6E657473696CLL;
  a1[1] = 0xE900000000000077;
}

void sub_1D5A417D4(_QWORD *a1@<X8>)
{
  *a1 = 0x654E6E657473696CLL;
  a1[1] = 0xEA00000000007478;
}

void sub_1D5A417F4(_QWORD *a1@<X8>)
{
  *a1 = 0x614C6E657473696CLL;
  a1[1] = 0xEB00000000726574;
}

void sub_1D5A41818(_QWORD *a1@<X8>)
{
  *a1 = 0x6C65636E6163;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1D5A41830()
{
  sub_1D5A419A4();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A4188C()
{
  sub_1D5A419A4();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for ListenSheetActionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A41924 + 4 * byte_1D5AE1EFE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A41958 + 4 * byte_1D5AE1EF9[v4]))();
}

uint64_t sub_1D5A41958(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A41960(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A41968);
  return result;
}

uint64_t sub_1D5A41974(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A4197CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A41980(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A41988(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListenSheetActionData()
{
  return &type metadata for ListenSheetActionData;
}

unint64_t sub_1D5A419A4()
{
  unint64_t result;

  result = qword_1EFF51520;
  if (!qword_1EFF51520)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ListenSheetActionData, &type metadata for ListenSheetActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF51520);
  }
  return result;
}

uint64_t sub_1D5A419E8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF51528, MEMORY[0x1E0CF8078]);
}

uint64_t static SearchResultSelectEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47458, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF51528, a1);
}

uint64_t sub_1D5A41A28(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF51540, MEMORY[0x1E0CF8380]);
}

uint64_t static SearchResultSelectEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47460, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF51540, a1);
}

uint64_t SearchResultSelectEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SearchResultSelectEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SearchResultSelectEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SearchResultSelectEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF515D0);
}

uint64_t SearchResultSelectEvent.searchData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.searchData.modify())(_QWORD)
{
  type metadata accessor for SearchResultSelectEvent(0);
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.searchSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchResultSelectEvent.searchSelectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.searchSelectionData.modify())(_QWORD)
{
  type metadata accessor for SearchResultSelectEvent(0);
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.searchResultsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 28);
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchResultSelectEvent.searchResultsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 28);
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.searchResultsData.modify())(_QWORD)
{
  type metadata accessor for SearchResultSelectEvent(0);
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchResultSelectEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for SearchResultSelectEvent(0);
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchResultSelectEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for SearchResultSelectEvent(0);
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SearchResultSelectEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
}

uint64_t SearchResultSelectEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SearchResultSelectEvent.Model.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SearchResultSelectEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF51670);
}

uint64_t SearchResultSelectEvent.Model.searchSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultSelectEvent.Model.searchResultsData.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v3 = (_OWORD *)(v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 28));
  v4 = v3[5];
  v5 = v3[7];
  v21 = v3[6];
  v22 = v5;
  v6 = v3[7];
  v23 = v3[8];
  v7 = v3[1];
  v8 = v3[3];
  v17 = v3[2];
  v9 = v17;
  v18 = v8;
  v10 = v3[3];
  v11 = v3[5];
  v19 = v3[4];
  v12 = v19;
  v20 = v11;
  v13 = v3[1];
  v16[0] = *v3;
  v14 = v16[0];
  v16[1] = v13;
  a1[6] = v21;
  a1[7] = v6;
  a1[8] = v3[8];
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v12;
  a1[5] = v4;
  *a1 = v14;
  a1[1] = v7;
  return sub_1D581A868((uint64_t)v16);
}

uint64_t SearchResultSelectEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 32));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultSelectEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

__n128 SearchResultSelectEvent.Model.init(eventData:searchData:searchSelectionData:searchResultsData:userBundleSubscriptionContextData:viewData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, __n128 *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 *v21;
  __n128 result;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int16 v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;

  v9 = *a2;
  v10 = a2[1];
  v11 = *((_BYTE *)a2 + 16);
  v12 = *a3;
  v13 = a3[1];
  v14 = *((_BYTE *)a3 + 16);
  v40 = a4[6];
  v41 = a4[7];
  v42 = a4[8];
  v36 = a4[2];
  v37 = a4[3];
  v38 = a4[4];
  v39 = a4[5];
  v34 = *a4;
  v35 = a4[1];
  v28 = *((_QWORD *)a5 + 2);
  v29 = *((_QWORD *)a5 + 1);
  v15 = a5[24];
  v16 = a5[25];
  v26 = *((_QWORD *)a5 + 5);
  v27 = *((_QWORD *)a5 + 4);
  v25 = a5[48];
  v32 = a6[1];
  v33 = *a6;
  v30 = *a5;
  v31 = *((_WORD *)a6 + 8);
  v17 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v18 = (int *)type metadata accessor for SearchResultSelectEvent.Model(0);
  v19 = a7 + v18[5];
  *(_QWORD *)v19 = v9;
  *(_QWORD *)(v19 + 8) = v10;
  *(_BYTE *)(v19 + 16) = v11;
  v20 = a7 + v18[6];
  *(_QWORD *)v20 = v12;
  *(_QWORD *)(v20 + 8) = v13;
  *(_BYTE *)(v20 + 16) = v14;
  v21 = (__n128 *)(a7 + v18[7]);
  v21[6] = v40;
  v21[7] = v41;
  v21[8] = v42;
  v21[2] = v36;
  v21[3] = v37;
  v21[4] = v38;
  v21[5] = v39;
  result = v35;
  *v21 = v34;
  v21[1] = v35;
  v23 = a7 + v18[8];
  *(_BYTE *)v23 = v30;
  *(_QWORD *)(v23 + 8) = v29;
  *(_QWORD *)(v23 + 16) = v28;
  *(_BYTE *)(v23 + 24) = v15;
  *(_BYTE *)(v23 + 25) = v16;
  *(_QWORD *)(v23 + 32) = v27;
  *(_QWORD *)(v23 + 40) = v26;
  *(_BYTE *)(v23 + 48) = v25;
  v24 = a7 + v18[9];
  *(_QWORD *)v24 = v33;
  *(_QWORD *)(v24 + 8) = v32;
  *(_WORD *)(v24 + 16) = v31;
  return result;
}

uint64_t sub_1D5A424B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A424F0 + 4 * byte_1D5AE2030[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A424F0()
{
  return 0x6144686372616573;
}

unint64_t sub_1D5A4250C()
{
  return 0xD000000000000013;
}

uint64_t sub_1D5A42560()
{
  return 0x6174614477656976;
}

uint64_t sub_1D5A42578()
{
  unsigned __int8 *v0;

  return sub_1D5A424B8(*v0);
}

uint64_t sub_1D5A42580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A44FD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A425A4()
{
  sub_1D5A428FC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A425CC()
{
  sub_1D5A428FC();
  return sub_1D5AAEEE0();
}

uint64_t SearchResultSelectEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  _BYTE v32[32];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v3 = v1;
  sub_1D5A42F54(0, &qword_1EFF51560, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A428FC();
  sub_1D5AAEEC8();
  v32[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SearchResultSelectEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOBYTE(v11) = *((_BYTE *)v11 + 16);
    *(_QWORD *)v32 = v12;
    *(_QWORD *)&v32[8] = v13;
    v32[16] = (_BYTE)v11;
    LOBYTE(v41) = 1;
    sub_1D57CBC9C();
    sub_1D5AAED6C();
    v14 = (uint64_t *)(v3 + v10[6]);
    v15 = *v14;
    v16 = v14[1];
    LOBYTE(v14) = *((_BYTE *)v14 + 16);
    v41 = v15;
    v42 = v16;
    v43 = (char)v14;
    v40 = 2;
    sub_1D58B57C0();
    sub_1D5AAED6C();
    v17 = (_OWORD *)(v3 + v10[7]);
    v18 = v17[7];
    v37 = v17[6];
    v38 = v18;
    v39 = v17[8];
    v19 = v17[3];
    v33 = v17[2];
    v34 = v19;
    v20 = v17[5];
    v35 = v17[4];
    v36 = v20;
    v21 = v17[1];
    *(_OWORD *)v32 = *v17;
    *(_OWORD *)&v32[16] = v21;
    v31 = 3;
    sub_1D581AA0C();
    sub_1D5AAED6C();
    v22 = v3 + v10[8];
    v23 = *(_BYTE *)(v22 + 24);
    v24 = *(_BYTE *)(v22 + 25);
    v25 = *(_BYTE *)(v22 + 48);
    v32[0] = *(_BYTE *)v22;
    *(_OWORD *)&v32[8] = *(_OWORD *)(v22 + 8);
    v32[24] = v23;
    v32[25] = v24;
    v33 = *(_OWORD *)(v22 + 32);
    LOBYTE(v34) = v25;
    v31 = 4;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v26 = (uint64_t *)(v3 + v10[9]);
    v27 = *v26;
    v28 = v26[1];
    LOWORD(v26) = *((_WORD *)v26 + 8);
    *(_QWORD *)v32 = v27;
    *(_QWORD *)&v32[8] = v28;
    *(_WORD *)&v32[16] = (_WORD)v26;
    v31 = 5;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

