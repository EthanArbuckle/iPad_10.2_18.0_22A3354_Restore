uint64_t sub_1D58AB95C()
{
  sub_1D58ABC0C();
  return sub_1D5AAEEE0();
}

uint64_t EmailSignupEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  char v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;
  char v23;

  v3 = v1;
  sub_1D58AC090(0, &qword_1EFF4B378, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58ABC0C();
  sub_1D5AAEEC8();
  v17 = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for EmailSignupEvent.Model(0);
    v17 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v17 = *(_BYTE *)(v3 + v10[6]);
    v23 = 2;
    sub_1D57C739C();
    sub_1D5AAED6C();
    v17 = *(_BYTE *)(v3 + v10[7]);
    v23 = 3;
    sub_1D57C7028();
    sub_1D5AAED6C();
    v11 = v3 + v10[8];
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    v17 = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    v23 = 4;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58ABC0C()
{
  unint64_t result;

  result = qword_1ED9CDAC0;
  if (!qword_1ED9CDAC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1FC4, &type metadata for EmailSignupEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDAC0);
  }
  return result;
}

uint64_t EmailSignupEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  _QWORD v26[2];
  int *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  char v38;
  __int128 v39;
  char v40;
  char v41;
  __int128 v42;
  char v43;
  char v44;

  v29 = a2;
  v3 = sub_1D5AADFB0();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v34 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58AC090(0, &qword_1ED9CE148, MEMORY[0x1E0DED048]);
  v35 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v26 - v9;
  v11 = type metadata accessor for EmailSignupEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58ABC0C();
  v36 = v10;
  v14 = (uint64_t)v37;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = (int *)v11;
  v28 = v8;
  v37 = a1;
  v15 = v31;
  v16 = v32;
  v38 = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v33;
  v18 = v34;
  sub_1D5AAECD0();
  v26[1] = v5;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v18, v17);
  v38 = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v19 = v30;
  sub_1D5AAECD0();
  v20 = v27;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v13[v27[5]], v19, v16);
  v44 = 2;
  sub_1D57C7358();
  sub_1D5AAECD0();
  v13[v20[6]] = v38;
  v44 = 3;
  sub_1D57C6FE4();
  sub_1D5AAECD0();
  v13[v20[7]] = v38;
  v44 = 4;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v35);
  v21 = v40;
  v22 = v41;
  v23 = v43;
  v24 = &v13[v20[8]];
  *v24 = v38;
  *(_OWORD *)(v24 + 8) = v39;
  v24[24] = v21;
  v24[25] = v22;
  *((_OWORD *)v24 + 2) = v42;
  v24[48] = v23;
  sub_1D58AC0EC((uint64_t)v13, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return sub_1D58AC130((uint64_t)v13);
}

void sub_1D58AC090(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58ABC0C();
    v7 = a3(a1, &type metadata for EmailSignupEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58AC0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EmailSignupEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58AC130(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EmailSignupEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58AC16C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EmailSignupEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58AC180(_QWORD *a1)
{
  return EmailSignupEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58AC194@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCDD8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCDC0, a1);
}

uint64_t sub_1D58AC1B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD290, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD760, a1);
}

uint64_t sub_1D58AC1DC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for EmailSignupEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for EmailSignupEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for EmailSignupEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for EmailSignupEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for EmailSignupEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for EmailSignupEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmailSignupEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58ACB9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for EmailSignupEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58ACCE8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for EmailSignupEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
    v13 = a3[8];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    *((_WORD *)v14 + 12) = *((_WORD *)v15 + 12);
    v17 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 5) = v17;
    v14[48] = v15[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EmailSignupEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmailSignupEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  *(_WORD *)(v13 + 24) = *(_WORD *)(v14 + 24);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v16;
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmailSignupEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  return a1;
}

uint64_t initializeWithTake for EmailSignupEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  return a1;
}

uint64_t assignWithTake for EmailSignupEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 24) = *(_BYTE *)(v14 + 24);
  *(_BYTE *)(v13 + 25) = *(_BYTE *)(v14 + 25);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmailSignupEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58AD33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for EmailSignupEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58AD400(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 16) = a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for EmailSignupEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D58AD4F4 + 4 * byte_1D5AC1DBA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D58AD528 + 4 * byte_1D5AC1DB5[v4]))();
}

uint64_t sub_1D58AD528(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58AD530(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58AD538);
  return result;
}

uint64_t sub_1D58AD544(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58AD54CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D58AD550(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58AD558(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmailSignupEvent.Model.CodingKeys()
{
  return &type metadata for EmailSignupEvent.Model.CodingKeys;
}

unint64_t sub_1D58AD578()
{
  unint64_t result;

  result = qword_1EFF4B380;
  if (!qword_1EFF4B380)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1F9C, &type metadata for EmailSignupEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B380);
  }
  return result;
}

unint64_t sub_1D58AD5C0()
{
  unint64_t result;

  result = qword_1ED9CD0A0;
  if (!qword_1ED9CD0A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1F0C, &type metadata for EmailSignupEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD0A0);
  }
  return result;
}

unint64_t sub_1D58AD608()
{
  unint64_t result;

  result = qword_1ED9CDAC8;
  if (!qword_1ED9CDAC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1F34, &type metadata for EmailSignupEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDAC8);
  }
  return result;
}

uint64_t sub_1D58AD64C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974634172657375 && a2 == 0xEE00617461446E6FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AEE990 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

NewsAnalytics::DevicePlatform_optional __swiftcall DevicePlatform.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::DevicePlatform_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DevicePlatform.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58AD918 + 4 * byte_1D5AC2014[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D58AD918()
{
  return 5459817;
}

uint64_t sub_1D58AD928()
{
  return 0x534F64615069;
}

uint64_t sub_1D58AD93C()
{
  return 0x534F63616DLL;
}

void sub_1D58AD950(char *a1)
{
  sub_1D5A3C56C(*a1);
}

unint64_t sub_1D58AD960()
{
  unint64_t result;

  result = qword_1EFF4B388;
  if (!qword_1EFF4B388)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DevicePlatform, &type metadata for DevicePlatform);
    atomic_store(result, (unint64_t *)&qword_1EFF4B388);
  }
  return result;
}

void sub_1D58AD9A4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58AD9F0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D58ADA50()
{
  __asm { BR              X10 }
}

uint64_t sub_1D58ADA8C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D58ADAD8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58ADB20()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::DevicePlatform_optional sub_1D58ADB80(Swift::String *a1)
{
  return DevicePlatform.init(rawValue:)(*a1);
}

uint64_t sub_1D58ADB8C()
{
  sub_1D57A5640();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for DevicePlatform(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D58ADC34 + 4 * byte_1D5AC202D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D58ADC68 + 4 * byte_1D5AC2028[v4]))();
}

uint64_t sub_1D58ADC68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58ADC70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58ADC78);
  return result;
}

uint64_t sub_1D58ADC84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58ADC8CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D58ADC90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58ADC98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58ADCA4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCB58, MEMORY[0x1E0CF8078]);
}

uint64_t static AppSessionEndEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCDE8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCB58, a1);
}

uint64_t sub_1D58ADCE4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCDF0, MEMORY[0x1E0CF8380]);
}

uint64_t static AppSessionEndEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCE10, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCDF0, a1);
}

uint64_t AppSessionEndEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AppSessionEndEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppSessionEndEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionEndEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for AppSessionEndEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t AppSessionEndEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.timedData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.subscriptionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.subscriptionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.subscriptionData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.notificationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.notificationData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.notificationSettingsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.notificationSettingsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.notificationSettingsData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.autoSubscribedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.autoSubscribedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.autoSubscribedData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.viewEndData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.userEventStorageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.userEventStorageData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.userEventStorageData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.subscribedSportsListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.subscribedSportsListData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.subscribedSportsListData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.tabiData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.tabiData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.tabiData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.userEmbeddingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.userEmbeddingData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.userEmbeddingData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.liveActivityCountData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.liveActivityCountData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.liveActivityCountData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AppSessionEndEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v12, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v12, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v12, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v12, v29);
}

uint64_t AppSessionEndEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppSessionEndEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for AppSessionEndEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t AppSessionEndEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 24));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AppSessionEndEvent.Model.subscriptionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v3[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AppSessionEndEvent.Model.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 32);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  LOWORD(v3) = *(_WORD *)(v3 + 72);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_WORD *)(a1 + 72) = v3;
  return sub_1D58AEDC8(v4, v5);
}

uint64_t sub_1D58AEDC8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t AppSessionEndEvent.Model.notificationSettingsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 36));
  v4 = *v3;
  v5 = *((_BYTE *)v3 + 8);
  v6 = *((_BYTE *)v3 + 9);
  v7 = *((_BYTE *)v3 + 10);
  v8 = *((_BYTE *)v3 + 11);
  v9 = *((_BYTE *)v3 + 12);
  LOWORD(v3) = *(_WORD *)((char *)v3 + 13);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = v6;
  *(_BYTE *)(a1 + 10) = v7;
  *(_BYTE *)(a1 + 11) = v8;
  *(_BYTE *)(a1 + 12) = v9;
  *(_WORD *)(a1 + 13) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t AppSessionEndEvent.Model.autoSubscribedData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppSessionEndEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t AppSessionEndEvent.Model.viewEndData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppSessionEndEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t AppSessionEndEvent.Model.userEventStorageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[336];

  v3 = type metadata accessor for AppSessionEndEvent.Model(0);
  sub_1D58AEF28(v1 + *(int *)(v3 + 48), (uint64_t)v5);
  return sub_1D58AEF28((uint64_t)v5, a1);
}

uint64_t sub_1D58AEF28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D58AEF6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D58AEF6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CE4B0)
  {
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CE4B0);
  }
}

uint64_t AppSessionEndEvent.Model.subscribedSportsListData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 52));
  return swift_bridgeObjectRetain();
}

uint64_t AppSessionEndEvent.Model.tabiData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 56));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v12 = v3[8];
  v13 = v3[9];
  v14 = v3[10];
  v16 = v3[11];
  v15 = v3[12];
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1D586E278(v9);
}

uint64_t AppSessionEndEvent.Model.userEmbeddingData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 60));
  return swift_bridgeObjectRetain();
}

uint64_t AppSessionEndEvent.Model.liveActivityCountData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for AppSessionEndEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 64));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

__n128 AppSessionEndEvent.Model.init(eventData:timedData:userBundleSubscriptionContextData:subscriptionData:notificationData:notificationSettingsData:autoSubscribedData:viewEndData:userEventStorageData:subscribedSportsListData:tabiData:userEmbeddingData:liveActivityCountData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, uint64_t *a6@<X5>, int *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, int *a14)
{
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 result;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v45;
  __int16 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int16 v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  int v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  __int128 v66;
  __int128 v67;
  char v68;
  uint64_t v69;
  _BYTE v70[336];

  v17 = *a3;
  v18 = *((_QWORD *)a3 + 1);
  v19 = *((_QWORD *)a3 + 2);
  v42 = a3[25];
  v43 = a3[24];
  v40 = *((_QWORD *)a3 + 5);
  v41 = *((_QWORD *)a3 + 4);
  v39 = a3[48];
  v45 = a4[5];
  v50 = a5[1];
  v51 = *a5;
  v48 = a5[3];
  v49 = a5[2];
  v47 = *((_QWORD *)a5 + 8);
  v46 = *((_WORD *)a5 + 36);
  v58 = *a6;
  v56 = *((_BYTE *)a6 + 9);
  v57 = *((_BYTE *)a6 + 8);
  v54 = *((_BYTE *)a6 + 11);
  v55 = *((_BYTE *)a6 + 10);
  v52 = *(_WORD *)((char *)a6 + 13);
  v53 = *((_BYTE *)a6 + 12);
  v59 = *a7;
  v60 = *a8;
  sub_1D58AEF28(a10, (uint64_t)v70);
  v61 = *a11;
  v62 = *a12;
  v69 = a12[3];
  v68 = *((_BYTE *)a12 + 32);
  v66 = *(_OWORD *)(a12 + 7);
  v67 = *(_OWORD *)(a12 + 5);
  v65 = *(__n128 *)(a12 + 9);
  v63 = a12[12];
  v64 = a12[11];
  v20 = *a13;
  v21 = *a14;
  v22 = *((_BYTE *)a14 + 4);
  v23 = sub_1D5AADF98();
  v37 = *(_OWORD *)(a4 + 1);
  v38 = *(_OWORD *)(a12 + 1);
  v36 = *(_OWORD *)(a4 + 3);
  v24 = *a4;
  v25 = a4[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a9, a1, v23);
  v26 = (int *)type metadata accessor for AppSessionEndEvent.Model(0);
  v27 = a9 + v26[5];
  v28 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a2, v28);
  v29 = a9 + v26[6];
  *(_BYTE *)v29 = v17;
  *(_QWORD *)(v29 + 8) = v18;
  *(_QWORD *)(v29 + 16) = v19;
  *(_BYTE *)(v29 + 24) = v43;
  *(_BYTE *)(v29 + 25) = v42;
  *(_QWORD *)(v29 + 32) = v41;
  *(_QWORD *)(v29 + 40) = v40;
  *(_BYTE *)(v29 + 48) = v39;
  v30 = a9 + v26[7];
  *(_QWORD *)v30 = v24;
  *(_OWORD *)(v30 + 8) = v37;
  *(_OWORD *)(v30 + 24) = v36;
  *(_QWORD *)(v30 + 40) = v45;
  *(_QWORD *)(v30 + 48) = v25;
  v31 = a9 + v26[8];
  *(_OWORD *)v31 = v51;
  *(_OWORD *)(v31 + 16) = v50;
  *(_OWORD *)(v31 + 32) = v49;
  *(_OWORD *)(v31 + 48) = v48;
  *(_QWORD *)(v31 + 64) = v47;
  *(_WORD *)(v31 + 72) = v46;
  v32 = a9 + v26[9];
  *(_QWORD *)v32 = v58;
  *(_BYTE *)(v32 + 8) = v57;
  *(_BYTE *)(v32 + 9) = v56;
  *(_BYTE *)(v32 + 10) = v55;
  *(_BYTE *)(v32 + 11) = v54;
  *(_BYTE *)(v32 + 12) = v53;
  *(_WORD *)(v32 + 13) = v52;
  *(_DWORD *)(a9 + v26[10]) = v59;
  *(_BYTE *)(a9 + v26[11]) = v60;
  sub_1D58AEF28((uint64_t)v70, a9 + v26[12]);
  *(_QWORD *)(a9 + v26[13]) = v61;
  v33 = a9 + v26[14];
  *(_QWORD *)v33 = v62;
  *(_OWORD *)(v33 + 8) = v38;
  *(_QWORD *)(v33 + 24) = v69;
  *(_BYTE *)(v33 + 32) = v68;
  *(_OWORD *)(v33 + 40) = v67;
  *(_OWORD *)(v33 + 56) = v66;
  result = v65;
  *(__n128 *)(v33 + 72) = v65;
  *(_QWORD *)(v33 + 88) = v64;
  *(_QWORD *)(v33 + 96) = v63;
  *(_QWORD *)(a9 + v26[15]) = v20;
  v35 = a9 + v26[16];
  *(_DWORD *)v35 = v21;
  *(_BYTE *)(v35 + 4) = v22;
  return result;
}

uint64_t sub_1D58AF430(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58AF468 + 4 * byte_1D5AC2150[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58AF468()
{
  return 0x74614464656D6974;
}

unint64_t sub_1D58AF47C()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58AF590()
{
  unsigned __int8 *v0;

  return sub_1D58AF430(*v0);
}

uint64_t sub_1D58AF598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58B3F60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58AF5BC()
{
  sub_1D58AFB88();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58AF5E4()
{
  sub_1D58AFB88();
  return sub_1D5AAEEE0();
}

uint64_t AppSessionEndEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  __int128 v20;
  __int128 v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  int *v34;
  int v35;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _OWORD v46[3];
  __int128 v47;
  uint64_t v48;
  __int16 v49;
  char v50;
  char v51;

  v3 = v1;
  sub_1D58B0628(0, &qword_1ED9CD6F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58AFB88();
  sub_1D5AAEEC8();
  LOBYTE(v46[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AppSessionEndEvent.Model(0);
    LOBYTE(v46[0]) = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + v10[6];
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v46[0]) = *(_BYTE *)v11;
    *(_OWORD *)((char *)v46 + 8) = *(_OWORD *)(v11 + 8);
    BYTE8(v46[1]) = v12;
    BYTE9(v46[1]) = v13;
    v46[2] = *(_OWORD *)(v11 + 32);
    LOBYTE(v47) = v14;
    LOBYTE(v38) = 2;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v15 = v3 + v10[7];
    v16 = *(_QWORD *)(v15 + 40);
    *(_QWORD *)&v46[0] = *(_QWORD *)v15;
    *(_OWORD *)((char *)v46 + 8) = *(_OWORD *)(v15 + 8);
    *(_OWORD *)((char *)&v46[1] + 8) = *(_OWORD *)(v15 + 24);
    *((_QWORD *)&v46[2] + 1) = v16;
    *(_QWORD *)&v47 = *(_QWORD *)(v15 + 48);
    LOBYTE(v38) = 3;
    sub_1D57C9680();
    sub_1D5AAED6C();
    v17 = v3 + v10[8];
    v18 = *(_QWORD *)(v17 + 64);
    v19 = *(_WORD *)(v17 + 72);
    v20 = *(_OWORD *)(v17 + 16);
    v46[0] = *(_OWORD *)v17;
    v46[1] = v20;
    v21 = *(_OWORD *)(v17 + 48);
    v46[2] = *(_OWORD *)(v17 + 32);
    v47 = v21;
    v48 = v18;
    v49 = v19;
    LOBYTE(v38) = 4;
    sub_1D57C99E4();
    sub_1D5AAED18();
    v22 = (uint64_t *)(v3 + v10[9]);
    v23 = *v22;
    v24 = *((_BYTE *)v22 + 8);
    v25 = *((_BYTE *)v22 + 9);
    v26 = *((_BYTE *)v22 + 10);
    v27 = *((_BYTE *)v22 + 11);
    v28 = *((_BYTE *)v22 + 12);
    LOWORD(v22) = *(_WORD *)((char *)v22 + 13);
    *(_QWORD *)&v46[0] = v23;
    BYTE8(v46[0]) = v24;
    BYTE9(v46[0]) = v25;
    BYTE10(v46[0]) = v26;
    BYTE11(v46[0]) = v27;
    BYTE12(v46[0]) = v28;
    *(_WORD *)((char *)v46 + 13) = (_WORD)v22;
    LOBYTE(v38) = 5;
    sub_1D57C771C();
    sub_1D5AAED6C();
    LODWORD(v46[0]) = *(_DWORD *)(v3 + v10[10]);
    LOBYTE(v38) = 6;
    sub_1D57C91F0();
    sub_1D5AAED6C();
    v51 = *(_BYTE *)(v3 + v10[11]);
    v50 = 7;
    sub_1D57CB654();
    sub_1D5AAED6C();
    sub_1D58AEF28(v3 + v10[12], (uint64_t)v46);
    sub_1D58AEF28((uint64_t)v46, (uint64_t)&v38);
    HIBYTE(v37) = 8;
    sub_1D57C8484();
    sub_1D5AAED18();
    v38 = *(_QWORD *)(v3 + v10[13]);
    HIBYTE(v37) = 9;
    sub_1D57C7538();
    sub_1D5AAED18();
    v29 = (uint64_t *)(v3 + v10[14]);
    v30 = v29[3];
    v31 = *((_BYTE *)v29 + 32);
    v38 = *v29;
    v39 = *(_OWORD *)(v29 + 1);
    v40 = v30;
    v41 = v31;
    v32 = *(_OWORD *)(v29 + 7);
    v42 = *(_OWORD *)(v29 + 5);
    v43 = v32;
    v33 = *(_OWORD *)(v29 + 11);
    v44 = *(_OWORD *)(v29 + 9);
    v45 = v33;
    HIBYTE(v37) = 10;
    sub_1D57C653C();
    sub_1D5AAED6C();
    v38 = *(_QWORD *)(v3 + v10[15]);
    HIBYTE(v37) = 11;
    sub_1D57C9354();
    sub_1D5AAED18();
    v34 = (int *)(v3 + v10[16]);
    v35 = *v34;
    LOBYTE(v34) = *((_BYTE *)v34 + 4);
    LODWORD(v38) = v35;
    BYTE4(v38) = (_BYTE)v34;
    HIBYTE(v37) = 12;
    sub_1D57C803C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58AFB88()
{
  unint64_t result;

  result = qword_1ED9CD2C0;
  if (!qword_1ED9CD2C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC247C, &type metadata for AppSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD2C0);
  }
  return result;
}

uint64_t AppSessionEndEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int *v24;
  char v25;
  char v26;
  char v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __int16 v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  __int16 v41;
  char *v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  char v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  char v73;
  _BYTE v74[328];
  _OWORD v75[3];
  __int128 v76;
  uint64_t v77;
  __int16 v78;
  char *v79;

  v55 = a2;
  v61 = sub_1D5AADFB0();
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v60 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58B0628(0, &qword_1ED9CD8F0, MEMORY[0x1E0DED048]);
  v58 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v54 - v10;
  v64 = (int *)type metadata accessor for AppSessionEndEvent.Model(0);
  MEMORY[0x1E0C80A78](v64);
  v79 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v62 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D58AFB88();
  v56 = v11;
  v14 = v63;
  sub_1D5AAEEB0();
  v57 = v5;
  if (v14)
  {
    v63 = v14;
    result = __swift_destroy_boxed_opaque_existential_1(v62);
    LODWORD(v62) = 0;
    goto LABEL_7;
  }
  v15 = v4;
  v54 = v9;
  LOBYTE(v75[0]) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v22 = v79;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v79, v7, v5);
  LOBYTE(v75[0]) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v23 = v61;
  sub_1D5AAECD0();
  v24 = v64;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v22[v64[5]], v15, v23);
  v74[0] = 2;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v25 = BYTE8(v75[1]);
  v26 = BYTE9(v75[1]);
  v27 = v76;
  v28 = &v22[v24[6]];
  *v28 = v75[0];
  *(_OWORD *)(v28 + 8) = *(_OWORD *)((char *)v75 + 8);
  v28[24] = v25;
  v28[25] = v26;
  *((_OWORD *)v28 + 2) = v75[2];
  v28[48] = v27;
  v74[0] = 3;
  sub_1D57C963C();
  sub_1D5AAECD0();
  v29 = *((_QWORD *)&v75[2] + 1);
  v30 = &v22[v24[7]];
  *(_QWORD *)v30 = *(_QWORD *)&v75[0];
  *(_OWORD *)(v30 + 8) = *(_OWORD *)((char *)v75 + 8);
  *(_OWORD *)(v30 + 24) = *(_OWORD *)((char *)&v75[1] + 8);
  *((_QWORD *)v30 + 5) = v29;
  *((_QWORD *)v30 + 6) = v76;
  v74[0] = 4;
  sub_1D57C99A0();
  sub_1D5AAEC7C();
  v31 = v77;
  v32 = v78;
  v33 = &v22[v24[8]];
  v34 = v75[1];
  *(_OWORD *)v33 = v75[0];
  *((_OWORD *)v33 + 1) = v34;
  v35 = v76;
  *((_OWORD *)v33 + 2) = v75[2];
  *((_OWORD *)v33 + 3) = v35;
  *((_QWORD *)v33 + 8) = v31;
  *((_WORD *)v33 + 36) = v32;
  v74[0] = 5;
  sub_1D57C76D8();
  sub_1D5AAECD0();
  v36 = BYTE8(v75[0]);
  v37 = BYTE9(v75[0]);
  v38 = BYTE10(v75[0]);
  v39 = BYTE11(v75[0]);
  v40 = BYTE12(v75[0]);
  v41 = *(_WORD *)((char *)v75 + 13);
  v42 = &v22[v24[9]];
  *(_QWORD *)v42 = *(_QWORD *)&v75[0];
  v42[8] = v36;
  v42[9] = v37;
  v42[10] = v38;
  v42[11] = v39;
  v42[12] = v40;
  *(_WORD *)(v42 + 13) = v41;
  v74[0] = 6;
  sub_1D57C91AC();
  sub_1D5AAECD0();
  *(_DWORD *)&v22[v24[10]] = v75[0];
  v74[0] = 7;
  sub_1D57CB610();
  sub_1D5AAECD0();
  v22[v24[11]] = v75[0];
  v74[327] = 8;
  sub_1D57C8440();
  sub_1D5AAEC7C();
  sub_1D58AEF28((uint64_t)v75, (uint64_t)v74);
  sub_1D58AEF28((uint64_t)v74, (uint64_t)&v22[v24[12]]);
  v73 = 9;
  sub_1D57C74F4();
  sub_1D5AAEC7C();
  v63 = 0;
  *(_QWORD *)&v79[v64[13]] = v65;
  v73 = 10;
  sub_1D57C64F8();
  v43 = v63;
  sub_1D5AAECD0();
  v63 = v43;
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v58);
    __swift_destroy_boxed_opaque_existential_1(v62);
    v44 = 0;
    LODWORD(v62) = 0;
  }
  else
  {
    v46 = v67;
    v47 = v68;
    v48 = &v79[v64[14]];
    *(_QWORD *)v48 = v65;
    *(_OWORD *)(v48 + 8) = v66;
    *((_QWORD *)v48 + 3) = v46;
    v48[32] = v47;
    *(_OWORD *)(v48 + 40) = v69;
    *(_OWORD *)(v48 + 56) = v70;
    *(_OWORD *)(v48 + 72) = v71;
    *(_OWORD *)(v48 + 88) = v72;
    v73 = 11;
    sub_1D57C9310();
    v49 = v63;
    sub_1D5AAEC7C();
    v63 = v49;
    if (v49)
    {
      (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v58);
      __swift_destroy_boxed_opaque_existential_1(v62);
      LODWORD(v62) = 0;
      v44 = 1;
    }
    else
    {
      *(_QWORD *)&v79[v64[15]] = v65;
      v73 = 12;
      sub_1D57C7FF8();
      v50 = v63;
      sub_1D5AAEC7C();
      v63 = v50;
      if (!v50)
      {
        (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v58);
        v51 = BYTE4(v65);
        v52 = (uint64_t)v79;
        v53 = &v79[v64[16]];
        *(_DWORD *)v53 = v65;
        v53[4] = v51;
        sub_1D58B0764(v52, v55);
        __swift_destroy_boxed_opaque_existential_1(v62);
        return sub_1D58B07A8(v52);
      }
      (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v58);
      __swift_destroy_boxed_opaque_existential_1(v62);
      v44 = 1;
      LODWORD(v62) = 1;
    }
  }
  v45 = v79;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v79, v57);
  (*(void (**)(char *, uint64_t))(v59 + 8))(&v45[v64[5]], v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v79;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v64;
  swift_bridgeObjectRelease();
  sub_1D58B0710(*(_QWORD *)&v17[v18[8]], *(_QWORD *)&v17[v18[8] + 8]);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v44 & 1) == 0)
  {
LABEL_7:
    if (!(_DWORD)v62)
      return result;
    return swift_bridgeObjectRelease();
  }
  v19 = &v17[v18[14]];
  v20 = *((_QWORD *)v19 + 5);
  v21 = *((_QWORD *)v19 + 11);
  v60 = *((_QWORD *)v19 + 12);
  v61 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1D58B0684(v20);
  if ((v62 & 1) == 0)
    return result;
  return swift_bridgeObjectRelease();
}

void sub_1D58B0628(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58AFB88();
    v7 = a3(a1, &type metadata for AppSessionEndEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58B0684(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D58B0710(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D58B0764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58B07A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58B07E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionEndEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58B07F8(_QWORD *a1)
{
  return AppSessionEndEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58B080C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCDE8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCB58, a1);
}

uint64_t sub_1D58B0830@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCE10, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCDF0, a1);
}

uint64_t sub_1D58B0854@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v13, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v13, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v13, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v13, v30);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionEndEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v56 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v56 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  }
  return a1;
}

uint64_t destroy for AppSessionEndEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
}

uint64_t initializeWithCopy for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  return a1;
}

uint64_t assignWithCopy for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

uint64_t initializeWithTake for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  return a1;
}

uint64_t assignWithTake for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionEndEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B2268(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
                          v8 = v24;
                          v12 = *(_QWORD *)(v24 - 8);
                          v13 = a3[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B25D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9CF120, (void (*)(void))sub_1D57C8440, (void (*)(void))sub_1D57C8484);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9CF1C0, (void (*)(void))sub_1D57C64F8, (void (*)(void))sub_1D57C653C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9CF178, (void (*)(void))sub_1D57C9310, (void (*)(void))sub_1D57C9354);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9CF198, (void (*)(void))sub_1D57C7FF8, (void (*)(void))sub_1D57C803C);
                          v10 = v26;
                          v14 = *(_QWORD *)(v26 - 8);
                          v15 = a4[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for AppSessionEndEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    *((_WORD *)v14 + 12) = *((_WORD *)v15 + 12);
    v17 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 5) = v17;
    v14[48] = v15[48];
    v18 = (_QWORD *)((char *)a1 + v13);
    v19 = (_QWORD *)((char *)a2 + v13);
    *v18 = *v19;
    v20 = v19[2];
    v18[1] = v19[1];
    v18[2] = v20;
    v21 = v19[4];
    v18[3] = v19[3];
    v18[4] = v21;
    v18[5] = v19[5];
    v18[6] = v19[6];
    v22 = a3[8];
    v23 = (char *)a1 + v22;
    v57 = a2;
    v24 = (char *)a2 + v22;
    v55 = *((_QWORD *)v24 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v55 == 1)
    {
      v25 = *((_OWORD *)v24 + 3);
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      *((_OWORD *)v23 + 3) = v25;
      *(_OWORD *)(v23 + 58) = *(_OWORD *)(v24 + 58);
      v26 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v26;
    }
    else
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *((_QWORD *)v23 + 1) = v55;
      v23[16] = v24[16];
      v28 = *((_QWORD *)v24 + 4);
      *((_QWORD *)v23 + 3) = *((_QWORD *)v24 + 3);
      *((_QWORD *)v23 + 4) = v28;
      v29 = *((_QWORD *)v24 + 6);
      *((_QWORD *)v23 + 5) = *((_QWORD *)v24 + 5);
      *((_QWORD *)v23 + 6) = v29;
      v30 = *((_QWORD *)v24 + 8);
      *((_QWORD *)v23 + 7) = *((_QWORD *)v24 + 7);
      *((_QWORD *)v23 + 8) = v30;
      v23[72] = v24[72];
      v23[73] = v24[73];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v31 = a3[9];
    v32 = a3[10];
    v33 = (char *)a1 + v31;
    v34 = (char *)v57 + v31;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_DWORD *)v33 + 2) = *((_DWORD *)v34 + 2);
    v33[12] = v34[12];
    *(_WORD *)(v33 + 13) = *(_WORD *)(v34 + 13);
    *(_DWORD *)((char *)a1 + v32) = *(_DWORD *)((char *)v57 + v32);
    v35 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)v57 + a3[11]);
    memcpy((char *)a1 + v35, (char *)v57 + v35, 0x144uLL);
    v36 = a3[14];
    *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)v57 + a3[13]);
    v37 = (char *)a1 + v36;
    v38 = (_QWORD *)((char *)v57 + v36);
    v39 = *(_QWORD *)((char *)v57 + v36 + 8);
    *(_QWORD *)v37 = *(_QWORD *)((char *)v57 + v36);
    *((_QWORD *)v37 + 1) = v39;
    v40 = *(_QWORD *)((char *)v57 + v36 + 24);
    *((_QWORD *)v37 + 2) = *(_QWORD *)((char *)v57 + v36 + 16);
    *((_QWORD *)v37 + 3) = v40;
    v37[32] = *((_BYTE *)v57 + v36 + 32);
    v41 = (uint64_t)v57 + v36 + 40;
    v56 = *(_QWORD *)v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v56)
    {
      v42 = v38[6];
      v43 = v38[7];
      *((_QWORD *)v37 + 5) = v56;
      *((_QWORD *)v37 + 6) = v42;
      v44 = v38[8];
      v45 = v38[9];
      *((_QWORD *)v37 + 7) = v43;
      *((_QWORD *)v37 + 8) = v44;
      v47 = v38[10];
      v46 = v38[11];
      *((_QWORD *)v37 + 9) = v45;
      *((_QWORD *)v37 + 10) = v47;
      v48 = v38[12];
      *((_QWORD *)v37 + 11) = v46;
      *((_QWORD *)v37 + 12) = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v49 = *(_OWORD *)(v41 + 16);
      *(_OWORD *)(v37 + 40) = *(_OWORD *)v41;
      *(_OWORD *)(v37 + 56) = v49;
      v50 = *(_OWORD *)(v41 + 48);
      *(_OWORD *)(v37 + 72) = *(_OWORD *)(v41 + 32);
      *(_OWORD *)(v37 + 88) = v50;
    }
    v51 = a3[16];
    *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)v57 + a3[15]);
    v52 = (char *)a1 + v51;
    v53 = (char *)v57 + v51;
    *(_DWORD *)v52 = *(_DWORD *)v53;
    v52[4] = v53[4];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AppSessionEndEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + a2[14];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  int *v58;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  *(_WORD *)(v13 + 24) = *(_WORD *)(v14 + 24);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v16;
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  v17 = (_QWORD *)(a1 + v12);
  v18 = (_QWORD *)(a2 + v12);
  *v17 = *v18;
  v19 = v18[2];
  v17[1] = v18[1];
  v17[2] = v19;
  v20 = v18[4];
  v17[3] = v18[3];
  v17[4] = v20;
  v17[5] = v18[5];
  v17[6] = v18[6];
  v58 = a3;
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v56 = *(_QWORD *)(a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v56 == 1)
  {
    v24 = *(_OWORD *)(v23 + 48);
    *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
    *(_OWORD *)(v22 + 48) = v24;
    *(_OWORD *)(v22 + 58) = *(_OWORD *)(v23 + 58);
    v25 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v25;
  }
  else
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = v56;
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
    v26 = *(_QWORD *)(v23 + 32);
    *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
    *(_QWORD *)(v22 + 32) = v26;
    v27 = *(_QWORD *)(v23 + 48);
    *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 40);
    *(_QWORD *)(v22 + 48) = v27;
    v28 = *(_QWORD *)(v23 + 64);
    *(_QWORD *)(v22 + 56) = *(_QWORD *)(v23 + 56);
    *(_QWORD *)(v22 + 64) = v28;
    *(_BYTE *)(v22 + 72) = *(_BYTE *)(v23 + 72);
    *(_BYTE *)(v22 + 73) = *(_BYTE *)(v23 + 73);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v29 = v58[9];
  v30 = v58[10];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_DWORD *)(v31 + 8) = *(_DWORD *)(v32 + 8);
  *(_BYTE *)(v31 + 12) = *(_BYTE *)(v32 + 12);
  *(_WORD *)(v31 + 13) = *(_WORD *)(v32 + 13);
  *(_DWORD *)(a1 + v30) = *(_DWORD *)(a2 + v30);
  v33 = v58[12];
  *(_BYTE *)(a1 + v58[11]) = *(_BYTE *)(a2 + v58[11]);
  memcpy((void *)(a1 + v33), (const void *)(a2 + v33), 0x144uLL);
  v34 = v58[14];
  *(_QWORD *)(a1 + v58[13]) = *(_QWORD *)(a2 + v58[13]);
  v35 = a1 + v34;
  v57 = a2;
  v36 = (_QWORD *)(a2 + v34);
  v37 = *(_QWORD *)(a2 + v34 + 8);
  *(_QWORD *)v35 = *(_QWORD *)(a2 + v34);
  *(_QWORD *)(v35 + 8) = v37;
  v38 = *(_QWORD *)(a2 + v34 + 24);
  *(_QWORD *)(v35 + 16) = *(_QWORD *)(a2 + v34 + 16);
  *(_QWORD *)(v35 + 24) = v38;
  *(_BYTE *)(v35 + 32) = *(_BYTE *)(a2 + v34 + 32);
  v39 = a2 + v34;
  v42 = *(_QWORD *)(v39 + 40);
  v40 = (_OWORD *)(v39 + 40);
  v41 = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v42)
  {
    v43 = v36[6];
    v44 = v36[7];
    *(_QWORD *)(v35 + 40) = v41;
    *(_QWORD *)(v35 + 48) = v43;
    v45 = v36[8];
    v46 = v36[9];
    *(_QWORD *)(v35 + 56) = v44;
    *(_QWORD *)(v35 + 64) = v45;
    v48 = v36[10];
    v47 = v36[11];
    *(_QWORD *)(v35 + 72) = v46;
    *(_QWORD *)(v35 + 80) = v48;
    v49 = v36[12];
    *(_QWORD *)(v35 + 88) = v47;
    *(_QWORD *)(v35 + 96) = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v50 = v40[1];
    *(_OWORD *)(v35 + 40) = *v40;
    *(_OWORD *)(v35 + 56) = v50;
    v51 = v40[3];
    *(_OWORD *)(v35 + 72) = v40[2];
    *(_OWORD *)(v35 + 88) = v51;
  }
  v52 = v58[16];
  *(_QWORD *)(a1 + v58[15]) = *(_QWORD *)(v57 + v58[15]);
  v53 = a1 + v52;
  v54 = v57 + v52;
  *(_DWORD *)v53 = *(_DWORD *)v54;
  *(_BYTE *)(v53 + 4) = *(_BYTE *)(v54 + 4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  uint64_t v35;
  __int128 *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  int v46;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_DWORD *)v15 = *(_DWORD *)(a2 + v14);
  *(_DWORD *)(v15 + 4) = *(_DWORD *)(a2 + v14 + 4);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v15 + 48) = *(_DWORD *)(v16 + 48);
  *(_DWORD *)(v15 + 52) = *(_DWORD *)(v16 + 52);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a1 + v17 + 8);
  v21 = *(_QWORD *)(a2 + v17 + 8);
  if (v20 == 1)
  {
    if (v21 == 1)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v22 = *(_OWORD *)(v19 + 16);
      v23 = *(_OWORD *)(v19 + 32);
      v24 = *(_OWORD *)(v19 + 48);
      *(_OWORD *)(v18 + 58) = *(_OWORD *)(v19 + 58);
      *(_OWORD *)(v18 + 32) = v23;
      *(_OWORD *)(v18 + 48) = v24;
      *(_OWORD *)(v18 + 16) = v22;
    }
    else
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
      *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
      *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
      *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
      *(_QWORD *)(v18 + 40) = *(_QWORD *)(v19 + 40);
      *(_QWORD *)(v18 + 48) = *(_QWORD *)(v19 + 48);
      *(_QWORD *)(v18 + 56) = *(_QWORD *)(v19 + 56);
      *(_QWORD *)(v18 + 64) = *(_QWORD *)(v19 + 64);
      *(_BYTE *)(v18 + 72) = *(_BYTE *)(v19 + 72);
      *(_BYTE *)(v18 + 73) = *(_BYTE *)(v19 + 73);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v21 == 1)
  {
    sub_1D58B3718(v18);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    v26 = *(_OWORD *)(v19 + 32);
    v25 = *(_OWORD *)(v19 + 48);
    v27 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)(v18 + 58) = *(_OWORD *)(v19 + 58);
    *(_OWORD *)(v18 + 32) = v26;
    *(_OWORD *)(v18 + 48) = v25;
    *(_OWORD *)(v18 + 16) = v27;
  }
  else
  {
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
    *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + 40) = *(_QWORD *)(v19 + 40);
    *(_QWORD *)(v18 + 48) = *(_QWORD *)(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + 56) = *(_QWORD *)(v19 + 56);
    *(_QWORD *)(v18 + 64) = *(_QWORD *)(v19 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v18 + 72) = *(_BYTE *)(v19 + 72);
    *(_BYTE *)(v18 + 73) = *(_BYTE *)(v19 + 73);
  }
  v28 = a3[9];
  v29 = (_BYTE *)(a1 + v28);
  v30 = (_BYTE *)(a2 + v28);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29[8] = v30[8];
  v29[9] = v30[9];
  v29[10] = v30[10];
  v29[11] = v30[11];
  v29[12] = v30[12];
  v29[13] = v30[13];
  v29[14] = v30[14];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  memcpy((void *)(a1 + a3[12]), (const void *)(a2 + a3[12]), 0x144uLL);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[14];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 24) = *(_QWORD *)(v33 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 32) = *(_BYTE *)(v33 + 32);
  v34 = (_OWORD *)(v32 + 40);
  v36 = (__int128 *)(v33 + 40);
  v35 = *(_QWORD *)(v33 + 40);
  if (*(_QWORD *)(v32 + 40))
  {
    if (v35)
    {
      *(_QWORD *)(v32 + 40) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 72) = *(_QWORD *)(v33 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 80) = *(_QWORD *)(v33 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 96) = *(_QWORD *)(v33 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D586E8CC(v32 + 40);
      v37 = *(_OWORD *)(v33 + 88);
      v39 = *v36;
      v38 = *(_OWORD *)(v33 + 56);
      *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
      *(_OWORD *)(v32 + 88) = v37;
      *v34 = v39;
      *(_OWORD *)(v32 + 56) = v38;
    }
  }
  else if (v35)
  {
    *(_QWORD *)(v32 + 40) = v35;
    *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
    *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
    *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
    *(_QWORD *)(v32 + 72) = *(_QWORD *)(v33 + 72);
    *(_QWORD *)(v32 + 80) = *(_QWORD *)(v33 + 80);
    *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
    *(_QWORD *)(v32 + 96) = *(_QWORD *)(v33 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v40 = *v36;
    v41 = *(_OWORD *)(v33 + 56);
    v42 = *(_OWORD *)(v33 + 88);
    *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
    *(_OWORD *)(v32 + 88) = v42;
    *v34 = v40;
    *(_OWORD *)(v32 + 56) = v41;
  }
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = a3[16];
  v44 = a1 + v43;
  v45 = (int *)(a2 + v43);
  v46 = *v45;
  *(_BYTE *)(v44 + 4) = *((_BYTE *)v45 + 4);
  *(_DWORD *)v44 = v46;
  return a1;
}

uint64_t sub_1D58B3718(uint64_t a1)
{
  destroy for NotificationData();
  return a1;
}

uint64_t initializeWithTake for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  v16 = a1 + v12;
  v17 = a2 + v12;
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
  v19 = a3[8];
  v20 = a3[9];
  v21 = (_OWORD *)(a1 + v19);
  v22 = (_OWORD *)(a2 + v19);
  *(_OWORD *)((char *)v21 + 58) = *(_OWORD *)((char *)v22 + 58);
  v23 = v22[3];
  v21[2] = v22[2];
  v21[3] = v23;
  v24 = v22[1];
  *v21 = *v22;
  v21[1] = v24;
  v25 = (_QWORD *)(a1 + v20);
  v26 = (_QWORD *)(a2 + v20);
  *v25 = *v26;
  *(_QWORD *)((char *)v25 + 7) = *(_QWORD *)((char *)v26 + 7);
  v27 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  memcpy((void *)(a1 + a3[12]), (const void *)(a2 + a3[12]), 0x144uLL);
  v28 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  *(_QWORD *)(v29 + 96) = *(_QWORD *)(v30 + 96);
  v32 = *(_OWORD *)(v30 + 80);
  *(_OWORD *)(v29 + 64) = *(_OWORD *)(v30 + 64);
  *(_OWORD *)(v29 + 80) = v32;
  v33 = *(_OWORD *)(v30 + 48);
  *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
  *(_OWORD *)(v29 + 48) = v33;
  v34 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  return a1;
}

uint64_t assignWithTake for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *(_QWORD *)(a2 + v16);
  v17[1] = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRelease();
  v17[2] = v18[2];
  swift_bridgeObjectRelease();
  v17[3] = v18[3];
  swift_bridgeObjectRelease();
  v17[4] = v18[4];
  swift_bridgeObjectRelease();
  v17[5] = v18[5];
  swift_bridgeObjectRelease();
  v17[6] = v18[6];
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  if (*(_QWORD *)(a1 + v19 + 8) == 1)
    goto LABEL_4;
  v22 = *(_QWORD *)(v21 + 8);
  if (v22 == 1)
  {
    sub_1D58B3718(v20);
LABEL_4:
    v23 = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
    *(_OWORD *)(v20 + 48) = v23;
    *(_OWORD *)(v20 + 58) = *(_OWORD *)(v21 + 58);
    v24 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 16) = v24;
    goto LABEL_6;
  }
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v22;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  v25 = *(_QWORD *)(v21 + 32);
  *(_QWORD *)(v20 + 24) = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v20 + 32) = v25;
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v21 + 48);
  *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
  *(_QWORD *)(v20 + 48) = v26;
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v21 + 64);
  *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
  *(_QWORD *)(v20 + 64) = v27;
  swift_bridgeObjectRelease();
  *(_WORD *)(v20 + 72) = *(_WORD *)(v21 + 72);
LABEL_6:
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  *(_BYTE *)(v29 + 9) = *(_BYTE *)(v30 + 9);
  *(_BYTE *)(v29 + 10) = *(_BYTE *)(v30 + 10);
  *(_BYTE *)(v29 + 11) = *(_BYTE *)(v30 + 11);
  *(_BYTE *)(v29 + 12) = *(_BYTE *)(v30 + 12);
  *(_WORD *)(v29 + 13) = *(_WORD *)(v30 + 13);
  v31 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  memcpy((void *)(a1 + a3[12]), (const void *)(a2 + a3[12]), 0x144uLL);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  v32 = a3[14];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a2 + v32 + 8);
  *(_QWORD *)v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(v33 + 8) = v35;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 32) = *(_BYTE *)(v34 + 32);
  v36 = *(_QWORD *)(v34 + 40);
  if (!*(_QWORD *)(v33 + 40))
  {
LABEL_10:
    v37 = *(_OWORD *)(v34 + 56);
    *(_OWORD *)(v33 + 40) = *(_OWORD *)(v34 + 40);
    *(_OWORD *)(v33 + 56) = v37;
    v38 = *(_OWORD *)(v34 + 88);
    *(_OWORD *)(v33 + 72) = *(_OWORD *)(v34 + 72);
    *(_OWORD *)(v33 + 88) = v38;
    goto LABEL_11;
  }
  if (!v36)
  {
    sub_1D586E8CC(v33 + 40);
    goto LABEL_10;
  }
  *(_QWORD *)(v33 + 40) = v36;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 56) = *(_QWORD *)(v34 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 64) = *(_QWORD *)(v34 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 72) = *(_QWORD *)(v34 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 80) = *(_QWORD *)(v34 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 96) = *(_QWORD *)(v34 + 96);
  swift_bridgeObjectRelease();
LABEL_11:
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  v39 = a3[16];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_DWORD *)v40 = *(_DWORD *)v41;
  *(_BYTE *)(v40 + 4) = *(_BYTE *)(v41 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionEndEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B3C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B3D14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D58B3E08 + 4 * byte_1D5AC2162[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D58B3E3C + 4 * byte_1D5AC215D[v4]))();
}

uint64_t sub_1D58B3E3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B3E44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58B3E4CLL);
  return result;
}

uint64_t sub_1D58B3E58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58B3E60);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D58B3E64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B3E6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppSessionEndEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionEndEvent.Model.CodingKeys;
}

unint64_t sub_1D58B3E8C()
{
  unint64_t result;

  result = qword_1EFF4B390;
  if (!qword_1EFF4B390)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2454, &type metadata for AppSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B390);
  }
  return result;
}

unint64_t sub_1D58B3ED4()
{
  unint64_t result;

  result = qword_1ED9CD2D0;
  if (!qword_1ED9CD2D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC23C4, &type metadata for AppSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD2D0);
  }
  return result;
}

unint64_t sub_1D58B3F1C()
{
  unint64_t result;

  result = qword_1ED9CD2C8;
  if (!qword_1ED9CD2C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC23EC, &type metadata for AppSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD2C8);
  }
  return result;
}

uint64_t sub_1D58B3F60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEE9B0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEE9D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AEE9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEEA10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AEEA30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AEEA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6174614469626174 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AEEA70 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEEA90)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

NewsAnalytics::AudioEngagementStatus_optional __swiftcall AudioEngagementStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::AudioEngagementStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AudioEngagementStatus.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64656761676E65;
  if (*v0 != 1)
    v1 = 0x6761676E45746F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D58B450C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A38B18(*a1, *a2);
}

unint64_t sub_1D58B451C()
{
  unint64_t result;

  result = qword_1EFF4B398;
  if (!qword_1EFF4B398)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementStatus, &type metadata for AudioEngagementStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF4B398);
  }
  return result;
}

uint64_t sub_1D58B4560()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D58B4604()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D58B4684()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::AudioEngagementStatus_optional sub_1D58B4724(Swift::String *a1)
{
  return AudioEngagementStatus.init(rawValue:)(*a1);
}

void sub_1D58B4730(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x64656761676E65;
  if (v2 != 1)
  {
    v5 = 0x6761676E45746F6ELL;
    v4 = 0xEA00000000006465;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D58B4794()
{
  sub_1D58B4908();
  return sub_1D5AAE928();
}

uint64_t sub_1D58B47F0()
{
  sub_1D58B4908();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for AudioEngagementStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58B4888 + 4 * byte_1D5AC24D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58B48BC + 4 * byte_1D5AC24D0[v4]))();
}

uint64_t sub_1D58B48BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B48C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58B48CCLL);
  return result;
}

uint64_t sub_1D58B48D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58B48E0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58B48E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B48EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementStatus()
{
  return &type metadata for AudioEngagementStatus;
}

unint64_t sub_1D58B4908()
{
  unint64_t result;

  result = qword_1EFF4B3A0;
  if (!qword_1EFF4B3A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementStatus, &type metadata for AudioEngagementStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF4B3A0);
  }
  return result;
}

void TodayTopStoriesMissingData.reason.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *TodayTopStoriesMissingData.reason.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*TodayTopStoriesMissingData.reason.modify())()
{
  return nullsub_1;
}

uint64_t TodayTopStoriesMissingData.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TodayTopStoriesMissingData.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*TodayTopStoriesMissingData.message.modify())()
{
  return nullsub_1;
}

NewsAnalytics::TodayTopStoriesMissingData __swiftcall TodayTopStoriesMissingData.init(reason:message:)(NewsAnalytics::TodayTopStoriesMissingReason reason, Swift::String_optional message)
{
  uint64_t v2;
  NewsAnalytics::TodayTopStoriesMissingData result;

  *(_BYTE *)v2 = *(_BYTE *)reason;
  *(Swift::String_optional *)(v2 + 8) = message;
  result.message = message;
  result.reason = reason;
  return result;
}

uint64_t sub_1D58B49F4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6567617373656DLL;
  else
    return 0x6E6F73616572;
}

uint64_t sub_1D58B4A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58B510C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58B4A50()
{
  sub_1D58B4BE4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58B4A78()
{
  sub_1D58B4BE4();
  return sub_1D5AAEEE0();
}

uint64_t TodayTopStoriesMissingData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  sub_1D58B4E00(0, &qword_1EFF4B3A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v12[0] = *((_QWORD *)v1 + 2);
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58B4BE4();
  sub_1D5AAEEC8();
  v15 = v9;
  v14 = 0;
  sub_1D58B4C28();
  sub_1D5AAED6C();
  if (!v2)
  {
    v13 = 1;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D58B4BE4()
{
  unint64_t result;

  result = qword_1EFF4B3B0;
  if (!qword_1EFF4B3B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2790, &type metadata for TodayTopStoriesMissingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B3B0);
  }
  return result;
}

unint64_t sub_1D58B4C28()
{
  unint64_t result;

  result = qword_1EFF4B3B8;
  if (!qword_1EFF4B3B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TodayTopStoriesMissingReason, &type metadata for TodayTopStoriesMissingReason);
    atomic_store(result, (unint64_t *)&qword_1EFF4B3B8);
  }
  return result;
}

uint64_t TodayTopStoriesMissingData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1D58B4E00(0, &qword_1EFF4B3C0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58B4BE4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v17 = 0;
    sub_1D58B4E5C();
    sub_1D5AAECD0();
    v10 = v18;
    v16 = 1;
    v12 = sub_1D5AAEC58();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D58B4E00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58B4BE4();
    v7 = a3(a1, &type metadata for TodayTopStoriesMissingData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58B4E5C()
{
  unint64_t result;

  result = qword_1EFF4B3C8;
  if (!qword_1EFF4B3C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TodayTopStoriesMissingReason, &type metadata for TodayTopStoriesMissingReason);
    atomic_store(result, (unint64_t *)&qword_1EFF4B3C8);
  }
  return result;
}

unint64_t sub_1D58B4EA4()
{
  unint64_t result;

  result = qword_1EFF4B3D0;
  if (!qword_1EFF4B3D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TodayTopStoriesMissingData, &type metadata for TodayTopStoriesMissingData);
    atomic_store(result, (unint64_t *)&qword_1EFF4B3D0);
  }
  return result;
}

unint64_t sub_1D58B4EEC()
{
  unint64_t result;

  result = qword_1EFF4B3D8;
  if (!qword_1EFF4B3D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TodayTopStoriesMissingData, &type metadata for TodayTopStoriesMissingData);
    atomic_store(result, (unint64_t *)&qword_1EFF4B3D8);
  }
  return result;
}

uint64_t sub_1D58B4F30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TodayTopStoriesMissingData.init(from:)(a1, a2);
}

uint64_t sub_1D58B4F44(_QWORD *a1)
{
  return TodayTopStoriesMissingData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for TodayTopStoriesMissingData()
{
  return &type metadata for TodayTopStoriesMissingData;
}

uint64_t storeEnumTagSinglePayload for TodayTopStoriesMissingData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58B4FB4 + 4 * byte_1D5AC2605[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58B4FE8 + 4 * byte_1D5AC2600[v4]))();
}

uint64_t sub_1D58B4FE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B4FF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58B4FF8);
  return result;
}

uint64_t sub_1D58B5004(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58B500CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D58B5010(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B5018(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TodayTopStoriesMissingData.CodingKeys()
{
  return &type metadata for TodayTopStoriesMissingData.CodingKeys;
}

unint64_t sub_1D58B5038()
{
  unint64_t result;

  result = qword_1EFF4B3E0;
  if (!qword_1EFF4B3E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2768, &type metadata for TodayTopStoriesMissingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B3E0);
  }
  return result;
}

unint64_t sub_1D58B5080()
{
  unint64_t result;

  result = qword_1EFF4B3E8;
  if (!qword_1EFF4B3E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC26D8, &type metadata for TodayTopStoriesMissingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B3E8);
  }
  return result;
}

unint64_t sub_1D58B50C8()
{
  unint64_t result;

  result = qword_1EFF4B3F0;
  if (!qword_1EFF4B3F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2700, &type metadata for TodayTopStoriesMissingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B3F0);
  }
  return result;
}

uint64_t sub_1D58B510C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F73616572 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t SearchSelectionData.selectedResult.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchSelectionData.selectedResult.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SearchSelectionData.selectedResult.modify())()
{
  return nullsub_1;
}

void SearchSelectionData.selectedResultType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *SearchSelectionData.selectedResultType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*SearchSelectionData.selectedResultType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::SearchSelectionData __swiftcall SearchSelectionData.init(selectedResult:selectedResultType:)(Swift::String selectedResult, NewsAnalytics::SelectedResultType selectedResultType)
{
  uint64_t v2;
  char v3;
  NewsAnalytics::SearchSelectionData result;

  v3 = *(_BYTE *)selectedResultType;
  *(Swift::String *)v2 = selectedResult;
  *(_BYTE *)(v2 + 16) = v3;
  result.selectedResult = selectedResult;
  result.selectedResultType = selectedResultType;
  return result;
}

uint64_t sub_1D58B529C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x64657463656C6573;
}

uint64_t sub_1D58B52E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58B5B44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58B530C()
{
  sub_1D58B54A4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58B5334()
{
  sub_1D58B54A4();
  return sub_1D5AAEEE0();
}

uint64_t SearchSelectionData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1D58B56D4(0, &qword_1EFF4B3F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58B54A4();
  sub_1D5AAEEC8();
  v14 = 0;
  v8 = v10[1];
  sub_1D5AAED3C();
  if (!v8)
  {
    v13 = v11;
    v12 = 1;
    sub_1D58B54E8();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58B54A4()
{
  unint64_t result;

  result = qword_1EFF4B400;
  if (!qword_1EFF4B400)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2968, &type metadata for SearchSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B400);
  }
  return result;
}

unint64_t sub_1D58B54E8()
{
  unint64_t result;

  result = qword_1EFF4B408;
  if (!qword_1EFF4B408)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SelectedResultType, &type metadata for SelectedResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF4B408);
  }
  return result;
}

uint64_t SearchSelectionData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1D58B56D4(0, &qword_1EFF4B410, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58B54A4();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v16 = 1;
  sub_1D58B5730();
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = v17;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D58B56D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58B54A4();
    v7 = a3(a1, &type metadata for SearchSelectionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58B5730()
{
  unint64_t result;

  result = qword_1EFF4B418;
  if (!qword_1EFF4B418)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SelectedResultType, &type metadata for SelectedResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF4B418);
  }
  return result;
}

unint64_t sub_1D58B5778()
{
  unint64_t result;

  result = qword_1EFF4B420;
  if (!qword_1EFF4B420)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchSelectionData, &type metadata for SearchSelectionData);
    atomic_store(result, (unint64_t *)&qword_1EFF4B420);
  }
  return result;
}

unint64_t sub_1D58B57C0()
{
  unint64_t result;

  result = qword_1EFF4B428;
  if (!qword_1EFF4B428)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchSelectionData, &type metadata for SearchSelectionData);
    atomic_store(result, (unint64_t *)&qword_1EFF4B428);
  }
  return result;
}

uint64_t sub_1D58B5804@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchSelectionData.init(from:)(a1, a2);
}

uint64_t sub_1D58B5818(_QWORD *a1)
{
  return SearchSelectionData.encode(to:)(a1);
}

uint64_t sub_1D58B5830(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PurchaseData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PurchaseData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PurchaseData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSelectionData()
{
  return &type metadata for SearchSelectionData;
}

uint64_t storeEnumTagSinglePayload for SearchSelectionData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58B59EC + 4 * byte_1D5AC27E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58B5A20 + 4 * byte_1D5AC27E0[v4]))();
}

uint64_t sub_1D58B5A20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B5A28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58B5A30);
  return result;
}

uint64_t sub_1D58B5A3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58B5A44);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D58B5A48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B5A50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchSelectionData.CodingKeys()
{
  return &type metadata for SearchSelectionData.CodingKeys;
}

unint64_t sub_1D58B5A70()
{
  unint64_t result;

  result = qword_1EFF4B430;
  if (!qword_1EFF4B430)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2940, &type metadata for SearchSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B430);
  }
  return result;
}

unint64_t sub_1D58B5AB8()
{
  unint64_t result;

  result = qword_1EFF4B438;
  if (!qword_1EFF4B438)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC28B0, &type metadata for SearchSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B438);
  }
  return result;
}

unint64_t sub_1D58B5B00()
{
  unint64_t result;

  result = qword_1EFF4B440;
  if (!qword_1EFF4B440)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC28D8, &type metadata for SearchSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B440);
  }
  return result;
}

uint64_t sub_1D58B5B44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64657463656C6573 && a2 == 0xEE00746C75736552;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEEAB0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D58B5C54(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9D1728, MEMORY[0x1E0CF8078]);
}

uint64_t static SportsFetchFavoritesSyncEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D1748, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D1728, a1);
}

uint64_t sub_1D58B5C94(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9D1750, MEMORY[0x1E0CF8378]);
}

uint64_t static SportsFetchFavoritesSyncEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D1770, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D1750, a1);
}

uint64_t SportsFetchFavoritesSyncEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SportsFetchFavoritesSyncEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SportsFetchFavoritesSyncEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SportsFetchFavoritesSyncEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsFetchFavoritesSyncEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SportsFetchFavoritesSyncEvent(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9D1778);
}

uint64_t SportsFetchFavoritesSyncEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsFetchFavoritesSyncEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsFetchFavoritesSyncEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for SportsFetchFavoritesSyncEvent(0);
  return nullsub_1;
}

uint64_t SportsFetchFavoritesSyncEvent.fetchFavoritesSyncData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsFetchFavoritesSyncEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SportsFetchFavoritesSyncEvent.fetchFavoritesSyncData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsFetchFavoritesSyncEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsFetchFavoritesSyncEvent.fetchFavoritesSyncData.modify())()
{
  type metadata accessor for SportsFetchFavoritesSyncEvent(0);
  return nullsub_1;
}

uint64_t SportsFetchFavoritesSyncEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t FavoritesSyncEvent;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  FavoritesSyncEvent = type metadata accessor for SportsFetchFavoritesSyncEvent(0);
  v5 = a1 + *(int *)(FavoritesSyncEvent + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(FavoritesSyncEvent + 24);
  sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t SportsFetchFavoritesSyncEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SportsFetchFavoritesSyncEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SportsFetchFavoritesSyncEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SportsFetchFavoritesSyncEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4B4B8);
}

uint64_t SportsFetchFavoritesSyncEvent.Model.fetchFavoritesSyncData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SportsFetchFavoritesSyncEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SportsFetchFavoritesSyncEvent.Model.init(eventData:userBundleSubscriptionContextData:fetchFavoritesSyncData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  int v17;

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v9 = a2[24];
  v10 = a2[25];
  v11 = *((_QWORD *)a2 + 4);
  v12 = *((_QWORD *)a2 + 5);
  v13 = a2[48];
  v17 = *a3;
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  result = type metadata accessor for SportsFetchFavoritesSyncEvent.Model(0);
  v16 = a4 + *(int *)(result + 20);
  *(_BYTE *)v16 = v6;
  *(_QWORD *)(v16 + 8) = v7;
  *(_QWORD *)(v16 + 16) = v8;
  *(_BYTE *)(v16 + 24) = v9;
  *(_BYTE *)(v16 + 25) = v10;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 40) = v12;
  *(_BYTE *)(v16 + 48) = v13;
  *(_DWORD *)(a4 + *(int *)(result + 24)) = v17;
  return result;
}

uint64_t sub_1D58B6184()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000021;
  if (*v0 != 1)
    v1 = 0xD000000000000016;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D58B61F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58B7588(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58B6214()
{
  sub_1D58B6440();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58B623C()
{
  sub_1D58B6440();
  return sub_1D5AAEEE0();
}

uint64_t SportsFetchFavoritesSyncEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t FavoritesSync;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  int v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;

  v3 = v1;
  sub_1D58B67C4(0, &qword_1EFF4B448, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58B6440();
  sub_1D5AAEEC8();
  LOBYTE(v17) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    FavoritesSync = type metadata accessor for SportsFetchFavoritesSyncEvent.Model(0);
    v11 = v3 + *(int *)(FavoritesSync + 20);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v17) = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    HIBYTE(v16) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v17 = *(_DWORD *)(v3 + *(int *)(FavoritesSync + 24));
    HIBYTE(v16) = 2;
    sub_1D585E1D8();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58B6440()
{
  unint64_t result;

  result = qword_1EFF4B450;
  if (!qword_1EFF4B450)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2B94, &type metadata for SportsFetchFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B450);
  }
  return result;
}

uint64_t SportsFetchFavoritesSyncEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t FavoritesSync;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  __int128 v29;
  char v30;
  char v31;
  __int128 v32;
  char v33;
  char v34;

  v22 = a2;
  v3 = sub_1D5AADF98();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58B67C4(0, &qword_1EFF4B458, MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  FavoritesSync = type metadata accessor for SportsFetchFavoritesSyncEvent.Model(0);
  MEMORY[0x1E0C80A78](FavoritesSync);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58B6440();
  v26 = v8;
  v12 = v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = FavoritesSync;
  v13 = (uint64_t)a1;
  v14 = v24;
  LOBYTE(v28) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v25, v3);
  v34 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v15 = v30;
  v16 = v31;
  v17 = v33;
  v18 = v27;
  v19 = &v11[*(int *)(v27 + 20)];
  *v19 = v28;
  *(_OWORD *)(v19 + 8) = v29;
  v19[24] = v15;
  v19[25] = v16;
  *((_OWORD *)v19 + 2) = v32;
  v19[48] = v17;
  v34 = 2;
  sub_1D585E190();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v23);
  *(_DWORD *)&v11[*(int *)(v18 + 24)] = v28;
  sub_1D58B6820((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1D58B6864((uint64_t)v11);
}

void sub_1D58B67C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58B6440();
    v7 = a3(a1, &type metadata for SportsFetchFavoritesSyncEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58B6820(uint64_t a1, uint64_t a2)
{
  uint64_t FavoritesSync;

  FavoritesSync = type metadata accessor for SportsFetchFavoritesSyncEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(FavoritesSync - 8) + 16))(a2, a1, FavoritesSync);
  return a2;
}

uint64_t sub_1D58B6864(uint64_t a1)
{
  uint64_t FavoritesSync;

  FavoritesSync = type metadata accessor for SportsFetchFavoritesSyncEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(FavoritesSync - 8) + 8))(a1, FavoritesSync);
  return a1;
}

uint64_t sub_1D58B68A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsFetchFavoritesSyncEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58B68B4(_QWORD *a1)
{
  return SportsFetchFavoritesSyncEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58B68C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D1748, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D1728, a1);
}

uint64_t sub_1D58B68EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D1770, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D1750, a1);
}

uint64_t sub_1D58B6910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsFetchFavoritesSyncEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SportsFetchFavoritesSyncEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for SportsFetchFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SportsFetchFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SportsFetchFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SportsFetchFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsFetchFavoritesSyncEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B6FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SportsFetchFavoritesSyncEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B7084(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58B7164()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9D16E0, (void (*)(void))sub_1D585E190, (void (*)(void))sub_1D585E1D8);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for SportsFetchFavoritesSyncEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B7250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsFetchFavoritesSyncEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B72E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = a2;
  return result;
}

uint64_t sub_1D58B7364()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsFetchFavoritesSyncEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58B7430 + 4 * byte_1D5AC29C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58B7464 + 4 * byte_1D5AC29C0[v4]))();
}

uint64_t sub_1D58B7464(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B746C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58B7474);
  return result;
}

uint64_t sub_1D58B7480(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58B7488);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58B748C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B7494(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsFetchFavoritesSyncEvent.Model.CodingKeys()
{
  return &type metadata for SportsFetchFavoritesSyncEvent.Model.CodingKeys;
}

unint64_t sub_1D58B74B4()
{
  unint64_t result;

  result = qword_1EFF4B4F8;
  if (!qword_1EFF4B4F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2B6C, &type metadata for SportsFetchFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B4F8);
  }
  return result;
}

unint64_t sub_1D58B74FC()
{
  unint64_t result;

  result = qword_1EFF4B500;
  if (!qword_1EFF4B500)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2ADC, &type metadata for SportsFetchFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B500);
  }
  return result;
}

unint64_t sub_1D58B7544()
{
  unint64_t result;

  result = qword_1EFF4B508;
  if (!qword_1EFF4B508)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2B04, &type metadata for SportsFetchFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B508);
  }
  return result;
}

uint64_t sub_1D58B7588(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEEAD0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D58B76E0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4B510, MEMORY[0x1E0CF8078]);
}

uint64_t static TodayTopStoriesMissingEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47108, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4B510, a1);
}

uint64_t sub_1D58B7720(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4B528, MEMORY[0x1E0CF8380]);
}

uint64_t static TodayTopStoriesMissingEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47110, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4B528, a1);
}

uint64_t TodayTopStoriesMissingEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t TodayTopStoriesMissingEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TodayTopStoriesMissingEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t TodayTopStoriesMissingEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for TodayTopStoriesMissingEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4B5B8);
}

uint64_t TodayTopStoriesMissingEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TodayTopStoriesMissingEvent.feedData.modify())()
{
  type metadata accessor for TodayTopStoriesMissingEvent(0);
  return nullsub_1;
}

uint64_t TodayTopStoriesMissingEvent.feedConfigData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TodayTopStoriesMissingEvent.feedConfigData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TodayTopStoriesMissingEvent.feedConfigData.modify())()
{
  type metadata accessor for TodayTopStoriesMissingEvent(0);
  return nullsub_1;
}

uint64_t TodayTopStoriesMissingEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TodayTopStoriesMissingEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TodayTopStoriesMissingEvent.viewData.modify())()
{
  type metadata accessor for TodayTopStoriesMissingEvent(0);
  return nullsub_1;
}

uint64_t TodayTopStoriesMissingEvent.missingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TodayTopStoriesMissingEvent.missingData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TodayTopStoriesMissingEvent.missingData.modify())()
{
  type metadata accessor for TodayTopStoriesMissingEvent(0);
  return nullsub_1;
}

uint64_t TodayTopStoriesMissingEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for TodayTopStoriesMissingEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t TodayTopStoriesMissingEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t TodayTopStoriesMissingEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for TodayTopStoriesMissingEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4B658);
}

uint64_t TodayTopStoriesMissingEvent.Model.feedConfigData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t TodayTopStoriesMissingEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t TodayTopStoriesMissingEvent.Model.missingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for TodayTopStoriesMissingEvent.Model(0) + 32);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

__n128 TodayTopStoriesMissingEvent.Model.init(eventData:feedData:feedConfigData:viewData:missingData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 result;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v8 = *a2;
  v9 = *((_QWORD *)a2 + 1);
  v10 = *((_QWORD *)a2 + 2);
  v11 = *a3;
  v12 = a3[1];
  v13 = *((_BYTE *)a3 + 16);
  v23 = *(__n128 *)(a3 + 3);
  v14 = a3[5];
  v15 = *a4;
  v24 = *((_WORD *)a4 + 8);
  v28 = *a5;
  v27 = *((_QWORD *)a5 + 1);
  v25 = a4[1];
  v26 = *((_QWORD *)a5 + 2);
  v16 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  v17 = (int *)type metadata accessor for TodayTopStoriesMissingEvent.Model(0);
  v18 = a6 + v17[5];
  *(_BYTE *)v18 = v8;
  *(_QWORD *)(v18 + 8) = v9;
  *(_QWORD *)(v18 + 16) = v10;
  v19 = a6 + v17[6];
  *(_QWORD *)v19 = v11;
  *(_QWORD *)(v19 + 8) = v12;
  *(_BYTE *)(v19 + 16) = v13;
  result = v23;
  *(__n128 *)(v19 + 24) = v23;
  *(_QWORD *)(v19 + 40) = v14;
  v21 = a6 + v17[7];
  *(_QWORD *)v21 = v15;
  *(_QWORD *)(v21 + 8) = v25;
  *(_WORD *)(v21 + 16) = v24;
  v22 = a6 + v17[8];
  *(_BYTE *)v22 = v28;
  *(_QWORD *)(v22 + 8) = v27;
  *(_QWORD *)(v22 + 16) = v26;
  return result;
}

uint64_t sub_1D58B7F50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58B7F84 + 4 * byte_1D5AC2BF0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58B7F84()
{
  return 0x6174614464656566;
}

uint64_t sub_1D58B7FD0()
{
  return 0x44676E697373696DLL;
}

uint64_t sub_1D58B7FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58BA02C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58B8014()
{
  sub_1D58B82DC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58B803C()
{
  sub_1D58B82DC();
  return sub_1D5AAEEE0();
}

uint64_t TodayTopStoriesMissingEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  char v23;

  v3 = v1;
  sub_1D58B8760(0, &qword_1EFF4B548, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v20[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58B82DC();
  sub_1D5AAEEC8();
  v20[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for TodayTopStoriesMissingEvent.Model(0);
    v11 = v3 + v10[5];
    v20[0] = *(_BYTE *)v11;
    *(_OWORD *)&v20[8] = *(_OWORD *)(v11 + 8);
    v23 = 1;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    v12 = v3 + v10[6];
    v13 = *(_BYTE *)(v12 + 16);
    v14 = *(_QWORD *)(v12 + 40);
    *(_OWORD *)v20 = *(_OWORD *)v12;
    v20[16] = v13;
    v21 = *(_OWORD *)(v12 + 24);
    v22 = v14;
    v23 = 2;
    sub_1D57CAA2C();
    sub_1D5AAED6C();
    v15 = (uint64_t *)(v3 + v10[7]);
    v16 = *v15;
    v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    *(_QWORD *)v20 = v16;
    *(_QWORD *)&v20[8] = v17;
    *(_WORD *)&v20[16] = (_WORD)v15;
    v23 = 3;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v18 = v3 + v10[8];
    v20[0] = *(_BYTE *)v18;
    *(_OWORD *)&v20[8] = *(_OWORD *)(v18 + 8);
    v23 = 4;
    sub_1D58B4EEC();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58B82DC()
{
  unint64_t result;

  result = qword_1EFF4B550;
  if (!qword_1EFF4B550)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2E14, &type metadata for TodayTopStoriesMissingEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B550);
  }
  return result;
}

uint64_t TodayTopStoriesMissingEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int16 v21;
  char *v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  _BYTE v31[24];
  __int128 v32;
  uint64_t v33;
  char v34;

  v25 = a2;
  v3 = sub_1D5AADF98();
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58B8760(0, &qword_1EFF4B558, MEMORY[0x1E0DED048]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - v7;
  v9 = (int *)type metadata accessor for TodayTopStoriesMissingEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58B82DC();
  v29 = v8;
  v12 = (uint64_t)v30;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v26;
  v30 = a1;
  v31[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v27;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v28, v3);
  v34 = 1;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v16 = &v11[v9[5]];
  *v16 = v31[0];
  *(_OWORD *)(v16 + 8) = *(_OWORD *)&v31[8];
  v34 = 2;
  sub_1D57CA9E8();
  sub_1D5AAECD0();
  v17 = v31[16];
  v18 = v33;
  v19 = &v11[v9[6]];
  *(_OWORD *)v19 = *(_OWORD *)v31;
  v19[16] = v17;
  *(_OWORD *)(v19 + 24) = v32;
  *((_QWORD *)v19 + 5) = v18;
  v34 = 3;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v20 = *(_QWORD *)&v31[8];
  v21 = *(_WORD *)&v31[16];
  v22 = &v11[v9[7]];
  *(_QWORD *)v22 = *(_QWORD *)v31;
  *((_QWORD *)v22 + 1) = v20;
  *((_WORD *)v22 + 8) = v21;
  v34 = 4;
  sub_1D58B4EA4();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v29, v15);
  v23 = &v11[v9[8]];
  *v23 = v31[0];
  *(_OWORD *)(v23 + 8) = *(_OWORD *)&v31[8];
  sub_1D58B87BC((uint64_t)v11, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_1D58B8800((uint64_t)v11);
}

void sub_1D58B8760(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58B82DC();
    v7 = a3(a1, &type metadata for TodayTopStoriesMissingEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58B87BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TodayTopStoriesMissingEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58B8800(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TodayTopStoriesMissingEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58B883C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TodayTopStoriesMissingEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58B8850(_QWORD *a1)
{
  return TodayTopStoriesMissingEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58B8864@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47108, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4B510, a1);
}

uint64_t sub_1D58B8888@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47110, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4B528, a1);
}

uint64_t sub_1D58B88AC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for TodayTopStoriesMissingEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for TodayTopStoriesMissingEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for TodayTopStoriesMissingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for TodayTopStoriesMissingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for TodayTopStoriesMissingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for TodayTopStoriesMissingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayTopStoriesMissingEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B934C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TodayTopStoriesMissingEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B94B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58B9620()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1EFF4B540, (void (*)(void))sub_1D58B4EA4, (void (*)(void))sub_1D58B4EEC);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TodayTopStoriesMissingEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v13[16] = v14[16];
    *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
    *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
    v16 = a3[7];
    v17 = a3[8];
    v18 = (char *)a1 + v16;
    v19 = (char *)a2 + v16;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v18[16] = v19[16];
    v18[17] = v19[17];
    v21 = (char *)a1 + v17;
    v22 = (char *)a2 + v17;
    *v21 = *v22;
    v23 = *((_QWORD *)v22 + 2);
    *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
    *((_QWORD *)v21 + 2) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TodayTopStoriesMissingEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TodayTopStoriesMissingEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_OWORD *)(v12 + 24) = *(_OWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = a1 + v16;
  v21 = a2 + v16;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  v22 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TodayTopStoriesMissingEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TodayTopStoriesMissingEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
  *(_OWORD *)v9 = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v12[2] = v13[2];
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  v19 = a1 + v16;
  v20 = a2 + v16;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  return a1;
}

uint64_t assignWithTake for TodayTopStoriesMissingEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  v23 = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 8) = v24;
  *(_QWORD *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayTopStoriesMissingEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B9CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayTopStoriesMissingEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58B9D84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D58B9E00()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TodayTopStoriesMissingEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D58B9ED4 + 4 * byte_1D5AC2BFA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D58B9F08 + 4 * byte_1D5AC2BF5[v4]))();
}

uint64_t sub_1D58B9F08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B9F10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58B9F18);
  return result;
}

uint64_t sub_1D58B9F24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58B9F2CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D58B9F30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58B9F38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TodayTopStoriesMissingEvent.Model.CodingKeys()
{
  return &type metadata for TodayTopStoriesMissingEvent.Model.CodingKeys;
}

unint64_t sub_1D58B9F58()
{
  unint64_t result;

  result = qword_1EFF4B6A0;
  if (!qword_1EFF4B6A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2DEC, &type metadata for TodayTopStoriesMissingEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B6A0);
  }
  return result;
}

unint64_t sub_1D58B9FA0()
{
  unint64_t result;

  result = qword_1EFF4B6A8;
  if (!qword_1EFF4B6A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2D5C, &type metadata for TodayTopStoriesMissingEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B6A8);
  }
  return result;
}

unint64_t sub_1D58B9FE8()
{
  unint64_t result;

  result = qword_1EFF4B6B0;
  if (!qword_1EFF4B6B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC2D84, &type metadata for TodayTopStoriesMissingEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B6B0);
  }
  return result;
}

uint64_t sub_1D58BA02C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x666E6F4364656566 && a2 == 0xEE00617461446769 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x44676E697373696DLL && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1D58BA290(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CDA90, MEMORY[0x1E0CF8078]);
}

uint64_t static EOAFeedViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD1D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CDA90, a1);
}

uint64_t sub_1D58BA2D0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CDAA8, MEMORY[0x1E0CF8380]);
}

uint64_t static EOAFeedViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1ED9CD1E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CDAA8, a1);
}

uint64_t EOAFeedViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t EOAFeedViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*EOAFeedViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for EOAFeedViewEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t EOAFeedViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.timedData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.viewData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.feedData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.orientationData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.hostArticleViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.hostArticleViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.hostArticleViewData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.hostArticleNewsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.hostArticleNewsArticleData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.hostArticleChannelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.hostArticleChannelData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.viewEndData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for EOAFeedViewEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v2, v16);
  v17 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v2, v18);
  v19 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v2, v20);
  v21 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v2, v22);
}

uint64_t EOAFeedViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t EOAFeedViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for EOAFeedViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t EOAFeedViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 28);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EOAFeedViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t EOAFeedViewEvent.Model.hostArticleViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 40);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t EOAFeedViewEvent.Model.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 44);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 48));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.viewEndData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EOAFeedViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 EOAFeedViewEvent.Model.init(eventData:timedData:viewData:feedData:orientationData:hostArticleViewData:hostArticleNewsArticleData:hostArticleChannelData:userBundleSubscriptionContextData:viewEndData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, __int16 *a5@<X4>, uint64_t *a6@<X5>, __int128 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11)
{
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __n128 result;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  __int128 v49;
  __n128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[23];

  v14 = *a3;
  v15 = a3[1];
  v16 = *((_WORD *)a3 + 8);
  v17 = *a4;
  v18 = *((_QWORD *)a4 + 1);
  v19 = *((_QWORD *)a4 + 2);
  v31 = *a5;
  v32 = a6[1];
  v33 = *a6;
  v55 = a7[6];
  *(_OWORD *)v56 = a7[7];
  *(_QWORD *)&v56[15] = *(_QWORD *)((char *)a7 + 127);
  v51 = a7[2];
  v52 = a7[3];
  v53 = a7[4];
  v54 = a7[5];
  v49 = *a7;
  v50 = (__n128)a7[1];
  v38 = a8[1];
  v39 = *a8;
  v36 = *((_BYTE *)a8 + 17);
  v37 = *((_BYTE *)a8 + 16);
  v34 = a8[4];
  v35 = a8[3];
  v46 = *((_QWORD *)a10 + 1);
  v45 = *((_QWORD *)a10 + 2);
  v44 = a10[24];
  v43 = a10[25];
  v42 = *((_QWORD *)a10 + 4);
  v41 = *((_QWORD *)a10 + 5);
  v40 = a10[48];
  v47 = *a10;
  v48 = *a11;
  v20 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v21 = (int *)type metadata accessor for EOAFeedViewEvent.Model(0);
  v22 = a9 + v21[5];
  v23 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a2, v23);
  v24 = a9 + v21[6];
  *(_QWORD *)v24 = v14;
  *(_QWORD *)(v24 + 8) = v15;
  *(_WORD *)(v24 + 16) = v16;
  v25 = a9 + v21[7];
  *(_BYTE *)v25 = v17;
  *(_QWORD *)(v25 + 8) = v18;
  *(_QWORD *)(v25 + 16) = v19;
  *(_WORD *)(a9 + v21[8]) = v31;
  v26 = (_QWORD *)(a9 + v21[9]);
  *v26 = v33;
  v26[1] = v32;
  v27 = a9 + v21[10];
  *(_OWORD *)(v27 + 96) = v55;
  *(_OWORD *)(v27 + 112) = *(_OWORD *)v56;
  *(_QWORD *)(v27 + 127) = *(_QWORD *)&v56[15];
  *(_OWORD *)(v27 + 32) = v51;
  *(_OWORD *)(v27 + 48) = v52;
  *(_OWORD *)(v27 + 64) = v53;
  *(_OWORD *)(v27 + 80) = v54;
  result = v50;
  *(_OWORD *)v27 = v49;
  *(__n128 *)(v27 + 16) = v50;
  v29 = a9 + v21[11];
  *(_QWORD *)v29 = v39;
  *(_QWORD *)(v29 + 8) = v38;
  *(_BYTE *)(v29 + 16) = v37;
  *(_BYTE *)(v29 + 17) = v36;
  *(_QWORD *)(v29 + 24) = v35;
  *(_QWORD *)(v29 + 32) = v34;
  v30 = a9 + v21[12];
  *(_BYTE *)v30 = v47;
  *(_QWORD *)(v30 + 8) = v46;
  *(_QWORD *)(v30 + 16) = v45;
  *(_BYTE *)(v30 + 24) = v44;
  *(_BYTE *)(v30 + 25) = v43;
  *(_QWORD *)(v30 + 32) = v42;
  *(_QWORD *)(v30 + 40) = v41;
  *(_BYTE *)(v30 + 48) = v40;
  *(_BYTE *)(a9 + v21[13]) = v48;
  return result;
}

uint64_t sub_1D58BB320(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58BB358 + 4 * byte_1D5AC2E70[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58BB358()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D58BB36C()
{
  return 0x6174614477656976;
}

uint64_t sub_1D58BB394()
{
  return 0x7461746E6569726FLL;
}

unint64_t sub_1D58BB3B8()
{
  return 0xD000000000000013;
}

unint64_t sub_1D58BB3D4()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1D58BB424()
{
  return 0x44646E4577656976;
}

uint64_t sub_1D58BB444()
{
  unsigned __int8 *v0;

  return sub_1D58BB320(*v0);
}

uint64_t sub_1D58BB44C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58BEC2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58BB470()
{
  sub_1D58BB8FC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58BB498()
{
  sub_1D58BB8FC();
  return sub_1D5AAEEE0();
}

uint64_t EOAFeedViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v35;
  char v36;
  _BYTE v37[32];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[23];
  char v44;
  uint64_t v45;
  uint64_t v46;

  v3 = v1;
  sub_1D58BC23C(0, &qword_1EFF4B6B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v35 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58BB8FC();
  sub_1D5AAEEC8();
  v37[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for EOAFeedViewEvent.Model(0);
    v37[0] = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (uint64_t *)(v3 + v10[6]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)v37 = v12;
    *(_QWORD *)&v37[8] = v13;
    *(_WORD *)&v37[16] = (_WORD)v11;
    LOBYTE(v45) = 2;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v14 = v3 + v10[7];
    v37[0] = *(_BYTE *)v14;
    *(_OWORD *)&v37[8] = *(_OWORD *)(v14 + 8);
    LOBYTE(v45) = 3;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    *(_WORD *)v37 = *(_WORD *)(v3 + v10[8]);
    LOBYTE(v45) = 4;
    sub_1D57CA4E4();
    sub_1D5AAED6C();
    v15 = (uint64_t *)(v3 + v10[9]);
    v17 = *v15;
    v16 = v15[1];
    v45 = v17;
    v46 = v16;
    v44 = 5;
    sub_1D57CA658();
    sub_1D5AAED6C();
    v18 = v3 + v10[10];
    v19 = *(_OWORD *)(v18 + 112);
    v42 = *(_OWORD *)(v18 + 96);
    *(_OWORD *)v43 = v19;
    *(_QWORD *)&v43[15] = *(_QWORD *)(v18 + 127);
    v20 = *(_OWORD *)(v18 + 48);
    v38 = *(_OWORD *)(v18 + 32);
    v39 = v20;
    v21 = *(_OWORD *)(v18 + 80);
    v40 = *(_OWORD *)(v18 + 64);
    v41 = v21;
    v22 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v37 = *(_OWORD *)v18;
    *(_OWORD *)&v37[16] = v22;
    v36 = 6;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v23 = (uint64_t *)(v3 + v10[11]);
    v24 = *v23;
    v25 = v23[1];
    v26 = *((_BYTE *)v23 + 16);
    v27 = *((_BYTE *)v23 + 17);
    v29 = v23[3];
    v28 = v23[4];
    *(_QWORD *)v37 = v24;
    *(_QWORD *)&v37[8] = v25;
    v37[16] = v26;
    v37[17] = v27;
    *(_QWORD *)&v37[24] = v29;
    *(_QWORD *)&v38 = v28;
    v36 = 7;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v30 = v3 + v10[12];
    v31 = *(_BYTE *)(v30 + 24);
    v32 = *(_BYTE *)(v30 + 25);
    v33 = *(_BYTE *)(v30 + 48);
    v37[0] = *(_BYTE *)v30;
    *(_OWORD *)&v37[8] = *(_OWORD *)(v30 + 8);
    v37[24] = v31;
    v37[25] = v32;
    v38 = *(_OWORD *)(v30 + 32);
    LOBYTE(v39) = v33;
    v36 = 8;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v37[0] = *(_BYTE *)(v3 + v10[13]);
    v36 = 9;
    sub_1D57CB654();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58BB8FC()
{
  unint64_t result;

  result = qword_1ED9D1138;
  if (!qword_1ED9D1138)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC314C, &type metadata for EOAFeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1138);
  }
  return result;
}

uint64_t EOAFeedViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  __int16 v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char v35;
  char v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  char v56;
  char v57;
  char v58;
  _BYTE v59[32];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[23];
  int *v66;

  v43 = a2;
  v49 = sub_1D5AADFB0();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADF98();
  v48 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58BC23C(0, &qword_1ED9D1348, MEMORY[0x1E0DED048]);
  v45 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - v11;
  v66 = (int *)type metadata accessor for EOAFeedViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v66);
  v51 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D58BB8FC();
  v44 = v12;
  sub_1D5AAEEB0();
  v46 = v6;
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  v42 = v10;
  v59[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v15 = v51;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v51, v8, v6);
  v59[0] = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v16 = v49;
  sub_1D5AAECD0();
  v17 = v66;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v15[v66[5]], v5, v16);
  LOBYTE(v52) = 2;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v18 = *(_QWORD *)&v59[8];
  v19 = *(_WORD *)&v59[16];
  v20 = &v15[v17[6]];
  *(_QWORD *)v20 = *(_QWORD *)v59;
  *((_QWORD *)v20 + 1) = v18;
  *((_WORD *)v20 + 8) = v19;
  LOBYTE(v52) = 3;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v21 = &v15[v17[7]];
  *v21 = v59[0];
  *(_OWORD *)(v21 + 8) = *(_OWORD *)&v59[8];
  LOBYTE(v52) = 4;
  sub_1D57CA4A0();
  sub_1D5AAECD0();
  *(_WORD *)&v15[v17[8]] = *(_WORD *)v59;
  LOBYTE(v52) = 5;
  sub_1D57CA614();
  sub_1D5AAECD0();
  v22 = *(_QWORD *)&v59[8];
  v23 = &v15[v17[9]];
  *(_QWORD *)v23 = *(_QWORD *)v59;
  *((_QWORD *)v23 + 1) = v22;
  v58 = 6;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v24 = &v15[v17[10]];
  v25 = v63;
  v26 = *(_OWORD *)v65;
  *((_OWORD *)v24 + 6) = v64;
  *((_OWORD *)v24 + 7) = v26;
  *(_QWORD *)(v24 + 127) = *(_QWORD *)&v65[15];
  v27 = v61;
  *((_OWORD *)v24 + 2) = v60;
  *((_OWORD *)v24 + 3) = v27;
  *((_OWORD *)v24 + 4) = v62;
  *((_OWORD *)v24 + 5) = v25;
  v28 = *(_OWORD *)&v59[16];
  *(_OWORD *)v24 = *(_OWORD *)v59;
  *((_OWORD *)v24 + 1) = v28;
  v57 = 7;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v29 = v53;
  v30 = BYTE8(v53);
  v31 = BYTE9(v53);
  v32 = v54;
  v33 = v55;
  v34 = &v15[v17[11]];
  *(_QWORD *)v34 = v52;
  *((_QWORD *)v34 + 1) = v29;
  v34[16] = v30;
  v34[17] = v31;
  *((_QWORD *)v34 + 3) = v32;
  *((_QWORD *)v34 + 4) = v33;
  v57 = 8;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v35 = v54;
  v36 = BYTE1(v54);
  v37 = v56;
  v38 = &v15[v66[12]];
  *v38 = v52;
  *(_OWORD *)(v38 + 8) = v53;
  v38[24] = v35;
  v38[25] = v36;
  *((_OWORD *)v38 + 2) = v55;
  v38[48] = v37;
  v57 = 9;
  sub_1D57CB610();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  v39 = (uint64_t)v51;
  v51[v66[13]] = v52;
  sub_1D58BC298(v39, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  return sub_1D58BC2DC(v39);
}

void sub_1D58BC23C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58BB8FC();
    v7 = a3(a1, &type metadata for EOAFeedViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58BC298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EOAFeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58BC2DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EOAFeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58BC318@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EOAFeedViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58BC32C(_QWORD *a1)
{
  return EOAFeedViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58BC340@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD1D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CDA90, a1);
}

uint64_t sub_1D58BC364@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1ED9CD1E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CDAA8, a1);
}

uint64_t sub_1D58BC388@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v4, v17);
  v18 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v4, v19);
  v20 = a2 + a1[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v4, v21);
  v22 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v4, v23);
}

uint64_t *initializeBufferWithCopyOfBuffer for EOAFeedViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for EOAFeedViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAFeedViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58BD770(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for EOAFeedViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58BDA10(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for EOAFeedViewEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    *v17 = *v18;
    v43 = *((_QWORD *)v18 + 2);
    *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
    *((_QWORD *)v17 + 2) = v43;
    v19 = a3[9];
    *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v42 = v21[1];
    *v20 = *v21;
    v20[1] = v42;
    v22 = a3[10];
    v23 = a3[11];
    v24 = (char *)a1 + v22;
    v25 = (char *)a2 + v22;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = *((_QWORD *)v25 + 3);
    *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
    *((_QWORD *)v24 + 3) = v26;
    v24[32] = v25[32];
    v24[56] = v25[56];
    v27 = *((_QWORD *)v25 + 6);
    *((_QWORD *)v24 + 5) = *((_QWORD *)v25 + 5);
    *((_QWORD *)v24 + 6) = v27;
    v24[57] = v25[57];
    v29 = *((_QWORD *)v25 + 8);
    v28 = *((_QWORD *)v25 + 9);
    v24[80] = v25[80];
    *((_QWORD *)v24 + 8) = v29;
    *((_QWORD *)v24 + 9) = v28;
    *(_OWORD *)(v24 + 88) = *(_OWORD *)(v25 + 88);
    *((_QWORD *)v24 + 13) = *((_QWORD *)v25 + 13);
    v24[112] = v25[112];
    *((_QWORD *)v24 + 15) = *((_QWORD *)v25 + 15);
    *((_DWORD *)v24 + 32) = *((_DWORD *)v25 + 32);
    v24[132] = v25[132];
    v24[133] = v25[133];
    v24[134] = v25[134];
    v30 = (char *)a1 + v23;
    v31 = (char *)a2 + v23;
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v30[16] = v31[16];
    v30[17] = v31[17];
    v33 = *((_QWORD *)v31 + 4);
    *((_QWORD *)v30 + 3) = *((_QWORD *)v31 + 3);
    *((_QWORD *)v30 + 4) = v33;
    v34 = a3[12];
    v35 = a3[13];
    v36 = (char *)a1 + v34;
    v37 = (char *)a2 + v34;
    *v36 = *v37;
    v38 = *((_QWORD *)v37 + 2);
    *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
    *((_QWORD *)v36 + 2) = v38;
    v36[24] = v37[24];
    v36[25] = v37[25];
    v39 = *((_QWORD *)v37 + 5);
    *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
    *((_QWORD *)v36 + 5) = v39;
    v36[48] = v37[48];
    *((_BYTE *)a1 + v35) = *((_BYTE *)a2 + v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v41 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = v41;
  v18 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v40 = v20[1];
  *v19 = *v20;
  v19[1] = v40;
  v21 = a3[10];
  v22 = a3[11];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = *(_QWORD *)(v24 + 24);
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 24) = v25;
  *(_BYTE *)(v23 + 32) = *(_BYTE *)(v24 + 32);
  *(_BYTE *)(v23 + 56) = *(_BYTE *)(v24 + 56);
  v26 = *(_QWORD *)(v24 + 48);
  *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 40);
  *(_QWORD *)(v23 + 48) = v26;
  *(_BYTE *)(v23 + 57) = *(_BYTE *)(v24 + 57);
  v28 = *(_QWORD *)(v24 + 64);
  v27 = *(_QWORD *)(v24 + 72);
  *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
  *(_QWORD *)(v23 + 64) = v28;
  *(_QWORD *)(v23 + 72) = v27;
  *(_OWORD *)(v23 + 88) = *(_OWORD *)(v24 + 88);
  *(_QWORD *)(v23 + 104) = *(_QWORD *)(v24 + 104);
  *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
  *(_QWORD *)(v23 + 120) = *(_QWORD *)(v24 + 120);
  *(_DWORD *)(v23 + 128) = *(_DWORD *)(v24 + 128);
  *(_BYTE *)(v23 + 132) = *(_BYTE *)(v24 + 132);
  *(_BYTE *)(v23 + 133) = *(_BYTE *)(v24 + 133);
  *(_BYTE *)(v23 + 134) = *(_BYTE *)(v24 + 134);
  v29 = a1 + v22;
  v30 = a2 + v22;
  v31 = *(_QWORD *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_QWORD *)(v29 + 8) = v31;
  *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
  *(_BYTE *)(v29 + 17) = *(_BYTE *)(v30 + 17);
  v32 = *(_QWORD *)(v30 + 32);
  *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v29 + 32) = v32;
  v33 = a3[12];
  v34 = a3[13];
  v35 = a1 + v33;
  v36 = a2 + v33;
  *(_BYTE *)v35 = *(_BYTE *)v36;
  v37 = *(_QWORD *)(v36 + 16);
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
  *(_QWORD *)(v35 + 16) = v37;
  *(_BYTE *)(v35 + 24) = *(_BYTE *)(v36 + 24);
  *(_BYTE *)(v35 + 25) = *(_BYTE *)(v36 + 25);
  v38 = *(_QWORD *)(v36 + 40);
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
  *(_QWORD *)(v35 + 40) = v38;
  *(_BYTE *)(v35 + 48) = *(_BYTE *)(v36 + 48);
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_BYTE *)(v12 + 17) = *(_BYTE *)(v13 + 17);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_BYTE *)(a1 + v17);
  v19 = (_BYTE *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)(a2 + v23);
  *(_DWORD *)(v24 + 4) = *(_DWORD *)(a2 + v23 + 4);
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(a2 + v23 + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(a2 + v23 + 16);
  *(_QWORD *)(v24 + 24) = *(_QWORD *)(a2 + v23 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 32) = *(_BYTE *)(v25 + 32);
  *(_QWORD *)(v24 + 40) = *(_QWORD *)(v25 + 40);
  v26 = *(_QWORD *)(v25 + 48);
  *(_BYTE *)(v24 + 56) = *(_BYTE *)(v25 + 56);
  *(_QWORD *)(v24 + 48) = v26;
  *(_BYTE *)(v24 + 57) = *(_BYTE *)(v25 + 57);
  *(_QWORD *)(v24 + 64) = *(_QWORD *)(v25 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v25 + 72);
  *(_BYTE *)(v24 + 80) = *(_BYTE *)(v25 + 80);
  *(_QWORD *)(v24 + 72) = v27;
  *(_QWORD *)(v24 + 88) = *(_QWORD *)(v25 + 88);
  *(_QWORD *)(v24 + 96) = *(_QWORD *)(v25 + 96);
  *(_QWORD *)(v24 + 104) = *(_QWORD *)(v25 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 112) = *(_BYTE *)(v25 + 112);
  *(_QWORD *)(v24 + 120) = *(_QWORD *)(v25 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 128) = *(_BYTE *)(v25 + 128);
  *(_BYTE *)(v24 + 129) = *(_BYTE *)(v25 + 129);
  *(_BYTE *)(v24 + 130) = *(_BYTE *)(v25 + 130);
  *(_BYTE *)(v24 + 131) = *(_BYTE *)(v25 + 131);
  *(_BYTE *)(v24 + 132) = *(_BYTE *)(v25 + 132);
  *(_BYTE *)(v24 + 133) = *(_BYTE *)(v25 + 133);
  *(_BYTE *)(v24 + 134) = *(_BYTE *)(v25 + 134);
  v28 = a3[11];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)v29 = *(_QWORD *)(a2 + v28);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(a2 + v28 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
  *(_BYTE *)(v29 + 17) = *(_BYTE *)(v30 + 17);
  *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[12];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_BYTE *)v32 = *(_BYTE *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(a2 + v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 24) = *(_BYTE *)(v33 + 24);
  *(_BYTE *)(v32 + 25) = *(_BYTE *)(v33 + 25);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v33 + 48);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  v17 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  v18 = a3[10];
  v19 = a3[11];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_QWORD *)(v20 + 127) = *(_QWORD *)(v21 + 127);
  v22 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v22;
  v23 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v23;
  v24 = *(_OWORD *)(v21 + 112);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
  *(_OWORD *)(v20 + 112) = v24;
  v25 = *(_OWORD *)(v21 + 80);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(v21 + 64);
  *(_OWORD *)(v20 + 80) = v25;
  v26 = a1 + v19;
  v27 = a2 + v19;
  v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
  v29 = a3[12];
  v30 = a3[13];
  v31 = a1 + v29;
  v32 = a2 + v29;
  v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
  *(_BYTE *)(v31 + 48) = *(_BYTE *)(v32 + 48);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  return a1;
}

uint64_t assignWithTake for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 8) = v19;
  *(_QWORD *)(v16 + 16) = v18;
  swift_bridgeObjectRelease();
  v20 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_BYTE *)v26 = *(_BYTE *)(a2 + v25);
  *(_DWORD *)(v26 + 4) = *(_DWORD *)(a2 + v25 + 4);
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(a2 + v25 + 8);
  v28 = *(_QWORD *)(a2 + v25 + 24);
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(a2 + v25 + 16);
  *(_QWORD *)(v26 + 24) = v28;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v26 + 32) = *(_BYTE *)(v27 + 32);
  v29 = *(_QWORD *)(v27 + 48);
  *(_QWORD *)(v26 + 40) = *(_QWORD *)(v27 + 40);
  *(_QWORD *)(v26 + 48) = v29;
  *(_BYTE *)(v26 + 56) = *(_BYTE *)(v27 + 56);
  *(_BYTE *)(v26 + 57) = *(_BYTE *)(v27 + 57);
  *(_QWORD *)(v26 + 64) = *(_QWORD *)(v27 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + 72) = *(_QWORD *)(v27 + 72);
  *(_BYTE *)(v26 + 80) = *(_BYTE *)(v27 + 80);
  *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
  *(_QWORD *)(v26 + 104) = *(_QWORD *)(v27 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v26 + 112) = *(_BYTE *)(v27 + 112);
  *(_QWORD *)(v26 + 120) = *(_QWORD *)(v27 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v26 + 128) = *(_BYTE *)(v27 + 128);
  *(_BYTE *)(v26 + 129) = *(_BYTE *)(v27 + 129);
  *(_BYTE *)(v26 + 130) = *(_BYTE *)(v27 + 130);
  *(_BYTE *)(v26 + 131) = *(_BYTE *)(v27 + 131);
  *(_BYTE *)(v26 + 132) = *(_BYTE *)(v27 + 132);
  *(_BYTE *)(v26 + 133) = *(_BYTE *)(v27 + 133);
  *(_BYTE *)(v26 + 134) = *(_BYTE *)(v27 + 134);
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a2 + v30 + 8);
  *(_QWORD *)v31 = *(_QWORD *)(a2 + v30);
  *(_QWORD *)(v31 + 8) = v33;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(v32 + 16);
  *(_BYTE *)(v31 + 17) = *(_BYTE *)(v32 + 17);
  v34 = *(_QWORD *)(v32 + 32);
  *(_QWORD *)(v31 + 24) = *(_QWORD *)(v32 + 24);
  *(_QWORD *)(v31 + 32) = v34;
  swift_bridgeObjectRelease();
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_BYTE *)v36 = *(_BYTE *)(a2 + v35);
  v38 = *(_QWORD *)(a2 + v35 + 16);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(a2 + v35 + 8);
  *(_QWORD *)(v36 + 16) = v38;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 24) = *(_BYTE *)(v37 + 24);
  *(_BYTE *)(v36 + 25) = *(_BYTE *)(v37 + 25);
  v39 = *(_QWORD *)(v37 + 40);
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  *(_QWORD *)(v36 + 40) = v39;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 48) = *(_BYTE *)(v37 + 48);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAFeedViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58BE928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EOAFeedViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58BE9E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for EOAFeedViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D58BEAD4 + 4 * byte_1D5AC2E7F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D58BEB08 + 4 * byte_1D5AC2E7A[v4]))();
}

uint64_t sub_1D58BEB08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58BEB10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58BEB18);
  return result;
}

uint64_t sub_1D58BEB24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58BEB2CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D58BEB30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58BEB38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EOAFeedViewEvent.Model.CodingKeys()
{
  return &type metadata for EOAFeedViewEvent.Model.CodingKeys;
}

unint64_t sub_1D58BEB58()
{
  unint64_t result;

  result = qword_1EFF4B6C0;
  if (!qword_1EFF4B6C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3124, &type metadata for EOAFeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B6C0);
  }
  return result;
}

unint64_t sub_1D58BEBA0()
{
  unint64_t result;

  result = qword_1ED9D1100;
  if (!qword_1ED9D1100)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3094, &type metadata for EOAFeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1100);
  }
  return result;
}

unint64_t sub_1D58BEBE8()
{
  unint64_t result;

  result = qword_1ED9D1140;
  if (!qword_1ED9D1140)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC30BC, &type metadata for EOAFeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1140);
  }
  return result;
}

uint64_t sub_1D58BEC2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEEAF0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AEEB10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEEB30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

NewsAnalytics::TodayTopStoriesMissingReason_optional __swiftcall TodayTopStoriesMissingReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::TodayTopStoriesMissingReason_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t TodayTopStoriesMissingReason.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000011;
  if (*v0 != 1)
    v1 = 0x4572657474696D65;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D58BF124(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A36634(*a1, *a2);
}

unint64_t sub_1D58BF134()
{
  unint64_t result;

  result = qword_1EFF4B6C8;
  if (!qword_1EFF4B6C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TodayTopStoriesMissingReason, &type metadata for TodayTopStoriesMissingReason);
    atomic_store(result, (unint64_t *)&qword_1EFF4B6C8);
  }
  return result;
}

uint64_t sub_1D58BF178()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D58BF224()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D58BF2AC()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::TodayTopStoriesMissingReason_optional sub_1D58BF354(Swift::String *a1)
{
  return TodayTopStoriesMissingReason.init(rawValue:)(*a1);
}

void sub_1D58BF360(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x80000001D5AEB200;
  v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    v5 = 0x4572657474696D65;
    v4 = 0xEC000000726F7272;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D58BF3CC()
{
  sub_1D58BF540();
  return sub_1D5AAE928();
}

uint64_t sub_1D58BF428()
{
  sub_1D58BF540();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for TodayTopStoriesMissingReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58BF4C0 + 4 * byte_1D5AC31A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58BF4F4 + 4 * byte_1D5AC31A0[v4]))();
}

uint64_t sub_1D58BF4F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58BF4FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58BF504);
  return result;
}

uint64_t sub_1D58BF510(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58BF518);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58BF51C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58BF524(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TodayTopStoriesMissingReason()
{
  return &type metadata for TodayTopStoriesMissingReason;
}

unint64_t sub_1D58BF540()
{
  unint64_t result;

  result = qword_1EFF4B6D0;
  if (!qword_1EFF4B6D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TodayTopStoriesMissingReason, &type metadata for TodayTopStoriesMissingReason);
    atomic_store(result, (unint64_t *)&qword_1EFF4B6D0);
  }
  return result;
}

void EmailSignupUserActionData.userAction.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *EmailSignupUserActionData.userAction.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*EmailSignupUserActionData.userAction.modify())()
{
  return nullsub_1;
}

NewsAnalytics::EmailSignupUserActionData __swiftcall EmailSignupUserActionData.init(userAction:)(NewsAnalytics::EmailSignupUserActionData userAction)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)userAction.userAction;
  return userAction;
}

uint64_t sub_1D58BF5B8()
{
  return 0x6974634172657375;
}

uint64_t sub_1D58BF5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6974634172657375 && a2 == 0xEA00000000006E6FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58BF674()
{
  sub_1D58BF7C8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58BF69C()
{
  sub_1D58BF7C8();
  return sub_1D5AAEEE0();
}

uint64_t EmailSignupUserActionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D58BF988(0, &qword_1ED9CC960, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58BF7C8();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D58BF80C();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58BF7C8()
{
  unint64_t result;

  result = qword_1ED9CB5A8;
  if (!qword_1ED9CB5A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3460, &type metadata for EmailSignupUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5A8);
  }
  return result;
}

unint64_t sub_1D58BF80C()
{
  unint64_t result;

  result = qword_1ED9CB5D0;
  if (!qword_1ED9CB5D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailSignupUserActionType, &type metadata for EmailSignupUserActionType);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5D0);
  }
  return result;
}

uint64_t EmailSignupUserActionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D58BF988(0, &qword_1ED9CE160, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58BF7C8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D58BF9E4();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58BF988(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58BF7C8();
    v7 = a3(a1, &type metadata for EmailSignupUserActionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58BF9E4()
{
  unint64_t result;

  result = qword_1ED9CD870;
  if (!qword_1ED9CD870)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailSignupUserActionType, &type metadata for EmailSignupUserActionType);
    atomic_store(result, (unint64_t *)&qword_1ED9CD870);
  }
  return result;
}

uint64_t sub_1D58BFA30@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return EmailSignupUserActionData.init(from:)(a1, a2);
}

uint64_t sub_1D58BFA44(_QWORD *a1)
{
  return EmailSignupUserActionData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for EmailSignupUserActionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58BFAA4 + 4 * byte_1D5AC32D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58BFAD8 + 4 * byte_1D5AC32D0[v4]))();
}

uint64_t sub_1D58BFAD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58BFAE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58BFAE8);
  return result;
}

uint64_t sub_1D58BFAF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58BFAFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58BFB00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58BFB08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmailSignupUserActionData()
{
  return &type metadata for EmailSignupUserActionData;
}

uint64_t storeEnumTagSinglePayload for EmailSignupUserActionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58BFB64 + 4 * byte_1D5AC32DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58BFB84 + 4 * byte_1D5AC32DF[v4]))();
}

_BYTE *sub_1D58BFB64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58BFB84(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58BFB8C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58BFB94(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58BFB9C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58BFBA4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EmailSignupUserActionData.CodingKeys()
{
  return &type metadata for EmailSignupUserActionData.CodingKeys;
}

unint64_t sub_1D58BFBC4()
{
  unint64_t result;

  result = qword_1EFF4B6D8;
  if (!qword_1EFF4B6D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3438, &type metadata for EmailSignupUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B6D8);
  }
  return result;
}

unint64_t sub_1D58BFC0C()
{
  unint64_t result;

  result = qword_1ED9CB5B8;
  if (!qword_1ED9CB5B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC33A8, &type metadata for EmailSignupUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5B8);
  }
  return result;
}

unint64_t sub_1D58BFC54()
{
  unint64_t result;

  result = qword_1ED9CB5B0;
  if (!qword_1ED9CB5B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC33D0, &type metadata for EmailSignupUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB5B0);
  }
  return result;
}

float ScrollStartData.scrollYPosition.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void ScrollStartData.scrollYPosition.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*ScrollStartData.scrollYPosition.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ScrollStartData __swiftcall ScrollStartData.init(scrollYPosition:)(NewsAnalytics::ScrollStartData scrollYPosition)
{
  NewsAnalytics::ScrollStartData *v1;

  v1->scrollYPosition = scrollYPosition.scrollYPosition;
  return scrollYPosition;
}

uint64_t sub_1D58BFCC0()
{
  return 0x50596C6C6F726373;
}

uint64_t sub_1D58BFCE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x50596C6C6F726373 && a2 == 0xEF6E6F697469736FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58BFD9C()
{
  sub_1D58BFEDC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58BFDC4()
{
  sub_1D58BFEDC();
  return sub_1D5AAEEE0();
}

uint64_t ScrollStartData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D58C0048(0, &qword_1ED9C6F00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58BFEDC();
  sub_1D5AAEEC8();
  sub_1D5AAED60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D58BFEDC()
{
  unint64_t result;

  result = qword_1ED9C6900;
  if (!qword_1ED9C6900)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3628, &type metadata for ScrollStartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6900);
  }
  return result;
}

uint64_t ScrollStartData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v13;

  sub_1D58C0048(0, &qword_1ED9D0CE0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58BFEDC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5AAECC4();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58C0048(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58BFEDC();
    v7 = a3(a1, &type metadata for ScrollStartData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58C00A8()
{
  unint64_t result;

  result = qword_1ED9C81D8;
  if (!qword_1ED9C81D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScrollStartData, &type metadata for ScrollStartData);
    atomic_store(result, (unint64_t *)&qword_1ED9C81D8);
  }
  return result;
}

unint64_t sub_1D58C00F0()
{
  unint64_t result;

  result = qword_1ED9C81D0;
  if (!qword_1ED9C81D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScrollStartData, &type metadata for ScrollStartData);
    atomic_store(result, (unint64_t *)&qword_1ED9C81D0);
  }
  return result;
}

uint64_t sub_1D58C0134@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return ScrollStartData.init(from:)(a1, a2);
}

uint64_t sub_1D58C0148(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D58C0048(0, &qword_1ED9C6F00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58BFEDC();
  sub_1D5AAEEC8();
  sub_1D5AAED60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for ScrollStartData()
{
  return &type metadata for ScrollStartData;
}

uint64_t storeEnumTagSinglePayload for ScrollStartData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58C0288 + 4 * byte_1D5AC34B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58C02A8 + 4 * byte_1D5AC34B5[v4]))();
}

_BYTE *sub_1D58C0288(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58C02A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58C02B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58C02B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58C02C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58C02C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ScrollStartData.CodingKeys()
{
  return &type metadata for ScrollStartData.CodingKeys;
}

unint64_t sub_1D58C02E8()
{
  unint64_t result;

  result = qword_1EFF4B6E0;
  if (!qword_1EFF4B6E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3600, &type metadata for ScrollStartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B6E0);
  }
  return result;
}

unint64_t sub_1D58C0330()
{
  unint64_t result;

  result = qword_1ED9C6910;
  if (!qword_1ED9C6910)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3570, &type metadata for ScrollStartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6910);
  }
  return result;
}

unint64_t sub_1D58C0378()
{
  unint64_t result;

  result = qword_1ED9C6908;
  if (!qword_1ED9C6908)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3598, &type metadata for ScrollStartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6908);
  }
  return result;
}

uint64_t sub_1D58C03BC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4B6E8, MEMORY[0x1E0CF8078]);
}

uint64_t static UnfavoriteTagEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47118, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4B6E8, a1);
}

uint64_t sub_1D58C03FC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4B700, MEMORY[0x1E0CF8380]);
}

uint64_t static UnfavoriteTagEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47120, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4B700, a1);
}

uint64_t UnfavoriteTagEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t UnfavoriteTagEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*UnfavoriteTagEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t UnfavoriteTagEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfavoriteTagEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for UnfavoriteTagEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4B788);
}

uint64_t UnfavoriteTagEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfavoriteTagEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfavoriteTagEvent.tagData.modify())()
{
  type metadata accessor for UnfavoriteTagEvent(0);
  return nullsub_1;
}

uint64_t UnfavoriteTagEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfavoriteTagEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnfavoriteTagEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfavoriteTagEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfavoriteTagEvent.viewData.modify())()
{
  type metadata accessor for UnfavoriteTagEvent(0);
  return nullsub_1;
}

uint64_t UnfavoriteTagEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfavoriteTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnfavoriteTagEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfavoriteTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfavoriteTagEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for UnfavoriteTagEvent(0);
  return nullsub_1;
}

uint64_t UnfavoriteTagEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for UnfavoriteTagEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t UnfavoriteTagEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t UnfavoriteTagEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for UnfavoriteTagEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UnfavoriteTagEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4B820);
}

uint64_t UnfavoriteTagEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for UnfavoriteTagEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t UnfavoriteTagEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for UnfavoriteTagEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

int *UnfavoriteTagEvent.Model.init(eventData:tagData:viewData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v7 = *a2;
  v8 = a2[1];
  v9 = *a3;
  v10 = a3[1];
  v11 = *((_WORD *)a3 + 8);
  v12 = *a4;
  v13 = *((_QWORD *)a4 + 1);
  v14 = *((_QWORD *)a4 + 2);
  v23 = a4[25];
  v24 = a4[24];
  v21 = *((_QWORD *)a4 + 5);
  v22 = *((_QWORD *)a4 + 4);
  v20 = a4[48];
  v15 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, a1, v15);
  result = (int *)type metadata accessor for UnfavoriteTagEvent.Model(0);
  v17 = (_QWORD *)(a5 + result[5]);
  *v17 = v7;
  v17[1] = v8;
  v18 = a5 + result[6];
  *(_QWORD *)v18 = v9;
  *(_QWORD *)(v18 + 8) = v10;
  *(_WORD *)(v18 + 16) = v11;
  v19 = a5 + result[7];
  *(_BYTE *)v19 = v12;
  *(_QWORD *)(v19 + 8) = v13;
  *(_QWORD *)(v19 + 16) = v14;
  *(_BYTE *)(v19 + 24) = v24;
  *(_BYTE *)(v19 + 25) = v23;
  *(_QWORD *)(v19 + 32) = v22;
  *(_QWORD *)(v19 + 40) = v21;
  *(_BYTE *)(v19 + 48) = v20;
  return result;
}

uint64_t sub_1D58C0AA4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58C0AD8 + 4 * byte_1D5AC3680[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58C0AD8()
{
  return 0x61746144676174;
}

uint64_t sub_1D58C0AF0()
{
  return 0x6174614477656976;
}

unint64_t sub_1D58C0B08()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58C0B24()
{
  sub_1D58C0DA4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58C0B4C()
{
  sub_1D58C0DA4();
  return sub_1D5AAEEE0();
}

uint64_t UnfavoriteTagEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;
  char v29;

  v3 = v1;
  sub_1D58C1198(0, &qword_1EFF4B718, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C0DA4();
  sub_1D5AAEEC8();
  LOBYTE(v23) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for UnfavoriteTagEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    v23 = v13;
    *(_QWORD *)&v24 = v12;
    v29 = 1;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v14 = (uint64_t *)(v3 + v10[6]);
    v15 = *v14;
    v16 = v14[1];
    LOWORD(v14) = *((_WORD *)v14 + 8);
    v23 = v15;
    *(_QWORD *)&v24 = v16;
    WORD4(v24) = (_WORD)v14;
    v29 = 2;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v17 = v3 + v10[7];
    v18 = *(_BYTE *)(v17 + 24);
    v19 = *(_BYTE *)(v17 + 25);
    v20 = *(_BYTE *)(v17 + 48);
    LOBYTE(v23) = *(_BYTE *)v17;
    v24 = *(_OWORD *)(v17 + 8);
    v25 = v18;
    v26 = v19;
    v27 = *(_OWORD *)(v17 + 32);
    v28 = v20;
    v29 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58C0DA4()
{
  unint64_t result;

  result = qword_1EFF4B720;
  if (!qword_1EFF4B720)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC388C, &type metadata for UnfavoriteTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B720);
  }
  return result;
}

uint64_t UnfavoriteTagEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int16 v19;
  char *v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  char v36;
  __int128 v37;
  char v38;
  char v39;

  v27 = a2;
  v3 = sub_1D5AADF98();
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58C1198(0, &qword_1EFF4B728, MEMORY[0x1E0DED048]);
  v29 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  v9 = (int *)type metadata accessor for UnfavoriteTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C0DA4();
  v31 = v8;
  v12 = (uint64_t)v32;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v32 = a1;
  v14 = v28;
  LOBYTE(v33) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v29;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v30, v3);
  v39 = 1;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v16 = v34;
  v17 = &v11[v9[5]];
  *(_QWORD *)v17 = v33;
  *((_QWORD *)v17 + 1) = v16;
  v39 = 2;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v18 = v34;
  v19 = WORD4(v34);
  v20 = &v11[v9[6]];
  *(_QWORD *)v20 = v33;
  *((_QWORD *)v20 + 1) = v18;
  *((_WORD *)v20 + 8) = v19;
  v39 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v31, v15);
  v21 = v35;
  v22 = v36;
  v23 = v38;
  v24 = &v11[v9[7]];
  *v24 = v33;
  *(_OWORD *)(v24 + 8) = v34;
  v24[24] = v21;
  v24[25] = v22;
  *((_OWORD *)v24 + 2) = v37;
  v24[48] = v23;
  sub_1D58C11F4((uint64_t)v11, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1D58C1238((uint64_t)v11);
}

void sub_1D58C1198(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58C0DA4();
    v7 = a3(a1, &type metadata for UnfavoriteTagEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58C11F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnfavoriteTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58C1238(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnfavoriteTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58C1274@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UnfavoriteTagEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58C1288(_QWORD *a1)
{
  return UnfavoriteTagEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58C129C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47118, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4B6E8, a1);
}

uint64_t sub_1D58C12C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47120, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4B700, a1);
}

uint64_t getEnumTagSinglePayload for UnfavoriteTagEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C12F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for UnfavoriteTagEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C1418(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for UnfavoriteTagEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C1548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UnfavoriteTagEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C15D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D58C1650()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UnfavoriteTagEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D58C1720 + 4 * byte_1D5AC3689[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D58C1754 + 4 * byte_1D5AC3684[v4]))();
}

uint64_t sub_1D58C1754(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C175C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58C1764);
  return result;
}

uint64_t sub_1D58C1770(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58C1778);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D58C177C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C1784(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnfavoriteTagEvent.Model.CodingKeys()
{
  return &type metadata for UnfavoriteTagEvent.Model.CodingKeys;
}

unint64_t sub_1D58C17A4()
{
  unint64_t result;

  result = qword_1EFF4B860;
  if (!qword_1EFF4B860)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3864, &type metadata for UnfavoriteTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B860);
  }
  return result;
}

unint64_t sub_1D58C17EC()
{
  unint64_t result;

  result = qword_1EFF4B868;
  if (!qword_1EFF4B868)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC37D4, &type metadata for UnfavoriteTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B868);
  }
  return result;
}

unint64_t sub_1D58C1834()
{
  unint64_t result;

  result = qword_1EFF4B870;
  if (!qword_1EFF4B870)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC37FC, &type metadata for UnfavoriteTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B870);
  }
  return result;
}

uint64_t sub_1D58C1878(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4B878, MEMORY[0x1E0CF8078]);
}

uint64_t static UnfollowTagEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47128, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4B878, a1);
}

uint64_t sub_1D58C18B8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4B890, MEMORY[0x1E0CF8380]);
}

uint64_t static UnfollowTagEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47130, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4B890, a1);
}

uint64_t UnfollowTagEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t UnfollowTagEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*UnfollowTagEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t UnfollowTagEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnfollowTagEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfollowTagEvent.tagData.modify())()
{
  type metadata accessor for UnfollowTagEvent(0);
  return nullsub_1;
}

uint64_t UnfollowTagEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnfollowTagEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfollowTagEvent.feedData.modify())()
{
  type metadata accessor for UnfollowTagEvent(0);
  return nullsub_1;
}

uint64_t UnfollowTagEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnfollowTagEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfollowTagEvent.viewData.modify())()
{
  type metadata accessor for UnfollowTagEvent(0);
  return nullsub_1;
}

uint64_t UnfollowTagEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnfollowTagEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfollowTagEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for UnfollowTagEvent(0);
  return nullsub_1;
}

uint64_t UnfollowTagEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnfollowTagEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfollowTagEvent.actionData.modify())()
{
  type metadata accessor for UnfollowTagEvent(0);
  return nullsub_1;
}

uint64_t UnfollowTagEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnfollowTagEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfollowTagEvent.sectionData.modify())()
{
  type metadata accessor for UnfollowTagEvent(0);
  return nullsub_1;
}

uint64_t UnfollowTagEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for UnfollowTagEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v8, v17);
}

uint64_t UnfollowTagEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t UnfollowTagEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for UnfollowTagEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t UnfollowTagEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for UnfollowTagEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t UnfollowTagEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for UnfollowTagEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t UnfollowTagEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for UnfollowTagEvent.Model(0) + 32));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t UnfollowTagEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for UnfollowTagEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t UnfollowTagEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowTagEvent.Model(0) + 40);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

__n128 UnfollowTagEvent.Model.init(eventData:tagData:feedData:viewData:userBundleSubscriptionContextData:actionData:sectionData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, char *a6@<X5>, __n128 *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 *v24;
  __n128 result;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  unsigned __int8 v34;
  unint64_t v35;
  __n128 v36;

  v10 = *a2;
  v11 = a2[1];
  v26 = *a3;
  v12 = *((_QWORD *)a3 + 2);
  v13 = *a4;
  v14 = a4[1];
  v15 = *((_WORD *)a4 + 8);
  v16 = *a5;
  v17 = *((_QWORD *)a5 + 1);
  v32 = *((_QWORD *)a5 + 2);
  v30 = a5[25];
  v31 = a5[24];
  v28 = *((_QWORD *)a5 + 5);
  v29 = *((_QWORD *)a5 + 4);
  v27 = a5[48];
  v36 = *a7;
  v35 = a7[1].n128_u64[0];
  v33 = *a6;
  v34 = a7[1].n128_u8[8];
  v18 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a8, a1, v18);
  v19 = (int *)type metadata accessor for UnfollowTagEvent.Model(0);
  v20 = (_QWORD *)(a8 + v19[5]);
  *v20 = v10;
  v20[1] = v11;
  v21 = a8 + v19[6];
  *(_OWORD *)v21 = v26;
  *(_QWORD *)(v21 + 16) = v12;
  v22 = a8 + v19[7];
  *(_QWORD *)v22 = v13;
  *(_QWORD *)(v22 + 8) = v14;
  *(_WORD *)(v22 + 16) = v15;
  v23 = a8 + v19[8];
  *(_BYTE *)v23 = v16;
  *(_QWORD *)(v23 + 8) = v17;
  *(_QWORD *)(v23 + 16) = v32;
  *(_BYTE *)(v23 + 24) = v31;
  *(_BYTE *)(v23 + 25) = v30;
  *(_QWORD *)(v23 + 32) = v29;
  *(_QWORD *)(v23 + 40) = v28;
  *(_BYTE *)(v23 + 48) = v27;
  *(_BYTE *)(a8 + v19[9]) = v33;
  v24 = (__n128 *)(a8 + v19[10]);
  result = v36;
  *v24 = v36;
  v24[1].n128_u64[0] = v35;
  v24[1].n128_u8[8] = v34;
  return result;
}

uint64_t sub_1D58C2430(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58C2468 + 4 * byte_1D5AC38E0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58C2468()
{
  return 0x61746144676174;
}

uint64_t sub_1D58C2480()
{
  return 0x6174614464656566;
}

unint64_t sub_1D58C24A8()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58C24C4()
{
  return 0x61446E6F69746361;
}

uint64_t sub_1D58C24E0()
{
  return 0x446E6F6974636573;
}

uint64_t sub_1D58C2500()
{
  unsigned __int8 *v0;

  return sub_1D58C2430(*v0);
}

uint64_t sub_1D58C2508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58C4C60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58C252C()
{
  sub_1D58C2898();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58C2554()
{
  sub_1D58C2898();
  return sub_1D5AAEEE0();
}

uint64_t UnfollowTagEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _BYTE v27[24];
  char v28;
  char v29;
  __int128 v30;
  char v31;
  char v32;

  v3 = v1;
  sub_1D58C2E0C(0, &qword_1EFF4B8A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v27[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C2898();
  sub_1D5AAEEC8();
  v27[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for UnfollowTagEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)v27 = v13;
    *(_QWORD *)&v27[8] = v12;
    v32 = 1;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v14 = v3 + v10[6];
    v15 = *(_QWORD *)(v14 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v14;
    *(_QWORD *)&v27[16] = v15;
    v32 = 2;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    LOWORD(v16) = *((_WORD *)v16 + 8);
    *(_QWORD *)v27 = v17;
    *(_QWORD *)&v27[8] = v18;
    *(_WORD *)&v27[16] = (_WORD)v16;
    v32 = 3;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v19 = v3 + v10[8];
    v20 = *(_BYTE *)(v19 + 24);
    v21 = *(_BYTE *)(v19 + 25);
    v22 = *(_BYTE *)(v19 + 48);
    v27[0] = *(_BYTE *)v19;
    *(_OWORD *)&v27[8] = *(_OWORD *)(v19 + 8);
    v28 = v20;
    v29 = v21;
    v30 = *(_OWORD *)(v19 + 32);
    v31 = v22;
    v32 = 4;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v27[0] = *(_BYTE *)(v3 + v10[9]);
    v32 = 5;
    sub_1D57CC038();
    sub_1D5AAED6C();
    v23 = v3 + v10[10];
    v24 = *(_QWORD *)(v23 + 16);
    v25 = *(_BYTE *)(v23 + 24);
    *(_OWORD *)v27 = *(_OWORD *)v23;
    *(_QWORD *)&v27[16] = v24;
    v28 = v25;
    v32 = 6;
    sub_1D57CB720();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58C2898()
{
  unint64_t result;

  result = qword_1EFF4B8B0;
  if (!qword_1EFF4B8B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3B5C, &type metadata for UnfollowTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B8B0);
  }
  return result;
}

uint64_t UnfollowTagEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int16 v21;
  char *v22;
  char v23;
  char v24;
  char v25;
  char *v26;
  uint64_t v27;
  char v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  _BYTE v37[24];
  char v38;
  char v39;
  __int128 v40;
  char v41;
  char v42;

  v31 = a2;
  v3 = sub_1D5AADF98();
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58C2E0C(0, &qword_1EFF4B8B8, MEMORY[0x1E0DED048]);
  v33 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - v7;
  v9 = (int *)type metadata accessor for UnfollowTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C2898();
  v35 = v8;
  v12 = (uint64_t)v36;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v32;
  v36 = a1;
  v37[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v33;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v34, v3);
  v42 = 1;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v16 = *(_QWORD *)&v37[8];
  v17 = &v11[v9[5]];
  *(_QWORD *)v17 = *(_QWORD *)v37;
  *((_QWORD *)v17 + 1) = v16;
  v42 = 2;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v18 = *(_QWORD *)&v37[16];
  v19 = &v11[v9[6]];
  *(_OWORD *)v19 = *(_OWORD *)v37;
  *((_QWORD *)v19 + 2) = v18;
  v42 = 3;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v20 = *(_QWORD *)&v37[8];
  v21 = *(_WORD *)&v37[16];
  v22 = &v11[v9[7]];
  *(_QWORD *)v22 = *(_QWORD *)v37;
  *((_QWORD *)v22 + 1) = v20;
  *((_WORD *)v22 + 8) = v21;
  v42 = 4;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v23 = v38;
  v24 = v39;
  v25 = v41;
  v26 = &v11[v9[8]];
  *v26 = v37[0];
  *(_OWORD *)(v26 + 8) = *(_OWORD *)&v37[8];
  v26[24] = v23;
  v26[25] = v24;
  *((_OWORD *)v26 + 2) = v40;
  v26[48] = v25;
  v42 = 5;
  sub_1D57CBFF4();
  sub_1D5AAECD0();
  v11[v9[9]] = v37[0];
  v42 = 6;
  sub_1D57CB6DC();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v35, v15);
  v27 = *(_QWORD *)&v37[16];
  v28 = v38;
  v29 = &v11[v9[10]];
  *(_OWORD *)v29 = *(_OWORD *)v37;
  *((_QWORD *)v29 + 2) = v27;
  v29[24] = v28;
  sub_1D58C2E68((uint64_t)v11, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_1D58C2EAC((uint64_t)v11);
}

void sub_1D58C2E0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58C2898();
    v7 = a3(a1, &type metadata for UnfollowTagEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58C2E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnfollowTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58C2EAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnfollowTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58C2EE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UnfollowTagEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58C2EFC(_QWORD *a1)
{
  return UnfollowTagEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58C2F10@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47128, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4B878, a1);
}

uint64_t sub_1D58C2F34@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47130, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4B890, a1);
}

uint64_t sub_1D58C2F58@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v9, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for UnfollowTagEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for UnfollowTagEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t initializeWithCopy for UnfollowTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for UnfollowTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for UnfollowTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for UnfollowTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnfollowTagEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C3E1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for UnfollowTagEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C4010(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for UnfollowTagEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *(_QWORD *)((char *)a2 + v9 + 16);
    swift_bridgeObjectRetain();
    if (v15 == 1)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    }
    else
    {
      *v13 = *v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = v15;
      swift_bridgeObjectRetain();
    }
    v17 = a3[7];
    v18 = a3[8];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    v22 = (char *)a1 + v18;
    v23 = (char *)a2 + v18;
    *v22 = *v23;
    v24 = *((_QWORD *)v23 + 2);
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    *((_QWORD *)v22 + 2) = v24;
    *((_WORD *)v22 + 12) = *((_WORD *)v23 + 12);
    v25 = *((_QWORD *)v23 + 5);
    *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
    *((_QWORD *)v22 + 5) = v25;
    v22[48] = v23[48];
    v26 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v27[24] = v28[24];
    *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for UnfollowTagEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24) + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UnfollowTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(a2 + v8 + 16);
  swift_bridgeObjectRetain();
  if (v14 == 1)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  }
  else
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = v14;
    swift_bridgeObjectRetain();
  }
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  v20 = a1 + v16;
  v21 = a2 + v16;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  v22 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = v22;
  *(_WORD *)(v20 + 24) = *(_WORD *)(v21 + 24);
  v23 = *(_QWORD *)(v21 + 40);
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  *(_QWORD *)(v20 + 40) = v23;
  *(_BYTE *)(v20 + 48) = *(_BYTE *)(v21 + 48);
  v24 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v27;
  *(_BYTE *)(v25 + 24) = *(_BYTE *)(v26 + 24);
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UnfollowTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = (__int128 *)(a2 + v10);
  v13 = *(_QWORD *)(a1 + v10 + 16);
  v14 = *(_QWORD *)(a2 + v10 + 16);
  if (v13 == 1)
  {
    if (v14 == 1)
    {
      v15 = *v12;
      *(_QWORD *)(v11 + 16) = *((_QWORD *)v12 + 2);
      *(_OWORD *)v11 = v15;
    }
    else
    {
      *(_BYTE *)v11 = *(_BYTE *)v12;
      *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
      *(_QWORD *)(v11 + 16) = *((_QWORD *)v12 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v14 == 1)
  {
    sub_1D57D9100(v11);
    v16 = *((_QWORD *)v12 + 2);
    *(_OWORD *)v11 = *v12;
    *(_QWORD *)(v11 + 16) = v16;
  }
  else
  {
    *(_BYTE *)v11 = *(_BYTE *)v12;
    *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
    *(_QWORD *)(v11 + 16) = *((_QWORD *)v12 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  *(_BYTE *)(v18 + 17) = *(_BYTE *)(v19 + 17);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)(a2 + v20);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(a2 + v20 + 8);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(a2 + v20 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 24) = *(_BYTE *)(v22 + 24);
  *(_BYTE *)(v21 + 25) = *(_BYTE *)(v22 + 25);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 48) = *(_BYTE *)(v22 + 48);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v25 + 16);
  *(_BYTE *)(v24 + 24) = *(_BYTE *)(v25 + 24);
  *(_QWORD *)(v24 + 16) = v26;
  return a1;
}

uint64_t initializeWithTake for UnfollowTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(_BYTE *)(v14 + 48) = *(_BYTE *)(v15 + 48);
  v17 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v18 = (_OWORD *)(a1 + v17);
  v19 = (_OWORD *)(a2 + v17);
  *v18 = *v19;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v19 + 9);
  return a1;
}

uint64_t assignWithTake for UnfollowTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  if (*(_QWORD *)(a1 + v12 + 16) != 1)
  {
    v15 = *(_QWORD *)(v14 + 16);
    if (v15 != 1)
    {
      *(_BYTE *)v13 = *(_BYTE *)v14;
      *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
      *(_QWORD *)(v13 + 16) = v15;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57D9100(v13);
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
LABEL_6:
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)(a2 + v20);
  v23 = *(_QWORD *)(a2 + v20 + 16);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(a2 + v20 + 8);
  *(_QWORD *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 24) = *(_BYTE *)(v22 + 24);
  *(_BYTE *)(v21 + 25) = *(_BYTE *)(v22 + 25);
  v24 = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = v24;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 48) = *(_BYTE *)(v22 + 48);
  v25 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_QWORD *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_QWORD *)(v26 + 8) = v28;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  *(_BYTE *)(v26 + 24) = *(_BYTE *)(v27 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnfollowTagEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C49B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UnfollowTagEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C4A40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for UnfollowTagEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D58C4B08 + 4 * byte_1D5AC38EC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D58C4B3C + 4 * byte_1D5AC38E7[v4]))();
}

uint64_t sub_1D58C4B3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C4B44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58C4B4CLL);
  return result;
}

uint64_t sub_1D58C4B58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58C4B60);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D58C4B64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C4B6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnfollowTagEvent.Model.CodingKeys()
{
  return &type metadata for UnfollowTagEvent.Model.CodingKeys;
}

unint64_t sub_1D58C4B8C()
{
  unint64_t result;

  result = qword_1EFF4B8C0;
  if (!qword_1EFF4B8C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3B34, &type metadata for UnfollowTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B8C0);
  }
  return result;
}

unint64_t sub_1D58C4BD4()
{
  unint64_t result;

  result = qword_1EFF4B8C8;
  if (!qword_1EFF4B8C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3AA4, &type metadata for UnfollowTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B8C8);
  }
  return result;
}

unint64_t sub_1D58C4C1C()
{
  unint64_t result;

  result = qword_1EFF4B8D0;
  if (!qword_1EFF4B8D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3ACC, &type metadata for UnfollowTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B8D0);
  }
  return result;
}

uint64_t sub_1D58C4C60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

void BadgeOriginationData.badgeOriginationType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *BadgeOriginationData.badgeOriginationType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*BadgeOriginationData.badgeOriginationType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::BadgeOriginationData __swiftcall BadgeOriginationData.init(badgeOriginationType:)(NewsAnalytics::BadgeOriginationData badgeOriginationType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)badgeOriginationType.badgeOriginationType;
  return badgeOriginationType;
}

uint64_t sub_1D58C4FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58C5318(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D58C4FC8()
{
  sub_1D57A615C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58C4FF0()
{
  sub_1D57A615C();
  return sub_1D5AAEEE0();
}

uint64_t BadgeOriginationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D57A60BC(0, &qword_1EFF4B8D8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A615C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D58C5150();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1D58C5150()
{
  unint64_t result;

  result = qword_1EFF4B8E0;
  if (!qword_1EFF4B8E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BadgeOriginationType, &type metadata for BadgeOriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4B8E0);
  }
  return result;
}

unint64_t sub_1D58C5198()
{
  unint64_t result;

  result = qword_1EFF4B8E8;
  if (!qword_1EFF4B8E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BadgeOriginationData, &type metadata for BadgeOriginationData);
    atomic_store(result, (unint64_t *)&qword_1EFF4B8E8);
  }
  return result;
}

uint64_t sub_1D58C51E0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return BadgeOriginationData.init(from:)(a1, a2);
}

uint64_t storeEnumTagSinglePayload for BadgeOriginationData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58C5240 + 4 * byte_1D5AC3BD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58C5274 + 4 * asc_1D5AC3BD0[v4]))();
}

uint64_t sub_1D58C5274(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C527C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58C5284);
  return result;
}

uint64_t sub_1D58C5290(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58C5298);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58C529C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C52A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BadgeOriginationData()
{
  return &type metadata for BadgeOriginationData;
}

ValueMetadata *type metadata accessor for BadgeOriginationData.CodingKeys()
{
  return &type metadata for BadgeOriginationData.CodingKeys;
}

unint64_t sub_1D58C52D4()
{
  unint64_t result;

  result = qword_1EFF4B8F0;
  if (!qword_1EFF4B8F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3D30, &type metadata for BadgeOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B8F0);
  }
  return result;
}

uint64_t sub_1D58C5318(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AEEB50)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t PDFPageContext.pageIndices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PDFPageContext.pageIndices.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PDFPageContext.pageIndices.modify())()
{
  return nullsub_1;
}

uint64_t PDFPageContext.pageCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t PDFPageContext.pageCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*PDFPageContext.pageCount.modify())()
{
  return nullsub_1;
}

uint64_t PDFPageContext.init(pageIndices:pageCount:)@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_DWORD *)(a3 + 8) = a2;
  return result;
}

uint64_t sub_1D58C5408()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E756F4365676170;
  else
    return 0x69646E4965676170;
}

uint64_t sub_1D58C5450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58C5CFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58C5474()
{
  sub_1D58C5624();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58C549C()
{
  sub_1D58C5624();
  return sub_1D5AAEEE0();
}

uint64_t PDFPageContext.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _DWORD v11[3];
  char v12;
  char v13;
  uint64_t v14;

  sub_1D58C5880(0, &qword_1EFF4B8F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v9 = *v1;
  v11[2] = *((_DWORD *)v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C5624();
  sub_1D5AAEEC8();
  v14 = v9;
  v13 = 0;
  sub_1D58C5668();
  sub_1D58C58DC((unint64_t *)&qword_1ED9CC6D0, MEMORY[0x1E0DEDBD0], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v12 = 1;
    sub_1D5AAED78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D58C5624()
{
  unint64_t result;

  result = qword_1EFF4B900;
  if (!qword_1EFF4B900)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3F20, &type metadata for PDFPageContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B900);
  }
  return result;
}

void sub_1D58C5668()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CC6C8)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CC6C8);
  }
}

uint64_t PDFPageContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  int v11;
  _BYTE v13[16];
  uint64_t v14;

  sub_1D58C5880(0, &qword_1EFF4B908, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v13[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C5624();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1D58C5668();
  v13[15] = 0;
  sub_1D58C58DC((unint64_t *)&qword_1ED9CC6D8, MEMORY[0x1E0DEDBF8], MEMORY[0x1E0DEAF40]);
  sub_1D5AAECD0();
  v10 = v14;
  v13[14] = 1;
  swift_bridgeObjectRetain();
  v11 = sub_1D5AAECDC();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)a2 = v10;
  *(_DWORD *)(a2 + 8) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D58C5880(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58C5624();
    v7 = a3(a1, &type metadata for PDFPageContext.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58C58DC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1D58C5668();
    v8 = a2;
    result = MEMORY[0x1D8279680](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D58C593C()
{
  unint64_t result;

  result = qword_1ED9C7EF0;
  if (!qword_1ED9C7EF0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PDFPageContext, &type metadata for PDFPageContext);
    atomic_store(result, (unint64_t *)&qword_1ED9C7EF0);
  }
  return result;
}

unint64_t sub_1D58C5984()
{
  unint64_t result;

  result = qword_1ED9C7EE8;
  if (!qword_1ED9C7EE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PDFPageContext, &type metadata for PDFPageContext);
    atomic_store(result, (unint64_t *)&qword_1ED9C7EE8);
  }
  return result;
}

uint64_t sub_1D58C59C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PDFPageContext.init(from:)(a1, a2);
}

uint64_t sub_1D58C59DC(_QWORD *a1)
{
  return PDFPageContext.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for PDFPageContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PDFPageContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for PDFPageContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PDFPageContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 12))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PDFPageContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 12) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 12) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFPageContext()
{
  return &type metadata for PDFPageContext;
}

uint64_t storeEnumTagSinglePayload for PDFPageContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58C5BA4 + 4 * byte_1D5AC3DAD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58C5BD8 + 4 * byte_1D5AC3DA8[v4]))();
}

uint64_t sub_1D58C5BD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C5BE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58C5BE8);
  return result;
}

uint64_t sub_1D58C5BF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58C5BFCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D58C5C00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C5C08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PDFPageContext.CodingKeys()
{
  return &type metadata for PDFPageContext.CodingKeys;
}

unint64_t sub_1D58C5C28()
{
  unint64_t result;

  result = qword_1EFF4B910;
  if (!qword_1EFF4B910)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3EF8, &type metadata for PDFPageContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B910);
  }
  return result;
}

unint64_t sub_1D58C5C70()
{
  unint64_t result;

  result = qword_1EFF4B918;
  if (!qword_1EFF4B918)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3E68, &type metadata for PDFPageContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B918);
  }
  return result;
}

unint64_t sub_1D58C5CB8()
{
  unint64_t result;

  result = qword_1EFF4B920;
  if (!qword_1EFF4B920)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC3E90, &type metadata for PDFPageContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B920);
  }
  return result;
}

uint64_t sub_1D58C5CFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69646E4965676170 && a2 == 0xEB00000000736563;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E756F4365676170 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::AdState_optional __swiftcall AdState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::AdState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58C5E9C + 4 * byte_1D5AC3F70[*v0]))(0x6C616974696E69, 0xE700000000000000);
}

uint64_t sub_1D58C5E9C()
{
  return 0x676E69646E6570;
}

uint64_t sub_1D58C5EB0()
{
  return 0x64656C696166;
}

uint64_t sub_1D58C5EC4()
{
  return 0x656C6C69666C7566;
}

void sub_1D58C5EE0(char *a1)
{
  sub_1D5A357E4(*a1);
}

unint64_t sub_1D58C5EF0()
{
  unint64_t result;

  result = qword_1EFF4B928;
  if (!qword_1EFF4B928)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdState, &type metadata for AdState);
    atomic_store(result, (unint64_t *)&qword_1EFF4B928);
  }
  return result;
}

void sub_1D58C5F34()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58C5F80()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D58C5FEC()
{
  __asm { BR              X10 }
}

uint64_t sub_1D58C6028()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D58C6080()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58C60C8()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::AdState_optional sub_1D58C6134(Swift::String *a1)
{
  return AdState.init(rawValue:)(*a1);
}

uint64_t sub_1D58C6140()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D58C6170 + 4 * byte_1D5AC3F80[*v0]))();
}

void sub_1D58C6170(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x676E69646E6570;
  a1[1] = v1;
}

void sub_1D58C6188(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C696166;
  a1[1] = 0xE600000000000000;
}

void sub_1D58C61A0(_QWORD *a1@<X8>)
{
  *a1 = 0x656C6C69666C7566;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_1D58C61C0()
{
  sub_1D58C6334();
  return sub_1D5AAE928();
}

uint64_t sub_1D58C621C()
{
  sub_1D58C6334();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for AdState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D58C62B4 + 4 * byte_1D5AC3F89[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D58C62E8 + 4 * byte_1D5AC3F84[v4]))();
}

uint64_t sub_1D58C62E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C62F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58C62F8);
  return result;
}

uint64_t sub_1D58C6304(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58C630CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D58C6310(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C6318(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdState()
{
  return &type metadata for AdState;
}

unint64_t sub_1D58C6334()
{
  unint64_t result;

  result = qword_1ED9CD658;
  if (!qword_1ED9CD658)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdState, &type metadata for AdState);
    atomic_store(result, (unint64_t *)&qword_1ED9CD658);
  }
  return result;
}

uint64_t FeedConfigData.recordID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedConfigData.recordID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FeedConfigData.recordID.modify())()
{
  return nullsub_1;
}

void FeedConfigData.source.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *FeedConfigData.source.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*FeedConfigData.source.modify())()
{
  return nullsub_1;
}

uint64_t FeedConfigData.fetchStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t FeedConfigData.fetchStartTime.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*FeedConfigData.fetchStartTime.modify())()
{
  return nullsub_1;
}

uint64_t FeedConfigData.fetchEndTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t FeedConfigData.fetchEndTime.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*FeedConfigData.fetchEndTime.modify())()
{
  return nullsub_1;
}

uint64_t FeedConfigData.publishDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t FeedConfigData.publishDate.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*FeedConfigData.publishDate.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D58C6470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58C6948(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58C6494()
{
  sub_1D57CABBC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58C64BC()
{
  sub_1D57CABBC();
  return sub_1D5AAEEE0();
}

uint64_t FeedConfigData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  char v21;
  char v22;
  char v23;
  unsigned __int8 v24;
  char v25;

  sub_1D57C57DC(0, &qword_1EFF4B930, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CABBC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v25 = 0;
    v10 = sub_1D5AAEC58();
    v12 = v11;
    v23 = 1;
    sub_1D58C6724();
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v19 = v24;
    v22 = 2;
    v18 = sub_1D5AAECE8();
    v21 = 3;
    v17 = sub_1D5AAECE8();
    v20 = 4;
    v14 = sub_1D5AAECE8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_BYTE *)(a2 + 16) = v19;
    v15 = v17;
    *(_QWORD *)(a2 + 24) = v18;
    *(_QWORD *)(a2 + 32) = v15;
    *(_QWORD *)(a2 + 40) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D58C6724()
{
  unint64_t result;

  result = qword_1EFF4B938;
  if (!qword_1EFF4B938)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedConfigSource, &type metadata for FeedConfigSource);
    atomic_store(result, (unint64_t *)&qword_1EFF4B938);
  }
  return result;
}

uint64_t sub_1D58C6768@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedConfigData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for FeedConfigData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FeedConfigData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedConfigData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedConfigData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedConfigData.CodingKeys()
{
  return &type metadata for FeedConfigData.CodingKeys;
}

unint64_t sub_1D58C6904()
{
  unint64_t result;

  result = qword_1EFF4B940;
  if (!qword_1EFF4B940)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4200, &type metadata for FeedConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B940);
  }
  return result;
}

uint64_t sub_1D58C6948(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x444964726F636572 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174536863746566 && a2 == 0xEE00656D69547472 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646E456863746566 && a2 == 0xEC000000656D6954 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t PurchaseRestoreListData.purchaseRestoreData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PurchaseRestoreListData.purchaseRestoreData.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PurchaseRestoreListData.purchaseRestoreData.modify())()
{
  return nullsub_1;
}

NewsAnalytics::PurchaseRestoreListData __swiftcall PurchaseRestoreListData.init(purchaseRestoreData:)(NewsAnalytics::PurchaseRestoreListData purchaseRestoreData)
{
  NewsAnalytics::PurchaseRestoreListData *v1;

  v1->purchaseRestoreData._rawValue = purchaseRestoreData.purchaseRestoreData._rawValue;
  return purchaseRestoreData;
}

unint64_t sub_1D58C6BF8()
{
  return 0xD000000000000013;
}

uint64_t sub_1D58C6C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58C7324(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D58C6C3C()
{
  sub_1D58C6DB0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58C6C64()
{
  sub_1D58C6DB0();
  return sub_1D5AAEEE0();
}

uint64_t PurchaseRestoreListData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D58C6FE4(0, &qword_1EFF4B948, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C6DB0();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D58C6DF4();
  sub_1D58C7040(&qword_1EFF4B960, (uint64_t (*)(void))sub_1D58C6E48, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58C6DB0()
{
  unint64_t result;

  result = qword_1EFF4B950;
  if (!qword_1EFF4B950)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC43FC, &type metadata for PurchaseRestoreListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B950);
  }
  return result;
}

void sub_1D58C6DF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4B958)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4B958);
  }
}

unint64_t sub_1D58C6E48()
{
  unint64_t result;

  result = qword_1EFF4B968;
  if (!qword_1EFF4B968)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseRestoreData, &type metadata for PurchaseRestoreData);
    atomic_store(result, (unint64_t *)&qword_1EFF4B968);
  }
  return result;
}

uint64_t PurchaseRestoreListData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D58C6FE4(0, &qword_1EFF4B970, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C6DB0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D58C6DF4();
    sub_1D58C7040(&qword_1EFF4B978, (uint64_t (*)(void))sub_1D58C70A4, MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58C6FE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58C6DB0();
    v7 = a3(a1, &type metadata for PurchaseRestoreListData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58C7040(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D58C6DF4();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D58C70A4()
{
  unint64_t result;

  result = qword_1EFF4B980;
  if (!qword_1EFF4B980)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseRestoreData, &type metadata for PurchaseRestoreData);
    atomic_store(result, (unint64_t *)&qword_1EFF4B980);
  }
  return result;
}

unint64_t sub_1D58C70EC()
{
  unint64_t result;

  result = qword_1EFF4B988;
  if (!qword_1EFF4B988)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseRestoreListData, &type metadata for PurchaseRestoreListData);
    atomic_store(result, (unint64_t *)&qword_1EFF4B988);
  }
  return result;
}

unint64_t sub_1D58C7134()
{
  unint64_t result;

  result = qword_1EFF4B990;
  if (!qword_1EFF4B990)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseRestoreListData, &type metadata for PurchaseRestoreListData);
    atomic_store(result, (unint64_t *)&qword_1EFF4B990);
  }
  return result;
}

uint64_t sub_1D58C7178@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PurchaseRestoreListData.init(from:)(a1, a2);
}

uint64_t sub_1D58C718C(_QWORD *a1)
{
  return PurchaseRestoreListData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PurchaseRestoreListData()
{
  return &type metadata for PurchaseRestoreListData;
}

uint64_t storeEnumTagSinglePayload for PurchaseRestoreListData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58C71F0 + 4 * byte_1D5AC4280[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58C7210 + 4 * byte_1D5AC4285[v4]))();
}

_BYTE *sub_1D58C71F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58C7210(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58C7218(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58C7220(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58C7228(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58C7230(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseRestoreListData.CodingKeys()
{
  return &type metadata for PurchaseRestoreListData.CodingKeys;
}

unint64_t sub_1D58C7250()
{
  unint64_t result;

  result = qword_1EFF4B998;
  if (!qword_1EFF4B998)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC43D4, &type metadata for PurchaseRestoreListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B998);
  }
  return result;
}

unint64_t sub_1D58C7298()
{
  unint64_t result;

  result = qword_1EFF4B9A0;
  if (!qword_1EFF4B9A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4344, &type metadata for PurchaseRestoreListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B9A0);
  }
  return result;
}

unint64_t sub_1D58C72E0()
{
  unint64_t result;

  result = qword_1EFF4B9A8;
  if (!qword_1EFF4B9A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC436C, &type metadata for PurchaseRestoreListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B9A8);
  }
  return result;
}

uint64_t sub_1D58C7324(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEEC10)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1D58C73A8()
{
  unint64_t result;

  result = qword_1ED9D1340;
  if (!qword_1ED9D1340)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9D1340);
  }
  return result;
}

uint64_t sub_1D58C73E4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D58C75E0()
{
  return swift_release();
}

void sub_1D58C75E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CCA20)
  {
    v0 = sub_1D5AAEDB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CCA20);
  }
}

uint64_t CustomItemData.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomItemData.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CustomItemData.identifier.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemData.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomItemData.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CustomItemData.name.modify())()
{
  return nullsub_1;
}

NewsAnalytics::CustomItemData __swiftcall CustomItemData.init(identifier:name:)(Swift::String identifier, Swift::String name)
{
  Swift::String *v2;
  NewsAnalytics::CustomItemData result;

  *v2 = identifier;
  v2[1] = name;
  result.name = name;
  result.identifier = identifier;
  return result;
}

uint64_t sub_1D58C7728()
{
  _BYTE *v0;

  if (*v0)
    return 1701667182;
  else
    return 0x696669746E656469;
}

uint64_t sub_1D58C7760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58C7D34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58C7784()
{
  sub_1D58C7908();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58C77AC()
{
  sub_1D58C7908();
  return sub_1D5AAEEE0();
}

uint64_t CustomItemData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1D58C7AF4(0, &qword_1ED9CEFD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C7908();
  sub_1D5AAEEC8();
  v13 = 0;
  v9 = v11[3];
  sub_1D5AAED3C();
  if (!v9)
  {
    v12 = 1;
    sub_1D5AAED3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58C7908()
{
  unint64_t result;

  result = qword_1ED9CEB80;
  if (!qword_1ED9CEB80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC45C4, &type metadata for CustomItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB80);
  }
  return result;
}

uint64_t CustomItemData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;

  sub_1D58C7AF4(0, &qword_1EFF4BA10, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C7908();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v20 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1D5AAECA0();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v17;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D58C7AF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58C7908();
    v7 = a3(a1, &type metadata for CustomItemData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58C7B58@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return CustomItemData.init(from:)(a1, a2);
}

uint64_t sub_1D58C7B6C(_QWORD *a1)
{
  return CustomItemData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for CustomItemData()
{
  return &type metadata for CustomItemData;
}

uint64_t storeEnumTagSinglePayload for CustomItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58C7BDC + 4 * byte_1D5AC4451[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58C7C10 + 4 * byte_1D5AC444C[v4]))();
}

uint64_t sub_1D58C7C10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C7C18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58C7C20);
  return result;
}

uint64_t sub_1D58C7C2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58C7C34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D58C7C38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C7C40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CustomItemData.CodingKeys()
{
  return &type metadata for CustomItemData.CodingKeys;
}

unint64_t sub_1D58C7C60()
{
  unint64_t result;

  result = qword_1EFF4BA18;
  if (!qword_1EFF4BA18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC459C, &type metadata for CustomItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BA18);
  }
  return result;
}

unint64_t sub_1D58C7CA8()
{
  unint64_t result;

  result = qword_1ED9CEB78;
  if (!qword_1ED9CEB78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC450C, &type metadata for CustomItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB78);
  }
  return result;
}

unint64_t sub_1D58C7CF0()
{
  unint64_t result;

  result = qword_1ED9CEB70;
  if (!qword_1ED9CEB70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4534, &type metadata for CustomItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB70);
  }
  return result;
}

uint64_t sub_1D58C7D34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::InteractionType_optional __swiftcall InteractionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::InteractionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t InteractionType.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 1752461154;
  if (*v0)
    return v1;
  else
    return 0x6E4572657474656CLL;
}

uint64_t sub_1D58C7ED8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3BFB8(*a1, *a2);
}

unint64_t sub_1D58C7EE8()
{
  unint64_t result;

  result = qword_1EFF4BA20;
  if (!qword_1EFF4BA20)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InteractionType, &type metadata for InteractionType);
    atomic_store(result, (unint64_t *)&qword_1EFF4BA20);
  }
  return result;
}

uint64_t sub_1D58C7F2C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D58C7FD0()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D58C8050()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::InteractionType_optional sub_1D58C80F0(Swift::String *a1)
{
  return InteractionType.init(rawValue:)(*a1);
}

void sub_1D58C80FC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB00000000797274;
  v4 = 0x80000001D5AEB250;
  v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    v5 = 1752461154;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E4572657474656CLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D58C8160()
{
  sub_1D58C82D4();
  return sub_1D5AAE928();
}

uint64_t sub_1D58C81BC()
{
  sub_1D58C82D4();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for InteractionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58C8254 + 4 * byte_1D5AC4619[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58C8288 + 4 * byte_1D5AC4614[v4]))();
}

uint64_t sub_1D58C8288(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C8290(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58C8298);
  return result;
}

uint64_t sub_1D58C82A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58C82ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58C82B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C82B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InteractionType()
{
  return &type metadata for InteractionType;
}

unint64_t sub_1D58C82D4()
{
  unint64_t result;

  result = qword_1EFF4BA28;
  if (!qword_1EFF4BA28)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InteractionType, &type metadata for InteractionType);
    atomic_store(result, (unint64_t *)&qword_1EFF4BA28);
  }
  return result;
}

void AdStateData.state.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdStateData.state.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdStateData.state.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AdStateData __swiftcall AdStateData.init(state:)(NewsAnalytics::AdStateData state)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)state.state;
  return state;
}

uint64_t sub_1D58C834C()
{
  return 0x6574617473;
}

uint64_t sub_1D58C8360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58C83EC()
{
  sub_1D58C8540();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58C8414()
{
  sub_1D58C8540();
  return sub_1D5AAEEE0();
}

uint64_t AdStateData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D58C8700(0, &qword_1ED9CD6D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C8540();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D58C8584();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58C8540()
{
  unint64_t result;

  result = qword_1ED9CD100;
  if (!qword_1ED9CD100)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC48B0, &type metadata for AdStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD100);
  }
  return result;
}

unint64_t sub_1D58C8584()
{
  unint64_t result;

  result = qword_1ED9CD650;
  if (!qword_1ED9CD650)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdState, &type metadata for AdState);
    atomic_store(result, (unint64_t *)&qword_1ED9CD650);
  }
  return result;
}

uint64_t AdStateData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D58C8700(0, &qword_1EFF4BA30, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C8540();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D58C875C();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58C8700(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58C8540();
    v7 = a3(a1, &type metadata for AdStateData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58C875C()
{
  unint64_t result;

  result = qword_1EFF4BA38;
  if (!qword_1EFF4BA38)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdState, &type metadata for AdState);
    atomic_store(result, (unint64_t *)&qword_1EFF4BA38);
  }
  return result;
}

unint64_t sub_1D58C87A4()
{
  unint64_t result;

  result = qword_1ED9CCCF8;
  if (!qword_1ED9CCCF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdStateData, &type metadata for AdStateData);
    atomic_store(result, (unint64_t *)&qword_1ED9CCCF8);
  }
  return result;
}

unint64_t sub_1D58C87EC()
{
  unint64_t result;

  result = qword_1ED9CD118;
  if (!qword_1ED9CD118)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdStateData, &type metadata for AdStateData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD118);
  }
  return result;
}

uint64_t sub_1D58C8830@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdStateData.init(from:)(a1, a2);
}

uint64_t sub_1D58C8844(_QWORD *a1)
{
  return AdStateData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AdStateData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D58C88A4 + 4 * byte_1D5AC4739[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D58C88D8 + 4 * byte_1D5AC4734[v4]))();
}

uint64_t sub_1D58C88D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C88E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58C88E8);
  return result;
}

uint64_t sub_1D58C88F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58C88FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D58C8900(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58C8908(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdStateData()
{
  return &type metadata for AdStateData;
}

uint64_t storeEnumTagSinglePayload for AdStateData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58C8964 + 4 * byte_1D5AC473E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58C8984 + 4 * byte_1D5AC4743[v4]))();
}

_BYTE *sub_1D58C8964(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58C8984(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58C898C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58C8994(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58C899C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58C89A4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdStateData.CodingKeys()
{
  return &type metadata for AdStateData.CodingKeys;
}

unint64_t sub_1D58C89C4()
{
  unint64_t result;

  result = qword_1EFF4BA40;
  if (!qword_1EFF4BA40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4888, &type metadata for AdStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BA40);
  }
  return result;
}

unint64_t sub_1D58C8A0C()
{
  unint64_t result;

  result = qword_1ED9CD110;
  if (!qword_1ED9CD110)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC47F8, &type metadata for AdStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD110);
  }
  return result;
}

unint64_t sub_1D58C8A54()
{
  unint64_t result;

  result = qword_1ED9CD108;
  if (!qword_1ED9CD108)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4820, &type metadata for AdStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD108);
  }
  return result;
}

uint64_t static TelemetryEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCD78, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCB10, a1);
}

uint64_t static TelemetryEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD190, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCB28, a1);
}

uint64_t TelemetryEvent.networkEventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57C52C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TelemetryEvent.networkEventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57C52C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TelemetryEvent.networkEventData.modify())()
{
  return nullsub_1;
}

uint64_t TelemetryEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57C52C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t TelemetryEvent.Model.networkEventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D58C8BB0(v1, a1);
}

uint64_t sub_1D58C8BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetworkEventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TelemetryEvent.Model.init(networkEventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D589BEE8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEventData);
}

unint64_t sub_1D58C8C14()
{
  return 0xD000000000000010;
}

uint64_t sub_1D58C8C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58C9A44(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D58C8C58()
{
  sub_1D58C8DB8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58C8C80()
{
  sub_1D58C8DB8();
  return sub_1D5AAEEE0();
}

uint64_t TelemetryEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D58C8FE0(0, &qword_1EFF4BA48, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C8DB8();
  sub_1D5AAEEC8();
  type metadata accessor for NetworkEventData();
  sub_1D57C5358(&qword_1ED9C8D60, (uint64_t)&protocol conformance descriptor for NetworkEventData);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D58C8DB8()
{
  unint64_t result;

  result = qword_1EFF4BA50;
  if (!qword_1EFF4BA50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4A80, &type metadata for TelemetryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BA50);
  }
  return result;
}

uint64_t TelemetryEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v17 = a2;
  v4 = type metadata accessor for NetworkEventData();
  MEMORY[0x1E0C80A78](v4);
  v19 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58C8FE0(0, qword_1EFF4BA58, MEMORY[0x1E0DED048]);
  v18 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for TelemetryEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C8DB8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1D57C5358(&qword_1ED9C8D68, (uint64_t)&protocol conformance descriptor for NetworkEventData);
    v14 = (uint64_t)v19;
    v15 = v18;
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    sub_1D589BEE8(v14, v13, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEventData);
    sub_1D589BEE8(v13, v17, type metadata accessor for TelemetryEvent.Model);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58C8FE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58C8DB8();
    v7 = a3(a1, &type metadata for TelemetryEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for TelemetryEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4BAE0);
}

uint64_t sub_1D58C9050@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TelemetryEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58C9064(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D58C8FE0(0, &qword_1EFF4BA48, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58C8DB8();
  sub_1D5AAEEC8();
  type metadata accessor for NetworkEventData();
  sub_1D57C5358(&qword_1ED9C8D60, (uint64_t)&protocol conformance descriptor for NetworkEventData);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57C52C4();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for TelemetryEvent(uint64_t a1)
{
  uint64_t v2;

  sub_1D57C52C4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57C52C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57C52C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57C52C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57C52C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TelemetryEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C9300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1D57C52C4);
}

uint64_t storeEnumTagSinglePayload for TelemetryEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C9318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1D57C52C4);
}

_QWORD *initializeBufferWithCopyOfBuffer for TelemetryEvent.Model(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for NetworkEventData();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_1D5AAD710();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_QWORD *)((char *)a1 + v6[5]) = *(_QWORD *)((char *)a2 + v6[5]);
    *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
    *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
    *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
    *(_QWORD *)((char *)a1 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
    *(_QWORD *)((char *)a1 + v6[12]) = *(_QWORD *)((char *)a2 + v6[12]);
    *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
    *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v8 = v6[16];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TelemetryEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for NetworkEventData();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for NetworkEventData();
  *(_QWORD *)(a1 + v5[5]) = *(_QWORD *)(a2 + v5[5]);
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  *(_BYTE *)(a1 + v5[10]) = *(_BYTE *)(a2 + v5[10]);
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_BYTE *)(a1 + v5[13]) = *(_BYTE *)(a2 + v5[13]);
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  *(_BYTE *)(a1 + v5[15]) = *(_BYTE *)(a2 + v5[15]);
  v6 = v5[16];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  *(_BYTE *)(a1 + v5[17]) = *(_BYTE *)(a2 + v5[17]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v4 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for NetworkEventData();
  *(_QWORD *)(a1 + v5[5]) = *(_QWORD *)(a2 + v5[5]);
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  *(_BYTE *)(a1 + v5[10]) = *(_BYTE *)(a2 + v5[10]);
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_BYTE *)(a1 + v5[13]) = *(_BYTE *)(a2 + v5[13]);
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  *(_BYTE *)(a1 + v5[15]) = *(_BYTE *)(a2 + v5[15]);
  v6 = v5[16];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v5[17]) = *(_BYTE *)(a2 + v5[17]);
  return a1;
}

uint64_t initializeWithTake for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;

  v4 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for NetworkEventData();
  *(_QWORD *)(a1 + v5[5]) = *(_QWORD *)(a2 + v5[5]);
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  *(_BYTE *)(a1 + v5[10]) = *(_BYTE *)(a2 + v5[10]);
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_BYTE *)(a1 + v5[13]) = *(_BYTE *)(a2 + v5[13]);
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  *(_BYTE *)(a1 + v5[15]) = *(_BYTE *)(a2 + v5[15]);
  *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
  *(_BYTE *)(a1 + v5[17]) = *(_BYTE *)(a2 + v5[17]);
  return a1;
}

uint64_t assignWithTake for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for NetworkEventData();
  *(_QWORD *)(a1 + v5[5]) = *(_QWORD *)(a2 + v5[5]);
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  *(_BYTE *)(a1 + v5[10]) = *(_BYTE *)(a2 + v5[10]);
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_BYTE *)(a1 + v5[13]) = *(_BYTE *)(a2 + v5[13]);
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  *(_BYTE *)(a1 + v5[15]) = *(_BYTE *)(a2 + v5[15]);
  v6 = v5[16];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v5[17]) = *(_BYTE *)(a2 + v5[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TelemetryEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C98A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEventData);
}

uint64_t storeEnumTagSinglePayload for TelemetryEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58C98B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEventData);
}

uint64_t sub_1D58C98C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D57CA69C(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for NetworkEventData);
}

uint64_t storeEnumTagSinglePayload for TelemetryEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58C9910 + 4 * byte_1D5AC4900[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58C9930 + 4 * byte_1D5AC4905[v4]))();
}

_BYTE *sub_1D58C9910(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58C9930(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58C9938(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58C9940(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58C9948(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58C9950(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TelemetryEvent.Model.CodingKeys()
{
  return &type metadata for TelemetryEvent.Model.CodingKeys;
}

unint64_t sub_1D58C9970()
{
  unint64_t result;

  result = qword_1EFF4BB18;
  if (!qword_1EFF4BB18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4A58, &type metadata for TelemetryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BB18);
  }
  return result;
}

unint64_t sub_1D58C99B8()
{
  unint64_t result;

  result = qword_1EFF4BB20;
  if (!qword_1EFF4BB20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC49C8, &type metadata for TelemetryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BB20);
  }
  return result;
}

unint64_t sub_1D58C9A00()
{
  unint64_t result;

  result = qword_1EFF4BB28;
  if (!qword_1EFF4BB28)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC49F0, &type metadata for TelemetryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BB28);
  }
  return result;
}

uint64_t sub_1D58C9A44(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEEC30)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D58C9AC8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4BB30, MEMORY[0x1E0CF8078]);
}

uint64_t static UnblockTagEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47138, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4BB30, a1);
}

uint64_t sub_1D58C9B08(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4BB48, MEMORY[0x1E0CF8380]);
}

uint64_t static UnblockTagEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47140, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4BB48, a1);
}

uint64_t UnblockTagEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t UnblockTagEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*UnblockTagEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t UnblockTagEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for UnblockTagEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C82D0);
}

uint64_t UnblockTagEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnblockTagEvent.viewData.modify())()
{
  type metadata accessor for UnblockTagEvent(0);
  return nullsub_1;
}

uint64_t UnblockTagEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnblockTagEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnblockTagEvent.tagData.modify())()
{
  type metadata accessor for UnblockTagEvent(0);
  return nullsub_1;
}

uint64_t UnblockTagEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnblockTagEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnblockTagEvent.feedData.modify())()
{
  type metadata accessor for UnblockTagEvent(0);
  return nullsub_1;
}

uint64_t UnblockTagEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnblockTagEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnblockTagEvent.articleData.modify())()
{
  type metadata accessor for UnblockTagEvent(0);
  return nullsub_1;
}

uint64_t UnblockTagEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnblockTagEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnblockTagEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for UnblockTagEvent(0);
  return nullsub_1;
}

uint64_t UnblockTagEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnblockTagEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnblockTagEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnblockTagEvent.actionData.modify())()
{
  type metadata accessor for UnblockTagEvent(0);
  return nullsub_1;
}

uint64_t UnblockTagEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for UnblockTagEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
}

uint64_t UnblockTagEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t UnblockTagEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for UnblockTagEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UnblockTagEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8220);
}

uint64_t UnblockTagEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for UnblockTagEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t UnblockTagEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for UnblockTagEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t UnblockTagEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for UnblockTagEvent.Model(0);
  sub_1D580C534(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1D580C534((uint64_t)v5, a1);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t UnblockTagEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for UnblockTagEvent.Model(0) + 36));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t UnblockTagEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for UnblockTagEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t UnblockTagEvent.Model.init(eventData:viewData:tagData:feedData:articleData:userBundleSubscriptionContextData:actionData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  _BYTE v35[144];

  v12 = *a2;
  v13 = a2[1];
  v14 = *((_WORD *)a2 + 8);
  v15 = *a3;
  v16 = a3[1];
  v26 = *a4;
  v17 = *((_QWORD *)a4 + 2);
  sub_1D580C534(a5, (uint64_t)v35);
  v18 = *a6;
  v31 = *((_QWORD *)a6 + 2);
  v32 = *((_QWORD *)a6 + 1);
  v29 = a6[25];
  v30 = a6[24];
  v27 = *((_QWORD *)a6 + 5);
  v28 = *((_QWORD *)a6 + 4);
  LOBYTE(a6) = a6[48];
  v33 = v18;
  v34 = *a7;
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a8, a1, v19);
  v20 = (int *)type metadata accessor for UnblockTagEvent.Model(0);
  v21 = a8 + v20[5];
  *(_QWORD *)v21 = v12;
  *(_QWORD *)(v21 + 8) = v13;
  *(_WORD *)(v21 + 16) = v14;
  v22 = (_QWORD *)(a8 + v20[6]);
  *v22 = v15;
  v22[1] = v16;
  v23 = a8 + v20[7];
  *(_OWORD *)v23 = v26;
  *(_QWORD *)(v23 + 16) = v17;
  result = sub_1D580C534((uint64_t)v35, a8 + v20[8]);
  v25 = a8 + v20[9];
  *(_BYTE *)v25 = v33;
  *(_QWORD *)(v25 + 8) = v32;
  *(_QWORD *)(v25 + 16) = v31;
  *(_BYTE *)(v25 + 24) = v30;
  *(_BYTE *)(v25 + 25) = v29;
  *(_QWORD *)(v25 + 32) = v28;
  *(_QWORD *)(v25 + 40) = v27;
  *(_BYTE *)(v25 + 48) = (_BYTE)a6;
  *(_BYTE *)(a8 + v20[10]) = v34;
  return result;
}

uint64_t sub_1D58CA6B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58CA6E8 + 4 * byte_1D5AC4AD0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58CA6E8()
{
  return 0x6174614477656976;
}

uint64_t sub_1D58CA728()
{
  return 0x44656C6369747261;
}

unint64_t sub_1D58CA748()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58CA764()
{
  return 0x61446E6F69746361;
}

uint64_t sub_1D58CA780()
{
  unsigned __int8 *v0;

  return sub_1D58CA6B0(*v0);
}

uint64_t sub_1D58CA788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58CD6BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58CA7AC()
{
  sub_1D58CAB24();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58CA7D4()
{
  sub_1D58CAB24();
  return sub_1D5AAEEE0();
}

uint64_t UnblockTagEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v24;
  char v25;
  char v26[8];
  __int128 v27;
  char v28;
  char v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  char v35;
  __int128 v36;
  uint64_t v37;

  v3 = v1;
  sub_1D58CB124(0, &qword_1EFF4BB60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58CAB24();
  sub_1D5AAEEC8();
  LOBYTE(v32) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for UnblockTagEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    v32 = v12;
    v33 = v13;
    v34 = (__int16)v11;
    v26[0] = 1;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v14 = (uint64_t *)(v3 + v10[6]);
    v16 = *v14;
    v15 = v14[1];
    v32 = v16;
    v33 = v15;
    v26[0] = 2;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v17 = (__int128 *)(v3 + v10[7]);
    v18 = *((_QWORD *)v17 + 2);
    v36 = *v17;
    v37 = v18;
    v35 = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D580C534(v3 + v10[8], (uint64_t)&v32);
    sub_1D580C534((uint64_t)&v32, (uint64_t)v26);
    v25 = 4;
    sub_1D57CB940();
    sub_1D5AAED18();
    v19 = v3 + v10[9];
    v20 = *(_BYTE *)(v19 + 24);
    v21 = *(_BYTE *)(v19 + 25);
    v22 = *(_BYTE *)(v19 + 48);
    v26[0] = *(_BYTE *)v19;
    v27 = *(_OWORD *)(v19 + 8);
    v28 = v20;
    v29 = v21;
    v30 = *(_OWORD *)(v19 + 32);
    v31 = v22;
    v25 = 5;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v26[0] = *(_BYTE *)(v3 + v10[10]);
    v25 = 6;
    sub_1D57CC038();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58CAB24()
{
  unint64_t result;

  result = qword_1EFF4BB68;
  if (!qword_1EFF4BB68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4D4C, &type metadata for UnblockTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BB68);
  }
  return result;
}

uint64_t UnblockTagEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _QWORD *v35;
  char v36;
  char v37;
  __int128 v38;
  char v39;
  char v40;
  __int128 v41;
  char v42;
  _BYTE v43[136];
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v30 = a2;
  v3 = sub_1D5AADF98();
  v31 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58CB124(0, &qword_1EFF4BB70, MEMORY[0x1E0DED048]);
  v32 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - v7;
  v9 = (int *)type metadata accessor for UnblockTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D58CAB24();
  v34 = v8;
  v13 = v46;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  v46 = v6;
  v14 = v31;
  LOBYTE(v44) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v33, v3);
  v43[0] = 1;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v15 = *((_QWORD *)&v44 + 1);
  v16 = v45;
  v17 = &v11[v9[5]];
  *(_QWORD *)v17 = v44;
  *((_QWORD *)v17 + 1) = v15;
  *((_WORD *)v17 + 8) = v16;
  v43[0] = 2;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v18 = *((_QWORD *)&v44 + 1);
  v19 = &v11[v9[6]];
  *(_QWORD *)v19 = v44;
  *((_QWORD *)v19 + 1) = v18;
  v43[0] = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v20 = v45;
  v21 = &v11[v9[7]];
  *(_OWORD *)v21 = v44;
  *((_QWORD *)v21 + 2) = v20;
  v43[135] = 4;
  sub_1D57CB8FC();
  v22 = v32;
  v33 = 0;
  sub_1D5AAEC7C();
  v23 = v46;
  sub_1D580C534((uint64_t)&v44, (uint64_t)v43);
  sub_1D580C534((uint64_t)v43, (uint64_t)&v11[v9[8]]);
  v36 = 5;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v24 = v39;
  v25 = v40;
  v26 = v42;
  v27 = &v11[v9[9]];
  *v27 = v37;
  *(_OWORD *)(v27 + 8) = v38;
  v27[24] = v24;
  v27[25] = v25;
  *((_OWORD *)v27 + 2) = v41;
  v27[48] = v26;
  v36 = 6;
  sub_1D57CBFF4();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v34, v22);
  v11[v9[10]] = v37;
  sub_1D58CB180((uint64_t)v11, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_1D58CB1C4((uint64_t)v11);
}

void sub_1D58CB124(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58CAB24();
    v7 = a3(a1, &type metadata for UnblockTagEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58CB180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnblockTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58CB1C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnblockTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58CB200@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UnblockTagEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58CB214(_QWORD *a1)
{
  return UnblockTagEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58CB228@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47138, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4BB30, a1);
}

uint64_t sub_1D58CB24C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47140, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4BB48, a1);
}

uint64_t sub_1D58CB270@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for UnblockTagEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for UnblockTagEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t initializeWithCopy for UnblockTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for UnblockTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for UnblockTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for UnblockTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnblockTagEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58CC134(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for UnblockTagEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58CC328(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58CC518()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for UnblockTagEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(_QWORD *)((char *)a2 + v16 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19 == 1)
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
    }
    else
    {
      *v17 = *v18;
      *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
      *((_QWORD *)v17 + 2) = v19;
      swift_bridgeObjectRetain();
    }
    v21 = a3[8];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *((_QWORD *)v23 + 3);
    if (v24)
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v22[8] = v23[8];
      *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
      *((_QWORD *)v22 + 3) = v24;
      v22[32] = v23[32];
      v25 = *((_QWORD *)v23 + 6);
      *((_QWORD *)v22 + 5) = *((_QWORD *)v23 + 5);
      *((_QWORD *)v22 + 6) = v25;
      *((_WORD *)v22 + 28) = *((_WORD *)v23 + 28);
      v27 = *((_QWORD *)v23 + 8);
      v26 = *((_QWORD *)v23 + 9);
      v22[80] = v23[80];
      *((_QWORD *)v22 + 8) = v27;
      *((_QWORD *)v22 + 9) = v26;
      *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
      *((_QWORD *)v22 + 13) = *((_QWORD *)v23 + 13);
      v22[112] = v23[112];
      *((_QWORD *)v22 + 15) = *((_QWORD *)v23 + 15);
      *((_DWORD *)v22 + 32) = *((_DWORD *)v23 + 32);
      v22[132] = v23[132];
      *(_WORD *)(v22 + 133) = *(_WORD *)(v23 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v28 = *((_OWORD *)v23 + 7);
      *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
      *((_OWORD *)v22 + 7) = v28;
      *(_QWORD *)(v22 + 127) = *(_QWORD *)(v23 + 127);
      v29 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v29;
      v30 = *((_OWORD *)v23 + 5);
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      *((_OWORD *)v22 + 5) = v30;
      v31 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v31;
    }
    v32 = a3[9];
    v33 = a3[10];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    *v34 = *v35;
    v36 = *((_QWORD *)v35 + 2);
    *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
    *((_QWORD *)v34 + 2) = v36;
    *((_WORD *)v34 + 12) = *((_WORD *)v35 + 12);
    v37 = *((_QWORD *)v35 + 5);
    *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
    *((_QWORD *)v34 + 5) = v37;
    v34[48] = v35[48];
    *((_BYTE *)a1 + v33) = *((_BYTE *)a2 + v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for UnblockTagEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 32) + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UnblockTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a2 + v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18 == 1)
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  }
  else
  {
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
    *(_QWORD *)(v16 + 16) = v18;
    swift_bridgeObjectRetain();
  }
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(v21 + 24);
  if (v22)
  {
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
    *(_QWORD *)(v20 + 24) = v22;
    *(_BYTE *)(v20 + 32) = *(_BYTE *)(v21 + 32);
    v23 = *(_QWORD *)(v21 + 48);
    *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
    *(_QWORD *)(v20 + 48) = v23;
    *(_WORD *)(v20 + 56) = *(_WORD *)(v21 + 56);
    v25 = *(_QWORD *)(v21 + 64);
    v24 = *(_QWORD *)(v21 + 72);
    *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
    *(_QWORD *)(v20 + 64) = v25;
    *(_QWORD *)(v20 + 72) = v24;
    *(_OWORD *)(v20 + 88) = *(_OWORD *)(v21 + 88);
    *(_QWORD *)(v20 + 104) = *(_QWORD *)(v21 + 104);
    *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
    *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
    *(_DWORD *)(v20 + 128) = *(_DWORD *)(v21 + 128);
    *(_BYTE *)(v20 + 132) = *(_BYTE *)(v21 + 132);
    *(_WORD *)(v20 + 133) = *(_WORD *)(v21 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v26 = *(_OWORD *)(v21 + 112);
    *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
    *(_OWORD *)(v20 + 112) = v26;
    *(_QWORD *)(v20 + 127) = *(_QWORD *)(v21 + 127);
    v27 = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
    *(_OWORD *)(v20 + 48) = v27;
    v28 = *(_OWORD *)(v21 + 80);
    *(_OWORD *)(v20 + 64) = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 80) = v28;
    v29 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 16) = v29;
  }
  v30 = a3[9];
  v31 = a3[10];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_BYTE *)v32 = *(_BYTE *)v33;
  v34 = *(_QWORD *)(v33 + 16);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  *(_WORD *)(v32 + 24) = *(_WORD *)(v33 + 24);
  v35 = *(_QWORD *)(v33 + 40);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 40) = v35;
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v33 + 48);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UnblockTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = (__int128 *)(a2 + v13);
  v16 = *(_QWORD *)(a1 + v13 + 16);
  v17 = *(_QWORD *)(a2 + v13 + 16);
  if (v16 == 1)
  {
    if (v17 == 1)
    {
      v18 = *v15;
      *(_QWORD *)(v14 + 16) = *((_QWORD *)v15 + 2);
      *(_OWORD *)v14 = v18;
    }
    else
    {
      *(_BYTE *)v14 = *(_BYTE *)v15;
      *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
      *(_QWORD *)(v14 + 16) = *((_QWORD *)v15 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v17 == 1)
  {
    sub_1D57D9100(v14);
    v19 = *((_QWORD *)v15 + 2);
    *(_OWORD *)v14 = *v15;
    *(_QWORD *)(v14 + 16) = v19;
  }
  else
  {
    *(_BYTE *)v14 = *(_BYTE *)v15;
    *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
    *(_QWORD *)(v14 + 16) = *((_QWORD *)v15 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a1 + v20 + 24);
  v24 = *(_QWORD *)(a2 + v20 + 24);
  if (v23)
  {
    if (v24)
    {
      *(_BYTE *)v21 = *(_BYTE *)v22;
      *(_DWORD *)(v21 + 4) = *(_DWORD *)(v22 + 4);
      *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
      *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
      *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
      *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
      v25 = *(_QWORD *)(v22 + 48);
      *(_BYTE *)(v21 + 56) = *(_BYTE *)(v22 + 56);
      *(_QWORD *)(v21 + 48) = v25;
      *(_BYTE *)(v21 + 57) = *(_BYTE *)(v22 + 57);
      *(_QWORD *)(v21 + 64) = *(_QWORD *)(v22 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v22 + 72);
      *(_BYTE *)(v21 + 80) = *(_BYTE *)(v22 + 80);
      *(_QWORD *)(v21 + 72) = v26;
      *(_QWORD *)(v21 + 88) = *(_QWORD *)(v22 + 88);
      *(_QWORD *)(v21 + 96) = *(_QWORD *)(v22 + 96);
      *(_QWORD *)(v21 + 104) = *(_QWORD *)(v22 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v21 + 112) = *(_BYTE *)(v22 + 112);
      *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v21 + 128) = *(_BYTE *)(v22 + 128);
      *(_BYTE *)(v21 + 129) = *(_BYTE *)(v22 + 129);
      *(_BYTE *)(v21 + 130) = *(_BYTE *)(v22 + 130);
      *(_BYTE *)(v21 + 131) = *(_BYTE *)(v22 + 131);
      *(_BYTE *)(v21 + 132) = *(_BYTE *)(v22 + 132);
      *(_BYTE *)(v21 + 133) = *(_BYTE *)(v22 + 133);
      *(_BYTE *)(v21 + 134) = *(_BYTE *)(v22 + 134);
    }
    else
    {
      sub_1D5810518(v21);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      v29 = *(_OWORD *)(v22 + 64);
      v31 = *(_OWORD *)(v22 + 16);
      v30 = *(_OWORD *)(v22 + 32);
      *(_OWORD *)(v21 + 48) = *(_OWORD *)(v22 + 48);
      *(_OWORD *)(v21 + 64) = v29;
      *(_OWORD *)(v21 + 16) = v31;
      *(_OWORD *)(v21 + 32) = v30;
      v33 = *(_OWORD *)(v22 + 96);
      v32 = *(_OWORD *)(v22 + 112);
      v34 = *(_OWORD *)(v22 + 80);
      *(_QWORD *)(v21 + 127) = *(_QWORD *)(v22 + 127);
      *(_OWORD *)(v21 + 96) = v33;
      *(_OWORD *)(v21 + 112) = v32;
      *(_OWORD *)(v21 + 80) = v34;
    }
  }
  else if (v24)
  {
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
    *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
    *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
    *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
    v27 = *(_QWORD *)(v22 + 48);
    *(_BYTE *)(v21 + 56) = *(_BYTE *)(v22 + 56);
    *(_QWORD *)(v21 + 48) = v27;
    *(_BYTE *)(v21 + 57) = *(_BYTE *)(v22 + 57);
    *(_QWORD *)(v21 + 64) = *(_QWORD *)(v22 + 64);
    v28 = *(_QWORD *)(v22 + 72);
    *(_BYTE *)(v21 + 80) = *(_BYTE *)(v22 + 80);
    *(_QWORD *)(v21 + 72) = v28;
    *(_QWORD *)(v21 + 88) = *(_QWORD *)(v22 + 88);
    *(_QWORD *)(v21 + 96) = *(_QWORD *)(v22 + 96);
    *(_QWORD *)(v21 + 104) = *(_QWORD *)(v22 + 104);
    *(_BYTE *)(v21 + 112) = *(_BYTE *)(v22 + 112);
    *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
    *(_BYTE *)(v21 + 128) = *(_BYTE *)(v22 + 128);
    *(_BYTE *)(v21 + 129) = *(_BYTE *)(v22 + 129);
    *(_BYTE *)(v21 + 130) = *(_BYTE *)(v22 + 130);
    *(_BYTE *)(v21 + 131) = *(_BYTE *)(v22 + 131);
    *(_BYTE *)(v21 + 132) = *(_BYTE *)(v22 + 132);
    *(_BYTE *)(v21 + 133) = *(_BYTE *)(v22 + 133);
    *(_BYTE *)(v21 + 134) = *(_BYTE *)(v22 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
    v35 = *(_OWORD *)(v22 + 16);
    v36 = *(_OWORD *)(v22 + 32);
    v37 = *(_OWORD *)(v22 + 64);
    *(_OWORD *)(v21 + 48) = *(_OWORD *)(v22 + 48);
    *(_OWORD *)(v21 + 64) = v37;
    *(_OWORD *)(v21 + 16) = v35;
    *(_OWORD *)(v21 + 32) = v36;
    v38 = *(_OWORD *)(v22 + 80);
    v39 = *(_OWORD *)(v22 + 96);
    v40 = *(_OWORD *)(v22 + 112);
    *(_QWORD *)(v21 + 127) = *(_QWORD *)(v22 + 127);
    *(_OWORD *)(v21 + 96) = v39;
    *(_OWORD *)(v21 + 112) = v40;
    *(_OWORD *)(v21 + 80) = v38;
  }
  v41 = a3[9];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)v42 = *(_BYTE *)(a2 + v41);
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(a2 + v41 + 8);
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(a2 + v41 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v42 + 24) = *(_BYTE *)(v43 + 24);
  *(_BYTE *)(v42 + 25) = *(_BYTE *)(v43 + 25);
  *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
  *(_QWORD *)(v42 + 40) = *(_QWORD *)(v43 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v42 + 48) = *(_BYTE *)(v43 + 48);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for UnblockTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = *(_OWORD *)(a2 + v8);
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  *(_OWORD *)(a1 + v8) = v11;
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v16 = a1 + v13;
  v17 = a2 + v13;
  v18 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  v19 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v19;
  *(_QWORD *)(v16 + 127) = *(_QWORD *)(v17 + 127);
  v20 = *(_OWORD *)(v17 + 112);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)(v17 + 96);
  *(_OWORD *)(v16 + 112) = v20;
  v21 = *(_OWORD *)(v17 + 80);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
  *(_OWORD *)(v16 + 80) = v21;
  v22 = a3[9];
  v23 = a3[10];
  v24 = a1 + v22;
  v25 = a2 + v22;
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_BYTE *)(v24 + 48) = *(_BYTE *)(v25 + 48);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  return a1;
}

uint64_t assignWithTake for UnblockTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 16) == 1)
    goto LABEL_4;
  v19 = *(_QWORD *)(v18 + 16);
  if (v19 == 1)
  {
    sub_1D57D9100(v17);
LABEL_4:
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v17 = *(_BYTE *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  if (!*(_QWORD *)(a1 + v20 + 24))
  {
LABEL_10:
    v25 = *(_OWORD *)(v22 + 112);
    *(_OWORD *)(v21 + 96) = *(_OWORD *)(v22 + 96);
    *(_OWORD *)(v21 + 112) = v25;
    *(_QWORD *)(v21 + 127) = *(_QWORD *)(v22 + 127);
    v26 = *(_OWORD *)(v22 + 48);
    *(_OWORD *)(v21 + 32) = *(_OWORD *)(v22 + 32);
    *(_OWORD *)(v21 + 48) = v26;
    v27 = *(_OWORD *)(v22 + 80);
    *(_OWORD *)(v21 + 64) = *(_OWORD *)(v22 + 64);
    *(_OWORD *)(v21 + 80) = v27;
    v28 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v28;
    goto LABEL_11;
  }
  v23 = *(_QWORD *)(v22 + 24);
  if (!v23)
  {
    sub_1D5810518(v21);
    goto LABEL_10;
  }
  *(_BYTE *)v21 = *(_BYTE *)v22;
  *(_DWORD *)(v21 + 4) = *(_DWORD *)(v22 + 4);
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 24) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
  v24 = *(_QWORD *)(v22 + 48);
  *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v21 + 48) = v24;
  *(_BYTE *)(v21 + 56) = *(_BYTE *)(v22 + 56);
  *(_BYTE *)(v21 + 57) = *(_BYTE *)(v22 + 57);
  *(_QWORD *)(v21 + 64) = *(_QWORD *)(v22 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 72) = *(_QWORD *)(v22 + 72);
  *(_BYTE *)(v21 + 80) = *(_BYTE *)(v22 + 80);
  *(_OWORD *)(v21 + 88) = *(_OWORD *)(v22 + 88);
  *(_QWORD *)(v21 + 104) = *(_QWORD *)(v22 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 112) = *(_BYTE *)(v22 + 112);
  *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 128) = *(_BYTE *)(v22 + 128);
  *(_BYTE *)(v21 + 129) = *(_BYTE *)(v22 + 129);
  *(_BYTE *)(v21 + 130) = *(_BYTE *)(v22 + 130);
  *(_BYTE *)(v21 + 131) = *(_BYTE *)(v22 + 131);
  *(_BYTE *)(v21 + 132) = *(_BYTE *)(v22 + 132);
  *(_BYTE *)(v21 + 133) = *(_BYTE *)(v22 + 133);
  *(_BYTE *)(v21 + 134) = *(_BYTE *)(v22 + 134);
LABEL_11:
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_BYTE *)v30 = *(_BYTE *)(a2 + v29);
  v32 = *(_QWORD *)(a2 + v29 + 16);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(a2 + v29 + 8);
  *(_QWORD *)(v30 + 16) = v32;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 24) = *(_BYTE *)(v31 + 24);
  *(_BYTE *)(v30 + 25) = *(_BYTE *)(v31 + 25);
  v33 = *(_QWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v30 + 40) = v33;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnblockTagEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58CD36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UnblockTagEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58CD3F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D58CD474()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UnblockTagEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D58CD564 + 4 * byte_1D5AC4ADC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D58CD598 + 4 * byte_1D5AC4AD7[v4]))();
}

uint64_t sub_1D58CD598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58CD5A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58CD5A8);
  return result;
}

uint64_t sub_1D58CD5B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58CD5BCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D58CD5C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58CD5C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnblockTagEvent.Model.CodingKeys()
{
  return &type metadata for UnblockTagEvent.Model.CodingKeys;
}

unint64_t sub_1D58CD5E8()
{
  unint64_t result;

  result = qword_1EFF4BB78;
  if (!qword_1EFF4BB78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4D24, &type metadata for UnblockTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BB78);
  }
  return result;
}

unint64_t sub_1D58CD630()
{
  unint64_t result;

  result = qword_1EFF4BB80;
  if (!qword_1EFF4BB80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4C94, &type metadata for UnblockTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BB80);
  }
  return result;
}

unint64_t sub_1D58CD678()
{
  unint64_t result;

  result = qword_1EFF4BB88;
  if (!qword_1EFF4BB88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4CBC, &type metadata for UnblockTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BB88);
  }
  return result;
}

uint64_t sub_1D58CD6BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

__n128 WidgetEngagementData.init(identifier:engagementType:webEmbedData:articleData:groupData:tagData:contentFetchDate:displayMode:topicTag:userID:engagementURL:typeData:locationData:storyType:engagementID:entryID:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, _OWORD *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, __int128 a11, __int128 a12, uint64_t a13, uint64_t a14, char *a15, char *a16, __int128 a17, __n128 a18, uint64_t a19, uint64_t a20)
{
  __n128 result;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  _BYTE v31[137];

  result = a18;
  v21 = a5[4];
  *(_OWORD *)(a9 + 120) = a5[5];
  v22 = a5[7];
  *(_OWORD *)(a9 + 136) = a5[6];
  *(_OWORD *)(a9 + 152) = v22;
  v23 = *a5;
  *(_OWORD *)(a9 + 56) = a5[1];
  v24 = a5[3];
  *(_OWORD *)(a9 + 72) = a5[2];
  *(_OWORD *)(a9 + 88) = v24;
  *(_OWORD *)(a9 + 104) = v21;
  *(_OWORD *)(a9 + 40) = v23;
  *(_OWORD *)&v31[97] = *(_OWORD *)(a6 + 96);
  *(_OWORD *)&v31[81] = *(_OWORD *)(a6 + 80);
  *(_OWORD *)&v31[113] = *(_OWORD *)(a6 + 112);
  *(_QWORD *)&v31[129] = *(_QWORD *)(a6 + 128);
  *(_OWORD *)&v31[17] = *(_OWORD *)(a6 + 16);
  *(_OWORD *)&v31[33] = *(_OWORD *)(a6 + 32);
  *(_OWORD *)&v31[49] = *(_OWORD *)(a6 + 48);
  *(_OWORD *)&v31[65] = *(_OWORD *)(a6 + 64);
  *(_OWORD *)&v31[1] = *(_OWORD *)a6;
  *(_OWORD *)(a9 + 24) = *a4;
  *(_OWORD *)(a9 + 255) = *(_OWORD *)&v31[80];
  *(_OWORD *)(a9 + 271) = *(_OWORD *)&v31[96];
  *(_OWORD *)(a9 + 287) = *(_OWORD *)&v31[112];
  *(_OWORD *)(a9 + 296) = *(_OWORD *)&v31[121];
  *(_OWORD *)(a9 + 191) = *(_OWORD *)&v31[16];
  *(_OWORD *)(a9 + 207) = *(_OWORD *)&v31[32];
  *(_OWORD *)(a9 + 223) = *(_OWORD *)&v31[48];
  *(_OWORD *)(a9 + 239) = *(_OWORD *)&v31[64];
  v25 = *a3;
  *(_QWORD *)(a9 + 167) = *(_QWORD *)((char *)a5 + 127);
  v27 = *a7;
  v26 = a7[1];
  v28 = *a10;
  v29 = *a15;
  v30 = *a16;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 175) = *(_OWORD *)v31;
  *(_QWORD *)(a9 + 312) = v27;
  *(_QWORD *)(a9 + 320) = v26;
  *(_QWORD *)(a9 + 328) = a8;
  *(_BYTE *)(a9 + 336) = v28;
  *(_OWORD *)(a9 + 344) = a11;
  *(_OWORD *)(a9 + 360) = a12;
  *(_QWORD *)(a9 + 376) = a13;
  *(_QWORD *)(a9 + 384) = a14;
  *(_BYTE *)(a9 + 392) = v29;
  *(_BYTE *)(a9 + 393) = v30;
  *(_OWORD *)(a9 + 400) = a17;
  *(__n128 *)(a9 + 416) = a18;
  *(_QWORD *)(a9 + 432) = a19;
  *(_QWORD *)(a9 + 440) = a20;
  return result;
}

uint64_t WidgetEngagementData.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetEngagementData.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*WidgetEngagementData.identifier.modify())()
{
  return nullsub_1;
}

void WidgetEngagementData.engagementType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *WidgetEngagementData.engagementType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*WidgetEngagementData.engagementType.modify())()
{
  return nullsub_1;
}

uint64_t WidgetEngagementData.webEmbedData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = *(_QWORD *)(v1 + 24);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t WidgetEngagementData.webEmbedData.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  return result;
}

uint64_t (*WidgetEngagementData.webEmbedData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetEngagementData.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[7];
  _OWORD v12[2];

  v2 = *(_OWORD *)(v1 + 120);
  v3 = *(_OWORD *)(v1 + 152);
  v11[6] = *(_OWORD *)(v1 + 136);
  v12[0] = v3;
  *(_QWORD *)((char *)v12 + 15) = *(_QWORD *)(v1 + 167);
  v4 = *(_OWORD *)(v1 + 56);
  v5 = *(_OWORD *)(v1 + 88);
  v11[2] = *(_OWORD *)(v1 + 72);
  v11[3] = v5;
  v11[4] = *(_OWORD *)(v1 + 104);
  v11[5] = v2;
  v11[0] = *(_OWORD *)(v1 + 40);
  v11[1] = v4;
  v6 = *(_OWORD *)(v1 + 120);
  v7 = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(a1 + 112) = v7;
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v1 + 167);
  v8 = *(_OWORD *)(v1 + 56);
  v9 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 104);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 16) = v8;
  return sub_1D57D41B8((uint64_t)v11);
}

__n128 WidgetEngagementData.articleData.setter(__int128 *a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  _OWORD v12[7];
  _OWORD v13[2];

  v3 = *(_OWORD *)(v1 + 120);
  v4 = *(_OWORD *)(v1 + 152);
  v12[6] = *(_OWORD *)(v1 + 136);
  v13[0] = v4;
  *(_QWORD *)((char *)v13 + 15) = *(_QWORD *)(v1 + 167);
  v5 = *(_OWORD *)(v1 + 56);
  v6 = *(_OWORD *)(v1 + 88);
  v12[2] = *(_OWORD *)(v1 + 72);
  v12[3] = v6;
  v12[4] = *(_OWORD *)(v1 + 104);
  v12[5] = v3;
  v12[0] = *(_OWORD *)(v1 + 40);
  v12[1] = v5;
  sub_1D57D5AE0((uint64_t)v12);
  v7 = a1[4];
  *(_OWORD *)(v1 + 120) = a1[5];
  v8 = a1[7];
  *(_OWORD *)(v1 + 136) = a1[6];
  *(_OWORD *)(v1 + 152) = v8;
  v9 = *a1;
  *(_OWORD *)(v1 + 56) = a1[1];
  result = (__n128)a1[2];
  v11 = a1[3];
  *(__n128 *)(v1 + 72) = result;
  *(_OWORD *)(v1 + 88) = v11;
  *(_OWORD *)(v1 + 104) = v7;
  *(_QWORD *)(v1 + 167) = *(_QWORD *)((char *)a1 + 127);
  *(_OWORD *)(v1 + 40) = v9;
  return result;
}

uint64_t (*WidgetEngagementData.articleData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetEngagementData.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = *(_OWORD *)(v1 + 256);
  v3 = *(_OWORD *)(v1 + 288);
  v19 = *(_OWORD *)(v1 + 272);
  v20 = v3;
  v4 = *(_OWORD *)(v1 + 192);
  v5 = *(_OWORD *)(v1 + 224);
  v15 = *(_OWORD *)(v1 + 208);
  v6 = v15;
  v16 = v5;
  v7 = *(_OWORD *)(v1 + 224);
  v8 = *(_OWORD *)(v1 + 256);
  v17 = *(_OWORD *)(v1 + 240);
  v9 = v17;
  v18 = v8;
  v10 = *(_OWORD *)(v1 + 192);
  v14[0] = *(_OWORD *)(v1 + 176);
  v11 = v14[0];
  v14[1] = v10;
  v12 = *(_OWORD *)(v1 + 288);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v2;
  v21 = *(_QWORD *)(v1 + 304);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v1 + 304);
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v4;
  return sub_1D5802B14((uint64_t)v14);
}

__n128 WidgetEngagementData.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  _OWORD v11[8];
  uint64_t v12;

  v3 = *(_OWORD *)(v1 + 288);
  v11[6] = *(_OWORD *)(v1 + 272);
  v11[7] = v3;
  v12 = *(_QWORD *)(v1 + 304);
  v4 = *(_OWORD *)(v1 + 224);
  v11[2] = *(_OWORD *)(v1 + 208);
  v11[3] = v4;
  v5 = *(_OWORD *)(v1 + 256);
  v11[4] = *(_OWORD *)(v1 + 240);
  v11[5] = v5;
  v6 = *(_OWORD *)(v1 + 192);
  v11[0] = *(_OWORD *)(v1 + 176);
  v11[1] = v6;
  sub_1D5803C78((uint64_t)v11);
  v7 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 272) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 288) = v7;
  *(_QWORD *)(v1 + 304) = *(_QWORD *)(a1 + 128);
  v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 208) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 224) = v8;
  v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 240) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 256) = v9;
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)(v1 + 176) = *(_OWORD *)a1;
  *(__n128 *)(v1 + 192) = result;
  return result;
}

uint64_t (*WidgetEngagementData.groupData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetEngagementData.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 320);
  *a1 = *(_QWORD *)(v1 + 312);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t WidgetEngagementData.tagData.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 312) = v2;
  *(_QWORD *)(v1 + 320) = v3;
  return result;
}

uint64_t (*WidgetEngagementData.tagData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetEngagementData.contentFetchDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 328);
}

uint64_t WidgetEngagementData.contentFetchDate.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 328) = result;
  return result;
}

uint64_t (*WidgetEngagementData.contentFetchDate.modify())()
{
  return nullsub_1;
}

void WidgetEngagementData.displayMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 336);
}

_BYTE *WidgetEngagementData.displayMode.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 336) = *result;
  return result;
}

uint64_t (*WidgetEngagementData.displayMode.modify())()
{
  return nullsub_1;
}

uint64_t WidgetEngagementData.topicTag.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 344);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetEngagementData.topicTag.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 344) = a1;
  *(_QWORD *)(v2 + 352) = a2;
  return result;
}

uint64_t (*WidgetEngagementData.topicTag.modify())()
{
  return nullsub_1;
}

uint64_t WidgetEngagementData.userID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 360);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetEngagementData.userID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 360) = a1;
  *(_QWORD *)(v2 + 368) = a2;
  return result;
}

uint64_t (*WidgetEngagementData.userID.modify())()
{
  return nullsub_1;
}

uint64_t WidgetEngagementData.engagementURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 376);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetEngagementData.engagementURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 376) = a1;
  *(_QWORD *)(v2 + 384) = a2;
  return result;
}

uint64_t (*WidgetEngagementData.engagementURL.modify())()
{
  return nullsub_1;
}

void WidgetEngagementData.typeData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 392);
}

_BYTE *WidgetEngagementData.typeData.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 392) = *result;
  return result;
}

uint64_t (*WidgetEngagementData.typeData.modify())()
{
  return nullsub_1;
}

void WidgetEngagementData.locationData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 393);
}

_BYTE *WidgetEngagementData.locationData.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 393) = *result;
  return result;
}

uint64_t (*WidgetEngagementData.locationData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetEngagementData.storyType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 400);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetEngagementData.storyType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 400) = a1;
  *(_QWORD *)(v2 + 408) = a2;
  return result;
}

uint64_t (*WidgetEngagementData.storyType.modify())()
{
  return nullsub_1;
}

uint64_t WidgetEngagementData.engagementID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 416);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetEngagementData.engagementID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 416) = a1;
  *(_QWORD *)(v2 + 424) = a2;
  return result;
}

uint64_t (*WidgetEngagementData.engagementID.modify())()
{
  return nullsub_1;
}

uint64_t WidgetEngagementData.entryID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 432);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetEngagementData.entryID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 432) = a1;
  *(_QWORD *)(v2 + 440) = a2;
  return result;
}

uint64_t (*WidgetEngagementData.entryID.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D58CE19C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58CE1D4 + 4 * byte_1D5AC4DA0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1D58CE1D4()
{
  return 0x656D656761676E65;
}

uint64_t sub_1D58CE344()
{
  return 0x44497972746E65;
}

uint64_t sub_1D58CE35C()
{
  unsigned __int8 *v0;

  return sub_1D58CE19C(*v0);
}

uint64_t sub_1D58CE364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58D0770(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D58CE388(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1D58CE394()
{
  sub_1D58CE964();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58CE3BC()
{
  sub_1D58CE964();
  return sub_1D5AAEEE0();
}

uint64_t WidgetEngagementData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[6];
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[24];
  char v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _OWORD v64[2];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;

  sub_1D58CF7F0(0, &qword_1ED9D1610, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v31 - v6;
  v8 = *v1;
  v46 = v1[1];
  v47 = v8;
  v45 = *((unsigned __int8 *)v1 + 16);
  v9 = v1[3];
  v43 = v1[4];
  v44 = v9;
  v10 = *(_OWORD *)(v1 + 15);
  v11 = *(_OWORD *)(v1 + 19);
  v63 = *(_OWORD *)(v1 + 17);
  v64[0] = v11;
  *(_QWORD *)((char *)v64 + 15) = *(uint64_t *)((char *)v1 + 167);
  v12 = *(_OWORD *)(v1 + 7);
  v13 = *(_OWORD *)(v1 + 11);
  v59 = *(_OWORD *)(v1 + 9);
  v60 = v13;
  v61 = *(_OWORD *)(v1 + 13);
  v62 = v10;
  v57 = *(_OWORD *)(v1 + 5);
  v58 = v12;
  v14 = *((_OWORD *)v1 + 18);
  v71 = *((_OWORD *)v1 + 17);
  v72 = v14;
  v15 = v1[39];
  v73 = v1[38];
  v16 = *((_OWORD *)v1 + 14);
  v67 = *((_OWORD *)v1 + 13);
  v68 = v16;
  v17 = *((_OWORD *)v1 + 16);
  v69 = *((_OWORD *)v1 + 15);
  v70 = v17;
  v18 = *((_OWORD *)v1 + 12);
  v65 = *((_OWORD *)v1 + 11);
  v66 = v18;
  v19 = v1[40];
  *(_QWORD *)&v42 = v15;
  *((_QWORD *)&v42 + 1) = v19;
  v41 = v1[41];
  v40 = *((unsigned __int8 *)v1 + 336);
  v20 = v1[43];
  v38 = v1[44];
  v39 = v20;
  v21 = v1[45];
  v36 = v1[46];
  v37 = v21;
  v22 = v1[47];
  v34 = v1[48];
  v35 = v22;
  LODWORD(v22) = *((unsigned __int8 *)v1 + 392);
  v32 = *((unsigned __int8 *)v1 + 393);
  v33 = v22;
  v23 = v1[51];
  v31[4] = v1[50];
  v31[5] = v23;
  v24 = v1[53];
  v31[2] = v1[52];
  v31[3] = v24;
  v25 = v1[55];
  v31[1] = v1[54];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58CE964();
  v26 = v4;
  sub_1D5AAEEC8();
  LOBYTE(v48) = 0;
  v27 = v74;
  sub_1D5AAED3C();
  if (v27)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v29 = v43;
  v28 = v44;
  v74 = v25;
  LOBYTE(v48) = v45;
  v56 = 1;
  sub_1D58CE9A8();
  sub_1D5AAED6C();
  *(_QWORD *)&v48 = v28;
  *((_QWORD *)&v48 + 1) = v29;
  v56 = 2;
  sub_1D57F1894();
  sub_1D5AAED18();
  v54 = v63;
  *(_OWORD *)v55 = v64[0];
  *(_QWORD *)&v55[15] = *(_QWORD *)((char *)v64 + 15);
  v50 = v59;
  v51 = v60;
  v52 = v61;
  v53 = v62;
  v48 = v57;
  v49 = v58;
  v56 = 3;
  sub_1D57CB940();
  sub_1D5AAED6C();
  v54 = v71;
  *(_OWORD *)v55 = v72;
  *(_QWORD *)&v55[16] = v73;
  v50 = v67;
  v51 = v68;
  v52 = v69;
  v53 = v70;
  v48 = v65;
  v49 = v66;
  v56 = 4;
  sub_1D57C5FEC();
  sub_1D5AAED6C();
  v48 = v42;
  v56 = 5;
  sub_1D57C6738();
  sub_1D5AAED6C();
  LOBYTE(v48) = 6;
  sub_1D5AAED84();
  LOBYTE(v48) = v40;
  v56 = 7;
  sub_1D58CE9EC();
  sub_1D5AAED6C();
  LOBYTE(v48) = 8;
  sub_1D5AAECF4();
  LOBYTE(v48) = 9;
  sub_1D5AAED3C();
  LOBYTE(v48) = 10;
  sub_1D5AAED3C();
  LOBYTE(v48) = v33;
  v56 = 11;
  sub_1D581C4AC();
  sub_1D5AAED6C();
  LOBYTE(v48) = v32;
  v56 = 12;
  sub_1D581C62C();
  sub_1D5AAED6C();
  LOBYTE(v48) = 13;
  sub_1D5AAECF4();
  LOBYTE(v48) = 14;
  sub_1D5AAECF4();
  LOBYTE(v48) = 15;
  sub_1D5AAECF4();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v5 + 8))(0, v26);
}

unint64_t sub_1D58CE964()
{
  unint64_t result;

  result = qword_1ED9D1500;
  if (!qword_1ED9D1500)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4F68, &type metadata for WidgetEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1500);
  }
  return result;
}

unint64_t sub_1D58CE9A8()
{
  unint64_t result;

  result = qword_1ED9D1510;
  if (!qword_1ED9D1510)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetEngagementType, &type metadata for WidgetEngagementType);
    atomic_store(result, (unint64_t *)&qword_1ED9D1510);
  }
  return result;
}

unint64_t sub_1D58CE9EC()
{
  unint64_t result;

  result = qword_1ED9D14A8;
  if (!qword_1ED9D14A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DisplayModeData, &type metadata for DisplayModeData);
    atomic_store(result, (unint64_t *)&qword_1ED9D14A8);
  }
  return result;
}

uint64_t WidgetEngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _OWORD v53[28];
  uint64_t v54;
  uint64_t v55;
  char v56;
  _BYTE v57[7];
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _BYTE v67[135];
  _BYTE v68[25];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  _BYTE v73[7];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  int v82;
  __int16 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  char v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  _BYTE v117[23];
  char v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  _BYTE v126[23];
  int v127;
  __int16 v128;
  _BYTE v129[7];
  _OWORD v130[9];
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  _BYTE v138[23];
  _DWORD v139[5];
  uint64_t v140;

  sub_1D58CF7F0(0, &qword_1ED9D15F0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - v8;
  v10 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1D58CE964();
  sub_1D5AAEEB0();
  if (v2)
  {
    v140 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v46 = a2;
    LOBYTE(v54) = 0;
    v11 = sub_1D5AAECA0();
    v13 = v12;
    LOBYTE(v53[0]) = 1;
    sub_1D58CF84C();
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v48 = v13;
    LODWORD(v13) = v54;
    LOBYTE(v53[0]) = 2;
    sub_1D57F1850();
    sub_1D5AAEC7C();
    v45 = v13;
    v14 = v54;
    v15 = v55;
    v118 = 3;
    sub_1D57CB8FC();
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v44 = v14;
    v116 = v125;
    *(_OWORD *)v117 = *(_OWORD *)v126;
    v112 = v121;
    v113 = v122;
    v115 = v124;
    v114 = v123;
    v111 = v120;
    v110 = v119;
    v137 = v125;
    *(_OWORD *)v138 = *(_OWORD *)v126;
    v133 = v121;
    v134 = v122;
    v135 = v123;
    v136 = v124;
    *(_QWORD *)&v117[15] = *(_QWORD *)&v126[15];
    *(_QWORD *)&v138[15] = *(_QWORD *)&v126[15];
    v131 = v119;
    v132 = v120;
    v100 = 4;
    sub_1D57D41B8((uint64_t)&v110);
    sub_1D57C5FA8();
    sub_1D5AAECD0();
    v97 = v107;
    v98 = v108;
    v93 = v103;
    v94 = v104;
    v96 = v106;
    v95 = v105;
    v92 = v102;
    v91 = v101;
    *(_OWORD *)((char *)&v130[5] + 1) = v106;
    *(_OWORD *)((char *)&v130[6] + 1) = v107;
    *(_OWORD *)((char *)&v130[7] + 1) = v108;
    *(_OWORD *)((char *)&v130[1] + 1) = v102;
    *(_OWORD *)((char *)&v130[2] + 1) = v103;
    *(_OWORD *)((char *)&v130[3] + 1) = v104;
    *(_OWORD *)((char *)&v130[4] + 1) = v105;
    v99 = v109;
    *(_QWORD *)((char *)&v130[8] + 1) = v109;
    *(_OWORD *)((char *)v130 + 1) = v101;
    LOBYTE(v53[0]) = 5;
    sub_1D5802B14((uint64_t)&v91);
    sub_1D57C66F4();
    sub_1D5AAECD0();
    v43 = v54;
    v16 = v55;
    LOBYTE(v54) = 6;
    swift_bridgeObjectRetain();
    v17 = sub_1D5AAECE8();
    v51 = v16;
    v42 = v17;
    LOBYTE(v53[0]) = 7;
    sub_1D58CF890();
    sub_1D5AAECD0();
    LODWORD(v16) = v54;
    LOBYTE(v54) = 8;
    v41 = sub_1D5AAEC58();
    v40 = v16;
    v50 = v15;
    LOBYTE(v54) = 9;
    v140 = v18;
    swift_bridgeObjectRetain();
    v39 = sub_1D5AAECA0();
    v47 = v19;
    LOBYTE(v54) = 10;
    swift_bridgeObjectRetain();
    v38 = sub_1D5AAECA0();
    v49 = v20;
    LOBYTE(v53[0]) = 11;
    sub_1D581C468();
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v37 = v54;
    LOBYTE(v53[0]) = 12;
    sub_1D581C5E8();
    sub_1D5AAECD0();
    v36 = v54;
    LOBYTE(v54) = 13;
    v35 = sub_1D5AAEC58();
    v22 = v21;
    LOBYTE(v54) = 14;
    swift_bridgeObjectRetain();
    v34 = sub_1D5AAEC58();
    v24 = v23;
    v90 = 15;
    swift_bridgeObjectRetain();
    v33 = sub_1D5AAEC58();
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v27 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_OWORD *)((char *)&v53[7] + 8) = v115;
    *(_OWORD *)((char *)&v53[8] + 8) = v116;
    *(_OWORD *)((char *)&v53[9] + 8) = *(_OWORD *)v117;
    *(_OWORD *)((char *)&v53[3] + 8) = v111;
    *(_OWORD *)((char *)&v53[4] + 8) = v112;
    *(_OWORD *)((char *)&v53[5] + 8) = v113;
    *(_QWORD *)&v53[0] = v11;
    *((_QWORD *)&v53[0] + 1) = v48;
    LOBYTE(v53[1]) = v45;
    *((_QWORD *)&v53[1] + 1) = v44;
    *(_QWORD *)&v53[2] = v50;
    *(_QWORD *)((char *)&v53[10] + 7) = *(_QWORD *)&v117[15];
    *(_OWORD *)((char *)&v53[6] + 8) = v114;
    *(_OWORD *)((char *)&v53[2] + 8) = v110;
    v53[17] = v97;
    v53[18] = v98;
    v53[13] = v93;
    v53[14] = v94;
    v53[15] = v95;
    v53[16] = v96;
    v53[11] = v91;
    v53[12] = v92;
    *(_QWORD *)&v53[19] = v99;
    *((_QWORD *)&v53[19] + 1) = v43;
    *(_QWORD *)&v53[20] = v51;
    *((_QWORD *)&v53[20] + 1) = v42;
    LOBYTE(v53[21]) = v40;
    *((_QWORD *)&v53[21] + 1) = v41;
    *(_QWORD *)&v53[22] = v140;
    *((_QWORD *)&v53[22] + 1) = v39;
    v28 = v47;
    *(_QWORD *)&v53[23] = v47;
    *((_QWORD *)&v53[23] + 1) = v38;
    v29 = v49;
    *(_QWORD *)&v53[24] = v49;
    BYTE8(v53[24]) = v37;
    BYTE9(v53[24]) = v36;
    *(_QWORD *)&v53[25] = v35;
    *((_QWORD *)&v53[25] + 1) = v22;
    *(_QWORD *)&v53[26] = v34;
    *((_QWORD *)&v53[26] + 1) = v24;
    *(_QWORD *)&v53[27] = v33;
    *((_QWORD *)&v53[27] + 1) = v27;
    sub_1D58CF8D4((uint64_t)v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v27;
    swift_bridgeObjectRelease();
    sub_1D5803C78((uint64_t)&v91);
    sub_1D57D5AE0((uint64_t)&v110);
    swift_bridgeObjectRelease();
    v30 = v50;
    swift_bridgeObjectRelease();
    memcpy(v46, v53, 0x1C0uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    *(_OWORD *)&v67[119] = v130[6];
    *(_OWORD *)v68 = v130[7];
    *(_OWORD *)&v68[9] = *(_OWORD *)((char *)&v130[7] + 9);
    v65 = v136;
    v66 = v137;
    *(_OWORD *)v67 = *(_OWORD *)v138;
    v61 = v132;
    v62 = v133;
    v63 = v134;
    v64 = v135;
    v60 = v131;
    *(_OWORD *)&v67[103] = v130[5];
    *(_OWORD *)&v67[39] = v130[1];
    *(_OWORD *)&v67[55] = v130[2];
    *(_OWORD *)&v67[71] = v130[3];
    *(_OWORD *)&v67[87] = v130[4];
    v54 = v11;
    v55 = v48;
    v56 = v45;
    *(_DWORD *)v57 = v139[0];
    *(_DWORD *)&v57[3] = *(_DWORD *)((char *)v139 + 3);
    v58 = v44;
    v59 = v30;
    *(_QWORD *)&v67[15] = *(_QWORD *)&v138[15];
    *(_OWORD *)&v67[23] = v130[0];
    v69 = v43;
    v70 = v51;
    v71 = v42;
    v72 = v40;
    *(_DWORD *)v73 = *(_DWORD *)v129;
    *(_DWORD *)&v73[3] = *(_DWORD *)&v129[3];
    v74 = v41;
    v75 = v140;
    v76 = v39;
    v77 = v28;
    v78 = v38;
    v79 = v29;
    v80 = v37;
    v81 = v36;
    v82 = v127;
    v83 = v128;
    v84 = v35;
    v85 = v22;
    v86 = v34;
    v87 = v24;
    v88 = v33;
    v89 = v32;
    return sub_1D58CFA34((uint64_t)&v54);
  }
}

void sub_1D58CF7F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58CE964();
    v7 = a3(a1, &type metadata for WidgetEngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58CF84C()
{
  unint64_t result;

  result = qword_1ED9D1520;
  if (!qword_1ED9D1520)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetEngagementType, &type metadata for WidgetEngagementType);
    atomic_store(result, (unint64_t *)&qword_1ED9D1520);
  }
  return result;
}

unint64_t sub_1D58CF890()
{
  unint64_t result;

  result = qword_1ED9D14B8;
  if (!qword_1ED9D14B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DisplayModeData, &type metadata for DisplayModeData);
    atomic_store(result, (unint64_t *)&qword_1ED9D14B8);
  }
  return result;
}

uint64_t sub_1D58CF8D4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D58CFA34(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D58CFBA0@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return WidgetEngagementData.init(from:)(a1, a2);
}

uint64_t sub_1D58CFBB4(_QWORD *a1)
{
  return WidgetEngagementData.encode(to:)(a1);
}

uint64_t destroy for WidgetEngagementData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WidgetEngagementData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 172) = *(_BYTE *)(a2 + 172);
  *(_WORD *)(a1 + 173) = *(_WORD *)(a2 + 173);
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  v8 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v8;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v9 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v9;
  v10 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v10;
  v21 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v21;
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  v11 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v11;
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v12 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v12;
  v13 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v13;
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  v14 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v14;
  v15 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v15;
  v16 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v16;
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  *(_BYTE *)(a1 + 393) = *(_BYTE *)(a2 + 393);
  v17 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v17;
  v18 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v18;
  v19 = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetEngagementData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v4 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v4;
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v5;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  *(_BYTE *)(a1 + 170) = *(_BYTE *)(a2 + 170);
  *(_BYTE *)(a1 + 171) = *(_BYTE *)(a2 + 171);
  *(_BYTE *)(a1 + 172) = *(_BYTE *)(a2 + 172);
  *(_BYTE *)(a1 + 173) = *(_BYTE *)(a2 + 173);
  *(_BYTE *)(a1 + 174) = *(_BYTE *)(a2 + 174);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 204) = *(_DWORD *)(a2 + 204);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = v6;
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  *(_BYTE *)(a1 + 393) = *(_BYTE *)(a2 + 393);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy448_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1C0uLL);
}

uint64_t assignWithTake for WidgetEngagementData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  *(_BYTE *)(a1 + 170) = *(_BYTE *)(a2 + 170);
  *(_BYTE *)(a1 + 171) = *(_BYTE *)(a2 + 171);
  *(_BYTE *)(a1 + 172) = *(_BYTE *)(a2 + 172);
  *(_BYTE *)(a1 + 173) = *(_BYTE *)(a2 + 173);
  *(_BYTE *)(a1 + 174) = *(_BYTE *)(a2 + 174);
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  v8 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  v10 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  v12 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 392) = *(_WORD *)(a2 + 392);
  v15 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetEngagementData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 448))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t getEnumTagSinglePayload for WidgetEngagementData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetEngagementData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1D58D0618 + 4 * byte_1D5AC4DB5[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1D58D064C + 4 * byte_1D5AC4DB0[v4]))();
}

uint64_t sub_1D58D064C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58D0654(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58D065CLL);
  return result;
}

uint64_t sub_1D58D0668(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58D0670);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1D58D0674(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58D067C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetEngagementData.CodingKeys()
{
  return &type metadata for WidgetEngagementData.CodingKeys;
}

unint64_t sub_1D58D069C()
{
  unint64_t result;

  result = qword_1EFF4BB90;
  if (!qword_1EFF4BB90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4F40, &type metadata for WidgetEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BB90);
  }
  return result;
}

unint64_t sub_1D58D06E4()
{
  unint64_t result;

  result = qword_1ED9D1390;
  if (!qword_1ED9D1390)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4EB0, &type metadata for WidgetEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1390);
  }
  return result;
}

unint64_t sub_1D58D072C()
{
  unint64_t result;

  result = qword_1ED9D1508;
  if (!qword_1ED9D1508)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC4ED8, &type metadata for WidgetEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1508);
  }
  return result;
}

uint64_t sub_1D58D0770(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D656761676E65 && a2 == 0xEE0065707954746ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465626D45626577 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEEC50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4D79616C70736964 && a2 == 0xEB0000000065646FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6761546369706F74 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x444972657375 && a2 == 0xE600000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656D656761676E65 && a2 == 0xED00004C5255746ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6174614465707974 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x70795479726F7473 && a2 == 0xE900000000000065 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x656D656761676E65 && a2 == 0xEC0000004449746ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x44497972746E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

NewsAnalytics::DownloadLocation_optional __swiftcall DownloadLocation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::DownloadLocation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DownloadLocation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58D0F08 + 4 * byte_1D5AC4FC0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D58D0F08()
{
  return 0x656E697A6167616DLL;
}

uint64_t sub_1D58D0F20()
{
  return 0x756F59726F66;
}

uint64_t sub_1D58D0F34()
{
  return 0x6C656E6E616863;
}

uint64_t sub_1D58D0F48()
{
  return 0x756F72676B636162;
}

void sub_1D58D0F64(char *a1)
{
  sub_1D5A3B4F0(*a1);
}

unint64_t sub_1D58D0F74()
{
  unint64_t result;

  result = qword_1EFF4BB98;
  if (!qword_1EFF4BB98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadLocation, &type metadata for DownloadLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4BB98);
  }
  return result;
}

void sub_1D58D0FB8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58D1004()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D58D1088()
{
  __asm { BR              X10 }
}

uint64_t sub_1D58D10C4()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D58D1134()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58D117C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::DownloadLocation_optional sub_1D58D1200(Swift::String *a1)
{
  return DownloadLocation.init(rawValue:)(*a1);
}

uint64_t sub_1D58D120C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D58D123C + 4 * byte_1D5AC4FD4[*v0]))();
}

void sub_1D58D123C(_QWORD *a1@<X8>)
{
  *a1 = 0x656E697A6167616DLL;
  a1[1] = 0xE800000000000000;
}

void sub_1D58D1258(_QWORD *a1@<X8>)
{
  *a1 = 0x756F59726F66;
  a1[1] = 0xE600000000000000;
}

void sub_1D58D1270(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6C656E6E616863;
  a1[1] = v1;
}

void sub_1D58D1288(_QWORD *a1@<X8>)
{
  *a1 = 0x756F72676B636162;
  a1[1] = 0xEA0000000000646ELL;
}

uint64_t sub_1D58D12A8()
{
  sub_1D58D141C();
  return sub_1D5AAE928();
}

uint64_t sub_1D58D1304()
{
  sub_1D58D141C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for DownloadLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D58D139C + 4 * byte_1D5AC4FDE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D58D13D0 + 4 * byte_1D5AC4FD9[v4]))();
}

uint64_t sub_1D58D13D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58D13D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58D13E0);
  return result;
}

uint64_t sub_1D58D13EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58D13F4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D58D13F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58D1400(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadLocation()
{
  return &type metadata for DownloadLocation;
}

unint64_t sub_1D58D141C()
{
  unint64_t result;

  result = qword_1EFF4BBA0;
  if (!qword_1EFF4BBA0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadLocation, &type metadata for DownloadLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4BBA0);
  }
  return result;
}

uint64_t static FeedLoadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCD18, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCAE0, a1);
}

uint64_t static FeedLoadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1ED9CD150, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCD20, a1);
}

uint64_t FeedLoadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FeedLoadEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FeedLoadEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedLoadEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedLoadEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadEvent.feedData.modify())()
{
  type metadata accessor for FeedLoadEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadEvent.feedConfigData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedLoadEvent.feedConfigData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadEvent.feedConfigData.modify())()
{
  type metadata accessor for FeedLoadEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D58D1A7C(type metadata accessor for FeedLoadEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t FeedLoadEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadEvent(0) + 28);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadEvent.timedData.modify())()
{
  type metadata accessor for FeedLoadEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedLoadEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadEvent.viewData.modify())()
{
  type metadata accessor for FeedLoadEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *Event;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for FeedLoadEvent(0);
  v5 = a1 + Event[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + Event[6];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + Event[7];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + Event[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t FeedLoadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FeedLoadEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FeedLoadEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4BC18);
}

uint64_t FeedLoadEvent.Model.feedConfigData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t FeedLoadEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D58D1A7C(type metadata accessor for FeedLoadEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t sub_1D58D1A7C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 28);
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t FeedLoadEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedLoadEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t FeedLoadEvent.Model.init(eventData:feedData:feedConfigData:timedData:viewData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  __int128 v24;
  __int16 v25;
  uint64_t v26;

  v8 = *a2;
  v9 = *((_QWORD *)a2 + 1);
  v10 = *((_QWORD *)a2 + 2);
  v11 = *a3;
  v12 = a3[1];
  v13 = *((_BYTE *)a3 + 16);
  v24 = *(_OWORD *)(a3 + 3);
  v14 = a3[5];
  v15 = *a5;
  v26 = a5[1];
  v25 = *((_WORD *)a5 + 8);
  v16 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  v17 = (int *)type metadata accessor for FeedLoadEvent.Model(0);
  v18 = a6 + v17[5];
  *(_BYTE *)v18 = v8;
  *(_QWORD *)(v18 + 8) = v9;
  *(_QWORD *)(v18 + 16) = v10;
  v19 = a6 + v17[6];
  *(_QWORD *)v19 = v11;
  *(_QWORD *)(v19 + 8) = v12;
  *(_BYTE *)(v19 + 16) = v13;
  *(_OWORD *)(v19 + 24) = v24;
  *(_QWORD *)(v19 + 40) = v14;
  v20 = a6 + v17[7];
  v21 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a4, v21);
  v23 = a6 + v17[8];
  *(_QWORD *)v23 = v15;
  *(_QWORD *)(v23 + 8) = v26;
  *(_WORD *)(v23 + 16) = v25;
  return result;
}

uint64_t sub_1D58D1C1C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58D1C50 + 4 * byte_1D5AC5108[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58D1C50()
{
  return 0x6174614464656566;
}

uint64_t sub_1D58D1C68()
{
  return 0x666E6F4364656566;
}

uint64_t sub_1D58D1C8C()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D58D1CA0()
{
  return 0x6174614477656976;
}

uint64_t sub_1D58D1CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58D3A2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58D1CDC()
{
  sub_1D58D1FBC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58D1D04()
{
  sub_1D58D1FBC();
  return sub_1D5AAEEE0();
}

uint64_t FeedLoadEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  __int128 v20;
  uint64_t v21;
  char v22;

  v3 = v1;
  sub_1D58D2488(0, &qword_1EFF4BBA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v19[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58D1FBC();
  sub_1D5AAEEC8();
  v19[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for FeedLoadEvent.Model(0);
    v11 = v3 + v10[5];
    v19[0] = *(_BYTE *)v11;
    *(_OWORD *)&v19[8] = *(_OWORD *)(v11 + 8);
    v22 = 1;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    v12 = v3 + v10[6];
    v13 = *(_BYTE *)(v12 + 16);
    v14 = *(_QWORD *)(v12 + 40);
    *(_OWORD *)v19 = *(_OWORD *)v12;
    v19[16] = v13;
    v20 = *(_OWORD *)(v12 + 24);
    v21 = v14;
    v22 = 2;
    sub_1D57CAA2C();
    sub_1D5AAED6C();
    v19[0] = 3;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v15 = (uint64_t *)(v3 + v10[8]);
    v16 = *v15;
    v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    *(_QWORD *)v19 = v16;
    *(_QWORD *)&v19[8] = v17;
    *(_WORD *)&v19[16] = (_WORD)v15;
    v22 = 4;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58D1FBC()
{
  unint64_t result;

  result = qword_1EFF4BBB0;
  if (!qword_1EFF4BBB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC531C, &type metadata for FeedLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BBB0);
  }
  return result;
}

uint64_t FeedLoadEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  __int128 v42;
  uint64_t v43;
  char v44;

  v32 = a2;
  v3 = sub_1D5AADFB0();
  v4 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  v35 = v4;
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1D5AADF98();
  v6 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v37 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D2488(0, &qword_1EFF4BBB8, MEMORY[0x1E0DED048]);
  v39 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - v10;
  v12 = type metadata accessor for FeedLoadEvent.Model(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58D1FBC();
  v38 = v11;
  v15 = v40;
  sub_1D5AAEEB0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = v9;
  v40 = v6;
  v17 = (uint64_t)v14;
  v18 = v35;
  v41[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v36;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v17, v37, v19);
  v44 = 1;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v20 = v12;
  v21 = v17 + *(int *)(v12 + 20);
  *(_BYTE *)v21 = v41[0];
  *(_OWORD *)(v21 + 8) = *(_OWORD *)&v41[8];
  v44 = 2;
  sub_1D57CA9E8();
  v37 = 0;
  sub_1D5AAECD0();
  v22 = v41[16];
  v23 = v43;
  v24 = v17 + *(int *)(v12 + 24);
  *(_OWORD *)v24 = *(_OWORD *)v41;
  *(_BYTE *)(v24 + 16) = v22;
  *(_OWORD *)(v24 + 24) = v42;
  *(_QWORD *)(v24 + 40) = v23;
  v41[0] = 3;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v26 = v33;
  v25 = v34;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v17 + *(int *)(v20 + 28), v26, v25);
  v44 = 4;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v38, v39);
  v27 = *(_QWORD *)&v41[8];
  v28 = *(_WORD *)&v41[16];
  v29 = v17 + *(int *)(v20 + 32);
  *(_QWORD *)v29 = *(_QWORD *)v41;
  *(_QWORD *)(v29 + 8) = v27;
  *(_WORD *)(v29 + 16) = v28;
  sub_1D58D24E4(v17, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D58D2528(v17);
}

void sub_1D58D2488(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58D1FBC();
    v7 = a3(a1, &type metadata for FeedLoadEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58D24E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58D2528(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58D2564@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedLoadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58D2578(_QWORD *a1)
{
  return FeedLoadEvent.Model.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedLoadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for FeedLoadEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for FeedLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for FeedLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for FeedLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for FeedLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLoadEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58D2DFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D57A8C9C();
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedLoadEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58D2F48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D57A8C9C();
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedLoadEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v13[16] = v14[16];
    *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
    *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_1D5AADFB0();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    v21 = a3[8];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    *((_WORD *)v22 + 8) = *((_WORD *)v23 + 8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedLoadEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_OWORD *)(v12 + 24) = *(_OWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1D5AADFB0();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v23;
  *(_WORD *)(v21 + 16) = *(_WORD *)(v22 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  *(_BYTE *)(v18 + 17) = *(_BYTE *)(v19 + 17);
  return a1;
}

uint64_t initializeWithTake for FeedLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
  *(_OWORD *)v9 = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v12[2] = v13[2];
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_WORD *)(v20 + 16) = *(_WORD *)(v21 + 16);
  return a1;
}

uint64_t assignWithTake for FeedLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v23;
  swift_bridgeObjectRelease();
  *(_WORD *)(v21 + 16) = *(_WORD *)(v22 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLoadEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58D3688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedLoadEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58D3740(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D58D37E8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedLoadEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D58D38D4 + 4 * byte_1D5AC5112[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D58D3908 + 4 * byte_1D5AC510D[v4]))();
}

uint64_t sub_1D58D3908(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58D3910(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58D3918);
  return result;
}

uint64_t sub_1D58D3924(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58D392CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D58D3930(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58D3938(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedLoadEvent.Model.CodingKeys()
{
  return &type metadata for FeedLoadEvent.Model.CodingKeys;
}

unint64_t sub_1D58D3958()
{
  unint64_t result;

  result = qword_1EFF4BC60;
  if (!qword_1EFF4BC60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC52F4, &type metadata for FeedLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BC60);
  }
  return result;
}

unint64_t sub_1D58D39A0()
{
  unint64_t result;

  result = qword_1EFF4BC68;
  if (!qword_1EFF4BC68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5264, &type metadata for FeedLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BC68);
  }
  return result;
}

unint64_t sub_1D58D39E8()
{
  unint64_t result;

  result = qword_1EFF4BC70;
  if (!qword_1EFF4BC70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC528C, &type metadata for FeedLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BC70);
  }
  return result;
}

uint64_t sub_1D58D3A2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x666E6F4364656566 && a2 == 0xEE00617461446769 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1D58D3C84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D58D482C(0, (unint64_t *)&unk_1ED9C7070, type metadata accessor for ArticleEngagementEvent, &qword_1ED9CAD28, (uint64_t)&protocol conformance descriptor for ArticleEngagementEvent);
  v17 = *(_QWORD *)(v2 - 8);
  v18 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - v3;
  sub_1D58D482C(0, &qword_1ED9C7068, type metadata accessor for HeadlineExposureEvent, &qword_1ED9CAA28, (uint64_t)&protocol conformance descriptor for HeadlineExposureEvent);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  v10 = sub_1D5AADAAC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - v12, a1, v10);
  if (swift_dynamicCast())
  {
    sub_1D58D3E60(a1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    v14 = v18;
    if (swift_dynamicCast())
    {
      sub_1D58D3E60(a1);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v14);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1D58D3E60(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v87 = type metadata accessor for ArticleEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v87);
  v92 = (uint64_t)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, (unint64_t *)&unk_1ED9C7070, type metadata accessor for ArticleEngagementEvent, &qword_1ED9CAD28, (uint64_t)&protocol conformance descriptor for ArticleEngagementEvent);
  v93 = v3;
  v86 = (_QWORD *)*((_QWORD *)v3 - 1);
  MEMORY[0x1E0C80A78](v3);
  v94 = (char *)&v74 - v4;
  sub_1D58D48AC();
  v6 = MEMORY[0x1E0C80A78](v5);
  v82 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v85 = (char *)&v74 - v8;
  v9 = sub_1D5AAE5A4();
  v10 = *(_QWORD *)(v9 - 8);
  v88 = v9;
  v89 = v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v80 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v83 = (char *)&v74 - v13;
  v14 = sub_1D5AAE634();
  v90 = *(_QWORD *)(v14 - 8);
  v91 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v81 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v84 = (char *)&v74 - v17;
  v18 = type metadata accessor for HeadlineExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, &qword_1ED9C7068, type metadata accessor for HeadlineExposureEvent, &qword_1ED9CAA28, (uint64_t)&protocol conformance descriptor for HeadlineExposureEvent);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v74 - v24;
  v26 = sub_1D5AADAAC();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v74 - v28;
  v96 = a1;
  v30 = (void *)sub_1D5AADA7C();
  v31 = sub_1D5AADE3C();
  v76 = v23;
  v77 = v20;
  v78 = v31;
  v79 = v32;

  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, v96, v26);
  if (!swift_dynamicCast())
  {
    v35 = v93;
    if (!swift_dynamicCast())
    {
      sub_1D57E69C4(v78, v79);
      v39 = *(uint64_t (**)(char *, uint64_t))(v27 + 8);
      v40 = v29;
      return v39(v40, v26);
    }
    v75 = v29;
    v96 = v27;
    v36 = v95;
    sub_1D57A8DE4(&qword_1ED9CD818, type metadata accessor for ArticleEngagementEvent.Model, (uint64_t)&protocol conformance descriptor for ArticleEngagementEvent.Model);
    v37 = v92;
    v38 = v87;
    sub_1D5AADFEC();
    v50 = *(_QWORD *)(v37 + *(int *)(v38 + 24) + 24);
    LOBYTE(v97) = *(_BYTE *)(v37 + *(int *)(v38 + 20) + 17);
    v51 = ViewAction.rawValue.getter();
    if (v51 == 0x656E696C64616568 && v52 == 0xEB00000000706154)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      v60 = sub_1D5AAEDE4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0)
      {
        sub_1D5820E20(v92, type metadata accessor for ArticleEngagementEvent.Model);
        swift_bridgeObjectRelease();
        sub_1D57E69C4(v78, v79);
        v70 = v96;
        v72 = v86;
        v71 = v94;
LABEL_19:
        ((void (*)(char *, char *))v72[1])(v71, v35);
        v39 = *(uint64_t (**)(char *, uint64_t))(v70 + 8);
        v40 = v75;
        return v39(v40, v26);
      }
    }
    v61 = v81;
    (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v81, *MEMORY[0x1E0D5E398], v91);
    v62 = v36;
    v63 = (_QWORD *)(v36 + 16);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v36 + 16), *(_QWORD *)(v36 + 40));
    v64 = (uint64_t)v82;
    sub_1D5AAE6A0();
    v66 = v88;
    v65 = v89;
    v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v64, 1, v88);
    v87 = v50;
    if (v67 == 1)
    {
      sub_1D5820E20(v64, (uint64_t (*)(_QWORD))sub_1D58D48AC);
      v68 = v61;
    }
    else
    {
      v69 = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v80, v64, v66);
      v68 = v61;
      __swift_project_boxed_opaque_existential_1(v63, *(_QWORD *)(v62 + 40));
      sub_1D5AAE6AC();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v69, v66);
    }
    v70 = v96;
    v35 = v93;
    v71 = v94;
    v72 = v86;
    v73 = v92;
    sub_1D57E69C4(v78, v79);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v68, v91);
    sub_1D5820E20(v73, type metadata accessor for ArticleEngagementEvent.Model);
    goto LABEL_19;
  }
  v93 = v25;
  v94 = (char *)v26;
  v96 = v27;
  v33 = v95;
  sub_1D57A8DE4(&qword_1ED9CA940, type metadata accessor for HeadlineExposureEvent.Model, (uint64_t)&protocol conformance descriptor for HeadlineExposureEvent.Model);
  v34 = v77;
  sub_1D5AADFEC();
  v92 = v22;
  v75 = v29;
  v41 = *(_QWORD *)&v34[*(int *)(v18 + 28) + 24];
  v43 = v90;
  v42 = v91;
  v44 = v84;
  (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v84, *MEMORY[0x1E0D5E3A0], v91);
  v45 = *(_QWORD *)(v33 + 40);
  v86 = (_QWORD *)(v33 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v33 + 16), v45);
  swift_bridgeObjectRetain();
  v46 = (uint64_t)v85;
  v87 = v41;
  sub_1D5AAE6A0();
  v47 = v88;
  v48 = v89;
  v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v46, 1, v88);
  if (v49 == 1)
  {
    sub_1D5820E20(v46, (uint64_t (*)(_QWORD))sub_1D58D48AC);
  }
  else
  {
    v53 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v83, v46, v47);
    __swift_project_boxed_opaque_existential_1(v86, *(_QWORD *)(v33 + 40));
    sub_1D5AAE6AC();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v53, v47);
  }
  v54 = v75;
  v55 = v92;
  v56 = v93;
  v57 = (uint64_t)v77;
  v58 = v76;
  swift_bridgeObjectRelease();
  sub_1D57E69C4(v78, v79);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
  sub_1D5820E20(v57, type metadata accessor for HeadlineExposureEvent.Model);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v56, v55);
  return (*(uint64_t (**)(char *, char *))(v96 + 8))(v54, v94);
}

uint64_t sub_1D58D47C4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D58D47F4()
{
  return sub_1D5AADCA4();
}

uint64_t sub_1D58D47FC()
{
  return sub_1D5AADCB0();
}

uint64_t sub_1D58D4804()
{
  return sub_1D5AADCBC();
}

uint64_t sub_1D58D480C()
{
  return sub_1D5AADCD4();
}

uint64_t sub_1D58D4814()
{
  return sub_1D5AADCC8();
}

uint64_t sub_1D58D481C()
{
  return sub_1D5AADC98();
}

uint64_t sub_1D58D4824()
{
  return sub_1D5AADCE0();
}

void sub_1D58D482C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1D57A8DE4(a4, a3, a5);
    v9 = sub_1D5AADAAC();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1D58D48AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CE0F0)
  {
    sub_1D5AAE5A4();
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CE0F0);
  }
}

uint64_t sub_1D58D4900(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4BC78, MEMORY[0x1E0CF8078]);
}

uint64_t static FeedGroupLayoutFailureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47148, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4BC78, a1);
}

uint64_t sub_1D58D4940(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4BC90, MEMORY[0x1E0CF8380]);
}

uint64_t static FeedGroupLayoutFailureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47150, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4BC90, a1);
}

uint64_t FeedGroupLayoutFailureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FeedGroupLayoutFailureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FeedGroupLayoutFailureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedGroupLayoutFailureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for FeedGroupLayoutFailureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4BD28);
}

uint64_t FeedGroupLayoutFailureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutFailureEvent.feedData.modify())()
{
  type metadata accessor for FeedGroupLayoutFailureEvent(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutFailureEvent.subgroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupLayoutFailureEvent.subgroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutFailureEvent.subgroupData.modify())()
{
  type metadata accessor for FeedGroupLayoutFailureEvent(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutFailureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupLayoutFailureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutFailureEvent.viewData.modify())()
{
  type metadata accessor for FeedGroupLayoutFailureEvent(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutFailureEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupLayoutFailureEvent.errorData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutFailureEvent.errorData.modify())()
{
  type metadata accessor for FeedGroupLayoutFailureEvent(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutFailureEvent.diagnosticsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent(0) + 36);
  sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupLayoutFailureEvent.diagnosticsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent(0) + 36);
  sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutFailureEvent.diagnosticsData.modify())()
{
  type metadata accessor for FeedGroupLayoutFailureEvent(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutFailureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for FeedGroupLayoutFailureEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
}

uint64_t FeedGroupLayoutFailureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FeedGroupLayoutFailureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FeedGroupLayoutFailureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4BDC8);
}

uint64_t FeedGroupLayoutFailureEvent.Model.subgroupData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v9 = v3[4];
  v8 = v3[5];
  v11 = v3[6];
  v10 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  v15 = v3[10];
  v14 = v3[11];
  v17 = v3[12];
  v16 = v3[13];
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v9;
  a1[5] = v8;
  a1[6] = v11;
  a1[7] = v10;
  a1[8] = v13;
  a1[9] = v12;
  a1[10] = v15;
  a1[11] = v14;
  a1[12] = v17;
  a1[13] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupLayoutFailureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupLayoutFailureEvent.Model.errorData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D58D521C(v4, v5, v6, v7);
}

uint64_t sub_1D58D521C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t FeedGroupLayoutFailureEvent.Model.diagnosticsData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for FeedGroupLayoutFailureEvent.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

__n128 FeedGroupLayoutFailureEvent.Model.init(eventData:feedData:subgroupData:viewData:errorData:diagnosticsData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 result;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int16 v31;
  uint64_t v32;
  __n128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v10 = *a2;
  v11 = *((_QWORD *)a2 + 1);
  v12 = *((_QWORD *)a2 + 2);
  v13 = *a3;
  v29 = *(_OWORD *)(a3 + 7);
  v30 = *(_OWORD *)(a3 + 5);
  v27 = *(_OWORD *)(a3 + 11);
  v28 = *(_OWORD *)(a3 + 9);
  v14 = a3[13];
  v15 = *a4;
  v16 = a4[1];
  v31 = *((_WORD *)a4 + 8);
  v33 = (__n128)a5[1];
  v34 = *a5;
  v32 = *((_QWORD *)a5 + 4);
  v35 = a6[1];
  v36 = *a6;
  v17 = sub_1D5AADF98();
  v25 = *(_OWORD *)(a3 + 3);
  v26 = *(_OWORD *)(a3 + 1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v18 = (int *)type metadata accessor for FeedGroupLayoutFailureEvent.Model(0);
  v19 = a7 + v18[5];
  *(_BYTE *)v19 = v10;
  *(_QWORD *)(v19 + 8) = v11;
  *(_QWORD *)(v19 + 16) = v12;
  v20 = a7 + v18[6];
  *(_QWORD *)v20 = v13;
  *(_OWORD *)(v20 + 8) = v26;
  *(_OWORD *)(v20 + 24) = v25;
  *(_OWORD *)(v20 + 40) = v30;
  *(_OWORD *)(v20 + 56) = v29;
  *(_OWORD *)(v20 + 72) = v28;
  *(_OWORD *)(v20 + 88) = v27;
  *(_QWORD *)(v20 + 104) = v14;
  v21 = a7 + v18[7];
  *(_QWORD *)v21 = v15;
  *(_QWORD *)(v21 + 8) = v16;
  *(_WORD *)(v21 + 16) = v31;
  v22 = a7 + v18[8];
  result = v33;
  *(_OWORD *)v22 = v34;
  *(__n128 *)(v22 + 16) = v33;
  *(_QWORD *)(v22 + 32) = v32;
  v24 = (_QWORD *)(a7 + v18[9]);
  *v24 = v36;
  v24[1] = v35;
  return result;
}

uint64_t sub_1D58D53F4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58D5428 + 4 * byte_1D5AC5400[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58D5428()
{
  return 0x6174614464656566;
}

uint64_t sub_1D58D5470()
{
  return 0x746144726F727265;
}

uint64_t sub_1D58D5484()
{
  return 0x74736F6E67616964;
}

uint64_t sub_1D58D54A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58D7E20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58D54CC()
{
  sub_1D58D57F8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58D54F4()
{
  sub_1D58D57F8();
  return sub_1D5AAEEE0();
}

uint64_t FeedGroupLayoutFailureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  _BYTE v25[40];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;

  v3 = v1;
  sub_1D58D5D94(0, &qword_1EFF4BCB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v25[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58D57F8();
  sub_1D5AAEEC8();
  v25[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for FeedGroupLayoutFailureEvent.Model(0);
    v11 = v3 + v10[5];
    v25[0] = *(_BYTE *)v11;
    *(_OWORD *)&v25[8] = *(_OWORD *)(v11 + 8);
    v31 = 1;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    v12 = v3 + v10[6];
    v13 = *(_OWORD *)(v12 + 40);
    v14 = *(_OWORD *)(v12 + 56);
    v15 = *(_OWORD *)(v12 + 72);
    v16 = *(_OWORD *)(v12 + 88);
    v17 = *(_QWORD *)(v12 + 104);
    *(_QWORD *)v25 = *(_QWORD *)v12;
    *(_OWORD *)&v25[8] = *(_OWORD *)(v12 + 8);
    *(_OWORD *)&v25[24] = *(_OWORD *)(v12 + 24);
    v26 = v13;
    v27 = v14;
    v28 = v15;
    v29 = v16;
    v30 = v17;
    v31 = 2;
    sub_1D57C9128();
    sub_1D5AAED6C();
    v18 = (uint64_t *)(v3 + v10[7]);
    v19 = *v18;
    v20 = v18[1];
    LOWORD(v18) = *((_WORD *)v18 + 8);
    *(_QWORD *)v25 = v19;
    *(_QWORD *)&v25[8] = v20;
    *(_WORD *)&v25[16] = (_WORD)v18;
    v31 = 3;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v21 = v3 + v10[8];
    v22 = *(_QWORD *)(v21 + 32);
    v23 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v21;
    *(_OWORD *)&v25[16] = v23;
    *(_QWORD *)&v25[32] = v22;
    v31 = 4;
    sub_1D57C6128();
    sub_1D5AAED18();
    *(_OWORD *)v25 = *(_OWORD *)(v3 + v10[9]);
    v31 = 5;
    sub_1D58770D0();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58D57F8()
{
  unint64_t result;

  result = qword_1EFF4BCC0;
  if (!qword_1EFF4BCC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5664, &type metadata for FeedGroupLayoutFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BCC0);
  }
  return result;
}

uint64_t FeedGroupLayoutFailureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int16 v24;
  char *v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  _BYTE v36[40];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;

  v30 = a2;
  v3 = sub_1D5AADF98();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D5D94(0, &qword_1EFF4BCC8, MEMORY[0x1E0DED048]);
  v32 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - v8;
  v10 = (int *)type metadata accessor for FeedGroupLayoutFailureEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D58D57F8();
  v33 = v9;
  v14 = v35;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  v36[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v31, v3);
  v42 = 1;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v35 = v3;
  v15 = &v12[v10[5]];
  *v15 = v36[0];
  *(_OWORD *)(v15 + 8) = *(_OWORD *)&v36[8];
  v42 = 2;
  sub_1D57C90E4();
  v16 = v32;
  sub_1D5AAECD0();
  v17 = v37;
  v18 = v38;
  v19 = v39;
  v20 = v40;
  v21 = v41;
  v22 = &v12[v10[6]];
  *(_QWORD *)v22 = *(_QWORD *)v36;
  *(_OWORD *)(v22 + 8) = *(_OWORD *)&v36[8];
  *(_OWORD *)(v22 + 24) = *(_OWORD *)&v36[24];
  *(_OWORD *)(v22 + 40) = v17;
  *(_OWORD *)(v22 + 56) = v18;
  *(_OWORD *)(v22 + 72) = v19;
  *(_OWORD *)(v22 + 88) = v20;
  *((_QWORD *)v22 + 13) = v21;
  v42 = 3;
  sub_1D57C6260();
  v31 = 0;
  sub_1D5AAECD0();
  v23 = *(_QWORD *)&v36[8];
  v24 = *(_WORD *)&v36[16];
  v25 = &v12[v10[7]];
  *(_QWORD *)v25 = *(_QWORD *)v36;
  *((_QWORD *)v25 + 1) = v23;
  *((_WORD *)v25 + 8) = v24;
  v42 = 4;
  sub_1D57C60E4();
  sub_1D5AAEC7C();
  v26 = *(_QWORD *)&v36[32];
  v27 = &v12[v10[8]];
  v28 = *(_OWORD *)&v36[16];
  *(_OWORD *)v27 = *(_OWORD *)v36;
  *((_OWORD *)v27 + 1) = v28;
  *((_QWORD *)v27 + 4) = v26;
  v42 = 5;
  sub_1D5877088();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v33, v16);
  *(_OWORD *)&v12[v10[9]] = *(_OWORD *)v36;
  sub_1D58D5E2C((uint64_t)v12, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_1D58D5E70((uint64_t)v12);
}

void sub_1D58D5D94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58D57F8();
    v7 = a3(a1, &type metadata for FeedGroupLayoutFailureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58D5DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D58D5E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedGroupLayoutFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58D5E70(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedGroupLayoutFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58D5EAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupLayoutFailureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58D5EC0(_QWORD *a1)
{
  return FeedGroupLayoutFailureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58D5ED4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47148, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4BC78, a1);
}

uint64_t sub_1D58D5EF8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47150, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4BC90, a1);
}

uint64_t sub_1D58D5F1C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v13, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedGroupLayoutFailureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for FeedGroupLayoutFailureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for FeedGroupLayoutFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for FeedGroupLayoutFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for FeedGroupLayoutFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for FeedGroupLayoutFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupLayoutFailureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58D6BD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutFailureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58D6D80(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58D6F2C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF4BCA8, (void (*)(void))sub_1D57C90E4, (void (*)(void))sub_1D57C9128);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1EFF4BCB0, (void (*)(void))sub_1D5877088, (void (*)(void))sub_1D58770D0);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedGroupLayoutFailureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    v17 = v14[5];
    v13[4] = v14[4];
    v13[5] = v17;
    v18 = v14[7];
    v13[6] = v14[6];
    v13[7] = v18;
    v19 = v14[9];
    v13[8] = v14[8];
    v13[9] = v19;
    v20 = v14[11];
    v13[10] = v14[10];
    v13[11] = v20;
    v22 = v14[12];
    v21 = v14[13];
    v13[12] = v22;
    v13[13] = v21;
    v23 = a3[7];
    v24 = a3[8];
    v25 = (char *)a1 + v23;
    v26 = (char *)a2 + v23;
    v25[16] = v26[16];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v25[17] = v26[17];
    v28 = (uint64_t *)((char *)a1 + v24);
    v29 = (uint64_t *)((char *)a2 + v24);
    v30 = *(uint64_t *)((char *)a2 + v24 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      v31 = v29[1];
      *v28 = *v29;
      v28[1] = v31;
      v28[2] = v29[2];
      v28[3] = v30;
      v28[4] = v29[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v33 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v33;
      v28[4] = v29[4];
    }
    v34 = a3[9];
    v35 = (uint64_t *)((char *)a1 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedGroupLayoutFailureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 32) + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedGroupLayoutFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  int *v37;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  v17 = v13[7];
  v12[6] = v13[6];
  v12[7] = v17;
  v18 = v13[9];
  v12[8] = v13[8];
  v12[9] = v18;
  v19 = v13[11];
  v12[10] = v13[10];
  v12[11] = v19;
  v21 = v13[12];
  v20 = v13[13];
  v12[12] = v21;
  v12[13] = v20;
  v22 = a3[7];
  v23 = a3[8];
  v37 = a3;
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
  v26 = *(_QWORD *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_QWORD *)(v24 + 8) = v26;
  *(_BYTE *)(v24 + 17) = *(_BYTE *)(v25 + 17);
  v27 = (_QWORD *)(a1 + v23);
  v28 = (_QWORD *)(a2 + v23);
  v29 = *(_QWORD *)(a2 + v23 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29)
  {
    v30 = v28[1];
    *v27 = *v28;
    v27[1] = v30;
    v27[2] = v28[2];
    v27[3] = v29;
    v27[4] = v28[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v31 = *((_OWORD *)v28 + 1);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v31;
    v27[4] = v28[4];
  }
  v32 = v37[9];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedGroupLayoutFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[4] = v12[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[5] = v12[5];
  v11[6] = v12[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[7] = v12[7];
  v11[8] = v12[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[9] = v12[9];
  v11[10] = v12[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[11] = v12[11];
  v11[12] = v12[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[13] = v12[13];
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = *(_QWORD *)(a1 + v16 + 24);
  v20 = *(_QWORD *)(a2 + v16 + 24);
  if (v19)
  {
    if (v20)
    {
      *v17 = *v18;
      v17[1] = v18[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v17[2] = v18[2];
      v17[3] = v18[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v17[4] = v18[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D58D7810((uint64_t)v17);
      v21 = v18[4];
      v22 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v22;
      v17[4] = v21;
    }
  }
  else if (v20)
  {
    *v17 = *v18;
    v17[1] = v18[1];
    v17[2] = v18[2];
    v17[3] = v18[3];
    v17[4] = v18[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *(_OWORD *)v18;
    v24 = *((_OWORD *)v18 + 1);
    v17[4] = v18[4];
    *(_OWORD *)v17 = v23;
    *((_OWORD *)v17 + 1) = v24;
  }
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D58D7810(uint64_t a1)
{
  destroy for ArticleExposureContextData();
  return a1;
}

uint64_t initializeWithTake for FeedGroupLayoutFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  __int128 v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = (_OWORD *)(a1 + v8);
  v12 = (_OWORD *)(a2 + v8);
  v13 = v12[6];
  v14 = v12[4];
  v11[5] = v12[5];
  v11[6] = v13;
  v15 = v12[1];
  *v11 = *v12;
  v11[1] = v15;
  v16 = v12[2];
  v11[3] = v12[3];
  v11[4] = v14;
  v11[2] = v16;
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_WORD *)(v19 + 16) = *(_WORD *)(v20 + 16);
  v21 = a1 + v18;
  v22 = (__int128 *)(a2 + v18);
  v23 = *v22;
  v24 = v22[1];
  *(_QWORD *)(v21 + 32) = *((_QWORD *)v22 + 4);
  *(_OWORD *)v21 = v23;
  *(_OWORD *)(v21 + 16) = v24;
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for FeedGroupLayoutFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v13[2] = v14[2];
  swift_bridgeObjectRelease();
  v13[3] = v14[3];
  swift_bridgeObjectRelease();
  v13[4] = v14[4];
  swift_bridgeObjectRelease();
  v16 = v14[6];
  v13[5] = v14[5];
  v13[6] = v16;
  swift_bridgeObjectRelease();
  v17 = v14[8];
  v13[7] = v14[7];
  v13[8] = v17;
  swift_bridgeObjectRelease();
  v18 = v14[10];
  v13[9] = v14[9];
  v13[10] = v18;
  swift_bridgeObjectRelease();
  v19 = v14[12];
  v13[11] = v14[11];
  v13[12] = v19;
  swift_bridgeObjectRelease();
  v13[13] = v14[13];
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a2 + v20 + 8);
  *(_QWORD *)v21 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(v21 + 8) = v23;
  swift_bridgeObjectRelease();
  *(_WORD *)(v21 + 16) = *(_WORD *)(v22 + 16);
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  if (!*(_QWORD *)(a1 + v24 + 24))
    goto LABEL_5;
  if (!*(_QWORD *)(v26 + 24))
  {
    sub_1D58D7810(v25);
LABEL_5:
    v29 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v29;
    *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
    goto LABEL_6;
  }
  v27 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v27;
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(v26 + 24);
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 24) = v28;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  swift_bridgeObjectRelease();
LABEL_6:
  v30 = a3[9];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupLayoutFailureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58D7ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutFailureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58D7B68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D58D7BE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutFailureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D58D7CC8 + 4 * byte_1D5AC540B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D58D7CFC + 4 * byte_1D5AC5406[v4]))();
}

uint64_t sub_1D58D7CFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58D7D04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58D7D0CLL);
  return result;
}

uint64_t sub_1D58D7D18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58D7D20);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D58D7D24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58D7D2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupLayoutFailureEvent.Model.CodingKeys()
{
  return &type metadata for FeedGroupLayoutFailureEvent.Model.CodingKeys;
}

unint64_t sub_1D58D7D4C()
{
  unint64_t result;

  result = qword_1EFF4BE10;
  if (!qword_1EFF4BE10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC563C, &type metadata for FeedGroupLayoutFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BE10);
  }
  return result;
}

unint64_t sub_1D58D7D94()
{
  unint64_t result;

  result = qword_1EFF4BE18;
  if (!qword_1EFF4BE18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC55AC, &type metadata for FeedGroupLayoutFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BE18);
  }
  return result;
}

unint64_t sub_1D58D7DDC()
{
  unint64_t result;

  result = qword_1EFF4BE20;
  if (!qword_1EFF4BE20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC55D4, &type metadata for FeedGroupLayoutFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BE20);
  }
  return result;
}

uint64_t sub_1D58D7E20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x70756F7267627573 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74736F6E67616964 && a2 == 0xEF61746144736369)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

NewsAnalytics::NotificationSubscribedType_optional __swiftcall NotificationSubscribedType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::NotificationSubscribedType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t NotificationSubscribedType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58D817C + 4 * byte_1D5AC56C0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D58D817C()
{
  return 0x6C656E6E616863;
}

uint64_t sub_1D58D8190()
{
  return 0x657573734977656ELL;
}

uint64_t sub_1D58D81A8()
{
  return 0x6E6974656B72616DLL;
}

unint64_t sub_1D58D81C4()
{
  return 0xD000000000000012;
}

uint64_t sub_1D58D81E0()
{
  return 0x7374726F7073;
}

uint64_t sub_1D58D81F4()
{
  return 0x73656C7A7A7570;
}

void sub_1D58D8208(char *a1)
{
  sub_1D5A36C1C(*a1);
}

unint64_t sub_1D58D8218()
{
  unint64_t result;

  result = qword_1EFF4BE28;
  if (!qword_1EFF4BE28)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSubscribedType, &type metadata for NotificationSubscribedType);
    atomic_store(result, (unint64_t *)&qword_1EFF4BE28);
  }
  return result;
}

void sub_1D58D825C()
{
  char *v0;

  sub_1D5AA9E74(0, *v0);
}

void sub_1D58D8268(uint64_t a1)
{
  char *v1;

  sub_1D5AA8134(a1, *v1);
}

void sub_1D58D8270(uint64_t a1)
{
  char *v1;

  sub_1D5AA9E74(a1, *v1);
}

NewsAnalytics::NotificationSubscribedType_optional sub_1D58D8278(Swift::String *a1)
{
  return NotificationSubscribedType.init(rawValue:)(*a1);
}

uint64_t sub_1D58D8284@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = NotificationSubscribedType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D58D82A8()
{
  sub_1D58D841C();
  return sub_1D5AAE928();
}

uint64_t sub_1D58D8304()
{
  sub_1D58D841C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for NotificationSubscribedType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D58D839C + 4 * byte_1D5AC56CC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D58D83D0 + 4 * byte_1D5AC56C7[v4]))();
}

uint64_t sub_1D58D83D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58D83D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58D83E0);
  return result;
}

uint64_t sub_1D58D83EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58D83F4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D58D83F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58D8400(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSubscribedType()
{
  return &type metadata for NotificationSubscribedType;
}

unint64_t sub_1D58D841C()
{
  unint64_t result;

  result = qword_1EFF4BE30;
  if (!qword_1EFF4BE30)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSubscribedType, &type metadata for NotificationSubscribedType);
    atomic_store(result, (unint64_t *)&qword_1EFF4BE30);
  }
  return result;
}

uint64_t sub_1D58D8460()
{
  sub_1D57C5CCC(0, (unint64_t *)&qword_1ED9CC630, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1D5AAE2C8();
}

uint64_t sub_1D58D84C0(uint64_t a1, uint64_t a2)
{
  return sub_1D57A8E64(a1, a2);
}

uint64_t sub_1D58D84E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD v3[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1D5AAEEA4();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    sub_1D5AAEDF0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    return sub_1D5AAD6E0();
  }
  return result;
}

uint64_t sub_1D58D85A4(char *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  int v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;

  v48 = a1;
  v49 = a2;
  sub_1D57B1F4C(0, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v47 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v44 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v44 - v11;
  v13 = sub_1D5AAD710();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v46 = (char *)&v44 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v44 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v44 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v44 - v26;
  sub_1D5AADE78();
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v29 = v28(v12, 1, v13);
  v45 = v17;
  if (v29 == 1)
  {
    sub_1D5AAD704();
    sub_1D57C03D0((uint64_t)v12, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v27, v12, v13);
  }
  v30 = a4;
  sub_1D58D8950(a4, v10);
  v31 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v31(v22, v27, v13);
  if (v28(v10, 1, v13) == 1)
  {
    v32 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v32(v25, v22, v13);
    sub_1D57C03D0((uint64_t)v10, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    v32 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v32(v25, v10, v13);
  }
  v33 = v47;
  sub_1D58D8C5C(v30, v47);
  v34 = v45;
  v31(v45, v27, v13);
  v35 = v28(v33, 1, v13);
  v36 = v48;
  if (v35 == 1)
  {
    v37 = v34;
    v38 = v46;
    v32(v46, v37, v13);
    sub_1D57C03D0((uint64_t)v33, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v13);
    v38 = v46;
    v32(v46, v33, v13);
  }
  sub_1D57A8DE4(&qword_1ED9CD0B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  if ((sub_1D5AAE7D8() & 1) != 0)
    v39 = v25;
  else
    v39 = v27;
  v31(v36, v39, v13);
  if ((sub_1D5AAE7E4() & 1) != 0)
  {
    v40 = v49;
    v41 = v38;
  }
  else
  {
    v40 = v49;
    v41 = v36;
  }
  v31(v40, v41, v13);
  v42 = *(void (**)(char *, uint64_t))(v14 + 8);
  v42(v38, v13);
  v42(v25, v13);
  return ((uint64_t (*)(char *, uint64_t))v42)(v27, v13);
}

uint64_t sub_1D58D8950@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);

  sub_1D57B1F4C(0, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - v7;
  v9 = sub_1D5AAD710();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v17(v8, 1, 1, v9);
    goto LABEL_7;
  }
  v30 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v33 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
  v33(v8, a1 + v30, v9);
  v31 = a1;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v17(v8, 0, 1, v9);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v18(v8, 1, v9) == 1)
  {
LABEL_7:
    sub_1D57C03D0((uint64_t)v8, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v22 = a2;
    v23 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v22, v23, 1, v9);
  }
  v29 = a2;
  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(v15, v8, v9);
  swift_bridgeObjectRetain();
  v20 = v16 - 1;
  if (v20)
  {
    v32 = *(_QWORD *)(v10 + 72);
    v25 = v31 + v32 + v30;
    while (1)
    {
      v33(v6, v25, v9);
      v17(v6, 0, 1, v9);
      if (v18(v6, 1, v9) == 1)
        break;
      v19(v13, v6, v9);
      sub_1D57A8DE4(&qword_1ED9CD0B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v26 = sub_1D5AAE7D8();
      v27 = *(void (**)(char *, uint64_t))(v10 + 8);
      if ((v26 & 1) != 0)
      {
        v27(v15, v9);
        v19(v15, v13, v9);
      }
      else
      {
        v27(v13, v9);
      }
      v25 += v32;
      if (!--v20)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v17(v6, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  sub_1D57C03D0((uint64_t)v6, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v21 = v29;
  v19(v29, v15, v9);
  v22 = v21;
  v23 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v22, v23, 1, v9);
}

uint64_t sub_1D58D8C5C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);

  sub_1D57B1F4C(0, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_1D5AAD710();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v34 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v34(v9, a1 + v31, v10);
  v32 = a1;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_1D57C03D0((uint64_t)v9, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v30 = a2;
  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v16, v9, v10);
  swift_bridgeObjectRetain();
  v21 = v17 - 1;
  if (v21)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v32 + v33 + v31;
    while (1)
    {
      v34(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v19(v7, 1, v10) == 1)
        break;
      v20(v14, v7, v10);
      sub_1D57A8DE4(&qword_1ED9CD0B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v27 = sub_1D5AAE7D8();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v20(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v21)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1D57C03D0((uint64_t)v7, &qword_1ED9C6F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v22 = v30;
  v20(v30, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

uint64_t sub_1D58D8F68(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  double v3;
  double v4;
  _BYTE v5[24];
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1D5AAEEBC();
  result = sub_1D5AAD6EC();
  v4 = v3 * 1000.0;
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 < 9.22337204e18)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
    sub_1D5AAEDFC();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D58D905C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  sub_1D58DA128(a1, (uint64_t)v14, &qword_1ED9CD648, (uint64_t)&type metadata for UserBundleSubscriptionContextData);
  v5 = v14[0];
  v11 = v14[1];
  v7 = v14[2];
  v6 = v15;
  v8 = v17;
  v13 = v16;
  v12 = v18;
  sub_1D58DA128(a1, (uint64_t)v19, &qword_1ED9CD648, (uint64_t)&type metadata for UserBundleSubscriptionContextData);
  if (v20 == 1)
  {
    sub_1D5AAEB80();
    swift_bridgeObjectRelease();
    sub_1D5AAD710();
    sub_1D57A8DE4(&qword_1EFF4BE58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    sub_1D5AAEDA8();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D5AAE898();
    sub_1D5AAE79C();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D58DA0E4();
    swift_allocError();
    *v9 = 0xD00000000000003FLL;
    v9[1] = 0x80000001D5AEEF00;
    return swift_willThrow();
  }
  else
  {
    *(_BYTE *)a3 = v5;
    *(_QWORD *)(a3 + 8) = v11;
    *(_QWORD *)(a3 + 16) = v7;
    *(_BYTE *)(a3 + 24) = v6 & 1;
    *(_BYTE *)(a3 + 25) = HIBYTE(v6) & 1;
    *(_QWORD *)(a3 + 32) = v13;
    *(_QWORD *)(a3 + 40) = v8;
    *(_BYTE *)(a3 + 48) = v12;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1D58D9260@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[7];
  _BYTE v14[8];
  uint64_t v15;

  sub_1D58DA128(a1, (uint64_t)v13, &qword_1ED9CD298, (uint64_t)&type metadata for SubscriptionData);
  v4 = v13[0];
  v5 = v13[1];
  v6 = v13[2];
  v7 = v13[5];
  v11 = v13[3];
  v12 = v13[4];
  v8 = v13[6];
  sub_1D58DA128(a1, (uint64_t)v14, &qword_1ED9CD298, (uint64_t)&type metadata for SubscriptionData);
  if (v15)
  {
    *a2 = v4;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v11;
    a2[4] = v12;
    a2[5] = v7;
    a2[6] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_1D5AAEB80();
    swift_bridgeObjectRelease();
    sub_1D5AAD710();
    sub_1D57A8DE4(&qword_1EFF4BE58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    sub_1D5AAEDA8();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D5AAE898();
    sub_1D5AAE79C();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D58DA0E4();
    swift_allocError();
    *v10 = 0xD00000000000002ELL;
    v10[1] = 0x80000001D5AEEEA0;
    return swift_willThrow();
  }
}

uint64_t sub_1D58D9464@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64x2_t v3;
  int16x8_t v4;
  _QWORD *v6;

  if (a1)
  {
    *(_QWORD *)a3 = a1;
    *(_BYTE *)(a3 + 8) = a2 & 1;
    v3 = (uint64x2_t)vdupq_n_s64(a2);
    v4 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1D5AC5830), (int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1D5AC5820));
    *(int8x8_t *)v4.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v4), (int8x8_t)0x1000100010001);
    *(_DWORD *)(a3 + 9) = vmovn_s16(v4).u32[0];
    *(_BYTE *)(a3 + 13) = BYTE5(a2);
    *(_BYTE *)(a3 + 14) = BYTE6(a2);
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_1D5AAEB80();
    swift_bridgeObjectRelease();
    sub_1D5AAD710();
    sub_1D57A8DE4(&qword_1EFF4BE58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    sub_1D5AAEDA8();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D5AAE898();
    sub_1D5AAE79C();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D58DA0E4();
    swift_allocError();
    *v6 = 0xD000000000000036;
    v6[1] = 0x80000001D5AEEE60;
    return swift_willThrow();
  }
}

uint64_t sub_1D58D9604@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  _QWORD *v2;

  if ((result & 0x100000000) != 0)
  {
    sub_1D5AAEB80();
    swift_bridgeObjectRelease();
    sub_1D5AAD710();
    sub_1D57A8DE4(&qword_1EFF4BE58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    sub_1D5AAEDA8();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D5AAE898();
    sub_1D5AAE79C();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D58DA0E4();
    swift_allocError();
    *v2 = 0xD000000000000030;
    v2[1] = 0x80000001D5AEEE20;
    return swift_willThrow();
  }
  else
  {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1D58D9758@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  if (a1)
  {
    *a2 = a1;
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_1D5AAEB80();
    swift_bridgeObjectRelease();
    sub_1D5AAD710();
    sub_1D57A8DE4(&qword_1EFF4BE58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    sub_1D5AAEDA8();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D5AAE898();
    sub_1D5AAE79C();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D58DA0E4();
    swift_allocError();
    *v3 = 0xD000000000000036;
    v3[1] = 0x80000001D5AEEDE0;
    return swift_willThrow();
  }
}

uint64_t FlushAnalyticsBatchesStartupTask.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t FlushAnalyticsBatchesStartupTask.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FlushAnalyticsBatchesStartupTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FlushAnalyticsBatchesStartupTask.run(launchOptions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

void sub_1D58D9918()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CC658)
  {
    v0 = sub_1D5AAE7A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CC658);
  }
}

unint64_t sub_1D58D9980()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = qword_1ED9CD688;
  if (!qword_1ED9CD688)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7F88];
    sub_1D57B1F4C(255, &qword_1ED9CD078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7F88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v3 = v2;
    v4 = sub_1D57A8DE4(&qword_1ED9CD0C0, v1, MEMORY[0x1E0CF7F98]);
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DEAF40], v3, &v4);
    atomic_store(result, (unint64_t *)&qword_1ED9CD688);
  }
  return result;
}

unint64_t sub_1D58D9A10()
{
  unint64_t result;

  result = qword_1ED9CC3F8;
  if (!qword_1ED9CC3F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD07E8, &type metadata for Session);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3F8);
  }
  return result;
}

_QWORD *sub_1D58D9A54(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v14 = a1[5];
  v15 = a1[4];
  v12 = a1[7];
  v13 = a1[6];
  v10 = a1[9];
  v11 = a1[8];
  v8 = a1[11];
  v9 = a1[10];
  v2 = a1[16];
  v3 = a1[17];
  v6 = a1[26];
  v7 = a1[25];
  v5 = a1[27];
  v16 = a1[37];
  v17 = a1[36];
  v18 = a1[41];
  v19 = a1[40];
  v20 = a1[48];
  v21 = a1[47];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D58D9C70(v15, v14, v13, v12, v11, v10, v9, v8);
  sub_1D58D9CDC(v2, v3);
  sub_1D58D9D0C(v7, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D57EA700(v17, v16);
  sub_1D58D9D40(v19, v18);
  sub_1D58D9D7C(v21, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D58D9C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D58D9CDC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D58D9D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D58D9D40(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D58D9D7C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D58D9DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1D58D9E0C()
{
  unint64_t result;

  result = qword_1ED9CD0F0;
  if (!qword_1ED9CD0F0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CD0F0);
  }
  return result;
}

uint64_t sub_1D58D9E60(uint64_t result)
{
  _QWORD *v1;

  if (!result)
  {
    sub_1D5AAEB80();
    swift_bridgeObjectRelease();
    sub_1D5AAD710();
    sub_1D57A8DE4(&qword_1EFF4BE58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    sub_1D5AAEDA8();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D5AAE898();
    sub_1D5AAE79C();
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    sub_1D58DA0E4();
    swift_allocError();
    *v1 = 0xD000000000000022;
    v1[1] = 0x80000001D5AEEED0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D58D9FB0()
{
  return sub_1D57A8DE4(&qword_1EFF4BE48, type metadata accessor for SportsSessionEndEvent, (uint64_t)&protocol conformance descriptor for SportsSessionEndEvent);
}

uint64_t sub_1D58D9FCC(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1D57B1FB8(255, a2, a3, a4);
    result = MEMORY[0x1D8279680](MEMORY[0x1E0CF8068], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1D58DA048(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

double sub_1D58DA0A4(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 319) = 0;
  *(_BYTE *)(a1 + 323) = 1;
  return result;
}

unint64_t sub_1D58DA0E4()
{
  unint64_t result;

  result = qword_1EFF4BE60;
  if (!qword_1EFF4BE60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC58D0, &type metadata for FlushAnalyticsBatchesStartupTask.Errors);
    atomic_store(result, (unint64_t *)&qword_1EFF4BE60);
  }
  return result;
}

uint64_t sub_1D58DA128(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1D57C5CCC(0, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1D58DA180()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D58DA1A4()
{
  uint64_t v0;

  return sub_1D5A299C4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1D58DA1AC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

ValueMetadata *type metadata accessor for FlushAnalyticsBatchesStartupTask.Errors()
{
  return &type metadata for FlushAnalyticsBatchesStartupTask.Errors;
}

uint64_t sub_1D58DA1E0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4BE68, MEMORY[0x1E0CF8078]);
}

uint64_t static IssueTocViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47158, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4BE68, a1);
}

uint64_t sub_1D58DA220(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4BE80, MEMORY[0x1E0CF8380]);
}

uint64_t static IssueTocViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47160, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4BE80, a1);
}

uint64_t IssueTocViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t IssueTocViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*IssueTocViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t IssueTocViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for IssueTocViewEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C94C8);
}

uint64_t IssueTocViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueTocViewEvent.channelData.modify())()
{
  type metadata accessor for IssueTocViewEvent(0);
  return nullsub_1;
}

uint64_t IssueTocViewEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueTocViewEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueTocViewEvent.issueData.modify())()
{
  type metadata accessor for IssueTocViewEvent(0);
  return nullsub_1;
}

uint64_t IssueTocViewEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueTocViewEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueTocViewEvent.issueViewData.modify())()
{
  type metadata accessor for IssueTocViewEvent(0);
  return nullsub_1;
}

uint64_t IssueTocViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D58DAC70(type metadata accessor for IssueTocViewEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t IssueTocViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 32);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueTocViewEvent.timedData.modify())()
{
  type metadata accessor for IssueTocViewEvent(0);
  return nullsub_1;
}

uint64_t IssueTocViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueTocViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueTocViewEvent.feedData.modify())()
{
  type metadata accessor for IssueTocViewEvent(0);
  return nullsub_1;
}

uint64_t IssueTocViewEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueTocViewEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueTocViewEvent.userChannelContextData.modify())()
{
  type metadata accessor for IssueTocViewEvent(0);
  return nullsub_1;
}

uint64_t IssueTocViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueTocViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueTocViewEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for IssueTocViewEvent(0);
  return nullsub_1;
}

uint64_t IssueTocViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for IssueTocViewEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  v14 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
}

uint64_t IssueTocViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t IssueTocViewEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for IssueTocViewEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9420);
}

uint64_t IssueTocViewEvent.Model.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for IssueTocViewEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t IssueTocViewEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IssueTocViewEvent.Model(0) + 28));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t IssueTocViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D58DAC70(type metadata accessor for IssueTocViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t sub_1D58DAC70@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 32);
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t IssueTocViewEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IssueTocViewEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t IssueTocViewEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for IssueTocViewEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 40));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t IssueTocViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for IssueTocViewEvent.Model(0) + 44));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 IssueTocViewEvent.Model.init(eventData:channelData:issueData:issueViewData:timedData:feedData:userChannelContextData:userBundleSubscriptionContextData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, __n128 *a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 *v26;
  __n128 result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  __n128 v36;
  __int16 v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v11 = *a2;
  v12 = a2[1];
  v13 = *((_BYTE *)a2 + 16);
  v14 = *((_BYTE *)a2 + 17);
  v15 = a2[3];
  v16 = a2[4];
  v17 = *a3;
  v18 = a3[1];
  v31 = *((_BYTE *)a3 + 17);
  v32 = *((_BYTE *)a3 + 16);
  v30 = a3[3];
  v33 = a4[1];
  v34 = *a4;
  v36 = *a6;
  v35 = a6[1].n128_u64[0];
  v38 = a7[1];
  v39 = *a7;
  v37 = *((_WORD *)a7 + 1);
  v47 = *a8;
  v46 = *((_QWORD *)a8 + 1);
  v45 = *((_QWORD *)a8 + 2);
  v43 = a8[25];
  v44 = a8[24];
  v41 = *((_QWORD *)a8 + 5);
  v42 = *((_QWORD *)a8 + 4);
  v40 = a8[48];
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)type metadata accessor for IssueTocViewEvent.Model(0);
  v21 = a9 + v20[5];
  *(_QWORD *)v21 = v11;
  *(_QWORD *)(v21 + 8) = v12;
  *(_BYTE *)(v21 + 16) = v13;
  *(_BYTE *)(v21 + 17) = v14;
  *(_QWORD *)(v21 + 24) = v15;
  *(_QWORD *)(v21 + 32) = v16;
  v22 = a9 + v20[6];
  *(_QWORD *)v22 = v17;
  *(_QWORD *)(v22 + 8) = v18;
  *(_BYTE *)(v22 + 16) = v32;
  *(_BYTE *)(v22 + 17) = v31;
  *(_QWORD *)(v22 + 24) = v30;
  v23 = (_QWORD *)(a9 + v20[7]);
  *v23 = v34;
  v23[1] = v33;
  v24 = a9 + v20[8];
  v25 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a5, v25);
  v26 = (__n128 *)(a9 + v20[9]);
  result = v36;
  *v26 = v36;
  v26[1].n128_u64[0] = v35;
  v28 = a9 + v20[10];
  *(_BYTE *)v28 = v39;
  *(_BYTE *)(v28 + 1) = v38;
  *(_WORD *)(v28 + 2) = v37;
  v29 = a9 + v20[11];
  *(_BYTE *)v29 = v47;
  *(_QWORD *)(v29 + 8) = v46;
  *(_QWORD *)(v29 + 16) = v45;
  *(_BYTE *)(v29 + 24) = v44;
  *(_BYTE *)(v29 + 25) = v43;
  *(_QWORD *)(v29 + 32) = v42;
  *(_QWORD *)(v29 + 40) = v41;
  *(_BYTE *)(v29 + 48) = v40;
  return result;
}

uint64_t sub_1D58DAFA4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58DAFDC + 4 * byte_1D5AC5910[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58DAFDC()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1D58DAFFC()
{
  return 0x7461446575737369;
}

uint64_t sub_1D58DB010()
{
  return 0x6569566575737369;
}

uint64_t sub_1D58DB034()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D58DB048()
{
  return 0x6174614464656566;
}

unint64_t sub_1D58DB060()
{
  return 0xD000000000000016;
}

unint64_t sub_1D58DB07C()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58DB09C()
{
  unsigned __int8 *v0;

  return sub_1D58DAFA4(*v0);
}

uint64_t sub_1D58DB0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58DE0C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58DB0C8()
{
  sub_1D58DB4C8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58DB0F0()
{
  sub_1D58DB4C8();
  return sub_1D5AAEEE0();
}

uint64_t IssueTocViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  _BYTE v37[24];
  uint64_t v38;
  __int128 v39;
  char v40;
  char v41;

  v3 = v1;
  sub_1D58DBBD8(0, &qword_1EFF4BE98, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v37[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58DB4C8();
  sub_1D5AAEEC8();
  v37[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for IssueTocViewEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    v14 = *((_BYTE *)v11 + 16);
    v15 = *((_BYTE *)v11 + 17);
    v17 = v11[3];
    v16 = v11[4];
    *(_QWORD *)v37 = v12;
    *(_QWORD *)&v37[8] = v13;
    v37[16] = v14;
    v37[17] = v15;
    v38 = v17;
    *(_QWORD *)&v39 = v16;
    v41 = 1;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v18 = (uint64_t *)(v3 + v10[6]);
    v19 = *v18;
    v20 = v18[1];
    v21 = *((_BYTE *)v18 + 16);
    v22 = *((_BYTE *)v18 + 17);
    v23 = v18[3];
    *(_QWORD *)v37 = v19;
    *(_QWORD *)&v37[8] = v20;
    v37[16] = v21;
    v37[17] = v22;
    v38 = v23;
    v41 = 2;
    sub_1D57C5F1C();
    sub_1D5AAED6C();
    v24 = (uint64_t *)(v3 + v10[7]);
    v26 = *v24;
    v25 = v24[1];
    *(_QWORD *)v37 = v26;
    *(_QWORD *)&v37[8] = v25;
    v41 = 3;
    sub_1D57CAD6C();
    sub_1D5AAED6C();
    v37[0] = 4;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v27 = v3 + v10[9];
    v28 = *(_QWORD *)(v27 + 16);
    *(_OWORD *)v37 = *(_OWORD *)v27;
    *(_QWORD *)&v37[16] = v28;
    v41 = 5;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v29 = (char *)(v3 + v10[10]);
    v30 = *v29;
    v31 = v29[1];
    LOWORD(v29) = *((_WORD *)v29 + 1);
    v37[0] = v30;
    v37[1] = v31;
    *(_WORD *)&v37[2] = (_WORD)v29;
    v41 = 6;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v32 = v3 + v10[11];
    v33 = *(_BYTE *)(v32 + 24);
    v34 = *(_BYTE *)(v32 + 25);
    v35 = *(_BYTE *)(v32 + 48);
    v37[0] = *(_BYTE *)v32;
    *(_OWORD *)&v37[8] = *(_OWORD *)(v32 + 8);
    LOBYTE(v38) = v33;
    BYTE1(v38) = v34;
    v39 = *(_OWORD *)(v32 + 32);
    v40 = v35;
    v41 = 7;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58DB4C8()
{
  unint64_t result;

  result = qword_1EFF4BEA0;
  if (!qword_1EFF4BEA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5B9C, &type metadata for IssueTocViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BEA0);
  }
  return result;
}

uint64_t IssueTocViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int16 v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  _BYTE v55[24];
  uint64_t v56;
  __int128 v57;
  char v58;
  char v59;

  v46 = a2;
  v50 = sub_1D5AADFB0();
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADF98();
  v49 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58DBBD8(0, &qword_1EFF4BEA8, MEMORY[0x1E0DED048]);
  v48 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v45 - v11;
  v54 = type metadata accessor for IssueTocViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v54);
  v52 = a1;
  v53 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58DB4C8();
  v51 = v12;
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  v14 = v5;
  v15 = v10;
  v55[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v16 = v6;
  v17 = (uint64_t)v53;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v53, v8, v16);
  v59 = 1;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v18 = *(_QWORD *)&v55[8];
  v19 = v55[16];
  v20 = v55[17];
  v21 = v56;
  v22 = v57;
  v23 = (int *)v54;
  v24 = v17 + *(int *)(v54 + 20);
  *(_QWORD *)v24 = *(_QWORD *)v55;
  *(_QWORD *)(v24 + 8) = v18;
  *(_BYTE *)(v24 + 16) = v19;
  *(_BYTE *)(v24 + 17) = v20;
  *(_QWORD *)(v24 + 24) = v21;
  *(_QWORD *)(v24 + 32) = v22;
  v59 = 2;
  sub_1D57C5ED8();
  sub_1D5AAECD0();
  v25 = (uint64_t)v52;
  v26 = *(_QWORD *)&v55[8];
  v27 = v55[16];
  v28 = v55[17];
  v29 = v56;
  v30 = v17 + v23[6];
  *(_QWORD *)v30 = *(_QWORD *)v55;
  *(_QWORD *)(v30 + 8) = v26;
  *(_BYTE *)(v30 + 16) = v27;
  *(_BYTE *)(v30 + 17) = v28;
  *(_QWORD *)(v30 + 24) = v29;
  v59 = 3;
  sub_1D57CAD28();
  sub_1D5AAECD0();
  v45 = v16;
  v31 = *(_QWORD *)&v55[8];
  v32 = (_QWORD *)(v17 + v23[7]);
  *v32 = *(_QWORD *)v55;
  v32[1] = v31;
  v55[0] = 4;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v33 = v50;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v17 + v23[8], v14, v33);
  v59 = 5;
  sub_1D57C6590();
  v34 = v48;
  sub_1D5AAEC7C();
  v35 = *(_QWORD *)&v55[16];
  v36 = v17 + v23[9];
  *(_OWORD *)v36 = *(_OWORD *)v55;
  *(_QWORD *)(v36 + 16) = v35;
  v59 = 6;
  sub_1D57C7AE0();
  sub_1D5AAECD0();
  v37 = v55[1];
  v38 = *(_WORD *)&v55[2];
  v39 = v17 + v23[10];
  *(_BYTE *)v39 = v55[0];
  *(_BYTE *)(v39 + 1) = v37;
  *(_WORD *)(v39 + 2) = v38;
  v59 = 7;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v51, v34);
  v40 = v56;
  v41 = BYTE1(v56);
  v42 = v58;
  v43 = v17 + *(int *)(v54 + 44);
  *(_BYTE *)v43 = v55[0];
  *(_OWORD *)(v43 + 8) = *(_OWORD *)&v55[8];
  *(_BYTE *)(v43 + 24) = v40;
  *(_BYTE *)(v43 + 25) = v41;
  *(_OWORD *)(v43 + 32) = v57;
  *(_BYTE *)(v43 + 48) = v42;
  sub_1D58DBC34(v17, v46);
  __swift_destroy_boxed_opaque_existential_1(v25);
  return sub_1D58DBC78(v17);
}

void sub_1D58DBBD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58DB4C8();
    v7 = a3(a1, &type metadata for IssueTocViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58DBC34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IssueTocViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58DBC78(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IssueTocViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58DBCB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IssueTocViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58DBCC8(_QWORD *a1)
{
  return IssueTocViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58DBCDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47158, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4BE68, a1);
}

uint64_t sub_1D58DBD00@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47160, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4BE80, a1);
}

uint64_t sub_1D58DBD24@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  v15 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for IssueTocViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for IssueTocViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for IssueTocViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for IssueTocViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for IssueTocViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for IssueTocViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueTocViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58DCD10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D57A8C9C();
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for IssueTocViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58DCF28(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D57A8C9C();
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58DD13C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
        if (v3 <= 0x3F)
        {
          sub_1D57A8C9C();
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for IssueTocViewEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  char *v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 4) = v13;
    v14 = (char *)a1 + v9;
    v15 = (char *)a2 + v9;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v14[16] = v15[16];
    v14[17] = v15[17];
    *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
    v17 = a3[7];
    v18 = a3[8];
    v19 = (uint64_t *)((char *)a1 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v35 = (char *)a1 + v18;
    v36 = (char *)a2 + v18;
    v22 = sub_1D5AADFB0();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v35, v36, v22);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = *((_QWORD *)v26 + 2);
    if (v27 == 1)
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
    }
    else
    {
      *v25 = *v26;
      *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
      *((_QWORD *)v25 + 2) = v27;
      swift_bridgeObjectRetain();
    }
    v29 = a3[11];
    *(_DWORD *)((char *)a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    *v30 = *v31;
    v32 = *((_QWORD *)v31 + 2);
    *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
    *((_QWORD *)v30 + 2) = v32;
    *((_WORD *)v30 + 12) = *((_WORD *)v31 + 12);
    v33 = *((_QWORD *)v31 + 5);
    *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
    *((_QWORD *)v30 + 5) = v33;
    v30[48] = v31[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for IssueTocViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 36) + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IssueTocViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 32) = v12;
  v13 = a1 + v8;
  v14 = a2 + v8;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v33 = a1 + v17;
  v34 = a2 + v17;
  v21 = sub_1D5AADFB0();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v33, v34, v21);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)(v25 + 16);
  if (v26 == 1)
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  }
  else
  {
    *(_BYTE *)v24 = *(_BYTE *)v25;
    *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
    *(_QWORD *)(v24 + 16) = v26;
    swift_bridgeObjectRetain();
  }
  v27 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  v30 = *(_QWORD *)(v29 + 16);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v28 + 16) = v30;
  *(_WORD *)(v28 + 24) = *(_WORD *)(v29 + 24);
  v31 = *(_QWORD *)(v29 + 40);
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  *(_QWORD *)(v28 + 40) = v31;
  *(_BYTE *)(v28 + 48) = *(_BYTE *)(v29 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IssueTocViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_BYTE *)(v11 + 17) = *(_BYTE *)(v12 + 17);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = (__int128 *)(a2 + v20);
  v23 = *(_QWORD *)(a1 + v20 + 16);
  v24 = *(_QWORD *)(a2 + v20 + 16);
  if (v23 == 1)
  {
    if (v24 == 1)
    {
      v25 = *v22;
      *(_QWORD *)(v21 + 16) = *((_QWORD *)v22 + 2);
      *(_OWORD *)v21 = v25;
    }
    else
    {
      *(_BYTE *)v21 = *(_BYTE *)v22;
      *(_QWORD *)(v21 + 8) = *((_QWORD *)v22 + 1);
      *(_QWORD *)(v21 + 16) = *((_QWORD *)v22 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v24 == 1)
  {
    sub_1D57D9100(v21);
    v26 = *((_QWORD *)v22 + 2);
    *(_OWORD *)v21 = *v22;
    *(_QWORD *)(v21 + 16) = v26;
  }
  else
  {
    *(_BYTE *)v21 = *(_BYTE *)v22;
    *(_QWORD *)(v21 + 8) = *((_QWORD *)v22 + 1);
    *(_QWORD *)(v21 + 16) = *((_QWORD *)v22 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v27 = a3[10];
  v28 = (_BYTE *)(a1 + v27);
  v29 = (_BYTE *)(a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  v28[2] = v29[2];
  v28[3] = v29[3];
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_BYTE *)v31 = *(_BYTE *)(a2 + v30);
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(a2 + v30 + 8);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(a2 + v30 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v31 + 24) = *(_BYTE *)(v32 + 24);
  *(_BYTE *)(v31 + 25) = *(_BYTE *)(v32 + 25);
  *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
  *(_QWORD *)(v31 + 40) = *(_QWORD *)(v32 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v31 + 48) = *(_BYTE *)(v32 + 48);
  return a1;
}

uint64_t initializeWithTake for IssueTocViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  v12 = v10[1];
  *(_QWORD *)(v9 + 32) = *((_QWORD *)v10 + 4);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = (_OWORD *)(a1 + v8);
  v14 = (_OWORD *)(a2 + v8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = a3[9];
  v21 = a3[10];
  v22 = a1 + v20;
  v23 = (__int128 *)(a2 + v20);
  v24 = *v23;
  *(_QWORD *)(v22 + 16) = *((_QWORD *)v23 + 2);
  *(_OWORD *)v22 = v24;
  *(_DWORD *)(a1 + v21) = *(_DWORD *)(a2 + v21);
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_BYTE *)(v26 + 48) = *(_BYTE *)(v27 + 48);
  return a1;
}

uint64_t assignWithTake for IssueTocViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  v11 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = a3[9];
  v26 = a1 + v25;
  v27 = a2 + v25;
  if (*(_QWORD *)(a1 + v25 + 16) != 1)
  {
    v28 = *(_QWORD *)(v27 + 16);
    if (v28 != 1)
    {
      *(_BYTE *)v26 = *(_BYTE *)v27;
      *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
      *(_QWORD *)(v26 + 16) = v28;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57D9100(v26);
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
LABEL_6:
  v29 = a3[10];
  v30 = a3[11];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_BYTE *)v31 = *(_BYTE *)v32;
  *(_BYTE *)(v31 + 1) = *(_BYTE *)(v32 + 1);
  *(_WORD *)(v31 + 2) = *(_WORD *)(v32 + 2);
  v33 = a1 + v30;
  v34 = a2 + v30;
  *(_BYTE *)v33 = *(_BYTE *)v34;
  v35 = *(_QWORD *)(v34 + 16);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
  *(_QWORD *)(v33 + 16) = v35;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 24) = *(_BYTE *)(v34 + 24);
  *(_BYTE *)(v33 + 25) = *(_BYTE *)(v34 + 25);
  v36 = *(_QWORD *)(v34 + 40);
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  *(_QWORD *)(v33 + 40) = v36;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 48) = *(_BYTE *)(v34 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueTocViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58DDD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1D5AADFB0();
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueTocViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58DDDBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1D5AADFB0();
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D58DDE64()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IssueTocViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D58DDF6C + 4 * byte_1D5AC591D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D58DDFA0 + 4 * byte_1D5AC5918[v4]))();
}

uint64_t sub_1D58DDFA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58DDFA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58DDFB0);
  return result;
}

uint64_t sub_1D58DDFBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58DDFC4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D58DDFC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58DDFD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueTocViewEvent.Model.CodingKeys()
{
  return &type metadata for IssueTocViewEvent.Model.CodingKeys;
}

unint64_t sub_1D58DDFF0()
{
  unint64_t result;

  result = qword_1EFF4BEB0;
  if (!qword_1EFF4BEB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5B74, &type metadata for IssueTocViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BEB0);
  }
  return result;
}

unint64_t sub_1D58DE038()
{
  unint64_t result;

  result = qword_1EFF4BEB8;
  if (!qword_1EFF4BEB8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5AE4, &type metadata for IssueTocViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BEB8);
  }
  return result;
}

unint64_t sub_1D58DE080()
{
  unint64_t result;

  result = qword_1EFF4BEC0;
  if (!qword_1EFF4BEC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5B0C, &type metadata for IssueTocViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BEC0);
  }
  return result;
}

uint64_t sub_1D58DE0C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t ValidationEventProcessor.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1D5AADFD4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = swift_allocObject();
  sub_1D5AAE004();
  swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1D5AADFF8();
  *v3 = sub_1D58D84E8;
  v3[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB2FF8], v0);
  sub_1D5AADFE0();
  return v4;
}

uint64_t ValidationEventProcessor.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v1 = sub_1D5AADFD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5AAE004();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1D5AADFF8();
  *v4 = sub_1D58D84E8;
  v4[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DB2FF8], v1);
  sub_1D5AADFE0();
  return v0;
}

uint64_t ValidationEventProcessor.process<A>(processEvent:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  void *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t);
  int v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;

  v88 = a1;
  v71 = type metadata accessor for FeedViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v71);
  v72 = (char *)&v71 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, (unint64_t *)&qword_1ED9C7090, type metadata accessor for FeedViewEvent, &qword_1ED9C7AC8, (uint64_t)&protocol conformance descriptor for FeedViewEvent);
  v82 = v2;
  v76 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v75 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v79 = (char *)&v71 - v5;
  v73 = type metadata accessor for IssueExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v73);
  v74 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, &qword_1ED9C7058, type metadata accessor for IssueExposureEvent, &qword_1ED9C9EB8, (uint64_t)&protocol conformance descriptor for IssueExposureEvent);
  v86 = v7;
  v81 = *((_QWORD *)v7 - 1);
  v8 = MEMORY[0x1E0C80A78](v7);
  v80 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v83 = (char *)&v71 - v10;
  v77 = type metadata accessor for HeadlineExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v77);
  v78 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, &qword_1ED9C7068, type metadata accessor for HeadlineExposureEvent, &qword_1ED9CAA28, (uint64_t)&protocol conformance descriptor for HeadlineExposureEvent);
  v13 = v12;
  v85 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v84 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v71 - v16;
  v18 = type metadata accessor for ArticleViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, (unint64_t *)&qword_1ED9C7030, type metadata accessor for ArticleViewEvent, &qword_1ED9C8788, (uint64_t)&protocol conformance descriptor for ArticleViewEvent);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v71 - v27;
  v29 = sub_1D5AADAAC();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v71 - v30;
  v87 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))((char *)&v71 - v30, v88, v29);
  if (swift_dynamicCast())
  {
    v86 = v31;
    v88 = v29;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v26, v28, v22);
    v33 = (void *)sub_1D5AADA7C();
    v46 = sub_1D5AADE3C();
    v48 = v47;

    sub_1D57A8DE4((unint64_t *)&unk_1ED9C6938, type metadata accessor for ArticleViewEvent.Model, (uint64_t)&protocol conformance descriptor for ArticleViewEvent.Model);
    sub_1D5AADFEC();
    sub_1D57E69C4(v46, v48);
    sub_1D58DF104((uint64_t)v20);
    sub_1D5820E20((uint64_t)v20, type metadata accessor for ArticleViewEvent.Model);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v86, v88);
  }
  if (swift_dynamicCast())
  {
    v35 = v84;
    v34 = v85;
    (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v84, v17, v13);
    v36 = (void *)sub_1D5AADA7C();
    v53 = sub_1D5AADE3C();
    v55 = v54;
    v88 = v29;

    sub_1D57A8DE4(&qword_1ED9CA940, type metadata accessor for HeadlineExposureEvent.Model, (uint64_t)&protocol conformance descriptor for HeadlineExposureEvent.Model);
    v56 = (uint64_t)v78;
    sub_1D5AADFEC();
    sub_1D57E69C4(v53, v55);
    sub_1D58DF788(v56);
    sub_1D5820E20(v56, type metadata accessor for HeadlineExposureEvent.Model);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v31, v88);
  }
  v37 = v83;
  v38 = v86;
  if (!swift_dynamicCast())
  {
    v49 = v79;
    v50 = v82;
    if (!swift_dynamicCast())
      goto LABEL_9;
    v51 = v75;
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v49, v50);
    v52 = (void *)sub_1D5AADA7C();
    v58 = sub_1D5AADE3C();
    v60 = v59;

    sub_1D57A8DE4(&qword_1ED9C7A00, type metadata accessor for FeedViewEvent.Model, (uint64_t)&protocol conformance descriptor for FeedViewEvent.Model);
    v61 = (uint64_t)v72;
    v62 = v71;
    sub_1D5AADFEC();
    sub_1D57E69C4(v58, v60);
    v64 = *(unsigned __int8 *)(v61 + *(int *)(v62 + 24));
    v65 = v87;
    if (v64 == 1)
    {
      sub_1D58DEFD8(v61, 0xD000000000000031, 0x80000001D5AEEFD0, *(_QWORD *)(v61 + *(int *)(v62 + 52) + 8) == 0, (void (*)(_QWORD))type metadata accessor for FeedViewEvent.Model);
      v66 = v76;
    }
    else
    {
      v66 = v76;
      if (v64 == 6)
      {
        v67 = *(_QWORD *)(v61 + *(int *)(v62 + 52) + 8) != 0;
        v70 = 0xD00000000000002DLL;
        v68 = 0x80000001D5AEEF70;
        v69 = v61;
        goto LABEL_18;
      }
      if (v64 == 7)
      {
        v67 = *(_QWORD *)(v61 + *(int *)(v62 + 52) + 8) != 0;
        v68 = 0x80000001D5AEEFA0;
        v69 = v61;
        v70 = 0xD000000000000028;
LABEL_18:
        sub_1D58DEFD8(v69, v70, v68, v67, (void (*)(_QWORD))type metadata accessor for FeedViewEvent.Model);
      }
    }
    sub_1D5820E20(v61, type metadata accessor for FeedViewEvent.Model);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v51, v50);
    v63 = *(uint64_t (**)(char *, uint64_t))(v65 + 8);
    return v63(v31, v29);
  }
  v40 = v80;
  v39 = v81;
  (*(void (**)(char *, char *, char *))(v81 + 32))(v80, v37, v38);
  v41 = (void *)sub_1D5AADA7C();
  v42 = sub_1D5AADE3C();
  v44 = v43;

  sub_1D57A8DE4(&qword_1ED9C9DF8, type metadata accessor for IssueExposureEvent.Model, (uint64_t)&protocol conformance descriptor for IssueExposureEvent.Model);
  v45 = (uint64_t)v74;
  sub_1D5AADFEC();
  sub_1D57E69C4(v42, v44);
  sub_1D58DFCE8(v45);
  sub_1D5820E20(v45, type metadata accessor for IssueExposureEvent.Model);
  (*(void (**)(char *, char *))(v39 + 8))(v40, v38);
LABEL_9:
  v63 = *(uint64_t (**)(char *, uint64_t))(v87 + 8);
  return v63(v31, v29);
}

uint64_t ValidationEventProcessor.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ValidationEventProcessor.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1D58DEFD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(_QWORD))
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  if ((a4 & 1) == 0)
  {
    sub_1D57B3530();
    v8 = (void *)sub_1D5AAEAC0();
    sub_1D5AAEA18();
    sub_1D57B34CC();
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1D5ABF230;
    v10 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    v11 = sub_1D57B356C();
    *(_QWORD *)(v9 + 64) = v11;
    *(_QWORD *)(v9 + 32) = a2;
    *(_QWORD *)(v9 + 40) = a3;
    a5(0);
    swift_bridgeObjectRetain();
    sub_1D5AAEBEC();
    *(_QWORD *)(v9 + 96) = v10;
    *(_QWORD *)(v9 + 104) = v11;
    *(_QWORD *)(v9 + 72) = 0;
    *(_QWORD *)(v9 + 80) = 0xE000000000000000;
    sub_1D5AAE328();

    swift_bridgeObjectRelease();
  }
}

void sub_1D58DF104(uint64_t a1)
{
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  const char *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = type metadata accessor for ArticleViewEvent.Model(0);
  v3 = (unsigned __int8 *)(a1 + *(int *)(v2 + 40));
  if (*((_QWORD *)v3 + 2) != 1)
  {
    v4 = v2;
    v5 = *v3;
    switch(v5)
    {
      case 9:
        v33 = sub_1D5AADF8C();
        v34 = v10;
        v31 = 0xD000000000000016;
        v32 = 0x80000001D5AEB590;
        sub_1D57BF634();
        v11 = sub_1D5AAEB14();
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
          return;
        sub_1D57DD5B8(a1 + *(int *)(v4 + 44), (uint64_t)&v31);
        v12 = sub_1D58E00E0((uint64_t)&v31) == 0;
        sub_1D58DEFD8(a1, 0xD00000000000003CLL, 0x80000001D5AEF040, v12, (void (*)(_QWORD))type metadata accessor for ArticleViewEvent.Model);
        sub_1D57DD5B8((uint64_t)&v31, (uint64_t)&v33);
        if (sub_1D58E00E0((uint64_t)&v33) == 1)
        {
          v13 = 0;
        }
        else
        {
          v30 = BYTE1(v33);
          if (GroupType.rawValue.getter() == 0x6E776F6E6B6E75 && v19 == 0xE700000000000000)
          {
            swift_bridgeObjectRelease();
            v13 = 1;
          }
          else
          {
            v13 = sub_1D5AAEDE4();
            swift_bridgeObjectRelease();
          }
        }
        sub_1D58DEFD8(a1, 0xD000000000000049, 0x80000001D5AEF080, (v13 & 1) == 0, (void (*)(_QWORD))type metadata accessor for ArticleViewEvent.Model);
        sub_1D57DD5B8((uint64_t)&v31, (uint64_t)&v30);
        if (sub_1D58E00E0((uint64_t)&v30) == 1)
        {
          v23 = 0;
        }
        else if (GroupType.rawValue.getter() == 25697 && v24 == 0xE200000000000000)
        {
          swift_bridgeObjectRelease();
          v23 = 1;
        }
        else
        {
          v23 = sub_1D5AAEDE4();
          swift_bridgeObjectRelease();
        }
        v27 = 0xD000000000000044;
        v28 = (v23 & 1) == 0;
        v29 = "End of Article headline exposure events must not have ad group types";
        goto LABEL_47;
      case 2:
        v33 = sub_1D5AADF8C();
        v34 = v14;
        v31 = 0xD000000000000016;
        v32 = 0x80000001D5AEB590;
        sub_1D57BF634();
        v15 = sub_1D5AAEB14();
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
          return;
        sub_1D57DD5B8(a1 + *(int *)(v4 + 44), (uint64_t)&v31);
        v16 = sub_1D58E00E0((uint64_t)&v31) == 0;
        sub_1D58DEFD8(a1, 0xD000000000000036, 0x80000001D5AEF120, v16, (void (*)(_QWORD))type metadata accessor for ArticleViewEvent.Model);
        sub_1D57DD5B8((uint64_t)&v31, (uint64_t)&v33);
        if (sub_1D58E00E0((uint64_t)&v33) == 1)
        {
          v17 = 0;
        }
        else
        {
          v30 = BYTE1(v33);
          if (GroupType.rawValue.getter() == 0x6E776F6E6B6E75 && v20 == 0xE700000000000000)
          {
            swift_bridgeObjectRelease();
            v17 = 1;
          }
          else
          {
            v17 = sub_1D5AAEDE4();
            swift_bridgeObjectRelease();
          }
        }
        sub_1D58DEFD8(a1, 0xD000000000000043, 0x80000001D5AEF160, (v17 & 1) == 0, (void (*)(_QWORD))type metadata accessor for ArticleViewEvent.Model);
        sub_1D57DD5B8((uint64_t)&v31, (uint64_t)&v30);
        if (sub_1D58E00E0((uint64_t)&v30) == 1)
        {
          v25 = 0;
        }
        else if (GroupType.rawValue.getter() == 25697 && v26 == 0xE200000000000000)
        {
          swift_bridgeObjectRelease();
          v25 = 1;
        }
        else
        {
          v25 = sub_1D5AAEDE4();
          swift_bridgeObjectRelease();
        }
        v27 = 0xD00000000000003ELL;
        v28 = (v25 & 1) == 0;
        v29 = "Magazine feed article view events must not have ad group types";
        goto LABEL_47;
      case 1:
        v33 = sub_1D5AADF8C();
        v34 = v6;
        v31 = 0xD000000000000016;
        v32 = 0x80000001D5AEB590;
        sub_1D57BF634();
        v7 = sub_1D5AAEB14();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          sub_1D57DD5B8(a1 + *(int *)(v4 + 44), (uint64_t)&v31);
          v8 = sub_1D58E00E0((uint64_t)&v31) == 0;
          sub_1D58DEFD8(a1, 0xD000000000000033, 0x80000001D5AEF1F0, v8, (void (*)(_QWORD))type metadata accessor for ArticleViewEvent.Model);
          sub_1D57DD5B8((uint64_t)&v31, (uint64_t)&v33);
          if (sub_1D58E00E0((uint64_t)&v33) == 1)
          {
            v9 = 0;
          }
          else
          {
            v30 = BYTE1(v33);
            if (GroupType.rawValue.getter() == 0x6E776F6E6B6E75 && v18 == 0xE700000000000000)
            {
              swift_bridgeObjectRelease();
              v9 = 1;
            }
            else
            {
              v9 = sub_1D5AAEDE4();
              swift_bridgeObjectRelease();
            }
          }
          sub_1D58DEFD8(a1, 0xD000000000000040, 0x80000001D5AEF230, (v9 & 1) == 0, (void (*)(_QWORD))type metadata accessor for ArticleViewEvent.Model);
          sub_1D57DD5B8((uint64_t)&v31, (uint64_t)&v30);
          if (sub_1D58E00E0((uint64_t)&v30) == 1)
          {
            v21 = 0;
          }
          else if (GroupType.rawValue.getter() == 25697 && v22 == 0xE200000000000000)
          {
            swift_bridgeObjectRelease();
            v21 = 1;
          }
          else
          {
            v21 = sub_1D5AAEDE4();
            swift_bridgeObjectRelease();
          }
          v27 = 0xD00000000000003BLL;
          v28 = (v21 & 1) == 0;
          v29 = "Today feed article view events must not have ad group types";
LABEL_47:
          sub_1D58DEFD8(a1, v27, (unint64_t)(v29 - 32) | 0x8000000000000000, v28, (void (*)(_QWORD))type metadata accessor for ArticleViewEvent.Model);
        }
        break;
    }
  }
}

void sub_1D58DF788(uint64_t a1)
{
  uint64_t v2;
  int v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  const char *v21;
  char v22;
  _BYTE v23[136];
  char v24;
  char v25;

  v2 = type metadata accessor for HeadlineExposureEvent.Model(0);
  v3 = *(unsigned __int8 *)(a1 + *(int *)(v2 + 40));
  switch(v3)
  {
    case 9:
      sub_1D57DD5B8(a1 + *(int *)(v2 + 44), (uint64_t)v23);
      v6 = sub_1D58E00E0((uint64_t)v23) == 0;
      sub_1D58DEFD8(a1, 0xD00000000000003CLL, 0x80000001D5AEF040, v6, (void (*)(_QWORD))type metadata accessor for HeadlineExposureEvent.Model);
      sub_1D57DD5B8((uint64_t)v23, (uint64_t)&v24);
      if (sub_1D58E00E0((uint64_t)&v24) == 1)
      {
        v7 = 0;
      }
      else
      {
        v22 = v25;
        if (GroupType.rawValue.getter() == 0x6E776F6E6B6E75 && v11 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          v7 = 1;
        }
        else
        {
          v7 = sub_1D5AAEDE4();
          swift_bridgeObjectRelease();
        }
      }
      sub_1D58DEFD8(a1, 0xD000000000000049, 0x80000001D5AEF080, (v7 & 1) == 0, (void (*)(_QWORD))type metadata accessor for HeadlineExposureEvent.Model);
      sub_1D57DD5B8((uint64_t)v23, (uint64_t)&v22);
      if (sub_1D58E00E0((uint64_t)&v22) == 1)
      {
        v15 = 0;
      }
      else if (GroupType.rawValue.getter() == 25697 && v16 == 0xE200000000000000)
      {
        swift_bridgeObjectRelease();
        v15 = 1;
      }
      else
      {
        v15 = sub_1D5AAEDE4();
        swift_bridgeObjectRelease();
      }
      v19 = 0xD000000000000044;
      v20 = (v15 & 1) == 0;
      v21 = "End of Article headline exposure events must not have ad group types";
      break;
    case 2:
      sub_1D57DD5B8(a1 + *(int *)(v2 + 44), (uint64_t)v23);
      v8 = sub_1D58E00E0((uint64_t)v23) == 0;
      sub_1D58DEFD8(a1, 0xD00000000000003BLL, 0x80000001D5AEF300, v8, (void (*)(_QWORD))type metadata accessor for HeadlineExposureEvent.Model);
      sub_1D57DD5B8((uint64_t)v23, (uint64_t)&v24);
      if (sub_1D58E00E0((uint64_t)&v24) == 1)
      {
        v9 = 0;
      }
      else
      {
        v22 = v25;
        if (GroupType.rawValue.getter() == 0x6E776F6E6B6E75 && v12 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          v9 = 1;
        }
        else
        {
          v9 = sub_1D5AAEDE4();
          swift_bridgeObjectRelease();
        }
      }
      sub_1D58DEFD8(a1, 0xD000000000000048, 0x80000001D5AEF340, (v9 & 1) == 0, (void (*)(_QWORD))type metadata accessor for HeadlineExposureEvent.Model);
      sub_1D57DD5B8((uint64_t)v23, (uint64_t)&v22);
      if (sub_1D58E00E0((uint64_t)&v22) == 1)
      {
        v17 = 0;
      }
      else if (GroupType.rawValue.getter() == 25697 && v18 == 0xE200000000000000)
      {
        swift_bridgeObjectRelease();
        v17 = 1;
      }
      else
      {
        v17 = sub_1D5AAEDE4();
        swift_bridgeObjectRelease();
      }
      v19 = 0xD000000000000043;
      v20 = (v17 & 1) == 0;
      v21 = "Magazine feed headline exposure events must not have ad group types";
      break;
    case 1:
      sub_1D57DD5B8(a1 + *(int *)(v2 + 44), (uint64_t)v23);
      v4 = sub_1D58E00E0((uint64_t)v23) == 0;
      sub_1D58DEFD8(a1, 0xD000000000000038, 0x80000001D5AEF3E0, v4, (void (*)(_QWORD))type metadata accessor for HeadlineExposureEvent.Model);
      sub_1D57DD5B8((uint64_t)v23, (uint64_t)&v24);
      if (sub_1D58E00E0((uint64_t)&v24) == 1)
      {
        v5 = 0;
      }
      else
      {
        v22 = v25;
        if (GroupType.rawValue.getter() == 0x6E776F6E6B6E75 && v10 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          v5 = 1;
        }
        else
        {
          v5 = sub_1D5AAEDE4();
          swift_bridgeObjectRelease();
        }
      }
      sub_1D58DEFD8(a1, 0xD000000000000045, 0x80000001D5AEF420, (v5 & 1) == 0, (void (*)(_QWORD))type metadata accessor for HeadlineExposureEvent.Model);
      sub_1D57DD5B8((uint64_t)v23, (uint64_t)&v22);
      if (sub_1D58E00E0((uint64_t)&v22) == 1)
      {
        v13 = 0;
      }
      else if (GroupType.rawValue.getter() == 25697 && v14 == 0xE200000000000000)
      {
        swift_bridgeObjectRelease();
        v13 = 1;
      }
      else
      {
        v13 = sub_1D5AAEDE4();
        swift_bridgeObjectRelease();
      }
      v19 = 0xD000000000000040;
      v20 = (v13 & 1) == 0;
      v21 = "Today feed headline exposure events must not have ad group types";
      break;
    default:
      return;
  }
  sub_1D58DEFD8(a1, v19, (unint64_t)(v21 - 32) | 0x8000000000000000, v20, (void (*)(_QWORD))type metadata accessor for HeadlineExposureEvent.Model);
}

void sub_1D58DFCE8(uint64_t a1)
{
  uint64_t v2;
  unsigned __int8 *v3;
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  const char *v17;
  char v18;
  _BYTE v19[136];
  char v20;
  char v21;

  v2 = type metadata accessor for IssueExposureEvent.Model(0);
  v3 = (unsigned __int8 *)(a1 + *(int *)(v2 + 28));
  if (*((_QWORD *)v3 + 2) != 1)
  {
    v4 = *v3;
    if (v4 == 2)
    {
      sub_1D57DD5B8(a1 + *(int *)(v2 + 32), (uint64_t)v19);
      v7 = sub_1D58E00E0((uint64_t)v19) == 0;
      sub_1D58DEFD8(a1, 0xD000000000000038, 0x80000001D5AEF4C0, v7, (void (*)(_QWORD))type metadata accessor for IssueExposureEvent.Model);
      sub_1D57DD5B8((uint64_t)v19, (uint64_t)&v20);
      if (sub_1D58E00E0((uint64_t)&v20) == 1)
      {
        v8 = 0;
      }
      else
      {
        v18 = v21;
        if (GroupType.rawValue.getter() == 0x6E776F6E6B6E75 && v10 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          v8 = 1;
        }
        else
        {
          v8 = sub_1D5AAEDE4();
          swift_bridgeObjectRelease();
        }
      }
      sub_1D58DEFD8(a1, 0xD000000000000045, 0x80000001D5AEF500, (v8 & 1) == 0, (void (*)(_QWORD))type metadata accessor for IssueExposureEvent.Model);
      sub_1D57DD5B8((uint64_t)v19, (uint64_t)&v18);
      if (sub_1D58E00E0((uint64_t)&v18) == 1)
      {
        v13 = 0;
      }
      else if (GroupType.rawValue.getter() == 25697 && v14 == 0xE200000000000000)
      {
        swift_bridgeObjectRelease();
        v13 = 1;
      }
      else
      {
        v13 = sub_1D5AAEDE4();
        swift_bridgeObjectRelease();
      }
      v15 = 0xD000000000000040;
      v16 = (v13 & 1) == 0;
      v17 = "Magazine feed issue exposure events must not have ad group types";
    }
    else
    {
      if (v4 != 1)
        return;
      sub_1D57DD5B8(a1 + *(int *)(v2 + 32), (uint64_t)v19);
      v5 = sub_1D58E00E0((uint64_t)v19) == 0;
      sub_1D58DEFD8(a1, 0xD000000000000035, 0x80000001D5AEF5A0, v5, (void (*)(_QWORD))type metadata accessor for IssueExposureEvent.Model);
      sub_1D57DD5B8((uint64_t)v19, (uint64_t)&v20);
      if (sub_1D58E00E0((uint64_t)&v20) == 1)
      {
        v6 = 0;
      }
      else
      {
        v18 = v21;
        if (GroupType.rawValue.getter() == 0x6E776F6E6B6E75 && v9 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          v6 = 1;
        }
        else
        {
          v6 = sub_1D5AAEDE4();
          swift_bridgeObjectRelease();
        }
      }
      sub_1D58DEFD8(a1, 0xD000000000000042, 0x80000001D5AEF5E0, (v6 & 1) == 0, (void (*)(_QWORD))type metadata accessor for IssueExposureEvent.Model);
      sub_1D57DD5B8((uint64_t)v19, (uint64_t)&v18);
      if (sub_1D58E00E0((uint64_t)&v18) == 1)
      {
        v11 = 0;
      }
      else if (GroupType.rawValue.getter() == 25697 && v12 == 0xE200000000000000)
      {
        swift_bridgeObjectRelease();
        v11 = 1;
      }
      else
      {
        v11 = sub_1D5AAEDE4();
        swift_bridgeObjectRelease();
      }
      v15 = 0xD00000000000003DLL;
      v16 = (v11 & 1) == 0;
      v17 = "Today feed issue exposure events must not have ad group types";
    }
    sub_1D58DEFD8(a1, v15, (unint64_t)(v17 - 32) | 0x8000000000000000, v16, (void (*)(_QWORD))type metadata accessor for IssueExposureEvent.Model);
  }
}

uint64_t type metadata accessor for ValidationEventProcessor()
{
  return objc_opt_self();
}

uint64_t method lookup function for ValidationEventProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ValidationEventProcessor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1D58E00E0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1D58E00F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = sub_1D5AADB54();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x1E0CF8168], v0);
  sub_1D57C6204();
  sub_1D5AADD1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D58E01E4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D57C0654();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1D58E0244()
{
  sub_1D57C0654();
  return sub_1D58E00F8();
}

void DownloadStateData.state.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *DownloadStateData.state.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*DownloadStateData.state.modify())()
{
  return nullsub_1;
}

NewsAnalytics::DownloadStateData __swiftcall DownloadStateData.init(state:)(NewsAnalytics::DownloadStateData state)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)state.state;
  return state;
}

uint64_t sub_1D58E02B4()
{
  sub_1D58E0408();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58E02DC()
{
  sub_1D58E0408();
  return sub_1D5AAEEE0();
}

uint64_t DownloadStateData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D58E05C8(0, &qword_1EFF4BEC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E0408();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D58E044C();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58E0408()
{
  unint64_t result;

  result = qword_1EFF4BED0;
  if (!qword_1EFF4BED0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5E18, &type metadata for DownloadStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BED0);
  }
  return result;
}

unint64_t sub_1D58E044C()
{
  unint64_t result;

  result = qword_1EFF4BED8;
  if (!qword_1EFF4BED8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadState, &type metadata for DownloadState);
    atomic_store(result, (unint64_t *)&qword_1EFF4BED8);
  }
  return result;
}

uint64_t DownloadStateData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D58E05C8(0, &qword_1EFF4BEE0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E0408();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D58E0624();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58E05C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58E0408();
    v7 = a3(a1, &type metadata for DownloadStateData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58E0624()
{
  unint64_t result;

  result = qword_1EFF4BEE8;
  if (!qword_1EFF4BEE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadState, &type metadata for DownloadState);
    atomic_store(result, (unint64_t *)&qword_1EFF4BEE8);
  }
  return result;
}

unint64_t sub_1D58E066C()
{
  unint64_t result;

  result = qword_1ED9C9408;
  if (!qword_1ED9C9408)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadStateData, &type metadata for DownloadStateData);
    atomic_store(result, (unint64_t *)&qword_1ED9C9408);
  }
  return result;
}

unint64_t sub_1D58E06B4()
{
  unint64_t result;

  result = qword_1ED9C9400;
  if (!qword_1ED9C9400)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadStateData, &type metadata for DownloadStateData);
    atomic_store(result, (unint64_t *)&qword_1ED9C9400);
  }
  return result;
}

uint64_t sub_1D58E06F8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DownloadStateData.init(from:)(a1, a2);
}

uint64_t sub_1D58E070C(_QWORD *a1)
{
  return DownloadStateData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for DownloadStateData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58E076C + 4 * byte_1D5AC5C95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58E07A0 + 4 * byte_1D5AC5C90[v4]))();
}

uint64_t sub_1D58E07A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E07A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58E07B0);
  return result;
}

uint64_t sub_1D58E07BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58E07C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58E07C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E07D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadStateData()
{
  return &type metadata for DownloadStateData;
}

uint64_t storeEnumTagSinglePayload for DownloadStateData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58E082C + 4 * byte_1D5AC5C9A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58E084C + 4 * byte_1D5AC5C9F[v4]))();
}

_BYTE *sub_1D58E082C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58E084C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58E0854(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58E085C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58E0864(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58E086C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DownloadStateData.CodingKeys()
{
  return &type metadata for DownloadStateData.CodingKeys;
}

unint64_t sub_1D58E088C()
{
  unint64_t result;

  result = qword_1EFF4BEF0;
  if (!qword_1EFF4BEF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5DF0, &type metadata for DownloadStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BEF0);
  }
  return result;
}

unint64_t sub_1D58E08D4()
{
  unint64_t result;

  result = qword_1EFF4BEF8;
  if (!qword_1EFF4BEF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5D60, &type metadata for DownloadStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BEF8);
  }
  return result;
}

unint64_t sub_1D58E091C()
{
  unint64_t result;

  result = qword_1EFF4BF00;
  if (!qword_1EFF4BF00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5D88, &type metadata for DownloadStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF00);
  }
  return result;
}

uint64_t PersonalizationFeatureCTRData.personalizationFeatureID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PersonalizationFeatureCTRData.personalizationFeatureID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PersonalizationFeatureCTRData.personalizationFeatureID.modify())()
{
  return nullsub_1;
}

uint64_t PersonalizationFeatureCTRData.ctr.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t PersonalizationFeatureCTRData.ctr.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*PersonalizationFeatureCTRData.ctr.modify())()
{
  return nullsub_1;
}

uint64_t PersonalizationFeatureCTRData.init(personalizationFeatureID:ctr:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_1D58E09FC()
{
  _BYTE *v0;

  if (*v0)
    return 7500899;
  else
    return 0xD000000000000018;
}

uint64_t sub_1D58E0A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58E1100(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58E0A58()
{
  sub_1D58E0BD8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58E0A80()
{
  sub_1D58E0BD8();
  return sub_1D5AAEEE0();
}

uint64_t PersonalizationFeatureCTRData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;

  sub_1D58E0DA8(0, &qword_1EFF4BF08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v10[0] = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E0BD8();
  sub_1D5AAEEC8();
  v12 = 0;
  v8 = v10[1];
  sub_1D5AAED3C();
  if (!v8)
  {
    v11 = 1;
    sub_1D5AAED84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58E0BD8()
{
  unint64_t result;

  result = qword_1EFF4BF10;
  if (!qword_1EFF4BF10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6004, &type metadata for PersonalizationFeatureCTRData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF10);
  }
  return result;
}

uint64_t PersonalizationFeatureCTRData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  char v17;

  sub_1D58E0DA8(0, &qword_1EFF4BF18, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E0BD8();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v16 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1D5AAECE8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D58E0DA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58E0BD8();
    v7 = a3(a1, &type metadata for PersonalizationFeatureCTRData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58E0E08()
{
  unint64_t result;

  result = qword_1EFF4BF20;
  if (!qword_1EFF4BF20)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PersonalizationFeatureCTRData, &type metadata for PersonalizationFeatureCTRData);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF20);
  }
  return result;
}

unint64_t sub_1D58E0E50()
{
  unint64_t result;

  result = qword_1EFF4BF28;
  if (!qword_1EFF4BF28)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PersonalizationFeatureCTRData, &type metadata for PersonalizationFeatureCTRData);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF28);
  }
  return result;
}

uint64_t sub_1D58E0E94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PersonalizationFeatureCTRData.init(from:)(a1, a2);
}

uint64_t sub_1D58E0EA8(_QWORD *a1)
{
  return PersonalizationFeatureCTRData.encode(to:)(a1);
}

_QWORD *assignWithCopy for PersonalizationFeatureCTRData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for PersonalizationFeatureCTRData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for PersonalizationFeatureCTRData()
{
  return &type metadata for PersonalizationFeatureCTRData;
}

uint64_t storeEnumTagSinglePayload for PersonalizationFeatureCTRData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58E0FA8 + 4 * byte_1D5AC5E75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58E0FDC + 4 * byte_1D5AC5E70[v4]))();
}

uint64_t sub_1D58E0FDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E0FE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58E0FECLL);
  return result;
}

uint64_t sub_1D58E0FF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58E1000);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D58E1004(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E100C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationFeatureCTRData.CodingKeys()
{
  return &type metadata for PersonalizationFeatureCTRData.CodingKeys;
}

unint64_t sub_1D58E102C()
{
  unint64_t result;

  result = qword_1EFF4BF30;
  if (!qword_1EFF4BF30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5FDC, &type metadata for PersonalizationFeatureCTRData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF30);
  }
  return result;
}

unint64_t sub_1D58E1074()
{
  unint64_t result;

  result = qword_1EFF4BF38;
  if (!qword_1EFF4BF38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5F4C, &type metadata for PersonalizationFeatureCTRData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF38);
  }
  return result;
}

unint64_t sub_1D58E10BC()
{
  unint64_t result;

  result = qword_1EFF4BF40;
  if (!qword_1EFF4BF40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC5F74, &type metadata for PersonalizationFeatureCTRData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF40);
  }
  return result;
}

uint64_t sub_1D58E1100(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AEF700 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7500899 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void TextSizeData.textSize.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *TextSizeData.textSize.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*TextSizeData.textSize.modify())()
{
  return nullsub_1;
}

NewsAnalytics::TextSizeData __swiftcall TextSizeData.init(textSize:)(NewsAnalytics::TextSizeData textSize)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)textSize.textSize;
  return textSize;
}

uint64_t sub_1D58E1210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x657A695374786574 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58E12A4()
{
  sub_1D57A6554();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58E12CC()
{
  sub_1D57A6554();
  return sub_1D5AAEEE0();
}

uint64_t TextSizeData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D57A64B4(0, &qword_1EFF4BF48, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A6554();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5847414();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D58E142C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return TextSizeData.init(from:)(a1, a2);
}

uint64_t storeEnumTagSinglePayload for TextSizeData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D58E148C + 4 * byte_1D5AC6059[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D58E14C0 + 4 * byte_1D5AC6054[v4]))();
}

uint64_t sub_1D58E14C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E14C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58E14D0);
  return result;
}

uint64_t sub_1D58E14DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58E14E4);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D58E14E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E14F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextSizeData()
{
  return &type metadata for TextSizeData;
}

ValueMetadata *type metadata accessor for TextSizeData.CodingKeys()
{
  return &type metadata for TextSizeData.CodingKeys;
}

unint64_t sub_1D58E1520()
{
  unint64_t result;

  result = qword_1EFF4BF50;
  if (!qword_1EFF4BF50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC61A8, &type metadata for TextSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF50);
  }
  return result;
}

uint64_t sub_1D58E1564(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9D0E38, MEMORY[0x1E0CF8078]);
}

uint64_t static FollowingViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D0E58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D0E38, a1);
}

uint64_t sub_1D58E15A4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9D0E60, MEMORY[0x1E0CF8380]);
}

uint64_t static FollowingViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D0E80, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D0E60, a1);
}

uint64_t FollowingViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FollowingViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FollowingViewEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t FollowingViewEvent.followingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowingViewEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FollowingViewEvent.followingData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowingViewEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowingViewEvent.followingData.modify())()
{
  type metadata accessor for FollowingViewEvent(0);
  return nullsub_1;
}

uint64_t FollowingViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for FollowingViewEvent, (uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FollowingViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowingViewEvent(0) + 24);
  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowingViewEvent.eventData.modify())()
{
  type metadata accessor for FollowingViewEvent(0);
  return nullsub_1;
}

uint64_t FollowingViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowingViewEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FollowingViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FollowingViewEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FollowingViewEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for FollowingViewEvent(0);
  return nullsub_1;
}

uint64_t FollowingViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for FollowingViewEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t FollowingViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_WORD *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

void FollowingViewEvent.Model.followingData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 18);
}

uint64_t FollowingViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for FollowingViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FollowingViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for FollowingViewEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FollowingViewEvent.Model.init(viewData:followingData:eventData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char v21;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_WORD *)(a1 + 16);
  v8 = *a2;
  v9 = *a4;
  v10 = *((_QWORD *)a4 + 1);
  v11 = *((_QWORD *)a4 + 2);
  v12 = a4[24];
  v13 = a4[25];
  v15 = *((_QWORD *)a4 + 4);
  v14 = *((_QWORD *)a4 + 5);
  v21 = a4[48];
  *(_QWORD *)a5 = *(_QWORD *)a1;
  *(_QWORD *)(a5 + 8) = v6;
  *(_WORD *)(a5 + 16) = v7;
  *(_BYTE *)(a5 + 18) = v8;
  v16 = type metadata accessor for FollowingViewEvent.Model(0);
  v17 = a5 + *(int *)(v16 + 24);
  v18 = sub_1D5AADF98();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a3, v18);
  v20 = a5 + *(int *)(v16 + 28);
  *(_BYTE *)v20 = v9;
  *(_QWORD *)(v20 + 8) = v10;
  *(_QWORD *)(v20 + 16) = v11;
  *(_BYTE *)(v20 + 24) = v12;
  *(_BYTE *)(v20 + 25) = v13;
  *(_QWORD *)(v20 + 32) = v15;
  *(_QWORD *)(v20 + 40) = v14;
  *(_BYTE *)(v20 + 48) = v21;
  return result;
}

uint64_t sub_1D58E1BB4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58E1BE4 + 4 * byte_1D5AC6220[*v0]))(0x6174614477656976, 0xE800000000000000);
}

uint64_t sub_1D58E1BE4()
{
  return 0x6E69776F6C6C6F66;
}

uint64_t sub_1D58E1C08()
{
  return 0x746144746E657665;
}

unint64_t sub_1D58E1C24()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58E1C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58E3634(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58E1C64()
{
  sub_1D58E1EDC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58E1C8C()
{
  sub_1D58E1EDC();
  return sub_1D5AAEEE0();
}

uint64_t FollowingViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  char v21;
  char v22;
  __int128 v23;
  char v24;
  char v25;

  v3 = v1;
  sub_1D58E22AC(0, &qword_1EFF4BF58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E1EDC();
  sub_1D5AAEEC8();
  v10 = v3[1];
  v11 = *((_WORD *)v3 + 8);
  v19 = *v3;
  *(_QWORD *)&v20 = v10;
  WORD4(v20) = v11;
  v25 = 0;
  sub_1D57C62A4();
  sub_1D5AAED6C();
  if (!v2)
  {
    LOBYTE(v19) = *((_BYTE *)v3 + 18);
    v25 = 1;
    sub_1D57CB03C();
    sub_1D5AAED6C();
    v12 = type metadata accessor for FollowingViewEvent.Model(0);
    LOBYTE(v19) = 2;
    sub_1D5AADF98();
    sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
    sub_1D5AAED6C();
    v13 = (uint64_t)v3 + *(int *)(v12 + 28);
    v14 = *(_BYTE *)(v13 + 24);
    v15 = *(_BYTE *)(v13 + 25);
    v16 = *(_BYTE *)(v13 + 48);
    LOBYTE(v19) = *(_BYTE *)v13;
    v20 = *(_OWORD *)(v13 + 8);
    v21 = v14;
    v22 = v15;
    v23 = *(_OWORD *)(v13 + 32);
    v24 = v16;
    v25 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58E1EDC()
{
  unint64_t result;

  result = qword_1ED9D0E88;
  if (!qword_1ED9D0E88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC641C, &type metadata for FollowingViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0E88);
  }
  return result;
}

uint64_t FollowingViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  char *v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  char v37;
  char v38;
  __int128 v39;
  char v40;
  char v41;

  v29 = a2;
  v30 = sub_1D5AADF98();
  v3 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58E22AC(0, &qword_1ED9D0EA8, MEMORY[0x1E0DED048]);
  v32 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - v8;
  v10 = type metadata accessor for FollowingViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D58E1EDC();
  v31 = v9;
  v14 = v34;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  v28 = v5;
  v15 = v7;
  v16 = (uint64_t)v12;
  v34 = v3;
  v17 = v30;
  v41 = 0;
  sub_1D57C6260();
  v18 = v31;
  v19 = v32;
  sub_1D5AAECD0();
  v20 = v36;
  v21 = WORD4(v36);
  *(_QWORD *)v16 = v35;
  *(_QWORD *)(v16 + 8) = v20;
  *(_WORD *)(v16 + 16) = v21;
  v41 = 1;
  sub_1D57CAFF8();
  sub_1D5AAECD0();
  *(_BYTE *)(v16 + 18) = v35;
  LOBYTE(v35) = 2;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v22 = v28;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v16 + *(int *)(v10 + 24), v22, v17);
  v41 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v19);
  v23 = v37;
  v24 = v38;
  v25 = v40;
  v26 = v16 + *(int *)(v10 + 28);
  *(_BYTE *)v26 = v35;
  *(_OWORD *)(v26 + 8) = v36;
  *(_BYTE *)(v26 + 24) = v23;
  *(_BYTE *)(v26 + 25) = v24;
  *(_OWORD *)(v26 + 32) = v39;
  *(_BYTE *)(v26 + 48) = v25;
  sub_1D58E2308(v16, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_1D58E234C(v16);
}

void sub_1D58E22AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58E1EDC();
    v7 = a3(a1, &type metadata for FollowingViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58E2308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FollowingViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58E234C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FollowingViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58E2388@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FollowingViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58E239C(_QWORD *a1)
{
  return FollowingViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58E23B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D0E58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D0E38, a1);
}

uint64_t sub_1D58E23D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D0E80, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D0E60, a1);
}

uint64_t sub_1D58E23F8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for FollowingViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D57A8D40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for FollowingViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for FollowingViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for FollowingViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for FollowingViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for FollowingViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58E2C90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D57A8D40();
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FollowingViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58E2DB8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7148, (void (*)(void))sub_1D57CAFF8, (void (*)(void))sub_1D57CB03C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D57A8D40();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for FollowingViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    v8 = *(int *)(a3 + 24);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1D5AADF98();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 28);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    *((_WORD *)v14 + 12) = *((_WORD *)v15 + 12);
    v17 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 5) = v17;
    v14[48] = v15[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FollowingViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FollowingViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADF98();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 28);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  *(_WORD *)(v13 + 24) = *(_WORD *)(v14 + 24);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v16;
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FollowingViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)v12;
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
  *(_BYTE *)(v11 + 25) = *(_BYTE *)(v12 + 25);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  return a1;
}

uint64_t initializeWithTake for FollowingViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  return a1;
}

uint64_t assignWithTake for FollowingViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58E3394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D5AADF98();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FollowingViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58E341C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D5AADF98();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FollowingViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D58E34DC + 4 * byte_1D5AC6229[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D58E3510 + 4 * byte_1D5AC6224[v4]))();
}

uint64_t sub_1D58E3510(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E3518(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58E3520);
  return result;
}

uint64_t sub_1D58E352C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58E3534);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D58E3538(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E3540(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FollowingViewEvent.Model.CodingKeys()
{
  return &type metadata for FollowingViewEvent.Model.CodingKeys;
}

unint64_t sub_1D58E3560()
{
  unint64_t result;

  result = qword_1EFF4BF60;
  if (!qword_1EFF4BF60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC63F4, &type metadata for FollowingViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF60);
  }
  return result;
}

unint64_t sub_1D58E35A8()
{
  unint64_t result;

  result = qword_1ED9D0E98;
  if (!qword_1ED9D0E98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6364, &type metadata for FollowingViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0E98);
  }
  return result;
}

unint64_t sub_1D58E35F0()
{
  unint64_t result;

  result = qword_1ED9D0E90;
  if (!qword_1ED9D0E90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC638C, &type metadata for FollowingViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0E90);
  }
  return result;
}

uint64_t sub_1D58E3634(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6174614477656976 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69776F6C6C6F66 && a2 == 0xED00006174614467 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t NewsletterSubscriptionType.init(_:)@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  char v2;

  if (result >= 4)
    v2 = 0;
  else
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t VideoAdLoadData.duration.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t VideoAdLoadData.duration.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*VideoAdLoadData.duration.modify())()
{
  return nullsub_1;
}

void VideoAdLoadData.loadState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *VideoAdLoadData.loadState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*VideoAdLoadData.loadState.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadData.init(duration:loadState:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v3;
  return result;
}

uint64_t sub_1D58E3880()
{
  _BYTE *v0;

  if (*v0)
    return 0x7461745364616F6CLL;
  else
    return 0x6E6F697461727564;
}

uint64_t sub_1D58E38C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58E4010(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58E38E4()
{
  sub_1D58E3A74();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58E390C()
{
  sub_1D58E3A74();
  return sub_1D5AAEEE0();
}

uint64_t VideoAdLoadData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1D58E3C68(0, &qword_1EFF4BF68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(unsigned __int8 *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E3A74();
  sub_1D5AAEEC8();
  v14 = 0;
  sub_1D5AAED84();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_1D58E3AB8();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D58E3A74()
{
  unint64_t result;

  result = qword_1EFF4BF70;
  if (!qword_1EFF4BF70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC65E8, &type metadata for VideoAdLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF70);
  }
  return result;
}

unint64_t sub_1D58E3AB8()
{
  unint64_t result;

  result = qword_1EFF4BF78;
  if (!qword_1EFF4BF78)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdLoadState, &type metadata for VideoAdLoadState);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF78);
  }
  return result;
}

uint64_t VideoAdLoadData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  sub_1D58E3C68(0, &qword_1EFF4BF80, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E3A74();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    v10 = sub_1D5AAECE8();
    v14 = 1;
    sub_1D58E3CC4();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58E3C68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58E3A74();
    v7 = a3(a1, &type metadata for VideoAdLoadData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58E3CC4()
{
  unint64_t result;

  result = qword_1EFF4BF88;
  if (!qword_1EFF4BF88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdLoadState, &type metadata for VideoAdLoadState);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF88);
  }
  return result;
}

unint64_t sub_1D58E3D0C()
{
  unint64_t result;

  result = qword_1EFF4BF90;
  if (!qword_1EFF4BF90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdLoadData, &type metadata for VideoAdLoadData);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF90);
  }
  return result;
}

unint64_t sub_1D58E3D54()
{
  unint64_t result;

  result = qword_1EFF4BF98;
  if (!qword_1EFF4BF98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdLoadData, &type metadata for VideoAdLoadData);
    atomic_store(result, (unint64_t *)&qword_1EFF4BF98);
  }
  return result;
}

uint64_t sub_1D58E3D98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdLoadData.init(from:)(a1, a2);
}

uint64_t sub_1D58E3DAC(_QWORD *a1)
{
  return VideoAdLoadData.encode(to:)(a1);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for VideoAdLoadData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 6;
  v5 = v3 - 6;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadData()
{
  return &type metadata for VideoAdLoadData;
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58E3EB8 + 4 * byte_1D5AC6471[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58E3EEC + 4 * byte_1D5AC646C[v4]))();
}

uint64_t sub_1D58E3EEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E3EF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58E3EFCLL);
  return result;
}

uint64_t sub_1D58E3F08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58E3F10);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D58E3F14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E3F1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadData.CodingKeys()
{
  return &type metadata for VideoAdLoadData.CodingKeys;
}

unint64_t sub_1D58E3F3C()
{
  unint64_t result;

  result = qword_1EFF4BFA0;
  if (!qword_1EFF4BFA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC65C0, &type metadata for VideoAdLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BFA0);
  }
  return result;
}

unint64_t sub_1D58E3F84()
{
  unint64_t result;

  result = qword_1EFF4BFA8;
  if (!qword_1EFF4BFA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6530, &type metadata for VideoAdLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BFA8);
  }
  return result;
}

unint64_t sub_1D58E3FCC()
{
  unint64_t result;

  result = qword_1EFF4BFB0;
  if (!qword_1EFF4BFB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6558, &type metadata for VideoAdLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BFB0);
  }
  return result;
}

uint64_t sub_1D58E4010(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::PaywallVisualContentType_optional __swiftcall PaywallVisualContentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::PaywallVisualContentType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PaywallVisualContentType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58E4194 + 4 * byte_1D5AC6640[*v0]))(0x746C7561666564, 0xE700000000000000);
}

uint64_t sub_1D58E4194()
{
  return 0x6F69647561;
}

uint64_t sub_1D58E41A8()
{
  return 0x657061707377656ELL;
}

unint64_t sub_1D58E41C4()
{
  return 0xD000000000000012;
}

void sub_1D58E41E0(char *a1)
{
  sub_1D5A37360(*a1);
}

unint64_t sub_1D58E41F0()
{
  unint64_t result;

  result = qword_1EFF4BFB8;
  if (!qword_1EFF4BFB8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallVisualContentType, &type metadata for PaywallVisualContentType);
    atomic_store(result, (unint64_t *)&qword_1EFF4BFB8);
  }
  return result;
}

void sub_1D58E4234()
{
  char *v0;

  sub_1D5A80AF8(*v0);
}

void sub_1D58E423C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D58E4278()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D58E42D8(uint64_t a1)
{
  char *v1;

  sub_1D5AA9C2C(a1, *v1);
}

NewsAnalytics::PaywallVisualContentType_optional sub_1D58E42E0(Swift::String *a1)
{
  return PaywallVisualContentType.init(rawValue:)(*a1);
}

uint64_t sub_1D58E42EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D58E431C + 4 * byte_1D5AC6648[*v0]))();
}

void sub_1D58E431C(_QWORD *a1@<X8>)
{
  *a1 = 0x6F69647561;
  a1[1] = 0xE500000000000000;
}

void sub_1D58E4334(_QWORD *a1@<X8>)
{
  *a1 = 0x657061707377656ELL;
  a1[1] = 0xE900000000000072;
}

void sub_1D58E4354(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001D5AEB2E0;
}

uint64_t sub_1D58E4374()
{
  sub_1D58E44E8();
  return sub_1D5AAE928();
}

uint64_t sub_1D58E43D0()
{
  sub_1D58E44E8();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for PaywallVisualContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D58E4468 + 4 * byte_1D5AC6651[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D58E449C + 4 * byte_1D5AC664C[v4]))();
}

uint64_t sub_1D58E449C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E44A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58E44ACLL);
  return result;
}

uint64_t sub_1D58E44B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58E44C0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D58E44C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E44CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallVisualContentType()
{
  return &type metadata for PaywallVisualContentType;
}

unint64_t sub_1D58E44E8()
{
  unint64_t result;

  result = qword_1ED9CD630;
  if (!qword_1ED9CD630)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallVisualContentType, &type metadata for PaywallVisualContentType);
    atomic_store(result, (unint64_t *)&qword_1ED9CD630);
  }
  return result;
}

NewsAnalytics::MediaPlayLocation_optional __swiftcall MediaPlayLocation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsAnalytics::MediaPlayLocation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t MediaPlayLocation.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1684366694;
  else
    return 0x656C6369747261;
}

uint64_t sub_1D58E45C0(char *a1, char *a2)
{
  return sub_1D5A3A80C(*a1, *a2);
}

unint64_t sub_1D58E45D0()
{
  unint64_t result;

  result = qword_1EFF4BFC0;
  if (!qword_1EFF4BFC0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaPlayLocation, &type metadata for MediaPlayLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4BFC0);
  }
  return result;
}

uint64_t sub_1D58E4614()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D58E468C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D58E46E0()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::MediaPlayLocation_optional sub_1D58E4754(Swift::String *a1)
{
  return MediaPlayLocation.init(rawValue:)(*a1);
}

void sub_1D58E4760(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1684366694;
  if (!*v1)
    v2 = 0x656C6369747261;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D58E4798()
{
  sub_1D58E490C();
  return sub_1D5AAE928();
}

uint64_t sub_1D58E47F4()
{
  sub_1D58E490C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for MediaPlayLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58E488C + 4 * byte_1D5AC6785[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58E48C0 + 4 * byte_1D5AC6780[v4]))();
}

uint64_t sub_1D58E48C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E48C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58E48D0);
  return result;
}

uint64_t sub_1D58E48DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58E48E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D58E48E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E48F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayLocation()
{
  return &type metadata for MediaPlayLocation;
}

unint64_t sub_1D58E490C()
{
  unint64_t result;

  result = qword_1EFF4BFC8;
  if (!qword_1EFF4BFC8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaPlayLocation, &type metadata for MediaPlayLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4BFC8);
  }
  return result;
}

uint64_t IssueExposureContextData.surfacedByChannelID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IssueExposureContextData.surfacedByChannelID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IssueExposureContextData.surfacedByChannelID.modify())()
{
  return nullsub_1;
}

NewsAnalytics::IssueExposureContextData __swiftcall IssueExposureContextData.init(surfacedByChannelID:)(NewsAnalytics::IssueExposureContextData surfacedByChannelID)
{
  NewsAnalytics::IssueExposureContextData *v1;

  *v1 = surfacedByChannelID;
  return surfacedByChannelID;
}

unint64_t sub_1D58E49C8()
{
  return 0xD000000000000013;
}

uint64_t sub_1D58E49E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58E4FA8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D58E4A0C()
{
  sub_1D58E4B50();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58E4A34()
{
  sub_1D58E4B50();
  return sub_1D5AAEEE0();
}

uint64_t IssueExposureContextData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D58E4CB8(0, &qword_1EFF4BFD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E4B50();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D58E4B50()
{
  unint64_t result;

  result = qword_1EFF4BFD8;
  if (!qword_1EFF4BFD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6A1C, &type metadata for IssueExposureContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BFD8);
  }
  return result;
}

uint64_t IssueExposureContextData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D58E4CB8(0, &qword_1EFF4BFE0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E4B50();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58E4CB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58E4B50();
    v7 = a3(a1, &type metadata for IssueExposureContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58E4D1C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return IssueExposureContextData.init(from:)(a1, a2);
}

uint64_t sub_1D58E4D30(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D58E4CB8(0, &qword_1EFF4BFD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E4B50();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for IssueExposureContextData()
{
  return &type metadata for IssueExposureContextData;
}

uint64_t storeEnumTagSinglePayload for IssueExposureContextData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58E4E74 + 4 * byte_1D5AC68A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58E4E94 + 4 * byte_1D5AC68A5[v4]))();
}

_BYTE *sub_1D58E4E74(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58E4E94(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58E4E9C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58E4EA4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58E4EAC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58E4EB4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IssueExposureContextData.CodingKeys()
{
  return &type metadata for IssueExposureContextData.CodingKeys;
}

unint64_t sub_1D58E4ED4()
{
  unint64_t result;

  result = qword_1EFF4BFE8;
  if (!qword_1EFF4BFE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC69F4, &type metadata for IssueExposureContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BFE8);
  }
  return result;
}

unint64_t sub_1D58E4F1C()
{
  unint64_t result;

  result = qword_1EFF4BFF0;
  if (!qword_1EFF4BFF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6964, &type metadata for IssueExposureContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BFF0);
  }
  return result;
}

unint64_t sub_1D58E4F64()
{
  unint64_t result;

  result = qword_1EFF4BFF8;
  if (!qword_1EFF4BFF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC698C, &type metadata for IssueExposureContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4BFF8);
  }
  return result;
}

uint64_t sub_1D58E4FA8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEF720)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t URLData.url.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t URLData.url.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*URLData.url.modify())()
{
  return nullsub_1;
}

uint64_t URLData.metadata.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t URLData.metadata.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*URLData.metadata.modify())()
{
  return nullsub_1;
}

NewsAnalytics::URLData __swiftcall URLData.init(url:metadata:)(Swift::String url, Swift::String_optional metadata)
{
  Swift::String_optional *v2;
  NewsAnalytics::URLData result;

  v2->value = url;
  v2[1] = metadata;
  result.metadata = metadata;
  result.url = url;
  return result;
}

uint64_t sub_1D58E5118()
{
  _BYTE *v0;

  if (*v0)
    return 0x617461646174656DLL;
  else
    return 7107189;
}

uint64_t sub_1D58E514C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58E5734(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58E5170()
{
  sub_1D58E52F4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58E5198()
{
  sub_1D58E52F4();
  return sub_1D5AAEEE0();
}

uint64_t URLData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1D58E54F4(0, &qword_1ED9CF038, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E52F4();
  sub_1D5AAEEC8();
  v13 = 0;
  v9 = v11[3];
  sub_1D5AAED3C();
  if (!v9)
  {
    v12 = 1;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58E52F4()
{
  unint64_t result;

  result = qword_1ED9CEEA0;
  if (!qword_1ED9CEEA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6BE0, &type metadata for URLData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEEA0);
  }
  return result;
}

uint64_t URLData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  sub_1D58E54F4(0, &qword_1EFF4C000, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E52F4();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v21 = 0;
    v11 = sub_1D5AAECA0();
    v13 = v12;
    v20 = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1D5AAEC58();
    v16 = v15;
    v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18 = v14;
    v17(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v18;
    a2[3] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_1D58E54F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58E52F4();
    v7 = a3(a1, &type metadata for URLData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58E5558@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return URLData.init(from:)(a1, a2);
}

uint64_t sub_1D58E556C(_QWORD *a1)
{
  return URLData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for URLData()
{
  return &type metadata for URLData;
}

uint64_t storeEnumTagSinglePayload for URLData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58E55DC + 4 * byte_1D5AC6A71[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58E5610 + 4 * byte_1D5AC6A6C[v4]))();
}

uint64_t sub_1D58E5610(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E5618(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58E5620);
  return result;
}

uint64_t sub_1D58E562C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58E5634);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D58E5638(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E5640(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for URLData.CodingKeys()
{
  return &type metadata for URLData.CodingKeys;
}

unint64_t sub_1D58E5660()
{
  unint64_t result;

  result = qword_1EFF4C008;
  if (!qword_1EFF4C008)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6BB8, &type metadata for URLData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C008);
  }
  return result;
}

unint64_t sub_1D58E56A8()
{
  unint64_t result;

  result = qword_1ED9CEEB0;
  if (!qword_1ED9CEEB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6B28, &type metadata for URLData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEEB0);
  }
  return result;
}

unint64_t sub_1D58E56F0()
{
  unint64_t result;

  result = qword_1ED9CEEA8;
  if (!qword_1ED9CEEA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6B50, &type metadata for URLData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEEA8);
  }
  return result;
}

uint64_t sub_1D58E5734(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D58E5814(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v3 = v2;
  v5 = *v2;
  sub_1D58E5C34();
  result = sub_1D5AAEC1C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        if (__OFADD__(v8++, 1))
          goto LABEL_38;
        if (v8 >= v13)
        {
LABEL_29:
          if ((v33 & 1) == 0)
          {
            result = swift_release();
            v3 = v2;
            goto LABEL_36;
          }
          v32 = 1 << *(_BYTE *)(v5 + 32);
          if (v32 >= 64)
            bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v9 = -1 << v32;
          v3 = v2;
          *(_QWORD *)(v5 + 16) = 0;
          break;
        }
        v20 = v9[v8];
        if (!v20)
        {
          v21 = v8 + 1;
          if (v8 + 1 >= v13)
            goto LABEL_29;
          v20 = v9[v21];
          if (!v20)
          {
            while (1)
            {
              v8 = v21 + 1;
              if (__OFADD__(v21, 1))
                break;
              if (v8 >= v13)
                goto LABEL_29;
              v20 = v9[v8];
              ++v21;
              if (v20)
                goto LABEL_19;
            }
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return result;
          }
          ++v8;
        }
LABEL_19:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      sub_1D5AAEE80();
      sub_1D5AAEE8C();
      result = sub_1D5AAEE98();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_36:
  *v3 = v7;
  return result;
}

void *sub_1D58E5AC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1D58E5C34();
  v2 = *v0;
  v3 = sub_1D5AAEC10();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    if (!v19)
      break;
LABEL_23:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void sub_1D58E5C34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4C010)
  {
    type metadata accessor for FCSubscriptionOrigin(255);
    sub_1D58E5C9C();
    v0 = sub_1D5AAEC34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4C010);
  }
}

unint64_t sub_1D58E5C9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFF4C018;
  if (!qword_1EFF4C018)
  {
    type metadata accessor for FCSubscriptionOrigin(255);
    result = MEMORY[0x1D8279680](&unk_1D5AAFC50, v1);
    atomic_store(result, (unint64_t *)&qword_1EFF4C018);
  }
  return result;
}

uint64_t sub_1D58E5CE4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1EFF4C020);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF4C020);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static VideoAdLoadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47168, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C020, a1);
}

uint64_t sub_1D58E5D84()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1EFF4C038);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF4C038);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static VideoAdLoadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47170, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C038, a1);
}

uint64_t VideoAdLoadEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t VideoAdLoadEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*VideoAdLoadEvent.adUserData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for VideoAdLoadEvent, (uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t type metadata accessor for VideoAdLoadEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4C0E0);
}

uint64_t VideoAdLoadEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 20);
  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.eventData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.channelData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D58E61B0()
{
  unint64_t result;

  result = qword_1EFF4C058;
  if (!qword_1EFF4C058)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdData, &type metadata for VideoAdData);
    atomic_store(result, (unint64_t *)&qword_1EFF4C058);
  }
  return result;
}

unint64_t sub_1D58E61F4()
{
  unint64_t result;

  result = qword_1EFF4C060;
  if (!qword_1EFF4C060)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdData, &type metadata for VideoAdData);
    atomic_store(result, (unint64_t *)&qword_1EFF4C060);
  }
  return result;
}

uint64_t VideoAdLoadEvent.videoAdData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.videoAdData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adPlacementData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adFeedData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adGroupData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adLoadData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 48);
  sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.adLoadData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 48);
  sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adLoadData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *Event;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for VideoAdLoadEvent(0);
  v5 = a1 + Event[5];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + Event[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + Event[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + Event[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + Event[9];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + Event[10];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v12, v17);
  v18 = a1 + Event[11];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v12, v19);
  v20 = a1 + Event[12];
  sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
}

uint64_t VideoAdLoadEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for VideoAdLoadEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t type metadata accessor for VideoAdLoadEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4C190);
}

uint64_t VideoAdLoadEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 24));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoAdLoadEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t VideoAdLoadEvent.Model.adGroupData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoAdLoadEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t VideoAdLoadEvent.Model.adLoadData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for VideoAdLoadEvent.Model(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

__n128 VideoAdLoadEvent.Model.init(adUserData:eventData:userBundleSubscriptionContextData:channelData:videoAdData:adPlacementData:adFeedData:adGroupData:adLoadData:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __n128 *a5@<X4>, uint64_t *a6@<X5>, char *a7@<X6>, char *a8@<X7>, _QWORD *a9@<X8>, uint64_t *a10)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  int *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 *v24;
  __n128 result;
  _QWORD *v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;

  v12 = a1[1];
  v13 = *a3;
  v14 = *((_QWORD *)a3 + 1);
  v15 = *((_QWORD *)a3 + 2);
  v16 = a3[24];
  v17 = a3[25];
  v18 = *((_QWORD *)a3 + 4);
  v29 = *((_QWORD *)a3 + 5);
  v28 = a3[48];
  v35 = *a4;
  v34 = a4[1];
  v33 = *((_BYTE *)a4 + 16);
  v32 = *((_BYTE *)a4 + 17);
  v31 = a4[3];
  v30 = a4[4];
  v37 = *a5;
  v36 = a5[1].n128_u64[0];
  v39 = *a6;
  v38 = a6[1];
  v40 = *a7;
  v41 = *a8;
  v43 = *a10;
  v42 = *((_BYTE *)a10 + 8);
  *a9 = *a1;
  a9[1] = v12;
  v19 = (int *)type metadata accessor for VideoAdLoadEvent.Model(0);
  v20 = (char *)a9 + v19[5];
  v21 = sub_1D5AADF98();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = (char *)a9 + v19[6];
  *v22 = v13;
  *((_QWORD *)v22 + 1) = v14;
  *((_QWORD *)v22 + 2) = v15;
  v22[24] = v16;
  v22[25] = v17;
  *((_QWORD *)v22 + 4) = v18;
  *((_QWORD *)v22 + 5) = v29;
  v22[48] = v28;
  v23 = (char *)a9 + v19[7];
  *(_QWORD *)v23 = v35;
  *((_QWORD *)v23 + 1) = v34;
  v23[16] = v33;
  v23[17] = v32;
  *((_QWORD *)v23 + 3) = v31;
  *((_QWORD *)v23 + 4) = v30;
  v24 = (__n128 *)((char *)a9 + v19[8]);
  result = v37;
  *v24 = v37;
  v24[1].n128_u64[0] = v36;
  v26 = (_QWORD *)((char *)a9 + v19[9]);
  *v26 = v39;
  v26[1] = v38;
  *((_BYTE *)a9 + v19[10]) = v40;
  *((_BYTE *)a9 + v19[11]) = v41;
  v27 = (char *)a9 + v19[12];
  *(_QWORD *)v27 = v43;
  v27[8] = v42;
  return result;
}

uint64_t sub_1D58E6D18(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58E6D50 + 4 * byte_1D5AC6C30[a1]))(0x6144726573556461, 0xEA00000000006174);
}

uint64_t sub_1D58E6D50()
{
  return 0x746144746E657665;
}

unint64_t sub_1D58E6D6C()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58E6D88()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1D58E6E08()
{
  return 0x614464616F4C6461;
}

uint64_t sub_1D58E6E1C()
{
  unsigned __int8 *v0;

  return sub_1D58E6D18(*v0);
}

uint64_t sub_1D58E6E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58E9F34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58E6E48()
{
  sub_1D58E7248();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58E6E70()
{
  sub_1D58E7248();
  return sub_1D5AAEEE0();
}

uint64_t VideoAdLoadEvent.Model.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  int *v11;
  char *v12;
  char v13;
  char v14;
  char v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _BYTE v31[24];
  uint64_t v32;
  __int128 v33;
  char v34;
  char v35;

  v3 = v1;
  sub_1D58E78A0(0, &qword_1EFF4C070, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v31[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58E7248();
  sub_1D5AAEEC8();
  v10 = v3[1];
  *(_QWORD *)v31 = *v3;
  *(_QWORD *)&v31[8] = v10;
  v35 = 0;
  sub_1D57CBEFC();
  sub_1D5AAED6C();
  if (!v2)
  {
    v11 = (int *)type metadata accessor for VideoAdLoadEvent.Model(0);
    v31[0] = 1;
    sub_1D5AADF98();
    sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
    sub_1D5AAED6C();
    v12 = (char *)v3 + v11[6];
    v13 = v12[24];
    v14 = v12[25];
    v15 = v12[48];
    v31[0] = *v12;
    *(_OWORD *)&v31[8] = *(_OWORD *)(v12 + 8);
    LOBYTE(v32) = v13;
    BYTE1(v32) = v14;
    v33 = *((_OWORD *)v12 + 2);
    v34 = v15;
    v35 = 2;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v16 = (char *)v3 + v11[7];
    v17 = *(_QWORD *)v16;
    v18 = *((_QWORD *)v16 + 1);
    v19 = v16[16];
    v20 = v16[17];
    v22 = *((_QWORD *)v16 + 3);
    v21 = *((_QWORD *)v16 + 4);
    *(_QWORD *)v31 = v17;
    *(_QWORD *)&v31[8] = v18;
    v31[16] = v19;
    v31[17] = v20;
    v32 = v22;
    *(_QWORD *)&v33 = v21;
    v35 = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v23 = (char *)v3 + v11[8];
    v24 = *((_QWORD *)v23 + 2);
    *(_OWORD *)v31 = *(_OWORD *)v23;
    *(_QWORD *)&v31[16] = v24;
    v35 = 4;
    sub_1D58E61F4();
    sub_1D5AAED18();
    v25 = (_QWORD *)((char *)v3 + v11[9]);
    v27 = *v25;
    v26 = v25[1];
    *(_QWORD *)v31 = v27;
    *(_QWORD *)&v31[8] = v26;
    v35 = 5;
    sub_1D584FF8C();
    sub_1D5AAED6C();
    v31[0] = *((_BYTE *)v3 + v11[10]);
    v35 = 6;
    sub_1D57CBF9C();
    sub_1D5AAED18();
    v31[0] = *((_BYTE *)v3 + v11[11]);
    v35 = 7;
    sub_1D5850384();
    sub_1D5AAED18();
    v28 = (char *)v3 + v11[12];
    v29 = *(_QWORD *)v28;
    LOBYTE(v28) = v28[8];
    *(_QWORD *)v31 = v29;
    v31[8] = (_BYTE)v28;
    v35 = 8;
    sub_1D58E3D54();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58E7248()
{
  unint64_t result;

  result = qword_1EFF4C078;
  if (!qword_1EFF4C078)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6EE4, &type metadata for VideoAdLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C078);
  }
  return result;
}

uint64_t VideoAdLoadEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  char v19;
  char v20;
  char v21;
  char *v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _BYTE v43[24];
  uint64_t v44;
  __int128 v45;
  char v46;
  char v47;

  v37 = a2;
  v4 = sub_1D5AADF98();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58E78A0(0, &qword_1EFF4C080, MEMORY[0x1E0DED048]);
  v38 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v37 - v9;
  v42 = type metadata accessor for VideoAdLoadEvent.Model(0);
  MEMORY[0x1E0C80A78](v42);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D58E7248();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v14 = v8;
  v47 = 0;
  sub_1D57CBEB8();
  v15 = v10;
  sub_1D5AAECD0();
  v16 = *(_QWORD *)&v43[8];
  *(_QWORD *)v12 = *(_QWORD *)v43;
  *((_QWORD *)v12 + 1) = v16;
  v43[0] = 1;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v17 = v40;
  sub_1D5AAECD0();
  v18 = (int *)v42;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v12[*(int *)(v42 + 20)], v6, v17);
  v47 = 2;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v19 = v44;
  v20 = BYTE1(v44);
  v21 = v46;
  v22 = &v12[v18[6]];
  *v22 = v43[0];
  *(_OWORD *)(v22 + 8) = *(_OWORD *)&v43[8];
  v22[24] = v19;
  v22[25] = v20;
  *((_OWORD *)v22 + 2) = v45;
  v22[48] = v21;
  v47 = 3;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v23 = *(_QWORD *)&v43[8];
  v24 = v43[16];
  v25 = v43[17];
  v26 = v44;
  v27 = v45;
  v28 = &v12[v18[7]];
  *(_QWORD *)v28 = *(_QWORD *)v43;
  *((_QWORD *)v28 + 1) = v23;
  v28[16] = v24;
  v28[17] = v25;
  *((_QWORD *)v28 + 3) = v26;
  *((_QWORD *)v28 + 4) = v27;
  v47 = 4;
  sub_1D58E61B0();
  sub_1D5AAEC7C();
  v29 = (uint64_t)v41;
  v30 = *(_QWORD *)&v43[16];
  v31 = &v12[v18[8]];
  *(_OWORD *)v31 = *(_OWORD *)v43;
  *((_QWORD *)v31 + 2) = v30;
  v47 = 5;
  sub_1D584FF48();
  sub_1D5AAECD0();
  v32 = *(_QWORD *)&v43[8];
  v33 = &v12[v18[9]];
  *(_QWORD *)v33 = *(_QWORD *)v43;
  *((_QWORD *)v33 + 1) = v32;
  v47 = 6;
  sub_1D57CBF58();
  sub_1D5AAEC7C();
  v12[v18[10]] = v43[0];
  v47 = 7;
  sub_1D5850340();
  sub_1D5AAEC7C();
  v12[v18[11]] = v43[0];
  v47 = 8;
  sub_1D58E3D0C();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v38);
  v34 = v43[8];
  v35 = &v12[v18[12]];
  *(_QWORD *)v35 = *(_QWORD *)v43;
  v35[8] = v34;
  sub_1D58E78FC((uint64_t)v12, v37);
  __swift_destroy_boxed_opaque_existential_1(v29);
  return sub_1D58E7940((uint64_t)v12);
}

void sub_1D58E78A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58E7248();
    v7 = a3(a1, &type metadata for VideoAdLoadEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58E78FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoAdLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58E7940(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VideoAdLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58E797C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdLoadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58E7990(_QWORD *a1)
{
  return VideoAdLoadEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58E79A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47168, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C020, a1);
}

uint64_t sub_1D58E79C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47170, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C038, a1);
}

uint64_t sub_1D58E79EC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v13, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v13, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdLoadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8D40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for VideoAdLoadEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

uint64_t initializeWithCopy for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdLoadEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58E8CC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8D40();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
                  v8 = v20;
                  v12 = *(_QWORD *)(v20 - 8);
                  v13 = a3[12];
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58E8F3C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8D40();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
                  v10 = v22;
                  v14 = *(_QWORD *)(v22 - 8);
                  v15 = a4[12];
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58E91B4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1D579E208(319, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  if (v0 <= 0x3F)
  {
    sub_1D57A8D40();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1EFF4C068, (void (*)(void))sub_1D58E3D0C, (void (*)(void))sub_1D58E3D54);
                  if (v8 <= 0x3F)
                    swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for VideoAdLoadEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADF98();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v4 + v13;
    v16 = (char *)a2 + v13;
    *v15 = *v16;
    v17 = *((_QWORD *)v16 + 2);
    *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
    *((_QWORD *)v15 + 2) = v17;
    *((_WORD *)v15 + 12) = *((_WORD *)v16 + 12);
    v18 = *((_QWORD *)v16 + 5);
    *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 5) = v18;
    v15[48] = v16[48];
    v19 = (char *)v4 + v14;
    v20 = (char *)a2 + v14;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v19[16] = v20[16];
    v19[17] = v20[17];
    v22 = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 4) = v22;
    v23 = a3[8];
    v24 = a3[9];
    v25 = (char *)v4 + v23;
    v26 = (char *)a2 + v23;
    *(_DWORD *)v25 = *(_DWORD *)v26;
    v27 = *((_QWORD *)v26 + 2);
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    *((_QWORD *)v25 + 2) = v27;
    v28 = (_QWORD *)((char *)v4 + v24);
    v29 = (_QWORD *)((char *)a2 + v24);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)v4 + v31) = *((_BYTE *)a2 + v31);
    v32 = a3[12];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for VideoAdLoadEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VideoAdLoadEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D5AADF98();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *v14 = *v15;
  v16 = *((_QWORD *)v15 + 2);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  *((_QWORD *)v14 + 2) = v16;
  *((_WORD *)v14 + 12) = *((_WORD *)v15 + 12);
  v17 = *((_QWORD *)v15 + 5);
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  *((_QWORD *)v14 + 5) = v17;
  v14[48] = v15[48];
  v18 = (char *)a1 + v13;
  v19 = (char *)a2 + v13;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v18[16] = v19[16];
  v18[17] = v19[17];
  v21 = *((_QWORD *)v19 + 4);
  *((_QWORD *)v18 + 3) = *((_QWORD *)v19 + 3);
  *((_QWORD *)v18 + 4) = v21;
  v22 = a3[8];
  v23 = a3[9];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  v26 = *((_QWORD *)v25 + 2);
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  *((_QWORD *)v24 + 2) = v26;
  v27 = (_QWORD *)((char *)a1 + v23);
  v28 = (_QWORD *)((char *)a2 + v23);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  v31 = a3[12];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VideoAdLoadEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *v11 = *((_BYTE *)a2 + v10);
  *((_QWORD *)v11 + 1) = *(_QWORD *)((char *)a2 + v10 + 8);
  *((_QWORD *)v11 + 2) = *(_QWORD *)((char *)a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[24] = v12[24];
  v11[25] = v12[25];
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[48] = v12[48];
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)((char *)a2 + v13);
  *((_QWORD *)v14 + 1) = *(_QWORD *)((char *)a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[16] = v15[16];
  v14[17] = v15[17];
  *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v22 = a3[12];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  return a1;
}

_OWORD *initializeWithTake for VideoAdLoadEvent.Model(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  v12[48] = v13[48];
  v15 = (char *)a1 + v11;
  v16 = (char *)a2 + v11;
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  v18 = a3[8];
  v19 = a3[9];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  v22 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
  v23 = a3[12];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  return a1;
}

_QWORD *assignWithTake for VideoAdLoadEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *v12 = *((_BYTE *)a2 + v11);
  v14 = *(_QWORD *)((char *)a2 + v11 + 16);
  *((_QWORD *)v12 + 1) = *(_QWORD *)((char *)a2 + v11 + 8);
  *((_QWORD *)v12 + 2) = v14;
  swift_bridgeObjectRelease();
  v12[24] = v13[24];
  v12[25] = v13[25];
  v15 = *((_QWORD *)v13 + 5);
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  *((_QWORD *)v12 + 5) = v15;
  swift_bridgeObjectRelease();
  v12[48] = v13[48];
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)((char *)a2 + v16);
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v17[16] = v18[16];
  v17[17] = v18[17];
  v20 = *((_QWORD *)v18 + 4);
  *((_QWORD *)v17 + 3) = *((_QWORD *)v18 + 3);
  *((_QWORD *)v17 + 4) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  v25 = *((_QWORD *)v23 + 1);
  v24 = *((_QWORD *)v23 + 2);
  *((_QWORD *)v22 + 1) = v25;
  *((_QWORD *)v22 + 2) = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
  v32 = a3[12];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v33[8] = v34[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdLoadEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58E9BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D5AADF98();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58E9C6C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D5AADF98();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D58E9CE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D58E9DDC + 4 * byte_1D5AC6C3E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D58E9E10 + 4 * byte_1D5AC6C39[v4]))();
}

uint64_t sub_1D58E9E10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E9E18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58E9E20);
  return result;
}

uint64_t sub_1D58E9E2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58E9E34);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D58E9E38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58E9E40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadEvent.Model.CodingKeys()
{
  return &type metadata for VideoAdLoadEvent.Model.CodingKeys;
}

unint64_t sub_1D58E9E60()
{
  unint64_t result;

  result = qword_1EFF4C1E8;
  if (!qword_1EFF4C1E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6EBC, &type metadata for VideoAdLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C1E8);
  }
  return result;
}

unint64_t sub_1D58E9EA8()
{
  unint64_t result;

  result = qword_1EFF4C1F0;
  if (!qword_1EFF4C1F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6E2C, &type metadata for VideoAdLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C1F0);
  }
  return result;
}

unint64_t sub_1D58E9EF0()
{
  unint64_t result;

  result = qword_1EFF4C1F8;
  if (!qword_1EFF4C1F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC6E54, &type metadata for VideoAdLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C1F8);
  }
  return result;
}

uint64_t sub_1D58E9F34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6144726573556461 && a2 == 0xEA00000000006174;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4464416F65646976 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x614464616F4C6461 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1D58EA354(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4C200, MEMORY[0x1E0CF8078]);
}

uint64_t static MagazineCategoryExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47178, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C200, a1);
}

uint64_t sub_1D58EA394(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4C218, MEMORY[0x1E0CF8380]);
}

uint64_t static MagazineCategoryExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47180, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C218, a1);
}

uint64_t MagazineCategoryExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t MagazineCategoryExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MagazineCategoryExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MagazineCategoryExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for MagazineCategoryExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for MagazineCategoryExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4C2B8);
}

uint64_t MagazineCategoryExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MagazineCategoryExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MagazineCategoryExposureEvent.timedData.modify())()
{
  type metadata accessor for MagazineCategoryExposureEvent(0);
  return nullsub_1;
}

uint64_t MagazineCategoryExposureEvent.magazineCategoryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MagazineCategoryExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D58EA528()
{
  unint64_t result;

  result = qword_1EFF4C238;
  if (!qword_1EFF4C238)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MagazineCategoryData, &type metadata for MagazineCategoryData);
    atomic_store(result, (unint64_t *)&qword_1EFF4C238);
  }
  return result;
}

unint64_t sub_1D58EA56C()
{
  unint64_t result;

  result = qword_1EFF4C240;
  if (!qword_1EFF4C240)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MagazineCategoryData, &type metadata for MagazineCategoryData);
    atomic_store(result, (unint64_t *)&qword_1EFF4C240);
  }
  return result;
}

uint64_t MagazineCategoryExposureEvent.magazineCategoryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MagazineCategoryExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MagazineCategoryExposureEvent.magazineCategoryData.modify())()
{
  type metadata accessor for MagazineCategoryExposureEvent(0);
  return nullsub_1;
}

uint64_t MagazineCategoryExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MagazineCategoryExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MagazineCategoryExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MagazineCategoryExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MagazineCategoryExposureEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for MagazineCategoryExposureEvent(0);
  return nullsub_1;
}

uint64_t MagazineCategoryExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for MagazineCategoryExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t MagazineCategoryExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t MagazineCategoryExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for MagazineCategoryExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for MagazineCategoryExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4C350);
}

double MagazineCategoryExposureEvent.Model.magazineCategoryData.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + *(int *)(type metadata accessor for MagazineCategoryExposureEvent.Model(0) + 24));
  *a1 = result;
  return result;
}

uint64_t MagazineCategoryExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MagazineCategoryExposureEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MagazineCategoryExposureEvent.Model.init(eventData:timedData:magazineCategoryData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v9 = *a4;
  v10 = *((_QWORD *)a4 + 1);
  v11 = *((_QWORD *)a4 + 2);
  v12 = a4[24];
  v13 = a4[25];
  v14 = *((_QWORD *)a4 + 4);
  v23 = *((_QWORD *)a4 + 5);
  v22 = a4[48];
  v15 = sub_1D5AADF98();
  v16 = *a3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, a1, v15);
  v17 = (int *)type metadata accessor for MagazineCategoryExposureEvent.Model(0);
  v18 = a5 + v17[5];
  v19 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a2, v19);
  *(_QWORD *)(a5 + v17[6]) = v16;
  v21 = a5 + v17[7];
  *(_BYTE *)v21 = v9;
  *(_QWORD *)(v21 + 8) = v10;
  *(_QWORD *)(v21 + 16) = v11;
  *(_BYTE *)(v21 + 24) = v12;
  *(_BYTE *)(v21 + 25) = v13;
  *(_QWORD *)(v21 + 32) = v14;
  *(_QWORD *)(v21 + 40) = v23;
  *(_BYTE *)(v21 + 48) = v22;
  return result;
}

uint64_t sub_1D58EAA10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58EAA44 + 4 * byte_1D5AC6F40[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58EAA44()
{
  return 0x74614464656D6974;
}

unint64_t sub_1D58EAA58()
{
  return 0xD000000000000014;
}

unint64_t sub_1D58EAA74()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58EAA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58EC59C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58EAAB8()
{
  sub_1D58EAD4C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58EAAE0()
{
  sub_1D58EAD4C();
  return sub_1D5AAEEE0();
}

uint64_t MagazineCategoryExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;
  char v23;

  v3 = v1;
  sub_1D58EB184(0, &qword_1EFF4C248, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58EAD4C();
  sub_1D5AAEEC8();
  LOBYTE(v17) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for MagazineCategoryExposureEvent.Model(0);
    LOBYTE(v17) = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v17 = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    v23 = 2;
    sub_1D58EA56C();
    sub_1D5AAED6C();
    v11 = v3 + *(int *)(v10 + 28);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v17) = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    v23 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58EAD4C()
{
  unint64_t result;

  result = qword_1EFF4C250;
  if (!qword_1EFF4C250)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC713C, &type metadata for MagazineCategoryExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C250);
  }
  return result;
}

uint64_t MagazineCategoryExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char v41;
  char v42;
  __int128 v43;
  char v44;
  char v45;

  v30 = a2;
  v3 = sub_1D5AADFB0();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58EB184(0, &qword_1EFF4C258, MEMORY[0x1E0DED048]);
  v37 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v27 - v9;
  v11 = type metadata accessor for MagazineCategoryExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58EAD4C();
  v36 = v10;
  v14 = v38;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v38 = v8;
  v28 = v11;
  v29 = a1;
  v15 = (uint64_t)v13;
  v16 = v31;
  v17 = v32;
  v18 = v33;
  LOBYTE(v39) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v34;
  v20 = v35;
  sub_1D5AAECD0();
  v27[1] = v5;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15, v19, v20);
  LOBYTE(v39) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  v21 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + *(int *)(v28 + 20), v16, v18);
  v45 = 2;
  sub_1D58EA528();
  sub_1D5AAECD0();
  *(_QWORD *)(v15 + *(int *)(v21 + 24)) = v39;
  v45 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
  v22 = v41;
  v23 = v42;
  v24 = v44;
  v25 = v15 + *(int *)(v21 + 28);
  *(_BYTE *)v25 = v39;
  *(_OWORD *)(v25 + 8) = v40;
  *(_BYTE *)(v25 + 24) = v22;
  *(_BYTE *)(v25 + 25) = v23;
  *(_OWORD *)(v25 + 32) = v43;
  *(_BYTE *)(v25 + 48) = v24;
  sub_1D58EB1E0(v15, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_1D58EB224(v15);
}

void sub_1D58EB184(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58EAD4C();
    v7 = a3(a1, &type metadata for MagazineCategoryExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58EB1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MagazineCategoryExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58EB224(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MagazineCategoryExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58EB260@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MagazineCategoryExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58EB274(_QWORD *a1)
{
  return MagazineCategoryExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58EB288@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47178, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C200, a1);
}

uint64_t sub_1D58EB2AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47180, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C218, a1);
}

uint64_t sub_1D58EB2D0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for MagazineCategoryExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for MagazineCategoryExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for MagazineCategoryExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for MagazineCategoryExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for MagazineCategoryExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for MagazineCategoryExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for MagazineCategoryExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58EBA88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MagazineCategoryExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58EBB90(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58EBC94()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF4C230, (void (*)(void))sub_1D58EA528, (void (*)(void))sub_1D58EA56C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for MagazineCategoryExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    *v13 = *v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    *((_WORD *)v13 + 12) = *((_WORD *)v14 + 12);
    v16 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v16;
    v13[48] = v14[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for MagazineCategoryExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  *(_WORD *)(v12 + 24) = *(_WORD *)(v13 + 24);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MagazineCategoryExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_DWORD *)(a1 + v11);
  v13 = (_DWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 24) = *(_BYTE *)(v16 + 24);
  *(_BYTE *)(v15 + 25) = *(_BYTE *)(v16 + 25);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 48) = *(_BYTE *)(v16 + 48);
  return a1;
}

uint64_t initializeWithTake for MagazineCategoryExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  return a1;
}

uint64_t assignWithTake for MagazineCategoryExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for MagazineCategoryExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58EC1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for MagazineCategoryExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58EC2B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = a2;
  return result;
}

uint64_t sub_1D58EC360()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MagazineCategoryExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D58EC444 + 4 * byte_1D5AC6F49[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D58EC478 + 4 * byte_1D5AC6F44[v4]))();
}

uint64_t sub_1D58EC478(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58EC480(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58EC488);
  return result;
}

uint64_t sub_1D58EC494(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58EC49CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D58EC4A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58EC4A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MagazineCategoryExposureEvent.Model.CodingKeys()
{
  return &type metadata for MagazineCategoryExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D58EC4C8()
{
  unint64_t result;

  result = qword_1EFF4C390;
  if (!qword_1EFF4C390)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7114, &type metadata for MagazineCategoryExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C390);
  }
  return result;
}

unint64_t sub_1D58EC510()
{
  unint64_t result;

  result = qword_1EFF4C398;
  if (!qword_1EFF4C398)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7084, &type metadata for MagazineCategoryExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C398);
  }
  return result;
}

unint64_t sub_1D58EC558()
{
  unint64_t result;

  result = qword_1EFF4C3A0;
  if (!qword_1EFF4C3A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC70AC, &type metadata for MagazineCategoryExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C3A0);
  }
  return result;
}

uint64_t sub_1D58EC59C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AEF740 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

NewsAnalytics::PaywallLocation_optional __swiftcall PaywallLocation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::PaywallLocation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PaywallLocation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58EC7E0 + 4 * byte_1D5AC7190[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D58EC7E0()
{
  return 0x656C6369747261;
}

uint64_t sub_1D58EC7F4()
{
  return 0x466C656E6E616863;
}

uint64_t sub_1D58EC814()
{
  return 0x656E697A6167616DLL;
}

void sub_1D58EC834(char *a1)
{
  sub_1D5A3B8C0(*a1);
}

unint64_t sub_1D58EC844()
{
  unint64_t result;

  result = qword_1EFF4C3A8;
  if (!qword_1EFF4C3A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallLocation, &type metadata for PaywallLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4C3A8);
  }
  return result;
}

void sub_1D58EC888()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58EC8D4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D58EC950()
{
  __asm { BR              X10 }
}

uint64_t sub_1D58EC98C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D58EC9F4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58ECA3C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::PaywallLocation_optional sub_1D58ECAB8(Swift::String *a1)
{
  return PaywallLocation.init(rawValue:)(*a1);
}

uint64_t sub_1D58ECAC4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D58ECAF4 + 4 * byte_1D5AC71A0[*v0]))();
}

void sub_1D58ECAF4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656C6369747261;
  a1[1] = v1;
}

void sub_1D58ECB0C(_QWORD *a1@<X8>)
{
  *a1 = 0x466C656E6E616863;
  a1[1] = 0xEB00000000646565;
}

void sub_1D58ECB30(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "magazineFeed");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1D58ECB54()
{
  sub_1D58ECCC8();
  return sub_1D5AAE928();
}

uint64_t sub_1D58ECBB0()
{
  sub_1D58ECCC8();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for PaywallLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D58ECC48 + 4 * byte_1D5AC71A9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D58ECC7C + 4 * byte_1D5AC71A4[v4]))();
}

uint64_t sub_1D58ECC7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58ECC84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58ECC8CLL);
  return result;
}

uint64_t sub_1D58ECC98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58ECCA0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D58ECCA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58ECCAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallLocation()
{
  return &type metadata for PaywallLocation;
}

unint64_t sub_1D58ECCC8()
{
  unint64_t result;

  result = qword_1EFF4C3B0;
  if (!qword_1EFF4C3B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallLocation, &type metadata for PaywallLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4C3B0);
  }
  return result;
}

uint64_t PurchaseOffersData.offerIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PurchaseOffersData.offerIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PurchaseOffersData.offerIDs.modify())()
{
  return nullsub_1;
}

NewsAnalytics::PurchaseOffersData __swiftcall PurchaseOffersData.init(offerIDs:)(NewsAnalytics::PurchaseOffersData offerIDs)
{
  NewsAnalytics::PurchaseOffersData *v1;

  v1->offerIDs._rawValue = offerIDs.offerIDs._rawValue;
  return offerIDs;
}

uint64_t sub_1D58ECD54()
{
  return 0x734449726566666FLL;
}

uint64_t sub_1D58ECD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x734449726566666FLL && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58ECE00()
{
  sub_1D58ECF74();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58ECE28()
{
  sub_1D58ECF74();
  return sub_1D5AAEEE0();
}

uint64_t PurchaseOffersData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D58ED164(0, &qword_1ED9D0D60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58ECF74();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D58ECFB8();
  sub_1D58ED1C0(&qword_1ED9D0C40, (uint64_t (*)(void))sub_1D580C07C, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58ECF74()
{
  unint64_t result;

  result = qword_1ED9CFFA0;
  if (!qword_1ED9CFFA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7448, &type metadata for PurchaseOffersData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFA0);
  }
  return result;
}

void sub_1D58ECFB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9D0C38)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9D0C38);
  }
}

uint64_t PurchaseOffersData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D58ED164(0, &qword_1ED9D0CF0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58ECF74();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D58ECFB8();
    sub_1D58ED1C0(&qword_1ED9D0C48, (uint64_t (*)(void))sub_1D580C038, MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58ED164(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58ECF74();
    v7 = a3(a1, &type metadata for PurchaseOffersData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58ED1C0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D58ECFB8();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D58ED22C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PurchaseOffersData.init(from:)(a1, a2);
}

uint64_t sub_1D58ED240(_QWORD *a1)
{
  return PurchaseOffersData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PurchaseOffersData()
{
  return &type metadata for PurchaseOffersData;
}

uint64_t storeEnumTagSinglePayload for PurchaseOffersData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58ED2A4 + 4 * byte_1D5AC72D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58ED2C4 + 4 * byte_1D5AC72D5[v4]))();
}

_BYTE *sub_1D58ED2A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58ED2C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58ED2CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58ED2D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58ED2DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58ED2E4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseOffersData.CodingKeys()
{
  return &type metadata for PurchaseOffersData.CodingKeys;
}

unint64_t sub_1D58ED304()
{
  unint64_t result;

  result = qword_1EFF4C3B8;
  if (!qword_1EFF4C3B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7420, &type metadata for PurchaseOffersData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C3B8);
  }
  return result;
}

unint64_t sub_1D58ED34C()
{
  unint64_t result;

  result = qword_1ED9CFFB0;
  if (!qword_1ED9CFFB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7390, &type metadata for PurchaseOffersData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFB0);
  }
  return result;
}

unint64_t sub_1D58ED394()
{
  unint64_t result;

  result = qword_1ED9CFFA8;
  if (!qword_1ED9CFFA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC73B8, &type metadata for PurchaseOffersData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFFA8);
  }
  return result;
}

uint64_t dispatch thunk of HeartbeatEventServiceType.sendHeartbeat()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D58ED3E0(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  __int128 *v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;

  v14 = a1;
  v15 = a2;
  v12 = sub_1D5AAEA3C();
  v3 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AAEA30();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1D5AAE424();
  MEMORY[0x1E0C80A78](v8);
  v13 = sub_1D57C5A78();
  sub_1D5AAE418();
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1D57A84D4(&qword_1ED9CE4F8, 255, v7, MEMORY[0x1E0DEF828]);
  sub_1D57B1F4C(0, &qword_1ED9CEF40, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D57B4280(&qword_1ED9CEF48, &qword_1ED9CEF40, v7);
  sub_1D5AAEB2C();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v12);
  *(_QWORD *)(v2 + 64) = sub_1D5AAEA60();
  v9 = v15;
  *(_QWORD *)(v2 + 16) = v14;
  sub_1D57ADBD0(v9, v2 + 24);
  return v2;
}

void sub_1D58ED5CC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  _QWORD *v24;
  void (*v25)(char *, char *, _QWORD *);
  char *v26;
  id v27;
  void (*v28)(char *, char *, _QWORD *);
  unint64_t v29;
  uint64_t v30;
  id v31;
  unsigned __int8 v32;
  id v33;
  void (*v34)(char *, _QWORD *);
  _QWORD *v35;
  id v36;
  char *v37;
  _QWORD *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t (*v44)(uint64_t);
  char *v45;
  uint64_t v46;
  void (*v47)(char *, _QWORD *);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1D5AAE400();
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  MEMORY[0x1E0C80A78](v2);
  v51 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D5AAE424();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x1E0C80A78](v4);
  v48 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9C6F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v47 - v7;
  v55 = (_QWORD *)sub_1D5AAD668();
  v9 = *(v55 - 1);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v55);
  v12 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v47 - v14;
  MEMORY[0x1E0C80A78](v13);
  v54 = (char *)&v47 - v16;
  v17 = (void *)v0[2];
  v18 = objc_msgSend(objc_msgSend(v17, sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
  swift_unknownObjectRelease();
  if ((objc_msgSend(v18, sel_respondsToSelector_, sel_foregroundHeartbeatEventEnabled) & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_12:
    if (qword_1ED9CE440 == -1)
    {
LABEL_13:
      v55 = (id)qword_1ED9CE430;
      sub_1D5AAEA24();
      sub_1D5AAE328();

      return;
    }
LABEL_22:
    swift_once();
    goto LABEL_13;
  }
  v19 = objc_msgSend(v18, sel_foregroundHeartbeatEventEnabled);
  swift_unknownObjectRelease();
  if ((v19 & 1) == 0)
    goto LABEL_12;
  v21 = v1[6];
  v20 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v21);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v21, v20) & 1) == 0)
  {
    if (qword_1ED9CE440 == -1)
      goto LABEL_13;
    goto LABEL_22;
  }
  v22 = objc_msgSend(objc_msgSend(v17, sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
  swift_unknownObjectRelease();
  if ((objc_msgSend(v22, sel_respondsToSelector_, sel_appAnalyticsAppHeartbeatEndpointUrlForEnvironment_) & 1) == 0)
  {
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v9 + 56))(v8, 1, 1, v55);
    goto LABEL_17;
  }
  v23 = objc_msgSend(v22, sel_appAnalyticsAppHeartbeatEndpointUrlForEnvironment_, FCDefaultsReadEndpointEnvironment());
  sub_1D5AAD650();
  swift_unknownObjectRelease();

  v24 = v55;
  (*(void (**)(char *, _QWORD, uint64_t, _QWORD *))(v9 + 56))(v8, 0, 1, v55);
  if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v9 + 48))(v8, 1, v24) == 1)
  {
LABEL_17:
    sub_1D57E6C28((uint64_t)v8);
    if (qword_1ED9CE440 != -1)
      swift_once();
    v36 = (id)qword_1ED9CE430;
    sub_1D5AAEA0C();
    sub_1D5AAE328();

    return;
  }
  v25 = *(void (**)(char *, char *, _QWORD *))(v9 + 32);
  v26 = v54;
  v25(v54, v8, v24);
  if (qword_1ED9CE440 != -1)
    swift_once();
  v27 = (id)qword_1ED9CE430;
  sub_1D5AAEA24();
  sub_1D5AAE328();

  v28 = *(void (**)(char *, char *, _QWORD *))(v9 + 16);
  v28(v15, v26, v24);
  v28(v12, v15, v24);
  v29 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v1;
  v25((char *)(v30 + v29), v15, v24);
  swift_retain();
  v31 = objc_msgSend(objc_msgSend(v17, sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
  swift_unknownObjectRelease();
  if ((objc_msgSend(v31, sel_respondsToSelector_, sel_foregroundHeartbeatEventShouldUseQueue) & 1) != 0)
  {
    v32 = objc_msgSend(v31, sel_foregroundHeartbeatEventShouldUseQueue);
    swift_unknownObjectRelease();
    if ((v32 & 1) == 0)
    {
      v33 = (id)qword_1ED9CE430;
      sub_1D5AAEA24();
      sub_1D5AAE328();

      sub_1D58EDDE0((uint64_t)v1, (uint64_t)v12);
      swift_release();
      v34 = *(void (**)(char *, _QWORD *))(v9 + 8);
      v35 = v55;
      v34(v12, v55);
      v34(v54, v35);
      return;
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  v47 = *(void (**)(char *, _QWORD *))(v9 + 8);
  v37 = v12;
  v38 = v55;
  v47(v37, v55);
  v39 = (id)qword_1ED9CE430;
  sub_1D5AAEA24();
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1D5AAE328();

  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = sub_1D58EE640;
  *(_QWORD *)(v41 + 24) = v30;
  aBlock[4] = sub_1D58DA1AC;
  aBlock[5] = v41;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D57C5BBC;
  aBlock[3] = &block_descriptor_1;
  v42 = _Block_copy(aBlock);
  swift_retain();
  v43 = v48;
  sub_1D5AAE40C();
  v56 = v40;
  v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1D57A84D4((unint64_t *)&unk_1ED9CEEF8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1D57B1F4C(0, &qword_1ED9CEF30, v44, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1D57B4280(&qword_1ED9CEF38, &qword_1ED9CEF30, v44);
  v45 = v51;
  v46 = v53;
  sub_1D5AAEB2C();
  MEMORY[0x1D8278E34](0, v43, v45, v42);
  _Block_release(v42);
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v50);
  v47(v54, v38);
  swift_release();
}

void sub_1D58EDDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;

  v66 = a2;
  v3 = sub_1D5AADD58();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v67 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1D5AAD734();
  v6 = *(_QWORD *)(v68 - 8);
  v7 = MEMORY[0x1E0C80A78](v68);
  v64 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v52 - v9;
  v11 = sub_1D5AAD710();
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v63 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v52 - v14;
  v16 = (int *)type metadata accessor for HeartbeatData();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for HeartbeatEvent.Model(0);
  MEMORY[0x1E0C80A78](v62);
  v65 = (uint64_t)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9CE440 != -1)
    swift_once();
  v20 = (id)qword_1ED9CE430;
  sub_1D5AAEA24();
  sub_1D5AAE328();

  v60 = sub_1D58EE3D0();
  v61 = v21;
  v22 = objc_msgSend(*(id *)(a1 + 16), sel_userInfo);
  v23 = objc_msgSend(v22, sel_feldsparID);

  v53 = v4;
  v54 = v3;
  if (v23)
  {
    v24 = sub_1D5AAE820();
    v55 = v25;
    v56 = v24;

  }
  else
  {
    v55 = 0xE000000000000000;
    v56 = 0;
  }
  v26 = v68;
  sub_1D5AAD704();
  sub_1D5AAD728();
  v27 = sub_1D5AAD71C();
  v29 = v28;
  v57 = *(void (**)(char *, uint64_t))(v6 + 8);
  v57(v10, v26);
  v30 = (id)NSSNTPBAnalyticsOsVersionValue();
  v31 = sub_1D5AAE820();
  v33 = v32;

  v34 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v35 = objc_msgSend(v34, sel_na_buildVersion);

  if (v35)
  {
    v36 = sub_1D5AAE820();
    v38 = v37;

    v39 = v55;
    *(_QWORD *)v18 = v56;
    *((_QWORD *)v18 + 1) = v39;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(&v18[v16[5]], v15, v59);
    v40 = (uint64_t *)&v18[v16[6]];
    *v40 = v27;
    v40[1] = v29;
    v41 = (uint64_t *)&v18[v16[7]];
    *v41 = v31;
    v41[1] = v33;
    v42 = (uint64_t *)&v18[v16[8]];
    *v42 = v36;
    v42[1] = v38;
    v43 = v65;
    sub_1D57CADB0((uint64_t)v18, v65);
    v44 = (void *)qword_1ED9CE430;
    v45 = (void *)objc_opt_self();
    v46 = v44;
    v47 = objc_msgSend(v45, sel_mainBundle);
    sub_1D5AAEA84();

    sub_1D5AADED8();
    v48 = objc_msgSend(v45, sel_mainBundle);
    v49 = (void *)sub_1D5AADEC0();
    sub_1D5AAD704();
    v50 = v64;
    sub_1D5AAD728();
    sub_1D5AAD71C();
    v57(v50, v68);
    v51 = v67;
    sub_1D5AADD4C();
    sub_1D57A84D4(&qword_1ED9CEBA8, 255, type metadata accessor for HeartbeatEvent.Model, (uint64_t)&protocol conformance descriptor for HeartbeatEvent.Model);
    sub_1D5AADD40();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v54);
    sub_1D57CA7D0(v43);
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1D58EE3D0()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  char v4;

  if (!objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
    return 0;
  if (qword_1ED9D1388 != -1)
    swift_once();
  sub_1D57A84D4((unint64_t *)&unk_1ED9D1528, v0, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatEventService, (uint64_t)&unk_1D5AC757C);
  sub_1D5AAD7F4();
  if (v4 == 1)
  {
    if (qword_1ED9CE440 != -1)
      swift_once();
    v1 = (id)qword_1ED9CE430;
    sub_1D5AAEA24();
    sub_1D5AAE328();
    v2 = 0xD00000000000002BLL;
  }
  else
  {
    if (qword_1ED9CE440 != -1)
      swift_once();
    v1 = (id)qword_1ED9CE430;
    sub_1D5AAEA24();
    sub_1D5AAE328();
    v2 = 0;
  }

  return v2;
}

uint64_t sub_1D58EE58C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1D58EE5C4()
{
  return sub_1D5AAE118();
}

uint64_t sub_1D58EE5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D5AAD668();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1D58EE640()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D5AAD668() - 8) + 80);
  sub_1D58EDDE0(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1D58EE670()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t GroupSectionData.sectionIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupSectionData.sectionIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*GroupSectionData.sectionIDs.modify())()
{
  return nullsub_1;
}

uint64_t GroupSectionData.init(sectionIDs:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D58EE6DC()
{
  return 0x496E6F6974636573;
}

uint64_t sub_1D58EE6F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x496E6F6974636573 && a2 == 0xEA00000000007344)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58EE798()
{
  sub_1D58EE90C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58EE7C0()
{
  sub_1D58EE90C();
  return sub_1D5AAEEE0();
}

uint64_t GroupSectionData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D58EEAA8(0, &qword_1ED9CC900, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58EE90C();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED18();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58EE90C()
{
  unint64_t result;

  result = qword_1ED9C8B98;
  if (!qword_1ED9C8B98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7734, &type metadata for GroupSectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8B98);
  }
  return result;
}

uint64_t GroupSectionData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D58EEAA8(0, &qword_1EFF4C3C0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58EE90C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58EEAA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58EE90C();
    v7 = a3(a1, &type metadata for GroupSectionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58EEB0C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return GroupSectionData.init(from:)(a1, a2);
}

uint64_t sub_1D58EEB20(_QWORD *a1)
{
  return GroupSectionData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for GroupSectionData()
{
  return &type metadata for GroupSectionData;
}

uint64_t storeEnumTagSinglePayload for GroupSectionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58EEB84 + 4 * byte_1D5AC75C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58EEBA4 + 4 * byte_1D5AC75C5[v4]))();
}

_BYTE *sub_1D58EEB84(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58EEBA4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58EEBAC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58EEBB4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58EEBBC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58EEBC4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GroupSectionData.CodingKeys()
{
  return &type metadata for GroupSectionData.CodingKeys;
}

unint64_t sub_1D58EEBE4()
{
  unint64_t result;

  result = qword_1EFF4C3C8;
  if (!qword_1EFF4C3C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC770C, &type metadata for GroupSectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C3C8);
  }
  return result;
}

unint64_t sub_1D58EEC2C()
{
  unint64_t result;

  result = qword_1ED9C8BA8;
  if (!qword_1ED9C8BA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC767C, &type metadata for GroupSectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8BA8);
  }
  return result;
}

unint64_t sub_1D58EEC74()
{
  unint64_t result;

  result = qword_1ED9C8BA0;
  if (!qword_1ED9C8BA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC76A4, &type metadata for GroupSectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8BA0);
  }
  return result;
}

uint64_t sub_1D58EECB8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4C3D0, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleShareEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47188, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C3D0, a1);
}

uint64_t sub_1D58EECF8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4C3E8, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleShareEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47190, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C3E8, a1);
}

uint64_t ArticleShareEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleShareEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleShareEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleShareEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.articleData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.actionData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.feedData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.groupData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.viewData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.userChannelContextData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.shareContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.shareContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.shareContextData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.issueData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.channelData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.adData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.adData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleShareEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleShareEvent.articleExposureContextData.modify())()
{
  type metadata accessor for ArticleShareEvent(0);
  return nullsub_1;
}

uint64_t ArticleShareEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleShareEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v10, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v10, v29);
}

uint64_t ArticleShareEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleShareEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ArticleShareEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleShareEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ArticleShareEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleShareEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *ArticleShareEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for ArticleShareEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t ArticleShareEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleShareEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleShareEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ArticleShareEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 40));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ArticleShareEvent.Model.shareContextData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ArticleShareEvent.Model(0) + 44));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleShareEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleShareEvent.Model(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleShareEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleShareEvent.Model(0) + 52));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleShareEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent.Model(0) + 56);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleShareEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for ArticleShareEvent.Model(0) + 60);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(v3 + 32);
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleShareEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleShareEvent.Model(0) + 64));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57E90BC(v4, v5);
}

__n128 ArticleShareEvent.Model.init(eventData:articleData:actionData:feedData:groupData:viewData:userChannelContextData:shareContextData:issueData:userBundleSubscriptionContextData:channelData:adData:articleExposureContextData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, char *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, char *a11, uint64_t *a12, __int128 *a13, __int128 *a14)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 result;
  char v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __n128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _BYTE v73[23];
  _BYTE v74[144];

  v72 = a2[6];
  *(_OWORD *)v73 = a2[7];
  *(_QWORD *)&v73[15] = *(_QWORD *)((char *)a2 + 127);
  v68 = a2[2];
  v69 = a2[3];
  v70 = a2[4];
  v71 = a2[5];
  v66 = *a2;
  v67 = a2[1];
  v38 = *a3;
  v40 = *a4;
  v39 = *((_QWORD *)a4 + 2);
  sub_1D57DD5B8(a5, (uint64_t)v74);
  v41 = a6[1];
  v42 = *a6;
  LOWORD(a6) = *((_WORD *)a6 + 8);
  v43 = a7[1];
  v44 = *a7;
  LOWORD(a7) = *((_WORD *)a7 + 1);
  v19 = *a8;
  v20 = a8[1];
  v48 = *a10;
  v47 = *((_QWORD *)a10 + 2);
  v45 = v19;
  v46 = *((_QWORD *)a10 + 3);
  v56 = *a11;
  v54 = *((_QWORD *)a11 + 2);
  v55 = *((_QWORD *)a11 + 1);
  v52 = a11[25];
  v53 = a11[24];
  v50 = *((_QWORD *)a11 + 5);
  v51 = *((_QWORD *)a11 + 4);
  v49 = a11[48];
  v61 = a12[1];
  v62 = *a12;
  v59 = *((_BYTE *)a12 + 17);
  v60 = *((_BYTE *)a12 + 16);
  v57 = a12[4];
  v58 = a12[3];
  v21 = *((_QWORD *)a13 + 2);
  v22 = *((_QWORD *)a13 + 3);
  v23 = *((_BYTE *)a13 + 32);
  v65 = *a14;
  v63 = *a13;
  v64 = (__n128)a14[1];
  v24 = *((_QWORD *)a14 + 4);
  v25 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a9, a1, v25);
  v26 = (int *)type metadata accessor for ArticleShareEvent.Model(0);
  v27 = a9 + v26[5];
  *(_OWORD *)(v27 + 96) = v72;
  *(_OWORD *)(v27 + 112) = *(_OWORD *)v73;
  *(_QWORD *)(v27 + 127) = *(_QWORD *)&v73[15];
  *(_OWORD *)(v27 + 32) = v68;
  *(_OWORD *)(v27 + 48) = v69;
  *(_OWORD *)(v27 + 64) = v70;
  *(_OWORD *)(v27 + 80) = v71;
  *(_OWORD *)v27 = v66;
  *(_OWORD *)(v27 + 16) = v67;
  *(_BYTE *)(a9 + v26[6]) = v38;
  v28 = a9 + v26[7];
  *(_OWORD *)v28 = v40;
  *(_QWORD *)(v28 + 16) = v39;
  sub_1D57DD5B8((uint64_t)v74, a9 + v26[8]);
  v29 = a9 + v26[9];
  *(_QWORD *)v29 = v42;
  *(_QWORD *)(v29 + 8) = v41;
  *(_WORD *)(v29 + 16) = (_WORD)a6;
  v30 = a9 + v26[10];
  *(_BYTE *)v30 = v44;
  *(_BYTE *)(v30 + 1) = v43;
  *(_WORD *)(v30 + 2) = (_WORD)a7;
  v31 = (_QWORD *)(a9 + v26[11]);
  *v31 = v45;
  v31[1] = v20;
  v32 = a9 + v26[12];
  *(_OWORD *)v32 = v48;
  *(_QWORD *)(v32 + 16) = v47;
  *(_QWORD *)(v32 + 24) = v46;
  v33 = a9 + v26[13];
  *(_BYTE *)v33 = v56;
  *(_QWORD *)(v33 + 8) = v55;
  *(_QWORD *)(v33 + 16) = v54;
  *(_BYTE *)(v33 + 24) = v53;
  *(_BYTE *)(v33 + 25) = v52;
  *(_QWORD *)(v33 + 32) = v51;
  *(_QWORD *)(v33 + 40) = v50;
  *(_BYTE *)(v33 + 48) = v49;
  v34 = a9 + v26[14];
  *(_QWORD *)v34 = v62;
  *(_QWORD *)(v34 + 8) = v61;
  *(_BYTE *)(v34 + 16) = v60;
  *(_BYTE *)(v34 + 17) = v59;
  *(_QWORD *)(v34 + 24) = v58;
  *(_QWORD *)(v34 + 32) = v57;
  v35 = a9 + v26[15];
  *(_OWORD *)v35 = v63;
  *(_QWORD *)(v35 + 16) = v21;
  *(_QWORD *)(v35 + 24) = v22;
  *(_BYTE *)(v35 + 32) = v23;
  v36 = a9 + v26[16];
  result = v64;
  *(_OWORD *)v36 = v65;
  *(__n128 *)(v36 + 16) = v64;
  *(_QWORD *)(v36 + 32) = v24;
  return result;
}

uint64_t sub_1D58F0380(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58F03B8 + 4 * byte_1D5AC7790[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58F03B8()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D58F04A4()
{
  return 0x617461446461;
}

void sub_1D58F04B8()
{
  JUMPOUT(0x1D58F04D0);
}

uint64_t sub_1D58F04DC()
{
  unsigned __int8 *v0;

  return sub_1D58F0380(*v0);
}

uint64_t sub_1D58F04E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58F526C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58F0508()
{
  sub_1D58F0A88();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58F0530()
{
  sub_1D58F0A88();
  return sub_1D5AAEEE0();
}

uint64_t ArticleShareEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  char *v20;
  char v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v46;
  char v47;
  _OWORD v48[2];
  __int128 v49;
  char v50;
  _OWORD v51[7];
  _BYTE v52[23];
  char v53;
  __int128 v54;
  uint64_t v55;
  char v56;

  v3 = v1;
  sub_1D58F1408(0, &qword_1EFF4C400, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v46 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58F0A88();
  sub_1D5AAEEC8();
  v56 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleShareEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_OWORD *)(v11 + 112);
    v51[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v52 = v12;
    *(_QWORD *)&v52[15] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    v51[2] = *(_OWORD *)(v11 + 32);
    v51[3] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v51[4] = *(_OWORD *)(v11 + 64);
    v51[5] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    v51[0] = *(_OWORD *)v11;
    v51[1] = v15;
    LOBYTE(v48[0]) = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    LOBYTE(v51[0]) = *(_BYTE *)(v3 + v10[6]);
    LOBYTE(v48[0]) = 2;
    sub_1D57CC038();
    sub_1D5AAED6C();
    v16 = (__int128 *)(v3 + v10[7]);
    v17 = *((_QWORD *)v16 + 2);
    v54 = *v16;
    v55 = v17;
    v53 = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[8], (uint64_t)v51);
    sub_1D57DD5B8((uint64_t)v51, (uint64_t)v48);
    v47 = 4;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v18 = v3 + v10[9];
    v19 = *(_WORD *)(v18 + 16);
    v48[0] = *(_OWORD *)v18;
    LOWORD(v48[1]) = v19;
    v47 = 5;
    sub_1D57C62A4();
    sub_1D5AAED18();
    v20 = (char *)(v3 + v10[10]);
    v21 = *v20;
    v22 = v20[1];
    LOWORD(v20) = *((_WORD *)v20 + 1);
    LOBYTE(v48[0]) = v21;
    BYTE1(v48[0]) = v22;
    WORD1(v48[0]) = (_WORD)v20;
    v47 = 6;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v23 = (uint64_t *)(v3 + v10[11]);
    v25 = *v23;
    v24 = v23[1];
    *(_QWORD *)&v48[0] = v25;
    *((_QWORD *)&v48[0] + 1) = v24;
    v47 = 7;
    sub_1D57C97AC();
    sub_1D5AAED6C();
    v26 = (_OWORD *)(v3 + v10[12]);
    v27 = v26[1];
    v48[0] = *v26;
    v48[1] = v27;
    v47 = 8;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v28 = v3 + v10[13];
    v29 = *(_BYTE *)(v28 + 24);
    v30 = *(_BYTE *)(v28 + 25);
    v31 = *(_BYTE *)(v28 + 48);
    LOBYTE(v48[0]) = *(_BYTE *)v28;
    *(_OWORD *)((char *)v48 + 8) = *(_OWORD *)(v28 + 8);
    BYTE8(v48[1]) = v29;
    BYTE9(v48[1]) = v30;
    v49 = *(_OWORD *)(v28 + 32);
    v50 = v31;
    v47 = 9;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v32 = (uint64_t *)(v3 + v10[14]);
    v33 = *v32;
    v34 = v32[1];
    v35 = *((_BYTE *)v32 + 16);
    v36 = *((_BYTE *)v32 + 17);
    v38 = v32[3];
    v37 = v32[4];
    *(_QWORD *)&v48[0] = v33;
    *((_QWORD *)&v48[0] + 1) = v34;
    LOBYTE(v48[1]) = v35;
    BYTE1(v48[1]) = v36;
    *((_QWORD *)&v48[1] + 1) = v38;
    *(_QWORD *)&v49 = v37;
    v47 = 10;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v39 = v3 + v10[15];
    v40 = *(_BYTE *)(v39 + 32);
    v41 = *(_OWORD *)(v39 + 16);
    v48[0] = *(_OWORD *)v39;
    v48[1] = v41;
    LOBYTE(v49) = v40;
    v47 = 11;
    sub_1D57C690C();
    sub_1D5AAED18();
    v42 = v3 + v10[16];
    v43 = *(_QWORD *)(v42 + 32);
    v44 = *(_OWORD *)(v42 + 16);
    v48[0] = *(_OWORD *)v42;
    v48[1] = v44;
    *(_QWORD *)&v49 = v43;
    v47 = 12;
    sub_1D57C71C4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58F0A88()
{
  unint64_t result;

  result = qword_1EFF4C408;
  if (!qword_1EFF4C408)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7AFC, &type metadata for ArticleShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C408);
  }
  return result;
}

uint64_t ArticleShareEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int v20;
  int *v21;
  char *v22;
  int *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  __int16 v31;
  char *v32;
  char v33;
  __int16 v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  char v40;
  char v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _OWORD v70[2];
  __int128 v71;
  char v72;
  char v73;
  _BYTE v74[144];
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _BYTE v82[23];
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  _OWORD v90[3];
  int *v91;

  v61 = a2;
  v4 = sub_1D5AADF98();
  v65 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58F1408(0, &qword_1EFF4C410, MEMORY[0x1E0DED048]);
  v63 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v60 - v9;
  v91 = (int *)type metadata accessor for ArticleShareEvent.Model(0);
  MEMORY[0x1E0C80A78](v91);
  v69 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v67 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D58F0A88();
  v62 = v10;
  sub_1D5AAEEB0();
  v64 = v4;
  if (v2)
  {
    v13 = v69;
    result = __swift_destroy_boxed_opaque_existential_1(v67);
    v68 = v2;
    v66 = 0;
    LODWORD(v67) = 0;
    v20 = 0;
    v21 = v91;
    goto LABEL_5;
  }
  v60 = v8;
  LOBYTE(v83) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v22 = v69;
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v69, v6, v4);
  v74[143] = 1;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v23 = v91;
  v24 = &v22[v91[5]];
  v25 = *(_OWORD *)v82;
  *((_OWORD *)v24 + 6) = v81;
  *((_OWORD *)v24 + 7) = v25;
  *(_QWORD *)(v24 + 127) = *(_QWORD *)&v82[15];
  v26 = v78;
  *((_OWORD *)v24 + 2) = v77;
  *((_OWORD *)v24 + 3) = v26;
  v27 = v80;
  *((_OWORD *)v24 + 4) = v79;
  *((_OWORD *)v24 + 5) = v27;
  v28 = v76;
  *(_OWORD *)v24 = v75;
  *((_OWORD *)v24 + 1) = v28;
  v74[0] = 2;
  sub_1D57CBFF4();
  sub_1D5AAECD0();
  v22[v23[6]] = v83;
  v74[0] = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v29 = v84;
  v30 = &v22[v23[7]];
  *(_OWORD *)v30 = v83;
  *((_QWORD *)v30 + 2) = v29;
  v74[142] = 4;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)&v83, (uint64_t)v74);
  sub_1D57DD5B8((uint64_t)v74, (uint64_t)&v22[v23[8]]);
  v73 = 5;
  sub_1D57C6260();
  sub_1D5AAEC7C();
  v31 = v70[1];
  v32 = &v22[v23[9]];
  *(_OWORD *)v32 = v70[0];
  *((_WORD *)v32 + 8) = v31;
  v73 = 6;
  sub_1D57C7AE0();
  sub_1D5AAECD0();
  v33 = BYTE1(v70[0]);
  v34 = WORD1(v70[0]);
  v35 = &v22[v23[10]];
  *v35 = v70[0];
  v35[1] = v33;
  *((_WORD *)v35 + 1) = v34;
  v73 = 7;
  sub_1D57C9768();
  sub_1D5AAECD0();
  v36 = *((_QWORD *)&v70[0] + 1);
  v37 = &v22[v23[11]];
  *(_QWORD *)v37 = *(_QWORD *)&v70[0];
  *((_QWORD *)v37 + 1) = v36;
  v73 = 8;
  sub_1D57C5ED8();
  sub_1D5AAEC7C();
  v38 = &v22[v91[12]];
  v39 = v70[1];
  *(_OWORD *)v38 = v70[0];
  *((_OWORD *)v38 + 1) = v39;
  v73 = 9;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v66 = 1;
  v68 = 0;
  v40 = BYTE8(v70[1]);
  v41 = BYTE9(v70[1]);
  v42 = v72;
  v43 = &v69[v91[13]];
  *v43 = v70[0];
  *(_OWORD *)(v43 + 8) = *(_OWORD *)((char *)v70 + 8);
  v43[24] = v40;
  v43[25] = v41;
  *((_OWORD *)v43 + 2) = v71;
  v43[48] = v42;
  v73 = 10;
  sub_1D57CB874();
  v44 = v68;
  sub_1D5AAECD0();
  v68 = v44;
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v63);
    __swift_destroy_boxed_opaque_existential_1(v67);
    v20 = 0;
    LODWORD(v67) = 0;
  }
  else
  {
    v45 = *((_QWORD *)&v70[0] + 1);
    v46 = v70[1];
    v47 = BYTE1(v70[1]);
    v48 = *((_QWORD *)&v70[1] + 1);
    v49 = v71;
    v50 = &v69[v91[14]];
    *(_QWORD *)v50 = *(_QWORD *)&v70[0];
    *((_QWORD *)v50 + 1) = v45;
    v50[16] = v46;
    v50[17] = v47;
    *((_QWORD *)v50 + 3) = v48;
    *((_QWORD *)v50 + 4) = v49;
    v73 = 11;
    sub_1D57C68C8();
    v51 = v68;
    sub_1D5AAEC7C();
    v68 = v51;
    if (v51)
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v63);
      __swift_destroy_boxed_opaque_existential_1(v67);
      LODWORD(v67) = 0;
      v20 = 1;
    }
    else
    {
      v52 = v71;
      v53 = &v69[v91[15]];
      v54 = v70[1];
      *(_OWORD *)v53 = v70[0];
      *((_OWORD *)v53 + 1) = v54;
      v53[32] = v52;
      v73 = 12;
      sub_1D57C7180();
      v55 = v68;
      sub_1D5AAEC7C();
      v68 = v55;
      if (!v55)
      {
        (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v63);
        v56 = v71;
        v57 = (uint64_t)v69;
        v58 = &v69[v91[16]];
        v59 = v70[1];
        *(_OWORD *)v58 = v70[0];
        *((_OWORD *)v58 + 1) = v59;
        *((_QWORD *)v58 + 4) = v56;
        sub_1D58F1464(v57, v61);
        __swift_destroy_boxed_opaque_existential_1(v67);
        return sub_1D58F14A8(v57);
      }
      (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v63);
      __swift_destroy_boxed_opaque_existential_1(v67);
      v20 = 1;
      LODWORD(v67) = 1;
    }
  }
  v13 = v69;
  (*(void (**)(char *, uint64_t))(v65 + 8))(v69, v64);
  v15 = &v13[v91[5]];
  v16 = *((_OWORD *)v15 + 7);
  v89 = *((_OWORD *)v15 + 6);
  v90[0] = v16;
  *(_QWORD *)((char *)v90 + 15) = *(_QWORD *)(v15 + 127);
  v17 = *((_OWORD *)v15 + 3);
  v85 = *((_OWORD *)v15 + 2);
  v86 = v17;
  v18 = *((_OWORD *)v15 + 5);
  v87 = *((_OWORD *)v15 + 4);
  v88 = v18;
  v19 = *((_OWORD *)v15 + 1);
  v83 = *(_OWORD *)v15;
  v84 = v19;
  sub_1D57D5AE0((uint64_t)&v83);
  v21 = v91;
  sub_1D57DAEDC(*(_QWORD *)&v13[v91[7]], *(_QWORD *)&v13[v91[7] + 8], *(_QWORD *)&v13[v91[7] + 16]);
  sub_1D57DD5B8((uint64_t)&v13[v21[8]], (uint64_t)&v83);
  sub_1D57DE9C8(&v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1D57EA700(*(_QWORD *)&v13[v21[12]], *(_QWORD *)&v13[v21[12] + 8]);
  if ((v66 & 1) == 0)
  {
LABEL_5:
    if (v20)
      goto LABEL_6;
LABEL_9:
    if (!(_DWORD)v67)
      return result;
    return sub_1D57EA700(*(_QWORD *)&v13[v21[15]], *(_QWORD *)&v13[v21[15] + 8]);
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
    goto LABEL_9;
LABEL_6:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v67 & 1) == 0)
    return result;
  return sub_1D57EA700(*(_QWORD *)&v13[v21[15]], *(_QWORD *)&v13[v21[15] + 8]);
}

void sub_1D58F1408(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58F0A88();
    v7 = a3(a1, &type metadata for ArticleShareEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58F1464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58F14A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58F14E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleShareEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58F14F8(_QWORD *a1)
{
  return ArticleShareEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58F150C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47188, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C3D0, a1);
}

uint64_t sub_1D58F1530@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47190, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C3E8, a1);
}

uint64_t sub_1D58F1554@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v11, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v11, v30);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleShareEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v56 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v56 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  }
  return a1;
}

uint64_t destroy for ArticleShareEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
}

uint64_t initializeWithCopy for ArticleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  return a1;
}

uint64_t assignWithCopy for ArticleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

uint64_t initializeWithTake for ArticleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  return a1;
}

uint64_t assignWithTake for ArticleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleShareEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58F3048(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                          v8 = v24;
                          v12 = *(_QWORD *)(v24 - 8);
                          v13 = a3[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleShareEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58F33D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C71B0, (void (*)(void))sub_1D57C9768, (void (*)(void))sub_1D57C97AC);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                          v10 = v26;
                          v14 = *(_QWORD *)(v26 - 8);
                          v15 = a4[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleShareEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v12;
    v10[32] = v11[32];
    v13 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    v14 = *((_QWORD *)v11 + 9);
    *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
    v10[112] = v11[112];
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(_QWORD *)((char *)a2 + v15 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18 == 1)
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    }
    else
    {
      *v16 = *v17;
      *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
      *((_QWORD *)v16 + 2) = v18;
      swift_bridgeObjectRetain();
    }
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *((_QWORD *)v22 + 2);
    if (v23)
    {
      *(_WORD *)v21 = *(_WORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      *((_QWORD *)v21 + 2) = v23;
      *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
      v24 = *((_QWORD *)v22 + 5);
      *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
      *((_QWORD *)v21 + 5) = v24;
      v25 = *((_QWORD *)v22 + 7);
      *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
      *((_QWORD *)v21 + 7) = v25;
      v26 = *((_QWORD *)v22 + 9);
      *((_QWORD *)v21 + 8) = *((_QWORD *)v22 + 8);
      *((_QWORD *)v21 + 9) = v26;
      v21[80] = v22[80];
      v27 = *((_QWORD *)v22 + 12);
      *((_QWORD *)v21 + 11) = *((_QWORD *)v22 + 11);
      *((_QWORD *)v21 + 12) = v27;
      *((_QWORD *)v21 + 13) = *((_QWORD *)v22 + 13);
      v21[112] = v22[112];
      v28 = *((_QWORD *)v22 + 16);
      *((_QWORD *)v21 + 15) = *((_QWORD *)v22 + 15);
      *((_QWORD *)v21 + 16) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v29 = *((_OWORD *)v22 + 7);
      *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
      *((_OWORD *)v21 + 7) = v29;
      *((_QWORD *)v21 + 16) = *((_QWORD *)v22 + 16);
      v30 = *((_OWORD *)v22 + 3);
      *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
      *((_OWORD *)v21 + 3) = v30;
      v31 = *((_OWORD *)v22 + 5);
      *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
      *((_OWORD *)v21 + 5) = v31;
      v32 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v32;
    }
    v33 = a3[9];
    v34 = a3[10];
    v35 = (char *)a1 + v33;
    v36 = (char *)a2 + v33;
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    *((_WORD *)v35 + 8) = *((_WORD *)v36 + 8);
    *(_DWORD *)((char *)a1 + v34) = *(_DWORD *)((char *)a2 + v34);
    v38 = a3[11];
    v39 = a3[12];
    v40 = (_QWORD *)((char *)a1 + v38);
    v41 = (_QWORD *)((char *)a2 + v38);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = (char *)a1 + v39;
    v44 = (char *)a2 + v39;
    v45 = *(_QWORD *)((char *)a2 + v39 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v45)
    {
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *((_QWORD *)v43 + 1) = v45;
      *((_WORD *)v43 + 8) = *((_WORD *)v44 + 8);
      *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v46 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v46;
    }
    v47 = a3[13];
    v48 = a3[14];
    v49 = (char *)a1 + v47;
    v50 = (char *)a2 + v47;
    *v49 = *v50;
    v51 = *((_QWORD *)v50 + 2);
    *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
    *((_QWORD *)v49 + 2) = v51;
    *((_WORD *)v49 + 12) = *((_WORD *)v50 + 12);
    v52 = *((_QWORD *)v50 + 5);
    *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
    *((_QWORD *)v49 + 5) = v52;
    v49[48] = v50[48];
    v53 = (char *)a1 + v48;
    v54 = (char *)a2 + v48;
    v55 = *((_QWORD *)v54 + 1);
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *((_QWORD *)v53 + 1) = v55;
    v53[16] = v54[16];
    v53[17] = v54[17];
    v56 = *((_QWORD *)v54 + 4);
    *((_QWORD *)v53 + 3) = *((_QWORD *)v54 + 3);
    *((_QWORD *)v53 + 4) = v56;
    v57 = a3[15];
    v58 = (char *)a1 + v57;
    v59 = (char *)a2 + v57;
    v60 = *(_QWORD *)((char *)a2 + v57 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v60)
    {
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v60;
      v61 = *((_QWORD *)v59 + 3);
      *((_QWORD *)v58 + 2) = *((_QWORD *)v59 + 2);
      *((_QWORD *)v58 + 3) = v61;
      v58[32] = v59[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v62 = *((_OWORD *)v59 + 1);
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v62;
      v58[32] = v59[32];
    }
    v63 = a3[16];
    v64 = (char *)a1 + v63;
    v65 = (char *)a2 + v63;
    v66 = *((_QWORD *)v65 + 1);
    if (v66 == 1)
    {
      v67 = *((_OWORD *)v65 + 1);
      *(_OWORD *)v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v67;
      *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
    }
    else
    {
      *(_QWORD *)v64 = *(_QWORD *)v65;
      *((_QWORD *)v64 + 1) = v66;
      v68 = *((_QWORD *)v65 + 3);
      *((_QWORD *)v64 + 2) = *((_QWORD *)v65 + 2);
      *((_QWORD *)v64 + 3) = v68;
      *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for ArticleShareEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[12] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[15] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + a2[16] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ArticleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v12;
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  v13 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 72) = v13;
  *(_BYTE *)(v9 + 80) = *(_BYTE *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 + 104);
  *(_BYTE *)(v9 + 112) = *(_BYTE *)(v10 + 112);
  *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(_BYTE *)(v9 + 132) = *(_BYTE *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17 == 1)
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  }
  else
  {
    *(_BYTE *)v15 = *(_BYTE *)v16;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
    *(_QWORD *)(v15 + 16) = v17;
    swift_bridgeObjectRetain();
  }
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    *(_WORD *)v19 = *(_WORD *)v20;
    *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
    *(_QWORD *)(v19 + 16) = v21;
    *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
    v22 = *(_QWORD *)(v20 + 40);
    *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
    *(_QWORD *)(v19 + 40) = v22;
    v23 = *(_QWORD *)(v20 + 56);
    *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
    *(_QWORD *)(v19 + 56) = v23;
    v24 = *(_QWORD *)(v20 + 72);
    *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
    *(_QWORD *)(v19 + 72) = v24;
    *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
    v25 = *(_QWORD *)(v20 + 96);
    *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
    *(_QWORD *)(v19 + 96) = v25;
    *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
    *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
    v26 = *(_QWORD *)(v20 + 128);
    *(_QWORD *)(v19 + 120) = *(_QWORD *)(v20 + 120);
    *(_QWORD *)(v19 + 128) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)(v20 + 112);
    *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
    *(_OWORD *)(v19 + 112) = v27;
    *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
    v28 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    *(_OWORD *)(v19 + 48) = v28;
    v29 = *(_OWORD *)(v20 + 80);
    *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
    *(_OWORD *)(v19 + 80) = v29;
    v30 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v30;
  }
  v31 = a3[9];
  v32 = a3[10];
  v33 = a1 + v31;
  v34 = a2 + v31;
  v35 = *(_QWORD *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_QWORD *)(v33 + 8) = v35;
  *(_WORD *)(v33 + 16) = *(_WORD *)(v34 + 16);
  *(_DWORD *)(a1 + v32) = *(_DWORD *)(a2 + v32);
  v36 = a3[11];
  v37 = a3[12];
  v38 = (_QWORD *)(a1 + v36);
  v39 = (_QWORD *)(a2 + v36);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = a1 + v37;
  v42 = a2 + v37;
  v43 = *(_QWORD *)(a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v43)
  {
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *(_QWORD *)(v41 + 8) = v43;
    *(_WORD *)(v41 + 16) = *(_WORD *)(v42 + 16);
    *(_QWORD *)(v41 + 24) = *(_QWORD *)(v42 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v44 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 16) = v44;
  }
  v45 = a3[13];
  v46 = a3[14];
  v47 = a1 + v45;
  v48 = a2 + v45;
  *(_BYTE *)v47 = *(_BYTE *)v48;
  v49 = *(_QWORD *)(v48 + 16);
  *(_QWORD *)(v47 + 8) = *(_QWORD *)(v48 + 8);
  *(_QWORD *)(v47 + 16) = v49;
  *(_WORD *)(v47 + 24) = *(_WORD *)(v48 + 24);
  v50 = *(_QWORD *)(v48 + 40);
  *(_QWORD *)(v47 + 32) = *(_QWORD *)(v48 + 32);
  *(_QWORD *)(v47 + 40) = v50;
  *(_BYTE *)(v47 + 48) = *(_BYTE *)(v48 + 48);
  v51 = a1 + v46;
  v52 = a2 + v46;
  v53 = *(_QWORD *)(v52 + 8);
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_QWORD *)(v51 + 8) = v53;
  *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
  *(_BYTE *)(v51 + 17) = *(_BYTE *)(v52 + 17);
  v54 = *(_QWORD *)(v52 + 32);
  *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
  *(_QWORD *)(v51 + 32) = v54;
  v55 = a3[15];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = *(_QWORD *)(a2 + v55 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v58)
  {
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *(_QWORD *)(v56 + 8) = v58;
    v59 = *(_QWORD *)(v57 + 24);
    *(_QWORD *)(v56 + 16) = *(_QWORD *)(v57 + 16);
    *(_QWORD *)(v56 + 24) = v59;
    *(_BYTE *)(v56 + 32) = *(_BYTE *)(v57 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v60 = *(_OWORD *)(v57 + 16);
    *(_OWORD *)v56 = *(_OWORD *)v57;
    *(_OWORD *)(v56 + 16) = v60;
    *(_BYTE *)(v56 + 32) = *(_BYTE *)(v57 + 32);
  }
  v61 = a3[16];
  v62 = a1 + v61;
  v63 = a2 + v61;
  v64 = *(_QWORD *)(v63 + 8);
  if (v64 == 1)
  {
    v65 = *(_OWORD *)(v63 + 16);
    *(_OWORD *)v62 = *(_OWORD *)v63;
    *(_OWORD *)(v62 + 16) = v65;
    *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
  }
  else
  {
    *(_QWORD *)v62 = *(_QWORD *)v63;
    *(_QWORD *)(v62 + 8) = v64;
    v66 = *(_QWORD *)(v63 + 24);
    *(_QWORD *)(v62 + 16) = *(_QWORD *)(v63 + 16);
    *(_QWORD *)(v62 + 24) = v66;
    *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ArticleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  __int128 *v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = (__int128 *)(a2 + v12);
  v15 = *(_QWORD *)(a1 + v12 + 16);
  v16 = *(_QWORD *)(a2 + v12 + 16);
  if (v15 == 1)
  {
    if (v16 == 1)
    {
      v17 = *v14;
      *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
      *(_OWORD *)v13 = v17;
    }
    else
    {
      *(_BYTE *)v13 = *(_BYTE *)v14;
      *(_QWORD *)(v13 + 8) = *((_QWORD *)v14 + 1);
      *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v16 == 1)
  {
    sub_1D57D9100(v13);
    v18 = *((_QWORD *)v14 + 2);
    *(_OWORD *)v13 = *v14;
    *(_QWORD *)(v13 + 16) = v18;
  }
  else
  {
    *(_BYTE *)v13 = *(_BYTE *)v14;
    *(_QWORD *)(v13 + 8) = *((_QWORD *)v14 + 1);
    *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a1 + v19 + 16);
  v23 = *(_QWORD *)(a2 + v19 + 16);
  if (v22)
  {
    if (v23)
    {
      *(_BYTE *)v20 = *(_BYTE *)v21;
      *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
      *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
      *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
      *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
      *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
      *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
      *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
      *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v21 + 104);
      *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
      *(_QWORD *)(v20 + 104) = v24;
      *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v20);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v26 = *(_OWORD *)(v21 + 64);
      v28 = *(_OWORD *)(v21 + 16);
      v27 = *(_OWORD *)(v21 + 32);
      *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
      *(_OWORD *)(v20 + 64) = v26;
      *(_OWORD *)(v20 + 16) = v28;
      *(_OWORD *)(v20 + 32) = v27;
      v30 = *(_OWORD *)(v21 + 96);
      v29 = *(_OWORD *)(v21 + 112);
      v31 = *(_OWORD *)(v21 + 80);
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      *(_OWORD *)(v20 + 96) = v30;
      *(_OWORD *)(v20 + 112) = v29;
      *(_OWORD *)(v20 + 80) = v31;
    }
  }
  else if (v23)
  {
    *(_BYTE *)v20 = *(_BYTE *)v21;
    *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
    *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
    *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
    *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
    *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
    *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
    *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
    *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
    *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
    *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
    *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
    *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
    v25 = *(_QWORD *)(v21 + 104);
    *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
    *(_QWORD *)(v20 + 104) = v25;
    *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v32 = *(_OWORD *)(v21 + 16);
    v33 = *(_OWORD *)(v21 + 32);
    v34 = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 64) = v34;
    *(_OWORD *)(v20 + 16) = v32;
    *(_OWORD *)(v20 + 32) = v33;
    v35 = *(_OWORD *)(v21 + 80);
    v36 = *(_OWORD *)(v21 + 96);
    v37 = *(_OWORD *)(v21 + 112);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    *(_OWORD *)(v20 + 96) = v36;
    *(_OWORD *)(v20 + 112) = v37;
    *(_OWORD *)(v20 + 80) = v35;
  }
  v38 = a3[9];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_QWORD *)v39 = *(_QWORD *)(a2 + v38);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(a2 + v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
  *(_BYTE *)(v39 + 17) = *(_BYTE *)(v40 + 17);
  v41 = a3[10];
  v42 = (_BYTE *)(a1 + v41);
  v43 = (_BYTE *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  v42[2] = v43[2];
  v42[3] = v43[3];
  v44 = a3[11];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = a3[12];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = *(_QWORD *)(a1 + v47 + 8);
  v51 = *(_QWORD *)(a2 + v47 + 8);
  if (v50)
  {
    if (v51)
    {
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *(_QWORD *)(v48 + 8) = *(_QWORD *)(v49 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
      *(_BYTE *)(v48 + 17) = *(_BYTE *)(v49 + 17);
      *(_QWORD *)(v48 + 24) = *(_QWORD *)(v49 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v48);
      v52 = *(_OWORD *)(v49 + 16);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *(_OWORD *)(v48 + 16) = v52;
    }
  }
  else if (v51)
  {
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *(_QWORD *)(v48 + 8) = *(_QWORD *)(v49 + 8);
    *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
    *(_BYTE *)(v48 + 17) = *(_BYTE *)(v49 + 17);
    *(_QWORD *)(v48 + 24) = *(_QWORD *)(v49 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v53 = *(_OWORD *)(v49 + 16);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *(_OWORD *)(v48 + 16) = v53;
  }
  v54 = a3[13];
  v55 = a1 + v54;
  v56 = a2 + v54;
  *(_BYTE *)v55 = *(_BYTE *)(a2 + v54);
  *(_QWORD *)(v55 + 8) = *(_QWORD *)(a2 + v54 + 8);
  *(_QWORD *)(v55 + 16) = *(_QWORD *)(a2 + v54 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v55 + 24) = *(_BYTE *)(v56 + 24);
  *(_BYTE *)(v55 + 25) = *(_BYTE *)(v56 + 25);
  *(_QWORD *)(v55 + 32) = *(_QWORD *)(v56 + 32);
  *(_QWORD *)(v55 + 40) = *(_QWORD *)(v56 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v55 + 48) = *(_BYTE *)(v56 + 48);
  v57 = a3[14];
  v58 = a1 + v57;
  v59 = a2 + v57;
  *(_QWORD *)v58 = *(_QWORD *)(a2 + v57);
  *(_QWORD *)(v58 + 8) = *(_QWORD *)(a2 + v57 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v58 + 16) = *(_BYTE *)(v59 + 16);
  *(_BYTE *)(v58 + 17) = *(_BYTE *)(v59 + 17);
  *(_QWORD *)(v58 + 24) = *(_QWORD *)(v59 + 24);
  *(_QWORD *)(v58 + 32) = *(_QWORD *)(v59 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v60 = a3[15];
  v61 = a1 + v60;
  v62 = (__int128 *)(a2 + v60);
  v63 = *(_QWORD *)(a1 + v60 + 8);
  v64 = *(_QWORD *)(a2 + v60 + 8);
  if (v63)
  {
    if (v64)
    {
      *(_QWORD *)v61 = *(_QWORD *)v62;
      *(_QWORD *)(v61 + 8) = *((_QWORD *)v62 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v61 + 16) = *((_QWORD *)v62 + 2);
      *(_QWORD *)(v61 + 24) = *((_QWORD *)v62 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v61 + 32) = *((_BYTE *)v62 + 32);
    }
    else
    {
      sub_1D5801194(v61);
      v65 = *((_BYTE *)v62 + 32);
      v66 = v62[1];
      *(_OWORD *)v61 = *v62;
      *(_OWORD *)(v61 + 16) = v66;
      *(_BYTE *)(v61 + 32) = v65;
    }
  }
  else if (v64)
  {
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *(_QWORD *)(v61 + 8) = *((_QWORD *)v62 + 1);
    *(_QWORD *)(v61 + 16) = *((_QWORD *)v62 + 2);
    *(_QWORD *)(v61 + 24) = *((_QWORD *)v62 + 3);
    *(_BYTE *)(v61 + 32) = *((_BYTE *)v62 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v67 = *v62;
    v68 = v62[1];
    *(_BYTE *)(v61 + 32) = *((_BYTE *)v62 + 32);
    *(_OWORD *)v61 = v67;
    *(_OWORD *)(v61 + 16) = v68;
  }
  v69 = a3[16];
  v70 = a1 + v69;
  v71 = (__int128 *)(a2 + v69);
  v72 = *(_QWORD *)(a1 + v69 + 8);
  v73 = *((_QWORD *)v71 + 1);
  if (v72 == 1)
  {
    if (v73 == 1)
    {
      v74 = *v71;
      v75 = v71[1];
      *(_QWORD *)(v70 + 32) = *((_QWORD *)v71 + 4);
      *(_OWORD *)v70 = v74;
      *(_OWORD *)(v70 + 16) = v75;
    }
    else
    {
      *(_QWORD *)v70 = *(_QWORD *)v71;
      *(_QWORD *)(v70 + 8) = *((_QWORD *)v71 + 1);
      *(_QWORD *)(v70 + 16) = *((_QWORD *)v71 + 2);
      *(_QWORD *)(v70 + 24) = *((_QWORD *)v71 + 3);
      *(_QWORD *)(v70 + 32) = *((_QWORD *)v71 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v73 == 1)
  {
    sub_1D57EE4B0(v70);
    v76 = *((_QWORD *)v71 + 4);
    v77 = v71[1];
    *(_OWORD *)v70 = *v71;
    *(_OWORD *)(v70 + 16) = v77;
    *(_QWORD *)(v70 + 32) = v76;
  }
  else
  {
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *(_QWORD *)(v70 + 8) = *((_QWORD *)v71 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v70 + 16) = *((_QWORD *)v71 + 2);
    *(_QWORD *)(v70 + 24) = *((_QWORD *)v71 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v70 + 32) = *((_QWORD *)v71 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t initializeWithTake for ArticleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 *v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v19 = a1 + v16;
  v20 = a2 + v16;
  v21 = *(_OWORD *)(v20 + 48);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(_OWORD *)(v19 + 48) = v21;
  *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
  v22 = *(_OWORD *)(v20 + 112);
  *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
  *(_OWORD *)(v19 + 112) = v22;
  v23 = *(_OWORD *)(v20 + 80);
  *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
  *(_OWORD *)(v19 + 80) = v23;
  v24 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v24;
  v25 = a3[9];
  v26 = a3[10];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_WORD *)(v27 + 16) = *(_WORD *)(v28 + 16);
  *(_DWORD *)(a1 + v26) = *(_DWORD *)(a2 + v26);
  v29 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v30 = (_OWORD *)(a1 + v29);
  v31 = (_OWORD *)(a2 + v29);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = a3[13];
  v34 = a3[14];
  v35 = a1 + v33;
  v36 = a2 + v33;
  v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
  *(_BYTE *)(v35 + 48) = *(_BYTE *)(v36 + 48);
  v38 = a1 + v34;
  v39 = a2 + v34;
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  v41 = a3[15];
  v42 = a3[16];
  v43 = a1 + v41;
  v44 = (__int128 *)(a2 + v41);
  v45 = *v44;
  v46 = v44[1];
  *(_BYTE *)(v43 + 32) = *((_BYTE *)v44 + 32);
  *(_OWORD *)v43 = v45;
  *(_OWORD *)(v43 + 16) = v46;
  v47 = a1 + v42;
  v48 = a2 + v42;
  v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(_QWORD *)(v47 + 32) = *(_QWORD *)(v48 + 32);
  return a1;
}

uint64_t assignWithTake for ArticleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v11;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  if (*(_QWORD *)(a1 + v12 + 16) == 1)
    goto LABEL_4;
  v15 = *(_QWORD *)(v14 + 16);
  if (v15 == 1)
  {
    sub_1D57D9100(a1 + v12);
LABEL_4:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v13 = *(_BYTE *)v14;
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 16))
  {
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      *(_WORD *)v17 = *(_WORD *)v18;
      *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
      *(_QWORD *)(v17 + 16) = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v18 + 64);
      *(_QWORD *)(v17 + 56) = *(_QWORD *)(v18 + 56);
      *(_QWORD *)(v17 + 64) = v20;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 72) = *(_QWORD *)(v18 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v17 + 80) = *(_BYTE *)(v18 + 80);
      v21 = *(_QWORD *)(v18 + 96);
      *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
      *(_QWORD *)(v17 + 96) = v21;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
      *(_BYTE *)(v17 + 112) = *(_BYTE *)(v18 + 112);
      *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 128) = *(_QWORD *)(v18 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E17B8(v17);
  }
  v22 = *(_OWORD *)(v18 + 112);
  *(_OWORD *)(v17 + 96) = *(_OWORD *)(v18 + 96);
  *(_OWORD *)(v17 + 112) = v22;
  *(_QWORD *)(v17 + 128) = *(_QWORD *)(v18 + 128);
  v23 = *(_OWORD *)(v18 + 48);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(_OWORD *)(v17 + 48) = v23;
  v24 = *(_OWORD *)(v18 + 80);
  *(_OWORD *)(v17 + 64) = *(_OWORD *)(v18 + 64);
  *(_OWORD *)(v17 + 80) = v24;
  v25 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v25;
LABEL_11:
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a2 + v26 + 8);
  *(_QWORD *)v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(v27 + 8) = v29;
  swift_bridgeObjectRelease();
  *(_WORD *)(v27 + 16) = *(_WORD *)(v28 + 16);
  v30 = a3[10];
  v31 = a3[11];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_BYTE *)v32 = *(_BYTE *)v33;
  *(_BYTE *)(v32 + 1) = *(_BYTE *)(v33 + 1);
  *(_WORD *)(v32 + 2) = *(_WORD *)(v33 + 2);
  v34 = (_QWORD *)(a1 + v31);
  v35 = (uint64_t *)(a2 + v31);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = a3[12];
  v39 = a1 + v38;
  v40 = a2 + v38;
  if (*(_QWORD *)(a1 + v38 + 8))
  {
    v41 = *(_QWORD *)(v40 + 8);
    if (v41)
    {
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *(_QWORD *)(v39 + 8) = v41;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
      *(_BYTE *)(v39 + 17) = *(_BYTE *)(v40 + 17);
      *(_QWORD *)(v39 + 24) = *(_QWORD *)(v40 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57EE47C(v39);
  }
  v42 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v42;
LABEL_16:
  v43 = a3[13];
  v44 = a1 + v43;
  v45 = a2 + v43;
  *(_BYTE *)v44 = *(_BYTE *)(a2 + v43);
  v46 = *(_QWORD *)(a2 + v43 + 16);
  *(_QWORD *)(v44 + 8) = *(_QWORD *)(a2 + v43 + 8);
  *(_QWORD *)(v44 + 16) = v46;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v44 + 24) = *(_BYTE *)(v45 + 24);
  *(_BYTE *)(v44 + 25) = *(_BYTE *)(v45 + 25);
  v47 = *(_QWORD *)(v45 + 40);
  *(_QWORD *)(v44 + 32) = *(_QWORD *)(v45 + 32);
  *(_QWORD *)(v44 + 40) = v47;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v44 + 48) = *(_BYTE *)(v45 + 48);
  v48 = a3[14];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)(a2 + v48 + 8);
  *(_QWORD *)v49 = *(_QWORD *)(a2 + v48);
  *(_QWORD *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 16) = *(_BYTE *)(v50 + 16);
  *(_BYTE *)(v49 + 17) = *(_BYTE *)(v50 + 17);
  v52 = *(_QWORD *)(v50 + 32);
  *(_QWORD *)(v49 + 24) = *(_QWORD *)(v50 + 24);
  *(_QWORD *)(v49 + 32) = v52;
  swift_bridgeObjectRelease();
  v53 = a3[15];
  v54 = a1 + v53;
  v55 = a2 + v53;
  if (*(_QWORD *)(a1 + v53 + 8))
  {
    v56 = *(_QWORD *)(v55 + 8);
    if (v56)
    {
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *(_QWORD *)(v54 + 8) = v56;
      swift_bridgeObjectRelease();
      v57 = *(_QWORD *)(v55 + 24);
      *(_QWORD *)(v54 + 16) = *(_QWORD *)(v55 + 16);
      *(_QWORD *)(v54 + 24) = v57;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D5801194(v54);
  }
  v58 = *(_OWORD *)(v55 + 16);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *(_OWORD *)(v54 + 16) = v58;
LABEL_21:
  *(_BYTE *)(v54 + 32) = *(_BYTE *)(v55 + 32);
  v59 = a3[16];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (_QWORD *)(a2 + v59);
  if (*(_QWORD *)(a1 + v59 + 8) != 1)
  {
    v62 = v61[1];
    if (v62 != 1)
    {
      *v60 = *v61;
      v60[1] = v62;
      swift_bridgeObjectRelease();
      v64 = v61[3];
      v60[2] = v61[2];
      v60[3] = v64;
      swift_bridgeObjectRelease();
      v60[4] = v61[4];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D57EE4B0((uint64_t)v60);
  }
  v63 = *((_OWORD *)v61 + 1);
  *(_OWORD *)v60 = *(_OWORD *)v61;
  *((_OWORD *)v60 + 1) = v63;
  v60[4] = v61[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleShareEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58F4FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleShareEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58F504C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleShareEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D58F5114 + 4 * byte_1D5AC77A2[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D58F5148 + 4 * byte_1D5AC779D[v4]))();
}

uint64_t sub_1D58F5148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58F5150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58F5158);
  return result;
}

uint64_t sub_1D58F5164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58F516CLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D58F5170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58F5178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleShareEvent.Model.CodingKeys()
{
  return &type metadata for ArticleShareEvent.Model.CodingKeys;
}

unint64_t sub_1D58F5198()
{
  unint64_t result;

  result = qword_1EFF4C418;
  if (!qword_1EFF4C418)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7AD4, &type metadata for ArticleShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C418);
  }
  return result;
}

unint64_t sub_1D58F51E0()
{
  unint64_t result;

  result = qword_1EFF4C420;
  if (!qword_1EFF4C420)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7A44, &type metadata for ArticleShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C420);
  }
  return result;
}

unint64_t sub_1D58F5228()
{
  unint64_t result;

  result = qword_1EFF4C428;
  if (!qword_1EFF4C428)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7A6C, &type metadata for ArticleShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C428);
  }
  return result;
}

uint64_t sub_1D58F526C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AED410 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED320)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

id AppSessionObserver.__allocating_init(appSessionManager:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC13NewsAnalytics18AppSessionObserver_appSessionManager] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AppSessionObserver.init(appSessionManager:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC13NewsAnalytics18AppSessionObserver_appSessionManager] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AppSessionObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AppSessionObserver.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AppSessionObserver.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall AppSessionObserver.endAppSession(withEndReason:)(NSNumber withEndReason)
{
  id v1;
  char v2;

  v1 = -[objc_class integerValue](withEndReason.super.super.isa, sel_integerValue);
  if ((unint64_t)v1 >= 5)
    v2 = 0;
  else
    v2 = 0x504020300uLL >> (8 * v1);
  sub_1D57B3530();
  sub_1D5AAEAC0();
  sub_1D57B5C60(0, (unint64_t *)&qword_1ED9CCA30, (void (*)(uint64_t))sub_1D57C5570);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D5AB0170;
  __asm { BR              X10 }
}

uint64_t sub_1D58F59F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  void *v9;
  _QWORD *v10;
  unsigned __int8 v11;

  v10[7] = MEMORY[0x1E0DEA968];
  v10[8] = sub_1D57B356C();
  v10[4] = 0x636142656E656373;
  v10[5] = 0xEF646E756F72676BLL;
  sub_1D5AAEA24();
  sub_1D5AAE328();

  swift_bridgeObjectRelease();
  sub_1D5AAEAC0();
  *(_OWORD *)(swift_allocObject() + 16) = a9;
  return ((uint64_t (*)())((char *)sub_1D58F5B18 + 4 * byte_1D5AC7B56[v11]))();
}

uint64_t sub_1D58F5B18()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v1[7] = v4;
  v1[8] = v2;
  v1[4] = 0x636142656E656373;
  v1[5] = 0xEF646E756F72676BLL;
  sub_1D5AAEA24();
  sub_1D5AAE328();

  swift_bridgeObjectRelease();
  *(_BYTE *)(swift_allocObject() + 16) = v3;
  sub_1D5AAD938();
  swift_release();
  *(_BYTE *)(swift_allocObject() + 16) = v3;
  sub_1D5AAD914();
  return swift_release();
}

uint64_t sub_1D58F5C68()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_1D57B5C60(0, (unint64_t *)&qword_1ED9CC9F0, (void (*)(uint64_t))MEMORY[0x1E0CF8178]);
  v0 = sub_1D5AADB54();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x1E0CF8168], v0);
  sub_1D58F6010();
  sub_1D5AADAF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D58F5D58()
{
  return swift_deallocObject();
}

uint64_t sub_1D58F5D68()
{
  return sub_1D58F5C68();
}

void sub_1D58F5D70(char a1)
{
  sub_1D57B5C60(0, (unint64_t *)&qword_1ED9CCA30, (void (*)(uint64_t))sub_1D57C5570);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D5AB0170;
  __asm { BR              X10 }
}

void sub_1D58F5DEC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  void *v17;

  *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 64) = sub_1D57B356C();
  strcpy((char *)(v16 + 32), "appBackground");
  *(_WORD *)(v16 + 46) = -4864;
  sub_1D57B3530();
  v17 = (void *)sub_1D5AAEAA8();
  sub_1D5AAEA24();
  sub_1D5AAE328();
  swift_bridgeObjectRelease();

}

uint64_t sub_1D58F5F3C()
{
  return swift_deallocObject();
}

void sub_1D58F5F4C()
{
  uint64_t v0;

  sub_1D58F5D70(*(_BYTE *)(v0 + 16));
}

uint64_t method lookup function for AppSessionObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppSessionObserver.__allocating_init(appSessionManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_1D58F6010()
{
  unint64_t result;

  result = qword_1ED9C77A0;
  if (!qword_1ED9C77A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewEndData, &type metadata for ViewEndData);
    atomic_store(result, (unint64_t *)&qword_1ED9C77A0);
  }
  return result;
}

void LiveActivityUserActionData.liveActivityUserAction.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *LiveActivityUserActionData.liveActivityUserAction.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*LiveActivityUserActionData.liveActivityUserAction.modify())()
{
  return nullsub_1;
}

NewsAnalytics::LiveActivityUserActionData __swiftcall LiveActivityUserActionData.init(liveActivityUserAction:)(NewsAnalytics::LiveActivityUserActionData liveActivityUserAction)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)liveActivityUserAction.liveActivityUserAction;
  return liveActivityUserAction;
}

unint64_t sub_1D58F6088()
{
  return 0xD000000000000016;
}

uint64_t sub_1D58F60A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58F66F0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D58F60CC()
{
  sub_1D58F6220();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58F60F4()
{
  sub_1D58F6220();
  return sub_1D5AAEEE0();
}

uint64_t LiveActivityUserActionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D58F63E0(0, &qword_1EFF4C4A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58F6220();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D58F6264();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58F6220()
{
  unint64_t result;

  result = qword_1EFF4C4A8;
  if (!qword_1EFF4C4A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7D40, &type metadata for LiveActivityUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C4A8);
  }
  return result;
}

unint64_t sub_1D58F6264()
{
  unint64_t result;

  result = qword_1EFF4C4B0;
  if (!qword_1EFF4C4B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityUserAction, &type metadata for LiveActivityUserAction);
    atomic_store(result, (unint64_t *)&qword_1EFF4C4B0);
  }
  return result;
}

uint64_t LiveActivityUserActionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D58F63E0(0, &qword_1EFF4C4B8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58F6220();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D58F643C();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58F63E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58F6220();
    v7 = a3(a1, &type metadata for LiveActivityUserActionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58F643C()
{
  unint64_t result;

  result = qword_1EFF4C4C0;
  if (!qword_1EFF4C4C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityUserAction, &type metadata for LiveActivityUserAction);
    atomic_store(result, (unint64_t *)&qword_1EFF4C4C0);
  }
  return result;
}

uint64_t sub_1D58F6488@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return LiveActivityUserActionData.init(from:)(a1, a2);
}

uint64_t sub_1D58F649C(_QWORD *a1)
{
  return LiveActivityUserActionData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for LiveActivityUserActionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58F64FC + 4 * byte_1D5AC7BB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58F6530 + 4 * byte_1D5AC7BB0[v4]))();
}

uint64_t sub_1D58F6530(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58F6538(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58F6540);
  return result;
}

uint64_t sub_1D58F654C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58F6554);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58F6558(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58F6560(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityUserActionData()
{
  return &type metadata for LiveActivityUserActionData;
}

uint64_t storeEnumTagSinglePayload for LiveActivityUserActionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58F65BC + 4 * byte_1D5AC7BBA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58F65DC + 4 * byte_1D5AC7BBF[v4]))();
}

_BYTE *sub_1D58F65BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58F65DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58F65E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58F65EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58F65F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58F65FC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityUserActionData.CodingKeys()
{
  return &type metadata for LiveActivityUserActionData.CodingKeys;
}

unint64_t sub_1D58F661C()
{
  unint64_t result;

  result = qword_1EFF4C4C8;
  if (!qword_1EFF4C4C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7D18, &type metadata for LiveActivityUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C4C8);
  }
  return result;
}

unint64_t sub_1D58F6664()
{
  unint64_t result;

  result = qword_1EFF4C4D0;
  if (!qword_1EFF4C4D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7C88, &type metadata for LiveActivityUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C4D0);
  }
  return result;
}

unint64_t sub_1D58F66AC()
{
  unint64_t result;

  result = qword_1EFF4C4D8;
  if (!qword_1EFF4C4D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7CB0, &type metadata for LiveActivityUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C4D8);
  }
  return result;
}

uint64_t sub_1D58F66F0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEFE00)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t FeedKind.asFeedType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  char v8;
  uint64_t v11;

  v3 = sub_1D5AAE580();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if ((_DWORD)result == *MEMORY[0x1E0D5CB08])
  {
    v8 = 0;
LABEL_15:
    *a1 = v8;
    return result;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5CAD0])
  {
    v8 = 10;
    goto LABEL_15;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5CB00] || (_DWORD)result == *MEMORY[0x1E0D5CAB8])
    goto LABEL_10;
  if ((_DWORD)result == *MEMORY[0x1E0D5CA90])
  {
    v8 = 9;
    goto LABEL_15;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5CB10])
  {
    v8 = 14;
    goto LABEL_15;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5CAD8] || (_DWORD)result == *MEMORY[0x1E0D5CA98])
    goto LABEL_10;
  if ((_DWORD)result == *MEMORY[0x1E0D5CB20])
  {
    v8 = 2;
    goto LABEL_15;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5CB28])
  {
LABEL_10:
    v8 = 6;
    goto LABEL_15;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5CAE0])
  {
    v8 = 13;
    goto LABEL_15;
  }
  v8 = 15;
  if ((_DWORD)result == *MEMORY[0x1E0D5CAF8]
    || (_DWORD)result == *MEMORY[0x1E0D5CA78]
    || (_DWORD)result == *MEMORY[0x1E0D5CAC8]
    || (_DWORD)result == *MEMORY[0x1E0D5CAA0])
  {
    goto LABEL_15;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5CAB0])
  {
    v8 = 17;
    goto LABEL_15;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5CAE8])
  {
    v8 = 1;
    goto LABEL_15;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5CAF0])
  {
    v8 = 7;
    goto LABEL_15;
  }
  v8 = 0;
  if ((_DWORD)result == *MEMORY[0x1E0D5CB18]
    || (_DWORD)result == *MEMORY[0x1E0D5CA88]
    || (_DWORD)result == *MEMORY[0x1E0D5CAA8])
  {
    goto LABEL_15;
  }
  if ((_DWORD)result == *MEMORY[0x1E0D5CA80])
  {
    v8 = 19;
    goto LABEL_15;
  }
  result = sub_1D5AAEBF8();
  __break(1u);
  return result;
}

uint64_t JourneyPlacementData.placementID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JourneyPlacementData.placementID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JourneyPlacementData.placementID.modify())()
{
  return nullsub_1;
}

uint64_t JourneyPlacementData.placementName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JourneyPlacementData.placementName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*JourneyPlacementData.placementName.modify())()
{
  return nullsub_1;
}

uint64_t JourneyPlacementData.messageID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JourneyPlacementData.messageID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*JourneyPlacementData.messageID.modify())()
{
  return nullsub_1;
}

void __swiftcall JourneyPlacementData.init(placementID:placementName:messageID:)(NewsAnalytics::JourneyPlacementData *__return_ptr retstr, Swift::String placementID, Swift::String_optional placementName, Swift::String_optional messageID)
{
  retstr->placementID = placementID;
  retstr->placementName = placementName;
  retstr->messageID = messageID;
}

uint64_t sub_1D58F6BC4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x496567617373656DLL;
  if (*v0 == 1)
    v1 = 0x6E656D6563616C70;
  if (*v0)
    return v1;
  else
    return 0x6E656D6563616C70;
}

uint64_t sub_1D58F6C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58F72CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58F6C4C()
{
  sub_1D58F6E0C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58F6C74()
{
  sub_1D58F6E0C();
  return sub_1D5AAEEE0();
}

uint64_t JourneyPlacementData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  sub_1D58F708C(0, &qword_1ED9CE1A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58F6E0C();
  sub_1D5AAEEC8();
  v15 = 0;
  v10 = v12[5];
  sub_1D5AAED3C();
  if (!v10)
  {
    v14 = 1;
    sub_1D5AAECF4();
    v13 = 2;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58F6E0C()
{
  unint64_t result;

  result = qword_1ED9CDBE0;
  if (!qword_1ED9CDBE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7F28, &type metadata for JourneyPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDBE0);
  }
  return result;
}

uint64_t JourneyPlacementData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;

  sub_1D58F708C(0, &qword_1ED9CE158, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58F6E0C();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v26 = 0;
    v10 = sub_1D5AAECA0();
    v13 = v12;
    v23 = v10;
    v25 = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1D5AAEC58();
    v16 = v15;
    v22 = v14;
    v24 = 2;
    swift_bridgeObjectRetain();
    v17 = sub_1D5AAEC58();
    v19 = v18;
    v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21 = v17;
    v20(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v23;
    a2[1] = v13;
    a2[2] = v22;
    a2[3] = v16;
    a2[4] = v21;
    a2[5] = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D58F708C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58F6E0C();
    v7 = a3(a1, &type metadata for JourneyPlacementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58F70F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return JourneyPlacementData.init(from:)(a1, a2);
}

uint64_t sub_1D58F7104(_QWORD *a1)
{
  return JourneyPlacementData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for JourneyPlacementData()
{
  return &type metadata for JourneyPlacementData;
}

uint64_t storeEnumTagSinglePayload for JourneyPlacementData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58F7174 + 4 * byte_1D5AC7DA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58F71A8 + 4 * byte_1D5AC7DA0[v4]))();
}

uint64_t sub_1D58F71A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58F71B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58F71B8);
  return result;
}

uint64_t sub_1D58F71C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58F71CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58F71D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58F71D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JourneyPlacementData.CodingKeys()
{
  return &type metadata for JourneyPlacementData.CodingKeys;
}

unint64_t sub_1D58F71F8()
{
  unint64_t result;

  result = qword_1EFF4C4E0;
  if (!qword_1EFF4C4E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7F00, &type metadata for JourneyPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C4E0);
  }
  return result;
}

unint64_t sub_1D58F7240()
{
  unint64_t result;

  result = qword_1ED9CD7F0;
  if (!qword_1ED9CD7F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7E70, &type metadata for JourneyPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD7F0);
  }
  return result;
}

unint64_t sub_1D58F7288()
{
  unint64_t result;

  result = qword_1ED9CDBE8;
  if (!qword_1ED9CDBE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC7E98, &type metadata for JourneyPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDBE8);
  }
  return result;
}

uint64_t sub_1D58F72CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656D6563616C70 && a2 == 0xEB00000000444974;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xED0000656D614E74 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496567617373656DLL && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t dispatch thunk of LiveActivityCountDataProviderType.getLiveActivityCountData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t BundleSubscriptionStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58F7498 + 4 * byte_1D5AC7FB0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D58F7498()
{
  return 0x6C61697274;
}

uint64_t sub_1D58F74AC()
{
  return 0x6269726373627573;
}

uint64_t sub_1D58F74C8()
{
  return 0x6373627553746F6ELL;
}

void sub_1D58F74EC(char *a1)
{
  sub_1D5A37608(*a1);
}

unint64_t sub_1D58F74FC()
{
  unint64_t result;

  result = qword_1EFF4C4E8;
  if (!qword_1EFF4C4E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BundleSubscriptionStatus, &type metadata for BundleSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF4C4E8);
  }
  return result;
}

void sub_1D58F7540()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58F758C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D58F7608()
{
  __asm { BR              X10 }
}

uint64_t sub_1D58F7644()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D58F76AC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58F76F4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D58F7770(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCE78, MEMORY[0x1E0CF8078]);
}

uint64_t static MediaExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCE98, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCE78, a1);
}

uint64_t sub_1D58F77B0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCEA0, MEMORY[0x1E0CF8380]);
}

uint64_t static MediaExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCEC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCEA0, a1);
}

uint64_t MediaExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t MediaExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MediaExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for MediaExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for MediaExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CA038);
}

uint64_t MediaExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.timedData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.articleData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.channelData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.groupData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.feedData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.mediaData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.viewData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.anfComponentData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.galleryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.galleryData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 56);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 56);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.issueData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.issueViewData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for MediaExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v12, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v12, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v12, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v12, v29);
}

uint64_t MediaExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t MediaExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for MediaExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for MediaExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9F78);
}

uint64_t MediaExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t MediaExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *MediaExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for MediaExposureEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t MediaExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t MediaExposureEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 40));
  v4 = *v3;
  v6 = *((_QWORD *)v3 + 1);
  v5 = *((_QWORD *)v3 + 2);
  v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  return sub_1D57E8EF4(v4, v5);
}

uint64_t MediaExposureEvent.Model.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 52);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_DWORD *)(v3 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 56));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 60));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t MediaExposureEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 64));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

__n128 MediaExposureEvent.Model.init(eventData:timedData:articleData:channelData:groupData:feedData:mediaData:viewData:anfComponentData:galleryData:userBundleSubscriptionContextData:issueData:issueViewData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, __int128 *a6@<X5>, char *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, __int128 *a11, char *a12, __n128 *a13, uint64_t *a14)
{
  uint64_t v19;
  char v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 *v38;
  __n128 result;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  __int16 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  int v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _BYTE v79[23];
  _BYTE v80[144];

  v78 = a3[6];
  *(_OWORD *)v79 = a3[7];
  *(_QWORD *)&v79[15] = *(_QWORD *)((char *)a3 + 127);
  v74 = a3[2];
  v75 = a3[3];
  v76 = a3[4];
  v77 = a3[5];
  v72 = *a3;
  v73 = a3[1];
  v45 = a4[1];
  v46 = *a4;
  v43 = *((_BYTE *)a4 + 17);
  v44 = *((_BYTE *)a4 + 16);
  v41 = a4[4];
  v42 = a4[3];
  sub_1D57DD5B8(a5, (uint64_t)v80);
  v48 = *a6;
  v19 = *((_QWORD *)a6 + 2);
  v20 = *a7;
  v50 = *((_QWORD *)a7 + 2);
  v51 = *((_QWORD *)a7 + 1);
  v49 = *((_DWORD *)a7 + 6);
  LOBYTE(a7) = a7[28];
  v54 = a8[1];
  v55 = *a8;
  v52 = v20;
  v53 = *((_WORD *)a8 + 8);
  v59 = a10[1];
  v60 = *a10;
  v58 = a10[2];
  v56 = *((_QWORD *)a10 + 7);
  v57 = *((_QWORD *)a10 + 6);
  v63 = *a11;
  v62 = *((_QWORD *)a11 + 2);
  v61 = *((_DWORD *)a11 + 6);
  v21 = *a12;
  v69 = *((_QWORD *)a12 + 2);
  v70 = *((_QWORD *)a12 + 1);
  v67 = a12[25];
  v68 = a12[24];
  v65 = *((_QWORD *)a12 + 5);
  v66 = *((_QWORD *)a12 + 4);
  v64 = a12[48];
  v71 = *a13;
  v23 = a13[1].n128_u64[0];
  v22 = a13[1].n128_u64[1];
  v24 = *a14;
  v25 = a14[1];
  v26 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a9, a1, v26);
  v27 = (int *)type metadata accessor for MediaExposureEvent.Model(0);
  v28 = a9 + v27[5];
  v29 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, a2, v29);
  v30 = a9 + v27[6];
  *(_OWORD *)(v30 + 96) = v78;
  *(_OWORD *)(v30 + 112) = *(_OWORD *)v79;
  *(_QWORD *)(v30 + 127) = *(_QWORD *)&v79[15];
  *(_OWORD *)(v30 + 32) = v74;
  *(_OWORD *)(v30 + 48) = v75;
  *(_OWORD *)(v30 + 64) = v76;
  *(_OWORD *)(v30 + 80) = v77;
  *(_OWORD *)v30 = v72;
  *(_OWORD *)(v30 + 16) = v73;
  v31 = a9 + v27[7];
  *(_QWORD *)v31 = v46;
  *(_QWORD *)(v31 + 8) = v45;
  *(_BYTE *)(v31 + 16) = v44;
  *(_BYTE *)(v31 + 17) = v43;
  *(_QWORD *)(v31 + 24) = v42;
  *(_QWORD *)(v31 + 32) = v41;
  sub_1D57DD5B8((uint64_t)v80, a9 + v27[8]);
  v32 = a9 + v27[9];
  *(_OWORD *)v32 = v48;
  *(_QWORD *)(v32 + 16) = v19;
  v33 = a9 + v27[10];
  *(_BYTE *)v33 = v52;
  *(_QWORD *)(v33 + 8) = v51;
  *(_QWORD *)(v33 + 16) = v50;
  *(_DWORD *)(v33 + 24) = v49;
  *(_BYTE *)(v33 + 28) = (_BYTE)a7;
  v34 = a9 + v27[11];
  *(_QWORD *)v34 = v55;
  *(_QWORD *)(v34 + 8) = v54;
  *(_WORD *)(v34 + 16) = v53;
  v35 = a9 + v27[12];
  *(_OWORD *)v35 = v60;
  *(_OWORD *)(v35 + 16) = v59;
  *(_OWORD *)(v35 + 32) = v58;
  *(_QWORD *)(v35 + 48) = v57;
  *(_QWORD *)(v35 + 56) = v56;
  v36 = a9 + v27[13];
  *(_OWORD *)v36 = v63;
  *(_QWORD *)(v36 + 16) = v62;
  *(_DWORD *)(v36 + 24) = v61;
  v37 = a9 + v27[14];
  *(_BYTE *)v37 = v21;
  *(_QWORD *)(v37 + 8) = v70;
  *(_QWORD *)(v37 + 16) = v69;
  *(_BYTE *)(v37 + 24) = v68;
  *(_BYTE *)(v37 + 25) = v67;
  *(_QWORD *)(v37 + 32) = v66;
  *(_QWORD *)(v37 + 40) = v65;
  *(_BYTE *)(v37 + 48) = v64;
  v38 = (__n128 *)(a9 + v27[15]);
  result = v71;
  *v38 = v71;
  v38[1].n128_u64[0] = v23;
  v38[1].n128_u64[1] = v22;
  v40 = (_QWORD *)(a9 + v27[16]);
  *v40 = v24;
  v40[1] = v25;
  return result;
}

uint64_t sub_1D58F8E00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58F8E38 + 4 * byte_1D5AC8100[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58F8E38()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D58F8E4C()
{
  return 0x44656C6369747261;
}

unint64_t sub_1D58F8F00()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58F8F20()
{
  return 0x7461446575737369;
}

uint64_t sub_1D58F8F34()
{
  return 0x6569566575737369;
}

uint64_t sub_1D58F8F58()
{
  unsigned __int8 *v0;

  return sub_1D58F8E00(*v0);
}

uint64_t sub_1D58F8F60()
{
  sub_1D58F9510();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58F8F88()
{
  sub_1D58F9510();
  return sub_1D5AAEEE0();
}

uint64_t MediaExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  _OWORD *v43;
  __int128 v44;
  uint64_t v46;
  char v47;
  _OWORD v48[2];
  __int128 v49;
  __int128 v50;
  _OWORD v51[7];
  _BYTE v52[23];
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;

  v3 = v1;
  sub_1D58FA03C(0, &qword_1EFF4C4F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v46 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58F9510();
  sub_1D5AAEEC8();
  LOBYTE(v51[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for MediaExposureEvent.Model(0);
    v60 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + v10[6];
    v12 = *(_OWORD *)(v11 + 112);
    v51[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v52 = v12;
    *(_QWORD *)&v52[15] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    v51[2] = *(_OWORD *)(v11 + 32);
    v51[3] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v51[4] = *(_OWORD *)(v11 + 64);
    v51[5] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    v51[0] = *(_OWORD *)v11;
    v51[1] = v15;
    LOBYTE(v48[0]) = 2;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    v54 = v17;
    v55 = v18;
    v56 = v19;
    v57 = v20;
    v58 = v22;
    v59 = v21;
    v53 = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[8], (uint64_t)v51);
    sub_1D57DD5B8((uint64_t)v51, (uint64_t)v48);
    v47 = 4;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v23 = v3 + v10[9];
    v24 = *(_QWORD *)(v23 + 16);
    v48[0] = *(_OWORD *)v23;
    *(_QWORD *)&v48[1] = v24;
    v47 = 5;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v25 = (char *)(v3 + v10[10]);
    v26 = *v25;
    v27 = *((_QWORD *)v25 + 1);
    v28 = *((_QWORD *)v25 + 2);
    v29 = *((_DWORD *)v25 + 6);
    LOBYTE(v25) = v25[28];
    LOBYTE(v48[0]) = v26;
    *((_QWORD *)&v48[0] + 1) = v27;
    *(_QWORD *)&v48[1] = v28;
    DWORD2(v48[1]) = v29;
    BYTE12(v48[1]) = (_BYTE)v25;
    v47 = 6;
    sub_1D57E7E7C();
    sub_1D5AAED6C();
    v30 = (uint64_t *)(v3 + v10[11]);
    v31 = *v30;
    v32 = v30[1];
    LOWORD(v30) = *((_WORD *)v30 + 8);
    *(_QWORD *)&v48[0] = v31;
    *((_QWORD *)&v48[0] + 1) = v32;
    LOWORD(v48[1]) = (_WORD)v30;
    v47 = 7;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v33 = (_OWORD *)(v3 + v10[12]);
    v34 = v33[1];
    v48[0] = *v33;
    v48[1] = v34;
    v35 = v33[3];
    v49 = v33[2];
    v50 = v35;
    v47 = 8;
    sub_1D57E8274();
    sub_1D5AAED18();
    v36 = v3 + v10[13];
    v37 = *(_QWORD *)(v36 + 16);
    v38 = *(_DWORD *)(v36 + 24);
    v48[0] = *(_OWORD *)v36;
    *(_QWORD *)&v48[1] = v37;
    DWORD2(v48[1]) = v38;
    v47 = 9;
    sub_1D5811CC4();
    sub_1D5AAED18();
    v39 = v3 + v10[14];
    v40 = *(_BYTE *)(v39 + 24);
    v41 = *(_BYTE *)(v39 + 25);
    v42 = *(_BYTE *)(v39 + 48);
    LOBYTE(v48[0]) = *(_BYTE *)v39;
    *(_OWORD *)((char *)v48 + 8) = *(_OWORD *)(v39 + 8);
    BYTE8(v48[1]) = v40;
    BYTE9(v48[1]) = v41;
    v49 = *(_OWORD *)(v39 + 32);
    LOBYTE(v50) = v42;
    v47 = 10;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v43 = (_OWORD *)(v3 + v10[15]);
    v44 = v43[1];
    v48[0] = *v43;
    v48[1] = v44;
    v47 = 11;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v48[0] = *(_OWORD *)(v3 + v10[16]);
    v47 = 12;
    sub_1D57CAD6C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58F9510()
{
  unint64_t result;

  result = qword_1EFF4C4F8;
  if (!qword_1EFF4C4F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC845C, &type metadata for MediaExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C4F8);
  }
  return result;
}

uint64_t MediaExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int v22;
  int v23;
  int *v24;
  char *v25;
  uint64_t v26;
  int *v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  char *v45;
  uint64_t v46;
  __int16 v47;
  char *v48;
  char *v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  int v53;
  char *v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  char *v59;
  uint64_t v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _OWORD v77[2];
  __int128 v78;
  __int128 v79;
  char v80;
  _BYTE v81[144];
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _BYTE v89[23];
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  _OWORD v97[3];
  int *v98;

  v67 = a2;
  v71 = sub_1D5AADFB0();
  v69 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v70 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58FA03C(0, &qword_1EFF4C500, MEMORY[0x1E0DED048]);
  v68 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v65 - v10;
  v98 = (int *)type metadata accessor for MediaExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v98);
  v76 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v74 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D58F9510();
  v72 = v11;
  v14 = v75;
  sub_1D5AAEEB0();
  if (v14)
  {
    v75 = v14;
    LODWORD(v72) = 0;
    v15 = v76;
    result = __swift_destroy_boxed_opaque_existential_1(v74);
    v73 = 0;
    LODWORD(v74) = 0;
    v22 = 0;
    v23 = 0;
    v24 = v98;
    if ((_DWORD)v72)
      goto LABEL_5;
  }
  else
  {
    v66 = v9;
    LOBYTE(v90) = 0;
    sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v25 = v76;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v76, v7, v5);
    LOBYTE(v90) = 1;
    sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v26 = v71;
    sub_1D5AAECD0();
    v27 = v98;
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v25[v98[5]], v4, v26);
    v81[143] = 2;
    sub_1D57CB8FC();
    sub_1D5AAECD0();
    v28 = &v25[v27[6]];
    v29 = *(_OWORD *)v89;
    *((_OWORD *)v28 + 6) = v88;
    *((_OWORD *)v28 + 7) = v29;
    *(_QWORD *)(v28 + 127) = *(_QWORD *)&v89[15];
    v30 = v85;
    *((_OWORD *)v28 + 2) = v84;
    *((_OWORD *)v28 + 3) = v30;
    v31 = v87;
    *((_OWORD *)v28 + 4) = v86;
    *((_OWORD *)v28 + 5) = v31;
    v32 = v83;
    *(_OWORD *)v28 = v82;
    *((_OWORD *)v28 + 1) = v32;
    v81[0] = 3;
    sub_1D57CB874();
    sub_1D5AAECD0();
    v33 = *((_QWORD *)&v90 + 1);
    v34 = v91;
    v35 = BYTE1(v91);
    v36 = *((_QWORD *)&v91 + 1);
    v37 = v92;
    v38 = &v25[v27[7]];
    *(_QWORD *)v38 = v90;
    *((_QWORD *)v38 + 1) = v33;
    v38[16] = v34;
    v38[17] = v35;
    *((_QWORD *)v38 + 3) = v36;
    *((_QWORD *)v38 + 4) = v37;
    v81[142] = 4;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57DD5B8((uint64_t)&v90, (uint64_t)v81);
    sub_1D57DD5B8((uint64_t)v81, (uint64_t)&v25[v27[8]]);
    v80 = 5;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v39 = *(_QWORD *)&v77[1];
    v40 = &v25[v27[9]];
    *(_OWORD *)v40 = v77[0];
    *((_QWORD *)v40 + 2) = v39;
    v80 = 6;
    sub_1D57E7E38();
    sub_1D5AAECD0();
    v41 = *((_QWORD *)&v77[0] + 1);
    v42 = *(_QWORD *)&v77[1];
    v43 = DWORD2(v77[1]);
    v44 = BYTE12(v77[1]);
    v45 = &v25[v27[10]];
    *v45 = v77[0];
    *((_QWORD *)v45 + 1) = v41;
    *((_QWORD *)v45 + 2) = v42;
    *((_DWORD *)v45 + 6) = v43;
    v45[28] = v44;
    v80 = 7;
    sub_1D57C6260();
    sub_1D5AAECD0();
    v46 = *((_QWORD *)&v77[0] + 1);
    v47 = v77[1];
    v48 = &v25[v98[11]];
    *(_QWORD *)v48 = *(_QWORD *)&v77[0];
    *((_QWORD *)v48 + 1) = v46;
    *((_WORD *)v48 + 8) = v47;
    v80 = 8;
    sub_1D57E8230();
    sub_1D5AAEC7C();
    v49 = &v25[v98[12]];
    v50 = v77[1];
    *(_OWORD *)v49 = v77[0];
    *((_OWORD *)v49 + 1) = v50;
    v51 = v79;
    *((_OWORD *)v49 + 2) = v78;
    *((_OWORD *)v49 + 3) = v51;
    v80 = 9;
    sub_1D5811C80();
    sub_1D5AAEC7C();
    v73 = 1;
    v75 = 0;
    v52 = *(_QWORD *)&v77[1];
    v53 = DWORD2(v77[1]);
    v54 = &v76[v98[13]];
    *(_OWORD *)v54 = v77[0];
    *((_QWORD *)v54 + 2) = v52;
    *((_DWORD *)v54 + 6) = v53;
    v80 = 10;
    sub_1D57C6AF8();
    v55 = v75;
    sub_1D5AAECD0();
    v75 = v55;
    if (v55)
    {
      (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v68);
      __swift_destroy_boxed_opaque_existential_1(v74);
      v22 = 0;
      LODWORD(v74) = 0;
    }
    else
    {
      v56 = BYTE8(v77[1]);
      v57 = BYTE9(v77[1]);
      v58 = v79;
      v59 = &v76[v98[14]];
      *v59 = v77[0];
      *(_OWORD *)(v59 + 8) = *(_OWORD *)((char *)v77 + 8);
      v59[24] = v56;
      v59[25] = v57;
      *((_OWORD *)v59 + 2) = v78;
      v59[48] = v58;
      v80 = 11;
      sub_1D57C5ED8();
      v60 = v75;
      sub_1D5AAEC7C();
      v75 = v60;
      if (v60)
      {
        (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v68);
        __swift_destroy_boxed_opaque_existential_1(v74);
        LODWORD(v74) = 0;
        v22 = 1;
      }
      else
      {
        v61 = &v76[v98[15]];
        v62 = v77[1];
        *(_OWORD *)v61 = v77[0];
        *((_OWORD *)v61 + 1) = v62;
        v80 = 12;
        sub_1D57CAD28();
        v63 = v75;
        sub_1D5AAEC7C();
        v75 = v63;
        if (!v63)
        {
          (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v68);
          v64 = (uint64_t)v76;
          *(_OWORD *)&v76[v98[16]] = v77[0];
          sub_1D58FA098(v64, v67);
          __swift_destroy_boxed_opaque_existential_1(v74);
          return sub_1D58FA0DC(v64);
        }
        (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v68);
        __swift_destroy_boxed_opaque_existential_1(v74);
        v22 = 1;
        LODWORD(v74) = 1;
      }
    }
    v15 = v76;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v76, v5);
    (*(void (**)(char *, uint64_t))(v69 + 8))(&v15[v98[5]], v71);
    LODWORD(v72) = 1;
    v23 = 1;
    v17 = &v15[v98[6]];
    v18 = *((_OWORD *)v17 + 7);
    v96 = *((_OWORD *)v17 + 6);
    v97[0] = v18;
    *(_QWORD *)((char *)v97 + 15) = *(_QWORD *)(v17 + 127);
    v19 = *((_OWORD *)v17 + 3);
    v92 = *((_OWORD *)v17 + 2);
    v93 = v19;
    v20 = *((_OWORD *)v17 + 5);
    v94 = *((_OWORD *)v17 + 4);
    v95 = v20;
    v21 = *((_OWORD *)v17 + 1);
    v90 = *(_OWORD *)v17;
    v91 = v21;
    sub_1D57D5AE0((uint64_t)&v90);
    v24 = v98;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D57DD5B8((uint64_t)&v15[v24[8]], (uint64_t)&v90);
    sub_1D57DE9C8(&v90, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
    sub_1D57DAEDC(*(_QWORD *)&v15[v24[9]], *(_QWORD *)&v15[v24[9] + 8], *(_QWORD *)&v15[v24[9] + 16]);
    result = swift_bridgeObjectRelease();
    if ((v72 & 1) != 0)
    {
LABEL_5:
      result = swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
        goto LABEL_6;
      goto LABEL_12;
    }
  }
  if (!v23)
  {
LABEL_6:
    if (v73)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  result = sub_1D57EA730(*(_QWORD *)&v15[v24[12]], *(_QWORD *)&v15[v24[12] + 8]);
  if ((v73 & 1) != 0)
  {
LABEL_7:
    result = swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      goto LABEL_8;
LABEL_14:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v74 & 1) == 0)
      return result;
    return sub_1D57EA700(*(_QWORD *)&v15[v24[15]], *(_QWORD *)&v15[v24[15] + 8]);
  }
LABEL_13:
  if (v22)
    goto LABEL_14;
LABEL_8:
  if (!(_DWORD)v74)
    return result;
  return sub_1D57EA700(*(_QWORD *)&v15[v24[15]], *(_QWORD *)&v15[v24[15] + 8]);
}

void sub_1D58FA03C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58F9510();
    v7 = a3(a1, &type metadata for MediaExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58FA098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58FA0DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58FA118@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58FA12C(_QWORD *a1)
{
  return MediaExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58FA140@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCE98, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCE78, a1);
}

uint64_t sub_1D58FA164@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCEC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCEA0, a1);
}

uint64_t getEnumTagSinglePayload for MediaExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58FA194(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                          v8 = v24;
                          v12 = *(_QWORD *)(v24 - 8);
                          v13 = a3[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MediaExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58FA500(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70E8, (void (*)(void))sub_1D5811C80, (void (*)(void))sub_1D5811CC4);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                          v10 = v26;
                          v14 = *(_QWORD *)(v26 - 8);
                          v15 = a4[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for MediaExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58FA874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58FA92C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D58FA9D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MediaExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D58FAB10 + 4 * byte_1D5AC8112[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D58FAB44 + 4 * byte_1D5AC810D[v4]))();
}

uint64_t sub_1D58FAB44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58FAB4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58FAB54);
  return result;
}

uint64_t sub_1D58FAB60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58FAB68);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D58FAB6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58FAB74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaExposureEvent.Model.CodingKeys()
{
  return &type metadata for MediaExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D58FAB94()
{
  unint64_t result;

  result = qword_1EFF4C508;
  if (!qword_1EFF4C508)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8434, &type metadata for MediaExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C508);
  }
  return result;
}

unint64_t sub_1D58FABDC()
{
  unint64_t result;

  result = qword_1EFF4C510;
  if (!qword_1EFF4C510)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC83A4, &type metadata for MediaExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C510);
  }
  return result;
}

unint64_t sub_1D58FAC24()
{
  unint64_t result;

  result = qword_1EFF4C518;
  if (!qword_1EFF4C518)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC83CC, &type metadata for MediaExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C518);
  }
  return result;
}

void UserSelectionData.selectionType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *UserSelectionData.selectionType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*UserSelectionData.selectionType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::UserSelectionData __swiftcall UserSelectionData.init(selectionType:)(NewsAnalytics::UserSelectionData selectionType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)selectionType.selectionType;
  return selectionType;
}

uint64_t sub_1D58FAC9C()
{
  return 0x6F697463656C6573;
}

uint64_t sub_1D58FACC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F697463656C6573 && a2 == 0xED0000657079546ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58FAD78()
{
  sub_1D58FAECC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58FADA0()
{
  sub_1D58FAECC();
  return sub_1D5AAEEE0();
}

uint64_t UserSelectionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D58FB08C(0, &qword_1EFF4C520, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58FAECC();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D58FAF10();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58FAECC()
{
  unint64_t result;

  result = qword_1EFF4C528;
  if (!qword_1EFF4C528)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8638, &type metadata for UserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C528);
  }
  return result;
}

unint64_t sub_1D58FAF10()
{
  unint64_t result;

  result = qword_1EFF4C530;
  if (!qword_1EFF4C530)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserSelectionType, &type metadata for UserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1EFF4C530);
  }
  return result;
}

uint64_t UserSelectionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D58FB08C(0, &qword_1EFF4C538, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58FAECC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D58FB0E8();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58FB08C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58FAECC();
    v7 = a3(a1, &type metadata for UserSelectionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58FB0E8()
{
  unint64_t result;

  result = qword_1EFF4C540;
  if (!qword_1EFF4C540)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserSelectionType, &type metadata for UserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1EFF4C540);
  }
  return result;
}

uint64_t sub_1D58FB134@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return UserSelectionData.init(from:)(a1, a2);
}

uint64_t sub_1D58FB148(_QWORD *a1)
{
  return UserSelectionData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for UserSelectionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58FB1A8 + 4 * byte_1D5AC84B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58FB1DC + 4 * byte_1D5AC84B0[v4]))();
}

uint64_t sub_1D58FB1DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58FB1E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58FB1ECLL);
  return result;
}

uint64_t sub_1D58FB1F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58FB200);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58FB204(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58FB20C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserSelectionData()
{
  return &type metadata for UserSelectionData;
}

uint64_t storeEnumTagSinglePayload for UserSelectionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58FB268 + 4 * byte_1D5AC84BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58FB288 + 4 * byte_1D5AC84BF[v4]))();
}

_BYTE *sub_1D58FB268(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58FB288(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58FB290(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58FB298(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58FB2A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58FB2A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UserSelectionData.CodingKeys()
{
  return &type metadata for UserSelectionData.CodingKeys;
}

unint64_t sub_1D58FB2C8()
{
  unint64_t result;

  result = qword_1EFF4C548;
  if (!qword_1EFF4C548)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8610, &type metadata for UserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C548);
  }
  return result;
}

unint64_t sub_1D58FB310()
{
  unint64_t result;

  result = qword_1EFF4C550;
  if (!qword_1EFF4C550)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8580, &type metadata for UserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C550);
  }
  return result;
}

unint64_t sub_1D58FB358()
{
  unint64_t result;

  result = qword_1EFF4C558;
  if (!qword_1EFF4C558)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC85A8, &type metadata for UserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C558);
  }
  return result;
}

uint64_t AdReferralData.qToken.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdReferralData.qToken.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdReferralData.qToken.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AdReferralData __swiftcall AdReferralData.init(qToken:)(NewsAnalytics::AdReferralData qToken)
{
  NewsAnalytics::AdReferralData *v1;

  *v1 = qToken;
  return qToken;
}

uint64_t sub_1D58FB414()
{
  return 0x6E656B6F5471;
}

uint64_t sub_1D58FB428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E656B6F5471 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58FB4B4()
{
  sub_1D58FB5F8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58FB4DC()
{
  sub_1D58FB5F8();
  return sub_1D5AAEEE0();
}

uint64_t AdReferralData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D58FB760(0, &qword_1EFF4C560, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58FB5F8();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D58FB5F8()
{
  unint64_t result;

  result = qword_1EFF4C568;
  if (!qword_1EFF4C568)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC87FC, &type metadata for AdReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C568);
  }
  return result;
}

uint64_t AdReferralData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D58FB760(0, &qword_1EFF4C570, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58FB5F8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58FB760(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58FB5F8();
    v7 = a3(a1, &type metadata for AdReferralData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58FB7C0()
{
  unint64_t result;

  result = qword_1ED9C7BE0;
  if (!qword_1ED9C7BE0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdReferralData, &type metadata for AdReferralData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BE0);
  }
  return result;
}

unint64_t sub_1D58FB808()
{
  unint64_t result;

  result = qword_1ED9C7BD8;
  if (!qword_1ED9C7BD8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdReferralData, &type metadata for AdReferralData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BD8);
  }
  return result;
}

uint64_t sub_1D58FB84C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AdReferralData.init(from:)(a1, a2);
}

uint64_t sub_1D58FB860(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D58FB760(0, &qword_1EFF4C560, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58FB5F8();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for AdReferralData()
{
  return &type metadata for AdReferralData;
}

uint64_t storeEnumTagSinglePayload for AdReferralData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58FB9A4 + 4 * byte_1D5AC8688[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58FB9C4 + 4 * byte_1D5AC868D[v4]))();
}

_BYTE *sub_1D58FB9A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58FB9C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58FB9CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58FB9D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58FB9DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58FB9E4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdReferralData.CodingKeys()
{
  return &type metadata for AdReferralData.CodingKeys;
}

unint64_t sub_1D58FBA04()
{
  unint64_t result;

  result = qword_1EFF4C578;
  if (!qword_1EFF4C578)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC87D4, &type metadata for AdReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C578);
  }
  return result;
}

unint64_t sub_1D58FBA4C()
{
  unint64_t result;

  result = qword_1EFF4C580;
  if (!qword_1EFF4C580)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8744, &type metadata for AdReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C580);
  }
  return result;
}

unint64_t sub_1D58FBA94()
{
  unint64_t result;

  result = qword_1EFF4C588;
  if (!qword_1EFF4C588)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC876C, &type metadata for AdReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C588);
  }
  return result;
}

uint64_t sub_1D58FBAD8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4C590, MEMORY[0x1E0CF8078]);
}

uint64_t static OfflineModeStartEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47198, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C590, a1);
}

uint64_t sub_1D58FBB18(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4C5A8, MEMORY[0x1E0CF8380]);
}

uint64_t static OfflineModeStartEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C5A8, a1);
}

uint64_t OfflineModeStartEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t OfflineModeStartEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*OfflineModeStartEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t OfflineModeStartEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OfflineModeStartEvent(0) + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for OfflineModeStartEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4C630);
}

uint64_t OfflineModeStartEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OfflineModeStartEvent(0) + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*OfflineModeStartEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for OfflineModeStartEvent(0);
  return nullsub_1;
}

uint64_t OfflineModeStartEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for OfflineModeStartEvent(0) + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t OfflineModeStartEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t OfflineModeStartEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for OfflineModeStartEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for OfflineModeStartEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4C6C0);
}

uint64_t OfflineModeStartEvent.Model.init(eventData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v5 = *a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a2 + 2);
  v8 = a2[24];
  v9 = a2[25];
  v10 = *((_QWORD *)a2 + 4);
  v11 = *((_QWORD *)a2 + 5);
  v12 = a2[48];
  v13 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a3, a1, v13);
  result = type metadata accessor for OfflineModeStartEvent.Model(0);
  v15 = a3 + *(int *)(result + 20);
  *(_BYTE *)v15 = v5;
  *(_QWORD *)(v15 + 8) = v6;
  *(_QWORD *)(v15 + 16) = v7;
  *(_BYTE *)(v15 + 24) = v8;
  *(_BYTE *)(v15 + 25) = v9;
  *(_QWORD *)(v15 + 32) = v10;
  *(_QWORD *)(v15 + 40) = v11;
  *(_BYTE *)(v15 + 48) = v12;
  return result;
}

uint64_t sub_1D58FBE10()
{
  sub_1D58FBFF4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58FBE38()
{
  sub_1D58FBFF4();
  return sub_1D5AAEEE0();
}

uint64_t OfflineModeStartEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  char v11;
  char v12;
  char v13;
  _BYTE v15[8];
  char v16;
  __int128 v17;
  char v18;
  char v19;
  __int128 v20;
  char v21;

  v3 = v1;
  sub_1D58FC2EC(0, &qword_1EFF4C5C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v15[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58FBFF4();
  sub_1D5AAEEC8();
  v16 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (char *)(v3 + *(int *)(type metadata accessor for OfflineModeStartEvent.Model(0) + 20));
    v11 = v10[24];
    v12 = v10[25];
    v13 = v10[48];
    v16 = *v10;
    v17 = *(_OWORD *)(v10 + 8);
    v18 = v11;
    v19 = v12;
    v20 = *((_OWORD *)v10 + 2);
    v21 = v13;
    v15[7] = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58FBFF4()
{
  unint64_t result;

  result = qword_1EFF4C5C8;
  if (!qword_1EFF4C5C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8A0C, &type metadata for OfflineModeStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C5C8);
  }
  return result;
}

uint64_t OfflineModeStartEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t started;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  char v31;
  char v32;
  __int128 v33;
  char v34;
  char v35;

  v24 = a2;
  v28 = sub_1D5AADF98();
  v25 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58FC2EC(0, &qword_1EFF4C5D0, MEMORY[0x1E0DED048]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  started = type metadata accessor for OfflineModeStartEvent.Model(0);
  MEMORY[0x1E0C80A78](started);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58FBFF4();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = a1;
  v23 = v6;
  v12 = (uint64_t)v11;
  v13 = v25;
  v29 = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v26;
  v14 = v27;
  v16 = v28;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v35 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v14);
  v17 = v31;
  v18 = v32;
  v19 = v34;
  v20 = v12 + *(int *)(started + 20);
  *(_BYTE *)v20 = v29;
  *(_OWORD *)(v20 + 8) = v30;
  *(_BYTE *)(v20 + 24) = v17;
  *(_BYTE *)(v20 + 25) = v18;
  *(_OWORD *)(v20 + 32) = v33;
  *(_BYTE *)(v20 + 48) = v19;
  sub_1D58FC348(v12, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_1D58FC38C(v12);
}

void sub_1D58FC2EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58FBFF4();
    v7 = a3(a1, &type metadata for OfflineModeStartEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58FC348(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for OfflineModeStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_1D58FC38C(uint64_t a1)
{
  uint64_t started;

  started = type metadata accessor for OfflineModeStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_1D58FC3C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OfflineModeStartEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58FC3DC(_QWORD *a1)
{
  return OfflineModeStartEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58FC3F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47198, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C590, a1);
}

uint64_t sub_1D58FC414@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C5A8, a1);
}

uint64_t getEnumTagSinglePayload for OfflineModeStartEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58FC444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D589A36C();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for OfflineModeStartEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58FC4C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D589A36C();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for OfflineModeStartEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58FC54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineModeStartEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58FC5E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = a2;
  return result;
}

uint64_t sub_1D58FC660()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OfflineModeStartEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58FC71C + 4 * byte_1D5AC8855[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58FC750 + 4 * byte_1D5AC8850[v4]))();
}

uint64_t sub_1D58FC750(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58FC758(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58FC760);
  return result;
}

uint64_t sub_1D58FC76C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58FC774);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D58FC778(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58FC780(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OfflineModeStartEvent.Model.CodingKeys()
{
  return &type metadata for OfflineModeStartEvent.Model.CodingKeys;
}

unint64_t sub_1D58FC7A0()
{
  unint64_t result;

  result = qword_1EFF4C6F8;
  if (!qword_1EFF4C6F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC89E4, &type metadata for OfflineModeStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C6F8);
  }
  return result;
}

unint64_t sub_1D58FC7E8()
{
  unint64_t result;

  result = qword_1EFF4C700;
  if (!qword_1EFF4C700)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8954, &type metadata for OfflineModeStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C700);
  }
  return result;
}

unint64_t sub_1D58FC830()
{
  unint64_t result;

  result = qword_1EFF4C708;
  if (!qword_1EFF4C708)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC897C, &type metadata for OfflineModeStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C708);
  }
  return result;
}

void FeedGroupLayoutData.layoutPath.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *FeedGroupLayoutData.layoutPath.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*FeedGroupLayoutData.layoutPath.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D58FC89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x615074756F79616CLL && a2 == 0xEA00000000006874)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58FC93C()
{
  sub_1D57A5F60();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58FC964()
{
  sub_1D57A5F60();
  return sub_1D5AAEEE0();
}

uint64_t FeedGroupLayoutData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D57A5EC0(0, &qword_1EFF4C710, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A5F60();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D58FCAC4();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1D58FCAC4()
{
  unint64_t result;

  result = qword_1EFF4C718;
  if (!qword_1EFF4C718)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedGroupLayoutPath, &type metadata for FeedGroupLayoutPath);
    atomic_store(result, (unint64_t *)&qword_1EFF4C718);
  }
  return result;
}

uint64_t sub_1D58FCB08@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FeedGroupLayoutData.init(from:)(a1, a2);
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58FCB68 + 4 * byte_1D5AC8A65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58FCB9C + 4 * byte_1D5AC8A60[v4]))();
}

uint64_t sub_1D58FCB9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58FCBA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58FCBACLL);
  return result;
}

uint64_t sub_1D58FCBB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58FCBC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58FCBC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58FCBCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupLayoutData.CodingKeys()
{
  return &type metadata for FeedGroupLayoutData.CodingKeys;
}

unint64_t sub_1D58FCBEC()
{
  unint64_t result;

  result = qword_1EFF4C720;
  if (!qword_1EFF4C720)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8BC0, &type metadata for FeedGroupLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C720);
  }
  return result;
}

void ResultActionData.action.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ResultActionData.action.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ResultActionData.action.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ResultActionData __swiftcall ResultActionData.init(action:)(NewsAnalytics::ResultActionData action)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)action.action;
  return action;
}

uint64_t sub_1D58FCC64()
{
  return 0x6E6F69746361;
}

uint64_t sub_1D58FCC78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58FCD04()
{
  sub_1D58FCE58();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58FCD2C()
{
  sub_1D58FCE58();
  return sub_1D5AAEEE0();
}

uint64_t ResultActionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D58FD018(0, &qword_1EFF4C728, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58FCE58();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D58FCE9C();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58FCE58()
{
  unint64_t result;

  result = qword_1EFF4C730;
  if (!qword_1EFF4C730)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8DC4, &type metadata for ResultActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C730);
  }
  return result;
}

unint64_t sub_1D58FCE9C()
{
  unint64_t result;

  result = qword_1EFF4C738;
  if (!qword_1EFF4C738)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultAction, &type metadata for ResultAction);
    atomic_store(result, (unint64_t *)&qword_1EFF4C738);
  }
  return result;
}

uint64_t ResultActionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D58FD018(0, &qword_1EFF4C740, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58FCE58();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D58FD074();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58FD018(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58FCE58();
    v7 = a3(a1, &type metadata for ResultActionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58FD074()
{
  unint64_t result;

  result = qword_1EFF4C748;
  if (!qword_1EFF4C748)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultAction, &type metadata for ResultAction);
    atomic_store(result, (unint64_t *)&qword_1EFF4C748);
  }
  return result;
}

uint64_t sub_1D58FD0C0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ResultActionData.init(from:)(a1, a2);
}

uint64_t sub_1D58FD0D4(_QWORD *a1)
{
  return ResultActionData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for ResultActionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D58FD134 + 4 * byte_1D5AC8C45[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D58FD168 + 4 * byte_1D5AC8C40[v4]))();
}

uint64_t sub_1D58FD168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58FD170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58FD178);
  return result;
}

uint64_t sub_1D58FD184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58FD18CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D58FD190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58FD198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResultActionData()
{
  return &type metadata for ResultActionData;
}

uint64_t storeEnumTagSinglePayload for ResultActionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58FD1F4 + 4 * byte_1D5AC8C4A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58FD214 + 4 * byte_1D5AC8C4F[v4]))();
}

_BYTE *sub_1D58FD1F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58FD214(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58FD21C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58FD224(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58FD22C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58FD234(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ResultActionData.CodingKeys()
{
  return &type metadata for ResultActionData.CodingKeys;
}

unint64_t sub_1D58FD254()
{
  unint64_t result;

  result = qword_1EFF4C750;
  if (!qword_1EFF4C750)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8D9C, &type metadata for ResultActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C750);
  }
  return result;
}

unint64_t sub_1D58FD29C()
{
  unint64_t result;

  result = qword_1EFF4C758;
  if (!qword_1EFF4C758)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8D0C, &type metadata for ResultActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C758);
  }
  return result;
}

unint64_t sub_1D58FD2E4()
{
  unint64_t result;

  result = qword_1EFF4C760;
  if (!qword_1EFF4C760)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC8D34, &type metadata for ResultActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C760);
  }
  return result;
}

uint64_t sub_1D58FD328(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4C768, MEMORY[0x1E0CF8078]);
}

uint64_t static ReplicaAdvertisementEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C768, a1);
}

uint64_t sub_1D58FD368(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4C780, MEMORY[0x1E0CF8380]);
}

uint64_t static ReplicaAdvertisementEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C780, a1);
}

uint64_t ReplicaAdvertisementEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ReplicaAdvertisementEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ReplicaAdvertisementEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementEngagementEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ReplicaAdvertisementEngagementEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CC1B0);
}

uint64_t ReplicaAdvertisementEngagementEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementEngagementEvent.viewData.modify())()
{
  type metadata accessor for ReplicaAdvertisementEngagementEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementEngagementEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementEngagementEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementEngagementEvent.articleData.modify())()
{
  type metadata accessor for ReplicaAdvertisementEngagementEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementEngagementEvent.channelData.modify())()
{
  type metadata accessor for ReplicaAdvertisementEngagementEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementEngagementEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementEngagementEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementEngagementEvent.userChannelContextData.modify())()
{
  type metadata accessor for ReplicaAdvertisementEngagementEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementEngagementEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementEngagementEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementEngagementEvent.issueData.modify())()
{
  type metadata accessor for ReplicaAdvertisementEngagementEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementEngagementEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementEngagementEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementEngagementEvent.issueViewData.modify())()
{
  type metadata accessor for ReplicaAdvertisementEngagementEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementEngagementEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReplicaAdvertisementEngagementEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementEngagementEvent.feedData.modify())()
{
  type metadata accessor for ReplicaAdvertisementEngagementEvent(0);
  return nullsub_1;
}

uint64_t ReplicaAdvertisementEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ReplicaAdvertisementEngagementEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  v16 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v16, v19);
}

uint64_t ReplicaAdvertisementEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ReplicaAdvertisementEngagementEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CC108);
}

uint64_t ReplicaAdvertisementEngagementEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ReplicaAdvertisementEngagementEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementEngagementEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ReplicaAdvertisementEngagementEvent.Model.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0) + 36);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementEngagementEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0) + 40));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementEngagementEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

__n128 ReplicaAdvertisementEngagementEvent.Model.init(eventData:viewData:articleData:channelData:userChannelContextData:issueData:issueViewData:feedData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, __n128 *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 *v27;
  __n128 result;
  uint64_t v29;
  __int16 v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __n128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _BYTE v49[23];

  v11 = *a2;
  v12 = a2[1];
  v13 = *((_WORD *)a2 + 8);
  v48 = a3[6];
  *(_OWORD *)v49 = a3[7];
  *(_QWORD *)&v49[15] = *(_QWORD *)((char *)a3 + 127);
  v44 = a3[2];
  v45 = a3[3];
  v46 = a3[4];
  v47 = a3[5];
  v42 = *a3;
  v43 = a3[1];
  v14 = *a4;
  v15 = a4[1];
  v16 = *((_BYTE *)a4 + 16);
  v17 = *((_BYTE *)a4 + 17);
  v18 = a4[3];
  v29 = a4[4];
  v31 = a5[1];
  v32 = *a5;
  v30 = *((_WORD *)a5 + 1);
  v36 = a6[1];
  v37 = *a6;
  v34 = *((_BYTE *)a6 + 17);
  v35 = *((_BYTE *)a6 + 16);
  v33 = a6[3];
  v38 = a7[1];
  v39 = *a7;
  v41 = *a8;
  v40 = a8[1].n128_u64[0];
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0);
  v21 = a9 + v20[5];
  *(_QWORD *)v21 = v11;
  *(_QWORD *)(v21 + 8) = v12;
  *(_WORD *)(v21 + 16) = v13;
  v22 = a9 + v20[6];
  *(_OWORD *)(v22 + 96) = v48;
  *(_OWORD *)(v22 + 112) = *(_OWORD *)v49;
  *(_QWORD *)(v22 + 127) = *(_QWORD *)&v49[15];
  *(_OWORD *)(v22 + 32) = v44;
  *(_OWORD *)(v22 + 48) = v45;
  *(_OWORD *)(v22 + 64) = v46;
  *(_OWORD *)(v22 + 80) = v47;
  *(_OWORD *)v22 = v42;
  *(_OWORD *)(v22 + 16) = v43;
  v23 = a9 + v20[7];
  *(_QWORD *)v23 = v14;
  *(_QWORD *)(v23 + 8) = v15;
  *(_BYTE *)(v23 + 16) = v16;
  *(_BYTE *)(v23 + 17) = v17;
  *(_QWORD *)(v23 + 24) = v18;
  *(_QWORD *)(v23 + 32) = v29;
  v24 = a9 + v20[8];
  *(_BYTE *)v24 = v32;
  *(_BYTE *)(v24 + 1) = v31;
  *(_WORD *)(v24 + 2) = v30;
  v25 = a9 + v20[9];
  *(_QWORD *)v25 = v37;
  *(_QWORD *)(v25 + 8) = v36;
  *(_BYTE *)(v25 + 16) = v35;
  *(_BYTE *)(v25 + 17) = v34;
  *(_QWORD *)(v25 + 24) = v33;
  v26 = (_QWORD *)(a9 + v20[10]);
  *v26 = v39;
  v26[1] = v38;
  v27 = (__n128 *)(a9 + v20[11]);
  result = v41;
  *v27 = v41;
  v27[1].n128_u64[0] = v40;
  return result;
}

uint64_t sub_1D58FE154(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58FE18C + 4 * byte_1D5AC8E20[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58FE18C()
{
  return 0x6174614477656976;
}

uint64_t sub_1D58FE1A4()
{
  return 0x44656C6369747261;
}

unint64_t sub_1D58FE1D8()
{
  return 0xD000000000000016;
}

uint64_t sub_1D58FE1F4()
{
  return 0x7461446575737369;
}

uint64_t sub_1D58FE208()
{
  return 0x6569566575737369;
}

uint64_t sub_1D58FE22C()
{
  return 0x6174614464656566;
}

uint64_t sub_1D58FE244()
{
  unsigned __int8 *v0;

  return sub_1D58FE154(*v0);
}

uint64_t sub_1D58FE24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D590157C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58FE270()
{
  sub_1D58FE650();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58FE298()
{
  sub_1D58FE650();
  return sub_1D5AAEEE0();
}

uint64_t ReplicaAdvertisementEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v38;
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[23];
  char v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;

  v3 = v1;
  sub_1D58FED94(0, &qword_1EFF4C798, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58FE650();
  sub_1D5AAEEC8();
  LOBYTE(v40) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    v49 = v12;
    v50 = v13;
    v51 = (__int16)v11;
    v48 = 1;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v14 = (__int128 *)(v3 + v10[6]);
    v15 = v14[7];
    v46 = v14[6];
    *(_OWORD *)v47 = v15;
    *(_QWORD *)&v47[15] = *(_QWORD *)((char *)v14 + 127);
    v16 = v14[3];
    v42 = v14[2];
    v43 = v16;
    v17 = v14[5];
    v44 = v14[4];
    v45 = v17;
    v18 = v14[1];
    v40 = *v14;
    v41 = v18;
    v39 = 2;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v19 = (uint64_t *)(v3 + v10[7]);
    v20 = *v19;
    v21 = v19[1];
    v22 = *((_BYTE *)v19 + 16);
    v23 = *((_BYTE *)v19 + 17);
    v25 = v19[3];
    v24 = v19[4];
    *(_QWORD *)&v40 = v20;
    *((_QWORD *)&v40 + 1) = v21;
    LOBYTE(v41) = v22;
    BYTE1(v41) = v23;
    *((_QWORD *)&v41 + 1) = v25;
    *(_QWORD *)&v42 = v24;
    v39 = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v26 = (char *)(v3 + v10[8]);
    v27 = *v26;
    v28 = v26[1];
    LOWORD(v26) = *((_WORD *)v26 + 1);
    LOBYTE(v40) = v27;
    BYTE1(v40) = v28;
    WORD1(v40) = (_WORD)v26;
    v39 = 4;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v29 = (uint64_t *)(v3 + v10[9]);
    v30 = *v29;
    v31 = v29[1];
    v32 = *((_BYTE *)v29 + 16);
    v33 = *((_BYTE *)v29 + 17);
    v34 = v29[3];
    *(_QWORD *)&v40 = v30;
    *((_QWORD *)&v40 + 1) = v31;
    LOBYTE(v41) = v32;
    BYTE1(v41) = v33;
    *((_QWORD *)&v41 + 1) = v34;
    v39 = 5;
    sub_1D57C5F1C();
    sub_1D5AAED6C();
    v40 = *(_OWORD *)(v3 + v10[10]);
    v39 = 6;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    v35 = (__int128 *)(v3 + v10[11]);
    v36 = *((_QWORD *)v35 + 2);
    v40 = *v35;
    *(_QWORD *)&v41 = v36;
    v39 = 7;
    sub_1D57C65D4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58FE650()
{
  unint64_t result;

  result = qword_1EFF4C7A0;
  if (!qword_1EFF4C7A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC90DC, &type metadata for ReplicaAdvertisementEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C7A0);
  }
  return result;
}

uint64_t ReplicaAdvertisementEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int16 v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _OWORD v62[3];
  char *v63;

  v44 = a2;
  v4 = sub_1D5AADF98();
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58FED94(0, &qword_1EFF4C7A8, MEMORY[0x1E0DED048]);
  v45 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v44 - v9;
  v48 = type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v48);
  v63 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D58FE650();
  v13 = v10;
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  v14 = v8;
  LOBYTE(v55) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v45;
  sub_1D5AAECD0();
  v16 = (uint64_t)v63;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v63, v6, v4);
  LOBYTE(v50) = 1;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v17 = *((_QWORD *)&v55 + 1);
  v18 = v56;
  v19 = (int *)v48;
  v20 = v16 + *(int *)(v48 + 20);
  *(_QWORD *)v20 = v55;
  *(_QWORD *)(v20 + 8) = v17;
  *(_WORD *)(v20 + 16) = v18;
  v54 = 2;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v21 = v16 + v19[6];
  v22 = v60;
  v23 = v62[0];
  *(_OWORD *)(v21 + 96) = v61;
  *(_OWORD *)(v21 + 112) = v23;
  *(_QWORD *)(v21 + 127) = *(_QWORD *)((char *)v62 + 15);
  v24 = v58;
  *(_OWORD *)(v21 + 32) = v57;
  *(_OWORD *)(v21 + 48) = v24;
  *(_OWORD *)(v21 + 64) = v59;
  *(_OWORD *)(v21 + 80) = v22;
  v25 = v56;
  *(_OWORD *)v21 = v55;
  *(_OWORD *)(v21 + 16) = v25;
  v49 = 3;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v26 = (uint64_t)v47;
  v27 = *((_QWORD *)&v50 + 1);
  v28 = v51;
  v29 = BYTE1(v51);
  v30 = v52;
  v31 = v53;
  v32 = v16 + v19[7];
  *(_QWORD *)v32 = v50;
  *(_QWORD *)(v32 + 8) = v27;
  *(_BYTE *)(v32 + 16) = v28;
  *(_BYTE *)(v32 + 17) = v29;
  *(_QWORD *)(v32 + 24) = v30;
  *(_QWORD *)(v32 + 32) = v31;
  v49 = 4;
  sub_1D57C7AE0();
  sub_1D5AAECD0();
  v33 = BYTE1(v50);
  v34 = WORD1(v50);
  v35 = v16 + v19[8];
  *(_BYTE *)v35 = v50;
  *(_BYTE *)(v35 + 1) = v33;
  *(_WORD *)(v35 + 2) = v34;
  v49 = 5;
  sub_1D57C5ED8();
  sub_1D5AAECD0();
  v36 = *((_QWORD *)&v50 + 1);
  v37 = v51;
  v38 = BYTE1(v51);
  v39 = v52;
  v40 = v16 + v19[9];
  *(_QWORD *)v40 = v50;
  *(_QWORD *)(v40 + 8) = v36;
  *(_BYTE *)(v40 + 16) = v37;
  *(_BYTE *)(v40 + 17) = v38;
  *(_QWORD *)(v40 + 24) = v39;
  v49 = 6;
  sub_1D57CAD28();
  sub_1D5AAEC7C();
  *(_OWORD *)(v16 + v19[10]) = v50;
  v49 = 7;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v13, v15);
  v41 = v51;
  v42 = v16 + v19[11];
  *(_OWORD *)v42 = v50;
  *(_QWORD *)(v42 + 16) = v41;
  sub_1D58FEDF0(v16, v44);
  __swift_destroy_boxed_opaque_existential_1(v26);
  return sub_1D58FEE34(v16);
}

void sub_1D58FED94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58FE650();
    v7 = a3(a1, &type metadata for ReplicaAdvertisementEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58FEDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58FEE34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ReplicaAdvertisementEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58FEE70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReplicaAdvertisementEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58FEE84(_QWORD *a1)
{
  return ReplicaAdvertisementEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58FEE98@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C768, a1);
}

uint64_t sub_1D58FEEBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C780, a1);
}

uint64_t sub_1D58FEEE0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  v17 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v17, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReplicaAdvertisementEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for ReplicaAdvertisementEngagementEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for ReplicaAdvertisementEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for ReplicaAdvertisementEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for ReplicaAdvertisementEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for ReplicaAdvertisementEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReplicaAdvertisementEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58FFFA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ReplicaAdvertisementEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59001DC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5900410()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ReplicaAdvertisementEngagementEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v15 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 3) = v15;
    v13[32] = v14[32];
    v16 = *((_QWORD *)v14 + 6);
    *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 6) = v16;
    v13[56] = v14[56];
    v13[57] = v14[57];
    v18 = *((_QWORD *)v14 + 8);
    v17 = *((_QWORD *)v14 + 9);
    v13[80] = v14[80];
    *((_QWORD *)v13 + 8) = v18;
    *((_QWORD *)v13 + 9) = v17;
    *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
    *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
    v13[112] = v14[112];
    *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
    *((_DWORD *)v13 + 32) = *((_DWORD *)v14 + 32);
    v13[132] = v14[132];
    v13[133] = v14[133];
    v13[134] = v14[134];
    v19 = a3[7];
    v20 = a3[8];
    v21 = (char *)a1 + v19;
    v22 = (char *)a2 + v19;
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v21[16] = v22[16];
    v21[17] = v22[17];
    v24 = *((_QWORD *)v22 + 4);
    *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
    *((_QWORD *)v21 + 4) = v24;
    *(_DWORD *)((char *)a1 + v20) = *(_DWORD *)((char *)a2 + v20);
    v25 = a3[9];
    v26 = a3[10];
    v27 = (char *)a1 + v25;
    v28 = (char *)a2 + v25;
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v27[16] = v28[16];
    v27[17] = v28[17];
    *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
    v30 = (uint64_t *)((char *)a1 + v26);
    v31 = (uint64_t *)((char *)a2 + v26);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = a3[11];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = *(uint64_t *)((char *)a2 + v33 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v36 == 1)
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
    }
    else
    {
      *v34 = *v35;
      *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
      *((_QWORD *)v34 + 2) = v36;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for ReplicaAdvertisementEngagementEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 44) + 16);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for ReplicaAdvertisementEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  v17 = *(_QWORD *)(v13 + 64);
  v16 = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 64) = v17;
  *(_QWORD *)(v12 + 72) = v16;
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  *(_DWORD *)(v12 + 128) = *(_DWORD *)(v13 + 128);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v22;
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  *(_BYTE *)(v20 + 17) = *(_BYTE *)(v21 + 17);
  v23 = *(_QWORD *)(v21 + 32);
  *(_QWORD *)(v20 + 24) = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v20 + 32) = v23;
  *(_DWORD *)(a1 + v19) = *(_DWORD *)(a2 + v19);
  v24 = a3[9];
  v25 = a3[10];
  v26 = a1 + v24;
  v27 = a2 + v24;
  v28 = *(_QWORD *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_QWORD *)(v26 + 8) = v28;
  *(_BYTE *)(v26 + 16) = *(_BYTE *)(v27 + 16);
  *(_BYTE *)(v26 + 17) = *(_BYTE *)(v27 + 17);
  *(_QWORD *)(v26 + 24) = *(_QWORD *)(v27 + 24);
  v29 = (_QWORD *)(a1 + v25);
  v30 = (_QWORD *)(a2 + v25);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a2 + v32 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35 == 1)
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  }
  else
  {
    *(_BYTE *)v33 = *(_BYTE *)v34;
    *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
    *(_QWORD *)(v33 + 16) = v35;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ReplicaAdvertisementEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_DWORD *)(v11 + 4) = *(_DWORD *)(a2 + v10 + 4);
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + v10 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(a2 + v10 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  v13 = *(_QWORD *)(v12 + 48);
  *(_BYTE *)(v11 + 56) = *(_BYTE *)(v12 + 56);
  *(_QWORD *)(v11 + 48) = v13;
  *(_BYTE *)(v11 + 57) = *(_BYTE *)(v12 + 57);
  *(_QWORD *)(v11 + 64) = *(_QWORD *)(v12 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v12 + 72);
  *(_BYTE *)(v11 + 80) = *(_BYTE *)(v12 + 80);
  *(_QWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 88) = *(_QWORD *)(v12 + 88);
  *(_QWORD *)(v11 + 96) = *(_QWORD *)(v12 + 96);
  *(_QWORD *)(v11 + 104) = *(_QWORD *)(v12 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 112) = *(_BYTE *)(v12 + 112);
  *(_QWORD *)(v11 + 120) = *(_QWORD *)(v12 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 128) = *(_BYTE *)(v12 + 128);
  *(_BYTE *)(v11 + 129) = *(_BYTE *)(v12 + 129);
  *(_BYTE *)(v11 + 130) = *(_BYTE *)(v12 + 130);
  *(_BYTE *)(v11 + 131) = *(_BYTE *)(v12 + 131);
  *(_BYTE *)(v11 + 132) = *(_BYTE *)(v12 + 132);
  *(_BYTE *)(v11 + 133) = *(_BYTE *)(v12 + 133);
  *(_BYTE *)(v11 + 134) = *(_BYTE *)(v12 + 134);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  *(_BYTE *)(v16 + 17) = *(_BYTE *)(v17 + 17);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_BYTE *)(a1 + v18);
  v20 = (_BYTE *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v19[3] = v20[3];
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)(a2 + v21);
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
  *(_BYTE *)(v22 + 17) = *(_BYTE *)(v23 + 17);
  *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[10];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = a3[11];
  v28 = a1 + v27;
  v29 = (__int128 *)(a2 + v27);
  v30 = *(_QWORD *)(a1 + v27 + 16);
  v31 = *((_QWORD *)v29 + 2);
  if (v30 == 1)
  {
    if (v31 == 1)
    {
      v32 = *v29;
      *(_QWORD *)(v28 + 16) = *((_QWORD *)v29 + 2);
      *(_OWORD *)v28 = v32;
    }
    else
    {
      *(_BYTE *)v28 = *(_BYTE *)v29;
      *(_QWORD *)(v28 + 8) = *((_QWORD *)v29 + 1);
      *(_QWORD *)(v28 + 16) = *((_QWORD *)v29 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v31 == 1)
  {
    sub_1D57D9100(v28);
    v33 = *((_QWORD *)v29 + 2);
    *(_OWORD *)v28 = *v29;
    *(_QWORD *)(v28 + 16) = v33;
  }
  else
  {
    *(_BYTE *)v28 = *(_BYTE *)v29;
    *(_QWORD *)(v28 + 8) = *((_QWORD *)v29 + 1);
    *(_QWORD *)(v28 + 16) = *((_QWORD *)v29 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t initializeWithTake for ReplicaAdvertisementEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = a1 + v8;
  v12 = a2 + v8;
  v13 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v11 + 48) = v13;
  v14 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v14;
  *(_QWORD *)(v11 + 127) = *(_QWORD *)(v12 + 127);
  v15 = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v11 + 96) = *(_OWORD *)(v12 + 96);
  *(_OWORD *)(v11 + 112) = v15;
  v16 = *(_OWORD *)(v12 + 80);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(v12 + 64);
  *(_OWORD *)(v11 + 80) = v16;
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_DWORD *)(a1 + v18) = *(_DWORD *)(a2 + v18);
  v22 = a3[9];
  v23 = a3[10];
  v24 = (_OWORD *)(a1 + v22);
  v25 = (_OWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  v27 = a3[11];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  return a1;
}

uint64_t assignWithTake for ReplicaAdvertisementEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  v14 = *(_QWORD *)(a2 + v11 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  *(_BYTE *)(v23 + 1) = *(_BYTE *)(v24 + 1);
  *(_WORD *)(v23 + 2) = *(_WORD *)(v24 + 2);
  v25 = a1 + v22;
  v26 = a2 + v22;
  v27 = *(_QWORD *)(a2 + v22);
  v28 = *(_QWORD *)(a2 + v22 + 8);
  *(_QWORD *)v25 = v27;
  *(_QWORD *)(v25 + 8) = v28;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
  *(_BYTE *)(v25 + 17) = *(_BYTE *)(v26 + 17);
  *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
  swift_bridgeObjectRelease();
  v29 = a3[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[11];
  v35 = a1 + v34;
  v36 = a2 + v34;
  if (*(_QWORD *)(a1 + v34 + 16) != 1)
  {
    v37 = *(_QWORD *)(v36 + 16);
    if (v37 != 1)
    {
      *(_BYTE *)v35 = *(_BYTE *)v36;
      *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
      *(_QWORD *)(v35 + 16) = v37;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D57D9100(v35);
  }
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReplicaAdvertisementEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5901224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ReplicaAdvertisementEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59012B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D590132C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReplicaAdvertisementEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5901424 + 4 * byte_1D5AC8E2D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D5901458 + 4 * byte_1D5AC8E28[v4]))();
}

uint64_t sub_1D5901458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5901460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5901468);
  return result;
}

uint64_t sub_1D5901474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D590147CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D5901480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5901488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReplicaAdvertisementEngagementEvent.Model.CodingKeys()
{
  return &type metadata for ReplicaAdvertisementEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1D59014A8()
{
  unint64_t result;

  result = qword_1EFF4C7B0;
  if (!qword_1EFF4C7B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC90B4, &type metadata for ReplicaAdvertisementEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C7B0);
  }
  return result;
}

unint64_t sub_1D59014F0()
{
  unint64_t result;

  result = qword_1EFF4C7B8;
  if (!qword_1EFF4C7B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9024, &type metadata for ReplicaAdvertisementEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C7B8);
  }
  return result;
}

unint64_t sub_1D5901538()
{
  unint64_t result;

  result = qword_1EFF4C7C0;
  if (!qword_1EFF4C7C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC904C, &type metadata for ReplicaAdvertisementEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C7C0);
  }
  return result;
}

uint64_t sub_1D590157C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t AdPositionData.position.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t AdPositionData.position.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*AdPositionData.position.modify())()
{
  return nullsub_1;
}

uint64_t AdPositionData.init(position:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D5901944()
{
  sub_1D5901A84();
  return sub_1D5AAEED4();
}

uint64_t sub_1D590196C()
{
  sub_1D5901A84();
  return sub_1D5AAEEE0();
}

uint64_t AdPositionData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5901BE8(0, &qword_1ED9CE188, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5901A84();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5901A84()
{
  unint64_t result;

  result = qword_1ED9CDA48;
  if (!qword_1ED9CDA48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC92A0, &type metadata for AdPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA48);
  }
  return result;
}

uint64_t AdPositionData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1D5901BE8(0, &qword_1EFF4C7C8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5901A84();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5901BE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5901A84();
    v7 = a3(a1, &type metadata for AdPositionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5901C4C@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return AdPositionData.init(from:)(a1, a2);
}

uint64_t sub_1D5901C60(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5901BE8(0, &qword_1ED9CE188, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5901A84();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t storeEnumTagSinglePayload for AdPositionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5901D90 + 4 * byte_1D5AC912C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5901DB0 + 4 * byte_1D5AC9131[v4]))();
}

_BYTE *sub_1D5901D90(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5901DB0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5901DB8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5901DC0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5901DC8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5901DD0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdPositionData.CodingKeys()
{
  return &type metadata for AdPositionData.CodingKeys;
}

unint64_t sub_1D5901DF0()
{
  unint64_t result;

  result = qword_1EFF4C7D0;
  if (!qword_1EFF4C7D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9278, &type metadata for AdPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C7D0);
  }
  return result;
}

unint64_t sub_1D5901E38()
{
  unint64_t result;

  result = qword_1ED9CDA58;
  if (!qword_1ED9CDA58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC91E8, &type metadata for AdPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA58);
  }
  return result;
}

unint64_t sub_1D5901E80()
{
  unint64_t result;

  result = qword_1ED9CDA50;
  if (!qword_1ED9CDA50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9210, &type metadata for AdPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA50);
  }
  return result;
}

id FCHeadlineProviding.articleData()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  int v10;
  int v11;
  unsigned int v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  id result;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  void *v35;
  unsigned __int8 v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  char v39;
  char v40;
  BOOL v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  id v53;
  int v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  BOOL v64;
  char v65[4];
  int v66;

  v2 = v1;
  sub_1D57B76A8(0, &qword_1ED9C6F40, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v45[-v8];
  FCHeadlineProviding.alternateHeadlineData()((uint64_t)v65);
  v10 = v65[0];
  v11 = v66;
  v12 = objc_msgSend(v1, sel_isPaid);
  v13 = objc_msgSend(v1, sel_articleID);
  v14 = sub_1D5AAE820();
  v61 = v15;
  v62 = v14;

  v59 = objc_msgSend(v2, sel_contentType);
  v60 = objc_msgSend(v2, sel_backendArticleVersion);
  v16 = objc_msgSend(v2, sel_respondsToSelector_, sel_bodyTextLength);
  v17 = 0;
  v57 = v16;
  if ((v16 & 1) != 0)
    v17 = objc_msgSend(v2, sel_bodyTextLength);
  v58 = v17;
  v56 = objc_msgSend(v2, sel_hasVideo);
  v18 = objc_msgSend(v2, sel_iAdCategories);
  if (v18)
  {
    v19 = v18;
    v55 = sub_1D5AAE94C();

  }
  else
  {
    v55 = MEMORY[0x1E0DEE9D8];
  }
  v20 = objc_msgSend(v2, sel_publishDate);
  if (v20)
  {
    v21 = v20;
    sub_1D5AAD6F8();

    v22 = sub_1D5AAD710();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 0, 1, v22);
  }
  else
  {
    v22 = sub_1D5AAD710();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 1, 1, v22);
  }
  sub_1D5902534((uint64_t)v7, (uint64_t)v9);
  sub_1D5AAD710();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v22) != 1)
  {
    sub_1D5AAD6EC();
    v26 = v25;
    result = (id)(*(uint64_t (**)(_BYTE *, uint64_t))(v23 + 8))(v9, v22);
    v24 = v26 * 1000.0;
    if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) != 0)
    {
      if (v24 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v24 < 9.22337204e18)
      {
        goto LABEL_14;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  sub_1D57C0394((uint64_t)v9, &qword_1ED9C6F40, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v24 = 0.0;
LABEL_14:
  v28 = objc_msgSend(v2, sel_publisherArticleVersion);
  v29 = objc_msgSend(v2, sel_referencedArticleID);
  v53 = v28;
  if (v29)
  {
    v30 = v29;
    v31 = sub_1D5AAE820();
    v48 = v32;
    v49 = v31;

  }
  else
  {
    v48 = 0;
    v49 = 0;
  }
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_role) & 1) != 0
    && (v33 = (unint64_t)objc_msgSend(v2, sel_role), v33 <= 8))
  {
    v46 = byte_1D5AC92F0[v33];
  }
  else
  {
    v46 = 0;
  }
  v34 = objc_msgSend(v2, sel_topicIDs);
  if (v34)
  {
    v35 = v34;
    v47 = sub_1D5AAE94C();

  }
  else
  {
    v47 = MEMORY[0x1E0DEE9D8];
  }
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_hasAudioTrack) & 1) != 0)
    v52 = objc_msgSend(v2, sel_hasAudioTrack);
  else
    v52 = 0;
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_isEvergreen) & 1) != 0)
    v51 = objc_msgSend(v2, sel_isEvergreen);
  else
    v51 = 0;
  v54 = v10;
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_isFeatured) & 1) != 0)
    v50 = objc_msgSend(v2, sel_isFeatured);
  else
    v50 = 0;
  v36 = objc_msgSend(v2, sel_isFeatureCandidate);
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_reduceVisibility) & 1) != 0)
    v37 = objc_msgSend(v2, sel_reduceVisibility);
  else
    v37 = 0;
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_webConverted) & 1) != 0)
    v38 = objc_msgSend(v2, sel_webConverted);
  else
    v38 = 0;
  if (v59 == (id)2)
    v39 = 1;
  else
    v39 = 2 * (v59 == (id)1);
  if (v12)
    v40 = 2;
  else
    v40 = 1;
  result = objc_msgSend(v2, sel_isAIGenerated);
  v41 = (v57 & 1) == 0;
  v64 = v41;
  v63 = 0;
  *(_BYTE *)a1 = v54;
  *(_DWORD *)(a1 + 4) = v11;
  *(_BYTE *)(a1 + 8) = v40;
  v42 = v61;
  *(_QWORD *)(a1 + 16) = v62;
  *(_QWORD *)(a1 + 24) = v42;
  *(_BYTE *)(a1 + 32) = v39;
  v43 = v58;
  *(_QWORD *)(a1 + 40) = v60;
  *(_QWORD *)(a1 + 48) = v43;
  *(_BYTE *)(a1 + 56) = v41;
  *(_BYTE *)(a1 + 57) = v56;
  *(_QWORD *)(a1 + 64) = v55;
  *(_QWORD *)(a1 + 72) = (uint64_t)v24;
  *(_BYTE *)(a1 + 80) = 0;
  v44 = v49;
  *(_QWORD *)(a1 + 88) = v53;
  *(_QWORD *)(a1 + 96) = v44;
  *(_QWORD *)(a1 + 104) = v48;
  *(_BYTE *)(a1 + 112) = v46;
  *(_QWORD *)(a1 + 120) = v47;
  *(_BYTE *)(a1 + 128) = v52;
  *(_BYTE *)(a1 + 129) = v51;
  *(_BYTE *)(a1 + 130) = v50;
  *(_BYTE *)(a1 + 131) = v36;
  *(_BYTE *)(a1 + 132) = v37;
  *(_BYTE *)(a1 + 133) = v38;
  *(_BYTE *)(a1 + 134) = (_BYTE)result;
  return result;
}

void FCHeadlineProviding.alternateHeadlineData()(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_experimentalTitleMetadata) & 1) == 0)
    goto LABEL_9;
  v3 = objc_msgSend(v1, sel_experimentalTitleMetadata);
  if (!v3)
    goto LABEL_9;
  v4 = v3;
  v5 = objc_msgSend(v4, sel_treatmentState);
  if (v5 >= 6)
    v6 = 0;
  else
    v6 = 0x50003000100uLL >> (8 * v5);
  v7 = (uint64_t)objc_msgSend(v4, sel_arrayIndexUsedforTitle);

  if (v7 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v7 <= 0x7FFFFFFF)
    {
LABEL_10:
      *(_BYTE *)a1 = v6;
      *(_DWORD *)(a1 + 4) = v7;
      return;
    }
    __break(1u);
LABEL_9:
    v6 = 0;
    LODWORD(v7) = 0;
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1D5902534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57B76A8(0, &qword_1ED9C6F40, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t FCHeadlineProviding.referringArticleData()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  unsigned __int8 v10;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_articleID);
  v5 = sub_1D5AAE820();
  v7 = v6;

  v8 = objc_msgSend(v2, sel_publisherArticleVersion);
  result = (unint64_t)objc_msgSend(v2, sel_respondsToSelector_, sel_role);
  if ((result & 1) != 0 && (result = (unint64_t)objc_msgSend(v2, sel_role), result <= 8))
    v10 = byte_1D5AC92F0[result];
  else
    v10 = 0;
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v10;
  return result;
}

uint64_t FCHeadlineProviding.articleExposureContextData()@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v3 = objc_msgSend(v1, sel_surfacedByTopicID);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1D5AAE820();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = objc_msgSend(v1, sel_surfacedByChannelID);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1D5AAE820();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  result = sub_1D5902714(v1);
  *a1 = v5;
  a1[1] = v7;
  a1[2] = v10;
  a1[3] = v12;
  a1[4] = result;
  return result;
}

uint64_t sub_1D5902714(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_surfacedByArticleListIDs);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1D5AAE94C();

  return v3;
}

NewsAnalytics::ShareOriginationData_optional __swiftcall FCHeadlineProviding.shareOriginationData()()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  NewsAnalytics::ShareOriginationData_optional result;
  char v16;
  int v17;
  uint64_t v18;
  char *v19;

  v2 = v1;
  v19 = v0;
  v3 = sub_1D5AAE598();
  v18 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B76A8(0, (unint64_t *)&qword_1ED9CE0F0, (void (*)(uint64_t))MEMORY[0x1E0D5D458]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - v7;
  v9 = sub_1D5AAE5A4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AAE628();
  v13 = (void *)sub_1D5AAE61C();
  v14 = objc_msgSend(v2, sel_articleID);
  sub_1D5AAE820();

  sub_1D5AAE610();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    result.value.origin = sub_1D57C0394((uint64_t)v8, (unint64_t *)&qword_1ED9CE0F0, (void (*)(uint64_t))MEMORY[0x1E0D5D458]);
    v16 = 2;
LABEL_6:
    *v19 = v16;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1D5AAE58C();
  v17 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v5, v3);
  if (v17 == *MEMORY[0x1E0D5D440] || v17 == *MEMORY[0x1E0D5D438])
  {
    v16 = v17 != *MEMORY[0x1E0D5D440];
    result.value.origin = (*(unsigned __int8 (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_6;
  }
  result.value.origin = sub_1D5AAEDD8();
  __break(1u);
  return result;
}

void DialogStyleData.style.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *DialogStyleData.style.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*DialogStyleData.style.modify())()
{
  return nullsub_1;
}

NewsAnalytics::DialogStyleData __swiftcall DialogStyleData.init(style:)(NewsAnalytics::DialogStyleData style)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)style.style;
  return style;
}

uint64_t sub_1D59029BC()
{
  return 0x656C797473;
}

uint64_t sub_1D59029D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5902A5C()
{
  sub_1D5902BB0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5902A84()
{
  sub_1D5902BB0();
  return sub_1D5AAEEE0();
}

uint64_t DialogStyleData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5902D70(0, &qword_1ED9CE190, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5902BB0();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5902BF4();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5902BB0()
{
  unint64_t result;

  result = qword_1ED9CDA70;
  if (!qword_1ED9CDA70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC947C, &type metadata for DialogStyleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA70);
  }
  return result;
}

unint64_t sub_1D5902BF4()
{
  unint64_t result;

  result = qword_1ED9CDA40;
  if (!qword_1ED9CDA40)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DialogStyle, &type metadata for DialogStyle);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA40);
  }
  return result;
}

uint64_t DialogStyleData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5902D70(0, &qword_1EFF4C7D8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5902BB0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5902DCC();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5902D70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5902BB0();
    v7 = a3(a1, &type metadata for DialogStyleData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5902DCC()
{
  unint64_t result;

  result = qword_1EFF4C7E0;
  if (!qword_1EFF4C7E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DialogStyle, &type metadata for DialogStyle);
    atomic_store(result, (unint64_t *)&qword_1EFF4C7E0);
  }
  return result;
}

uint64_t sub_1D5902E18@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DialogStyleData.init(from:)(a1, a2);
}

uint64_t sub_1D5902E2C(_QWORD *a1)
{
  return DialogStyleData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for DialogStyleData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5902E8C + 4 * byte_1D5AC9301[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5902EC0 + 4 * byte_1D5AC92FC[v4]))();
}

uint64_t sub_1D5902EC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5902EC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5902ED0);
  return result;
}

uint64_t sub_1D5902EDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5902EE4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5902EE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5902EF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DialogStyleData()
{
  return &type metadata for DialogStyleData;
}

uint64_t storeEnumTagSinglePayload for DialogStyleData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5902F4C + 4 * byte_1D5AC9306[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5902F6C + 4 * byte_1D5AC930B[v4]))();
}

_BYTE *sub_1D5902F4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5902F6C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5902F74(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5902F7C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5902F84(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5902F8C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DialogStyleData.CodingKeys()
{
  return &type metadata for DialogStyleData.CodingKeys;
}

unint64_t sub_1D5902FAC()
{
  unint64_t result;

  result = qword_1EFF4C7E8;
  if (!qword_1EFF4C7E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9454, &type metadata for DialogStyleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C7E8);
  }
  return result;
}

unint64_t sub_1D5902FF4()
{
  unint64_t result;

  result = qword_1ED9CDA80;
  if (!qword_1ED9CDA80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC93C4, &type metadata for DialogStyleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA80);
  }
  return result;
}

unint64_t sub_1D590303C()
{
  unint64_t result;

  result = qword_1ED9CDA78;
  if (!qword_1ED9CDA78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC93EC, &type metadata for DialogStyleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA78);
  }
  return result;
}

uint64_t ReferralFeedData.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ReferralFeedData.feedData.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  return result;
}

uint64_t (*ReferralFeedData.feedData.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ReferralFeedData __swiftcall ReferralFeedData.init(feedData:)(NewsAnalytics::ReferralFeedData feedData)
{
  uint64_t v1;

  *(_BYTE *)v1 = **(_BYTE **)&feedData.feedData.feedType;
  *(_OWORD *)(v1 + 8) = *(_OWORD *)(*(_QWORD *)&feedData.feedData.feedType + 8);
  return feedData;
}

uint64_t sub_1D59030F0()
{
  return 0x6174614464656566;
}

uint64_t sub_1D5903108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D590319C()
{
  sub_1D5903304();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59031C4()
{
  sub_1D5903304();
  return sub_1D5AAEEE0();
}

uint64_t ReferralFeedData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D590348C(0, &qword_1EFF4C7F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v11 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - v5;
  v7 = *v1;
  v8 = *((_QWORD *)v1 + 1);
  v9 = *((_QWORD *)v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5903304();
  sub_1D5AAEEC8();
  v12 = v7;
  v13 = v8;
  v14 = v9;
  sub_1D57C65D4();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v6, v4);
}

unint64_t sub_1D5903304()
{
  unint64_t result;

  result = qword_1EFF4C7F8;
  if (!qword_1EFF4C7F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9654, &type metadata for ReferralFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C7F8);
  }
  return result;
}

uint64_t ReferralFeedData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 v10;
  _BYTE v12[16];
  __int128 v13;

  sub_1D590348C(0, &qword_1EFF4C800, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5903304();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57C6590();
    sub_1D5AAECD0();
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    v10 = v13;
    *(_BYTE *)a2 = v12[8];
    *(_OWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D590348C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5903304();
    v7 = a3(a1, &type metadata for ReferralFeedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59034E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReferralFeedData.init(from:)(a1, a2);
}

uint64_t sub_1D59034FC(_QWORD *a1)
{
  return ReferralFeedData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for ReferralFeedData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5903550 + 4 * byte_1D5AC94E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5903570 + 4 * byte_1D5AC94E5[v4]))();
}

_BYTE *sub_1D5903550(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5903570(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5903578(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5903580(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5903588(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5903590(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReferralFeedData.CodingKeys()
{
  return &type metadata for ReferralFeedData.CodingKeys;
}

unint64_t sub_1D59035B0()
{
  unint64_t result;

  result = qword_1EFF4C808;
  if (!qword_1EFF4C808)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC962C, &type metadata for ReferralFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C808);
  }
  return result;
}

unint64_t sub_1D59035F8()
{
  unint64_t result;

  result = qword_1EFF4C810;
  if (!qword_1EFF4C810)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC959C, &type metadata for ReferralFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C810);
  }
  return result;
}

unint64_t sub_1D5903640()
{
  unint64_t result;

  result = qword_1EFF4C818;
  if (!qword_1EFF4C818)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC95C4, &type metadata for ReferralFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C818);
  }
  return result;
}

uint64_t ArticleData.init(alternateHeadlineData:articleAccessType:articleID:articleType:backendArticleVersion:bodyTextLength:hasVideo:iAdCategories:publishDate:publisherArticleVersion:referencedArticleID:role:topicIDs:isAudio:isEvergreen:isFeatured:isFeatureCandidate:reduceVisibility:webConverted:hasAIGeneratedContent:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12, char a13, __int128 a14, uint64_t a15, char *a16, uint64_t a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24)
{
  char v24;
  uint64_t result;
  char v26;
  char v27;
  char v28;

  v24 = *a1;
  result = *((unsigned int *)a1 + 1);
  v26 = *a2;
  v27 = *a5;
  v28 = *a16;
  *(_BYTE *)a9 = v24;
  *(_DWORD *)(a9 + 4) = result;
  *(_BYTE *)(a9 + 8) = v26;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = v27;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  *(_BYTE *)(a9 + 57) = a10;
  *(_QWORD *)(a9 + 64) = a11;
  *(_QWORD *)(a9 + 72) = a12;
  *(_BYTE *)(a9 + 80) = a13 & 1;
  *(_OWORD *)(a9 + 88) = a14;
  *(_QWORD *)(a9 + 104) = a15;
  *(_BYTE *)(a9 + 112) = v28;
  *(_QWORD *)(a9 + 120) = a17;
  *(_BYTE *)(a9 + 128) = a18;
  *(_BYTE *)(a9 + 129) = a19;
  *(_BYTE *)(a9 + 130) = a20;
  *(_BYTE *)(a9 + 131) = a21;
  *(_BYTE *)(a9 + 132) = a22;
  *(_BYTE *)(a9 + 133) = a23;
  *(_BYTE *)(a9 + 134) = a24;
  return result;
}

void ArticleData.alternateHeadlineData.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 4);
  *(_BYTE *)a1 = *(_BYTE *)v1;
  *(_DWORD *)(a1 + 4) = v2;
}

uint64_t ArticleData.alternateHeadlineData.setter(uint64_t result)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(result + 4);
  *(_BYTE *)v1 = *(_BYTE *)result;
  *(_DWORD *)(v1 + 4) = v2;
  return result;
}

uint64_t (*ArticleData.alternateHeadlineData.modify())()
{
  return nullsub_1;
}

void ArticleData.articleAccessType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *ArticleData.articleAccessType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*ArticleData.articleAccessType.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.articleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleData.articleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ArticleData.articleID.modify())()
{
  return nullsub_1;
}

void ArticleData.articleType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *ArticleData.articleType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*ArticleData.articleType.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.backendArticleVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ArticleData.backendArticleVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*ArticleData.backendArticleVersion.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.bodyTextLength.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t ArticleData.bodyTextLength.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*ArticleData.bodyTextLength.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.hasVideo.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t ArticleData.hasVideo.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 57) = result;
  return result;
}

uint64_t (*ArticleData.hasVideo.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.iAdCategories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArticleData.iAdCategories.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*ArticleData.iAdCategories.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.publishDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t ArticleData.publishDate.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = result;
  *(_BYTE *)(v2 + 80) = a2 & 1;
  return result;
}

uint64_t (*ArticleData.publishDate.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.publisherArticleVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t ArticleData.publisherArticleVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = result;
  return result;
}

uint64_t (*ArticleData.publisherArticleVersion.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.referencedArticleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleData.referencedArticleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*ArticleData.referencedArticleID.modify())()
{
  return nullsub_1;
}

void ArticleData.role.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 112);
}

_BYTE *ArticleData.role.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 112) = *result;
  return result;
}

uint64_t (*ArticleData.role.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.topicIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArticleData.topicIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 120) = a1;
  return result;
}

uint64_t (*ArticleData.topicIDs.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.isAudio.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t ArticleData.isAudio.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 128) = result;
  return result;
}

uint64_t (*ArticleData.isAudio.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.isEvergreen.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 129);
}

uint64_t ArticleData.isEvergreen.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 129) = result;
  return result;
}

uint64_t (*ArticleData.isEvergreen.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.isFeatured.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 130);
}

uint64_t ArticleData.isFeatured.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 130) = result;
  return result;
}

uint64_t (*ArticleData.isFeatured.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.isFeatureCandidate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 131);
}

uint64_t ArticleData.isFeatureCandidate.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 131) = result;
  return result;
}

uint64_t (*ArticleData.isFeatureCandidate.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.reduceVisibility.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 132);
}

uint64_t ArticleData.reduceVisibility.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 132) = result;
  return result;
}

uint64_t (*ArticleData.reduceVisibility.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.webConverted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 133);
}

uint64_t ArticleData.webConverted.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 133) = result;
  return result;
}

uint64_t (*ArticleData.webConverted.modify())()
{
  return nullsub_1;
}

uint64_t ArticleData.hasAIGeneratedContent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 134);
}

uint64_t ArticleData.hasAIGeneratedContent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 134) = result;
  return result;
}

uint64_t (*ArticleData.hasAIGeneratedContent.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5903AFC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D5903B34 + 4 * byte_1D5AC96A4[a1]))(0xD000000000000015, 0x80000001D5AEFEA0);
}

uint64_t sub_1D5903B34(uint64_t a1)
{
  return a1 - 4;
}

uint64_t sub_1D5903D00()
{
  unsigned __int8 *v0;

  return sub_1D5903AFC(*v0);
}

uint64_t sub_1D5903D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5905434(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D5903D2C(_BYTE *a1@<X8>)
{
  *a1 = 20;
}

uint64_t sub_1D5903D38()
{
  sub_1D59042F0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5903D60()
{
  sub_1D59042F0();
  return sub_1D5AAEEE0();
}

uint64_t ArticleData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _DWORD v16[10];
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  sub_1D5904CA4(0, &qword_1ED9CC8A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v16 - v6;
  v8 = *v1;
  v9 = *((_DWORD *)v1 + 1);
  v32 = v1[8];
  v10 = *((_QWORD *)v1 + 2);
  v30 = *((_QWORD *)v1 + 3);
  v31 = v10;
  v29 = v1[32];
  v28 = *((_QWORD *)v1 + 5);
  v26 = *((_QWORD *)v1 + 6);
  v27 = v1[56];
  v25 = v1[57];
  v24 = *((_QWORD *)v1 + 8);
  v11 = *((_QWORD *)v1 + 9);
  v23 = v1[80];
  v21 = *((_QWORD *)v1 + 11);
  v22 = v11;
  v12 = *((_QWORD *)v1 + 13);
  v19 = *((_QWORD *)v1 + 12);
  v20 = v12;
  v18 = v1[112];
  v17 = *((_QWORD *)v1 + 15);
  LODWORD(v11) = v1[128];
  v16[8] = v1[129];
  v16[9] = v11;
  LODWORD(v11) = v1[130];
  v16[6] = v1[131];
  v16[7] = v11;
  v16[3] = v1[132];
  LODWORD(v12) = v1[134];
  v16[4] = v1[133];
  v16[5] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59042F0();
  sub_1D5AAEEC8();
  LOBYTE(v35) = v8;
  HIDWORD(v35) = v9;
  v34 = 0;
  sub_1D5904334();
  v13 = v33;
  sub_1D5AAED6C();
  if (!v13)
  {
    v14 = v29;
    LOBYTE(v35) = v32;
    v34 = 1;
    sub_1D5904378();
    sub_1D5AAED6C();
    LOBYTE(v35) = 2;
    sub_1D5AAED3C();
    v33 = v5;
    LOBYTE(v35) = v14;
    v34 = 3;
    sub_1D59043BC();
    sub_1D5AAED6C();
    LOBYTE(v35) = 4;
    sub_1D5AAED84();
    LOBYTE(v35) = 5;
    sub_1D5AAED30();
    LOBYTE(v35) = 6;
    sub_1D5AAED48();
    v35 = v24;
    v34 = 7;
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1D5AAED18();
    LOBYTE(v35) = 8;
    sub_1D5AAED30();
    LOBYTE(v35) = 9;
    sub_1D5AAED84();
    LOBYTE(v35) = 10;
    sub_1D5AAECF4();
    LOBYTE(v35) = v18;
    v34 = 11;
    sub_1D57E2930();
    sub_1D5AAED6C();
    v35 = v17;
    v34 = 12;
    sub_1D5AAED6C();
    LOBYTE(v35) = 13;
    sub_1D5AAED48();
    LOBYTE(v35) = 14;
    sub_1D5AAED48();
    LOBYTE(v35) = 15;
    sub_1D5AAED48();
    LOBYTE(v35) = 16;
    sub_1D5AAED48();
    LOBYTE(v35) = 17;
    sub_1D5AAED48();
    LOBYTE(v35) = 18;
    sub_1D5AAED48();
    LOBYTE(v35) = 19;
    sub_1D5AAED00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59042F0()
{
  unint64_t result;

  result = qword_1ED9C7670;
  if (!qword_1ED9C7670)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9878, &type metadata for ArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7670);
  }
  return result;
}

unint64_t sub_1D5904334()
{
  unint64_t result;

  result = qword_1ED9CA690;
  if (!qword_1ED9CA690)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AlternateHeadlineData, &type metadata for AlternateHeadlineData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA690);
  }
  return result;
}

unint64_t sub_1D5904378()
{
  unint64_t result;

  result = qword_1ED9C9248;
  if (!qword_1ED9C9248)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleAccessType, &type metadata for ArticleAccessType);
    atomic_store(result, (unint64_t *)&qword_1ED9C9248);
  }
  return result;
}

unint64_t sub_1D59043BC()
{
  unint64_t result;

  result = qword_1ED9C7698;
  if (!qword_1ED9C7698)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleType, &type metadata for ArticleType);
    atomic_store(result, (unint64_t *)&qword_1ED9C7698);
  }
  return result;
}

uint64_t ArticleData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  void (*v28)(char *, uint64_t);
  char v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _BYTE v70[23];
  uint64_t v71;
  char v72;
  _BYTE v73[7];
  uint64_t v74;
  uint64_t v75;
  char v76;
  _BYTE v77[7];
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  int v82;
  __int16 v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  _BYTE v87[7];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  _BYTE v92[7];
  uint64_t v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  _BYTE v102[7];
  _BYTE v103[7];
  char v104;
  int v105;
  __int16 v106;
  char v107;
  _BYTE v108[7];
  _BYTE v109[7];
  __int16 v110;
  char v111;
  _QWORD *v112;

  sub_1D5904CA4(0, &qword_1ED9CC7C8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  v107 = 1;
  v104 = 1;
  v10 = a1[3];
  v112 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1D59042F0();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v62 = v7;
    LOBYTE(v63) = 0;
    sub_1D5904D00();
    sub_1D5AAECD0();
    v11 = v71;
    v12 = HIDWORD(v71);
    LOBYTE(v63) = 1;
    sub_1D5904D44();
    sub_1D5AAECD0();
    v60 = v11;
    v61 = v12;
    v13 = v71;
    LOBYTE(v71) = 2;
    v14 = sub_1D5AAECA0();
    v16 = v15;
    v59 = v13;
    LOBYTE(v63) = 3;
    sub_1D5904D88();
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    LOBYTE(v13) = v71;
    LOBYTE(v71) = 4;
    v58 = sub_1D5AAECE8();
    LOBYTE(v71) = 5;
    v57 = sub_1D5AAEC94();
    v107 = v17 & 1;
    LOBYTE(v71) = 6;
    v56 = v17;
    v53 = sub_1D5AAECAC();
    sub_1D57B4558();
    v19 = v18;
    LOBYTE(v63) = 7;
    v54 = sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    v55 = v19;
    sub_1D5AAEC7C();
    v52 = v16;
    v20 = v71;
    LOBYTE(v71) = 8;
    swift_bridgeObjectRetain();
    v21 = sub_1D5AAEC94();
    v48 = v14;
    v49 = v21;
    v46 = a2;
    LOBYTE(v14) = v22;
    v104 = v22 & 1;
    LOBYTE(v71) = 9;
    v50 = v9;
    v51 = v6;
    v47 = sub_1D5AAECE8();
    LOBYTE(v71) = 10;
    v45 = sub_1D5AAEC58();
    v24 = v23;
    LOBYTE(v63) = 11;
    sub_1D57E2BA8();
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v44 = v71;
    LOBYTE(v63) = 12;
    sub_1D5AAECD0();
    v25 = v71;
    LOBYTE(v71) = 13;
    swift_bridgeObjectRetain();
    v26 = sub_1D5AAECAC();
    LOBYTE(v71) = 14;
    LODWORD(v55) = sub_1D5AAECAC();
    LOBYTE(v71) = 15;
    LODWORD(v54) = sub_1D5AAECAC();
    LOBYTE(v71) = 16;
    v43 = sub_1D5AAECAC();
    LOBYTE(v71) = 17;
    v42 = sub_1D5AAECAC();
    LOBYTE(v71) = 18;
    v41 = sub_1D5AAECAC();
    v101 = 19;
    v40 = sub_1D5AAEC64();
    HIDWORD(v38) = v26 & 1;
    v39 = v53 & 1;
    v27 = v55 & 1;
    LODWORD(v55) = v54 & 1;
    v53 = v27;
    LODWORD(v54) = v43 & 1;
    v43 = v42 & 1;
    v28 = *(void (**)(char *, uint64_t))(v62 + 8);
    v29 = v41 & 1;
    LODWORD(v62) = v41 & 1;
    v28(v50, v51);
    LOBYTE(v63) = v60;
    DWORD1(v63) = v61;
    BYTE8(v63) = v59;
    *(_QWORD *)&v64 = v48;
    *((_QWORD *)&v64 + 1) = v52;
    LOBYTE(v65) = v13;
    *((_QWORD *)&v65 + 1) = v58;
    *(_QWORD *)&v66 = v57;
    BYTE8(v66) = v56 & 1;
    BYTE9(v66) = v39;
    *(_QWORD *)&v67 = v20;
    *((_QWORD *)&v67 + 1) = v49;
    LOBYTE(v68) = v14 & 1;
    *((_QWORD *)&v68 + 1) = v47;
    *(_QWORD *)&v69 = v45;
    *((_QWORD *)&v69 + 1) = v24;
    v70[0] = v44;
    *(_QWORD *)&v70[8] = v25;
    v70[16] = BYTE4(v38);
    v70[17] = v53;
    v70[18] = v55;
    v70[19] = v54;
    v70[20] = v43;
    v70[21] = v29;
    v30 = v40;
    v70[22] = v40;
    sub_1D57D41B8((uint64_t)&v63);
    v31 = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = *(_OWORD *)v70;
    v33 = v46;
    *(_OWORD *)(v46 + 96) = v69;
    *(_OWORD *)(v33 + 112) = v32;
    *(_QWORD *)(v33 + 127) = *(_QWORD *)&v70[15];
    v34 = v66;
    *(_OWORD *)(v33 + 32) = v65;
    *(_OWORD *)(v33 + 48) = v34;
    v35 = v68;
    *(_OWORD *)(v33 + 64) = v67;
    *(_OWORD *)(v33 + 80) = v35;
    v36 = v64;
    *(_OWORD *)v33 = v63;
    *(_OWORD *)(v33 + 16) = v36;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
    LOBYTE(v71) = v60;
    *(_WORD *)((char *)&v71 + 1) = v110;
    BYTE3(v71) = v111;
    HIDWORD(v71) = v61;
    v72 = v59;
    *(_DWORD *)v73 = *(_DWORD *)v109;
    *(_DWORD *)&v73[3] = *(_DWORD *)&v109[3];
    v74 = v48;
    v75 = v31;
    v76 = v13;
    *(_DWORD *)v77 = *(_DWORD *)v108;
    *(_DWORD *)&v77[3] = *(_DWORD *)&v108[3];
    v78 = v58;
    v79 = v57;
    v80 = v107;
    v81 = v39;
    v82 = v105;
    v83 = v106;
    v84 = v20;
    v85 = v49;
    v86 = v104;
    *(_DWORD *)v87 = *(_DWORD *)v103;
    *(_DWORD *)&v87[3] = *(_DWORD *)&v103[3];
    v88 = v47;
    v89 = v45;
    v90 = v24;
    v91 = v44;
    *(_DWORD *)&v92[3] = *(_DWORD *)&v102[3];
    *(_DWORD *)v92 = *(_DWORD *)v102;
    v93 = v25;
    v94 = BYTE4(v38);
    v95 = v53;
    v96 = v55;
    v97 = v54;
    v98 = v43;
    v99 = v62;
    v100 = v30;
    return sub_1D57D5AE0((uint64_t)&v71);
  }
}

void sub_1D5904CA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59042F0();
    v7 = a3(a1, &type metadata for ArticleData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5904D00()
{
  unint64_t result;

  result = qword_1ED9CA698;
  if (!qword_1ED9CA698)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AlternateHeadlineData, &type metadata for AlternateHeadlineData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA698);
  }
  return result;
}

unint64_t sub_1D5904D44()
{
  unint64_t result;

  result = qword_1ED9C9258;
  if (!qword_1ED9C9258)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleAccessType, &type metadata for ArticleAccessType);
    atomic_store(result, (unint64_t *)&qword_1ED9C9258);
  }
  return result;
}

unint64_t sub_1D5904D88()
{
  unint64_t result;

  result = qword_1ED9C76A8;
  if (!qword_1ED9C76A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleType, &type metadata for ArticleType);
    atomic_store(result, (unint64_t *)&qword_1ED9C76A8);
  }
  return result;
}

uint64_t sub_1D5904DD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleData.init(from:)(a1, a2);
}

uint64_t sub_1D5904DE8(_QWORD *a1)
{
  return ArticleData.encode(to:)(a1);
}

uint64_t destroy for ArticleData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_WORD *)(a1 + 132) = *(_WORD *)(a2 + 132);
  *(_BYTE *)(a1 + 134) = *(_BYTE *)(a2 + 134);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v5;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  *(_BYTE *)(a1 + 132) = *(_BYTE *)(a2 + 132);
  *(_BYTE *)(a1 + 133) = *(_BYTE *)(a2 + 133);
  *(_BYTE *)(a1 + 134) = *(_BYTE *)(a2 + 134);
  return a1;
}

__n128 __swift_memcpy135_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(a2 + 127);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  *(_BYTE *)(a1 + 132) = *(_BYTE *)(a2 + 132);
  *(_BYTE *)(a1 + 133) = *(_BYTE *)(a2 + 133);
  *(_BYTE *)(a1 + 134) = *(_BYTE *)(a2 + 134);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 135))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 134) = 0;
    *(_WORD *)(result + 132) = 0;
    *(_DWORD *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 135) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 135) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ArticleData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1D59052DC + 4 * byte_1D5AC96BD[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1D5905310 + 4 * byte_1D5AC96B8[v4]))();
}

uint64_t sub_1D5905310(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5905318(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5905320);
  return result;
}

uint64_t sub_1D590532C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5905334);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1D5905338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5905340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleData.CodingKeys()
{
  return &type metadata for ArticleData.CodingKeys;
}

unint64_t sub_1D5905360()
{
  unint64_t result;

  result = qword_1EFF4C820;
  if (!qword_1EFF4C820)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9850, &type metadata for ArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C820);
  }
  return result;
}

unint64_t sub_1D59053A8()
{
  unint64_t result;

  result = qword_1ED9C7680;
  if (!qword_1ED9C7680)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC97C0, &type metadata for ArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7680);
  }
  return result;
}

unint64_t sub_1D59053F0()
{
  unint64_t result;

  result = qword_1ED9C7678;
  if (!qword_1ED9C7678)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC97E8, &type metadata for ArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7678);
  }
  return result;
}

uint64_t sub_1D5905434(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEFEA0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AEFEC0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49656C6369747261 && a2 == 0xE900000000000044 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x54656C6369747261 && a2 == 0xEB00000000657079 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEFEE0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7478655479646F62 && a2 == 0xEE006874676E654CLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F65646956736168 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6765746143644169 && a2 == 0xED0000736569726FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AECA90 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEFF00 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7344496369706F74 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6F696475417369 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x7267726576457369 && a2 == 0xEB000000006E6565 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x7275746165467369 && a2 == 0xEA00000000006465 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEFF20 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEFF40 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x65766E6F43626577 && a2 == 0xEC00000064657472 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEFF60)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 19;
    else
      return 20;
  }
}

void __swiftcall CampaignData.init(campaignId:campaignType:creativeId:)(NewsAnalytics::CampaignData *__return_ptr retstr, Swift::String campaignId, Swift::String_optional campaignType, Swift::String_optional creativeId)
{
  retstr->campaignId = campaignId;
  retstr->campaignType = campaignType;
  retstr->creativeId = creativeId;
}

uint64_t CampaignData.campaignId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CampaignData.campaignId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CampaignData.campaignId.modify())()
{
  return nullsub_1;
}

uint64_t CampaignData.campaignType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CampaignData.campaignType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CampaignData.campaignType.modify())()
{
  return nullsub_1;
}

uint64_t CampaignData.creativeId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CampaignData.creativeId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*CampaignData.creativeId.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5905DCC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6576697461657263;
  if (*v0 == 1)
    v1 = 0x6E676961706D6163;
  if (*v0)
    return v1;
  else
    return 0x6E676961706D6163;
}

uint64_t sub_1D5905E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59064AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5905E44()
{
  sub_1D5906004();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5905E6C()
{
  sub_1D5906004();
  return sub_1D5AAEEE0();
}

uint64_t CampaignData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  sub_1D5906284(0, &qword_1ED9CC8D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5906004();
  sub_1D5AAEEC8();
  v15 = 0;
  v10 = v12[5];
  sub_1D5AAED3C();
  if (!v10)
  {
    v14 = 1;
    sub_1D5AAECF4();
    v13 = 2;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5906004()
{
  unint64_t result;

  result = qword_1ED9C77D0;
  if (!qword_1ED9C77D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9A44, &type metadata for CampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C77D0);
  }
  return result;
}

uint64_t CampaignData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;

  sub_1D5906284(0, &qword_1ED9D15D8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5906004();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v26 = 0;
    v10 = sub_1D5AAECA0();
    v13 = v12;
    v23 = v10;
    v25 = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1D5AAEC58();
    v16 = v15;
    v22 = v14;
    v24 = 2;
    swift_bridgeObjectRetain();
    v17 = sub_1D5AAEC58();
    v19 = v18;
    v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21 = v17;
    v20(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v23;
    a2[1] = v13;
    a2[2] = v22;
    a2[3] = v16;
    a2[4] = v21;
    a2[5] = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D5906284(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5906004();
    v7 = a3(a1, &type metadata for CampaignData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59062E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return CampaignData.init(from:)(a1, a2);
}

uint64_t sub_1D59062F4(_QWORD *a1)
{
  return CampaignData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for CampaignData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5906354 + 4 * byte_1D5AC98CD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5906388 + 4 * byte_1D5AC98C8[v4]))();
}

uint64_t sub_1D5906388(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5906390(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5906398);
  return result;
}

uint64_t sub_1D59063A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59063ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59063B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59063B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CampaignData.CodingKeys()
{
  return &type metadata for CampaignData.CodingKeys;
}

unint64_t sub_1D59063D8()
{
  unint64_t result;

  result = qword_1EFF4C828;
  if (!qword_1EFF4C828)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9A1C, &type metadata for CampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C828);
  }
  return result;
}

unint64_t sub_1D5906420()
{
  unint64_t result;

  result = qword_1ED9C77E0;
  if (!qword_1ED9C77E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC998C, &type metadata for CampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C77E0);
  }
  return result;
}

unint64_t sub_1D5906468()
{
  unint64_t result;

  result = qword_1ED9C77D8;
  if (!qword_1ED9C77D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC99B4, &type metadata for CampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C77D8);
  }
  return result;
}

uint64_t sub_1D59064AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E676961706D6163 && a2 == 0xEA00000000006449;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000065707954 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6576697461657263 && a2 == 0xEA00000000006449)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t MagazineCategoryData.identifier.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t MagazineCategoryData.identifier.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MagazineCategoryData.identifier.modify())()
{
  return nullsub_1;
}

uint64_t MagazineCategoryData.position.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t MagazineCategoryData.position.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*MagazineCategoryData.position.modify())()
{
  return nullsub_1;
}

uint64_t MagazineCategoryData.init(identifier:position:)@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1D5906668()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F697469736F70;
  else
    return 0x696669746E656469;
}

uint64_t sub_1D59066A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5906C14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59066CC()
{
  sub_1D5906840();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59066F4()
{
  sub_1D5906840();
  return sub_1D5AAEEE0();
}

uint64_t MagazineCategoryData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;

  sub_1D59069D4(0, &qword_1EFF4C830, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5906840();
  sub_1D5AAEEC8();
  v13 = 0;
  sub_1D5AAED78();
  if (!v2)
  {
    v12 = 1;
    sub_1D5AAED78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5906840()
{
  unint64_t result;

  result = qword_1EFF4C838;
  if (!qword_1EFF4C838)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9C28, &type metadata for MagazineCategoryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C838);
  }
  return result;
}

uint64_t MagazineCategoryData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_1D59069D4(0, &qword_1EFF4C840, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5906840();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v15 = 0;
    v10 = sub_1D5AAECDC();
    v14 = 1;
    v12 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59069D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5906840();
    v7 = a3(a1, &type metadata for MagazineCategoryData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5906A38@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return MagazineCategoryData.init(from:)(a1, a2);
}

uint64_t sub_1D5906A4C(_QWORD *a1)
{
  return MagazineCategoryData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for MagazineCategoryData()
{
  return &type metadata for MagazineCategoryData;
}

uint64_t storeEnumTagSinglePayload for MagazineCategoryData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5906ABC + 4 * byte_1D5AC9AA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5906AF0 + 4 * byte_1D5AC9AA0[v4]))();
}

uint64_t sub_1D5906AF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5906AF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5906B00);
  return result;
}

uint64_t sub_1D5906B0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5906B14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5906B18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5906B20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MagazineCategoryData.CodingKeys()
{
  return &type metadata for MagazineCategoryData.CodingKeys;
}

unint64_t sub_1D5906B40()
{
  unint64_t result;

  result = qword_1EFF4C848;
  if (!qword_1EFF4C848)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9C00, &type metadata for MagazineCategoryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C848);
  }
  return result;
}

unint64_t sub_1D5906B88()
{
  unint64_t result;

  result = qword_1EFF4C850;
  if (!qword_1EFF4C850)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9B70, &type metadata for MagazineCategoryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C850);
  }
  return result;
}

unint64_t sub_1D5906BD0()
{
  unint64_t result;

  result = qword_1EFF4C858;
  if (!qword_1EFF4C858)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9B98, &type metadata for MagazineCategoryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C858);
  }
  return result;
}

uint64_t sub_1D5906C14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::FormatPackageReferenceData __swiftcall FormatPackageReferenceData.init(url:)(NewsAnalytics::FormatPackageReferenceData url)
{
  NewsAnalytics::FormatPackageReferenceData *v1;

  *v1 = url;
  return url;
}

uint64_t FormatPackageReferenceData.url.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPackageReferenceData.url.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatPackageReferenceData.url.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5906D88()
{
  return 7107189;
}

uint64_t sub_1D5906D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5906E1C()
{
  sub_1D5906F60();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5906E44()
{
  sub_1D5906F60();
  return sub_1D5AAEEE0();
}

uint64_t FormatPackageReferenceData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59070C8(0, &qword_1EFF4C860, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5906F60();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5906F60()
{
  unint64_t result;

  result = qword_1EFF4C868;
  if (!qword_1EFF4C868)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9E00, &type metadata for FormatPackageReferenceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C868);
  }
  return result;
}

uint64_t FormatPackageReferenceData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D59070C8(0, &qword_1EFF4C870, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5906F60();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59070C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5906F60();
    v7 = a3(a1, &type metadata for FormatPackageReferenceData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5907128()
{
  unint64_t result;

  result = qword_1EFF4C878;
  if (!qword_1EFF4C878)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FormatPackageReferenceData, &type metadata for FormatPackageReferenceData);
    atomic_store(result, (unint64_t *)&qword_1EFF4C878);
  }
  return result;
}

unint64_t sub_1D5907170()
{
  unint64_t result;

  result = qword_1EFF4C880;
  if (!qword_1EFF4C880)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FormatPackageReferenceData, &type metadata for FormatPackageReferenceData);
    atomic_store(result, (unint64_t *)&qword_1EFF4C880);
  }
  return result;
}

uint64_t sub_1D59071B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatPackageReferenceData.init(from:)(a1, a2);
}

uint64_t sub_1D59071C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59070C8(0, &qword_1EFF4C860, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5906F60();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FormatPackageReferenceData()
{
  return &type metadata for FormatPackageReferenceData;
}

uint64_t storeEnumTagSinglePayload for FormatPackageReferenceData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D590730C + 4 * byte_1D5AC9C80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D590732C + 4 * byte_1D5AC9C85[v4]))();
}

_BYTE *sub_1D590730C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D590732C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5907334(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D590733C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5907344(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D590734C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatPackageReferenceData.CodingKeys()
{
  return &type metadata for FormatPackageReferenceData.CodingKeys;
}

unint64_t sub_1D590736C()
{
  unint64_t result;

  result = qword_1EFF4C888;
  if (!qword_1EFF4C888)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9DD8, &type metadata for FormatPackageReferenceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C888);
  }
  return result;
}

unint64_t sub_1D59073B4()
{
  unint64_t result;

  result = qword_1EFF4C890;
  if (!qword_1EFF4C890)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9D48, &type metadata for FormatPackageReferenceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C890);
  }
  return result;
}

unint64_t sub_1D59073FC()
{
  unint64_t result;

  result = qword_1EFF4C898;
  if (!qword_1EFF4C898)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9D70, &type metadata for FormatPackageReferenceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C898);
  }
  return result;
}

uint64_t sub_1D5907440(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4C8A0, MEMORY[0x1E0CF8078]);
}

uint64_t static SearchResultsReturnedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C8A0, a1);
}

uint64_t sub_1D5907480(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4C8B8, MEMORY[0x1E0CF8380]);
}

uint64_t static SearchResultsReturnedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C8B8, a1);
}

uint64_t SearchResultsReturnedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SearchResultsReturnedEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SearchResultsReturnedEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsReturnedEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SearchResultsReturnedEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4C948);
}

uint64_t SearchResultsReturnedEvent.searchData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultsReturnedEvent.searchData.modify())()
{
  type metadata accessor for SearchResultsReturnedEvent(0);
  return nullsub_1;
}

uint64_t SearchResultsReturnedEvent.searchResultsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchResultsReturnedEvent.searchResultsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultsReturnedEvent.searchResultsData.modify())()
{
  type metadata accessor for SearchResultsReturnedEvent(0);
  return nullsub_1;
}

uint64_t SearchResultsReturnedEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchResultsReturnedEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultsReturnedEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for SearchResultsReturnedEvent(0);
  return nullsub_1;
}

uint64_t SearchResultsReturnedEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchResultsReturnedEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultsReturnedEvent.viewData.modify())()
{
  type metadata accessor for SearchResultsReturnedEvent(0);
  return nullsub_1;
}

uint64_t SearchResultsReturnedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SearchResultsReturnedEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t SearchResultsReturnedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SearchResultsReturnedEvent.Model.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SearchResultsReturnedEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4C9E8);
}

uint64_t SearchResultsReturnedEvent.Model.searchResultsData.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v3 = (_OWORD *)(v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent.Model(0) + 24));
  v4 = v3[5];
  v5 = v3[7];
  v21 = v3[6];
  v22 = v5;
  v6 = v3[7];
  v23 = v3[8];
  v7 = v3[1];
  v8 = v3[3];
  v17 = v3[2];
  v9 = v17;
  v18 = v8;
  v10 = v3[3];
  v11 = v3[5];
  v19 = v3[4];
  v12 = v19;
  v20 = v11;
  v13 = v3[1];
  v16[0] = *v3;
  v14 = v16[0];
  v16[1] = v13;
  a1[6] = v21;
  a1[7] = v6;
  a1[8] = v3[8];
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v12;
  a1[5] = v4;
  *a1 = v14;
  a1[1] = v7;
  return sub_1D581A868((uint64_t)v16);
}

uint64_t SearchResultsReturnedEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsReturnedEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

__n128 SearchResultsReturnedEvent.Model.init(eventData:searchData:searchResultsData:userBundleSubscriptionContextData:viewData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __n128 *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  __n128 *v19;
  __n128 result;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;

  v8 = *a2;
  v9 = a2[1];
  v10 = *((_BYTE *)a2 + 16);
  v35 = a3[6];
  v36 = a3[7];
  v37 = a3[8];
  v31 = a3[2];
  v32 = a3[3];
  v33 = a3[4];
  v34 = a3[5];
  v29 = *a3;
  v30 = a3[1];
  v11 = *a4;
  v13 = *((_QWORD *)a4 + 1);
  v12 = *((_QWORD *)a4 + 2);
  v14 = a4[24];
  v15 = a4[25];
  v24 = *((_QWORD *)a4 + 5);
  v25 = *((_QWORD *)a4 + 4);
  v23 = a4[48];
  v27 = a5[1];
  v28 = *a5;
  v26 = *((_WORD *)a5 + 8);
  v16 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  v17 = (int *)type metadata accessor for SearchResultsReturnedEvent.Model(0);
  v18 = a6 + v17[5];
  *(_QWORD *)v18 = v8;
  *(_QWORD *)(v18 + 8) = v9;
  *(_BYTE *)(v18 + 16) = v10;
  v19 = (__n128 *)(a6 + v17[6]);
  v19[6] = v35;
  v19[7] = v36;
  v19[8] = v37;
  v19[2] = v31;
  v19[3] = v32;
  v19[4] = v33;
  v19[5] = v34;
  result = v30;
  *v19 = v29;
  v19[1] = v30;
  v21 = a6 + v17[7];
  *(_BYTE *)v21 = v11;
  *(_QWORD *)(v21 + 8) = v13;
  *(_QWORD *)(v21 + 16) = v12;
  *(_BYTE *)(v21 + 24) = v14;
  *(_BYTE *)(v21 + 25) = v15;
  *(_QWORD *)(v21 + 32) = v25;
  *(_QWORD *)(v21 + 40) = v24;
  *(_BYTE *)(v21 + 48) = v23;
  v22 = a6 + v17[8];
  *(_QWORD *)v22 = v28;
  *(_QWORD *)(v22 + 8) = v27;
  *(_WORD *)(v22 + 16) = v26;
  return result;
}

uint64_t sub_1D5907D68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5907DA0 + 4 * byte_1D5AC9E50[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5907DA0()
{
  return 0x6144686372616573;
}

unint64_t sub_1D5907DBC()
{
  return 0xD000000000000011;
}

unint64_t sub_1D5907DD8()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5907DF8()
{
  return 0x6174614477656976;
}

uint64_t sub_1D5907E10()
{
  unsigned __int8 *v0;

  return sub_1D5907D68(*v0);
}

uint64_t sub_1D5907E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D590A3C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5907E3C()
{
  sub_1D5908144();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5907E64()
{
  sub_1D5908144();
  return sub_1D5AAEEE0();
}

uint64_t SearchResultsReturnedEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  _BYTE v29[32];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v3 = v1;
  sub_1D59086FC(0, &qword_1EFF4C8D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5908144();
  sub_1D5AAEEC8();
  v29[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SearchResultsReturnedEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOBYTE(v11) = *((_BYTE *)v11 + 16);
    v38 = v12;
    v39 = v13;
    v40 = (char)v11;
    v37 = 1;
    sub_1D57CBC9C();
    sub_1D5AAED6C();
    v14 = (_OWORD *)(v3 + v10[6]);
    v15 = v14[7];
    v34 = v14[6];
    v35 = v15;
    v36 = v14[8];
    v16 = v14[3];
    v30 = v14[2];
    v31 = v16;
    v17 = v14[5];
    v32 = v14[4];
    v33 = v17;
    v18 = v14[1];
    *(_OWORD *)v29 = *v14;
    *(_OWORD *)&v29[16] = v18;
    v28 = 2;
    sub_1D581AA0C();
    sub_1D5AAED6C();
    v19 = v3 + v10[7];
    v20 = *(_BYTE *)(v19 + 24);
    v21 = *(_BYTE *)(v19 + 25);
    v22 = *(_BYTE *)(v19 + 48);
    v29[0] = *(_BYTE *)v19;
    *(_OWORD *)&v29[8] = *(_OWORD *)(v19 + 8);
    v29[24] = v20;
    v29[25] = v21;
    v30 = *(_OWORD *)(v19 + 32);
    LOBYTE(v31) = v22;
    v28 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v23 = (uint64_t *)(v3 + v10[8]);
    v24 = *v23;
    v25 = v23[1];
    LOWORD(v23) = *((_WORD *)v23 + 8);
    *(_QWORD *)v29 = v24;
    *(_QWORD *)&v29[8] = v25;
    *(_WORD *)&v29[16] = (_WORD)v23;
    v28 = 4;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5908144()
{
  unint64_t result;

  result = qword_1EFF4C8E0;
  if (!qword_1EFF4C8E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA08C, &type metadata for SearchResultsReturnedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4C8E0);
  }
  return result;
}

uint64_t SearchResultsReturnedEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  char v24;
  char v25;
  char *v26;
  uint64_t v27;
  __int16 v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char v37;
  uint64_t v38;
  __int128 v39;
  char v40;
  char v41;
  __int128 v42;
  char v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _QWORD *v54;

  v32 = a2;
  v3 = sub_1D5AADF98();
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59086FC(0, &qword_1EFF4C8E8, MEMORY[0x1E0DED048]);
  v34 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - v7;
  v9 = (int *)type metadata accessor for SearchResultsReturnedEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5908144();
  v36 = v8;
  v12 = (uint64_t)v54;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v31 = v6;
  v13 = v33;
  v54 = a1;
  LOBYTE(v45) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v35, v3);
  LOBYTE(v38) = 1;
  sub_1D57CBC58();
  sub_1D5AAECD0();
  v14 = *((_QWORD *)&v45 + 1);
  v15 = v46;
  v16 = &v11[v9[5]];
  *(_QWORD *)v16 = v45;
  *((_QWORD *)v16 + 1) = v14;
  v16[16] = v15;
  v44 = 2;
  sub_1D581A9C4();
  sub_1D5AAECD0();
  v17 = &v11[v9[6]];
  v18 = v50;
  v19 = v52;
  v20 = v53;
  *((_OWORD *)v17 + 6) = v51;
  *((_OWORD *)v17 + 7) = v19;
  *((_OWORD *)v17 + 8) = v20;
  v21 = v48;
  *((_OWORD *)v17 + 2) = v47;
  *((_OWORD *)v17 + 3) = v21;
  *((_OWORD *)v17 + 4) = v49;
  *((_OWORD *)v17 + 5) = v18;
  v22 = v46;
  *(_OWORD *)v17 = v45;
  *((_OWORD *)v17 + 1) = v22;
  v37 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v23 = v40;
  v24 = v41;
  v25 = v43;
  v26 = &v11[v9[7]];
  *v26 = v38;
  *(_OWORD *)(v26 + 8) = v39;
  v26[24] = v23;
  v26[25] = v24;
  *((_OWORD *)v26 + 2) = v42;
  v26[48] = v25;
  v37 = 4;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v36, v34);
  v27 = v39;
  v28 = WORD4(v39);
  v29 = &v11[v9[8]];
  *(_QWORD *)v29 = v38;
  *((_QWORD *)v29 + 1) = v27;
  *((_WORD *)v29 + 8) = v28;
  sub_1D5908758((uint64_t)v11, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  return sub_1D590879C((uint64_t)v11);
}

void sub_1D59086FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5908144();
    v7 = a3(a1, &type metadata for SearchResultsReturnedEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5908758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D590879C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59087D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchResultsReturnedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59087EC(_QWORD *a1)
{
  return SearchResultsReturnedEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5908800@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4C8A0, a1);
}

uint64_t sub_1D5908824@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4C8B8, a1);
}

uint64_t sub_1D5908848@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultsReturnedEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for SearchResultsReturnedEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsReturnedEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59092E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SearchResultsReturnedEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5909454(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59095BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultsReturnedEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[16] = v11[16];
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 3) = v16;
    v17 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v17;
    *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
    *((_DWORD *)v13 + 14) = *((_DWORD *)v14 + 14);
    v18 = *((_QWORD *)v14 + 9);
    *((_QWORD *)v13 + 8) = *((_QWORD *)v14 + 8);
    *((_QWORD *)v13 + 9) = v18;
    v13[80] = v14[80];
    v19 = *((_QWORD *)v14 + 12);
    *((_QWORD *)v13 + 11) = *((_QWORD *)v14 + 11);
    *((_QWORD *)v13 + 12) = v19;
    v20 = *((_QWORD *)v14 + 14);
    *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
    *((_QWORD *)v13 + 14) = v20;
    v21 = *((_QWORD *)v14 + 16);
    *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
    *((_QWORD *)v13 + 16) = v21;
    *((_QWORD *)v13 + 17) = *((_QWORD *)v14 + 17);
    v22 = a3[7];
    v23 = a3[8];
    v24 = (char *)a1 + v22;
    v25 = (char *)a2 + v22;
    *v24 = *v25;
    v26 = *((_QWORD *)v25 + 2);
    *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
    *((_QWORD *)v24 + 2) = v26;
    v24[24] = v25[24];
    v24[25] = v25[25];
    v27 = *((_QWORD *)v25 + 5);
    *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
    *((_QWORD *)v24 + 5) = v27;
    v24[48] = v25[48];
    v28 = (char *)a1 + v23;
    v29 = (char *)a2 + v23;
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v28[16] = v29[16];
    v28[17] = v29[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchResultsReturnedEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  v16 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v16;
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  *(_DWORD *)(v12 + 56) = *(_DWORD *)(v13 + 56);
  v17 = *(_QWORD *)(v13 + 72);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v12 + 72) = v17;
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  v18 = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = v18;
  v19 = *(_QWORD *)(v13 + 112);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  *(_QWORD *)(v12 + 112) = v19;
  v20 = *(_QWORD *)(v13 + 128);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  *(_QWORD *)(v12 + 128) = v20;
  *(_QWORD *)(v12 + 136) = *(_QWORD *)(v13 + 136);
  v21 = a3[7];
  v22 = a3[8];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  v25 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  *(_QWORD *)(v23 + 16) = v25;
  *(_BYTE *)(v23 + 24) = *(_BYTE *)(v24 + 24);
  *(_BYTE *)(v23 + 25) = *(_BYTE *)(v24 + 25);
  v26 = *(_QWORD *)(v24 + 40);
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  *(_QWORD *)(v23 + 40) = v26;
  *(_BYTE *)(v23 + 48) = *(_BYTE *)(v24 + 48);
  v27 = a1 + v22;
  v28 = a2 + v22;
  v29 = *(_QWORD *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = v29;
  *(_BYTE *)(v27 + 16) = *(_BYTE *)(v28 + 16);
  *(_BYTE *)(v27 + 17) = *(_BYTE *)(v28 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  *(_QWORD *)(v11 + 48) = *(_QWORD *)(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 56) = *(_DWORD *)(v12 + 56);
  *(_QWORD *)(v11 + 64) = *(_QWORD *)(v12 + 64);
  *(_QWORD *)(v11 + 72) = *(_QWORD *)(v12 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 80) = *(_BYTE *)(v12 + 80);
  *(_QWORD *)(v11 + 88) = *(_QWORD *)(v12 + 88);
  *(_QWORD *)(v11 + 96) = *(_QWORD *)(v12 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 104) = *(_QWORD *)(v12 + 104);
  *(_QWORD *)(v11 + 112) = *(_QWORD *)(v12 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 120) = *(_QWORD *)(v12 + 120);
  *(_QWORD *)(v11 + 128) = *(_QWORD *)(v12 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 136) = *(_QWORD *)(v12 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_BYTE *)v14 = *(_BYTE *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(a2 + v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 24) = *(_BYTE *)(v15 + 24);
  *(_BYTE *)(v14 + 25) = *(_BYTE *)(v15 + 25);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 48) = *(_BYTE *)(v15 + 48);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  return a1;
}

uint64_t initializeWithTake for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = (_OWORD *)(a1 + v8);
  v12 = (_OWORD *)(a2 + v8);
  v13 = v12[3];
  v11[2] = v12[2];
  v11[3] = v13;
  v14 = v12[1];
  *v11 = *v12;
  v11[1] = v14;
  v15 = v12[8];
  v16 = v12[6];
  v11[7] = v12[7];
  v11[8] = v15;
  v17 = v12[5];
  v11[4] = v12[4];
  v11[5] = v17;
  v11[6] = v16;
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_BYTE *)(v20 + 48) = *(_BYTE *)(v21 + 48);
  v23 = a1 + v19;
  v24 = a2 + v19;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_WORD *)(v23 + 16) = *(_WORD *)(v24 + 16);
  return a1;
}

uint64_t assignWithTake for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v12 + 56) = *(_DWORD *)(v13 + 56);
  v16 = *(_QWORD *)(v13 + 72);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v12 + 72) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  v17 = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v13 + 112);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  *(_QWORD *)(v12 + 112) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v13 + 128);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  *(_QWORD *)(v12 + 128) = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 136) = *(_QWORD *)(v13 + 136);
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)(a2 + v20);
  v23 = *(_QWORD *)(a2 + v20 + 16);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(a2 + v20 + 8);
  *(_QWORD *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 24) = *(_BYTE *)(v22 + 24);
  *(_BYTE *)(v21 + 25) = *(_BYTE *)(v22 + 25);
  v24 = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = v24;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 48) = *(_BYTE *)(v22 + 48);
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_QWORD *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_QWORD *)(v26 + 8) = v28;
  swift_bridgeObjectRelease();
  *(_WORD *)(v26 + 16) = *(_WORD *)(v27 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsReturnedEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D590A08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultsReturnedEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D590A118(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D590A194()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchResultsReturnedEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D590A270 + 4 * byte_1D5AC9E5A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D590A2A4 + 4 * byte_1D5AC9E55[v4]))();
}

uint64_t sub_1D590A2A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D590A2AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D590A2B4);
  return result;
}

uint64_t sub_1D590A2C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D590A2C8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D590A2CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D590A2D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsReturnedEvent.Model.CodingKeys()
{
  return &type metadata for SearchResultsReturnedEvent.Model.CodingKeys;
}

unint64_t sub_1D590A2F4()
{
  unint64_t result;

  result = qword_1EFF4CA30;
  if (!qword_1EFF4CA30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA064, &type metadata for SearchResultsReturnedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CA30);
  }
  return result;
}

unint64_t sub_1D590A33C()
{
  unint64_t result;

  result = qword_1EFF4CA38;
  if (!qword_1EFF4CA38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9FD4, &type metadata for SearchResultsReturnedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CA38);
  }
  return result;
}

unint64_t sub_1D590A384()
{
  unint64_t result;

  result = qword_1EFF4CA40;
  if (!qword_1EFF4CA40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC9FFC, &type metadata for SearchResultsReturnedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CA40);
  }
  return result;
}

uint64_t sub_1D590A3C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AEFF80 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

NewsAnalytics::ArticleType_optional __swiftcall ArticleType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ArticleType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ArticleType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 6712929;
  if (*v0 != 1)
    v1 = 6448503;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D590A694(char *a1, unsigned __int8 *a2)
{
  return sub_1D5A3D998(*a1, *a2);
}

unint64_t sub_1D590A6A4()
{
  unint64_t result;

  result = qword_1EFF4CA48;
  if (!qword_1EFF4CA48)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleType, &type metadata for ArticleType);
    atomic_store(result, (unint64_t *)&qword_1EFF4CA48);
  }
  return result;
}

uint64_t sub_1D590A6E8()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D590A778()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D590A7E4()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::ArticleType_optional sub_1D590A870(Swift::String *a1)
{
  return ArticleType.init(rawValue:)(*a1);
}

void sub_1D590A87C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 6712929;
  if (v2 != 1)
    v4 = 6448503;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE300000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1D590A8CC()
{
  sub_1D590AA40();
  return sub_1D5AAE928();
}

uint64_t sub_1D590A928()
{
  sub_1D590AA40();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for ArticleType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D590A9C0 + 4 * byte_1D5ACA0E1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D590A9F4 + 4 * byte_1D5ACA0DC[v4]))();
}

uint64_t sub_1D590A9F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D590A9FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D590AA04);
  return result;
}

uint64_t sub_1D590AA10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D590AA18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D590AA1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D590AA24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleType()
{
  return &type metadata for ArticleType;
}

unint64_t sub_1D590AA40()
{
  unint64_t result;

  result = qword_1ED9C76A0;
  if (!qword_1ED9C76A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleType, &type metadata for ArticleType);
    atomic_store(result, (unint64_t *)&qword_1ED9C76A0);
  }
  return result;
}

NewsAnalytics::JourneyMessageDisplayFailureReason_optional __swiftcall JourneyMessageDisplayFailureReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::JourneyMessageDisplayFailureReason_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t JourneyMessageDisplayFailureReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D590AB0C + 4 * byte_1D5ACA200[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

unint64_t sub_1D590AB0C()
{
  return 0xD000000000000018;
}

void sub_1D590ABF0(char *a1)
{
  sub_1D5A35DCC(*a1);
}

unint64_t sub_1D590AC00()
{
  unint64_t result;

  result = qword_1EFF4CA50;
  if (!qword_1EFF4CA50)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyMessageDisplayFailureReason, &type metadata for JourneyMessageDisplayFailureReason);
    atomic_store(result, (unint64_t *)&qword_1EFF4CA50);
  }
  return result;
}

uint64_t sub_1D590AC44()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA7E64((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

void sub_1D590AC88(uint64_t a1)
{
  char *v1;

  sub_1D5AA7E64(a1, *v1);
}

uint64_t sub_1D590AC90()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA7E64((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

NewsAnalytics::JourneyMessageDisplayFailureReason_optional sub_1D590ACD0(Swift::String *a1)
{
  return JourneyMessageDisplayFailureReason.init(rawValue:)(*a1);
}

uint64_t sub_1D590ACDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = JourneyMessageDisplayFailureReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D590AD00()
{
  sub_1D590AE74();
  return sub_1D5AAE928();
}

uint64_t sub_1D590AD5C()
{
  sub_1D590AE74();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for JourneyMessageDisplayFailureReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D590ADF4 + 4 * byte_1D5ACA20F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D590AE28 + 4 * byte_1D5ACA20A[v4]))();
}

uint64_t sub_1D590AE28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D590AE30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D590AE38);
  return result;
}

uint64_t sub_1D590AE44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D590AE4CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D590AE50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D590AE58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JourneyMessageDisplayFailureReason()
{
  return &type metadata for JourneyMessageDisplayFailureReason;
}

unint64_t sub_1D590AE74()
{
  unint64_t result;

  result = qword_1ED9D0AF8;
  if (!qword_1ED9D0AF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyMessageDisplayFailureReason, &type metadata for JourneyMessageDisplayFailureReason);
    atomic_store(result, (unint64_t *)&qword_1ED9D0AF8);
  }
  return result;
}

uint64_t sub_1D590AEB8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4CA58, MEMORY[0x1E0CF8078]);
}

uint64_t static IssueNewsletterOptinEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4CA58, a1);
}

uint64_t sub_1D590AEF8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4CA70, MEMORY[0x1E0CF8380]);
}

uint64_t static IssueNewsletterOptinEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4CA70, a1);
}

uint64_t IssueNewsletterOptinEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t IssueNewsletterOptinEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*IssueNewsletterOptinEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t IssueNewsletterOptinEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for IssueNewsletterOptinEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for IssueNewsletterOptinEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4CAF8);
}

uint64_t IssueNewsletterOptinEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueNewsletterOptinEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueNewsletterOptinEvent.timedData.modify())()
{
  type metadata accessor for IssueNewsletterOptinEvent(0);
  return nullsub_1;
}

uint64_t IssueNewsletterOptinEvent.userActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueNewsletterOptinEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueNewsletterOptinEvent.userActionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueNewsletterOptinEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueNewsletterOptinEvent.userActionData.modify())()
{
  type metadata accessor for IssueNewsletterOptinEvent(0);
  return nullsub_1;
}

uint64_t IssueNewsletterOptinEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueNewsletterOptinEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueNewsletterOptinEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueNewsletterOptinEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueNewsletterOptinEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for IssueNewsletterOptinEvent(0);
  return nullsub_1;
}

uint64_t IssueNewsletterOptinEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for IssueNewsletterOptinEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t IssueNewsletterOptinEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t IssueNewsletterOptinEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for IssueNewsletterOptinEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for IssueNewsletterOptinEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4CB90);
}

uint64_t IssueNewsletterOptinEvent.Model.userActionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for IssueNewsletterOptinEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t IssueNewsletterOptinEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for IssueNewsletterOptinEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t IssueNewsletterOptinEvent.Model.init(eventData:timedData:userActionData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v8 = *a3;
  v9 = *a4;
  v10 = *((_QWORD *)a4 + 1);
  v11 = *((_QWORD *)a4 + 2);
  v12 = a4[24];
  v13 = a4[25];
  v21 = *((_QWORD *)a4 + 5);
  v22 = *((_QWORD *)a4 + 4);
  v20 = a4[48];
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a5, a1, v14);
  v15 = (int *)type metadata accessor for IssueNewsletterOptinEvent.Model(0);
  v16 = a5 + v15[5];
  v17 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a2, v17);
  *(_BYTE *)(a5 + v15[6]) = v8;
  v19 = a5 + v15[7];
  *(_BYTE *)v19 = v9;
  *(_QWORD *)(v19 + 8) = v10;
  *(_QWORD *)(v19 + 16) = v11;
  *(_BYTE *)(v19 + 24) = v12;
  *(_BYTE *)(v19 + 25) = v13;
  *(_QWORD *)(v19 + 32) = v22;
  *(_QWORD *)(v19 + 40) = v21;
  *(_BYTE *)(v19 + 48) = v20;
  return result;
}

uint64_t sub_1D590B4E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D590B51C + 4 * byte_1D5ACA360[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D590B51C()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D590B530()
{
  return 0x6974634172657375;
}

unint64_t sub_1D590B554()
{
  return 0xD000000000000021;
}

uint64_t sub_1D590B570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D590CC20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D590B594()
{
  sub_1D590B828();
  return sub_1D5AAEED4();
}

uint64_t sub_1D590B5BC()
{
  sub_1D590B828();
  return sub_1D5AAEEE0();
}

uint64_t IssueNewsletterOptinEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  char v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;
  char v23;

  v3 = v1;
  sub_1D590BC60(0, &qword_1EFF4CA88, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D590B828();
  sub_1D5AAEEC8();
  v17 = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for IssueNewsletterOptinEvent.Model(0);
    v17 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v17 = *(_BYTE *)(v3 + *(int *)(v10 + 24));
    v23 = 2;
    sub_1D57C739C();
    sub_1D5AAED6C();
    v11 = v3 + *(int *)(v10 + 28);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    v17 = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    v23 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D590B828()
{
  unint64_t result;

  result = qword_1EFF4CA90;
  if (!qword_1EFF4CA90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA554, &type metadata for IssueNewsletterOptinEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CA90);
  }
  return result;
}

uint64_t IssueNewsletterOptinEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  char v41;
  char v42;
  __int128 v43;
  char v44;
  char v45;

  v30 = a2;
  v3 = sub_1D5AADFB0();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D590BC60(0, &qword_1EFF4CA98, MEMORY[0x1E0DED048]);
  v37 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v27 - v9;
  v11 = type metadata accessor for IssueNewsletterOptinEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D590B828();
  v36 = v10;
  v14 = v38;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v38 = v8;
  v28 = v11;
  v29 = a1;
  v15 = (uint64_t)v13;
  v16 = v31;
  v17 = v32;
  v18 = v33;
  v39 = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v34;
  v20 = v35;
  sub_1D5AAECD0();
  v27[1] = v5;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15, v19, v20);
  v39 = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  v21 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + *(int *)(v28 + 20), v16, v18);
  v45 = 2;
  sub_1D57C7358();
  sub_1D5AAECD0();
  *(_BYTE *)(v15 + *(int *)(v21 + 24)) = v39;
  v45 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
  v22 = v41;
  v23 = v42;
  v24 = v44;
  v25 = v15 + *(int *)(v21 + 28);
  *(_BYTE *)v25 = v39;
  *(_OWORD *)(v25 + 8) = v40;
  *(_BYTE *)(v25 + 24) = v22;
  *(_BYTE *)(v25 + 25) = v23;
  *(_OWORD *)(v25 + 32) = v43;
  *(_BYTE *)(v25 + 48) = v24;
  sub_1D590BCBC(v15, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_1D590BD00(v15);
}

void sub_1D590BC60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D590B828();
    v7 = a3(a1, &type metadata for IssueNewsletterOptinEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D590BCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IssueNewsletterOptinEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D590BD00(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IssueNewsletterOptinEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D590BD3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IssueNewsletterOptinEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D590BD50(_QWORD *a1)
{
  return IssueNewsletterOptinEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D590BD64@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4CA58, a1);
}

uint64_t sub_1D590BD88@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4CA70, a1);
}

uint64_t sub_1D590BDAC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for IssueNewsletterOptinEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for IssueNewsletterOptinEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for IssueNewsletterOptinEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for IssueNewsletterOptinEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for IssueNewsletterOptinEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for IssueNewsletterOptinEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueNewsletterOptinEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D590C564(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for IssueNewsletterOptinEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D590C66C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D590C770()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for IssueNewsletterOptinEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D590C878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueNewsletterOptinEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D590C93C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = a2;
  return result;
}

uint64_t sub_1D590C9E4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IssueNewsletterOptinEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D590CAC8 + 4 * byte_1D5ACA369[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D590CAFC + 4 * byte_1D5ACA364[v4]))();
}

uint64_t sub_1D590CAFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D590CB04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D590CB0CLL);
  return result;
}

uint64_t sub_1D590CB18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D590CB20);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D590CB24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D590CB2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueNewsletterOptinEvent.Model.CodingKeys()
{
  return &type metadata for IssueNewsletterOptinEvent.Model.CodingKeys;
}

unint64_t sub_1D590CB4C()
{
  unint64_t result;

  result = qword_1EFF4CBD0;
  if (!qword_1EFF4CBD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA52C, &type metadata for IssueNewsletterOptinEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CBD0);
  }
  return result;
}

unint64_t sub_1D590CB94()
{
  unint64_t result;

  result = qword_1EFF4CBD8;
  if (!qword_1EFF4CBD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA49C, &type metadata for IssueNewsletterOptinEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CBD8);
  }
  return result;
}

unint64_t sub_1D590CBDC()
{
  unint64_t result;

  result = qword_1EFF4CBE0;
  if (!qword_1EFF4CBE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA4C4, &type metadata for IssueNewsletterOptinEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CBE0);
  }
  return result;
}

uint64_t sub_1D590CC20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974634172657375 && a2 == 0xEE00617461446E6FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t ArticleScoreSummaryData.isCandidateForNewsPlus.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ArticleScoreSummaryData.isCandidateForNewsPlus.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ArticleScoreSummaryData.isCandidateForNewsPlus.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScoreSummaryData.articleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleScoreSummaryData.articleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ArticleScoreSummaryData.articleID.modify())()
{
  return nullsub_1;
}

double ArticleScoreSummaryData.baselineScoreData.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 24);
  *a1 = result;
  return result;
}

double ArticleScoreSummaryData.baselineScoreData.setter(double *a1)
{
  uint64_t v1;
  double result;

  result = *a1;
  *(double *)(v1 + 24) = *a1;
  return result;
}

uint64_t (*ArticleScoreSummaryData.baselineScoreData.modify())()
{
  return nullsub_1;
}

void ArticleScoreSummaryData.experimentalScoreData.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t ArticleScoreSummaryData.experimentalScoreData.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 40) = v2;
  return result;
}

uint64_t (*ArticleScoreSummaryData.experimentalScoreData.modify())()
{
  return nullsub_1;
}

void __swiftcall ArticleScoreSummaryData.init(isCandidateForNewsPlus:articleID:baselineScoreData:experimentalScoreData:)(NewsAnalytics::ArticleScoreSummaryData *__return_ptr retstr, Swift::Bool_optional isCandidateForNewsPlus, Swift::String articleID, NewsAnalytics::ScoreData baselineScoreData, NewsAnalytics::ScoreData_optional experimentalScoreData)
{
  uint64_t v5;
  NewsAnalytics::ScoreData v6;
  char v7;

  v6 = *(NewsAnalytics::ScoreData *)v5;
  v7 = *(_BYTE *)(v5 + 8);
  retstr->isCandidateForNewsPlus = isCandidateForNewsPlus;
  retstr->articleID = articleID;
  retstr->baselineScoreData = **(NewsAnalytics::ScoreData **)&experimentalScoreData.is_nil;
  retstr->experimentalScoreData.value = v6;
  retstr->experimentalScoreData.is_nil = v7;
}

uint64_t sub_1D590CF24(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D590CF60 + 4 * byte_1D5ACA5B0[a1]))(0xD000000000000016, 0x80000001D5AEFFA0);
}

uint64_t sub_1D590CF60()
{
  return 0x49656C6369747261;
}

unint64_t sub_1D590CF7C()
{
  return 0xD000000000000011;
}

uint64_t sub_1D590CF98()
{
  uint64_t v0;

  return v0 + 4;
}

uint64_t sub_1D590CFB0()
{
  unsigned __int8 *v0;

  return sub_1D590CF24(*v0);
}

uint64_t sub_1D590CFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D590D8EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D590CFDC()
{
  sub_1D590D1FC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D590D004()
{
  sub_1D590D1FC();
  return sub_1D5AAEEE0();
}

uint64_t ArticleScoreSummaryData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  sub_1D590D470(0, &qword_1ED9CF010, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(v1 + 8);
  v16 = *(_QWORD *)(v1 + 16);
  v17 = v9;
  v10 = *(_QWORD *)(v1 + 24);
  v15 = *(_QWORD *)(v1 + 32);
  HIDWORD(v14) = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D590D1FC();
  sub_1D5AAEEC8();
  LOBYTE(v18) = 0;
  sub_1D5AAED00();
  if (!v2)
  {
    v11 = BYTE4(v14);
    v12 = v15;
    LOBYTE(v18) = 1;
    sub_1D5AAED3C();
    v18 = v10;
    v20 = 2;
    sub_1D57C5E94();
    sub_1D5AAED6C();
    v18 = v12;
    v19 = v11;
    v20 = 3;
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D590D1FC()
{
  unint64_t result;

  result = qword_1ED9CED78;
  if (!qword_1ED9CED78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA73C, &type metadata for ArticleScoreSummaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CED78);
  }
  return result;
}

uint64_t ArticleScoreSummaryData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  _QWORD v19[2];
  uint64_t v20;
  char v21;
  char v22;

  sub_1D590D470(0, &qword_1EFF4CBE8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D590D1FC();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v20) = 0;
  v10 = sub_1D5AAEC64();
  LOBYTE(v20) = 1;
  v11 = sub_1D5AAECA0();
  v13 = v12;
  v19[0] = v11;
  v22 = 2;
  v14 = sub_1D57C5E50();
  swift_bridgeObjectRetain();
  v19[1] = v14;
  sub_1D5AAECD0();
  v15 = v20;
  v22 = 3;
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17 = v20;
  v18 = v21;
  *(_BYTE *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v19[0];
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v17;
  *(_BYTE *)(a2 + 40) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D590D470(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D590D1FC();
    v7 = a3(a1, &type metadata for ArticleScoreSummaryData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D590D4D0()
{
  unint64_t result;

  result = qword_1EFF4CBF0;
  if (!qword_1EFF4CBF0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleScoreSummaryData, &type metadata for ArticleScoreSummaryData);
    atomic_store(result, (unint64_t *)&qword_1EFF4CBF0);
  }
  return result;
}

unint64_t sub_1D590D518()
{
  unint64_t result;

  result = qword_1ED9CED90;
  if (!qword_1ED9CED90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleScoreSummaryData, &type metadata for ArticleScoreSummaryData);
    atomic_store(result, (unint64_t *)&qword_1ED9CED90);
  }
  return result;
}

uint64_t sub_1D590D55C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleScoreSummaryData.init(from:)(a1, a2);
}

uint64_t sub_1D590D570(_QWORD *a1)
{
  return ArticleScoreSummaryData.encode(to:)(a1);
}

uint64_t initializeWithCopy for ArticleScoreSummaryData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleScoreSummaryData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ArticleScoreSummaryData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleScoreSummaryData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleScoreSummaryData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleScoreSummaryData()
{
  return &type metadata for ArticleScoreSummaryData;
}

uint64_t storeEnumTagSinglePayload for ArticleScoreSummaryData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D590D794 + 4 * byte_1D5ACA5B9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D590D7C8 + 4 * byte_1D5ACA5B4[v4]))();
}

uint64_t sub_1D590D7C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D590D7D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D590D7D8);
  return result;
}

uint64_t sub_1D590D7E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D590D7ECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D590D7F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D590D7F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleScoreSummaryData.CodingKeys()
{
  return &type metadata for ArticleScoreSummaryData.CodingKeys;
}

unint64_t sub_1D590D818()
{
  unint64_t result;

  result = qword_1EFF4CBF8;
  if (!qword_1EFF4CBF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA714, &type metadata for ArticleScoreSummaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CBF8);
  }
  return result;
}

unint64_t sub_1D590D860()
{
  unint64_t result;

  result = qword_1ED9CED88;
  if (!qword_1ED9CED88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA684, &type metadata for ArticleScoreSummaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CED88);
  }
  return result;
}

unint64_t sub_1D590D8A8()
{
  unint64_t result;

  result = qword_1ED9CED80;
  if (!qword_1ED9CED80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA6AC, &type metadata for ArticleScoreSummaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CED80);
  }
  return result;
}

uint64_t sub_1D590D8EC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEFFA0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49656C6369747261 && a2 == 0xE900000000000044 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AEFFC0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEFFE0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D590DA9C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4CC00, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleFeedbackEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4CC00, a1);
}

uint64_t sub_1D590DADC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4CC18, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleFeedbackEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4CC18, a1);
}

uint64_t ArticleFeedbackEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleFeedbackEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleFeedbackEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleFeedbackEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ArticleFeedbackEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for ArticleFeedbackEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4CCA8);
}

uint64_t ArticleFeedbackEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleFeedbackEvent.timedData.modify())()
{
  type metadata accessor for ArticleFeedbackEvent(0);
  return nullsub_1;
}

uint64_t ArticleFeedbackEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleFeedbackEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleFeedbackEvent.articleData.modify())()
{
  type metadata accessor for ArticleFeedbackEvent(0);
  return nullsub_1;
}

uint64_t ArticleFeedbackEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleFeedbackEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleFeedbackEvent.channelData.modify())()
{
  type metadata accessor for ArticleFeedbackEvent(0);
  return nullsub_1;
}

uint64_t ArticleFeedbackEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleFeedbackEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleFeedbackEvent.tagData.modify())()
{
  type metadata accessor for ArticleFeedbackEvent(0);
  return nullsub_1;
}

uint64_t ArticleFeedbackEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleFeedbackEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleFeedbackEvent.issueData.modify())()
{
  type metadata accessor for ArticleFeedbackEvent(0);
  return nullsub_1;
}

uint64_t ArticleFeedbackEvent.feedbackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 40);
  sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleFeedbackEvent.feedbackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 40);
  sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleFeedbackEvent.feedbackData.modify())()
{
  type metadata accessor for ArticleFeedbackEvent(0);
  return nullsub_1;
}

uint64_t ArticleFeedbackEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleFeedbackEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleFeedbackEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for ArticleFeedbackEvent(0);
  return nullsub_1;
}

uint64_t ArticleFeedbackEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleFeedbackEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  v14 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
}

uint64_t ArticleFeedbackEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleFeedbackEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ArticleFeedbackEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for ArticleFeedbackEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4CD50);
}

uint64_t ArticleFeedbackEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ArticleFeedbackEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleFeedbackEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleFeedbackEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleFeedbackEvent.Model.feedbackData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleFeedbackEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t ArticleFeedbackEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleFeedbackEvent.Model(0) + 44));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ArticleFeedbackEvent.Model.init(eventData:timedData:articleData:channelData:tagData:issueData:feedbackData:userBundleSubscriptionContextData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, __n128 *a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __n128 *v25;
  __n128 result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __n128 v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _BYTE v49[23];

  v48 = a3[6];
  *(_OWORD *)v49 = a3[7];
  *(_QWORD *)&v49[15] = *(_QWORD *)((char *)a3 + 127);
  v44 = a3[2];
  v45 = a3[3];
  v46 = a3[4];
  v47 = a3[5];
  v42 = *a3;
  v43 = a3[1];
  v13 = *a4;
  v12 = a4[1];
  v14 = *((_BYTE *)a4 + 16);
  v15 = *((_BYTE *)a4 + 17);
  v16 = a4[3];
  v17 = a4[4];
  v28 = a5[1];
  v29 = *a5;
  v32 = *a6;
  v30 = a6[1].n128_u64[1];
  v31 = a6[1].n128_u64[0];
  v41 = *a8;
  v39 = *((_QWORD *)a8 + 2);
  v40 = *((_QWORD *)a8 + 1);
  v37 = a8[25];
  v38 = a8[24];
  v35 = *((_QWORD *)a8 + 5);
  v36 = *((_QWORD *)a8 + 4);
  v33 = *a7;
  v34 = a8[48];
  v18 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = (int *)type metadata accessor for ArticleFeedbackEvent.Model(0);
  v20 = a9 + v19[5];
  v21 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = a9 + v19[6];
  *(_OWORD *)(v22 + 96) = v48;
  *(_OWORD *)(v22 + 112) = *(_OWORD *)v49;
  *(_QWORD *)(v22 + 127) = *(_QWORD *)&v49[15];
  *(_OWORD *)(v22 + 32) = v44;
  *(_OWORD *)(v22 + 48) = v45;
  *(_OWORD *)(v22 + 64) = v46;
  *(_OWORD *)(v22 + 80) = v47;
  *(_OWORD *)v22 = v42;
  *(_OWORD *)(v22 + 16) = v43;
  v23 = a9 + v19[7];
  *(_QWORD *)v23 = v13;
  *(_QWORD *)(v23 + 8) = v12;
  *(_BYTE *)(v23 + 16) = v14;
  *(_BYTE *)(v23 + 17) = v15;
  *(_QWORD *)(v23 + 24) = v16;
  *(_QWORD *)(v23 + 32) = v17;
  v24 = (_QWORD *)(a9 + v19[8]);
  *v24 = v29;
  v24[1] = v28;
  v25 = (__n128 *)(a9 + v19[9]);
  result = v32;
  *v25 = v32;
  v25[1].n128_u64[0] = v31;
  v25[1].n128_u64[1] = v30;
  *(_BYTE *)(a9 + v19[10]) = v33;
  v27 = a9 + v19[11];
  *(_BYTE *)v27 = v41;
  *(_QWORD *)(v27 + 8) = v40;
  *(_QWORD *)(v27 + 16) = v39;
  *(_BYTE *)(v27 + 24) = v38;
  *(_BYTE *)(v27 + 25) = v37;
  *(_QWORD *)(v27 + 32) = v36;
  *(_QWORD *)(v27 + 40) = v35;
  *(_BYTE *)(v27 + 48) = v34;
  return result;
}

uint64_t sub_1D590E82C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D590E864 + 4 * byte_1D5ACA790[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D590E864()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D590E878()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D590E8AC()
{
  return 0x61746144676174;
}

uint64_t sub_1D590E8C4()
{
  return 0x7461446575737369;
}

uint64_t sub_1D590E8D8()
{
  return 0x6B63616264656566;
}

unint64_t sub_1D590E8F8()
{
  return 0xD000000000000021;
}

uint64_t sub_1D590E914()
{
  unsigned __int8 *v0;

  return sub_1D590E82C(*v0);
}

uint64_t sub_1D590E91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5911CA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D590E940()
{
  sub_1D590ED2C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D590E968()
{
  sub_1D590ED2C();
  return sub_1D5AAEEE0();
}

uint64_t ArticleFeedbackEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v33;
  char v34;
  _BYTE v35[32];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[23];
  char v42;

  v3 = v1;
  sub_1D590F54C(0, &qword_1EFF4CC38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D590ED2C();
  sub_1D5AAEEC8();
  v35[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleFeedbackEvent.Model(0);
    v42 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + v10[6];
    v12 = *(_OWORD *)(v11 + 112);
    v40 = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v41 = v12;
    *(_QWORD *)&v41[15] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    v36 = *(_OWORD *)(v11 + 32);
    v37 = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v38 = *(_OWORD *)(v11 + 64);
    v39 = v14;
    v15 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v35 = *(_OWORD *)v11;
    *(_OWORD *)&v35[16] = v15;
    v34 = 2;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    *(_QWORD *)v35 = v17;
    *(_QWORD *)&v35[8] = v18;
    v35[16] = v19;
    v35[17] = v20;
    *(_QWORD *)&v35[24] = v22;
    *(_QWORD *)&v36 = v21;
    v34 = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v23 = (uint64_t *)(v3 + v10[8]);
    v25 = *v23;
    v24 = v23[1];
    *(_QWORD *)v35 = v25;
    *(_QWORD *)&v35[8] = v24;
    v34 = 4;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v26 = (_OWORD *)(v3 + v10[9]);
    v27 = v26[1];
    *(_OWORD *)v35 = *v26;
    *(_OWORD *)&v35[16] = v27;
    v34 = 5;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v35[0] = *(_BYTE *)(v3 + v10[10]);
    v34 = 6;
    sub_1D5897614();
    sub_1D5AAED6C();
    v28 = v3 + v10[11];
    v29 = *(_BYTE *)(v28 + 24);
    v30 = *(_BYTE *)(v28 + 25);
    v31 = *(_BYTE *)(v28 + 48);
    v35[0] = *(_BYTE *)v28;
    *(_OWORD *)&v35[8] = *(_OWORD *)(v28 + 8);
    v35[24] = v29;
    v35[25] = v30;
    v36 = *(_OWORD *)(v28 + 32);
    LOBYTE(v37) = v31;
    v34 = 7;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D590ED2C()
{
  unint64_t result;

  result = qword_1EFF4CC40;
  if (!qword_1EFF4CC40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACAA24, &type metadata for ArticleFeedbackEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CC40);
  }
  return result;
}

uint64_t ArticleFeedbackEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _OWORD *v36;
  __int128 v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _OWORD v53[2];
  __int128 v54;
  char v55;
  char v56;
  char v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[23];
  uint64_t v66;

  v44 = a2;
  v47 = sub_1D5AADFB0();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v48 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D590F54C(0, &qword_1EFF4CC48, MEMORY[0x1E0DED048]);
  v50 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - v10;
  v52 = type metadata accessor for ArticleFeedbackEvent.Model(0);
  MEMORY[0x1E0C80A78](v52);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D590ED2C();
  v49 = v11;
  v15 = v66;
  sub_1D5AAEEB0();
  v45 = v5;
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  v16 = v4;
  LOBYTE(v58) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v17 = (uint64_t)v13;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v13, v7, v5);
  LOBYTE(v58) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v18 = v16;
  v19 = v47;
  sub_1D5AAECD0();
  v20 = v9;
  v21 = (int *)v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v17 + *(int *)(v52 + 20), v18, v19);
  v57 = 2;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v22 = v17 + v21[6];
  v23 = *(_OWORD *)v65;
  *(_OWORD *)(v22 + 96) = v64;
  *(_OWORD *)(v22 + 112) = v23;
  *(_QWORD *)(v22 + 127) = *(_QWORD *)&v65[15];
  v24 = v61;
  *(_OWORD *)(v22 + 32) = v60;
  *(_OWORD *)(v22 + 48) = v24;
  v25 = v63;
  *(_OWORD *)(v22 + 64) = v62;
  *(_OWORD *)(v22 + 80) = v25;
  v26 = v59;
  *(_OWORD *)v22 = v58;
  *(_OWORD *)(v22 + 16) = v26;
  v56 = 3;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v27 = (uint64_t)v51;
  v28 = *((_QWORD *)&v53[0] + 1);
  v29 = v53[1];
  v30 = BYTE1(v53[1]);
  v31 = *((_QWORD *)&v53[1] + 1);
  v32 = v54;
  v33 = v17 + v21[7];
  *(_QWORD *)v33 = *(_QWORD *)&v53[0];
  *(_QWORD *)(v33 + 8) = v28;
  *(_BYTE *)(v33 + 16) = v29;
  *(_BYTE *)(v33 + 17) = v30;
  *(_QWORD *)(v33 + 24) = v31;
  *(_QWORD *)(v33 + 32) = v32;
  v56 = 4;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v34 = *((_QWORD *)&v53[0] + 1);
  v35 = (_QWORD *)(v17 + v21[8]);
  *v35 = *(_QWORD *)&v53[0];
  v35[1] = v34;
  v56 = 5;
  sub_1D57C5ED8();
  sub_1D5AAEC7C();
  v36 = (_OWORD *)(v17 + v21[9]);
  v37 = v53[1];
  *v36 = v53[0];
  v36[1] = v37;
  v56 = 6;
  sub_1D58975CC();
  sub_1D5AAECD0();
  *(_BYTE *)(v17 + v21[10]) = v53[0];
  v56 = 7;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v50);
  v38 = BYTE8(v53[1]);
  v39 = BYTE9(v53[1]);
  v40 = v55;
  v41 = v17 + v21[11];
  *(_BYTE *)v41 = v53[0];
  *(_OWORD *)(v41 + 8) = *(_OWORD *)((char *)v53 + 8);
  *(_BYTE *)(v41 + 24) = v38;
  *(_BYTE *)(v41 + 25) = v39;
  *(_OWORD *)(v41 + 32) = v54;
  *(_BYTE *)(v41 + 48) = v40;
  sub_1D590F5A8(v17, v44);
  __swift_destroy_boxed_opaque_existential_1(v27);
  return sub_1D590F5EC(v17);
}

void sub_1D590F54C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D590ED2C();
    v7 = a3(a1, &type metadata for ArticleFeedbackEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D590F5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleFeedbackEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D590F5EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleFeedbackEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D590F628@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleFeedbackEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D590F63C(_QWORD *a1)
{
  return ArticleFeedbackEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D590F650@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4CC00, a1);
}

uint64_t sub_1D590F674@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4CC18, a1);
}

uint64_t sub_1D590F698@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  v15 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleFeedbackEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for ArticleFeedbackEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for ArticleFeedbackEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for ArticleFeedbackEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for ArticleFeedbackEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for ArticleFeedbackEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleFeedbackEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5910684(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleFeedbackEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D591089C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5910AB0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1EFF4CC30, (void (*)(void))sub_1D58975CC, (void (*)(void))sub_1D5897614);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleFeedbackEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v16;
    v14[32] = v15[32];
    v17 = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 6) = v17;
    v14[56] = v15[56];
    v14[57] = v15[57];
    v18 = *((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
    *((_QWORD *)v14 + 9) = v18;
    v14[80] = v15[80];
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    v14[112] = v15[112];
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    *((_DWORD *)v14 + 32) = *((_DWORD *)v15 + 32);
    v14[132] = v15[132];
    *(_WORD *)(v14 + 133) = *(_WORD *)(v15 + 133);
    v19 = (char *)a1 + v13;
    v20 = (char *)a2 + v13;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    v22 = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 4) = v22;
    v23 = a3[8];
    v24 = a3[9];
    v25 = (_QWORD *)((char *)a1 + v23);
    v26 = (_QWORD *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a2;
    v29 = (char *)a1 + v24;
    v40 = v28;
    v30 = (char *)v28 + v24;
    v31 = *(_QWORD *)((char *)v28 + v24 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31)
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v31;
      *((_WORD *)v29 + 8) = *((_WORD *)v30 + 8);
      *((_QWORD *)v29 + 3) = *((_QWORD *)v30 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v33 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v33;
    }
    v34 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)v40 + a3[10]);
    v35 = (char *)a1 + v34;
    v36 = (char *)v40 + v34;
    *v35 = *v36;
    v37 = *((_QWORD *)v36 + 2);
    *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
    *((_QWORD *)v35 + 2) = v37;
    *((_WORD *)v35 + 12) = *((_WORD *)v36 + 12);
    v38 = *((_QWORD *)v36 + 5);
    *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
    *((_QWORD *)v35 + 5) = v38;
    v35[48] = v36[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleFeedbackEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 36) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleFeedbackEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v37;
  uint64_t v38;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 48) = v16;
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
  *(_BYTE *)(v13 + 57) = *(_BYTE *)(v14 + 57);
  v17 = *(_QWORD *)(v14 + 72);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 72) = v17;
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  *(_DWORD *)(v13 + 128) = *(_DWORD *)(v14 + 128);
  *(_BYTE *)(v13 + 132) = *(_BYTE *)(v14 + 132);
  *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
  v18 = a1 + v12;
  v19 = a2 + v12;
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  v21 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 32) = v21;
  v22 = a3[8];
  v23 = a3[9];
  v37 = a3;
  v38 = a1;
  v24 = (_QWORD *)(a1 + v22);
  v25 = (_QWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a1 + v23;
  v28 = a2 + v23;
  v29 = *(_QWORD *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29)
  {
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *(_QWORD *)(v27 + 8) = v29;
    *(_WORD *)(v27 + 16) = *(_WORD *)(v28 + 16);
    *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v30 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v30;
  }
  v31 = v37[11];
  *(_BYTE *)(v38 + v37[10]) = *(_BYTE *)(a2 + v37[10]);
  v32 = v38 + v31;
  v33 = a2 + v31;
  *(_BYTE *)v32 = *(_BYTE *)v33;
  v34 = *(_QWORD *)(v33 + 16);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  *(_WORD *)(v32 + 24) = *(_WORD *)(v33 + 24);
  v35 = *(_QWORD *)(v33 + 40);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 40) = v35;
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v33 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v38;
}

uint64_t assignWithCopy for ArticleFeedbackEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(a2 + v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  v14 = *(_QWORD *)(v13 + 48);
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_QWORD *)(v12 + 48) = v14;
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 72) = v15;
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a1 + v22 + 8);
  v26 = *(_QWORD *)(a2 + v22 + 8);
  if (v25)
  {
    if (v26)
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v23 + 16) = *(_BYTE *)(v24 + 16);
      *(_BYTE *)(v23 + 17) = *(_BYTE *)(v24 + 17);
      *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v23);
      v27 = *(_OWORD *)(v24 + 16);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 16) = v27;
    }
  }
  else if (v26)
  {
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
    *(_BYTE *)(v23 + 16) = *(_BYTE *)(v24 + 16);
    *(_BYTE *)(v23 + 17) = *(_BYTE *)(v24 + 17);
    *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v28;
  }
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v29 = a3[11];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_BYTE *)v30 = *(_BYTE *)(a2 + v29);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(a2 + v29 + 8);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(a2 + v29 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 24) = *(_BYTE *)(v31 + 24);
  *(_BYTE *)(v30 + 25) = *(_BYTE *)(v31 + 25);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  return a1;
}

uint64_t initializeWithTake for ArticleFeedbackEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v22 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  *(_BYTE *)(v27 + 48) = *(_BYTE *)(v28 + 48);
  return a1;
}

uint64_t assignWithTake for ArticleFeedbackEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  v14 = *(_QWORD *)(a2 + v11 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  if (!*(_QWORD *)(a1 + v26 + 8))
    goto LABEL_5;
  v29 = *(_QWORD *)(v28 + 8);
  if (!v29)
  {
    sub_1D57EE47C(v27);
LABEL_5:
    v30 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v30;
    goto LABEL_6;
  }
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = v29;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v27 + 16) = *(_BYTE *)(v28 + 16);
  *(_BYTE *)(v27 + 17) = *(_BYTE *)(v28 + 17);
  *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
  swift_bridgeObjectRelease();
LABEL_6:
  v31 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_BYTE *)v32 = *(_BYTE *)v33;
  v34 = *(_QWORD *)(v33 + 16);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 24) = *(_BYTE *)(v33 + 24);
  *(_BYTE *)(v32 + 25) = *(_BYTE *)(v33 + 25);
  v35 = *(_QWORD *)(v33 + 40);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 40) = v35;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v33 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleFeedbackEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59118E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleFeedbackEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5911998(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D5911A40()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleFeedbackEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5911B4C + 4 * byte_1D5ACA79D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D5911B80 + 4 * byte_1D5ACA798[v4]))();
}

uint64_t sub_1D5911B80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5911B88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5911B90);
  return result;
}

uint64_t sub_1D5911B9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5911BA4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D5911BA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5911BB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleFeedbackEvent.Model.CodingKeys()
{
  return &type metadata for ArticleFeedbackEvent.Model.CodingKeys;
}

unint64_t sub_1D5911BD0()
{
  unint64_t result;

  result = qword_1EFF4CDA0;
  if (!qword_1EFF4CDA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA9FC, &type metadata for ArticleFeedbackEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CDA0);
  }
  return result;
}

unint64_t sub_1D5911C18()
{
  unint64_t result;

  result = qword_1EFF4CDA8;
  if (!qword_1EFF4CDA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA96C, &type metadata for ArticleFeedbackEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CDA8);
  }
  return result;
}

unint64_t sub_1D5911C60()
{
  unint64_t result;

  result = qword_1EFF4CDB0;
  if (!qword_1EFF4CDB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACA994, &type metadata for ArticleFeedbackEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CDB0);
  }
  return result;
}

uint64_t sub_1D5911CA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6B63616264656566 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1D5912040(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4CDB8, MEMORY[0x1E0CF8078]);
}

uint64_t static SubscriptionWebAuthenticationEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4CDB8, a1);
}

uint64_t sub_1D5912080(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4CDD0, MEMORY[0x1E0CF8380]);
}

uint64_t static SubscriptionWebAuthenticationEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4CDD0, a1);
}

uint64_t SubscriptionWebAuthenticationEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SubscriptionWebAuthenticationEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SubscriptionWebAuthenticationEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SubscriptionWebAuthenticationEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CBEF8);
}

uint64_t SubscriptionWebAuthenticationEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.articleData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.channelData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.feedData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.groupData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.resultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.resultData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.resultData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.campaignData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.errorData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.errorData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.sectionData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.viewData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.purchaseData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.purchaseSessionData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.paywallData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.issueData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionWebAuthenticationEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionWebAuthenticationEvent.articleExposureContextData.modify())()
{
  type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionWebAuthenticationEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SubscriptionWebAuthenticationEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v2, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v6, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v6, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v6, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v6, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v6, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v6, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v6, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v2, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v6, v31);
  v32 = a1 + v4[18];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v32, v6, v33);
}

uint64_t SubscriptionWebAuthenticationEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SubscriptionWebAuthenticationEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 20), (uint64_t)v5, (unint64_t *)&qword_1ED9CE420);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CE420);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t type metadata accessor for SubscriptionWebAuthenticationEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CBE30);
}

uint64_t SubscriptionWebAuthenticationEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionWebAuthenticationEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *SubscriptionWebAuthenticationEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 32), (uint64_t)v5, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CEEE0);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t SubscriptionWebAuthenticationEvent.Model.resultData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t SubscriptionWebAuthenticationEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t SubscriptionWebAuthenticationEvent.Model.errorData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D58D521C(v4, v5, v6, v7);
}

uint64_t SubscriptionWebAuthenticationEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0) + 48);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionWebAuthenticationEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0) + 52));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionWebAuthenticationEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0) + 56));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionWebAuthenticationEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0) + 60));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionWebAuthenticationEvent.Model.paywallData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t SubscriptionWebAuthenticationEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0) + 68));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t SubscriptionWebAuthenticationEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0) + 72));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57E90BC(v4, v5);
}

__n128 SubscriptionWebAuthenticationEvent.Model.init(eventData:articleData:channelData:feedData:groupData:resultData:campaignData:errorData:sectionData:viewData:purchaseData:purchaseSessionData:paywallData:issueData:articleExposureContextData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, __int128 *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, __int16 *a14, __int128 *a15, __int128 *a16)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 result;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char v57;
  uint64_t v58;
  __int128 v59;
  __int16 v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  __int128 v70;
  __n128 v71;
  __int128 v72;
  _BYTE v73[136];
  _BYTE v74[144];

  sub_1D57E4810(a2, (uint64_t)v73, (unint64_t *)&qword_1ED9CE420);
  v48 = a3[1];
  v49 = *a3;
  v46 = *((_BYTE *)a3 + 17);
  v47 = *((_BYTE *)a3 + 16);
  v21 = a3[3];
  v22 = a3[4];
  v45 = v21;
  v51 = *a4;
  v23 = *((_QWORD *)a4 + 2);
  sub_1D57E4810(a5, (uint64_t)v74, (unint64_t *)&qword_1ED9CEEE0);
  v50 = *a6;
  v53 = a7[1];
  v54 = *a7;
  v24 = *((_QWORD *)a7 + 4);
  v25 = *((_QWORD *)a7 + 5);
  v52 = v24;
  v55 = a8[1];
  v56 = *a8;
  v26 = *((_QWORD *)a8 + 4);
  v59 = *a10;
  v58 = *((_QWORD *)a10 + 2);
  v57 = *((_BYTE *)a10 + 24);
  v61 = a11[1];
  v62 = *a11;
  v60 = *((_WORD *)a11 + 8);
  v64 = a12[1];
  v65 = *a12;
  v63 = *((_BYTE *)a12 + 16);
  v66 = a13[1];
  v68 = *a13;
  v27 = *a14;
  v29 = *((_QWORD *)a15 + 2);
  v28 = *((_QWORD *)a15 + 3);
  v72 = *a16;
  v70 = *a15;
  v71 = (__n128)a16[1];
  v30 = *((_QWORD *)a16 + 4);
  v31 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a9, a1, v31);
  v32 = (int *)type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0);
  sub_1D57E4810((uint64_t)v73, a9 + v32[5], (unint64_t *)&qword_1ED9CE420);
  v33 = a9 + v32[6];
  *(_QWORD *)v33 = v49;
  *(_QWORD *)(v33 + 8) = v48;
  *(_BYTE *)(v33 + 16) = v47;
  *(_BYTE *)(v33 + 17) = v46;
  *(_QWORD *)(v33 + 24) = v45;
  *(_QWORD *)(v33 + 32) = v22;
  v34 = a9 + v32[7];
  *(_OWORD *)v34 = v51;
  *(_QWORD *)(v34 + 16) = v23;
  sub_1D57E4810((uint64_t)v74, a9 + v32[8], (unint64_t *)&qword_1ED9CEEE0);
  *(_BYTE *)(a9 + v32[9]) = v50;
  v35 = a9 + v32[10];
  *(_OWORD *)v35 = v54;
  *(_OWORD *)(v35 + 16) = v53;
  *(_QWORD *)(v35 + 32) = v52;
  *(_QWORD *)(v35 + 40) = v25;
  v36 = a9 + v32[11];
  *(_OWORD *)v36 = v56;
  *(_OWORD *)(v36 + 16) = v55;
  *(_QWORD *)(v36 + 32) = v26;
  v37 = a9 + v32[12];
  *(_OWORD *)v37 = v59;
  *(_QWORD *)(v37 + 16) = v58;
  *(_BYTE *)(v37 + 24) = v57;
  v38 = a9 + v32[13];
  *(_QWORD *)v38 = v62;
  *(_QWORD *)(v38 + 8) = v61;
  *(_WORD *)(v38 + 16) = v60;
  v39 = a9 + v32[14];
  *(_QWORD *)v39 = v65;
  *(_QWORD *)(v39 + 8) = v64;
  *(_BYTE *)(v39 + 16) = v63;
  v40 = (_QWORD *)(a9 + v32[15]);
  *v40 = v68;
  v40[1] = v66;
  *(_WORD *)(a9 + v32[16]) = v27;
  v41 = a9 + v32[17];
  *(_OWORD *)v41 = v70;
  *(_QWORD *)(v41 + 16) = v29;
  *(_QWORD *)(v41 + 24) = v28;
  v42 = a9 + v32[18];
  result = v71;
  *(_OWORD *)v42 = v72;
  *(__n128 *)(v42 + 16) = v71;
  *(_QWORD *)(v42 + 32) = v30;
  return result;
}

uint64_t sub_1D5913A30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5913A68 + 4 * byte_1D5ACAA80[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5913A68()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D5913B7C()
{
  return 0x7461446575737369;
}

unint64_t sub_1D5913B90()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1D5913BB0()
{
  unsigned __int8 *v0;

  return sub_1D5913A30(*v0);
}

uint64_t sub_1D5913BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59199F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5913BDC()
{
  sub_1D59141F4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5913C04()
{
  sub_1D59141F4();
  return sub_1D5AAEEE0();
}

uint64_t SubscriptionWebAuthenticationEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  __int128 *v20;
  __int128 v21;
  __int128 *v22;
  uint64_t v23;
  __int128 v24;
  __int128 *v25;
  uint64_t v26;
  char v27;
  __int128 *v28;
  __int16 v29;
  __int128 *v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  __int128 v36;
  __int128 *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v41;
  char v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _QWORD v46[2];
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  uint64_t v53;
  _BYTE v54[152];

  v3 = v1;
  sub_1D5914D40(0, &qword_1EFF4CDE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v41 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59141F4();
  sub_1D5AAEEC8();
  v54[135] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0);
    sub_1D57E4810(v3 + v10[5], (uint64_t)v54, (unint64_t *)&qword_1ED9CE420);
    sub_1D57E4810((uint64_t)v54, (uint64_t)v46, (unint64_t *)&qword_1ED9CE420);
    LOBYTE(v43) = 1;
    sub_1D57CB940();
    sub_1D5AAED18();
    v11 = (uint64_t *)(v3 + v10[6]);
    v12 = *v11;
    v13 = v11[1];
    v14 = *((_BYTE *)v11 + 16);
    v15 = *((_BYTE *)v11 + 17);
    v17 = v11[3];
    v16 = v11[4];
    v46[0] = v12;
    v46[1] = v13;
    v47 = v14;
    v48 = v15;
    v49 = v17;
    v50 = v16;
    LOBYTE(v43) = 2;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v18 = (__int128 *)(v3 + v10[7]);
    v19 = *((_QWORD *)v18 + 2);
    v52 = *v18;
    v53 = v19;
    v51 = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57E4810(v3 + v10[8], (uint64_t)v46, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v46, (uint64_t)&v43, (unint64_t *)&qword_1ED9CEEE0);
    v42 = 4;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    LOBYTE(v43) = *(_BYTE *)(v3 + v10[9]);
    v42 = 5;
    sub_1D583AF64();
    sub_1D5AAED6C();
    v20 = (__int128 *)(v3 + v10[10]);
    v21 = v20[1];
    v43 = *v20;
    v44 = v21;
    v45 = v20[2];
    v42 = 6;
    sub_1D57CB460();
    sub_1D5AAED18();
    v22 = (__int128 *)(v3 + v10[11]);
    v23 = *((_QWORD *)v22 + 4);
    v24 = v22[1];
    v43 = *v22;
    v44 = v24;
    *(_QWORD *)&v45 = v23;
    v42 = 7;
    sub_1D57C6128();
    sub_1D5AAED18();
    v25 = (__int128 *)(v3 + v10[12]);
    v26 = *((_QWORD *)v25 + 2);
    v27 = *((_BYTE *)v25 + 24);
    v43 = *v25;
    *(_QWORD *)&v44 = v26;
    BYTE8(v44) = v27;
    v42 = 8;
    sub_1D57CB720();
    sub_1D5AAED18();
    v28 = (__int128 *)(v3 + v10[13]);
    v29 = *((_WORD *)v28 + 8);
    v43 = *v28;
    LOWORD(v44) = v29;
    v42 = 9;
    sub_1D57C62A4();
    sub_1D5AAED18();
    v30 = (__int128 *)(v3 + v10[14]);
    v31 = *((_BYTE *)v30 + 16);
    v43 = *v30;
    LOBYTE(v44) = v31;
    v42 = 10;
    sub_1D580C07C();
    sub_1D5AAED18();
    v32 = (uint64_t *)(v3 + v10[15]);
    v34 = *v32;
    v33 = v32[1];
    *(_QWORD *)&v43 = v34;
    *((_QWORD *)&v43 + 1) = v33;
    v42 = 11;
    sub_1D583239C();
    sub_1D5AAED6C();
    LOWORD(v43) = *(_WORD *)(v3 + v10[16]);
    v42 = 12;
    sub_1D57CB830();
    sub_1D5AAED6C();
    v35 = (__int128 *)(v3 + v10[17]);
    v36 = v35[1];
    v43 = *v35;
    v44 = v36;
    v42 = 13;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v37 = (__int128 *)(v3 + v10[18]);
    v38 = *((_QWORD *)v37 + 4);
    v39 = v37[1];
    v43 = *v37;
    v44 = v39;
    *(_QWORD *)&v45 = v38;
    v42 = 14;
    sub_1D57C71C4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59141F4()
{
  unint64_t result;

  result = qword_1EFF4CDF0;
  if (!qword_1EFF4CDF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACAE64, &type metadata for SubscriptionWebAuthenticationEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CDF0);
  }
  return result;
}

uint64_t SubscriptionWebAuthenticationEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  char *v14;
  uint64_t result;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  char *v40;
  __int16 v41;
  char *v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  int *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  _BYTE v71[136];
  _BYTE v72[136];
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BOOL4 v78;
  char v79;
  char v80;
  char v81;

  v59 = a2;
  v4 = sub_1D5AADF98();
  v63 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5914D40(0, &qword_1EFF4CDF8, MEMORY[0x1E0DED048]);
  v62 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v58 - v9;
  v67 = (int *)type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0);
  MEMORY[0x1E0C80A78](v67);
  v66 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v64 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D59141F4();
  v60 = v10;
  sub_1D5AAEEB0();
  v61 = v4;
  if (v2)
  {
    v65 = v2;
    LODWORD(v62) = 0;
    v13 = 0;
  }
  else
  {
    v58 = v8;
    LOBYTE(v74) = 0;
    sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v23 = v66;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v66, v6, v4);
    v81 = 1;
    sub_1D57CB8FC();
    sub_1D5AAEC7C();
    sub_1D57E4810((uint64_t)&v73, (uint64_t)v72, (unint64_t *)&qword_1ED9CE420);
    v24 = v67;
    sub_1D57E4810((uint64_t)v72, (uint64_t)&v23[v67[5]], (unint64_t *)&qword_1ED9CE420);
    v71[0] = 2;
    sub_1D57CB874();
    sub_1D5AAECD0();
    v25 = *((_QWORD *)&v74 + 1);
    v26 = v75;
    v27 = BYTE1(v75);
    v28 = v76;
    v29 = v77;
    v30 = &v23[v24[6]];
    *(_QWORD *)v30 = v74;
    *((_QWORD *)v30 + 1) = v25;
    v30[16] = v26;
    v30[17] = v27;
    *((_QWORD *)v30 + 3) = v28;
    *((_QWORD *)v30 + 4) = v29;
    v71[0] = 3;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v31 = v75;
    v32 = &v23[v24[7]];
    *(_OWORD *)v32 = v74;
    *((_QWORD *)v32 + 2) = v31;
    v80 = 4;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57E4810((uint64_t)&v74, (uint64_t)v71, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v71, (uint64_t)&v23[v24[8]], (unint64_t *)&qword_1ED9CEEE0);
    v79 = 5;
    sub_1D583AF20();
    sub_1D5AAECD0();
    v23[v24[9]] = v68;
    v79 = 6;
    sub_1D57CB41C();
    sub_1D5AAEC7C();
    v33 = &v23[v24[10]];
    v34 = v69;
    *(_OWORD *)v33 = v68;
    *((_OWORD *)v33 + 1) = v34;
    *((_OWORD *)v33 + 2) = v70;
    v79 = 7;
    sub_1D57C60E4();
    sub_1D5AAEC7C();
    v35 = v70;
    v36 = &v23[v67[11]];
    v37 = v69;
    *(_OWORD *)v36 = v68;
    *((_OWORD *)v36 + 1) = v37;
    *((_QWORD *)v36 + 4) = v35;
    v79 = 8;
    sub_1D57CB6DC();
    sub_1D5AAEC7C();
    v38 = v69;
    v39 = BYTE8(v69);
    v40 = &v23[v67[12]];
    *(_OWORD *)v40 = v68;
    *((_QWORD *)v40 + 2) = v38;
    v40[24] = v39;
    v79 = 9;
    sub_1D57C6260();
    sub_1D5AAEC7C();
    v65 = 0;
    v41 = v69;
    v42 = &v66[v67[13]];
    *(_OWORD *)v42 = v68;
    *((_WORD *)v42 + 8) = v41;
    v79 = 10;
    sub_1D580C038();
    v43 = v65;
    sub_1D5AAEC7C();
    v65 = v43;
    if (!v43)
    {
      v44 = v69;
      v45 = &v66[v67[14]];
      *(_OWORD *)v45 = v68;
      v45[16] = v44;
      v79 = 11;
      sub_1D5832358();
      v46 = v65;
      sub_1D5AAECD0();
      v78 = v46 == 0;
      v65 = v46;
      if (v46)
        goto LABEL_36;
      v47 = *((_QWORD *)&v68 + 1);
      v48 = &v66[v67[15]];
      *(_QWORD *)v48 = v68;
      *((_QWORD *)v48 + 1) = v47;
      v79 = 12;
      sub_1D57CB7EC();
      v49 = v65;
      sub_1D5AAECD0();
      v65 = v49;
      if (v49
        || (*(_WORD *)&v66[v67[16]] = v68, v79 = 13, sub_1D57C5ED8(), v50 = v65, sub_1D5AAEC7C(), (v65 = v50) != 0))
      {
LABEL_36:
        (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v62);
        __swift_destroy_boxed_opaque_existential_1(v64);
        LODWORD(v64) = 0;
      }
      else
      {
        v51 = &v66[v67[17]];
        v52 = v69;
        *(_OWORD *)v51 = v68;
        *((_OWORD *)v51 + 1) = v52;
        v79 = 14;
        sub_1D57C7180();
        v53 = v65;
        sub_1D5AAEC7C();
        v65 = v53;
        if (!v53)
        {
          (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v62);
          v54 = v70;
          v55 = (uint64_t)v66;
          v56 = &v66[v67[18]];
          v57 = v69;
          *(_OWORD *)v56 = v68;
          *((_OWORD *)v56 + 1) = v57;
          *((_QWORD *)v56 + 4) = v54;
          sub_1D5914D9C(v55, v59);
          __swift_destroy_boxed_opaque_existential_1(v64);
          return sub_1D5914DE0(v55);
        }
        (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v62);
        __swift_destroy_boxed_opaque_existential_1(v64);
        LODWORD(v64) = 1;
      }
      v14 = v66;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v66, v61);
      LODWORD(v63) = 1;
      LODWORD(v62) = 1;
      v21 = 1;
      v20 = 1;
      v19 = 1;
      v18 = 1;
      v17 = 1;
      LOBYTE(v16) = 1;
LABEL_7:
      sub_1D57E4810((uint64_t)&v14[v67[5]], (uint64_t)&v74, (unint64_t *)&qword_1ED9CE420);
      result = sub_1D580D964((uint64_t)&v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580D9D8);
      if ((v16 & 1) != 0)
        goto LABEL_8;
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v62);
    v13 = 991;
    LODWORD(v62) = 1;
  }
  v14 = v66;
  result = __swift_destroy_boxed_opaque_existential_1(v64);
  v16 = (v13 >> 2) & 1;
  v17 = (v13 >> 3) & 1;
  v18 = (v13 >> 4) & 1;
  v19 = (v13 >> 6) & 1;
  v20 = (v13 >> 7) & 1;
  v21 = (v13 >> 8) & 1;
  if ((v13 & 1) != 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v14, v61);
    if ((v13 & 2) != 0)
      goto LABEL_6;
  }
  else if ((v13 & 2) != 0)
  {
LABEL_6:
    LODWORD(v64) = 0;
    v78 = 0;
    LODWORD(v63) = 0;
    goto LABEL_7;
  }
  LODWORD(v63) = 0;
  v78 = 0;
  LODWORD(v64) = 0;
  if ((v13 & 4) != 0)
  {
LABEL_8:
    v22 = v67;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  v22 = v67;
  if (!v17)
  {
LABEL_9:
    if (v18)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  result = sub_1D57DAEDC(*(_QWORD *)&v14[v22[7]], *(_QWORD *)&v14[v22[7] + 8], *(_QWORD *)&v14[v22[7] + 16]);
  if ((v18 & 1) != 0)
  {
LABEL_10:
    sub_1D57E4810((uint64_t)&v14[v22[8]], (uint64_t)&v74, (unint64_t *)&qword_1ED9CEEE0);
    result = (uint64_t)sub_1D57DE9C8(&v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
    if ((v19 & 1) == 0)
      goto LABEL_11;
    goto LABEL_23;
  }
LABEL_22:
  if (!v19)
  {
LABEL_11:
    if (v20)
      goto LABEL_12;
    goto LABEL_24;
  }
LABEL_23:
  result = sub_1D584ABF4(*(_QWORD *)&v14[v22[10]], *(_QWORD *)&v14[v22[10] + 8]);
  if ((v20 & 1) != 0)
  {
LABEL_12:
    result = sub_1D58D5DF0(*(_QWORD *)&v14[v22[11]], *(_QWORD *)&v14[v22[11] + 8], *(_QWORD *)&v14[v22[11] + 16], *(_QWORD *)&v14[v22[11] + 24]);
    if ((v21 & 1) == 0)
      goto LABEL_13;
    goto LABEL_25;
  }
LABEL_24:
  if (!v21)
  {
LABEL_13:
    if ((_DWORD)v62)
      goto LABEL_14;
    goto LABEL_26;
  }
LABEL_25:
  result = swift_bridgeObjectRelease();
  if ((v62 & 1) != 0)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    if ((v63 & 1) == 0)
      goto LABEL_15;
    goto LABEL_27;
  }
LABEL_26:
  if (!(_DWORD)v63)
  {
LABEL_15:
    if (v78)
      goto LABEL_16;
LABEL_28:
    if (!(_DWORD)v64)
      return result;
    return sub_1D57EA700(*(_QWORD *)&v14[v22[17]], *(_QWORD *)&v14[v22[17] + 8]);
  }
LABEL_27:
  result = swift_bridgeObjectRelease();
  if (!v78)
    goto LABEL_28;
LABEL_16:
  result = swift_bridgeObjectRelease();
  if ((v64 & 1) == 0)
    return result;
  return sub_1D57EA700(*(_QWORD *)&v14[v22[17]], *(_QWORD *)&v14[v22[17] + 8]);
}

void sub_1D5914D40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59141F4();
    v7 = a3(a1, &type metadata for SubscriptionWebAuthenticationEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5914D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5914DE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SubscriptionWebAuthenticationEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5914E1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscriptionWebAuthenticationEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5914E30(_QWORD *a1)
{
  return SubscriptionWebAuthenticationEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5914E44@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4CDB8, a1);
}

uint64_t sub_1D5914E68@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4CDD0, a1);
}

uint64_t sub_1D5914E8C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v4, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v7, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v7, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v7, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v7, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v7, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v7, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v7, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v4, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v7, v32);
  v33 = a2 + a1[18];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v33, v7, v34);
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscriptionWebAuthenticationEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v64 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v64 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = a3[18];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
  }
  return a1;
}

uint64_t destroy for SubscriptionWebAuthenticationEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  v31 = a1 + a2[18];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
}

uint64_t initializeWithCopy for SubscriptionWebAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  return a1;
}

uint64_t assignWithCopy for SubscriptionWebAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  return a1;
}

uint64_t initializeWithTake for SubscriptionWebAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  return a1;
}

uint64_t assignWithTake for SubscriptionWebAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionWebAuthenticationEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5916D90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                            v12 = *(_QWORD *)(v25 - 8);
                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                            {
                              v8 = v25;
                              v13 = a3[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                              v8 = v26;
                              v12 = *(_QWORD *)(v26 - 8);
                              v13 = a3[18];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SubscriptionWebAuthenticationEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59171A4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                            v14 = *(_QWORD *)(v27 - 8);
                            if (*(_DWORD *)(v14 + 84) == a3)
                            {
                              v10 = v27;
                              v15 = a4[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                              v10 = v28;
                              v14 = *(_QWORD *)(v28 - 8);
                              v15 = a4[18];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59175B4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                            if (v13 <= 0x3F)
                            {
                              sub_1D579E208(319, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                              if (v14 <= 0x3F)
                                swift_initStructMetadata();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SubscriptionWebAuthenticationEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int16 v74;
  char *v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 3);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[8] = v10[8];
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v11;
      v9[32] = v10[32];
      v12 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v12;
      *((_WORD *)v9 + 28) = *((_WORD *)v10 + 28);
      v14 = *((_QWORD *)v10 + 8);
      v13 = *((_QWORD *)v10 + 9);
      v9[80] = v10[80];
      *((_QWORD *)v9 + 8) = v14;
      *((_QWORD *)v9 + 9) = v13;
      *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      v9[112] = v10[112];
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      *((_DWORD *)v9 + 32) = *((_DWORD *)v10 + 32);
      v9[132] = v10[132];
      *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v16;
      *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
      v17 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v17;
      v18 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v18;
      v19 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v19;
    }
    v20 = a3[6];
    v21 = a3[7];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    *((_WORD *)v22 + 8) = *((_WORD *)v23 + 8);
    v25 = *((_QWORD *)v23 + 4);
    *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
    *((_QWORD *)v22 + 4) = v25;
    v26 = (char *)a1 + v21;
    v27 = (char *)a2 + v21;
    v28 = *(_QWORD *)((char *)a2 + v21 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28 == 1)
    {
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
    }
    else
    {
      *v26 = *v27;
      *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
      *((_QWORD *)v26 + 2) = v28;
      swift_bridgeObjectRetain();
    }
    v29 = a3[8];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = *((_QWORD *)v31 + 2);
    if (v32)
    {
      *(_WORD *)v30 = *(_WORD *)v31;
      *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
      *((_QWORD *)v30 + 2) = v32;
      *((_QWORD *)v30 + 3) = *((_QWORD *)v31 + 3);
      v33 = *((_QWORD *)v31 + 5);
      *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
      *((_QWORD *)v30 + 5) = v33;
      v34 = *((_QWORD *)v31 + 7);
      *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
      *((_QWORD *)v30 + 7) = v34;
      v35 = *((_QWORD *)v31 + 9);
      *((_QWORD *)v30 + 8) = *((_QWORD *)v31 + 8);
      *((_QWORD *)v30 + 9) = v35;
      v30[80] = v31[80];
      v36 = *((_QWORD *)v31 + 12);
      *((_QWORD *)v30 + 11) = *((_QWORD *)v31 + 11);
      *((_QWORD *)v30 + 12) = v36;
      *((_QWORD *)v30 + 13) = *((_QWORD *)v31 + 13);
      v30[112] = v31[112];
      v37 = *((_QWORD *)v31 + 16);
      *((_QWORD *)v30 + 15) = *((_QWORD *)v31 + 15);
      *((_QWORD *)v30 + 16) = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v38 = *((_OWORD *)v31 + 7);
      *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
      *((_OWORD *)v30 + 7) = v38;
      *((_QWORD *)v30 + 16) = *((_QWORD *)v31 + 16);
      v39 = *((_OWORD *)v31 + 3);
      *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
      *((_OWORD *)v30 + 3) = v39;
      v40 = *((_OWORD *)v31 + 5);
      *((_OWORD *)v30 + 4) = *((_OWORD *)v31 + 4);
      *((_OWORD *)v30 + 5) = v40;
      v41 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v41;
    }
    v42 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v43 = (_QWORD *)((char *)a1 + v42);
    v44 = (_QWORD *)((char *)a2 + v42);
    v45 = v44[1];
    if (v45)
    {
      *v43 = *v44;
      v43[1] = v45;
      v46 = v44[3];
      v43[2] = v44[2];
      v43[3] = v46;
      v47 = v44[5];
      v43[4] = v44[4];
      v43[5] = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v48 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v48;
      *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
    }
    v49 = a3[11];
    v50 = (_QWORD *)((char *)a1 + v49);
    v51 = (_QWORD *)((char *)a2 + v49);
    v52 = v51[3];
    if (v52)
    {
      v53 = v51[1];
      *v50 = *v51;
      v50[1] = v53;
      v50[2] = v51[2];
      v50[3] = v52;
      v50[4] = v51[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v54 = *((_OWORD *)v51 + 1);
      *(_OWORD *)v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v54;
      v50[4] = v51[4];
    }
    v55 = a3[12];
    v56 = a3[13];
    v57 = (char *)a1 + v55;
    v58 = (char *)a2 + v55;
    v59 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *((_QWORD *)v57 + 1) = v59;
    *((_QWORD *)v57 + 2) = *((_QWORD *)v58 + 2);
    v57[24] = v58[24];
    v60 = (char *)a1 + v56;
    v61 = (char *)a2 + v56;
    v62 = *((_QWORD *)v61 + 1);
    *(_QWORD *)v60 = *(_QWORD *)v61;
    *((_QWORD *)v60 + 1) = v62;
    v60[16] = v61[16];
    v60[17] = v61[17];
    v63 = a3[14];
    v64 = a3[15];
    v65 = (char *)a1 + v63;
    v66 = (char *)a2 + v63;
    v67 = *((_QWORD *)v66 + 1);
    *(_QWORD *)v65 = *(_QWORD *)v66;
    *((_QWORD *)v65 + 1) = v67;
    v65[16] = v66[16];
    v68 = (_QWORD *)((char *)a1 + v64);
    v69 = (_QWORD *)((char *)a2 + v64);
    v70 = *v69;
    v71 = v69[1];
    v72 = a3[16];
    v73 = a3[17];
    v74 = *(_WORD *)((char *)a2 + v72);
    *v68 = v70;
    v68[1] = v71;
    *(_WORD *)((char *)a1 + v72) = v74;
    v75 = (char *)a1 + v73;
    v76 = (char *)a2 + v73;
    v77 = *(_QWORD *)((char *)a2 + v73 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v77)
    {
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = v77;
      *((_WORD *)v75 + 8) = *((_WORD *)v76 + 8);
      *((_QWORD *)v75 + 3) = *((_QWORD *)v76 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v78 = *((_OWORD *)v76 + 1);
      *(_OWORD *)v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v78;
    }
    v79 = a3[18];
    v80 = (char *)a1 + v79;
    v81 = (char *)a2 + v79;
    v82 = *((_QWORD *)v81 + 1);
    if (v82 == 1)
    {
      v83 = *((_OWORD *)v81 + 1);
      *(_OWORD *)v80 = *(_OWORD *)v81;
      *((_OWORD *)v80 + 1) = v83;
      *((_QWORD *)v80 + 4) = *((_QWORD *)v81 + 4);
    }
    else
    {
      *(_QWORD *)v80 = *(_QWORD *)v81;
      *((_QWORD *)v80 + 1) = v82;
      v84 = *((_QWORD *)v81 + 3);
      *((_QWORD *)v80 + 2) = *((_QWORD *)v81 + 2);
      *((_QWORD *)v80 + 3) = v84;
      *((_QWORD *)v80 + 4) = *((_QWORD *)v81 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for SubscriptionWebAuthenticationEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[5] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[11] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[17] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + a2[18] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SubscriptionWebAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int16 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 24);
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v10;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    v11 = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = v11;
    *(_WORD *)(v8 + 56) = *(_WORD *)(v9 + 56);
    v13 = *(_QWORD *)(v9 + 64);
    v12 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 72) = v12;
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_DWORD *)(v8 + 128) = *(_DWORD *)(v9 + 128);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_WORD *)(v8 + 133) = *(_WORD *)(v9 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v14;
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    v15 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v15;
    v16 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v16;
    v17 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v17;
  }
  v18 = a3[6];
  v19 = a3[7];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v22;
  *(_WORD *)(v20 + 16) = *(_WORD *)(v21 + 16);
  v23 = *(_QWORD *)(v21 + 32);
  *(_QWORD *)(v20 + 24) = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v20 + 32) = v23;
  v24 = a1 + v19;
  v25 = a2 + v19;
  v26 = *(_QWORD *)(a2 + v19 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26 == 1)
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  }
  else
  {
    *(_BYTE *)v24 = *(_BYTE *)v25;
    *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
    *(_QWORD *)(v24 + 16) = v26;
    swift_bridgeObjectRetain();
  }
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_QWORD *)(v29 + 16);
  if (v30)
  {
    *(_WORD *)v28 = *(_WORD *)v29;
    *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
    *(_QWORD *)(v28 + 16) = v30;
    *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
    v31 = *(_QWORD *)(v29 + 40);
    *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
    *(_QWORD *)(v28 + 40) = v31;
    v32 = *(_QWORD *)(v29 + 56);
    *(_QWORD *)(v28 + 48) = *(_QWORD *)(v29 + 48);
    *(_QWORD *)(v28 + 56) = v32;
    v33 = *(_QWORD *)(v29 + 72);
    *(_QWORD *)(v28 + 64) = *(_QWORD *)(v29 + 64);
    *(_QWORD *)(v28 + 72) = v33;
    *(_BYTE *)(v28 + 80) = *(_BYTE *)(v29 + 80);
    v34 = *(_QWORD *)(v29 + 96);
    *(_QWORD *)(v28 + 88) = *(_QWORD *)(v29 + 88);
    *(_QWORD *)(v28 + 96) = v34;
    *(_QWORD *)(v28 + 104) = *(_QWORD *)(v29 + 104);
    *(_BYTE *)(v28 + 112) = *(_BYTE *)(v29 + 112);
    v35 = *(_QWORD *)(v29 + 128);
    *(_QWORD *)(v28 + 120) = *(_QWORD *)(v29 + 120);
    *(_QWORD *)(v28 + 128) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v36 = *(_OWORD *)(v29 + 112);
    *(_OWORD *)(v28 + 96) = *(_OWORD *)(v29 + 96);
    *(_OWORD *)(v28 + 112) = v36;
    *(_QWORD *)(v28 + 128) = *(_QWORD *)(v29 + 128);
    v37 = *(_OWORD *)(v29 + 48);
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
    *(_OWORD *)(v28 + 48) = v37;
    v38 = *(_OWORD *)(v29 + 80);
    *(_OWORD *)(v28 + 64) = *(_OWORD *)(v29 + 64);
    *(_OWORD *)(v28 + 80) = v38;
    v39 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v39;
  }
  v40 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  v43 = v42[1];
  if (v43)
  {
    *v41 = *v42;
    v41[1] = v43;
    v44 = v42[3];
    v41[2] = v42[2];
    v41[3] = v44;
    v45 = v42[5];
    v41[4] = v42[4];
    v41[5] = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v46 = *((_OWORD *)v42 + 1);
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *((_OWORD *)v41 + 1) = v46;
    *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
  }
  v47 = a3[11];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  v50 = v49[3];
  if (v50)
  {
    v51 = v49[1];
    *v48 = *v49;
    v48[1] = v51;
    v48[2] = v49[2];
    v48[3] = v50;
    v48[4] = v49[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v52 = *((_OWORD *)v49 + 1);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v52;
    v48[4] = v49[4];
  }
  v53 = a3[12];
  v54 = a3[13];
  v55 = a1 + v53;
  v56 = a2 + v53;
  v57 = *(_QWORD *)(v56 + 8);
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *(_QWORD *)(v55 + 8) = v57;
  *(_QWORD *)(v55 + 16) = *(_QWORD *)(v56 + 16);
  *(_BYTE *)(v55 + 24) = *(_BYTE *)(v56 + 24);
  v58 = a1 + v54;
  v59 = a2 + v54;
  v60 = *(_QWORD *)(v59 + 8);
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *(_QWORD *)(v58 + 8) = v60;
  *(_BYTE *)(v58 + 16) = *(_BYTE *)(v59 + 16);
  *(_BYTE *)(v58 + 17) = *(_BYTE *)(v59 + 17);
  v61 = a3[14];
  v62 = a3[15];
  v63 = a1 + v61;
  v64 = a2 + v61;
  v65 = *(_QWORD *)(v64 + 8);
  *(_QWORD *)v63 = *(_QWORD *)v64;
  *(_QWORD *)(v63 + 8) = v65;
  *(_BYTE *)(v63 + 16) = *(_BYTE *)(v64 + 16);
  v66 = (_QWORD *)(a1 + v62);
  v67 = (uint64_t *)(a2 + v62);
  v68 = *v67;
  v69 = v67[1];
  v70 = a3[16];
  v71 = a3[17];
  v72 = *(_WORD *)(a2 + v70);
  *v66 = v68;
  v66[1] = v69;
  *(_WORD *)(a1 + v70) = v72;
  v73 = a1 + v71;
  v74 = a2 + v71;
  v75 = *(_QWORD *)(a2 + v71 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v75)
  {
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *(_QWORD *)(v73 + 8) = v75;
    *(_WORD *)(v73 + 16) = *(_WORD *)(v74 + 16);
    *(_QWORD *)(v73 + 24) = *(_QWORD *)(v74 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v76 = *(_OWORD *)(v74 + 16);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *(_OWORD *)(v73 + 16) = v76;
  }
  v77 = a3[18];
  v78 = a1 + v77;
  v79 = a2 + v77;
  v80 = *(_QWORD *)(v79 + 8);
  if (v80 == 1)
  {
    v81 = *(_OWORD *)(v79 + 16);
    *(_OWORD *)v78 = *(_OWORD *)v79;
    *(_OWORD *)(v78 + 16) = v81;
    *(_QWORD *)(v78 + 32) = *(_QWORD *)(v79 + 32);
  }
  else
  {
    *(_QWORD *)v78 = *(_QWORD *)v79;
    *(_QWORD *)(v78 + 8) = v80;
    v82 = *(_QWORD *)(v79 + 24);
    *(_QWORD *)(v78 + 16) = *(_QWORD *)(v79 + 16);
    *(_QWORD *)(v78 + 24) = v82;
    *(_QWORD *)(v78 + 32) = *(_QWORD *)(v79 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for SubscriptionWebAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  _BYTE *v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  __int128 *v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  __int128 v106;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 24);
  v11 = *(_QWORD *)(a2 + v7 + 24);
  if (v10)
  {
    if (v11)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
      *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      v12 = *(_QWORD *)(v9 + 48);
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      *(_QWORD *)(v8 + 48) = v12;
      *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_QWORD *)(v8 + 72) = v13;
      *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
      *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
      *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
      *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    }
    else
    {
      sub_1D5810518(v8);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v16 = *(_OWORD *)(v9 + 64);
      v18 = *(_OWORD *)(v9 + 16);
      v17 = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 64) = v16;
      *(_OWORD *)(v8 + 16) = v18;
      *(_OWORD *)(v8 + 32) = v17;
      v20 = *(_OWORD *)(v9 + 96);
      v19 = *(_OWORD *)(v9 + 112);
      v21 = *(_OWORD *)(v9 + 80);
      *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
      *(_OWORD *)(v8 + 96) = v20;
      *(_OWORD *)(v8 + 112) = v19;
      *(_OWORD *)(v8 + 80) = v21;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    v14 = *(_QWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    *(_QWORD *)(v8 + 48) = v14;
    *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
    *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
    v15 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 72) = v15;
    *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
    *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
    *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
    *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
    *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v22 = *(_OWORD *)(v9 + 16);
    v23 = *(_OWORD *)(v9 + 32);
    v24 = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 64) = v24;
    *(_OWORD *)(v8 + 16) = v22;
    *(_OWORD *)(v8 + 32) = v23;
    v25 = *(_OWORD *)(v9 + 80);
    v26 = *(_OWORD *)(v9 + 96);
    v27 = *(_OWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    *(_OWORD *)(v8 + 96) = v26;
    *(_OWORD *)(v8 + 112) = v27;
    *(_OWORD *)(v8 + 80) = v25;
  }
  v28 = a3[6];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)v29 = *(_QWORD *)(a2 + v28);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(a2 + v28 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
  *(_BYTE *)(v29 + 17) = *(_BYTE *)(v30 + 17);
  *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[7];
  v32 = a1 + v31;
  v33 = (__int128 *)(a2 + v31);
  v34 = *(_QWORD *)(a1 + v31 + 16);
  v35 = *(_QWORD *)(a2 + v31 + 16);
  if (v34 == 1)
  {
    if (v35 == 1)
    {
      v36 = *v33;
      *(_QWORD *)(v32 + 16) = *((_QWORD *)v33 + 2);
      *(_OWORD *)v32 = v36;
    }
    else
    {
      *(_BYTE *)v32 = *(_BYTE *)v33;
      *(_QWORD *)(v32 + 8) = *((_QWORD *)v33 + 1);
      *(_QWORD *)(v32 + 16) = *((_QWORD *)v33 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v35 == 1)
  {
    sub_1D57D9100(v32);
    v37 = *((_QWORD *)v33 + 2);
    *(_OWORD *)v32 = *v33;
    *(_QWORD *)(v32 + 16) = v37;
  }
  else
  {
    *(_BYTE *)v32 = *(_BYTE *)v33;
    *(_QWORD *)(v32 + 8) = *((_QWORD *)v33 + 1);
    *(_QWORD *)(v32 + 16) = *((_QWORD *)v33 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v38 = a3[8];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = *(_QWORD *)(a1 + v38 + 16);
  v42 = *(_QWORD *)(a2 + v38 + 16);
  if (v41)
  {
    if (v42)
    {
      *(_BYTE *)v39 = *(_BYTE *)v40;
      *(_BYTE *)(v39 + 1) = *(_BYTE *)(v40 + 1);
      *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
      *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v39 + 24) = *(_DWORD *)(v40 + 24);
      *(_DWORD *)(v39 + 28) = *(_DWORD *)(v40 + 28);
      *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v39 + 40) = *(_QWORD *)(v40 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v39 + 48) = *(_QWORD *)(v40 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v39 + 56) = *(_QWORD *)(v40 + 56);
      *(_QWORD *)(v39 + 64) = *(_QWORD *)(v40 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v39 + 72) = *(_QWORD *)(v40 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v39 + 80) = *(_BYTE *)(v40 + 80);
      *(_QWORD *)(v39 + 88) = *(_QWORD *)(v40 + 88);
      *(_QWORD *)(v39 + 96) = *(_QWORD *)(v40 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v43 = *(_QWORD *)(v40 + 104);
      *(_BYTE *)(v39 + 112) = *(_BYTE *)(v40 + 112);
      *(_QWORD *)(v39 + 104) = v43;
      *(_QWORD *)(v39 + 120) = *(_QWORD *)(v40 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v39 + 128) = *(_QWORD *)(v40 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v39);
      *(_OWORD *)v39 = *(_OWORD *)v40;
      v45 = *(_OWORD *)(v40 + 64);
      v47 = *(_OWORD *)(v40 + 16);
      v46 = *(_OWORD *)(v40 + 32);
      *(_OWORD *)(v39 + 48) = *(_OWORD *)(v40 + 48);
      *(_OWORD *)(v39 + 64) = v45;
      *(_OWORD *)(v39 + 16) = v47;
      *(_OWORD *)(v39 + 32) = v46;
      v49 = *(_OWORD *)(v40 + 96);
      v48 = *(_OWORD *)(v40 + 112);
      v50 = *(_OWORD *)(v40 + 80);
      *(_QWORD *)(v39 + 128) = *(_QWORD *)(v40 + 128);
      *(_OWORD *)(v39 + 96) = v49;
      *(_OWORD *)(v39 + 112) = v48;
      *(_OWORD *)(v39 + 80) = v50;
    }
  }
  else if (v42)
  {
    *(_BYTE *)v39 = *(_BYTE *)v40;
    *(_BYTE *)(v39 + 1) = *(_BYTE *)(v40 + 1);
    *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
    *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
    *(_DWORD *)(v39 + 24) = *(_DWORD *)(v40 + 24);
    *(_DWORD *)(v39 + 28) = *(_DWORD *)(v40 + 28);
    *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
    *(_QWORD *)(v39 + 40) = *(_QWORD *)(v40 + 40);
    *(_QWORD *)(v39 + 48) = *(_QWORD *)(v40 + 48);
    *(_QWORD *)(v39 + 56) = *(_QWORD *)(v40 + 56);
    *(_QWORD *)(v39 + 64) = *(_QWORD *)(v40 + 64);
    *(_QWORD *)(v39 + 72) = *(_QWORD *)(v40 + 72);
    *(_BYTE *)(v39 + 80) = *(_BYTE *)(v40 + 80);
    *(_QWORD *)(v39 + 88) = *(_QWORD *)(v40 + 88);
    *(_QWORD *)(v39 + 96) = *(_QWORD *)(v40 + 96);
    v44 = *(_QWORD *)(v40 + 104);
    *(_BYTE *)(v39 + 112) = *(_BYTE *)(v40 + 112);
    *(_QWORD *)(v39 + 104) = v44;
    *(_QWORD *)(v39 + 120) = *(_QWORD *)(v40 + 120);
    *(_QWORD *)(v39 + 128) = *(_QWORD *)(v40 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v39 = *(_OWORD *)v40;
    v51 = *(_OWORD *)(v40 + 16);
    v52 = *(_OWORD *)(v40 + 32);
    v53 = *(_OWORD *)(v40 + 64);
    *(_OWORD *)(v39 + 48) = *(_OWORD *)(v40 + 48);
    *(_OWORD *)(v39 + 64) = v53;
    *(_OWORD *)(v39 + 16) = v51;
    *(_OWORD *)(v39 + 32) = v52;
    v54 = *(_OWORD *)(v40 + 80);
    v55 = *(_OWORD *)(v40 + 96);
    v56 = *(_OWORD *)(v40 + 112);
    *(_QWORD *)(v39 + 128) = *(_QWORD *)(v40 + 128);
    *(_OWORD *)(v39 + 96) = v55;
    *(_OWORD *)(v39 + 112) = v56;
    *(_OWORD *)(v39 + 80) = v54;
  }
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v57 = a3[10];
  v58 = (_QWORD *)(a1 + v57);
  v59 = (_QWORD *)(a2 + v57);
  v60 = *(_QWORD *)(a1 + v57 + 8);
  v61 = *(_QWORD *)(a2 + v57 + 8);
  if (v60)
  {
    if (v61)
    {
      *v58 = *v59;
      v58[1] = v59[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v58[2] = v59[2];
      v58[3] = v59[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v58[4] = v59[4];
      v58[5] = v59[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5829E98((uint64_t)v58);
      v63 = *((_OWORD *)v59 + 1);
      v62 = *((_OWORD *)v59 + 2);
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v63;
      *((_OWORD *)v58 + 2) = v62;
    }
  }
  else if (v61)
  {
    *v58 = *v59;
    v58[1] = v59[1];
    v58[2] = v59[2];
    v58[3] = v59[3];
    v58[4] = v59[4];
    v58[5] = v59[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v64 = *(_OWORD *)v59;
    v65 = *((_OWORD *)v59 + 2);
    *((_OWORD *)v58 + 1) = *((_OWORD *)v59 + 1);
    *((_OWORD *)v58 + 2) = v65;
    *(_OWORD *)v58 = v64;
  }
  v66 = a3[11];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (_QWORD *)(a2 + v66);
  v69 = *(_QWORD *)(a1 + v66 + 24);
  v70 = *(_QWORD *)(a2 + v66 + 24);
  if (v69)
  {
    if (v70)
    {
      *v67 = *v68;
      v67[1] = v68[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v67[2] = v68[2];
      v67[3] = v68[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v67[4] = v68[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D58D7810((uint64_t)v67);
      v71 = v68[4];
      v72 = *((_OWORD *)v68 + 1);
      *(_OWORD *)v67 = *(_OWORD *)v68;
      *((_OWORD *)v67 + 1) = v72;
      v67[4] = v71;
    }
  }
  else if (v70)
  {
    *v67 = *v68;
    v67[1] = v68[1];
    v67[2] = v68[2];
    v67[3] = v68[3];
    v67[4] = v68[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v73 = *(_OWORD *)v68;
    v74 = *((_OWORD *)v68 + 1);
    v67[4] = v68[4];
    *(_OWORD *)v67 = v73;
    *((_OWORD *)v67 + 1) = v74;
  }
  v75 = a3[12];
  v76 = a1 + v75;
  v77 = a2 + v75;
  *(_QWORD *)v76 = *(_QWORD *)(a2 + v75);
  *(_QWORD *)(v76 + 8) = *(_QWORD *)(a2 + v75 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v78 = *(_QWORD *)(v77 + 16);
  *(_BYTE *)(v76 + 24) = *(_BYTE *)(v77 + 24);
  *(_QWORD *)(v76 + 16) = v78;
  v79 = a3[13];
  v80 = a1 + v79;
  v81 = a2 + v79;
  *(_QWORD *)v80 = *(_QWORD *)(a2 + v79);
  *(_QWORD *)(v80 + 8) = *(_QWORD *)(a2 + v79 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v80 + 16) = *(_BYTE *)(v81 + 16);
  *(_BYTE *)(v80 + 17) = *(_BYTE *)(v81 + 17);
  v82 = a3[14];
  v83 = a1 + v82;
  v84 = a2 + v82;
  *(_QWORD *)v83 = *(_QWORD *)(a2 + v82);
  *(_QWORD *)(v83 + 8) = *(_QWORD *)(a2 + v82 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v83 + 16) = *(_BYTE *)(v84 + 16);
  v85 = a3[15];
  v86 = (_QWORD *)(a1 + v85);
  v87 = (_QWORD *)(a2 + v85);
  *v86 = *v87;
  v86[1] = v87[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v88 = a3[16];
  v89 = (_BYTE *)(a1 + v88);
  v90 = (_BYTE *)(a2 + v88);
  *v89 = *v90;
  v89[1] = v90[1];
  v91 = a3[17];
  v92 = a1 + v91;
  v93 = a2 + v91;
  v94 = *(_QWORD *)(a1 + v91 + 8);
  v95 = *(_QWORD *)(a2 + v91 + 8);
  if (v94)
  {
    if (v95)
    {
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *(_QWORD *)(v92 + 8) = *(_QWORD *)(v93 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v92 + 16) = *(_BYTE *)(v93 + 16);
      *(_BYTE *)(v92 + 17) = *(_BYTE *)(v93 + 17);
      *(_QWORD *)(v92 + 24) = *(_QWORD *)(v93 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v92);
      v96 = *(_OWORD *)(v93 + 16);
      *(_OWORD *)v92 = *(_OWORD *)v93;
      *(_OWORD *)(v92 + 16) = v96;
    }
  }
  else if (v95)
  {
    *(_QWORD *)v92 = *(_QWORD *)v93;
    *(_QWORD *)(v92 + 8) = *(_QWORD *)(v93 + 8);
    *(_BYTE *)(v92 + 16) = *(_BYTE *)(v93 + 16);
    *(_BYTE *)(v92 + 17) = *(_BYTE *)(v93 + 17);
    *(_QWORD *)(v92 + 24) = *(_QWORD *)(v93 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v97 = *(_OWORD *)(v93 + 16);
    *(_OWORD *)v92 = *(_OWORD *)v93;
    *(_OWORD *)(v92 + 16) = v97;
  }
  v98 = a3[18];
  v99 = a1 + v98;
  v100 = (__int128 *)(a2 + v98);
  v101 = *(_QWORD *)(a1 + v98 + 8);
  v102 = *((_QWORD *)v100 + 1);
  if (v101 == 1)
  {
    if (v102 == 1)
    {
      v103 = *v100;
      v104 = v100[1];
      *(_QWORD *)(v99 + 32) = *((_QWORD *)v100 + 4);
      *(_OWORD *)v99 = v103;
      *(_OWORD *)(v99 + 16) = v104;
    }
    else
    {
      *(_QWORD *)v99 = *(_QWORD *)v100;
      *(_QWORD *)(v99 + 8) = *((_QWORD *)v100 + 1);
      *(_QWORD *)(v99 + 16) = *((_QWORD *)v100 + 2);
      *(_QWORD *)(v99 + 24) = *((_QWORD *)v100 + 3);
      *(_QWORD *)(v99 + 32) = *((_QWORD *)v100 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v102 == 1)
  {
    sub_1D57EE4B0(v99);
    v105 = *((_QWORD *)v100 + 4);
    v106 = v100[1];
    *(_OWORD *)v99 = *v100;
    *(_OWORD *)(v99 + 16) = v106;
    *(_QWORD *)(v99 + 32) = v105;
  }
  else
  {
    *(_QWORD *)v99 = *(_QWORD *)v100;
    *(_QWORD *)(v99 + 8) = *((_QWORD *)v100 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v99 + 16) = *((_QWORD *)v100 + 2);
    *(_QWORD *)(v99 + 24) = *((_QWORD *)v100 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v99 + 32) = *((_QWORD *)v100 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t initializeWithTake for SubscriptionWebAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  _OWORD *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v22 = a1 + v19;
  v23 = a2 + v19;
  v24 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v24;
  *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
  v25 = *(_OWORD *)(v23 + 112);
  *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 112) = v25;
  v26 = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 80) = v26;
  v27 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v27;
  v28 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v29 = (_OWORD *)(a1 + v28);
  v30 = (_OWORD *)(a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v29[2] = v30[2];
  v32 = a3[11];
  v33 = a3[12];
  v34 = a1 + v32;
  v35 = a2 + v32;
  v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  v37 = (_OWORD *)(a1 + v33);
  v38 = (_OWORD *)(a2 + v33);
  *v37 = *v38;
  *(_OWORD *)((char *)v37 + 9) = *(_OWORD *)((char *)v38 + 9);
  v39 = a3[13];
  v40 = a3[14];
  v41 = a1 + v39;
  v42 = a2 + v39;
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_WORD *)(v41 + 16) = *(_WORD *)(v42 + 16);
  v43 = a1 + v40;
  v44 = (__int128 *)(a2 + v40);
  v45 = *v44;
  *(_BYTE *)(v43 + 16) = *((_BYTE *)v44 + 16);
  *(_OWORD *)v43 = v45;
  v46 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_WORD *)(a1 + v46) = *(_WORD *)(a2 + v46);
  v47 = a3[17];
  v48 = a3[18];
  v49 = (_OWORD *)(a1 + v47);
  v50 = (_OWORD *)(a2 + v47);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v52 = a1 + v48;
  v53 = a2 + v48;
  *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
  v54 = *(_OWORD *)(v53 + 16);
  *(_OWORD *)v52 = *(_OWORD *)v53;
  *(_OWORD *)(v52 + 16) = v54;
  return a1;
}

uint64_t assignWithTake for SubscriptionWebAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 24))
  {
    v10 = *(_QWORD *)(v9 + 24);
    if (v10)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
      *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v10;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 48);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = v11;
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
      *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
      *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
      *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
      goto LABEL_6;
    }
    sub_1D5810518(v8);
  }
  v12 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v12;
  *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
  v13 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v13;
  v14 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v14;
  v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
LABEL_6:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  if (*(_QWORD *)(a1 + v21 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
    goto LABEL_11;
  }
  v24 = *(_QWORD *)(v23 + 16);
  if (v24 == 1)
  {
    sub_1D57D9100(v22);
    goto LABEL_9;
  }
  *(_BYTE *)v22 = *(_BYTE *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 16) = v24;
  swift_bridgeObjectRelease();
LABEL_11:
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  if (*(_QWORD *)(a1 + v25 + 16))
  {
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      *(_WORD *)v26 = *(_WORD *)v27;
      *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
      *(_QWORD *)(v26 + 16) = v28;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 24) = *(_QWORD *)(v27 + 24);
      *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 40) = *(_QWORD *)(v27 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 48) = *(_QWORD *)(v27 + 48);
      swift_bridgeObjectRelease();
      v29 = *(_QWORD *)(v27 + 64);
      *(_QWORD *)(v26 + 56) = *(_QWORD *)(v27 + 56);
      *(_QWORD *)(v26 + 64) = v29;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 72) = *(_QWORD *)(v27 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v26 + 80) = *(_BYTE *)(v27 + 80);
      v30 = *(_QWORD *)(v27 + 96);
      *(_QWORD *)(v26 + 88) = *(_QWORD *)(v27 + 88);
      *(_QWORD *)(v26 + 96) = v30;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 104) = *(_QWORD *)(v27 + 104);
      *(_BYTE *)(v26 + 112) = *(_BYTE *)(v27 + 112);
      *(_QWORD *)(v26 + 120) = *(_QWORD *)(v27 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 128) = *(_QWORD *)(v27 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57E17B8(v26);
  }
  v31 = *(_OWORD *)(v27 + 112);
  *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
  *(_OWORD *)(v26 + 112) = v31;
  *(_QWORD *)(v26 + 128) = *(_QWORD *)(v27 + 128);
  v32 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v32;
  v33 = *(_OWORD *)(v27 + 80);
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
  *(_OWORD *)(v26 + 80) = v33;
  v34 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v34;
LABEL_16:
  v35 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  if (*(_QWORD *)(a1 + v35 + 8))
  {
    v38 = v37[1];
    if (v38)
    {
      *v36 = *v37;
      v36[1] = v38;
      swift_bridgeObjectRelease();
      v39 = v37[3];
      v36[2] = v37[2];
      v36[3] = v39;
      swift_bridgeObjectRelease();
      v40 = v37[5];
      v36[4] = v37[4];
      v36[5] = v40;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D5829E98(a1 + v35);
  }
  v41 = *((_OWORD *)v37 + 1);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *((_OWORD *)v36 + 1) = v41;
  *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
LABEL_21:
  v42 = a3[11];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  if (*(_QWORD *)(a1 + v42 + 24))
  {
    if (v44[3])
    {
      v45 = v44[1];
      *v43 = *v44;
      v43[1] = v45;
      swift_bridgeObjectRelease();
      v46 = v44[3];
      v43[2] = v44[2];
      v43[3] = v46;
      swift_bridgeObjectRelease();
      v43[4] = v44[4];
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1D58D7810((uint64_t)v43);
  }
  v47 = *((_OWORD *)v44 + 1);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *((_OWORD *)v43 + 1) = v47;
  v43[4] = v44[4];
LABEL_26:
  v48 = a3[12];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)(a2 + v48 + 8);
  *(_QWORD *)v49 = *(_QWORD *)(a2 + v48);
  *(_QWORD *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
  *(_BYTE *)(v49 + 24) = *(_BYTE *)(v50 + 24);
  v52 = a3[13];
  v53 = a1 + v52;
  v54 = a2 + v52;
  v55 = *(_QWORD *)(a2 + v52 + 8);
  *(_QWORD *)v53 = *(_QWORD *)(a2 + v52);
  *(_QWORD *)(v53 + 8) = v55;
  swift_bridgeObjectRelease();
  *(_WORD *)(v53 + 16) = *(_WORD *)(v54 + 16);
  v56 = a3[14];
  v57 = a1 + v56;
  v58 = a2 + v56;
  v59 = *(_QWORD *)(a2 + v56 + 8);
  *(_QWORD *)v57 = *(_QWORD *)(a2 + v56);
  *(_QWORD *)(v57 + 8) = v59;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v57 + 16) = *(_BYTE *)(v58 + 16);
  v60 = a3[15];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (uint64_t *)(a2 + v60);
  v64 = *v62;
  v63 = v62[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  v65 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  v66 = a1 + v65;
  v67 = a2 + v65;
  if (*(_QWORD *)(a1 + v65 + 8))
  {
    v68 = *(_QWORD *)(v67 + 8);
    if (v68)
    {
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *(_QWORD *)(v66 + 8) = v68;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v66 + 16) = *(_BYTE *)(v67 + 16);
      *(_BYTE *)(v66 + 17) = *(_BYTE *)(v67 + 17);
      *(_QWORD *)(v66 + 24) = *(_QWORD *)(v67 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_1D57EE47C(a1 + v65);
  }
  v69 = *(_OWORD *)(v67 + 16);
  *(_OWORD *)v66 = *(_OWORD *)v67;
  *(_OWORD *)(v66 + 16) = v69;
LABEL_31:
  v70 = a3[18];
  v71 = (_QWORD *)(a1 + v70);
  v72 = (_QWORD *)(a2 + v70);
  if (*(_QWORD *)(a1 + v70 + 8) != 1)
  {
    v73 = v72[1];
    if (v73 != 1)
    {
      *v71 = *v72;
      v71[1] = v73;
      swift_bridgeObjectRelease();
      v75 = v72[3];
      v71[2] = v72[2];
      v71[3] = v75;
      swift_bridgeObjectRelease();
      v71[4] = v72[4];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D57EE4B0((uint64_t)v71);
  }
  v74 = *((_OWORD *)v72 + 1);
  *(_OWORD *)v71 = *(_OWORD *)v72;
  *((_OWORD *)v71 + 1) = v74;
  v71[4] = v72[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionWebAuthenticationEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5919650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionWebAuthenticationEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59196DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5919758()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubscriptionWebAuthenticationEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1D5919898 + 4 * byte_1D5ACAA94[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1D59198CC + 4 * byte_1D5ACAA8F[v4]))();
}

uint64_t sub_1D59198CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59198D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59198DCLL);
  return result;
}

uint64_t sub_1D59198E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59198F0);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1D59198F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59198FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionWebAuthenticationEvent.Model.CodingKeys()
{
  return &type metadata for SubscriptionWebAuthenticationEvent.Model.CodingKeys;
}

unint64_t sub_1D591991C()
{
  unint64_t result;

  result = qword_1EFF4CE00;
  if (!qword_1EFF4CE00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACAE3C, &type metadata for SubscriptionWebAuthenticationEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CE00);
  }
  return result;
}

unint64_t sub_1D5919964()
{
  unint64_t result;

  result = qword_1EFF4CE08;
  if (!qword_1EFF4CE08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACADAC, &type metadata for SubscriptionWebAuthenticationEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CE08);
  }
  return result;
}

unint64_t sub_1D59199AC()
{
  unint64_t result;

  result = qword_1EFF4CE10;
  if (!qword_1EFF4CE10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACADD4, &type metadata for SubscriptionWebAuthenticationEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CE10);
  }
  return result;
}

uint64_t sub_1D59199F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6144746C75736572 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AED700 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED320)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_1D591A080(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4CE18, MEMORY[0x1E0CF8078]);
}

uint64_t static AudioEngagementBeginEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF471F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4CE18, a1);
}

uint64_t sub_1D591A0C0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4CE30, MEMORY[0x1E0CF8380]);
}

uint64_t static AudioEngagementBeginEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47200, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4CE30, a1);
}

uint64_t AudioEngagementBeginEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AudioEngagementBeginEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AudioEngagementBeginEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AudioEngagementBeginEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4CEB8);
}

uint64_t AudioEngagementBeginEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.articleData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.channelData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.groupData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.feedData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.trackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.trackData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.audioEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.audioEngagementData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.viewData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.articleScienceData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.issueData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.issueViewData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.playbackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.playbackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.playbackData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.audioEngagementOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.audioEngagementOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.audioEngagementOriginationData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.userChannelContextData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AudioEngagementBeginEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v10, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v2, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v2, v31);
  v32 = a1 + v4[18];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v32, v2, v33);
}

uint64_t AudioEngagementBeginEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AudioEngagementBeginEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t type metadata accessor for AudioEngagementBeginEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4CF80);
}

uint64_t AudioEngagementBeginEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *AudioEngagementBeginEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 28), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t AudioEngagementBeginEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t AudioEngagementBeginEvent.Model.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 40);
  v4 = *(_BYTE *)(v3 + 16);
  v5 = *(_DWORD *)(v3 + 20);
  v7 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v8 = *(_WORD *)(v3 + 40);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 20) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = v8;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementBeginEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementBeginEvent.Model.articleScienceData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE __dst[280];

  v3 = (const void *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 48));
  memcpy(__dst, v3, 0x111uLL);
  memcpy(a1, v3, 0x111uLL);
  return sub_1D57D42AC((uint64_t)__dst);
}

uint64_t AudioEngagementBeginEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 52));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementBeginEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t AudioEngagementBeginEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 60));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

float AudioEngagementBeginEvent.Model.playbackData.getter@<S0>(float *a1@<X8>)
{
  uint64_t v1;
  float result;

  result = *(float *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 64));
  *a1 = result;
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.audioEngagementOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 68));
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 72));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

__n128 AudioEngagementBeginEvent.Model.init(eventData:articleData:channelData:groupData:feedData:trackData:audioEngagementData:viewData:articleScienceData:userBundleSubscriptionContextData:issueData:issueViewData:playbackData:audioEngagementOriginationData:userChannelContextData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X4>, int *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, const void *a10, char *a11, __n128 *a12, uint64_t *a13, int *a14, char *a15, char *a16)
{
  uint64_t v21;
  char v22;
  int v23;
  char v24;
  char v25;
  __int16 v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 *v36;
  __n128 result;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  unint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  _BYTE v77[23];
  _BYTE v78[136];
  _BYTE __dst[273];

  v76 = a2[6];
  *(_OWORD *)v77 = a2[7];
  *(_QWORD *)&v77[15] = *(_QWORD *)((char *)a2 + 127);
  v72 = a2[2];
  v73 = a2[3];
  v74 = a2[4];
  v75 = a2[5];
  v70 = *a2;
  v71 = a2[1];
  v45 = a3[1];
  v46 = *a3;
  v43 = *((_BYTE *)a3 + 17);
  v44 = *((_BYTE *)a3 + 16);
  v41 = a3[4];
  v42 = a3[3];
  sub_1D57DD5B8(a4, (uint64_t)v78);
  v47 = *a5;
  v21 = *((_QWORD *)a5 + 2);
  v48 = *a6;
  LOBYTE(a6) = *((_BYTE *)a6 + 4);
  v53 = a7[1];
  v54 = *a7;
  v51 = *((_DWORD *)a7 + 5);
  v52 = *((_BYTE *)a7 + 16);
  v49 = a7[4];
  v50 = a7[3];
  LOWORD(a7) = *((_WORD *)a7 + 20);
  v55 = a8[1];
  v56 = *a8;
  LOWORD(a8) = *((_WORD *)a8 + 8);
  memcpy(__dst, a10, sizeof(__dst));
  v63 = *a11;
  v61 = *((_QWORD *)a11 + 2);
  v62 = *((_QWORD *)a11 + 1);
  v60 = a11[24];
  v22 = a11[25];
  v58 = *((_QWORD *)a11 + 5);
  v59 = *((_QWORD *)a11 + 4);
  v57 = a11[48];
  v66 = *a12;
  v64 = a12[1].n128_u64[1];
  v65 = a12[1].n128_u64[0];
  v67 = a13[1];
  v68 = *a13;
  v23 = *a14;
  v69 = *a15;
  v24 = *a16;
  v25 = a16[1];
  v26 = *((_WORD *)a16 + 1);
  v27 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a9, a1, v27);
  v28 = (int *)type metadata accessor for AudioEngagementBeginEvent.Model(0);
  v29 = a9 + v28[5];
  *(_OWORD *)(v29 + 96) = v76;
  *(_OWORD *)(v29 + 112) = *(_OWORD *)v77;
  *(_QWORD *)(v29 + 127) = *(_QWORD *)&v77[15];
  *(_OWORD *)(v29 + 32) = v72;
  *(_OWORD *)(v29 + 48) = v73;
  *(_OWORD *)(v29 + 64) = v74;
  *(_OWORD *)(v29 + 80) = v75;
  *(_OWORD *)v29 = v70;
  *(_OWORD *)(v29 + 16) = v71;
  v30 = a9 + v28[6];
  *(_QWORD *)v30 = v46;
  *(_QWORD *)(v30 + 8) = v45;
  *(_BYTE *)(v30 + 16) = v44;
  *(_BYTE *)(v30 + 17) = v43;
  *(_QWORD *)(v30 + 24) = v42;
  *(_QWORD *)(v30 + 32) = v41;
  sub_1D57DD5B8((uint64_t)v78, a9 + v28[7]);
  v31 = a9 + v28[8];
  *(_OWORD *)v31 = v47;
  *(_QWORD *)(v31 + 16) = v21;
  v32 = a9 + v28[9];
  *(_DWORD *)v32 = v48;
  *(_BYTE *)(v32 + 4) = (_BYTE)a6;
  v33 = a9 + v28[10];
  *(_QWORD *)v33 = v54;
  *(_QWORD *)(v33 + 8) = v53;
  *(_BYTE *)(v33 + 16) = v52;
  *(_DWORD *)(v33 + 20) = v51;
  *(_QWORD *)(v33 + 24) = v50;
  *(_QWORD *)(v33 + 32) = v49;
  *(_WORD *)(v33 + 40) = (_WORD)a7;
  v34 = a9 + v28[11];
  *(_QWORD *)v34 = v56;
  *(_QWORD *)(v34 + 8) = v55;
  *(_WORD *)(v34 + 16) = (_WORD)a8;
  memcpy((void *)(a9 + v28[12]), __dst, 0x111uLL);
  v35 = a9 + v28[13];
  *(_BYTE *)v35 = v63;
  *(_QWORD *)(v35 + 8) = v62;
  *(_QWORD *)(v35 + 16) = v61;
  *(_BYTE *)(v35 + 24) = v60;
  *(_BYTE *)(v35 + 25) = v22;
  *(_QWORD *)(v35 + 32) = v59;
  *(_QWORD *)(v35 + 40) = v58;
  *(_BYTE *)(v35 + 48) = v57;
  v36 = (__n128 *)(a9 + v28[14]);
  result = v66;
  *v36 = v66;
  v36[1].n128_u64[0] = v65;
  v36[1].n128_u64[1] = v64;
  v38 = (_QWORD *)(a9 + v28[15]);
  *v38 = v68;
  v38[1] = v67;
  *(_DWORD *)(a9 + v28[16]) = v23;
  *(_BYTE *)(a9 + v28[17]) = v69;
  v39 = a9 + v28[18];
  *(_BYTE *)v39 = v24;
  *(_BYTE *)(v39 + 1) = v25;
  *(_WORD *)(v39 + 2) = v26;
  return result;
}

uint64_t sub_1D591BAF8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D591BB30 + 4 * byte_1D5ACAEC0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D591BB30()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D591BB64()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D591BB78()
{
  return 0x6174614464656566;
}

unint64_t sub_1D591BBCC()
{
  return 0xD000000000000012;
}

unint64_t sub_1D591BBE8()
{
  return 0xD000000000000021;
}

uint64_t sub_1D591BC00()
{
  return 0x7461446575737369;
}

uint64_t sub_1D591BC14()
{
  return 0x6569566575737369;
}

uint64_t sub_1D591BC38()
{
  return 0x6B63616279616C70;
}

unint64_t sub_1D591BC58()
{
  return 0xD00000000000001ELL;
}

void sub_1D591BC70()
{
  JUMPOUT(0x1D591BC84);
}

uint64_t sub_1D591BC90()
{
  unsigned __int8 *v0;

  return sub_1D591BAF8(*v0);
}

uint64_t sub_1D591BC98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5921784(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D591BCBC()
{
  sub_1D591C2E0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D591BCE4()
{
  sub_1D591C2E0();
  return sub_1D5AAEEE0();
}

uint64_t AudioEngagementBeginEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  int v26;
  uint64_t v27;
  char v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  __int128 *v33;
  __int16 v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  _OWORD *v39;
  __int128 v40;
  char *v41;
  char v42;
  char v43;
  uint64_t v45;
  char v46;
  _BYTE v47[273];
  char v48;
  __int128 v49;
  __int16 v50;
  _BYTE v51[144];
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;

  v3 = v1;
  sub_1D591CDAC(0, &qword_1EFF4CE48, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v45 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D591C2E0();
  sub_1D5AAEEC8();
  v58 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AudioEngagementBeginEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_OWORD *)(v11 + 112);
    *(_OWORD *)&v47[96] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)&v47[112] = v12;
    *(_QWORD *)&v47[127] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    *(_OWORD *)&v47[32] = *(_OWORD *)(v11 + 32);
    *(_OWORD *)&v47[48] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    *(_OWORD *)&v47[64] = *(_OWORD *)(v11 + 64);
    *(_OWORD *)&v47[80] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v47 = *(_OWORD *)v11;
    *(_OWORD *)&v47[16] = v15;
    v51[0] = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[6]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    v52 = v17;
    v53 = v18;
    v54 = v19;
    v55 = v20;
    v56 = v22;
    v57 = v21;
    v51[143] = 2;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[7], (uint64_t)v51);
    sub_1D57DD5B8((uint64_t)v51, (uint64_t)v47);
    LOBYTE(v49) = 3;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v23 = v3 + v10[8];
    v24 = *(_QWORD *)(v23 + 16);
    *(_OWORD *)v47 = *(_OWORD *)v23;
    *(_QWORD *)&v47[16] = v24;
    LOBYTE(v49) = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v25 = (int *)(v3 + v10[9]);
    v26 = *v25;
    LOBYTE(v25) = *((_BYTE *)v25 + 4);
    *(_DWORD *)v47 = v26;
    v47[4] = (_BYTE)v25;
    LOBYTE(v49) = 5;
    sub_1D57C5E0C();
    sub_1D5AAED6C();
    v27 = v3 + v10[10];
    v28 = *(_BYTE *)(v27 + 16);
    v29 = *(_DWORD *)(v27 + 20);
    v30 = *(_QWORD *)(v27 + 24);
    v31 = *(_QWORD *)(v27 + 32);
    v32 = *(_WORD *)(v27 + 40);
    *(_OWORD *)v47 = *(_OWORD *)v27;
    v47[16] = v28;
    *(_DWORD *)&v47[20] = v29;
    *(_QWORD *)&v47[24] = v30;
    *(_QWORD *)&v47[32] = v31;
    *(_WORD *)&v47[40] = v32;
    LOBYTE(v49) = 6;
    sub_1D57C8D54();
    sub_1D5AAED6C();
    v33 = (__int128 *)(v3 + v10[11]);
    v34 = *((_WORD *)v33 + 8);
    v49 = *v33;
    v50 = v34;
    v48 = 7;
    sub_1D57C62A4();
    sub_1D5AAED18();
    memcpy(v47, (const void *)(v3 + v10[12]), sizeof(v47));
    v46 = 8;
    sub_1D57CB7A8();
    sub_1D5AAED6C();
    v35 = v3 + v10[13];
    v36 = *(_BYTE *)(v35 + 24);
    v37 = *(_BYTE *)(v35 + 25);
    v38 = *(_BYTE *)(v35 + 48);
    v47[0] = *(_BYTE *)v35;
    *(_OWORD *)&v47[8] = *(_OWORD *)(v35 + 8);
    v47[24] = v36;
    v47[25] = v37;
    *(_OWORD *)&v47[32] = *(_OWORD *)(v35 + 32);
    v47[48] = v38;
    v46 = 9;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v39 = (_OWORD *)(v3 + v10[14]);
    v40 = v39[1];
    *(_OWORD *)v47 = *v39;
    *(_OWORD *)&v47[16] = v40;
    v46 = 10;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    *(_OWORD *)v47 = *(_OWORD *)(v3 + v10[15]);
    v46 = 11;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    *(_DWORD *)v47 = *(_DWORD *)(v3 + v10[16]);
    v46 = 12;
    sub_1D57CB3C8();
    sub_1D5AAED6C();
    v47[0] = *(_BYTE *)(v3 + v10[17]);
    v46 = 13;
    sub_1D57C6C7C();
    sub_1D5AAED6C();
    v41 = (char *)(v3 + v10[18]);
    v42 = *v41;
    v43 = v41[1];
    LOWORD(v41) = *((_WORD *)v41 + 1);
    v47[0] = v42;
    v47[1] = v43;
    *(_WORD *)&v47[2] = (_WORD)v41;
    v46 = 14;
    sub_1D57C7B24();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D591C2E0()
{
  unint64_t result;

  result = qword_1EFF4CE50;
  if (!qword_1EFF4CE50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB27C, &type metadata for AudioEngagementBeginEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CE50);
  }
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  char *v14;
  uint64_t result;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int *v27;
  char *v28;
  int *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char v43;
  char *v44;
  char v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  char *v50;
  __int16 v51;
  char *v52;
  char v53;
  char v54;
  char v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  __int16 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BOOL4 v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char v79;
  _OWORD v80[3];
  char v81;
  char v82;
  _BYTE v83[144];
  _BYTE v84[144];
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _BYTE v92[23];
  _OWORD v93[19];
  int *v94;

  v70 = a2;
  v4 = sub_1D5AADF98();
  v73 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D591CDAC(0, &qword_1EFF4CE58, MEMORY[0x1E0DED048]);
  v74 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v68 - v9;
  v94 = (int *)type metadata accessor for AudioEngagementBeginEvent.Model(0);
  MEMORY[0x1E0C80A78](v94);
  v78 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v76 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D591C2E0();
  v71 = v10;
  sub_1D5AAEEB0();
  v72 = v4;
  if (v2)
  {
    v77 = v2;
    LODWORD(v74) = 0;
    v13 = 0;
  }
  else
  {
    v69 = v8;
    LOBYTE(v93[0]) = 0;
    sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v28 = v78;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v78, v6, v4);
    v84[143] = 1;
    sub_1D57CB8FC();
    sub_1D5AAECD0();
    v29 = v94;
    v30 = &v28[v94[5]];
    v31 = *(_OWORD *)v92;
    *((_OWORD *)v30 + 6) = v91;
    *((_OWORD *)v30 + 7) = v31;
    *(_QWORD *)(v30 + 127) = *(_QWORD *)&v92[15];
    v32 = v88;
    *((_OWORD *)v30 + 2) = v87;
    *((_OWORD *)v30 + 3) = v32;
    v33 = v90;
    *((_OWORD *)v30 + 4) = v89;
    *((_OWORD *)v30 + 5) = v33;
    v34 = v86;
    *(_OWORD *)v30 = v85;
    *((_OWORD *)v30 + 1) = v34;
    v84[0] = 2;
    sub_1D57CB874();
    sub_1D5AAECD0();
    v35 = *((_QWORD *)&v93[0] + 1);
    v36 = v93[1];
    v37 = BYTE1(v93[1]);
    v38 = *((_QWORD *)&v93[1] + 1);
    v39 = *(_QWORD *)&v93[2];
    v40 = &v28[v29[6]];
    *(_QWORD *)v40 = *(_QWORD *)&v93[0];
    *((_QWORD *)v40 + 1) = v35;
    v40[16] = v36;
    v40[17] = v37;
    *((_QWORD *)v40 + 3) = v38;
    *((_QWORD *)v40 + 4) = v39;
    v83[143] = 3;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57DD5B8((uint64_t)v84, (uint64_t)v83);
    sub_1D57DD5B8((uint64_t)v83, (uint64_t)&v28[v29[7]]);
    LOBYTE(v80[0]) = 4;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v41 = *(_QWORD *)&v93[1];
    v42 = &v28[v29[8]];
    *(_OWORD *)v42 = v93[0];
    *((_QWORD *)v42 + 2) = v41;
    LOBYTE(v80[0]) = 5;
    sub_1D57C5DC8();
    sub_1D5AAECD0();
    v43 = BYTE4(v93[0]);
    v44 = &v28[v29[9]];
    *(_DWORD *)v44 = v93[0];
    v44[4] = v43;
    LOBYTE(v80[0]) = 6;
    sub_1D57C8D10();
    sub_1D5AAECD0();
    v45 = v93[1];
    v46 = DWORD1(v93[1]);
    v47 = *((_QWORD *)&v93[1] + 1);
    v48 = *(_QWORD *)&v93[2];
    v49 = WORD4(v93[2]);
    v50 = &v28[v29[10]];
    *(_OWORD *)v50 = v93[0];
    v50[16] = v45;
    *((_DWORD *)v50 + 5) = v46;
    *((_QWORD *)v50 + 3) = v47;
    *((_QWORD *)v50 + 4) = v48;
    *((_WORD *)v50 + 20) = v49;
    LOBYTE(v80[0]) = 7;
    sub_1D57C6260();
    sub_1D5AAEC7C();
    v51 = v93[1];
    v52 = &v28[v94[11]];
    *(_OWORD *)v52 = v93[0];
    *((_WORD *)v52 + 8) = v51;
    v82 = 8;
    sub_1D57CB764();
    sub_1D5AAECD0();
    memcpy(&v28[v94[12]], v93, 0x111uLL);
    v79 = 9;
    sub_1D57C6AF8();
    sub_1D5AAECD0();
    v77 = 0;
    v53 = BYTE8(v80[1]);
    v54 = BYTE9(v80[1]);
    v55 = v81;
    v56 = &v78[v94[13]];
    *v56 = v80[0];
    *(_OWORD *)(v56 + 8) = *(_OWORD *)((char *)v80 + 8);
    v56[24] = v53;
    v56[25] = v54;
    *((_OWORD *)v56 + 2) = v80[2];
    v56[48] = v55;
    v79 = 10;
    sub_1D57C5ED8();
    v57 = v77;
    sub_1D5AAEC7C();
    v77 = v57;
    if (!v57)
    {
      v58 = &v78[v94[14]];
      v59 = v80[1];
      *(_OWORD *)v58 = v80[0];
      *((_OWORD *)v58 + 1) = v59;
      v79 = 11;
      sub_1D57CAD28();
      v60 = v77;
      sub_1D5AAEC7C();
      v75 = v60 == 0;
      v77 = v60;
      if (!v60)
      {
        *(_OWORD *)&v78[v94[15]] = v80[0];
        v79 = 12;
        sub_1D57CB384();
        v61 = v77;
        sub_1D5AAECD0();
        v77 = v61;
        if (!v61)
        {
          *(_DWORD *)&v78[v94[16]] = v80[0];
          v79 = 13;
          sub_1D57C6C38();
          v62 = v77;
          sub_1D5AAECD0();
          v77 = v62;
          if (!v62)
          {
            v78[v94[17]] = v80[0];
            v79 = 14;
            sub_1D57C7AE0();
            v63 = v77;
            sub_1D5AAECD0();
            v77 = v63;
            if (!v63)
            {
              (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v74);
              v64 = BYTE1(v80[0]);
              v65 = WORD1(v80[0]);
              v66 = (uint64_t)v78;
              v67 = &v78[v94[18]];
              *v67 = v80[0];
              v67[1] = v64;
              *((_WORD *)v67 + 1) = v65;
              sub_1D591CE08(v66, v70);
              __swift_destroy_boxed_opaque_existential_1(v76);
              return sub_1D591CE4C(v66);
            }
          }
        }
      }
      (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v74);
      __swift_destroy_boxed_opaque_existential_1(v76);
      v14 = v78;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v78, v72);
      LODWORD(v76) = 1;
      LODWORD(v74) = 1;
      v21 = 1;
      v20 = 1;
      v19 = 1;
      v18 = 1;
      v17 = 1;
      LOBYTE(v16) = 1;
LABEL_7:
      v22 = &v14[v94[5]];
      v23 = *((_OWORD *)v22 + 4);
      v93[5] = *((_OWORD *)v22 + 5);
      v24 = *((_OWORD *)v22 + 7);
      v93[6] = *((_OWORD *)v22 + 6);
      v93[7] = v24;
      *(_QWORD *)((char *)&v93[7] + 15) = *(_QWORD *)(v22 + 127);
      v25 = *((_OWORD *)v22 + 3);
      v93[2] = *((_OWORD *)v22 + 2);
      v93[3] = v25;
      v93[4] = v23;
      v26 = *((_OWORD *)v22 + 1);
      v93[0] = *(_OWORD *)v22;
      v93[1] = v26;
      result = sub_1D57D5AE0((uint64_t)v93);
      if ((v16 & 1) != 0)
        goto LABEL_8;
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v74);
    v13 = 991;
    LODWORD(v74) = 1;
  }
  v14 = v78;
  result = __swift_destroy_boxed_opaque_existential_1(v76);
  v16 = (v13 >> 2) & 1;
  v17 = (v13 >> 3) & 1;
  v18 = (v13 >> 4) & 1;
  v19 = (v13 >> 6) & 1;
  v20 = (v13 >> 7) & 1;
  v21 = (v13 >> 8) & 1;
  if ((v13 & 1) != 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v14, v72);
    if ((v13 & 2) != 0)
      goto LABEL_6;
  }
  else if ((v13 & 2) != 0)
  {
LABEL_6:
    v75 = 0;
    LODWORD(v76) = 0;
    goto LABEL_7;
  }
  v75 = 0;
  LODWORD(v76) = 0;
  if ((v13 & 4) != 0)
  {
LABEL_8:
    v27 = v94;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  v27 = v94;
  if (!v17)
  {
LABEL_9:
    if (v18)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  sub_1D57DD5B8((uint64_t)&v14[v27[7]], (uint64_t)v93);
  result = (uint64_t)sub_1D57DE9C8(v93, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
  if ((v18 & 1) != 0)
  {
LABEL_10:
    result = sub_1D57DAEDC(*(_QWORD *)&v14[v27[8]], *(_QWORD *)&v14[v27[8] + 8], *(_QWORD *)&v14[v27[8] + 16]);
    if ((v19 & 1) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  if (!v19)
  {
LABEL_11:
    if (v20)
      goto LABEL_12;
    goto LABEL_23;
  }
LABEL_22:
  result = swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
LABEL_12:
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      goto LABEL_13;
    goto LABEL_24;
  }
LABEL_23:
  if (!v21)
  {
LABEL_13:
    if ((_DWORD)v74)
      goto LABEL_14;
    goto LABEL_25;
  }
LABEL_24:
  memcpy(v93, &v14[v27[12]], 0x111uLL);
  result = sub_1D57D5AB8((uint64_t)v93);
  if ((v74 & 1) != 0)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v76 & 1) == 0)
      goto LABEL_15;
LABEL_26:
    result = sub_1D57EA700(*(_QWORD *)&v14[v27[14]], *(_QWORD *)&v14[v27[14] + 8]);
    if (!v75)
      return result;
    return swift_bridgeObjectRelease();
  }
LABEL_25:
  if ((_DWORD)v76)
    goto LABEL_26;
LABEL_15:
  if (!v75)
    return result;
  return swift_bridgeObjectRelease();
}

void sub_1D591CDAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D591C2E0();
    v7 = a3(a1, &type metadata for AudioEngagementBeginEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D591CE08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D591CE4C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D591CE88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngagementBeginEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D591CE9C(_QWORD *a1)
{
  return AudioEngagementBeginEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D591CEB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF471F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4CE18, a1);
}

uint64_t sub_1D591CED4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47200, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4CE30, a1);
}

uint64_t sub_1D591CEF8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v11, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v11, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v11, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v4, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v4, v32);
  v33 = a2 + a1[18];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v33, v4, v34);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioEngagementBeginEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v64 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v64 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = a3[18];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
  }
  return a1;
}

uint64_t destroy for AudioEngagementBeginEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  v31 = a1 + a2[18];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
}

uint64_t initializeWithCopy for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  return a1;
}

uint64_t assignWithCopy for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  return a1;
}

uint64_t initializeWithTake for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  return a1;
}

uint64_t assignWithTake for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementBeginEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D591EDFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
                            v12 = *(_QWORD *)(v25 - 8);
                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                            {
                              v8 = v25;
                              v13 = a3[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                              v8 = v26;
                              v12 = *(_QWORD *)(v26 - 8);
                              v13 = a3[18];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementBeginEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D591F210(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
                            v14 = *(_QWORD *)(v27 - 8);
                            if (*(_DWORD *)(v14 + 84) == a3)
                            {
                              v10 = v27;
                              v15 = a4[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                              v10 = v28;
                              v14 = *(_QWORD *)(v28 - 8);
                              v15 = a4[18];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D591F620()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72C0, (void (*)(void))sub_1D57C5DC8, (void (*)(void))sub_1D57C5E0C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C71E0, (void (*)(void))sub_1D57C8D10, (void (*)(void))sub_1D57C8D54);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C7128, (void (*)(void))sub_1D57CB384, (void (*)(void))sub_1D57CB3C8);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9C7270, (void (*)(void))sub_1D57C6C38, (void (*)(void))sub_1D57C6C7C);
                            if (v13 <= 0x3F)
                            {
                              sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                              if (v14 <= 0x3F)
                                swift_initStructMetadata();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioEngagementBeginEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v83;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v12;
    v10[32] = v11[32];
    v13 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    v14 = *((_QWORD *)v11 + 9);
    *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
    v10[112] = v11[112];
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    v15 = (char *)a1 + v9;
    v16 = (char *)a2 + v9;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    *((_WORD *)v15 + 8) = *((_WORD *)v16 + 8);
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = *((_QWORD *)v16 + 3);
    *((_QWORD *)v15 + 4) = v18;
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v83 = a2;
    v21 = (char *)a2 + v19;
    v22 = *((_QWORD *)v21 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22)
    {
      *(_WORD *)v20 = *(_WORD *)v21;
      *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
      *((_QWORD *)v20 + 2) = v22;
      *((_QWORD *)v20 + 3) = *((_QWORD *)v21 + 3);
      v23 = *((_QWORD *)v21 + 5);
      *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
      *((_QWORD *)v20 + 5) = v23;
      v24 = *((_QWORD *)v21 + 7);
      *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
      *((_QWORD *)v20 + 7) = v24;
      v25 = *((_QWORD *)v21 + 9);
      *((_QWORD *)v20 + 8) = *((_QWORD *)v21 + 8);
      *((_QWORD *)v20 + 9) = v25;
      v20[80] = v21[80];
      v26 = *((_QWORD *)v21 + 12);
      *((_QWORD *)v20 + 11) = *((_QWORD *)v21 + 11);
      *((_QWORD *)v20 + 12) = v26;
      *((_QWORD *)v20 + 13) = *((_QWORD *)v21 + 13);
      v20[112] = v21[112];
      v28 = *((_QWORD *)v21 + 15);
      v27 = *((_QWORD *)v21 + 16);
      *((_QWORD *)v20 + 15) = v28;
      *((_QWORD *)v20 + 16) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v30 = *((_OWORD *)v21 + 7);
      *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
      *((_OWORD *)v20 + 7) = v30;
      *((_QWORD *)v20 + 16) = *((_QWORD *)v21 + 16);
      v31 = *((_OWORD *)v21 + 3);
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      *((_OWORD *)v20 + 3) = v31;
      v32 = *((_OWORD *)v21 + 5);
      *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
      *((_OWORD *)v20 + 5) = v32;
      v33 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v33;
    }
    v34 = a3[8];
    v35 = (char *)a1 + v34;
    v36 = (char *)v83 + v34;
    v37 = *((_QWORD *)v36 + 2);
    if (v37 == 1)
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
    }
    else
    {
      *v35 = *v36;
      *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
      *((_QWORD *)v35 + 2) = v37;
      swift_bridgeObjectRetain();
    }
    v38 = a3[9];
    v39 = a3[10];
    v40 = (char *)a1 + v38;
    v41 = (char *)v83 + v38;
    *(_DWORD *)v40 = *(_DWORD *)v41;
    v40[4] = v41[4];
    v42 = (char *)a1 + v39;
    v43 = (char *)v83 + v39;
    *(_OWORD *)v42 = *(_OWORD *)v43;
    v42[16] = v43[16];
    *((_DWORD *)v42 + 5) = *((_DWORD *)v43 + 5);
    v44 = *((_QWORD *)v43 + 4);
    *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
    *((_QWORD *)v42 + 4) = v44;
    v42[40] = v43[40];
    v42[41] = v43[41];
    v45 = a3[11];
    v46 = a3[12];
    v47 = (char *)a1 + v45;
    v48 = (char *)v83 + v45;
    v49 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *((_QWORD *)v47 + 1) = v49;
    v47[16] = v48[16];
    v47[17] = v48[17];
    v50 = (char *)a1 + v46;
    v51 = (char *)v83 + v46;
    v52 = *((_OWORD *)v51 + 1);
    *(_OWORD *)v50 = *(_OWORD *)v51;
    *((_OWORD *)v50 + 1) = v52;
    v53 = *((_OWORD *)v51 + 3);
    *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
    *((_OWORD *)v50 + 3) = v53;
    v54 = *((_OWORD *)v51 + 5);
    *((_OWORD *)v50 + 4) = *((_OWORD *)v51 + 4);
    *((_OWORD *)v50 + 5) = v54;
    *((_OWORD *)v50 + 6) = *((_OWORD *)v51 + 6);
    v56 = *((_QWORD *)v51 + 14);
    v55 = *((_QWORD *)v51 + 15);
    v50[128] = v51[128];
    *((_QWORD *)v50 + 14) = v56;
    *((_QWORD *)v50 + 15) = v55;
    v57 = *((_QWORD *)v51 + 17);
    v50[144] = v51[144];
    *((_QWORD *)v50 + 17) = v57;
    v58 = *((_QWORD *)v51 + 19);
    v50[160] = v51[160];
    *((_QWORD *)v50 + 19) = v58;
    v59 = *((_QWORD *)v51 + 21);
    v50[176] = v51[176];
    *((_QWORD *)v50 + 21) = v59;
    v60 = *((_QWORD *)v51 + 23);
    v50[192] = v51[192];
    *((_QWORD *)v50 + 23) = v60;
    v61 = *((_QWORD *)v51 + 25);
    v50[208] = v51[208];
    *((_QWORD *)v50 + 25) = v61;
    v62 = *((_QWORD *)v51 + 27);
    v50[224] = v51[224];
    *((_QWORD *)v50 + 27) = v62;
    v63 = *((_QWORD *)v51 + 29);
    v50[240] = v51[240];
    *((_QWORD *)v50 + 29) = v63;
    v64 = *((_QWORD *)v51 + 31);
    v50[256] = v51[256];
    *((_QWORD *)v50 + 31) = v64;
    v65 = *((_QWORD *)v51 + 33);
    v50[272] = v51[272];
    *((_QWORD *)v50 + 33) = v65;
    v66 = a3[13];
    v67 = a3[14];
    v68 = (char *)a1 + v66;
    v69 = (char *)v83 + v66;
    *v68 = *v69;
    v70 = *((_QWORD *)v69 + 2);
    *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
    *((_QWORD *)v68 + 2) = v70;
    v68[24] = v69[24];
    v68[25] = v69[25];
    v71 = *((_QWORD *)v69 + 5);
    *((_QWORD *)v68 + 4) = *((_QWORD *)v69 + 4);
    *((_QWORD *)v68 + 5) = v71;
    v68[48] = v69[48];
    v72 = (char *)a1 + v67;
    v73 = (char *)v83 + v67;
    v74 = *(_QWORD *)((char *)v83 + v67 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v74)
    {
      *(_QWORD *)v72 = *(_QWORD *)v73;
      *((_QWORD *)v72 + 1) = v74;
      *((_WORD *)v72 + 8) = *((_WORD *)v73 + 8);
      *((_QWORD *)v72 + 3) = *((_QWORD *)v73 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v75 = *((_OWORD *)v73 + 1);
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *((_OWORD *)v72 + 1) = v75;
    }
    v76 = a3[15];
    v77 = a3[16];
    v78 = (_QWORD *)((char *)a1 + v76);
    v79 = (_QWORD *)((char *)v83 + v76);
    v80 = v79[1];
    *v78 = *v79;
    v78[1] = v80;
    *(_DWORD *)((char *)a1 + v77) = *(_DWORD *)((char *)v83 + v77);
    v81 = a3[18];
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)v83 + a3[17]);
    *(_DWORD *)((char *)a1 + v81) = *(_DWORD *)((char *)v83 + v81);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioEngagementBeginEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[8] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[14] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  int *v81;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v12;
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  v13 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 72) = v13;
  *(_BYTE *)(v9 + 80) = *(_BYTE *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 + 104);
  *(_BYTE *)(v9 + 112) = *(_BYTE *)(v10 + 112);
  *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(_BYTE *)(v9 + 132) = *(_BYTE *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  v14 = a1 + v8;
  v15 = a2 + v8;
  v16 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
  v17 = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 32) = v17;
  v81 = a3;
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(a2 + v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21)
  {
    *(_WORD *)v19 = *(_WORD *)v20;
    *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
    *(_QWORD *)(v19 + 16) = v21;
    *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
    v22 = *(_QWORD *)(v20 + 40);
    *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
    *(_QWORD *)(v19 + 40) = v22;
    v23 = *(_QWORD *)(v20 + 56);
    *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
    *(_QWORD *)(v19 + 56) = v23;
    v24 = *(_QWORD *)(v20 + 72);
    *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
    *(_QWORD *)(v19 + 72) = v24;
    *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
    v25 = *(_QWORD *)(v20 + 96);
    *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
    *(_QWORD *)(v19 + 96) = v25;
    *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
    *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
    v27 = *(_QWORD *)(v20 + 120);
    v26 = *(_QWORD *)(v20 + 128);
    *(_QWORD *)(v19 + 120) = v27;
    *(_QWORD *)(v19 + 128) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *(_OWORD *)(v20 + 112);
    *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
    *(_OWORD *)(v19 + 112) = v28;
    *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
    v29 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    *(_OWORD *)(v19 + 48) = v29;
    v30 = *(_OWORD *)(v20 + 80);
    *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
    *(_OWORD *)(v19 + 80) = v30;
    v31 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v31;
  }
  v32 = v81[8];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(v34 + 16);
  if (v35 == 1)
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  }
  else
  {
    *(_BYTE *)v33 = *(_BYTE *)v34;
    *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
    *(_QWORD *)(v33 + 16) = v35;
    swift_bridgeObjectRetain();
  }
  v36 = v81[9];
  v37 = v81[10];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_DWORD *)v38 = *(_DWORD *)v39;
  *(_BYTE *)(v38 + 4) = *(_BYTE *)(v39 + 4);
  v40 = a1 + v37;
  v41 = a2 + v37;
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
  *(_DWORD *)(v40 + 20) = *(_DWORD *)(v41 + 20);
  v42 = *(_QWORD *)(v41 + 32);
  *(_QWORD *)(v40 + 24) = *(_QWORD *)(v41 + 24);
  *(_QWORD *)(v40 + 32) = v42;
  *(_BYTE *)(v40 + 40) = *(_BYTE *)(v41 + 40);
  *(_BYTE *)(v40 + 41) = *(_BYTE *)(v41 + 41);
  v43 = v81[11];
  v44 = v81[12];
  v45 = a1 + v43;
  v46 = a2 + v43;
  v47 = *(_QWORD *)(v46 + 8);
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_QWORD *)(v45 + 8) = v47;
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
  *(_BYTE *)(v45 + 17) = *(_BYTE *)(v46 + 17);
  v48 = a1 + v44;
  v49 = a2 + v44;
  v50 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 16) = v50;
  v51 = *(_OWORD *)(v49 + 48);
  *(_OWORD *)(v48 + 32) = *(_OWORD *)(v49 + 32);
  *(_OWORD *)(v48 + 48) = v51;
  v52 = *(_OWORD *)(v49 + 80);
  *(_OWORD *)(v48 + 64) = *(_OWORD *)(v49 + 64);
  *(_OWORD *)(v48 + 80) = v52;
  *(_OWORD *)(v48 + 96) = *(_OWORD *)(v49 + 96);
  v54 = *(_QWORD *)(v49 + 112);
  v53 = *(_QWORD *)(v49 + 120);
  *(_BYTE *)(v48 + 128) = *(_BYTE *)(v49 + 128);
  *(_QWORD *)(v48 + 112) = v54;
  *(_QWORD *)(v48 + 120) = v53;
  v55 = *(_QWORD *)(v49 + 136);
  *(_BYTE *)(v48 + 144) = *(_BYTE *)(v49 + 144);
  *(_QWORD *)(v48 + 136) = v55;
  v56 = *(_QWORD *)(v49 + 152);
  *(_BYTE *)(v48 + 160) = *(_BYTE *)(v49 + 160);
  *(_QWORD *)(v48 + 152) = v56;
  v57 = *(_QWORD *)(v49 + 168);
  *(_BYTE *)(v48 + 176) = *(_BYTE *)(v49 + 176);
  *(_QWORD *)(v48 + 168) = v57;
  v58 = *(_QWORD *)(v49 + 184);
  *(_BYTE *)(v48 + 192) = *(_BYTE *)(v49 + 192);
  *(_QWORD *)(v48 + 184) = v58;
  v59 = *(_QWORD *)(v49 + 200);
  *(_BYTE *)(v48 + 208) = *(_BYTE *)(v49 + 208);
  *(_QWORD *)(v48 + 200) = v59;
  v60 = *(_QWORD *)(v49 + 216);
  *(_BYTE *)(v48 + 224) = *(_BYTE *)(v49 + 224);
  *(_QWORD *)(v48 + 216) = v60;
  v61 = *(_QWORD *)(v49 + 232);
  *(_BYTE *)(v48 + 240) = *(_BYTE *)(v49 + 240);
  *(_QWORD *)(v48 + 232) = v61;
  v62 = *(_QWORD *)(v49 + 248);
  *(_BYTE *)(v48 + 256) = *(_BYTE *)(v49 + 256);
  *(_QWORD *)(v48 + 248) = v62;
  v63 = *(_QWORD *)(v49 + 264);
  *(_BYTE *)(v48 + 272) = *(_BYTE *)(v49 + 272);
  *(_QWORD *)(v48 + 264) = v63;
  v64 = v81[13];
  v65 = v81[14];
  v66 = a1 + v64;
  v67 = a2 + v64;
  *(_BYTE *)v66 = *(_BYTE *)v67;
  v68 = *(_QWORD *)(v67 + 16);
  *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
  *(_QWORD *)(v66 + 16) = v68;
  *(_BYTE *)(v66 + 24) = *(_BYTE *)(v67 + 24);
  *(_BYTE *)(v66 + 25) = *(_BYTE *)(v67 + 25);
  v69 = *(_QWORD *)(v67 + 40);
  *(_QWORD *)(v66 + 32) = *(_QWORD *)(v67 + 32);
  *(_QWORD *)(v66 + 40) = v69;
  *(_BYTE *)(v66 + 48) = *(_BYTE *)(v67 + 48);
  v70 = a1 + v65;
  v71 = a2 + v65;
  v72 = *(_QWORD *)(a2 + v65 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v72)
  {
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *(_QWORD *)(v70 + 8) = v72;
    *(_WORD *)(v70 + 16) = *(_WORD *)(v71 + 16);
    *(_QWORD *)(v70 + 24) = *(_QWORD *)(v71 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v73 = *(_OWORD *)(v71 + 16);
    *(_OWORD *)v70 = *(_OWORD *)v71;
    *(_OWORD *)(v70 + 16) = v73;
  }
  v74 = v81[15];
  v75 = v81[16];
  v76 = (_QWORD *)(a1 + v74);
  v77 = (_QWORD *)(a2 + v74);
  v78 = v77[1];
  *v76 = *v77;
  v76[1] = v78;
  *(_DWORD *)(a1 + v75) = *(_DWORD *)(a2 + v75);
  v79 = v81[18];
  *(_BYTE *)(a1 + v81[17]) = *(_BYTE *)(a2 + v81[17]);
  *(_DWORD *)(a1 + v79) = *(_DWORD *)(a2 + v79);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a1 + v15 + 16);
  v19 = *(_QWORD *)(a2 + v15 + 16);
  if (v18)
  {
    if (v19)
    {
      *(_BYTE *)v16 = *(_BYTE *)v17;
      *(_BYTE *)(v16 + 1) = *(_BYTE *)(v17 + 1);
      *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
      *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v16 + 24) = *(_DWORD *)(v17 + 24);
      *(_DWORD *)(v16 + 28) = *(_DWORD *)(v17 + 28);
      *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
      *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
      *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
      *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v17 + 104);
      *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
      *(_QWORD *)(v16 + 104) = v20;
      *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v16);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      v22 = *(_OWORD *)(v17 + 64);
      v24 = *(_OWORD *)(v17 + 16);
      v23 = *(_OWORD *)(v17 + 32);
      *(_OWORD *)(v16 + 48) = *(_OWORD *)(v17 + 48);
      *(_OWORD *)(v16 + 64) = v22;
      *(_OWORD *)(v16 + 16) = v24;
      *(_OWORD *)(v16 + 32) = v23;
      v26 = *(_OWORD *)(v17 + 96);
      v25 = *(_OWORD *)(v17 + 112);
      v27 = *(_OWORD *)(v17 + 80);
      *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
      *(_OWORD *)(v16 + 96) = v26;
      *(_OWORD *)(v16 + 112) = v25;
      *(_OWORD *)(v16 + 80) = v27;
    }
  }
  else if (v19)
  {
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_BYTE *)(v16 + 1) = *(_BYTE *)(v17 + 1);
    *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
    *(_DWORD *)(v16 + 24) = *(_DWORD *)(v17 + 24);
    *(_DWORD *)(v16 + 28) = *(_DWORD *)(v17 + 28);
    *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
    *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
    *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
    *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
    *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
    *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
    *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
    *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
    *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
    v21 = *(_QWORD *)(v17 + 104);
    *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
    *(_QWORD *)(v16 + 104) = v21;
    *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
    *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
    v28 = *(_OWORD *)(v17 + 16);
    v29 = *(_OWORD *)(v17 + 32);
    v30 = *(_OWORD *)(v17 + 64);
    *(_OWORD *)(v16 + 48) = *(_OWORD *)(v17 + 48);
    *(_OWORD *)(v16 + 64) = v30;
    *(_OWORD *)(v16 + 16) = v28;
    *(_OWORD *)(v16 + 32) = v29;
    v31 = *(_OWORD *)(v17 + 80);
    v32 = *(_OWORD *)(v17 + 96);
    v33 = *(_OWORD *)(v17 + 112);
    *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
    *(_OWORD *)(v16 + 96) = v32;
    *(_OWORD *)(v16 + 112) = v33;
    *(_OWORD *)(v16 + 80) = v31;
  }
  v34 = a3[8];
  v35 = a1 + v34;
  v36 = (__int128 *)(a2 + v34);
  v37 = *(_QWORD *)(a1 + v34 + 16);
  v38 = *(_QWORD *)(a2 + v34 + 16);
  if (v37 == 1)
  {
    if (v38 == 1)
    {
      v39 = *v36;
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      *(_OWORD *)v35 = v39;
    }
    else
    {
      *(_BYTE *)v35 = *(_BYTE *)v36;
      *(_QWORD *)(v35 + 8) = *((_QWORD *)v36 + 1);
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v38 == 1)
  {
    sub_1D57D9100(v35);
    v40 = *((_QWORD *)v36 + 2);
    *(_OWORD *)v35 = *v36;
    *(_QWORD *)(v35 + 16) = v40;
  }
  else
  {
    *(_BYTE *)v35 = *(_BYTE *)v36;
    *(_QWORD *)(v35 + 8) = *((_QWORD *)v36 + 1);
    *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v41 = a3[9];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_DWORD *)v42 = *(_DWORD *)v43;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  v44 = a3[10];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_QWORD *)v45 = *(_QWORD *)(a2 + v44);
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(a2 + v44 + 8);
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(a2 + v44 + 16);
  *(_DWORD *)(v45 + 20) = *(_DWORD *)(a2 + v44 + 20);
  *(_QWORD *)(v45 + 24) = *(_QWORD *)(a2 + v44 + 24);
  *(_QWORD *)(v45 + 32) = *(_QWORD *)(a2 + v44 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 40) = *(_BYTE *)(v46 + 40);
  *(_BYTE *)(v45 + 41) = *(_BYTE *)(v46 + 41);
  v47 = a3[11];
  v48 = a1 + v47;
  v49 = a2 + v47;
  *(_QWORD *)v48 = *(_QWORD *)(a2 + v47);
  *(_QWORD *)(v48 + 8) = *(_QWORD *)(a2 + v47 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
  *(_BYTE *)(v48 + 17) = *(_BYTE *)(v49 + 17);
  v50 = a3[12];
  v51 = a1 + v50;
  v52 = a2 + v50;
  *(_QWORD *)v51 = *(_QWORD *)(a2 + v50);
  *(_QWORD *)(v51 + 8) = *(_QWORD *)(a2 + v50 + 8);
  *(_QWORD *)(v51 + 16) = *(_QWORD *)(a2 + v50 + 16);
  *(_QWORD *)(v51 + 24) = *(_QWORD *)(a2 + v50 + 24);
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(a2 + v50 + 32);
  *(_QWORD *)(v51 + 40) = *(_QWORD *)(a2 + v50 + 40);
  *(_QWORD *)(v51 + 48) = *(_QWORD *)(a2 + v50 + 48);
  *(_QWORD *)(v51 + 56) = *(_QWORD *)(a2 + v50 + 56);
  *(_QWORD *)(v51 + 64) = *(_QWORD *)(a2 + v50 + 64);
  *(_QWORD *)(v51 + 72) = *(_QWORD *)(a2 + v50 + 72);
  *(_QWORD *)(v51 + 80) = *(_QWORD *)(a2 + v50 + 80);
  *(_QWORD *)(v51 + 88) = *(_QWORD *)(a2 + v50 + 88);
  *(_QWORD *)(v51 + 96) = *(_QWORD *)(a2 + v50 + 96);
  *(_QWORD *)(v51 + 104) = *(_QWORD *)(a2 + v50 + 104);
  *(_QWORD *)(v51 + 112) = *(_QWORD *)(a2 + v50 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = *(_QWORD *)(v52 + 120);
  *(_BYTE *)(v51 + 128) = *(_BYTE *)(v52 + 128);
  *(_QWORD *)(v51 + 120) = v53;
  v54 = *(_QWORD *)(v52 + 136);
  *(_BYTE *)(v51 + 144) = *(_BYTE *)(v52 + 144);
  *(_QWORD *)(v51 + 136) = v54;
  v55 = *(_QWORD *)(v52 + 152);
  *(_BYTE *)(v51 + 160) = *(_BYTE *)(v52 + 160);
  *(_QWORD *)(v51 + 152) = v55;
  v56 = *(_QWORD *)(v52 + 168);
  *(_BYTE *)(v51 + 176) = *(_BYTE *)(v52 + 176);
  *(_QWORD *)(v51 + 168) = v56;
  v57 = *(_QWORD *)(v52 + 184);
  *(_BYTE *)(v51 + 192) = *(_BYTE *)(v52 + 192);
  *(_QWORD *)(v51 + 184) = v57;
  v58 = *(_QWORD *)(v52 + 200);
  *(_BYTE *)(v51 + 208) = *(_BYTE *)(v52 + 208);
  *(_QWORD *)(v51 + 200) = v58;
  v59 = *(_QWORD *)(v52 + 216);
  *(_BYTE *)(v51 + 224) = *(_BYTE *)(v52 + 224);
  *(_QWORD *)(v51 + 216) = v59;
  v60 = *(_QWORD *)(v52 + 232);
  *(_BYTE *)(v51 + 240) = *(_BYTE *)(v52 + 240);
  *(_QWORD *)(v51 + 232) = v60;
  v61 = *(_QWORD *)(v52 + 248);
  *(_BYTE *)(v51 + 256) = *(_BYTE *)(v52 + 256);
  *(_QWORD *)(v51 + 248) = v61;
  v62 = *(_QWORD *)(v52 + 264);
  *(_BYTE *)(v51 + 272) = *(_BYTE *)(v52 + 272);
  *(_QWORD *)(v51 + 264) = v62;
  v63 = a3[13];
  v64 = a1 + v63;
  v65 = a2 + v63;
  *(_BYTE *)v64 = *(_BYTE *)(a2 + v63);
  *(_QWORD *)(v64 + 8) = *(_QWORD *)(a2 + v63 + 8);
  *(_QWORD *)(v64 + 16) = *(_QWORD *)(a2 + v63 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v64 + 24) = *(_BYTE *)(v65 + 24);
  *(_BYTE *)(v64 + 25) = *(_BYTE *)(v65 + 25);
  *(_QWORD *)(v64 + 32) = *(_QWORD *)(v65 + 32);
  *(_QWORD *)(v64 + 40) = *(_QWORD *)(v65 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v64 + 48) = *(_BYTE *)(v65 + 48);
  v66 = a3[14];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = *(_QWORD *)(a1 + v66 + 8);
  v70 = *(_QWORD *)(a2 + v66 + 8);
  if (v69)
  {
    if (v70)
    {
      *(_QWORD *)v67 = *(_QWORD *)v68;
      *(_QWORD *)(v67 + 8) = *(_QWORD *)(v68 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v67 + 16) = *(_BYTE *)(v68 + 16);
      *(_BYTE *)(v67 + 17) = *(_BYTE *)(v68 + 17);
      *(_QWORD *)(v67 + 24) = *(_QWORD *)(v68 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v67);
      v71 = *(_OWORD *)(v68 + 16);
      *(_OWORD *)v67 = *(_OWORD *)v68;
      *(_OWORD *)(v67 + 16) = v71;
    }
  }
  else if (v70)
  {
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *(_QWORD *)(v67 + 8) = *(_QWORD *)(v68 + 8);
    *(_BYTE *)(v67 + 16) = *(_BYTE *)(v68 + 16);
    *(_BYTE *)(v67 + 17) = *(_BYTE *)(v68 + 17);
    *(_QWORD *)(v67 + 24) = *(_QWORD *)(v68 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v72 = *(_OWORD *)(v68 + 16);
    *(_OWORD *)v67 = *(_OWORD *)v68;
    *(_OWORD *)(v67 + 16) = v72;
  }
  v73 = a3[15];
  v74 = (_QWORD *)(a1 + v73);
  v75 = (_QWORD *)(a2 + v73);
  *v74 = *v75;
  v74[1] = v75[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[16]) = *(_DWORD *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  v76 = a3[18];
  v77 = (_BYTE *)(a1 + v76);
  v78 = (_BYTE *)(a2 + v76);
  *v77 = *v78;
  v77[1] = v78[1];
  v77[2] = v78[2];
  v77[3] = v78[3];
  return a1;
}

uint64_t initializeWithTake for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 *v42;
  __int128 v43;
  __int128 v44;
  _OWORD *v45;
  _OWORD *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v22;
  *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
  v23 = *(_OWORD *)(v21 + 112);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
  *(_OWORD *)(v20 + 112) = v23;
  v24 = *(_OWORD *)(v21 + 80);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(v21 + 64);
  *(_OWORD *)(v20 + 80) = v24;
  v25 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v25;
  v26 = a1 + v19;
  v27 = a2 + v19;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  v28 = a3[9];
  v29 = a3[10];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = (_OWORD *)(a1 + v29);
  v33 = (_OWORD *)(a2 + v29);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *(_OWORD *)((char *)v32 + 26) = *(_OWORD *)((char *)v33 + 26);
  v35 = a3[11];
  v36 = a3[12];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_WORD *)(v37 + 16) = *(_WORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  memcpy((void *)(a1 + v36), (const void *)(a2 + v36), 0x111uLL);
  v39 = a3[13];
  v40 = a3[14];
  v41 = a1 + v39;
  v42 = (__int128 *)(a2 + v39);
  *(_BYTE *)(v41 + 48) = *((_BYTE *)v42 + 48);
  v43 = v42[2];
  v44 = *v42;
  *(_OWORD *)(v41 + 16) = v42[1];
  *(_OWORD *)(v41 + 32) = v43;
  *(_OWORD *)v41 = v44;
  v45 = (_OWORD *)(a1 + v40);
  v46 = (_OWORD *)(a2 + v40);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  v48 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_DWORD *)(a1 + v48) = *(_DWORD *)(a2 + v48);
  v49 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_DWORD *)(a1 + v49) = *(_DWORD *)(a2 + v49);
  return a1;
}

uint64_t assignWithTake for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v11;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  v16 = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = v16;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (*(_QWORD *)(a1 + v17 + 16))
  {
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      *(_WORD *)v18 = *(_WORD *)v19;
      *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
      *(_QWORD *)(v18 + 16) = v20;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
      *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 40) = *(_QWORD *)(v19 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 48) = *(_QWORD *)(v19 + 48);
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v19 + 64);
      *(_QWORD *)(v18 + 56) = *(_QWORD *)(v19 + 56);
      *(_QWORD *)(v18 + 64) = v21;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 72) = *(_QWORD *)(v19 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v18 + 80) = *(_BYTE *)(v19 + 80);
      v22 = *(_QWORD *)(v19 + 96);
      *(_QWORD *)(v18 + 88) = *(_QWORD *)(v19 + 88);
      *(_QWORD *)(v18 + 96) = v22;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 104) = *(_QWORD *)(v19 + 104);
      *(_BYTE *)(v18 + 112) = *(_BYTE *)(v19 + 112);
      *(_QWORD *)(v18 + 120) = *(_QWORD *)(v19 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 128) = *(_QWORD *)(v19 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E17B8(v18);
  }
  v23 = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = v23;
  *(_QWORD *)(v18 + 128) = *(_QWORD *)(v19 + 128);
  v24 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v24;
  v25 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 80) = v25;
  v26 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v26;
LABEL_6:
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  if (*(_QWORD *)(a1 + v27 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
    goto LABEL_11;
  }
  v30 = *(_QWORD *)(v29 + 16);
  if (v30 == 1)
  {
    sub_1D57D9100(v28);
    goto LABEL_9;
  }
  *(_BYTE *)v28 = *(_BYTE *)v29;
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
LABEL_11:
  v31 = a3[9];
  v32 = a3[10];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_OWORD *)v35 = *(_OWORD *)(a2 + v32);
  *(_BYTE *)(v35 + 16) = *(_BYTE *)(a2 + v32 + 16);
  *(_DWORD *)(v35 + 20) = *(_DWORD *)(a2 + v32 + 20);
  v37 = *(_QWORD *)(a2 + v32 + 24);
  v38 = *(_QWORD *)(a2 + v32 + 32);
  *(_QWORD *)(v35 + 24) = v37;
  *(_QWORD *)(v35 + 32) = v38;
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 40) = *(_WORD *)(v36 + 40);
  v39 = a3[11];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)(a2 + v39 + 8);
  *(_QWORD *)v40 = *(_QWORD *)(a2 + v39);
  *(_QWORD *)(v40 + 8) = v42;
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 16) = *(_WORD *)(v41 + 16);
  v43 = a3[12];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_OWORD *)(a2 + v43 + 16);
  *(_OWORD *)v44 = *(_OWORD *)(a2 + v43);
  *(_OWORD *)(v44 + 16) = v46;
  v47 = *(_OWORD *)(a2 + v43 + 48);
  *(_OWORD *)(v44 + 32) = *(_OWORD *)(a2 + v43 + 32);
  *(_OWORD *)(v44 + 48) = v47;
  v48 = *(_OWORD *)(a2 + v43 + 80);
  *(_OWORD *)(v44 + 64) = *(_OWORD *)(a2 + v43 + 64);
  *(_OWORD *)(v44 + 80) = v48;
  *(_OWORD *)(v44 + 96) = *(_OWORD *)(a2 + v43 + 96);
  *(_QWORD *)(v44 + 112) = *(_QWORD *)(a2 + v43 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v44 + 120) = *(_QWORD *)(v45 + 120);
  *(_BYTE *)(v44 + 128) = *(_BYTE *)(v45 + 128);
  *(_QWORD *)(v44 + 136) = *(_QWORD *)(v45 + 136);
  *(_BYTE *)(v44 + 144) = *(_BYTE *)(v45 + 144);
  *(_QWORD *)(v44 + 152) = *(_QWORD *)(v45 + 152);
  *(_BYTE *)(v44 + 160) = *(_BYTE *)(v45 + 160);
  *(_BYTE *)(v44 + 176) = *(_BYTE *)(v45 + 176);
  *(_QWORD *)(v44 + 168) = *(_QWORD *)(v45 + 168);
  v49 = *(_QWORD *)(v45 + 184);
  *(_BYTE *)(v44 + 192) = *(_BYTE *)(v45 + 192);
  *(_QWORD *)(v44 + 184) = v49;
  *(_QWORD *)(v44 + 200) = *(_QWORD *)(v45 + 200);
  *(_BYTE *)(v44 + 208) = *(_BYTE *)(v45 + 208);
  *(_QWORD *)(v44 + 216) = *(_QWORD *)(v45 + 216);
  *(_BYTE *)(v44 + 224) = *(_BYTE *)(v45 + 224);
  *(_QWORD *)(v44 + 232) = *(_QWORD *)(v45 + 232);
  *(_BYTE *)(v44 + 240) = *(_BYTE *)(v45 + 240);
  *(_BYTE *)(v44 + 256) = *(_BYTE *)(v45 + 256);
  *(_QWORD *)(v44 + 248) = *(_QWORD *)(v45 + 248);
  *(_BYTE *)(v44 + 272) = *(_BYTE *)(v45 + 272);
  *(_QWORD *)(v44 + 264) = *(_QWORD *)(v45 + 264);
  v50 = a3[13];
  v51 = a1 + v50;
  v52 = a2 + v50;
  *(_BYTE *)v51 = *(_BYTE *)(a2 + v50);
  v53 = *(_QWORD *)(a2 + v50 + 16);
  *(_QWORD *)(v51 + 8) = *(_QWORD *)(a2 + v50 + 8);
  *(_QWORD *)(v51 + 16) = v53;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 24) = *(_BYTE *)(v52 + 24);
  *(_BYTE *)(v51 + 25) = *(_BYTE *)(v52 + 25);
  v54 = *(_QWORD *)(v52 + 40);
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
  *(_QWORD *)(v51 + 40) = v54;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 48) = *(_BYTE *)(v52 + 48);
  v55 = a3[14];
  v56 = a1 + v55;
  v57 = a2 + v55;
  if (!*(_QWORD *)(a1 + v55 + 8))
  {
LABEL_15:
    v59 = *(_OWORD *)(v57 + 16);
    *(_OWORD *)v56 = *(_OWORD *)v57;
    *(_OWORD *)(v56 + 16) = v59;
    goto LABEL_16;
  }
  v58 = *(_QWORD *)(v57 + 8);
  if (!v58)
  {
    sub_1D57EE47C(v56);
    goto LABEL_15;
  }
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_QWORD *)(v56 + 8) = v58;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v56 + 16) = *(_BYTE *)(v57 + 16);
  *(_BYTE *)(v56 + 17) = *(_BYTE *)(v57 + 17);
  *(_QWORD *)(v56 + 24) = *(_QWORD *)(v57 + 24);
  swift_bridgeObjectRelease();
LABEL_16:
  v60 = a3[15];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (uint64_t *)(a2 + v60);
  v64 = *v62;
  v63 = v62[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  v65 = a3[17];
  *(_DWORD *)(a1 + a3[16]) = *(_DWORD *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v65) = *(_BYTE *)(a2 + v65);
  v66 = a3[18];
  v67 = a1 + v66;
  v68 = a2 + v66;
  *(_BYTE *)v67 = *(_BYTE *)v68;
  *(_BYTE *)(v67 + 1) = *(_BYTE *)(v68 + 1);
  *(_WORD *)(v67 + 2) = *(_WORD *)(v68 + 2);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementBeginEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59213E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementBeginEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D592146C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D59214E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioEngagementBeginEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1D592162C + 4 * byte_1D5ACAED4[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1D5921660 + 4 * byte_1D5ACAECF[v4]))();
}

uint64_t sub_1D5921660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5921668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5921670);
  return result;
}

uint64_t sub_1D592167C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5921684);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1D5921688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5921690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementBeginEvent.Model.CodingKeys()
{
  return &type metadata for AudioEngagementBeginEvent.Model.CodingKeys;
}

unint64_t sub_1D59216B0()
{
  unint64_t result;

  result = qword_1EFF4CFF0;
  if (!qword_1EFF4CFF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB254, &type metadata for AudioEngagementBeginEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CFF0);
  }
  return result;
}

unint64_t sub_1D59216F8()
{
  unint64_t result;

  result = qword_1EFF4CFF8;
  if (!qword_1EFF4CFF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB1C4, &type metadata for AudioEngagementBeginEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4CFF8);
  }
  return result;
}

unint64_t sub_1D5921740()
{
  unint64_t result;

  result = qword_1EFF4D000;
  if (!qword_1EFF4D000)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB1EC, &type metadata for AudioEngagementBeginEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D000);
  }
  return result;
}

uint64_t sub_1D5921784(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446B63617274 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF0000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEC9D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5AF0020 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

void AdGroupData.groupType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdGroupData.groupType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdGroupData.groupType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AdGroupData __swiftcall AdGroupData.init(groupType:)(NewsAnalytics::AdGroupData groupType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)groupType.groupType;
  return groupType;
}

uint64_t sub_1D5921E20()
{
  return 0x70795470756F7267;
}

uint64_t sub_1D5921E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x70795470756F7267 && a2 == 0xE900000000000065)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5921EDC()
{
  sub_1D5922030();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5921F04()
{
  sub_1D5922030();
  return sub_1D5AAEEE0();
}

uint64_t AdGroupData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D59221AC(0, &qword_1ED9D0D30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5922030();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D57B5814();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5922030()
{
  unint64_t result;

  result = qword_1ED9CF210;
  if (!qword_1ED9CF210)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB448, &type metadata for AdGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF210);
  }
  return result;
}

uint64_t AdGroupData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D59221AC(0, &qword_1EFF4D008, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5922030();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5922208();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59221AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5922030();
    v7 = a3(a1, &type metadata for AdGroupData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5922208()
{
  unint64_t result;

  result = qword_1ED9CC560;
  if (!qword_1ED9CC560)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupType, &type metadata for GroupType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC560);
  }
  return result;
}

uint64_t sub_1D5922254@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdGroupData.init(from:)(a1, a2);
}

uint64_t sub_1D5922268(_QWORD *a1)
{
  return AdGroupData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AdGroupData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 81 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 81) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xAF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xAE)
    return ((uint64_t (*)(void))((char *)&loc_1D59222C8 + 4 * byte_1D5ACB2D1[v4]))();
  *a1 = a2 + 81;
  return ((uint64_t (*)(void))((char *)sub_1D59222FC + 4 * byte_1D5ACB2CC[v4]))();
}

uint64_t sub_1D59222FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5922304(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D592230CLL);
  return result;
}

uint64_t sub_1D5922318(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5922320);
  *(_BYTE *)result = a2 + 81;
  return result;
}

uint64_t sub_1D5922324(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D592232C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdGroupData()
{
  return &type metadata for AdGroupData;
}

uint64_t storeEnumTagSinglePayload for AdGroupData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5922388 + 4 * byte_1D5ACB2D6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59223A8 + 4 * byte_1D5ACB2DB[v4]))();
}

_BYTE *sub_1D5922388(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59223A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59223B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59223B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59223C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59223C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdGroupData.CodingKeys()
{
  return &type metadata for AdGroupData.CodingKeys;
}

unint64_t sub_1D59223E8()
{
  unint64_t result;

  result = qword_1EFF4D010;
  if (!qword_1EFF4D010)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB420, &type metadata for AdGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D010);
  }
  return result;
}

unint64_t sub_1D5922430()
{
  unint64_t result;

  result = qword_1ED9CF220;
  if (!qword_1ED9CF220)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB390, &type metadata for AdGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF220);
  }
  return result;
}

unint64_t sub_1D5922478()
{
  unint64_t result;

  result = qword_1ED9CF218;
  if (!qword_1ED9CF218)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB3B8, &type metadata for AdGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF218);
  }
  return result;
}

uint64_t sub_1D59224BC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4D018, MEMORY[0x1E0CF8078]);
}

uint64_t static SportsAddFavoritesSyncEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47208, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D018, a1);
}

uint64_t sub_1D59224FC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4D030, MEMORY[0x1E0CF8378]);
}

uint64_t static SportsAddFavoritesSyncEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47210, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D030, a1);
}

uint64_t SportsAddFavoritesSyncEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SportsAddFavoritesSyncEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SportsAddFavoritesSyncEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SportsAddFavoritesSyncEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsAddFavoritesSyncEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SportsAddFavoritesSyncEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4D0D0);
}

uint64_t SportsAddFavoritesSyncEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsAddFavoritesSyncEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsAddFavoritesSyncEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for SportsAddFavoritesSyncEvent(0);
  return nullsub_1;
}

uint64_t SportsAddFavoritesSyncEvent.addFavoritesSyncData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsAddFavoritesSyncEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5922704()
{
  unint64_t result;

  result = qword_1EFF4D050;
  if (!qword_1EFF4D050)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsAddFavoritesSyncData, &type metadata for SportsAddFavoritesSyncData);
    atomic_store(result, (unint64_t *)&qword_1EFF4D050);
  }
  return result;
}

unint64_t sub_1D5922748()
{
  unint64_t result;

  result = qword_1EFF4D058;
  if (!qword_1EFF4D058)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsAddFavoritesSyncData, &type metadata for SportsAddFavoritesSyncData);
    atomic_store(result, (unint64_t *)&qword_1EFF4D058);
  }
  return result;
}

uint64_t SportsAddFavoritesSyncEvent.addFavoritesSyncData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsAddFavoritesSyncEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsAddFavoritesSyncEvent.addFavoritesSyncData.modify())()
{
  type metadata accessor for SportsAddFavoritesSyncEvent(0);
  return nullsub_1;
}

uint64_t SportsAddFavoritesSyncEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for SportsAddFavoritesSyncEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t SportsAddFavoritesSyncEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SportsAddFavoritesSyncEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SportsAddFavoritesSyncEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SportsAddFavoritesSyncEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4D168);
}

uint64_t SportsAddFavoritesSyncEvent.Model.addFavoritesSyncData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SportsAddFavoritesSyncEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SportsAddFavoritesSyncEvent.Model.init(eventData:userBundleSubscriptionContextData:addFavoritesSyncData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  int v17;

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v9 = a2[24];
  v10 = a2[25];
  v11 = *((_QWORD *)a2 + 4);
  v12 = *((_QWORD *)a2 + 5);
  v13 = a2[48];
  v17 = *a3;
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  result = type metadata accessor for SportsAddFavoritesSyncEvent.Model(0);
  v16 = a4 + *(int *)(result + 20);
  *(_BYTE *)v16 = v6;
  *(_QWORD *)(v16 + 8) = v7;
  *(_QWORD *)(v16 + 16) = v8;
  *(_BYTE *)(v16 + 24) = v9;
  *(_BYTE *)(v16 + 25) = v10;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 40) = v12;
  *(_BYTE *)(v16 + 48) = v13;
  *(_DWORD *)(a4 + *(int *)(result + 24)) = v17;
  return result;
}

uint64_t sub_1D5922A74()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000021;
  if (*v0 != 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D5922AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5923E78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5922B04()
{
  sub_1D5922D30();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5922B2C()
{
  sub_1D5922D30();
  return sub_1D5AAEEE0();
}

uint64_t SportsAddFavoritesSyncEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  int v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;

  v3 = v1;
  sub_1D59230B4(0, &qword_1EFF4D060, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5922D30();
  sub_1D5AAEEC8();
  LOBYTE(v17) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for SportsAddFavoritesSyncEvent.Model(0);
    v11 = v3 + *(int *)(v10 + 20);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v17) = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    HIBYTE(v16) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v17 = *(_DWORD *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v16) = 2;
    sub_1D5922748();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5922D30()
{
  unint64_t result;

  result = qword_1EFF4D068;
  if (!qword_1EFF4D068)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB674, &type metadata for SportsAddFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D068);
  }
  return result;
}

uint64_t SportsAddFavoritesSyncEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  __int128 v29;
  char v30;
  char v31;
  __int128 v32;
  char v33;
  char v34;

  v22 = a2;
  v3 = sub_1D5AADF98();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59230B4(0, &qword_1EFF4D070, MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for SportsAddFavoritesSyncEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5922D30();
  v26 = v8;
  v12 = v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v9;
  v13 = (uint64_t)a1;
  v14 = v24;
  LOBYTE(v28) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v25, v3);
  v34 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v15 = v30;
  v16 = v31;
  v17 = v33;
  v18 = v27;
  v19 = &v11[*(int *)(v27 + 20)];
  *v19 = v28;
  *(_OWORD *)(v19 + 8) = v29;
  v19[24] = v15;
  v19[25] = v16;
  *((_OWORD *)v19 + 2) = v32;
  v19[48] = v17;
  v34 = 2;
  sub_1D5922704();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v23);
  *(_DWORD *)&v11[*(int *)(v18 + 24)] = v28;
  sub_1D5923110((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1D5923154((uint64_t)v11);
}

void sub_1D59230B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5922D30();
    v7 = a3(a1, &type metadata for SportsAddFavoritesSyncEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5923110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsAddFavoritesSyncEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5923154(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SportsAddFavoritesSyncEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5923190@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsAddFavoritesSyncEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59231A4(_QWORD *a1)
{
  return SportsAddFavoritesSyncEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59231B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47208, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D018, a1);
}

uint64_t sub_1D59231DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47210, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D030, a1);
}

uint64_t sub_1D5923200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsAddFavoritesSyncEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SportsAddFavoritesSyncEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for SportsAddFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SportsAddFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SportsAddFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SportsAddFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsAddFavoritesSyncEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5923890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SportsAddFavoritesSyncEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5923974(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5923A54()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF4D048, (void (*)(void))sub_1D5922704, (void (*)(void))sub_1D5922748);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for SportsAddFavoritesSyncEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5923B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsAddFavoritesSyncEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5923BD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = a2;
  return result;
}

uint64_t sub_1D5923C54()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsAddFavoritesSyncEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5923D20 + 4 * byte_1D5ACB4A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5923D54 + 4 * byte_1D5ACB4A0[v4]))();
}

uint64_t sub_1D5923D54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5923D5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5923D64);
  return result;
}

uint64_t sub_1D5923D70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5923D78);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5923D7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5923D84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsAddFavoritesSyncEvent.Model.CodingKeys()
{
  return &type metadata for SportsAddFavoritesSyncEvent.Model.CodingKeys;
}

unint64_t sub_1D5923DA4()
{
  unint64_t result;

  result = qword_1EFF4D1A8;
  if (!qword_1EFF4D1A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB64C, &type metadata for SportsAddFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D1A8);
  }
  return result;
}

unint64_t sub_1D5923DEC()
{
  unint64_t result;

  result = qword_1EFF4D1B0;
  if (!qword_1EFF4D1B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB5BC, &type metadata for SportsAddFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D1B0);
  }
  return result;
}

unint64_t sub_1D5923E34()
{
  unint64_t result;

  result = qword_1EFF4D1B8;
  if (!qword_1EFF4D1B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB5E4, &type metadata for SportsAddFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D1B8);
  }
  return result;
}

uint64_t sub_1D5923E78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF0040)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t SportsTagData.sportTagID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsTagData.sportTagID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SportsTagData.sportTagID.modify())()
{
  return nullsub_1;
}

uint64_t SportsTagData.leagueTagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsTagData.leagueTagIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SportsTagData.leagueTagIDs.modify())()
{
  return nullsub_1;
}

uint64_t SportsTagData.init(sportTagID:leagueTagIDs:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_1D592408C()
{
  _BYTE *v0;

  if (*v0)
    return 0x615465756761656CLL;
  else
    return 0x67615474726F7073;
}

uint64_t sub_1D59240D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5924840(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59240F8()
{
  sub_1D59242B4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5924120()
{
  sub_1D59242B4();
  return sub_1D5AAEEE0();
}

uint64_t SportsTagData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;
  char v15;

  sub_1D59244F0(0, &qword_1EFF4D1C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - v6;
  v13[0] = *(_QWORD *)(v1 + 16);
  v8 = a1[3];
  v9 = a1;
  v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1D59242B4();
  sub_1D5AAEEC8();
  v15 = 0;
  sub_1D5AAED3C();
  if (!v2)
  {
    v13[1] = v13[0];
    v14 = 1;
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

unint64_t sub_1D59242B4()
{
  unint64_t result;

  result = qword_1EFF4D1C8;
  if (!qword_1EFF4D1C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB83C, &type metadata for SportsTagData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D1C8);
  }
  return result;
}

uint64_t SportsTagData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  char v16;
  char v17;

  sub_1D59244F0(0, &qword_1EFF4D1D0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59242B4();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v17 = 0;
    v11 = sub_1D5AAECA0();
    v13 = v12;
    sub_1D57B4558();
    v16 = 1;
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v14 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_1D59244F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59242B4();
    v7 = a3(a1, &type metadata for SportsTagData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5924554@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsTagData.init(from:)(a1, a2);
}

uint64_t sub_1D5924568(_QWORD *a1)
{
  return SportsTagData.encode(to:)(a1);
}

uint64_t destroy for SportsTagData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13NewsAnalytics13SportsTagDataVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SportsTagData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsTagData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsTagData()
{
  return &type metadata for SportsTagData;
}

uint64_t storeEnumTagSinglePayload for SportsTagData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59246E8 + 4 * byte_1D5ACB6C9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D592471C + 4 * byte_1D5ACB6C4[v4]))();
}

uint64_t sub_1D592471C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5924724(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D592472CLL);
  return result;
}

uint64_t sub_1D5924738(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5924740);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5924744(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D592474C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsTagData.CodingKeys()
{
  return &type metadata for SportsTagData.CodingKeys;
}

unint64_t sub_1D592476C()
{
  unint64_t result;

  result = qword_1EFF4D1D8;
  if (!qword_1EFF4D1D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB814, &type metadata for SportsTagData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D1D8);
  }
  return result;
}

unint64_t sub_1D59247B4()
{
  unint64_t result;

  result = qword_1EFF4D1E0;
  if (!qword_1EFF4D1E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB784, &type metadata for SportsTagData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D1E0);
  }
  return result;
}

unint64_t sub_1D59247FC()
{
  unint64_t result;

  result = qword_1EFF4D1E8;
  if (!qword_1EFF4D1E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB7AC, &type metadata for SportsTagData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D1E8);
  }
  return result;
}

uint64_t sub_1D5924840(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x67615474726F7073 && a2 == 0xEA00000000004449;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615465756761656CLL && a2 == 0xEC00000073444967)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D5924954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(_QWORD *, uint64_t, uint64_t);
  void (*v6)(_QWORD *, uint64_t);
  uint64_t v8;

  v0 = sub_1D5AAE340();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v3 = sub_1D5924AFC;
  v3[1] = 0;
  v4 = *MEMORY[0x1E0DB6828];
  v5 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_1D5AAE358();
  v6 = *(void (**)(_QWORD *, uint64_t))(v1 + 8);
  v6(v3, v0);
  *v3 = sub_1D5924B0C;
  v3[1] = 0;
  v5(v3, v4, v0);
  sub_1D5AAE358();
  v6(v3, v0);
  *v3 = sub_1D5924B18;
  v3[1] = 0;
  v5(v3, v4, v0);
  sub_1D5AAE358();
  v6(v3, v0);
  *v3 = sub_1D5924B24;
  v3[1] = 0;
  v5(v3, v4, v0);
  sub_1D5AAE358();
  return ((uint64_t (*)(_QWORD *, uint64_t))v6)(v3, v0);
}

void sub_1D5924AFC()
{
  exit(0);
}

void sub_1D5924B0C()
{
  sub_1D5924B30((SEL *)&selRef_triggerSIGBUS);
}

void sub_1D5924B18()
{
  sub_1D5924B30((SEL *)&selRef_triggerSIGILL);
}

void sub_1D5924B24()
{
  sub_1D5924B30((SEL *)&selRef_triggerSIGSEGV);
}

void sub_1D5924B30(SEL *a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DB5410]), sel_init);
  objc_msgSend(v2, *a1);

}

uint64_t NewspaperData.sectionIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NewspaperData.sectionIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*NewspaperData.sectionIDs.modify())()
{
  return nullsub_1;
}

uint64_t NewspaperData.init(sectionIDs:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D5924BC4()
{
  sub_1D5924D38();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5924BEC()
{
  sub_1D5924D38();
  return sub_1D5AAEEE0();
}

uint64_t NewspaperData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D5924ED4(0, &qword_1EFF4D1F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5924D38();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED18();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5924D38()
{
  unint64_t result;

  result = qword_1EFF4D1F8;
  if (!qword_1EFF4D1F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACBA38, &type metadata for NewspaperData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D1F8);
  }
  return result;
}

uint64_t NewspaperData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D5924ED4(0, &qword_1EFF4D200, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5924D38();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5924ED4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5924D38();
    v7 = a3(a1, &type metadata for NewspaperData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5924F34()
{
  unint64_t result;

  result = qword_1EFF4D208;
  if (!qword_1EFF4D208)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NewspaperData, &type metadata for NewspaperData);
    atomic_store(result, (unint64_t *)&qword_1EFF4D208);
  }
  return result;
}

unint64_t sub_1D5924F7C()
{
  unint64_t result;

  result = qword_1EFF4D210;
  if (!qword_1EFF4D210)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NewspaperData, &type metadata for NewspaperData);
    atomic_store(result, (unint64_t *)&qword_1EFF4D210);
  }
  return result;
}

uint64_t sub_1D5924FC0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return NewspaperData.init(from:)(a1, a2);
}

uint64_t sub_1D5924FD4(_QWORD *a1)
{
  return NewspaperData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for NewspaperData()
{
  return &type metadata for NewspaperData;
}

uint64_t storeEnumTagSinglePayload for NewspaperData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5925038 + 4 * byte_1D5ACB8C4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5925058 + 4 * byte_1D5ACB8C9[v4]))();
}

_BYTE *sub_1D5925038(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5925058(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5925060(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5925068(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5925070(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5925078(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NewspaperData.CodingKeys()
{
  return &type metadata for NewspaperData.CodingKeys;
}

unint64_t sub_1D5925098()
{
  unint64_t result;

  result = qword_1EFF4D218;
  if (!qword_1EFF4D218)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACBA10, &type metadata for NewspaperData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D218);
  }
  return result;
}

unint64_t sub_1D59250E0()
{
  unint64_t result;

  result = qword_1EFF4D220;
  if (!qword_1EFF4D220)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB980, &type metadata for NewspaperData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D220);
  }
  return result;
}

unint64_t sub_1D5925128()
{
  unint64_t result;

  result = qword_1EFF4D228;
  if (!qword_1EFF4D228)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACB9A8, &type metadata for NewspaperData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D228);
  }
  return result;
}

uint64_t static AppSessionResumeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCF58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC18, a1);
}

uint64_t static AppSessionResumeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1ED9CD4A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCF60, a1);
}

uint64_t AppSessionResumeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AppSessionResumeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppSessionResumeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionResumeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionResumeEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionResumeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionResumeEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionResumeEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for AppSessionResumeEvent(0);
  return nullsub_1;
}

uint64_t AppSessionResumeEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionResumeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionResumeEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionResumeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionResumeEvent.orientationData.modify())()
{
  type metadata accessor for AppSessionResumeEvent(0);
  return nullsub_1;
}

uint64_t AppSessionResumeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for AppSessionResumeEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t AppSessionResumeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppSessionResumeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AppSessionResumeEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AppSessionResumeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4D2A0);
}

uint64_t AppSessionResumeEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppSessionResumeEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AppSessionResumeEvent.Model.init(eventData:userBundleSubscriptionContextData:orientationData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  __int16 v17;

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v9 = a2[24];
  v10 = a2[25];
  v11 = *((_QWORD *)a2 + 4);
  v12 = *((_QWORD *)a2 + 5);
  v13 = a2[48];
  v17 = *a3;
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  result = type metadata accessor for AppSessionResumeEvent.Model(0);
  v16 = a4 + *(int *)(result + 20);
  *(_BYTE *)v16 = v6;
  *(_QWORD *)(v16 + 8) = v7;
  *(_QWORD *)(v16 + 16) = v8;
  *(_BYTE *)(v16 + 24) = v9;
  *(_BYTE *)(v16 + 25) = v10;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 40) = v12;
  *(_BYTE *)(v16 + 48) = v13;
  *(_WORD *)(a4 + *(int *)(result + 24)) = v17;
  return result;
}

uint64_t sub_1D5925650()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000021;
  if (*v0 != 1)
    v1 = 0x7461746E6569726FLL;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D59256C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5926BB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59256E4()
{
  sub_1D5925910();
  return sub_1D5AAEED4();
}

uint64_t sub_1D592570C()
{
  sub_1D5925910();
  return sub_1D5AAEEE0();
}

uint64_t AppSessionResumeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  __int16 v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;

  v3 = v1;
  sub_1D5925C94(0, &qword_1EFF4D230, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5925910();
  sub_1D5AAEEC8();
  LOBYTE(v17) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for AppSessionResumeEvent.Model(0);
    v11 = v3 + *(int *)(v10 + 20);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v17) = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    HIBYTE(v16) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v17 = *(_WORD *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v16) = 2;
    sub_1D57CA4E4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5925910()
{
  unint64_t result;

  result = qword_1EFF4D238;
  if (!qword_1EFF4D238)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACBC74, &type metadata for AppSessionResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D238);
  }
  return result;
}

uint64_t AppSessionResumeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  __int16 v28;
  __int128 v29;
  char v30;
  char v31;
  __int128 v32;
  char v33;
  char v34;

  v22 = a2;
  v3 = sub_1D5AADF98();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5925C94(0, &qword_1EFF4D240, MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for AppSessionResumeEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5925910();
  v26 = v8;
  v12 = v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v9;
  v13 = (uint64_t)a1;
  v14 = v24;
  LOBYTE(v28) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v25, v3);
  v34 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v15 = v30;
  v16 = v31;
  v17 = v33;
  v18 = v27;
  v19 = &v11[*(int *)(v27 + 20)];
  *v19 = v28;
  *(_OWORD *)(v19 + 8) = v29;
  v19[24] = v15;
  v19[25] = v16;
  *((_OWORD *)v19 + 2) = v32;
  v19[48] = v17;
  v34 = 2;
  sub_1D57CA4A0();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v23);
  *(_WORD *)&v11[*(int *)(v18 + 24)] = v28;
  sub_1D5925CF0((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1D5925D34((uint64_t)v11);
}

void sub_1D5925C94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5925910();
    v7 = a3(a1, &type metadata for AppSessionResumeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5925CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppSessionResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5925D34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppSessionResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5925D70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionResumeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5925D84(_QWORD *a1)
{
  return AppSessionResumeEvent.Model.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionResumeEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for AppSessionResumeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for AppSessionResumeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for AppSessionResumeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for AppSessionResumeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for AppSessionResumeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionResumeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5926348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AppSessionResumeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D592642C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionResumeEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    v13 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v13;
    v10[48] = v11[48];
    *(_WORD *)((char *)a1 + v9) = *(_WORD *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for AppSessionResumeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppSessionResumeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v10 = *(int *)(a3 + 24);
  v11 = (_BYTE *)(a1 + v10);
  v12 = (_BYTE *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  return a1;
}

uint64_t initializeWithTake for AppSessionResumeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for AppSessionResumeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_WORD *)(a1 + *(int *)(a3 + 24)) = *(_WORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionResumeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5926880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AppSessionResumeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5926918(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = a2;
  return result;
}

uint64_t sub_1D5926994()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppSessionResumeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5926A5C + 4 * byte_1D5ACBA95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5926A90 + 4 * byte_1D5ACBA90[v4]))();
}

uint64_t sub_1D5926A90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5926A98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5926AA0);
  return result;
}

uint64_t sub_1D5926AAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5926AB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5926AB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5926AC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppSessionResumeEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionResumeEvent.Model.CodingKeys;
}

unint64_t sub_1D5926AE0()
{
  unint64_t result;

  result = qword_1EFF4D2E0;
  if (!qword_1EFF4D2E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACBC4C, &type metadata for AppSessionResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D2E0);
  }
  return result;
}

unint64_t sub_1D5926B28()
{
  unint64_t result;

  result = qword_1EFF4D2E8;
  if (!qword_1EFF4D2E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACBBBC, &type metadata for AppSessionResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D2E8);
  }
  return result;
}

unint64_t sub_1D5926B70()
{
  unint64_t result;

  result = qword_1EFF4D2F0;
  if (!qword_1EFF4D2F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACBBE4, &type metadata for AppSessionResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D2F0);
  }
  return result;
}

uint64_t sub_1D5926BB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D5926D30(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4D2F8, MEMORY[0x1E0CF8078]);
}

uint64_t static JourneyMessageAMSExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47218, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D2F8, a1);
}

uint64_t sub_1D5926D70(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4D310, MEMORY[0x1E0CF8380]);
}

uint64_t static JourneyMessageAMSExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47220, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D310, a1);
}

uint64_t JourneyMessageAMSExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t JourneyMessageAMSExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*JourneyMessageAMSExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageAMSExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for JourneyMessageAMSExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for JourneyMessageAMSExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4D398);
}

uint64_t JourneyMessageAMSExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageAMSExposureEvent.timedData.modify())()
{
  type metadata accessor for JourneyMessageAMSExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageAMSExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageAMSExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageAMSExposureEvent.viewData.modify())()
{
  type metadata accessor for JourneyMessageAMSExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageAMSExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageAMSExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageAMSExposureEvent.articleData.modify())()
{
  type metadata accessor for JourneyMessageAMSExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageAMSExposureEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageAMSExposureEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageAMSExposureEvent.tagData.modify())()
{
  type metadata accessor for JourneyMessageAMSExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageAMSExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageAMSExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageAMSExposureEvent.feedData.modify())()
{
  type metadata accessor for JourneyMessageAMSExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageAMSExposureEvent.dialogStyleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageAMSExposureEvent.dialogStyleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageAMSExposureEvent.dialogStyleData.modify())()
{
  type metadata accessor for JourneyMessageAMSExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageAMSExposureEvent.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageAMSExposureEvent.placementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageAMSExposureEvent.placementData.modify())()
{
  type metadata accessor for JourneyMessageAMSExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageAMSExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageAMSExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageAMSExposureEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for JourneyMessageAMSExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageAMSExposureEvent.engagementPlacementOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageAMSExposureEvent.engagementPlacementOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageAMSExposureEvent.engagementPlacementOriginationData.modify())()
{
  type metadata accessor for JourneyMessageAMSExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageAMSExposureEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageAMSExposureEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageAMSExposureEvent.purchaseData.modify())()
{
  type metadata accessor for JourneyMessageAMSExposureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageAMSExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for JourneyMessageAMSExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
}

uint64_t JourneyMessageAMSExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t JourneyMessageAMSExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for JourneyMessageAMSExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for JourneyMessageAMSExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4D450);
}

uint64_t JourneyMessageAMSExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageAMSExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for JourneyMessageAMSExposureEvent.Model(0);
  sub_1D580C534(v1 + *(int *)(v3 + 28), (uint64_t)v5);
  sub_1D580C534((uint64_t)v5, a1);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t JourneyMessageAMSExposureEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageAMSExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t JourneyMessageAMSExposureEvent.Model.dialogStyleData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for JourneyMessageAMSExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t JourneyMessageAMSExposureEvent.Model.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent.Model(0) + 44);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageAMSExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent.Model(0) + 48));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageAMSExposureEvent.Model.engagementPlacementOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for JourneyMessageAMSExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t JourneyMessageAMSExposureEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageAMSExposureEvent.Model(0) + 56));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

__n128 JourneyMessageAMSExposureEvent.Model.init(eventData:timedData:viewData:articleData:tagData:feedData:dialogStyleData:placementData:userBundleSubscriptionContextData:engagementPlacementOriginationData:purchaseData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, __int128 *a6@<X5>, char *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, uint64_t *a12)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 result;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  __int128 v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  _BYTE v55[144];

  v37 = a3[1];
  v38 = *a3;
  v36 = *((_WORD *)a3 + 8);
  sub_1D580C534(a4, (uint64_t)v55);
  v19 = *a5;
  v20 = a5[1];
  v39 = v19;
  v40 = *a6;
  v21 = *((_QWORD *)a6 + 2);
  v41 = *a7;
  v44 = (__n128)a8[1];
  v45 = *a8;
  v42 = *((_QWORD *)a8 + 5);
  v43 = *((_QWORD *)a8 + 4);
  v51 = *((_QWORD *)a10 + 2);
  v52 = *((_QWORD *)a10 + 1);
  v49 = a10[25];
  v50 = a10[24];
  v47 = *((_QWORD *)a10 + 5);
  v48 = *((_QWORD *)a10 + 4);
  v46 = a10[48];
  v53 = *a10;
  v54 = *a11;
  v22 = *a12;
  v23 = a12[1];
  v24 = *((_BYTE *)a12 + 16);
  v25 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a9, a1, v25);
  v26 = (int *)type metadata accessor for JourneyMessageAMSExposureEvent.Model(0);
  v27 = a9 + v26[5];
  v28 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a2, v28);
  v29 = a9 + v26[6];
  *(_QWORD *)v29 = v38;
  *(_QWORD *)(v29 + 8) = v37;
  *(_WORD *)(v29 + 16) = v36;
  sub_1D580C534((uint64_t)v55, a9 + v26[7]);
  v30 = (_QWORD *)(a9 + v26[8]);
  *v30 = v39;
  v30[1] = v20;
  v31 = a9 + v26[9];
  *(_OWORD *)v31 = v40;
  *(_QWORD *)(v31 + 16) = v21;
  *(_BYTE *)(a9 + v26[10]) = v41;
  v32 = a9 + v26[11];
  result = v44;
  *(_OWORD *)v32 = v45;
  *(__n128 *)(v32 + 16) = v44;
  *(_QWORD *)(v32 + 32) = v43;
  *(_QWORD *)(v32 + 40) = v42;
  v34 = a9 + v26[12];
  *(_BYTE *)v34 = v53;
  *(_QWORD *)(v34 + 8) = v52;
  *(_QWORD *)(v34 + 16) = v51;
  *(_BYTE *)(v34 + 24) = v50;
  *(_BYTE *)(v34 + 25) = v49;
  *(_QWORD *)(v34 + 32) = v48;
  *(_QWORD *)(v34 + 40) = v47;
  *(_BYTE *)(v34 + 48) = v46;
  *(_BYTE *)(a9 + v26[13]) = v54;
  v35 = a9 + v26[14];
  *(_QWORD *)v35 = v22;
  *(_QWORD *)(v35 + 8) = v23;
  *(_BYTE *)(v35 + 16) = v24;
  return result;
}

uint64_t sub_1D5927F2C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5927F64 + 4 * byte_1D5ACBCD0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5927F64()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5927F78()
{
  return 0x6174614477656976;
}

uint64_t sub_1D5927FD8()
{
  return 0x7453676F6C616964;
}

uint64_t sub_1D5927FFC()
{
  return 0x6E656D6563616C70;
}

unint64_t sub_1D5928020()
{
  return 0xD000000000000022;
}

uint64_t sub_1D5928040()
{
  return 0x6573616863727570;
}

unint64_t sub_1D5928060()
{
  return 0xD000000000000021;
}

uint64_t sub_1D592807C()
{
  unsigned __int8 *v0;

  return sub_1D5927F2C(*v0);
}

uint64_t sub_1D5928084()
{
  sub_1D5928544();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59280AC()
{
  sub_1D5928544();
  return sub_1D5AAEEE0();
}

uint64_t JourneyMessageAMSExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  char v27;
  _OWORD v28[2];
  __int128 v29;
  char v30;
  _BYTE v31[136];
  uint64_t v32;
  uint64_t v33;
  __int16 v34;

  v3 = v1;
  sub_1D5928E00(0, &qword_1EFF4D328, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5928544();
  sub_1D5AAEEC8();
  v31[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for JourneyMessageAMSExposureEvent.Model(0);
    v31[0] = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (uint64_t *)(v3 + v10[6]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    v32 = v12;
    v33 = v13;
    v34 = (__int16)v11;
    v31[135] = 2;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    sub_1D580C534(v3 + v10[7], (uint64_t)v31);
    sub_1D580C534((uint64_t)v31, (uint64_t)v28);
    v27 = 3;
    sub_1D57CB940();
    sub_1D5AAED18();
    v28[0] = *(_OWORD *)(v3 + v10[8]);
    v27 = 4;
    sub_1D57C6738();
    sub_1D5AAED18();
    v14 = v3 + v10[9];
    v15 = *(_QWORD *)(v14 + 16);
    v28[0] = *(_OWORD *)v14;
    *(_QWORD *)&v28[1] = v15;
    v27 = 5;
    sub_1D57C65D4();
    sub_1D5AAED18();
    LOBYTE(v28[0]) = *(_BYTE *)(v3 + v10[10]);
    v27 = 6;
    sub_1D580BB8C();
    sub_1D5AAED6C();
    v16 = v3 + v10[11];
    v17 = *(_QWORD *)(v16 + 8);
    *(_QWORD *)&v28[0] = *(_QWORD *)v16;
    *((_QWORD *)&v28[0] + 1) = v17;
    v18 = *(_OWORD *)(v16 + 32);
    v28[1] = *(_OWORD *)(v16 + 16);
    v29 = v18;
    v27 = 7;
    sub_1D57C8654();
    sub_1D5AAED6C();
    v19 = v3 + v10[12];
    v20 = *(_BYTE *)(v19 + 24);
    v21 = *(_BYTE *)(v19 + 25);
    v22 = *(_BYTE *)(v19 + 48);
    LOBYTE(v28[0]) = *(_BYTE *)v19;
    *(_OWORD *)((char *)v28 + 8) = *(_OWORD *)(v19 + 8);
    BYTE8(v28[1]) = v20;
    BYTE9(v28[1]) = v21;
    v29 = *(_OWORD *)(v19 + 32);
    v30 = v22;
    v27 = 8;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    LOBYTE(v28[0]) = *(_BYTE *)(v3 + v10[13]);
    v27 = 9;
    sub_1D580BEFC();
    sub_1D5AAED18();
    v23 = v3 + v10[14];
    v24 = *(_BYTE *)(v23 + 16);
    v28[0] = *(_OWORD *)v23;
    LOBYTE(v28[1]) = v24;
    v27 = 10;
    sub_1D580C07C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5928544()
{
  unint64_t result;

  result = qword_1EFF4D330;
  if (!qword_1EFF4D330)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACBFE4, &type metadata for JourneyMessageAMSExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D330);
  }
  return result;
}

uint64_t JourneyMessageAMSExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  __int16 v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;
  char *v29;
  char v30;
  uint64_t v31;
  char *v32;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  int *v44;
  _OWORD v45[2];
  __int128 v46;
  char v47;
  _BYTE v48[136];
  _QWORD v49[2];
  __int16 v50;
  char v51;
  char v52;

  v35 = a2;
  v39 = sub_1D5AADFB0();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5928E00(0, &qword_1EFF4D338, MEMORY[0x1E0DED048]);
  v36 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v34 - v10;
  v44 = (int *)type metadata accessor for JourneyMessageAMSExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D5928544();
  v40 = v11;
  v14 = v42;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v42 = v9;
  LOBYTE(v49[0]) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v15 = v43;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v43, v7, v5);
  LOBYTE(v49[0]) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v16 = v39;
  sub_1D5AAECD0();
  v34[1] = v5;
  v17 = v44;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v15[v44[5]], v4, v16);
  v48[0] = 2;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v18 = v49[1];
  v19 = v50;
  v20 = &v15[v17[6]];
  *(_QWORD *)v20 = v49[0];
  *((_QWORD *)v20 + 1) = v18;
  *((_WORD *)v20 + 8) = v19;
  v52 = 3;
  sub_1D57CB8FC();
  sub_1D5AAEC7C();
  sub_1D580C534((uint64_t)v49, (uint64_t)v48);
  sub_1D580C534((uint64_t)v48, (uint64_t)&v15[v17[7]]);
  v51 = 4;
  sub_1D57C66F4();
  sub_1D5AAEC7C();
  *(_OWORD *)&v15[v17[8]] = v45[0];
  v51 = 5;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v21 = *(_QWORD *)&v45[1];
  v22 = &v15[v17[9]];
  *(_OWORD *)v22 = v45[0];
  *((_QWORD *)v22 + 2) = v21;
  v51 = 6;
  sub_1D580BB48();
  sub_1D5AAECD0();
  v15[v17[10]] = v45[0];
  v51 = 7;
  sub_1D57C8610();
  sub_1D5AAECD0();
  v23 = *((_QWORD *)&v45[0] + 1);
  v24 = &v15[v44[11]];
  *(_QWORD *)v24 = *(_QWORD *)&v45[0];
  *((_QWORD *)v24 + 1) = v23;
  v25 = v46;
  *((_OWORD *)v24 + 1) = v45[1];
  *((_OWORD *)v24 + 2) = v25;
  v51 = 8;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v26 = BYTE8(v45[1]);
  v27 = BYTE9(v45[1]);
  v28 = v47;
  v29 = &v15[v44[12]];
  *v29 = v45[0];
  *(_OWORD *)(v29 + 8) = *(_OWORD *)((char *)v45 + 8);
  v29[24] = v26;
  v29[25] = v27;
  *((_OWORD *)v29 + 2) = v46;
  v29[48] = v28;
  v51 = 9;
  sub_1D580BEB8();
  sub_1D5AAEC7C();
  v43[v44[13]] = v45[0];
  v51 = 10;
  sub_1D580C038();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v36);
  v30 = v45[1];
  v31 = (uint64_t)v43;
  v32 = &v43[v44[14]];
  *(_OWORD *)v32 = v45[0];
  v32[16] = v30;
  sub_1D5928E5C(v31, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_1D5928EA0(v31);
}

void sub_1D5928E00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5928544();
    v7 = a3(a1, &type metadata for JourneyMessageAMSExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5928E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JourneyMessageAMSExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5928EA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JourneyMessageAMSExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5928EDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return JourneyMessageAMSExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5928EF0(_QWORD *a1)
{
  return JourneyMessageAMSExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5928F04@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47218, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D2F8, a1);
}

uint64_t sub_1D5928F28@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47220, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D310, a1);
}

uint64_t getEnumTagSinglePayload for JourneyMessageAMSExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5928F58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                      v8 = v22;
                      v12 = *(_QWORD *)(v22 - 8);
                      v13 = a3[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageAMSExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D592923C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                      v10 = v24;
                      v14 = *(_QWORD *)(v24 - 8);
                      v15 = a4[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for JourneyMessageAMSExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5929528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageAMSExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59295E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5929688()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JourneyMessageAMSExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D59297B0 + 4 * byte_1D5ACBCE0[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D59297E4 + 4 * byte_1D5ACBCDB[v4]))();
}

uint64_t sub_1D59297E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59297EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59297F4);
  return result;
}

uint64_t sub_1D5929800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5929808);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D592980C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5929814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JourneyMessageAMSExposureEvent.Model.CodingKeys()
{
  return &type metadata for JourneyMessageAMSExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D5929834()
{
  unint64_t result;

  result = qword_1EFF4D4B0;
  if (!qword_1EFF4D4B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACBFBC, &type metadata for JourneyMessageAMSExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D4B0);
  }
  return result;
}

unint64_t sub_1D592987C()
{
  unint64_t result;

  result = qword_1EFF4D4B8;
  if (!qword_1EFF4D4B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACBF2C, &type metadata for JourneyMessageAMSExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D4B8);
  }
  return result;
}

unint64_t sub_1D59298C4()
{
  unint64_t result;

  result = qword_1EFF4D4C0;
  if (!qword_1EFF4D4C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACBF54, &type metadata for JourneyMessageAMSExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D4C0);
  }
  return result;
}

void __swiftcall ReferralData.with(referringUrl:)(NewsAnalytics::ReferralData *__return_ptr retstr, Swift::String referringUrl)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v3 = (void *)v2[1];
  v5 = v2[4];
  v4 = (void *)v2[5];
  retstr->referringApplication._countAndFlagsBits = *v2;
  retstr->referringApplication._object = v3;
  retstr->referringUrl = referringUrl;
  retstr->userActivityType.value._countAndFlagsBits = v5;
  retstr->userActivityType.value._object = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

NewsAnalytics::Milestone_optional __swiftcall Milestone.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::Milestone_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t Milestone.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59299D4 + 4 * byte_1D5ACC034[*v0]))(1869768058, 0xE400000000000000);
}

uint64_t sub_1D59299D4()
{
  return 7234932;
}

uint64_t sub_1D59299E4()
{
  return 0x694679746E657774;
}

uint64_t sub_1D5929A04()
{
  return 0x7974666966;
}

uint64_t sub_1D5929A18()
{
  return 0x4679746E65766573;
}

uint64_t sub_1D5929A38()
{
  return 0x72646E7548656E6FLL;
}

void sub_1D5929A54(char *a1)
{
  sub_1D5A34E7C(*a1);
}

unint64_t sub_1D5929A64()
{
  unint64_t result;

  result = qword_1EFF4D4C8;
  if (!qword_1EFF4D4C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Milestone, &type metadata for Milestone);
    atomic_store(result, (unint64_t *)&qword_1EFF4D4C8);
  }
  return result;
}

void sub_1D5929AA8()
{
  char *v0;

  sub_1D5A80BBC(*v0);
}

void sub_1D5929AB0()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5929AE4()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5929B78(uint64_t a1)
{
  char *v1;

  sub_1D5AAA568(a1, *v1);
}

NewsAnalytics::Milestone_optional sub_1D5929B80(Swift::String *a1)
{
  return Milestone.init(rawValue:)(*a1);
}

uint64_t sub_1D5929B8C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5929BB4 + 4 * byte_1D5ACC040[*v0]))();
}

void sub_1D5929BB4(_QWORD *a1@<X8>)
{
  *a1 = 7234932;
  a1[1] = 0xE300000000000000;
}

void sub_1D5929BC8(_QWORD *a1@<X8>)
{
  *a1 = 0x694679746E657774;
  a1[1] = 0xEA00000000006576;
}

void sub_1D5929BEC(_QWORD *a1@<X8>)
{
  *a1 = 0x7974666966;
  a1[1] = 0xE500000000000000;
}

void sub_1D5929C04(_QWORD *a1@<X8>)
{
  *a1 = 0x4679746E65766573;
  a1[1] = 0xEB00000000657669;
}

void sub_1D5929C28(_QWORD *a1@<X8>)
{
  *a1 = 0x72646E7548656E6FLL;
  a1[1] = 0xEA00000000006465;
}

uint64_t sub_1D5929C48()
{
  sub_1D5929DBC();
  return sub_1D5AAE928();
}

uint64_t sub_1D5929CA4()
{
  sub_1D5929DBC();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for Milestone(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5929D3C + 4 * byte_1D5ACC04B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5929D70 + 4 * byte_1D5ACC046[v4]))();
}

uint64_t sub_1D5929D70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5929D78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5929D80);
  return result;
}

uint64_t sub_1D5929D8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5929D94);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5929D98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5929DA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Milestone()
{
  return &type metadata for Milestone;
}

unint64_t sub_1D5929DBC()
{
  unint64_t result;

  result = qword_1EFF4D4D0;
  if (!qword_1EFF4D4D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Milestone, &type metadata for Milestone);
    atomic_store(result, (unint64_t *)&qword_1EFF4D4D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeldsparEvent()
{
  return &type metadata for FeldsparEvent;
}

uint64_t WidgetExposureData.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExposureData.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*WidgetExposureData.identifier.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureData.articleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t WidgetExposureData.articleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*WidgetExposureData.articleCount.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureData.articleExposureCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t WidgetExposureData.articleExposureCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*WidgetExposureData.articleExposureCount.modify())()
{
  return nullsub_1;
}

void WidgetExposureData.appearanceType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *WidgetExposureData.appearanceType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*WidgetExposureData.appearanceType.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureData.contentFetchDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t WidgetExposureData.contentFetchDate.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*WidgetExposureData.contentFetchDate.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureData.init(identifier:articleCount:articleExposureCount:appearanceType:contentFetchDate:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7;

  v7 = *a5;
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_BYTE *)(a7 + 32) = v7;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t sub_1D5929F20(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5929F58 + 4 * byte_1D5ACC180[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1D5929F58()
{
  return 0x43656C6369747261;
}

unint64_t sub_1D5929F78()
{
  return 0xD000000000000014;
}

uint64_t sub_1D5929F98()
{
  return 0x6E61726165707061;
}

unint64_t sub_1D5929FBC()
{
  return 0xD000000000000010;
}

uint64_t sub_1D5929FD8()
{
  unsigned __int8 *v0;

  return sub_1D5929F20(*v0);
}

uint64_t sub_1D5929FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D592A86C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D592A004()
{
  sub_1D592A22C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D592A02C()
{
  sub_1D592A22C();
  return sub_1D5AAEEE0();
}

uint64_t WidgetExposureData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[2];
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  sub_1D592A4EC(0, &qword_1EFF4D4D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v14 = *(_QWORD *)(v1 + 24);
  v15 = v8;
  v13 = *(unsigned __int8 *)(v1 + 32);
  v12[1] = *(_QWORD *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D592A22C();
  sub_1D5AAEEC8();
  v22 = 0;
  v9 = v16;
  sub_1D5AAED3C();
  if (!v9)
  {
    v10 = v13;
    v21 = 1;
    sub_1D5AAED84();
    v20 = 2;
    sub_1D5AAED84();
    v19 = v10;
    v18 = 3;
    sub_1D592A270();
    sub_1D5AAED6C();
    v17 = 4;
    sub_1D5AAED84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D592A22C()
{
  unint64_t result;

  result = qword_1EFF4D4E0;
  if (!qword_1EFF4D4E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC318, &type metadata for WidgetExposureData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D4E0);
  }
  return result;
}

unint64_t sub_1D592A270()
{
  unint64_t result;

  result = qword_1EFF4D4E8;
  if (!qword_1EFF4D4E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetAppearanceType, &type metadata for WidgetAppearanceType);
    atomic_store(result, (unint64_t *)&qword_1EFF4D4E8);
  }
  return result;
}

uint64_t WidgetExposureData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  unsigned __int8 v22;
  char v23;
  char v24;
  char v25;

  sub_1D592A4EC(0, &qword_1EFF4D4F0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D592A22C();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v24 = 1;
  swift_bridgeObjectRetain();
  v19 = sub_1D5AAECE8();
  v23 = 2;
  v18 = sub_1D5AAECE8();
  v21 = 3;
  sub_1D592A548();
  sub_1D5AAECD0();
  v17 = v22;
  v20 = 4;
  v14 = sub_1D5AAECE8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  v15 = v18;
  *(_QWORD *)(a2 + 16) = v19;
  *(_QWORD *)(a2 + 24) = v15;
  *(_BYTE *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D592A4EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D592A22C();
    v7 = a3(a1, &type metadata for WidgetExposureData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D592A548()
{
  unint64_t result;

  result = qword_1EFF4D4F8;
  if (!qword_1EFF4D4F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetAppearanceType, &type metadata for WidgetAppearanceType);
    atomic_store(result, (unint64_t *)&qword_1EFF4D4F8);
  }
  return result;
}

uint64_t sub_1D592A594@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetExposureData.init(from:)(a1, a2);
}

uint64_t sub_1D592A5A8(_QWORD *a1)
{
  return WidgetExposureData.encode(to:)(a1);
}

uint64_t initializeWithCopy for WidgetExposureData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetExposureData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for WidgetExposureData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for WidgetExposureData()
{
  return &type metadata for WidgetExposureData;
}

uint64_t storeEnumTagSinglePayload for WidgetExposureData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D592A714 + 4 * byte_1D5ACC18A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D592A748 + 4 * byte_1D5ACC185[v4]))();
}

uint64_t sub_1D592A748(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D592A750(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D592A758);
  return result;
}

uint64_t sub_1D592A764(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D592A76CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D592A770(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D592A778(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetExposureData.CodingKeys()
{
  return &type metadata for WidgetExposureData.CodingKeys;
}

unint64_t sub_1D592A798()
{
  unint64_t result;

  result = qword_1EFF4D500;
  if (!qword_1EFF4D500)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC2F0, &type metadata for WidgetExposureData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D500);
  }
  return result;
}

unint64_t sub_1D592A7E0()
{
  unint64_t result;

  result = qword_1EFF4D508;
  if (!qword_1EFF4D508)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC260, &type metadata for WidgetExposureData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D508);
  }
  return result;
}

unint64_t sub_1D592A828()
{
  unint64_t result;

  result = qword_1EFF4D510;
  if (!qword_1EFF4D510)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC288, &type metadata for WidgetExposureData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D510);
  }
  return result;
}

uint64_t sub_1D592A86C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x43656C6369747261 && a2 == 0xEC000000746E756FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF00F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E61726165707061 && a2 == 0xEE00657079546563 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEEC50)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1D592AAC4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4D518, MEMORY[0x1E0CF8078]);
}

uint64_t static PDFPageViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47228, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D518, a1);
}

uint64_t sub_1D592AB04(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4D530, MEMORY[0x1E0CF8380]);
}

uint64_t static PDFPageViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47230, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D530, a1);
}

uint64_t PDFPageViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t PDFPageViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PDFPageViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PDFPageViewEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PDFPageViewEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8E70);
}

uint64_t PDFPageViewEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.issueData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.issueViewData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.channelData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.userChannelContextData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D581CA4C(type metadata accessor for PDFPageViewEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t PDFPageViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 36);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.timedData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.feedData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.groupData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.pdfPageContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.pdfPageContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.pdfPageContext.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.campaignData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.notificationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.notificationData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 60);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 60);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.referralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.referralData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.referralData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.paywallData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 72);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PDFPageViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent(0) + 72);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PDFPageViewEvent.viewData.modify())()
{
  type metadata accessor for PDFPageViewEvent(0);
  return nullsub_1;
}

uint64_t PDFPageViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for PDFPageViewEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  v16 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v16, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v16, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v16, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v16, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v16, v31);
  v32 = a1 + v4[18];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v32, v16, v33);
}

uint64_t PDFPageViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t PDFPageViewEvent.Model.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PDFPageViewEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8DA8);
}

uint64_t PDFPageViewEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for PDFPageViewEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t PDFPageViewEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PDFPageViewEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for PDFPageViewEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t PDFPageViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D581CA4C(type metadata accessor for PDFPageViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t PDFPageViewEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PDFPageViewEvent.Model(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *PDFPageViewEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for PDFPageViewEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 44), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t PDFPageViewEvent.Model.pdfPageContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PDFPageViewEvent.Model(0) + 48));
  v4 = *v3;
  LODWORD(v3) = *((_DWORD *)v3 + 2);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = (_DWORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t PDFPageViewEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PDFPageViewEvent.Model(0) + 52));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t PDFPageViewEvent.Model.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v1 + *(int *)(type metadata accessor for PDFPageViewEvent.Model(0) + 56);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  LOWORD(v3) = *(_WORD *)(v3 + 72);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_WORD *)(a1 + 72) = v3;
  return sub_1D58AEDC8(v4, v5);
}

uint64_t PDFPageViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for PDFPageViewEvent.Model(0) + 60));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PDFPageViewEvent.Model.referralData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PDFPageViewEvent.Model(0) + 64));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t PDFPageViewEvent.Model.paywallData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PDFPageViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 68));
  return result;
}

uint64_t PDFPageViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PDFPageViewEvent.Model(0) + 72));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

__n128 PDFPageViewEvent.Model.init(eventData:issueData:issueViewData:channelData:userChannelContextData:timedData:feedData:groupData:pdfPageContext:campaignData:notificationData:userBundleSubscriptionContextData:referralData:paywallData:viewData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, __int128 *a11, __int128 *a12, char *a13, __int128 *a14, __int16 *a15, uint64_t *a16)
{
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 result;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  __int16 v52;
  char v53;
  char v54;
  uint64_t v55;
  __int128 v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int16 v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  __n128 v78;
  __int128 v79;
  _BYTE v81[144];

  v42 = a2[1];
  v43 = *a2;
  v40 = *((_BYTE *)a2 + 17);
  v41 = *((_BYTE *)a2 + 16);
  v18 = a2[3];
  v44 = a3[1];
  v45 = *a3;
  v50 = a4[1];
  v51 = *a4;
  v48 = *((_BYTE *)a4 + 17);
  v49 = *((_BYTE *)a4 + 16);
  v46 = a4[4];
  v47 = a4[3];
  v53 = a5[1];
  v54 = *a5;
  v52 = *((_WORD *)a5 + 1);
  v56 = *a7;
  v55 = *((_QWORD *)a7 + 2);
  sub_1D57DD5B8(a8, (uint64_t)v81);
  v57 = *((_DWORD *)a10 + 2);
  v61 = a11[1];
  v62 = *a11;
  v60 = *((_QWORD *)a11 + 4);
  v58 = *a10;
  v59 = *((_QWORD *)a11 + 5);
  v67 = a12[1];
  v68 = *a12;
  v65 = a12[3];
  v66 = a12[2];
  v64 = *((_QWORD *)a12 + 8);
  v63 = *((_WORD *)a12 + 36);
  v76 = *a13;
  v74 = *((_QWORD *)a13 + 2);
  v75 = *((_QWORD *)a13 + 1);
  v73 = a13[24];
  v72 = a13[25];
  v70 = *((_QWORD *)a13 + 5);
  v71 = *((_QWORD *)a13 + 4);
  v69 = a13[48];
  v79 = *a14;
  v78 = (__n128)a14[1];
  v19 = *((_QWORD *)a14 + 4);
  v77 = *((_QWORD *)a14 + 5);
  v20 = *a15;
  v21 = *a16;
  v22 = a16[1];
  v23 = *((_WORD *)a16 + 8);
  v24 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a9, a1, v24);
  v25 = (int *)type metadata accessor for PDFPageViewEvent.Model(0);
  v26 = a9 + v25[5];
  *(_QWORD *)v26 = v43;
  *(_QWORD *)(v26 + 8) = v42;
  *(_BYTE *)(v26 + 16) = v41;
  *(_BYTE *)(v26 + 17) = v40;
  *(_QWORD *)(v26 + 24) = v18;
  v27 = (_QWORD *)(a9 + v25[6]);
  *v27 = v45;
  v27[1] = v44;
  v28 = a9 + v25[7];
  *(_QWORD *)v28 = v51;
  *(_QWORD *)(v28 + 8) = v50;
  *(_BYTE *)(v28 + 16) = v49;
  *(_BYTE *)(v28 + 17) = v48;
  *(_QWORD *)(v28 + 24) = v47;
  *(_QWORD *)(v28 + 32) = v46;
  v29 = a9 + v25[8];
  *(_BYTE *)v29 = v54;
  *(_BYTE *)(v29 + 1) = v53;
  *(_WORD *)(v29 + 2) = v52;
  v30 = a9 + v25[9];
  v31 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v30, a6, v31);
  v32 = a9 + v25[10];
  *(_OWORD *)v32 = v56;
  *(_QWORD *)(v32 + 16) = v55;
  sub_1D57DD5B8((uint64_t)v81, a9 + v25[11]);
  v33 = a9 + v25[12];
  *(_QWORD *)v33 = v58;
  *(_DWORD *)(v33 + 8) = v57;
  v34 = a9 + v25[13];
  *(_OWORD *)v34 = v62;
  *(_OWORD *)(v34 + 16) = v61;
  *(_QWORD *)(v34 + 32) = v60;
  *(_QWORD *)(v34 + 40) = v59;
  v35 = a9 + v25[14];
  *(_OWORD *)v35 = v68;
  *(_OWORD *)(v35 + 16) = v67;
  *(_OWORD *)(v35 + 32) = v66;
  *(_OWORD *)(v35 + 48) = v65;
  *(_QWORD *)(v35 + 64) = v64;
  *(_WORD *)(v35 + 72) = v63;
  v36 = a9 + v25[15];
  *(_BYTE *)v36 = v76;
  *(_QWORD *)(v36 + 8) = v75;
  *(_QWORD *)(v36 + 16) = v74;
  *(_BYTE *)(v36 + 24) = v73;
  *(_BYTE *)(v36 + 25) = v72;
  *(_QWORD *)(v36 + 32) = v71;
  *(_QWORD *)(v36 + 40) = v70;
  *(_BYTE *)(v36 + 48) = v69;
  v37 = a9 + v25[16];
  result = v78;
  *(_OWORD *)v37 = v79;
  *(__n128 *)(v37 + 16) = v78;
  *(_QWORD *)(v37 + 32) = v19;
  *(_QWORD *)(v37 + 40) = v77;
  *(_WORD *)(a9 + v25[17]) = v20;
  v39 = a9 + v25[18];
  *(_QWORD *)v39 = v21;
  *(_QWORD *)(v39 + 8) = v22;
  *(_WORD *)(v39 + 16) = v23;
  return result;
}

uint64_t sub_1D592C460(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D592C498 + 4 * byte_1D5ACC370[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D592C498()
{
  return 0x7461446575737369;
}

uint64_t sub_1D592C4AC()
{
  return 0x6569566575737369;
}

uint64_t sub_1D592C4D0()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1D592C5EC()
{
  return 0x6174614477656976;
}

uint64_t sub_1D592C604()
{
  unsigned __int8 *v0;

  return sub_1D592C460(*v0);
}

uint64_t sub_1D592C60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5932088(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D592C630()
{
  sub_1D592CC7C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D592C658()
{
  sub_1D592CC7C();
  return sub_1D5AAEEE0();
}

uint64_t PDFPageViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  _OWORD *v45;
  __int128 v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v50;
  char v51;
  _OWORD v52[2];
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int16 v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;

  v3 = v1;
  sub_1D592D7E4(0, &qword_1EFF4D548, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v50 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D592CC7C();
  sub_1D5AAEEC8();
  LOBYTE(v57) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for PDFPageViewEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    v14 = *((_BYTE *)v11 + 16);
    v15 = *((_BYTE *)v11 + 17);
    v16 = v11[3];
    v57 = v12;
    v58 = v13;
    v59 = v14;
    v60 = v15;
    v61 = v16;
    LOBYTE(v52[0]) = 1;
    sub_1D57C5F1C();
    sub_1D5AAED6C();
    v17 = (uint64_t *)(v3 + v10[6]);
    v19 = *v17;
    v18 = v17[1];
    v57 = v19;
    v58 = v18;
    LOBYTE(v52[0]) = 2;
    sub_1D57CAD6C();
    sub_1D5AAED6C();
    v20 = (uint64_t *)(v3 + v10[7]);
    v21 = *v20;
    v22 = v20[1];
    v23 = *((_BYTE *)v20 + 16);
    v24 = *((_BYTE *)v20 + 17);
    v26 = v20[3];
    v25 = v20[4];
    v57 = v21;
    v58 = v22;
    v59 = v23;
    v60 = v24;
    v61 = v26;
    v62 = v25;
    LOBYTE(v52[0]) = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v27 = (char *)(v3 + v10[8]);
    v28 = *v27;
    v29 = v27[1];
    LOWORD(v27) = *((_WORD *)v27 + 1);
    LOBYTE(v57) = v28;
    BYTE1(v57) = v29;
    WORD1(v57) = (_WORD)v27;
    LOBYTE(v52[0]) = 4;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v66 = v3 + v10[9];
    LOBYTE(v57) = 5;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v30 = (__int128 *)(v3 + v10[10]);
    v31 = *((_QWORD *)v30 + 2);
    v64 = *v30;
    v65 = v31;
    v63 = 6;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[11], (uint64_t)&v57);
    sub_1D57DD5B8((uint64_t)&v57, (uint64_t)v52);
    v51 = 7;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v32 = (uint64_t *)(v3 + v10[12]);
    v33 = *v32;
    LODWORD(v32) = *((_DWORD *)v32 + 2);
    *(_QWORD *)&v52[0] = v33;
    DWORD2(v52[0]) = (_DWORD)v32;
    v51 = 8;
    sub_1D58C5984();
    sub_1D5AAED6C();
    v34 = (_OWORD *)(v3 + v10[13]);
    v35 = v34[1];
    v52[0] = *v34;
    v52[1] = v35;
    v53 = v34[2];
    v51 = 9;
    sub_1D57CB460();
    sub_1D5AAED18();
    v36 = v3 + v10[14];
    v37 = *(_QWORD *)(v36 + 64);
    v38 = *(_WORD *)(v36 + 72);
    v39 = *(_OWORD *)(v36 + 16);
    v52[0] = *(_OWORD *)v36;
    v52[1] = v39;
    v40 = *(_OWORD *)(v36 + 48);
    v53 = *(_OWORD *)(v36 + 32);
    v54 = v40;
    v55 = v37;
    v56 = v38;
    v51 = 10;
    sub_1D57C99E4();
    sub_1D5AAED18();
    v41 = v3 + v10[15];
    v42 = *(_BYTE *)(v41 + 24);
    v43 = *(_BYTE *)(v41 + 25);
    v44 = *(_BYTE *)(v41 + 48);
    LOBYTE(v52[0]) = *(_BYTE *)v41;
    *(_OWORD *)((char *)v52 + 8) = *(_OWORD *)(v41 + 8);
    BYTE8(v52[1]) = v42;
    BYTE9(v52[1]) = v43;
    v53 = *(_OWORD *)(v41 + 32);
    LOBYTE(v54) = v44;
    v51 = 11;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v45 = (_OWORD *)(v3 + v10[16]);
    v46 = v45[1];
    v52[0] = *v45;
    v52[1] = v46;
    v53 = v45[2];
    v51 = 12;
    sub_1D57CB330();
    sub_1D5AAED18();
    LOWORD(v52[0]) = *(_WORD *)(v3 + v10[17]);
    v51 = 13;
    sub_1D57CB830();
    sub_1D5AAED18();
    v47 = v3 + v10[18];
    v48 = *(_WORD *)(v47 + 16);
    v52[0] = *(_OWORD *)v47;
    LOWORD(v52[1]) = v48;
    v51 = 14;
    sub_1D57C62A4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D592CC7C()
{
  unint64_t result;

  result = qword_1EFF4D550;
  if (!qword_1EFF4D550)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC70C, &type metadata for PDFPageViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D550);
  }
  return result;
}

uint64_t PDFPageViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  char *v17;
  uint64_t result;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int *v25;
  char *v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  int *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  __int16 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  __int16 v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char v58;
  char v59;
  char v60;
  char *v61;
  uint64_t v62;
  char *v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  __int16 v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  int *v81;
  _OWORD v82[2];
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  __int16 v86;
  _BYTE v87[136];
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BOOL4 v92;
  char v93;
  char v94;

  v71 = a2;
  v3 = sub_1D5AADFB0();
  v74 = *(_QWORD *)(v3 - 8);
  v75 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADF98();
  v77 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D592D7E4(0, &qword_1EFF4D558, MEMORY[0x1E0DED048]);
  v72 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v70 - v11;
  v81 = (int *)type metadata accessor for PDFPageViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v81);
  v80 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v78 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D592CC7C();
  v76 = v12;
  v15 = v79;
  sub_1D5AAEEB0();
  v73 = v6;
  if (v15)
  {
    v79 = v15;
    LODWORD(v76) = 0;
    v16 = 0;
  }
  else
  {
    LOBYTE(v88) = 0;
    sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v26 = v80;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v80, v8, v6);
    v87[0] = 1;
    sub_1D57C5ED8();
    sub_1D5AAECD0();
    v27 = *((_QWORD *)&v88 + 1);
    v28 = v89;
    v29 = BYTE1(v89);
    v30 = v90;
    v31 = v81;
    v32 = &v26[v81[5]];
    *(_QWORD *)v32 = v88;
    *((_QWORD *)v32 + 1) = v27;
    v32[16] = v28;
    v32[17] = v29;
    *((_QWORD *)v32 + 3) = v30;
    v87[0] = 2;
    sub_1D57CAD28();
    sub_1D5AAECD0();
    v33 = *((_QWORD *)&v88 + 1);
    v34 = &v26[v31[6]];
    *(_QWORD *)v34 = v88;
    *((_QWORD *)v34 + 1) = v33;
    v87[0] = 3;
    sub_1D57CB874();
    sub_1D5AAECD0();
    v35 = *((_QWORD *)&v88 + 1);
    v36 = v89;
    v37 = BYTE1(v89);
    v38 = v90;
    v39 = v91;
    v40 = &v26[v31[7]];
    *(_QWORD *)v40 = v88;
    *((_QWORD *)v40 + 1) = v35;
    v40[16] = v36;
    v40[17] = v37;
    *((_QWORD *)v40 + 3) = v38;
    *((_QWORD *)v40 + 4) = v39;
    v87[0] = 4;
    sub_1D57C7AE0();
    sub_1D5AAECD0();
    v41 = BYTE1(v88);
    v42 = WORD1(v88);
    v43 = &v26[v31[8]];
    *v43 = v88;
    v43[1] = v41;
    *((_WORD *)v43 + 1) = v42;
    LOBYTE(v88) = 5;
    sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v44 = v75;
    sub_1D5AAECD0();
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v26[v31[9]], v5, v44);
    v87[0] = 6;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v45 = v89;
    v46 = &v26[v31[10]];
    *(_OWORD *)v46 = v88;
    *((_QWORD *)v46 + 2) = v45;
    v94 = 7;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57DD5B8((uint64_t)&v88, (uint64_t)v87);
    sub_1D57DD5B8((uint64_t)v87, (uint64_t)&v26[v31[11]]);
    v93 = 8;
    sub_1D58C593C();
    sub_1D5AAECD0();
    v47 = DWORD2(v82[0]);
    v48 = &v26[v81[12]];
    *(_QWORD *)v48 = *(_QWORD *)&v82[0];
    *((_DWORD *)v48 + 2) = v47;
    v93 = 9;
    sub_1D57CB41C();
    sub_1D5AAEC7C();
    v79 = 0;
    v49 = &v80[v81[13]];
    v50 = v82[1];
    *(_OWORD *)v49 = v82[0];
    *((_OWORD *)v49 + 1) = v50;
    *((_OWORD *)v49 + 2) = v83;
    v93 = 10;
    sub_1D57C99A0();
    v51 = v79;
    sub_1D5AAEC7C();
    v79 = v51;
    if (!v51)
    {
      v52 = v85;
      v53 = v86;
      v54 = &v80[v81[14]];
      v55 = v82[1];
      *(_OWORD *)v54 = v82[0];
      *((_OWORD *)v54 + 1) = v55;
      v56 = v84;
      *((_OWORD *)v54 + 2) = v83;
      *((_OWORD *)v54 + 3) = v56;
      *((_QWORD *)v54 + 8) = v52;
      *((_WORD *)v54 + 36) = v53;
      v93 = 11;
      sub_1D57C6AF8();
      v57 = v79;
      sub_1D5AAECD0();
      v92 = v57 == 0;
      v79 = v57;
      if (v57)
        goto LABEL_35;
      v58 = BYTE8(v82[1]);
      v59 = BYTE9(v82[1]);
      v60 = v84;
      v61 = &v80[v81[15]];
      *v61 = v82[0];
      *(_OWORD *)(v61 + 8) = *(_OWORD *)((char *)v82 + 8);
      v61[24] = v58;
      v61[25] = v59;
      *((_OWORD *)v61 + 2) = v83;
      v61[48] = v60;
      v93 = 12;
      sub_1D57CB2EC();
      v62 = v79;
      sub_1D5AAEC7C();
      v79 = v62;
      if (v62)
      {
LABEL_35:
        (*(void (**)(char *, uint64_t))(v10 + 8))(v76, v72);
        __swift_destroy_boxed_opaque_existential_1(v78);
        LODWORD(v78) = 0;
      }
      else
      {
        v63 = &v80[v81[16]];
        v64 = v82[1];
        *(_OWORD *)v63 = v82[0];
        *((_OWORD *)v63 + 1) = v64;
        *((_OWORD *)v63 + 2) = v83;
        v93 = 13;
        sub_1D57CB7EC();
        v65 = v79;
        sub_1D5AAEC7C();
        v79 = v65;
        if (!v65)
        {
          *(_WORD *)&v80[v81[17]] = v82[0];
          v93 = 14;
          sub_1D57C6260();
          v66 = v79;
          sub_1D5AAEC7C();
          v79 = v66;
          if (!v66)
          {
            (*(void (**)(char *, uint64_t))(v10 + 8))(v76, v72);
            v67 = v82[1];
            v68 = (uint64_t)v80;
            v69 = &v80[v81[18]];
            *(_OWORD *)v69 = v82[0];
            *((_WORD *)v69 + 8) = v67;
            sub_1D592D840(v68, v71);
            __swift_destroy_boxed_opaque_existential_1(v78);
            return sub_1D592D884(v68);
          }
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v76, v72);
        __swift_destroy_boxed_opaque_existential_1(v78);
        LODWORD(v78) = 1;
      }
      v17 = v80;
      (*(void (**)(char *, uint64_t))(v77 + 8))(v80, v73);
      LODWORD(v77) = 1;
      LODWORD(v76) = 1;
      v24 = 1;
      v23 = 1;
      v22 = 1;
      v21 = 1;
      v20 = 1;
      LOBYTE(v19) = 1;
LABEL_7:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        goto LABEL_8;
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v76, v72);
    v16 = 1007;
    LODWORD(v76) = 1;
  }
  v17 = v80;
  result = __swift_destroy_boxed_opaque_existential_1(v78);
  v19 = (v16 >> 2) & 1;
  v20 = (v16 >> 3) & 1;
  v21 = (v16 >> 5) & 1;
  v22 = (v16 >> 6) & 1;
  v23 = (v16 >> 7) & 1;
  v24 = (v16 >> 8) & 1;
  if ((v16 & 1) != 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v17, v73);
    if ((v16 & 2) != 0)
      goto LABEL_6;
  }
  else if ((v16 & 2) != 0)
  {
LABEL_6:
    LODWORD(v78) = 0;
    v92 = 0;
    LODWORD(v77) = 0;
    goto LABEL_7;
  }
  LODWORD(v77) = 0;
  v92 = 0;
  LODWORD(v78) = 0;
  if ((v16 & 4) != 0)
  {
LABEL_8:
    v25 = v81;
    result = swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  v25 = v81;
  if (!v20)
  {
LABEL_9:
    if (v21)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
  {
LABEL_10:
    result = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(&v17[v25[9]], v75);
    if ((v22 & 1) == 0)
      goto LABEL_11;
    goto LABEL_23;
  }
LABEL_22:
  if (!v22)
  {
LABEL_11:
    if (v23)
      goto LABEL_12;
    goto LABEL_24;
  }
LABEL_23:
  result = sub_1D57DAEDC(*(_QWORD *)&v17[v25[10]], *(_QWORD *)&v17[v25[10] + 8], *(_QWORD *)&v17[v25[10] + 16]);
  if ((v23 & 1) != 0)
  {
LABEL_12:
    sub_1D57DD5B8((uint64_t)&v17[v25[11]], (uint64_t)&v88);
    result = (uint64_t)sub_1D57DE9C8(&v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
    if ((v24 & 1) == 0)
      goto LABEL_13;
    goto LABEL_25;
  }
LABEL_24:
  if (!v24)
  {
LABEL_13:
    if ((_DWORD)v76)
      goto LABEL_14;
    goto LABEL_26;
  }
LABEL_25:
  result = swift_bridgeObjectRelease();
  if ((v76 & 1) != 0)
  {
LABEL_14:
    result = sub_1D584ABF4(*(_QWORD *)&v17[v25[13]], *(_QWORD *)&v17[v25[13] + 8]);
    if ((v77 & 1) == 0)
      goto LABEL_15;
    goto LABEL_27;
  }
LABEL_26:
  if (!(_DWORD)v77)
  {
LABEL_15:
    if (v92)
      goto LABEL_16;
LABEL_28:
    if (!(_DWORD)v78)
      return result;
    return sub_1D584ABF4(*(_QWORD *)&v17[v25[16]], *(_QWORD *)&v17[v25[16] + 8]);
  }
LABEL_27:
  result = sub_1D58B0710(*(_QWORD *)&v17[v25[14]], *(_QWORD *)&v17[v25[14] + 8]);
  if (!v92)
    goto LABEL_28;
LABEL_16:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v78 & 1) == 0)
    return result;
  return sub_1D584ABF4(*(_QWORD *)&v17[v25[16]], *(_QWORD *)&v17[v25[16] + 8]);
}

void sub_1D592D7E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D592CC7C();
    v7 = a3(a1, &type metadata for PDFPageViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D592D840(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PDFPageViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D592D884(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PDFPageViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D592D8C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PDFPageViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D592D8D4(_QWORD *a1)
{
  return PDFPageViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D592D8E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47228, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D518, a1);
}

uint64_t sub_1D592D90C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47230, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D530, a1);
}

uint64_t sub_1D592D930@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  v17 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v17, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v17, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v17, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v17, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v17, v32);
  v33 = a2 + a1[18];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v33, v17, v34);
}

uint64_t *initializeBufferWithCopyOfBuffer for PDFPageViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v64 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v64 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = a3[18];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
  }
  return a1;
}

uint64_t destroy for PDFPageViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  v31 = a1 + a2[18];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
}

uint64_t initializeWithCopy for PDFPageViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  return a1;
}

uint64_t assignWithCopy for PDFPageViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  return a1;
}

uint64_t initializeWithTake for PDFPageViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  return a1;
}

uint64_t assignWithTake for PDFPageViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  return a1;
}

uint64_t getEnumTagSinglePayload for PDFPageViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D592F754(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D57A8C9C();
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                            v12 = *(_QWORD *)(v25 - 8);
                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                            {
                              v8 = v25;
                              v13 = a3[17];
                            }
                            else
                            {
                              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                              v8 = v26;
                              v12 = *(_QWORD *)(v26 - 8);
                              v13 = a3[18];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PDFPageViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D592FB48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D57A8C9C();
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                            v14 = *(_QWORD *)(v27 - 8);
                            if (*(_DWORD *)(v14 + 84) == a3)
                            {
                              v10 = v27;
                              v15 = a4[17];
                            }
                            else
                            {
                              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                              v10 = v28;
                              v14 = *(_QWORD *)(v28 - 8);
                              v15 = a4[18];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D592FF38()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          if (v4 <= 0x3F)
          {
            sub_1D57A8C9C();
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7170, (void (*)(void))sub_1D58C593C, (void (*)(void))sub_1D58C5984);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                            if (v13 <= 0x3F)
                            {
                              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                              if (v14 <= 0x3F)
                                swift_initStructMetadata();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for PDFPageViewEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v82;
  char *v83;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (char *)a1 + v16;
    v19 = (char *)a2 + v16;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v18[16] = v19[16];
    v18[17] = v19[17];
    v21 = *((_QWORD *)v19 + 3);
    v22 = *((_QWORD *)v19 + 4);
    LODWORD(v19) = *(_DWORD *)((char *)a2 + v17);
    *((_QWORD *)v18 + 3) = v21;
    *((_QWORD *)v18 + 4) = v22;
    *(_DWORD *)((char *)a1 + v17) = (_DWORD)v19;
    v23 = a3[9];
    v82 = (char *)a1 + v23;
    v83 = (char *)a2 + v23;
    v24 = sub_1D5AADFB0();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v82, v83, v24);
    v26 = a3[10];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *((_QWORD *)v28 + 2);
    if (v29 == 1)
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
    }
    else
    {
      *v27 = *v28;
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v29;
      swift_bridgeObjectRetain();
    }
    v31 = a3[11];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = *((_QWORD *)v33 + 2);
    if (v34)
    {
      *(_WORD *)v32 = *(_WORD *)v33;
      *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
      *((_QWORD *)v32 + 2) = v34;
      *((_QWORD *)v32 + 3) = *((_QWORD *)v33 + 3);
      v35 = *((_QWORD *)v33 + 5);
      *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
      *((_QWORD *)v32 + 5) = v35;
      v36 = *((_QWORD *)v33 + 7);
      *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
      *((_QWORD *)v32 + 7) = v36;
      v37 = *((_QWORD *)v33 + 9);
      *((_QWORD *)v32 + 8) = *((_QWORD *)v33 + 8);
      *((_QWORD *)v32 + 9) = v37;
      v32[80] = v33[80];
      v38 = *((_QWORD *)v33 + 12);
      *((_QWORD *)v32 + 11) = *((_QWORD *)v33 + 11);
      *((_QWORD *)v32 + 12) = v38;
      *((_QWORD *)v32 + 13) = *((_QWORD *)v33 + 13);
      v32[112] = v33[112];
      v39 = *((_QWORD *)v33 + 16);
      *((_QWORD *)v32 + 15) = *((_QWORD *)v33 + 15);
      *((_QWORD *)v32 + 16) = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v40 = *((_OWORD *)v33 + 7);
      *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
      *((_OWORD *)v32 + 7) = v40;
      *((_QWORD *)v32 + 16) = *((_QWORD *)v33 + 16);
      v41 = *((_OWORD *)v33 + 3);
      *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
      *((_OWORD *)v32 + 3) = v41;
      v42 = *((_OWORD *)v33 + 5);
      *((_OWORD *)v32 + 4) = *((_OWORD *)v33 + 4);
      *((_OWORD *)v32 + 5) = v42;
      v43 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v43;
    }
    v44 = a3[12];
    v45 = a3[13];
    v46 = (char *)a1 + v44;
    v47 = (char *)a2 + v44;
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *((_DWORD *)v46 + 2) = *((_DWORD *)v47 + 2);
    v48 = (uint64_t *)((char *)a1 + v45);
    v49 = (uint64_t *)((char *)a2 + v45);
    v50 = *(uint64_t *)((char *)a2 + v45 + 8);
    swift_bridgeObjectRetain();
    if (v50)
    {
      *v48 = *v49;
      v48[1] = v50;
      v51 = v49[3];
      v48[2] = v49[2];
      v48[3] = v51;
      v52 = v49[4];
      v53 = v49[5];
      v48[4] = v52;
      v48[5] = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v54 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v54;
      *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
    }
    v55 = a3[14];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    v58 = *((_QWORD *)v57 + 1);
    if (v58 == 1)
    {
      v59 = *((_OWORD *)v57 + 3);
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
      *((_OWORD *)v56 + 3) = v59;
      *(_OWORD *)(v56 + 58) = *(_OWORD *)(v57 + 58);
      v60 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v60;
    }
    else
    {
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      v56[16] = v57[16];
      v61 = *((_QWORD *)v57 + 4);
      *((_QWORD *)v56 + 3) = *((_QWORD *)v57 + 3);
      *((_QWORD *)v56 + 4) = v61;
      v62 = *((_QWORD *)v57 + 6);
      *((_QWORD *)v56 + 5) = *((_QWORD *)v57 + 5);
      *((_QWORD *)v56 + 6) = v62;
      v63 = *((_QWORD *)v57 + 8);
      *((_QWORD *)v56 + 7) = *((_QWORD *)v57 + 7);
      *((_QWORD *)v56 + 8) = v63;
      v56[72] = v57[72];
      v56[73] = v57[73];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v64 = a3[15];
    v65 = a3[16];
    v66 = (char *)a1 + v64;
    v67 = (char *)a2 + v64;
    *v66 = *v67;
    v68 = *((_QWORD *)v67 + 2);
    *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
    *((_QWORD *)v66 + 2) = v68;
    *((_WORD *)v66 + 12) = *((_WORD *)v67 + 12);
    v69 = *((_QWORD *)v67 + 5);
    *((_QWORD *)v66 + 4) = *((_QWORD *)v67 + 4);
    *((_QWORD *)v66 + 5) = v69;
    v66[48] = v67[48];
    v70 = (uint64_t *)((char *)a1 + v65);
    v71 = (uint64_t *)((char *)a2 + v65);
    v72 = *(uint64_t *)((char *)a2 + v65 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v72)
    {
      *v70 = *v71;
      v70[1] = v72;
      v73 = v71[3];
      v70[2] = v71[2];
      v70[3] = v73;
      v74 = v71[4];
      v75 = v71[5];
      v70[4] = v74;
      v70[5] = v75;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v76 = *((_OWORD *)v71 + 1);
      *(_OWORD *)v70 = *(_OWORD *)v71;
      *((_OWORD *)v70 + 1) = v76;
      *((_OWORD *)v70 + 2) = *((_OWORD *)v71 + 2);
    }
    v77 = a3[18];
    *(_WORD *)((char *)a1 + a3[17]) = *(_WORD *)((char *)a2 + a3[17]);
    v78 = (char *)a1 + v77;
    v79 = (char *)a2 + v77;
    v80 = *((_QWORD *)v79 + 1);
    *(_QWORD *)v78 = *(_QWORD *)v79;
    *((_QWORD *)v78 + 1) = v80;
    *((_WORD *)v78 + 8) = *((_WORD *)v79 + 8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PDFPageViewEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + a2[9];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + a2[10] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[13] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[14] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[16] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PDFPageViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = *(_QWORD *)(v18 + 24);
  v21 = *(_QWORD *)(v18 + 32);
  LODWORD(v18) = *(_DWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 24) = v20;
  *(_QWORD *)(v17 + 32) = v21;
  *(_DWORD *)(a1 + v16) = v18;
  v22 = a3[9];
  v81 = a1 + v22;
  v82 = a2 + v22;
  v23 = sub_1D5AADFB0();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v81, v82, v23);
  v26 = a3[10];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(v28 + 16);
  if (v29 == 1)
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  }
  else
  {
    *(_BYTE *)v27 = *(_BYTE *)v28;
    *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
    *(_QWORD *)(v27 + 16) = v29;
    swift_bridgeObjectRetain();
  }
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    *(_WORD *)v31 = *(_WORD *)v32;
    *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
    *(_QWORD *)(v31 + 16) = v33;
    *(_QWORD *)(v31 + 24) = *(_QWORD *)(v32 + 24);
    v34 = *(_QWORD *)(v32 + 40);
    *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
    *(_QWORD *)(v31 + 40) = v34;
    v35 = *(_QWORD *)(v32 + 56);
    *(_QWORD *)(v31 + 48) = *(_QWORD *)(v32 + 48);
    *(_QWORD *)(v31 + 56) = v35;
    v36 = *(_QWORD *)(v32 + 72);
    *(_QWORD *)(v31 + 64) = *(_QWORD *)(v32 + 64);
    *(_QWORD *)(v31 + 72) = v36;
    *(_BYTE *)(v31 + 80) = *(_BYTE *)(v32 + 80);
    v37 = *(_QWORD *)(v32 + 96);
    *(_QWORD *)(v31 + 88) = *(_QWORD *)(v32 + 88);
    *(_QWORD *)(v31 + 96) = v37;
    *(_QWORD *)(v31 + 104) = *(_QWORD *)(v32 + 104);
    *(_BYTE *)(v31 + 112) = *(_BYTE *)(v32 + 112);
    v38 = *(_QWORD *)(v32 + 128);
    *(_QWORD *)(v31 + 120) = *(_QWORD *)(v32 + 120);
    *(_QWORD *)(v31 + 128) = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v39 = *(_OWORD *)(v32 + 112);
    *(_OWORD *)(v31 + 96) = *(_OWORD *)(v32 + 96);
    *(_OWORD *)(v31 + 112) = v39;
    *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
    v40 = *(_OWORD *)(v32 + 48);
    *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
    *(_OWORD *)(v31 + 48) = v40;
    v41 = *(_OWORD *)(v32 + 80);
    *(_OWORD *)(v31 + 64) = *(_OWORD *)(v32 + 64);
    *(_OWORD *)(v31 + 80) = v41;
    v42 = *(_OWORD *)(v32 + 16);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *(_OWORD *)(v31 + 16) = v42;
  }
  v43 = v25[12];
  v44 = v25[13];
  v45 = a1 + v43;
  v46 = a2 + v43;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_DWORD *)(v45 + 8) = *(_DWORD *)(v46 + 8);
  v47 = (_QWORD *)(a1 + v44);
  v48 = (_QWORD *)(a2 + v44);
  v49 = *(_QWORD *)(a2 + v44 + 8);
  swift_bridgeObjectRetain();
  if (v49)
  {
    *v47 = *v48;
    v47[1] = v49;
    v50 = v48[3];
    v47[2] = v48[2];
    v47[3] = v50;
    v51 = v48[4];
    v52 = v48[5];
    v47[4] = v51;
    v47[5] = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v53 = *((_OWORD *)v48 + 1);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *((_OWORD *)v47 + 1) = v53;
    *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
  }
  v54 = v25[14];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = *(_QWORD *)(v56 + 8);
  if (v57 == 1)
  {
    v58 = *(_OWORD *)(v56 + 48);
    *(_OWORD *)(v55 + 32) = *(_OWORD *)(v56 + 32);
    *(_OWORD *)(v55 + 48) = v58;
    *(_OWORD *)(v55 + 58) = *(_OWORD *)(v56 + 58);
    v59 = *(_OWORD *)(v56 + 16);
    *(_OWORD *)v55 = *(_OWORD *)v56;
    *(_OWORD *)(v55 + 16) = v59;
  }
  else
  {
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *(_QWORD *)(v55 + 8) = v57;
    *(_BYTE *)(v55 + 16) = *(_BYTE *)(v56 + 16);
    v60 = *(_QWORD *)(v56 + 32);
    *(_QWORD *)(v55 + 24) = *(_QWORD *)(v56 + 24);
    *(_QWORD *)(v55 + 32) = v60;
    v61 = *(_QWORD *)(v56 + 48);
    *(_QWORD *)(v55 + 40) = *(_QWORD *)(v56 + 40);
    *(_QWORD *)(v55 + 48) = v61;
    v62 = *(_QWORD *)(v56 + 64);
    *(_QWORD *)(v55 + 56) = *(_QWORD *)(v56 + 56);
    *(_QWORD *)(v55 + 64) = v62;
    *(_BYTE *)(v55 + 72) = *(_BYTE *)(v56 + 72);
    *(_BYTE *)(v55 + 73) = *(_BYTE *)(v56 + 73);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v63 = v25[15];
  v64 = v25[16];
  v65 = a1 + v63;
  v66 = a2 + v63;
  *(_BYTE *)v65 = *(_BYTE *)v66;
  v67 = *(_QWORD *)(v66 + 16);
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
  *(_QWORD *)(v65 + 16) = v67;
  *(_WORD *)(v65 + 24) = *(_WORD *)(v66 + 24);
  v68 = *(_QWORD *)(v66 + 40);
  *(_QWORD *)(v65 + 32) = *(_QWORD *)(v66 + 32);
  *(_QWORD *)(v65 + 40) = v68;
  *(_BYTE *)(v65 + 48) = *(_BYTE *)(v66 + 48);
  v69 = (_QWORD *)(a1 + v64);
  v70 = (_QWORD *)(a2 + v64);
  v71 = *(_QWORD *)(a2 + v64 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v71)
  {
    *v69 = *v70;
    v69[1] = v71;
    v72 = v70[3];
    v69[2] = v70[2];
    v69[3] = v72;
    v73 = v70[4];
    v74 = v70[5];
    v69[4] = v73;
    v69[5] = v74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v75 = *((_OWORD *)v70 + 1);
    *(_OWORD *)v69 = *(_OWORD *)v70;
    *((_OWORD *)v69 + 1) = v75;
    *((_OWORD *)v69 + 2) = *((_OWORD *)v70 + 2);
  }
  v76 = v25[18];
  *(_WORD *)(a1 + v25[17]) = *(_WORD *)(a2 + v25[17]);
  v77 = a1 + v76;
  v78 = a2 + v76;
  v79 = *(_QWORD *)(v78 + 8);
  *(_QWORD *)v77 = *(_QWORD *)v78;
  *(_QWORD *)(v77 + 8) = v79;
  *(_WORD *)(v77 + 16) = *(_WORD *)(v78 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PDFPageViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_BYTE *)(a1 + v16);
  v18 = (_BYTE *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  v17[3] = v18[3];
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = (__int128 *)(a2 + v23);
  v26 = *(_QWORD *)(a1 + v23 + 16);
  v27 = *(_QWORD *)(a2 + v23 + 16);
  if (v26 == 1)
  {
    if (v27 == 1)
    {
      v28 = *v25;
      *(_QWORD *)(v24 + 16) = *((_QWORD *)v25 + 2);
      *(_OWORD *)v24 = v28;
    }
    else
    {
      *(_BYTE *)v24 = *(_BYTE *)v25;
      *(_QWORD *)(v24 + 8) = *((_QWORD *)v25 + 1);
      *(_QWORD *)(v24 + 16) = *((_QWORD *)v25 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v27 == 1)
  {
    sub_1D57D9100(v24);
    v29 = *((_QWORD *)v25 + 2);
    *(_OWORD *)v24 = *v25;
    *(_QWORD *)(v24 + 16) = v29;
  }
  else
  {
    *(_BYTE *)v24 = *(_BYTE *)v25;
    *(_QWORD *)(v24 + 8) = *((_QWORD *)v25 + 1);
    *(_QWORD *)(v24 + 16) = *((_QWORD *)v25 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a1 + v30 + 16);
  v34 = *(_QWORD *)(a2 + v30 + 16);
  if (v33)
  {
    if (v34)
    {
      *(_BYTE *)v31 = *(_BYTE *)v32;
      *(_BYTE *)(v31 + 1) = *(_BYTE *)(v32 + 1);
      *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
      *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v31 + 24) = *(_DWORD *)(v32 + 24);
      *(_DWORD *)(v31 + 28) = *(_DWORD *)(v32 + 28);
      *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 40) = *(_QWORD *)(v32 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 48) = *(_QWORD *)(v32 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 56) = *(_QWORD *)(v32 + 56);
      *(_QWORD *)(v31 + 64) = *(_QWORD *)(v32 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 72) = *(_QWORD *)(v32 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v31 + 80) = *(_BYTE *)(v32 + 80);
      *(_QWORD *)(v31 + 88) = *(_QWORD *)(v32 + 88);
      *(_QWORD *)(v31 + 96) = *(_QWORD *)(v32 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35 = *(_QWORD *)(v32 + 104);
      *(_BYTE *)(v31 + 112) = *(_BYTE *)(v32 + 112);
      *(_QWORD *)(v31 + 104) = v35;
      *(_QWORD *)(v31 + 120) = *(_QWORD *)(v32 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v31);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      v37 = *(_OWORD *)(v32 + 64);
      v39 = *(_OWORD *)(v32 + 16);
      v38 = *(_OWORD *)(v32 + 32);
      *(_OWORD *)(v31 + 48) = *(_OWORD *)(v32 + 48);
      *(_OWORD *)(v31 + 64) = v37;
      *(_OWORD *)(v31 + 16) = v39;
      *(_OWORD *)(v31 + 32) = v38;
      v41 = *(_OWORD *)(v32 + 96);
      v40 = *(_OWORD *)(v32 + 112);
      v42 = *(_OWORD *)(v32 + 80);
      *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
      *(_OWORD *)(v31 + 96) = v41;
      *(_OWORD *)(v31 + 112) = v40;
      *(_OWORD *)(v31 + 80) = v42;
    }
  }
  else if (v34)
  {
    *(_BYTE *)v31 = *(_BYTE *)v32;
    *(_BYTE *)(v31 + 1) = *(_BYTE *)(v32 + 1);
    *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
    *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
    *(_DWORD *)(v31 + 24) = *(_DWORD *)(v32 + 24);
    *(_DWORD *)(v31 + 28) = *(_DWORD *)(v32 + 28);
    *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
    *(_QWORD *)(v31 + 40) = *(_QWORD *)(v32 + 40);
    *(_QWORD *)(v31 + 48) = *(_QWORD *)(v32 + 48);
    *(_QWORD *)(v31 + 56) = *(_QWORD *)(v32 + 56);
    *(_QWORD *)(v31 + 64) = *(_QWORD *)(v32 + 64);
    *(_QWORD *)(v31 + 72) = *(_QWORD *)(v32 + 72);
    *(_BYTE *)(v31 + 80) = *(_BYTE *)(v32 + 80);
    *(_QWORD *)(v31 + 88) = *(_QWORD *)(v32 + 88);
    *(_QWORD *)(v31 + 96) = *(_QWORD *)(v32 + 96);
    v36 = *(_QWORD *)(v32 + 104);
    *(_BYTE *)(v31 + 112) = *(_BYTE *)(v32 + 112);
    *(_QWORD *)(v31 + 104) = v36;
    *(_QWORD *)(v31 + 120) = *(_QWORD *)(v32 + 120);
    *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v43 = *(_OWORD *)(v32 + 16);
    v44 = *(_OWORD *)(v32 + 32);
    v45 = *(_OWORD *)(v32 + 64);
    *(_OWORD *)(v31 + 48) = *(_OWORD *)(v32 + 48);
    *(_OWORD *)(v31 + 64) = v45;
    *(_OWORD *)(v31 + 16) = v43;
    *(_OWORD *)(v31 + 32) = v44;
    v46 = *(_OWORD *)(v32 + 80);
    v47 = *(_OWORD *)(v32 + 96);
    v48 = *(_OWORD *)(v32 + 112);
    *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
    *(_OWORD *)(v31 + 96) = v47;
    *(_OWORD *)(v31 + 112) = v48;
    *(_OWORD *)(v31 + 80) = v46;
  }
  v49 = a3[12];
  v50 = a1 + v49;
  v51 = a2 + v49;
  *(_QWORD *)(a1 + v49) = *(_QWORD *)(a2 + v49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v50 + 8) = *(_DWORD *)(v51 + 8);
  v52 = a3[13];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  v55 = *(_QWORD *)(a1 + v52 + 8);
  v56 = *(_QWORD *)(a2 + v52 + 8);
  if (v55)
  {
    if (v56)
    {
      *v53 = *v54;
      v53[1] = v54[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[2] = v54[2];
      v53[3] = v54[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[4] = v54[4];
      v53[5] = v54[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5829E98((uint64_t)v53);
      v58 = *((_OWORD *)v54 + 1);
      v57 = *((_OWORD *)v54 + 2);
      *(_OWORD *)v53 = *(_OWORD *)v54;
      *((_OWORD *)v53 + 1) = v58;
      *((_OWORD *)v53 + 2) = v57;
    }
  }
  else if (v56)
  {
    *v53 = *v54;
    v53[1] = v54[1];
    v53[2] = v54[2];
    v53[3] = v54[3];
    v53[4] = v54[4];
    v53[5] = v54[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v59 = *(_OWORD *)v54;
    v60 = *((_OWORD *)v54 + 2);
    *((_OWORD *)v53 + 1) = *((_OWORD *)v54 + 1);
    *((_OWORD *)v53 + 2) = v60;
    *(_OWORD *)v53 = v59;
  }
  v61 = a3[14];
  v62 = a1 + v61;
  v63 = a2 + v61;
  v64 = *(_QWORD *)(a1 + v61 + 8);
  v65 = *(_QWORD *)(a2 + v61 + 8);
  if (v64 == 1)
  {
    if (v65 == 1)
    {
      *(_OWORD *)v62 = *(_OWORD *)v63;
      v66 = *(_OWORD *)(v63 + 16);
      v67 = *(_OWORD *)(v63 + 32);
      v68 = *(_OWORD *)(v63 + 48);
      *(_OWORD *)(v62 + 58) = *(_OWORD *)(v63 + 58);
      *(_OWORD *)(v62 + 32) = v67;
      *(_OWORD *)(v62 + 48) = v68;
      *(_OWORD *)(v62 + 16) = v66;
    }
    else
    {
      *(_QWORD *)v62 = *(_QWORD *)v63;
      *(_QWORD *)(v62 + 8) = *(_QWORD *)(v63 + 8);
      *(_BYTE *)(v62 + 16) = *(_BYTE *)(v63 + 16);
      *(_QWORD *)(v62 + 24) = *(_QWORD *)(v63 + 24);
      *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
      *(_QWORD *)(v62 + 40) = *(_QWORD *)(v63 + 40);
      *(_QWORD *)(v62 + 48) = *(_QWORD *)(v63 + 48);
      *(_QWORD *)(v62 + 56) = *(_QWORD *)(v63 + 56);
      *(_QWORD *)(v62 + 64) = *(_QWORD *)(v63 + 64);
      *(_BYTE *)(v62 + 72) = *(_BYTE *)(v63 + 72);
      *(_BYTE *)(v62 + 73) = *(_BYTE *)(v63 + 73);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v65 == 1)
  {
    sub_1D58B3718(v62);
    *(_OWORD *)v62 = *(_OWORD *)v63;
    v70 = *(_OWORD *)(v63 + 32);
    v69 = *(_OWORD *)(v63 + 48);
    v71 = *(_OWORD *)(v63 + 16);
    *(_OWORD *)(v62 + 58) = *(_OWORD *)(v63 + 58);
    *(_OWORD *)(v62 + 32) = v70;
    *(_OWORD *)(v62 + 48) = v69;
    *(_OWORD *)(v62 + 16) = v71;
  }
  else
  {
    *(_QWORD *)v62 = *(_QWORD *)v63;
    *(_QWORD *)(v62 + 8) = *(_QWORD *)(v63 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v62 + 16) = *(_BYTE *)(v63 + 16);
    *(_QWORD *)(v62 + 24) = *(_QWORD *)(v63 + 24);
    *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v62 + 40) = *(_QWORD *)(v63 + 40);
    *(_QWORD *)(v62 + 48) = *(_QWORD *)(v63 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v62 + 56) = *(_QWORD *)(v63 + 56);
    *(_QWORD *)(v62 + 64) = *(_QWORD *)(v63 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v62 + 72) = *(_BYTE *)(v63 + 72);
    *(_BYTE *)(v62 + 73) = *(_BYTE *)(v63 + 73);
  }
  v72 = a3[15];
  v73 = a1 + v72;
  v74 = a2 + v72;
  *(_BYTE *)v73 = *(_BYTE *)(a2 + v72);
  *(_QWORD *)(v73 + 8) = *(_QWORD *)(a2 + v72 + 8);
  *(_QWORD *)(v73 + 16) = *(_QWORD *)(a2 + v72 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v73 + 24) = *(_BYTE *)(v74 + 24);
  *(_BYTE *)(v73 + 25) = *(_BYTE *)(v74 + 25);
  *(_QWORD *)(v73 + 32) = *(_QWORD *)(v74 + 32);
  *(_QWORD *)(v73 + 40) = *(_QWORD *)(v74 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v73 + 48) = *(_BYTE *)(v74 + 48);
  v75 = a3[16];
  v76 = (_QWORD *)(a1 + v75);
  v77 = (_QWORD *)(a2 + v75);
  v78 = *(_QWORD *)(a1 + v75 + 8);
  v79 = *(_QWORD *)(a2 + v75 + 8);
  if (v78)
  {
    if (v79)
    {
      *v76 = *v77;
      v76[1] = v77[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v76[2] = v77[2];
      v76[3] = v77[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v76[4] = v77[4];
      v76[5] = v77[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D59315F8((uint64_t)v76);
      v81 = *((_OWORD *)v77 + 1);
      v80 = *((_OWORD *)v77 + 2);
      *(_OWORD *)v76 = *(_OWORD *)v77;
      *((_OWORD *)v76 + 1) = v81;
      *((_OWORD *)v76 + 2) = v80;
    }
  }
  else if (v79)
  {
    *v76 = *v77;
    v76[1] = v77[1];
    v76[2] = v77[2];
    v76[3] = v77[3];
    v76[4] = v77[4];
    v76[5] = v77[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v82 = *(_OWORD *)v77;
    v83 = *((_OWORD *)v77 + 2);
    *((_OWORD *)v76 + 1) = *((_OWORD *)v77 + 1);
    *((_OWORD *)v76 + 2) = v83;
    *(_OWORD *)v76 = v82;
  }
  *(_WORD *)(a1 + a3[17]) = *(_WORD *)(a2 + a3[17]);
  v84 = a3[18];
  v85 = a1 + v84;
  v86 = a2 + v84;
  *(_QWORD *)v85 = *(_QWORD *)(a2 + v84);
  *(_QWORD *)(v85 + 8) = *(_QWORD *)(a2 + v84 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v85 + 16) = *(_BYTE *)(v86 + 16);
  *(_BYTE *)(v85 + 17) = *(_BYTE *)(v86 + 17);
  return a1;
}

uint64_t sub_1D59315F8(uint64_t a1)
{
  destroy for ReferralData();
  return a1;
}

uint64_t initializeWithTake for PDFPageViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  _OWORD *v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = (__int128 *)(a2 + v12);
  *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
  v17 = *v15;
  v16 = v15[1];
  LODWORD(v15) = *(_DWORD *)(a2 + v13);
  *(_OWORD *)v14 = v17;
  *(_OWORD *)(v14 + 16) = v16;
  *(_DWORD *)(a1 + v13) = (_DWORD)v15;
  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = a3[10];
  v23 = a3[11];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v26 = a1 + v23;
  v27 = a2 + v23;
  v28 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v28;
  v29 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v29;
  *(_QWORD *)(v26 + 128) = *(_QWORD *)(v27 + 128);
  v30 = *(_OWORD *)(v27 + 112);
  *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
  *(_OWORD *)(v26 + 112) = v30;
  v31 = *(_OWORD *)(v27 + 80);
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
  *(_OWORD *)(v26 + 80) = v31;
  v32 = a3[12];
  v33 = a3[13];
  v34 = a1 + v32;
  v35 = a2 + v32;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_DWORD *)(v34 + 8) = *(_DWORD *)(v35 + 8);
  v36 = (_OWORD *)(a1 + v33);
  v37 = (_OWORD *)(a2 + v33);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v36[2] = v37[2];
  v39 = a3[14];
  v40 = a3[15];
  v41 = (_OWORD *)(a1 + v39);
  v42 = (_OWORD *)(a2 + v39);
  *(_OWORD *)((char *)v41 + 58) = *(_OWORD *)((char *)v42 + 58);
  v43 = v42[3];
  v41[2] = v42[2];
  v41[3] = v43;
  v44 = v42[1];
  *v41 = *v42;
  v41[1] = v44;
  v45 = a1 + v40;
  v46 = a2 + v40;
  v47 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *(_OWORD *)(v45 + 16) = v47;
  *(_OWORD *)(v45 + 32) = *(_OWORD *)(v46 + 32);
  *(_BYTE *)(v45 + 48) = *(_BYTE *)(v46 + 48);
  v48 = a3[16];
  v49 = a3[17];
  v50 = (_OWORD *)(a1 + v48);
  v51 = (_OWORD *)(a2 + v48);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  v50[2] = v51[2];
  *(_WORD *)(a1 + v49) = *(_WORD *)(a2 + v49);
  v53 = a3[18];
  v54 = a1 + v53;
  v55 = a2 + v53;
  *(_WORD *)(v54 + 16) = *(_WORD *)(v55 + 16);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  return a1;
}

uint64_t assignWithTake for PDFPageViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  *(_BYTE *)(v23 + 1) = *(_BYTE *)(v24 + 1);
  *(_WORD *)(v23 + 2) = *(_WORD *)(v24 + 2);
  v25 = a1 + v22;
  v26 = a2 + v22;
  v27 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  if (*(_QWORD *)(a1 + v28 + 16) == 1)
    goto LABEL_4;
  v31 = *(_QWORD *)(v30 + 16);
  if (v31 == 1)
  {
    sub_1D57D9100(v29);
LABEL_4:
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v29 = *(_BYTE *)v30;
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v29 + 16) = v31;
  swift_bridgeObjectRelease();
LABEL_6:
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  if (*(_QWORD *)(a1 + v32 + 16))
  {
    v35 = *(_QWORD *)(v34 + 16);
    if (v35)
    {
      *(_WORD *)v33 = *(_WORD *)v34;
      *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
      *(_QWORD *)(v33 + 16) = v35;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
      *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 40) = *(_QWORD *)(v34 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
      swift_bridgeObjectRelease();
      v36 = *(_QWORD *)(v34 + 64);
      *(_QWORD *)(v33 + 56) = *(_QWORD *)(v34 + 56);
      *(_QWORD *)(v33 + 64) = v36;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 72) = *(_QWORD *)(v34 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v33 + 80) = *(_BYTE *)(v34 + 80);
      v37 = *(_QWORD *)(v34 + 96);
      *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
      *(_QWORD *)(v33 + 96) = v37;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 104) = *(_QWORD *)(v34 + 104);
      *(_BYTE *)(v33 + 112) = *(_BYTE *)(v34 + 112);
      *(_QWORD *)(v33 + 120) = *(_QWORD *)(v34 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E17B8(v33);
  }
  v38 = *(_OWORD *)(v34 + 112);
  *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
  *(_OWORD *)(v33 + 112) = v38;
  *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
  v39 = *(_OWORD *)(v34 + 48);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
  *(_OWORD *)(v33 + 48) = v39;
  v40 = *(_OWORD *)(v34 + 80);
  *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
  *(_OWORD *)(v33 + 80) = v40;
  v41 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v41;
LABEL_11:
  v42 = a3[12];
  v43 = a1 + v42;
  v44 = a2 + v42;
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v43 + 8) = *(_DWORD *)(v44 + 8);
  v45 = a3[13];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  if (*(_QWORD *)(a1 + v45 + 8))
  {
    v48 = v47[1];
    if (v48)
    {
      *v46 = *v47;
      v46[1] = v48;
      swift_bridgeObjectRelease();
      v49 = v47[3];
      v46[2] = v47[2];
      v46[3] = v49;
      swift_bridgeObjectRelease();
      v50 = v47[5];
      v46[4] = v47[4];
      v46[5] = v50;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D5829E98((uint64_t)v46);
  }
  v51 = *((_OWORD *)v47 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v51;
  *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
LABEL_16:
  v52 = a3[14];
  v53 = a1 + v52;
  v54 = a2 + v52;
  if (*(_QWORD *)(a1 + v52 + 8) == 1)
  {
LABEL_19:
    v56 = *(_OWORD *)(v54 + 48);
    *(_OWORD *)(v53 + 32) = *(_OWORD *)(v54 + 32);
    *(_OWORD *)(v53 + 48) = v56;
    *(_OWORD *)(v53 + 58) = *(_OWORD *)(v54 + 58);
    v57 = *(_OWORD *)(v54 + 16);
    *(_OWORD *)v53 = *(_OWORD *)v54;
    *(_OWORD *)(v53 + 16) = v57;
    goto LABEL_21;
  }
  v55 = *(_QWORD *)(v54 + 8);
  if (v55 == 1)
  {
    sub_1D58B3718(v53);
    goto LABEL_19;
  }
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *(_QWORD *)(v53 + 8) = v55;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v53 + 16) = *(_BYTE *)(v54 + 16);
  v58 = *(_QWORD *)(v54 + 32);
  *(_QWORD *)(v53 + 24) = *(_QWORD *)(v54 + 24);
  *(_QWORD *)(v53 + 32) = v58;
  swift_bridgeObjectRelease();
  v59 = *(_QWORD *)(v54 + 48);
  *(_QWORD *)(v53 + 40) = *(_QWORD *)(v54 + 40);
  *(_QWORD *)(v53 + 48) = v59;
  swift_bridgeObjectRelease();
  v60 = *(_QWORD *)(v54 + 64);
  *(_QWORD *)(v53 + 56) = *(_QWORD *)(v54 + 56);
  *(_QWORD *)(v53 + 64) = v60;
  swift_bridgeObjectRelease();
  *(_WORD *)(v53 + 72) = *(_WORD *)(v54 + 72);
LABEL_21:
  v61 = a3[15];
  v62 = a1 + v61;
  v63 = a2 + v61;
  *(_BYTE *)v62 = *(_BYTE *)(a2 + v61);
  v64 = *(_QWORD *)(a2 + v61 + 16);
  *(_QWORD *)(v62 + 8) = *(_QWORD *)(a2 + v61 + 8);
  *(_QWORD *)(v62 + 16) = v64;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v62 + 24) = *(_BYTE *)(v63 + 24);
  *(_BYTE *)(v62 + 25) = *(_BYTE *)(v63 + 25);
  v65 = *(_QWORD *)(v63 + 40);
  *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
  *(_QWORD *)(v62 + 40) = v65;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v62 + 48) = *(_BYTE *)(v63 + 48);
  v66 = a3[16];
  v67 = a1 + v66;
  v68 = a2 + v66;
  if (!*(_QWORD *)(a1 + v66 + 8))
  {
LABEL_25:
    v72 = *(_OWORD *)(v68 + 16);
    *(_OWORD *)v67 = *(_OWORD *)v68;
    *(_OWORD *)(v67 + 16) = v72;
    *(_OWORD *)(v67 + 32) = *(_OWORD *)(v68 + 32);
    goto LABEL_26;
  }
  v69 = *(_QWORD *)(v68 + 8);
  if (!v69)
  {
    sub_1D59315F8(v67);
    goto LABEL_25;
  }
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *(_QWORD *)(v67 + 8) = v69;
  swift_bridgeObjectRelease();
  v70 = *(_QWORD *)(v68 + 24);
  *(_QWORD *)(v67 + 16) = *(_QWORD *)(v68 + 16);
  *(_QWORD *)(v67 + 24) = v70;
  swift_bridgeObjectRelease();
  v71 = *(_QWORD *)(v68 + 40);
  *(_QWORD *)(v67 + 32) = *(_QWORD *)(v68 + 32);
  *(_QWORD *)(v67 + 40) = v71;
  swift_bridgeObjectRelease();
LABEL_26:
  v73 = a3[18];
  *(_WORD *)(a1 + a3[17]) = *(_WORD *)(a2 + a3[17]);
  v74 = a1 + v73;
  v75 = a2 + v73;
  v76 = *(_QWORD *)(v75 + 8);
  *(_QWORD *)v74 = *(_QWORD *)v75;
  *(_QWORD *)(v74 + 8) = v76;
  swift_bridgeObjectRelease();
  *(_WORD *)(v74 + 16) = *(_WORD *)(v75 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PDFPageViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5931C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1D5AADFB0();
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for PDFPageViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5931D40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1D5AADFB0();
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D5931DE8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PDFPageViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1D5931F30 + 4 * byte_1D5ACC384[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1D5931F64 + 4 * byte_1D5ACC37F[v4]))();
}

uint64_t sub_1D5931F64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5931F6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5931F74);
  return result;
}

uint64_t sub_1D5931F80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5931F88);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1D5931F8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5931F94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PDFPageViewEvent.Model.CodingKeys()
{
  return &type metadata for PDFPageViewEvent.Model.CodingKeys;
}

unint64_t sub_1D5931FB4()
{
  unint64_t result;

  result = qword_1EFF4D560;
  if (!qword_1EFF4D560)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC6E4, &type metadata for PDFPageViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D560);
  }
  return result;
}

unint64_t sub_1D5931FFC()
{
  unint64_t result;

  result = qword_1EFF4D568;
  if (!qword_1EFF4D568)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC654, &type metadata for PDFPageViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D568);
  }
  return result;
}

unint64_t sub_1D5932044()
{
  unint64_t result;

  result = qword_1EFF4D570;
  if (!qword_1EFF4D570)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC67C, &type metadata for PDFPageViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D570);
  }
  return result;
}

uint64_t sub_1D5932088(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4365676150666470 && a2 == 0xEE00747865746E6FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEE9D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6C61727265666572 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t GroupingInventoryItem.tagID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GroupingInventoryItem.tagID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*GroupingInventoryItem.tagID.modify())()
{
  return nullsub_1;
}

uint64_t GroupingInventoryItem.headlineCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t GroupingInventoryItem.headlineCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*GroupingInventoryItem.headlineCount.modify())()
{
  return nullsub_1;
}

uint64_t GroupingInventoryItem.hardPaywallBundleArticleCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 20);
}

uint64_t GroupingInventoryItem.hardPaywallBundleArticleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = result;
  return result;
}

uint64_t (*GroupingInventoryItem.hardPaywallBundleArticleCount.modify())()
{
  return nullsub_1;
}

uint64_t GroupingInventoryItem.init(tagID:headlineCount:hardPaywallBundleArticleCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_DWORD *)(a5 + 16) = a3;
  *(_DWORD *)(a5 + 20) = a4;
  return result;
}

uint64_t sub_1D59327DC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x656E696C64616568;
  if (*v0 != 1)
    v1 = 0xD00000000000001DLL;
  if (*v0)
    return v1;
  else
    return 0x4449676174;
}

uint64_t sub_1D5932844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5932FB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5932868()
{
  sub_1D5932A20();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5932890()
{
  sub_1D5932A20();
  return sub_1D5AAEEE0();
}

uint64_t GroupingInventoryItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _DWORD v10[2];
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;

  sub_1D5932C1C(0, &qword_1ED9D0DA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v12 = *(_DWORD *)(v1 + 16);
  v10[1] = *(_DWORD *)(v1 + 20);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5932A20();
  sub_1D5AAEEC8();
  v15 = 0;
  v8 = v11;
  sub_1D5AAED3C();
  if (!v8)
  {
    v14 = 1;
    sub_1D5AAED78();
    v13 = 2;
    sub_1D5AAED78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5932A20()
{
  unint64_t result;

  result = qword_1ED9D0480;
  if (!qword_1ED9D0480)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC8EC, &type metadata for GroupingInventoryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0480);
  }
  return result;
}

uint64_t GroupingInventoryItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  uint64_t v15;
  int v16;
  char v17;
  char v18;
  char v19;

  sub_1D5932C1C(0, &qword_1EFF4D578, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5932A20();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v18 = 1;
  swift_bridgeObjectRetain();
  v16 = sub_1D5AAECDC();
  v17 = 2;
  v14 = sub_1D5AAECDC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_DWORD *)(a2 + 16) = v16;
  *(_DWORD *)(a2 + 20) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D5932C1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5932A20();
    v7 = a3(a1, &type metadata for GroupingInventoryItem.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5932C7C()
{
  unint64_t result;

  result = qword_1EFF4D580;
  if (!qword_1EFF4D580)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupingInventoryItem, &type metadata for GroupingInventoryItem);
    atomic_store(result, (unint64_t *)&qword_1EFF4D580);
  }
  return result;
}

unint64_t sub_1D5932CC4()
{
  unint64_t result;

  result = qword_1ED9D0498;
  if (!qword_1ED9D0498)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupingInventoryItem, &type metadata for GroupingInventoryItem);
    atomic_store(result, (unint64_t *)&qword_1ED9D0498);
  }
  return result;
}

uint64_t sub_1D5932D08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupingInventoryItem.init(from:)(a1, a2);
}

uint64_t sub_1D5932D1C(_QWORD *a1)
{
  return GroupingInventoryItem.encode(to:)(a1);
}

_QWORD *sub_1D5932D34(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupingInventoryItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  return a1;
}

_QWORD *assignWithTake for FractionalCohortMembershipDetails(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for GroupingInventoryItem()
{
  return &type metadata for GroupingInventoryItem;
}

uint64_t storeEnumTagSinglePayload for GroupingInventoryItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5932E5C + 4 * byte_1D5ACC765[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5932E90 + 4 * byte_1D5ACC760[v4]))();
}

uint64_t sub_1D5932E90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5932E98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5932EA0);
  return result;
}

uint64_t sub_1D5932EAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5932EB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5932EB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5932EC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroupingInventoryItem.CodingKeys()
{
  return &type metadata for GroupingInventoryItem.CodingKeys;
}

unint64_t sub_1D5932EE0()
{
  unint64_t result;

  result = qword_1EFF4D588;
  if (!qword_1EFF4D588)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC8C4, &type metadata for GroupingInventoryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D588);
  }
  return result;
}

unint64_t sub_1D5932F28()
{
  unint64_t result;

  result = qword_1ED9D0490;
  if (!qword_1ED9D0490)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC834, &type metadata for GroupingInventoryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0490);
  }
  return result;
}

unint64_t sub_1D5932F70()
{
  unint64_t result;

  result = qword_1ED9D0488;
  if (!qword_1ED9D0488)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACC85C, &type metadata for GroupingInventoryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0488);
  }
  return result;
}

uint64_t sub_1D5932FB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449676174 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E696C64616568 && a2 == 0xED0000746E756F43 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5AF0110)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D5933120(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCC78, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCFD8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC78, a1);
}

uint64_t sub_1D5933160(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCFE0, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD000, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCFE0, a1);
}

uint64_t ArticleEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ArticleEngagementEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CAD30);
}

uint64_t ArticleEngagementEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.viewData.modify())()
{
  type metadata accessor for ArticleEngagementEvent(0);
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleEngagementEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.articleData.modify())()
{
  type metadata accessor for ArticleEngagementEvent(0);
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

