void sub_19C1C6D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = *(_QWORD **)(v39 - 96);
  if (v41 == (_QWORD *)(v39 - 120))
  {
    v42 = 4;
    v41 = (_QWORD *)(v39 - 120);
  }
  else
  {
    if (!v41)
    {
      v43 = a39;
      a39 = 0;
      if (v43)
        goto LABEL_8;
      goto LABEL_5;
    }
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
  v43 = a39;
  a39 = 0;
  if (v43)
  {
LABEL_8:
    (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
    sub_19C1C2E88((uint64_t)&a24);
    _Unwind_Resume(a1);
  }
LABEL_5:
  sub_19C1C2E88((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_19C1C6DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  sub_19C1C2E88((uint64_t)&a24);
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C1C6DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C1C6DE8(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  char **v22;
  void *v23;
  void **v24;
  void **v25;
  void *v26;
  void **v27;
  void **v28;
  void *v29;
  void *v30;
  void **v31;
  void *v32;
  void **v33;
  void *__p;
  char **v35;
  char v36;
  void *v37;
  void **v38;
  void *v39;
  void **v40;
  void *v41;
  char **v42;
  char v43;
  uint64_t v44;
  _BYTE v45[24];
  _BYTE *v46;
  _BYTE v47[24];
  _BYTE *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  sub_19C1C2D98((uint64_t)&v30, a1);
  sub_19C1C2D98((uint64_t)&v37, (uint64_t)&v30);
  sub_19C1DEC24((uint64_t)&v37, &v44);
  if (v36)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v35;
      v7 = __p;
      if (v35 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v35 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v32;
  if (v32)
  {
    v9 = v33;
    v10 = v32;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v32;
    }
    v33 = v8;
    operator delete(v10);
  }
  v11 = (void **)v30;
  if (v30)
  {
    v12 = v31;
    v13 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v30;
    }
    v31 = v11;
    operator delete(v13);
  }
  v14 = a2[3];
  if (!v14)
    goto LABEL_26;
  if ((_QWORD *)v14 != a2)
  {
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
LABEL_26:
    v46 = (_BYTE *)v14;
    goto LABEL_28;
  }
  v46 = v45;
  (*(void (**)(_QWORD *, _BYTE *))(*a2 + 24))(a2, v45);
LABEL_28:
  v15 = v47;
  v16 = a2[7];
  if (!v16)
  {
LABEL_31:
    v48 = (_BYTE *)v16;
    goto LABEL_33;
  }
  if ((_QWORD *)v16 != a2 + 4)
  {
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
    goto LABEL_31;
  }
  v48 = v47;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v16 + 24))(v16, v47);
LABEL_33:
  sub_19C1DE87C((uint64_t)&v37, (uint64_t)v45, a3);
  if (v48 == v47)
  {
    v17 = 4;
  }
  else
  {
    if (!v48)
      goto LABEL_38;
    v17 = 5;
    v15 = v48;
  }
  (*(void (**)(_QWORD *))(*v15 + 8 * v17))(v15);
LABEL_38:
  v18 = v46;
  if (v46 == v45)
  {
    v19 = 4;
    v18 = v45;
  }
  else
  {
    if (!v46)
      goto LABEL_43;
    v19 = 5;
  }
  (*(void (**)(void))(*v18 + 8 * v19))();
LABEL_43:
  v20 = v44;
  v44 = 0;
  if (v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
  if (v43)
  {
    v21 = (char **)v41;
    if (v41)
    {
      v22 = v42;
      v23 = v41;
      if (v42 != v41)
      {
        do
          v22 = sub_19C17B808(v22 - 12);
        while (v22 != v21);
        v23 = v41;
      }
      v42 = v21;
      operator delete(v23);
    }
  }
  v24 = (void **)v39;
  if (v39)
  {
    v25 = v40;
    v26 = v39;
    if (v40 != v39)
    {
      do
      {
        if (*((char *)v25 - 17) < 0)
          operator delete(*(v25 - 5));
        v25 -= 5;
      }
      while (v25 != v24);
      v26 = v39;
    }
    v40 = v24;
    operator delete(v26);
  }
  v27 = (void **)v37;
  if (v37)
  {
    v28 = v38;
    v29 = v37;
    if (v38 != v37)
    {
      do
      {
        if (*((char *)v28 - 25) < 0)
          operator delete(*(v28 - 6));
        v28 -= 6;
      }
      while (v28 != v27);
      v29 = v37;
    }
    v38 = v27;
    operator delete(v29);
  }
}

void sub_19C1C7120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = *(_QWORD **)(v39 - 96);
  if (v41 == (_QWORD *)(v39 - 120))
  {
    v42 = 4;
    v41 = (_QWORD *)(v39 - 120);
  }
  else
  {
    if (!v41)
    {
      v43 = a39;
      a39 = 0;
      if (v43)
        goto LABEL_8;
      goto LABEL_5;
    }
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
  v43 = a39;
  a39 = 0;
  if (v43)
  {
LABEL_8:
    (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
    sub_19C1C2E88((uint64_t)&a24);
    _Unwind_Resume(a1);
  }
LABEL_5:
  sub_19C1C2E88((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_19C1C71C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  sub_19C1C2E88((uint64_t)&a24);
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C1C71E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1C71FC(uint64_t a1, const char *a2, uint64_t a3)
{
  const char **v4;
  const char *v5;

  v4 = (const char **)(a1 + 16);
  sub_19C1C3AC4("[InvalidArgument] ", a2, a3);
  *(_QWORD *)a1 = &unk_1E3D21978;
  v5 = (const char *)v4;
  if (*(char *)(a1 + 39) < 0)
    v5 = *v4;
  std::logic_error::logic_error((std::logic_error *)a1, v5);
  *(_QWORD *)a1 = &unk_1E3D21978;
  return a1;
}

void sub_19C1C7268(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

char **sub_19C1C7284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  BOOL v18;
  void *v20;
  _BYTE v21[4];
  _BYTE v22[12];
  _OWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  double v26;
  char *v27[2];
  int v28;
  char *v29[12];
  BOOL (**v30)(uint64_t, _DWORD *);
  char v31;
  int v32;
  BOOL (**v33)(uint64_t, int *);
  char v34;
  uint64_t v35;
  int v36;
  uint64_t *v37[13];
  int v38;

  v6 = *(_DWORD *)(a1 + 56);
  v7 = *(_DWORD *)(a1 + 60);
  v8 = *(_QWORD *)(a1 + 64);
  v21[0] = 0;
  *(_DWORD *)v22 = v7;
  *(_QWORD *)&v22[4] = v8;
  memset(v23, 0, sizeof(v23));
  v24 = v25;
  v25[0] = 0;
  v26 = 0.0;
  v27[0] = 0;
  v25[1] = 0;
  v25[2] = &v26;
  v28 = 0;
  v31 = 0;
  v30 = (BOOL (**)(uint64_t, _DWORD *))&unk_1E3D21888;
  v32 = v6;
  v34 = 0;
  v36 = HIDWORD(v8);
  v35 = *(_QWORD *)v22;
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D218B8;
  sub_19C1C5D14(v37, (uint64_t)v23);
  v37[12] = (uint64_t *)v27[1];
  v38 = v28;
  v20 = &unk_1E3D218B8;
  sub_19C17B808((char **)v23);
  v9 = *(_DWORD *)(a1 + 72);
  (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
  v10 = *(_QWORD *)(a2 + 24);
  if (!v10)
    goto LABEL_16;
  v11 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v10 + 48))(v10, v29);
  (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
  std::chrono::steady_clock::now();
  LODWORD(v20) = 1;
  sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
  v26 = v11;
  sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
  if (1 % v9)
    goto LABEL_5;
  v12 = *(_QWORD *)(a2 + 56);
  if (!v12)
LABEL_17:
    sub_19C1D6A94();
  if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v12 + 48))(v12, &v20) & 1) == 0)
  {
LABEL_5:
    if (!(*v30)((uint64_t)&v30, &v20))
    {
      v13 = (*v33)((uint64_t)&v33, (int *)&v20);
      sub_19C17B808(v27);
      sub_19C17B808((char **)v21);
      sub_19C17B808(v29);
      if (v13)
        goto LABEL_15;
      v14 = 2;
      while (1)
      {
        (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
        v15 = *(_QWORD *)(a2 + 24);
        if (!v15)
          break;
        v16 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v15 + 48))(v15, v29);
        (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
        std::chrono::steady_clock::now();
        std::chrono::steady_clock::now();
        LODWORD(v20) = v14;
        sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
        v26 = v16;
        sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
        if (!(v14 % v9))
        {
          v17 = *(_QWORD *)(a2 + 56);
          if (!v17)
            goto LABEL_17;
          if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v17 + 48))(v17, &v20) & 1) != 0)
            goto LABEL_6;
        }
        if ((*v30)((uint64_t)&v30, &v20))
          goto LABEL_6;
        v18 = (*v33)((uint64_t)&v33, (int *)&v20);
        sub_19C17B808(v27);
        sub_19C17B808((char **)v21);
        sub_19C17B808(v29);
        ++v14;
        if (v18)
          goto LABEL_15;
      }
LABEL_16:
      sub_19C1D6A94();
    }
  }
LABEL_6:
  sub_19C17B808(v27);
  sub_19C17B808((char **)v21);
  sub_19C17B808(v29);
LABEL_15:
  sub_19C1D6818(*(_QWORD *)(a1 + 120), a3);
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D218B8;
  return sub_19C17B808((char **)v37);
}

void sub_19C1C75B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char *a37)
{
  char **v37;
  char **v38;
  char **v39;
  uint64_t v40;

  sub_19C17B808(v39);
  sub_19C17B808(v38);
  sub_19C17B808(&a37);
  *(_QWORD *)(v40 - 240) = &unk_1E3D218B8;
  sub_19C17B808(v37);
  _Unwind_Resume(a1);
}

void sub_19C1C762C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  std::logic_error *exception;
  uint64_t v5;

  v3 = *(_DWORD *)(a1 + 48);
  if (v3 == 1)
  {
    sub_19C1C783C(a1, &v5);
    *a2 = v5;
  }
  else
  {
    if (v3)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1C79A4(exception, "Invalid optimizer in user config.");
      __cxa_throw(exception, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    }
    sub_19C1C76D4(a1, &v5);
    *a2 = v5;
  }
}

void sub_19C1C76C0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C1C76D4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  void **v15;
  void *v16;
  void **v17;
  void *__p;
  char **v19;
  char v20;

  v4 = operator new();
  sub_19C1C2D98((uint64_t)&v14, a1);
  sub_19C1C79C8(v4, (uint64_t)&v14);
  *a2 = v4;
  if (v20)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v19;
      v7 = __p;
      if (v19 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v19 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v16;
  if (v16)
  {
    v9 = v17;
    v10 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v16;
    }
    v17 = v8;
    operator delete(v10);
  }
  v11 = (void **)v14;
  if (v14)
  {
    v12 = v15;
    v13 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v14;
    }
    v15 = v11;
    operator delete(v13);
  }
}

void sub_19C1C780C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  va_list va;

  va_start(va, a2);
  sub_19C1C2E88((uint64_t)va);
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_19C1C7828(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_19C1C783C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  void **v15;
  void *v16;
  void **v17;
  void *__p;
  char **v19;
  char v20;

  v4 = operator new();
  sub_19C1C2D98((uint64_t)&v14, a1);
  sub_19C1C91F8(v4, (uint64_t *)&v14);
  *a2 = v4;
  if (v20)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v19;
      v7 = __p;
      if (v19 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v19 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v16;
  if (v16)
  {
    v9 = v17;
    v10 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v16;
    }
    v17 = v8;
    operator delete(v10);
  }
  v11 = (void **)v14;
  if (v14)
  {
    v12 = v15;
    v13 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v14;
    }
    v15 = v11;
    operator delete(v13);
  }
}

void sub_19C1C7974(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  va_list va;

  va_start(va, a2);
  sub_19C1C2E88((uint64_t)va);
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_19C1C7990(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_19C1C79A4(std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
  return result;
}

uint64_t sub_19C1C79C8(uint64_t a1, uint64_t a2)
{
  char **v3;
  char **v4;
  void *v5;
  void **v6;
  void **v7;
  void *v8;
  void **v9;
  void **v10;
  void *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  void *v29;
  void **v30;
  void *v31;
  void **v32;
  void *__p;
  char **v34;
  char v35;

  sub_19C1C2D98((uint64_t)&v29, a2);
  *(_QWORD *)a1 = &unk_1E3D214F8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_19C1C2D98(a1 + 32, (uint64_t)&v29);
  if (v35)
  {
    v3 = (char **)__p;
    if (__p)
    {
      v4 = v34;
      v5 = __p;
      if (v34 != __p)
      {
        do
          v4 = sub_19C17B808(v4 - 12);
        while (v4 != v3);
        v5 = __p;
      }
      v34 = v3;
      operator delete(v5);
    }
  }
  v6 = (void **)v31;
  if (v31)
  {
    v7 = v32;
    v8 = v31;
    if (v32 != v31)
    {
      do
      {
        if (*((char *)v7 - 17) < 0)
          operator delete(*(v7 - 5));
        v7 -= 5;
      }
      while (v7 != v6);
      v8 = v31;
    }
    v32 = v6;
    operator delete(v8);
  }
  v9 = (void **)v29;
  if (v29)
  {
    v10 = v30;
    v11 = v29;
    if (v30 != v29)
    {
      do
      {
        if (*((char *)v10 - 25) < 0)
          operator delete(*(v10 - 6));
        v10 -= 6;
      }
      while (v10 != v9);
      v11 = v29;
    }
    v30 = v9;
    operator delete(v11);
  }
  *(_QWORD *)a1 = &unk_1E3D21318;
  sub_19C1C81AC(a1 + 152);
  if (*(_BYTE *)(a1 + 112))
  {
    v12 = 0;
    v13 = *(_DWORD *)(a1 + 108);
    *(_DWORD *)(a1 + 7744) = v13;
    v14 = 1;
    v15 = v13;
    do
    {
      v16 = 1812433253 * (v15 ^ (v15 >> 30));
      v15 = v16 + v14;
      *(_DWORD *)(a1 + 7748 + 4 * v12) = v12 + v16 + 1;
      ++v14;
      ++v12;
    }
    while (v12 != 623);
    *(_QWORD *)(a1 + 10240) = 0;
    *(_DWORD *)(a1 + 152) = v13;
    v17 = 1;
    v18 = 39;
    v19 = v13;
    do
    {
      v20 = 1812433253 * (v19 ^ (v19 >> 30));
      v19 = v20 + v17;
      *(_DWORD *)(a1 + 4 * v18) = v18 + v20 - 38;
      ++v17;
      ++v18;
    }
    while (v18 != 662);
    v21 = 0;
    *(_QWORD *)(a1 + 2648) = 0;
    *(_DWORD *)(a1 + 2680) = v13;
    v22 = 1;
    v23 = v13;
    do
    {
      v24 = 1812433253 * (v23 ^ (v23 >> 30));
      v23 = v24 + v22;
      *(_DWORD *)(a1 + 2684 + 4 * v21) = v21 + v24 + 1;
      ++v22;
      ++v21;
    }
    while (v21 != 623);
    v25 = 0;
    *(_QWORD *)(a1 + 5176) = 0;
    *(_DWORD *)(a1 + 5200) = v13;
    v26 = 1;
    do
    {
      v27 = 1812433253 * (v13 ^ (v13 >> 30));
      v13 = v27 + v26;
      *(_DWORD *)(a1 + 5204 + 4 * v25) = v25 + v27 + 1;
      ++v26;
      ++v25;
    }
    while (v25 != 623);
    *(_QWORD *)(a1 + 7696) = 0;
    sub_19C23B684();
  }
  return a1;
}

void sub_19C1C7C30(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::random_device *v2;

  sub_19C1C7C7C(v2);
  sub_19C1C7CC8(v1);
  _Unwind_Resume(a1);
}

void sub_19C1C7C4C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_19C1C7CC8(v1);
  _Unwind_Resume(a1);
}

void sub_19C1C7C60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void **v2;
  va_list va;

  va_start(va, a2);
  sub_19C1C8154(v2);
  sub_19C1C2E88((uint64_t)va);
  _Unwind_Resume(a1);
}

std::random_device *sub_19C1C7C7C(std::random_device *a1)
{
  std::random_device::~random_device(a1 + 2524);
  std::random_device::~random_device(a1 + 1888);
  std::random_device::~random_device(a1 + 1258);
  std::random_device::~random_device(a1 + 626);
  return a1;
}

_QWORD *sub_19C1C7CC8(_QWORD *a1)
{
  char **v2;
  char **v3;
  void *v4;

  *a1 = &unk_1E3D214F8;
  sub_19C1C2E88((uint64_t)(a1 + 4));
  v2 = (char **)a1[1];
  if (v2)
  {
    v3 = (char **)a1[2];
    v4 = (void *)a1[1];
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (void *)a1[1];
    }
    a1[2] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_19C1C7D34(uint64_t a1)
{
  char **v2;
  char **v3;
  void *v4;

  *(_QWORD *)a1 = &unk_1E3D21318;
  std::random_device::~random_device((std::random_device *)(a1 + 10248));
  std::random_device::~random_device((std::random_device *)(a1 + 7704));
  std::random_device::~random_device((std::random_device *)(a1 + 5184));
  std::random_device::~random_device((std::random_device *)(a1 + 2656));
  *(_QWORD *)a1 = &unk_1E3D214F8;
  sub_19C1C2E88(a1 + 32);
  v2 = *(char ***)(a1 + 8);
  if (v2)
  {
    v3 = *(char ***)(a1 + 16);
    v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_19C1C7DE0(void *a1)
{
  char **v2;
  char **v3;
  void *v4;

  *(_QWORD *)a1 = &unk_1E3D21318;
  std::random_device::~random_device((std::random_device *)a1 + 2562);
  std::random_device::~random_device((std::random_device *)a1 + 1926);
  std::random_device::~random_device((std::random_device *)a1 + 1296);
  std::random_device::~random_device((std::random_device *)a1 + 664);
  *(_QWORD *)a1 = &unk_1E3D214F8;
  sub_19C1C2E88((uint64_t)a1 + 32);
  v2 = (char **)*((_QWORD *)a1 + 1);
  if (v2)
  {
    v3 = (char **)*((_QWORD *)a1 + 2);
    v4 = (void *)*((_QWORD *)a1 + 1);
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (void *)*((_QWORD *)a1 + 1);
    }
    *((_QWORD *)a1 + 2) = v2;
    operator delete(v4);
  }
  operator delete(a1);
}

void sub_19C1C7E8C(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  char *v8;
  char *v9;
  void *v10;
  void *v11;
  char *v12;
  char *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *__p;
  char *v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  _BYTE *v28;
  _BYTE *v29;

  sub_19C1C8264(a1, &v28);
  sub_19C1C8330(a1, &v26);
  v23 = 0;
  v24 = 0;
  v25 = 0;
  sub_19C17BB78(&v23, (uint64_t)v28, (uint64_t)v29, 0x6DB6DB6DB6DB6DB7 * ((v29 - v28) >> 3));
  __p = 0;
  v21 = 0;
  v22 = 0;
  sub_19C17BE1C(&__p, (uint64_t)v26, (uint64_t)v27, 0x6DB6DB6DB6DB6DB7 * ((v27 - (_BYTE *)v26) >> 3));
  sub_19C17B350(a2, (uint64_t *)&v23, (uint64_t *)&__p);
  v4 = (char *)__p;
  if (__p)
  {
    v5 = v21;
    v6 = __p;
    if (v21 != __p)
    {
      do
      {
        v7 = (void *)*((_QWORD *)v5 - 4);
        if (v7)
        {
          *((_QWORD *)v5 - 3) = v7;
          operator delete(v7);
        }
        if (*(v5 - 33) < 0)
          operator delete(*((void **)v5 - 7));
        v5 -= 56;
      }
      while (v5 != v4);
      v6 = __p;
    }
    v21 = v4;
    operator delete(v6);
  }
  v8 = (char *)v23;
  if (v23)
  {
    v9 = v24;
    v10 = v23;
    if (v24 != v23)
    {
      do
      {
        v11 = (void *)*((_QWORD *)v9 - 4);
        if (v11)
        {
          *((_QWORD *)v9 - 3) = v11;
          operator delete(v11);
        }
        if (*(v9 - 33) < 0)
          operator delete(*((void **)v9 - 7));
        v9 -= 56;
      }
      while (v9 != v8);
      v10 = v23;
    }
    v24 = v8;
    operator delete(v10);
  }
  v12 = (char *)v26;
  if (v26)
  {
    v13 = v27;
    v14 = v26;
    if (v27 != v26)
    {
      do
      {
        v15 = (void *)*((_QWORD *)v13 - 4);
        if (v15)
        {
          *((_QWORD *)v13 - 3) = v15;
          operator delete(v15);
        }
        if (*(v13 - 33) < 0)
          operator delete(*((void **)v13 - 7));
        v13 -= 56;
      }
      while (v13 != v12);
      v14 = v26;
    }
    v27 = v12;
    operator delete(v14);
  }
  v16 = (uint64_t)v28;
  if (v28)
  {
    v17 = (uint64_t)v29;
    v18 = v28;
    if (v29 != v28)
    {
      do
      {
        v19 = *(void **)(v17 - 32);
        if (v19)
        {
          *(_QWORD *)(v17 - 24) = v19;
          operator delete(v19);
        }
        if (*(char *)(v17 - 33) < 0)
          operator delete(*(void **)(v17 - 56));
        v17 -= 56;
      }
      while (v17 != v16);
      v18 = v28;
    }
    v29 = (_BYTE *)v16;
    operator delete(v18);
  }
}

void sub_19C1C8088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  void *v6;
  va_list va;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, void *);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_19C17A9E4((void **)va);
  sub_19C17A9E4((void **)va1);
  sub_19C17A9E4((void **)(v4 - 40));
  _Unwind_Resume(a1);
}

void sub_19C1C80B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_19C17A9E4((void **)(v1 - 40));
  _Unwind_Resume(a1);
}

char **sub_19C1C80C8(uint64_t a1, uint64_t *a2, double a3)
{
  uint64_t **v5;
  uint64_t **v6;
  uint64_t **v7;
  uint64_t *v9[12];
  double v10;

  sub_19C1C1840(v9, a2);
  v10 = a3;
  v5 = *(uint64_t ***)(a1 + 16);
  if ((unint64_t)v5 >= *(_QWORD *)(a1 + 24))
  {
    v7 = sub_19C1C907C((uint64_t ***)(a1 + 8), (uint64_t *)v9);
  }
  else
  {
    v6 = sub_19C1C1840(v5, (uint64_t *)v9);
    *((double *)v6 + 12) = v10;
    v7 = v6 + 13;
  }
  *(_QWORD *)(a1 + 16) = v7;
  return sub_19C17B808((char **)v9);
}

void sub_19C1C8140(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_19C17B808((char **)va);
  _Unwind_Resume(a1);
}

void **sub_19C1C8154(void **a1)
{
  char **v2;
  char **v3;
  void *v4;

  v2 = (char **)*a1;
  if (*a1)
  {
    v3 = (char **)a1[1];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_19C1C81AC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_19C17ACE4(a1);
  *(_OWORD *)(v2 + 2512) = xmmword_19C277720;
  sub_19C17ACE4(v2 + 2528);
  *(_QWORD *)(a1 + 5040) = 0x7FFFFFFF00000000;
  sub_19C17ACE4(a1 + 5048);
  *(_QWORD *)(a1 + 7560) = 0;
  *(_QWORD *)(a1 + 7568) = 0x3FF0000000000000;
  *(_BYTE *)(a1 + 7584) = 0;
  sub_19C17ACE4(a1 + 7592);
  return a1;
}

void sub_19C1C821C(_Unwind_Exception *a1)
{
  std::random_device *v1;

  std::random_device::~random_device(v1 + 1888);
  std::random_device::~random_device(v1 + 1258);
  std::random_device::~random_device(v1 + 626);
  _Unwind_Resume(a1);
}

void sub_19C1C8250(_Unwind_Exception *a1)
{
  std::random_device *v1;

  std::random_device::~random_device(v1 + 626);
  _Unwind_Resume(a1);
}

void sub_19C1C8264(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 *v4;
  __int128 *v5;
  void *v6;
  void *__p;
  __int128 *v8;
  uint64_t v9;

  __p = 0;
  v8 = 0;
  v9 = 0;
  sub_19C17AF88(&__p, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 4));
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_19C1C83FC((__int128 *)__p, v8, (uint64_t)a2, a1);
  v4 = (__int128 *)__p;
  if (__p)
  {
    v5 = v8;
    v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 25) < 0)
          operator delete(*((void **)v5 - 6));
        v5 -= 3;
      }
      while (v5 != v4);
      v6 = __p;
    }
    v8 = v4;
    operator delete(v6);
  }
}

void sub_19C1C8314(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void **v2;
  va_list va;

  va_start(va, a2);
  sub_19C17A9E4(v2);
  sub_19C178D24((void **)va);
  _Unwind_Resume(a1);
}

void sub_19C1C8330(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 *v4;
  __int128 *v5;
  void *v6;
  void *__p;
  __int128 *v8;
  uint64_t v9;

  __p = 0;
  v8 = 0;
  v9 = 0;
  sub_19C17B16C(&__p, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 56)) >> 3));
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_19C1C8AB0((__int128 *)__p, v8, (uint64_t)a2, a1);
  v4 = (__int128 *)__p;
  if (__p)
  {
    v5 = v8;
    v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 17) < 0)
          operator delete(*((void **)v5 - 5));
        v5 = (__int128 *)((char *)v5 - 40);
      }
      while (v5 != v4);
      v6 = __p;
    }
    v8 = v4;
    operator delete(v6);
  }
}

void sub_19C1C83E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void **v2;
  va_list va;

  va_start(va, a2);
  sub_19C17A9E4(v2);
  sub_19C17983C((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1C83FC(__int128 *a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  __int128 *v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  void *v14;
  int64_t v15;
  char *v16;
  char *v17;
  __int128 *v18;
  void *v20[2];
  uint64_t v21;
  __int128 v22;
  int v23;
  void *__dst[2];
  uint64_t v25;
  void *v26;
  _BYTE *v27;
  int v28;
  void *__p[4];

  if (a1 != a2)
  {
    v6 = a1;
    v7 = a4 + 152;
    v8 = (_OWORD *)(a4 + 2664);
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_19C07C6E8(v20, *(void **)v6, *((_QWORD *)v6 + 1));
      }
      else
      {
        v9 = *v6;
        v21 = *((_QWORD *)v6 + 2);
        *(_OWORD *)v20 = v9;
      }
      v10 = *(__int128 *)((char *)v6 + 24);
      v23 = *((_DWORD *)v6 + 10);
      v22 = v10;
      v11 = v23;
      *v8 = v10;
      sub_19C1C8618(v7, v11, (uint64_t)__p);
      sub_19C17C2F4(__dst, (__int128 *)v20, (uint64_t)__p);
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
      v12 = *(_QWORD *)(a3 + 8);
      if (v12 >= *(_QWORD *)(a3 + 16))
      {
        v18 = sub_19C1C8828((__int128 **)a3, (uint64_t)__dst);
      }
      else
      {
        v13 = *(_OWORD *)__dst;
        *(_QWORD *)(v12 + 16) = v25;
        *(_OWORD *)v12 = v13;
        __dst[1] = 0;
        v25 = 0;
        *(_QWORD *)(v12 + 24) = 0;
        __dst[0] = 0;
        *(_QWORD *)(v12 + 32) = 0;
        *(_QWORD *)(v12 + 40) = 0;
        v14 = v26;
        v15 = v27 - (_BYTE *)v26;
        if (v27 != v26)
        {
          if (v15 < 0)
            sub_19C07DA0C();
          v16 = (char *)operator new(v27 - (_BYTE *)v26);
          *(_QWORD *)(v12 + 24) = v16;
          *(_QWORD *)(v12 + 32) = v16;
          v17 = &v16[8 * (v15 >> 3)];
          *(_QWORD *)(v12 + 40) = v17;
          memcpy(v16, v14, v15);
          *(_QWORD *)(v12 + 32) = v17;
        }
        *(_DWORD *)(v12 + 48) = v28;
        v18 = (__int128 *)(v12 + 56);
        *(_QWORD *)(a3 + 8) = v12 + 56;
      }
      *(_QWORD *)(a3 + 8) = v18;
      if (v26)
      {
        v27 = v26;
        operator delete(v26);
      }
      if (SHIBYTE(v25) < 0)
      {
        operator delete(__dst[0]);
        if (SHIBYTE(v21) < 0)
LABEL_21:
          operator delete(v20[0]);
      }
      else if (SHIBYTE(v21) < 0)
      {
        goto LABEL_21;
      }
      v6 += 3;
    }
    while (v6 != a2);
  }
  return a3;
}

void sub_19C1C85BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;
  void **v20;
  uint64_t v21;
  void *v23;

  v23 = *v20;
  if (*v20)
  {
    *(_QWORD *)(v21 + 32) = v23;
    operator delete(v23);
  }
  if (*(char *)(v21 + 23) < 0)
    operator delete(*(void **)v21);
  *(_QWORD *)(v19 + 8) = v21;
  sub_19C1C2C2C((uint64_t)&a19);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1C8618@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  size_t v6;
  double *v7;
  double v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  double v19;

  v3 = a2;
  v4 = result;
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  if ((_DWORD)a2)
  {
    if ((a2 & 0x80000000) != 0)
      sub_19C07DA0C();
    v6 = (int)a2;
    v7 = (double *)operator new(v6 * 8);
    bzero(v7, 8 * (int)v3);
    *(_QWORD *)a3 = v7;
    *(_QWORD *)(a3 + 8) = &v7[v6];
    *(_QWORD *)(a3 + 16) = &v7[(int)v3];
    *(_DWORD *)(a3 + 24) = v3;
  }
  else
  {
    v7 = 0;
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_DWORD *)(a3 + 24) = 0;
    if (!a2)
      return result;
  }
  v8 = *(double *)(v4 + 2512);
  v9 = (*(double *)(v4 + 2520) - v8) * 5.42101086e-20;
  v10 = *(_QWORD *)(v4 + 2496);
  do
  {
    v11 = (v10 + 1) % 0x270;
    v12 = 4 * v10;
    v13 = 4 * v11;
    v14 = *(_DWORD *)(v4 + 4 * ((v10 + 397) % 0x270)) ^ ((*(_DWORD *)(v4 + 4 * v11) & 0x7FFFFFFE | *(_DWORD *)(v4 + 4 * v10) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v4 + 4 * v11) << 31) >> 31) & 0x9908B0DF;
    *(_DWORD *)(v4 + v12) = v14;
    v15 = ((v14 ^ (v14 >> 11)) << 7) & 0x9D2C5680 ^ v14 ^ (v14 >> 11);
    if (v11 == 623)
      v10 = 0;
    else
      v10 = v11 + 1;
    if (v11 >= 0xE3)
      v16 = -227;
    else
      v16 = 397;
    v17 = *(_DWORD *)(v4 + 4 * (v16 + v11)) ^ ((*(_DWORD *)(v4 + 4 * v10) & 0x7FFFFFFE | *(_DWORD *)(v4 + 4 * v11) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v4 + 4 * v10) << 31) >> 31) & 0x9908B0DF;
    v18 = ((v17 ^ (v17 >> 11)) << 7) & 0x9D2C5680 ^ v17 ^ (v17 >> 11);
    v19 = (double)((v15 << 15) & 0xEFC60000 ^ v15 ^ (((v15 << 15) & 0xEFC60000 ^ v15) >> 18));
    result = (v18 << 15) & 0xEFC60000 ^ v18 ^ (((v18 << 15) & 0xEFC60000 ^ v18) >> 18);
    *(_DWORD *)(v4 + v13) = v17;
    *v7++ = v8 + v9 * (v19 + (double)result * 4294967300.0);
    --v3;
  }
  while (v3);
  *(_QWORD *)(v4 + 2496) = v10;
  return result;
}

void sub_19C1C880C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

__int128 *sub_19C1C8828(__int128 **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  __int128 *v9;
  _BYTE *v10;
  char *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;
  __int128 *v16;
  __int128 *v17;
  __int128 *v18;
  char *v19;
  __int128 *v20;
  __int128 *v21;
  __int128 *v22;
  void *v23;
  __int128 *v25;

  v3 = (char *)a1[1] - (char *)*a1;
  v4 = 0x6DB6DB6DB6DB6DB7 * (v3 >> 3) + 1;
  if (v4 > 0x492492492492492)
    sub_19C07DA0C();
  if (0xDB6DB6DB6DB6DB6ELL * (((char *)a1[2] - (char *)*a1) >> 3) > v4)
    v4 = 0xDB6DB6DB6DB6DB6ELL * (((char *)a1[2] - (char *)*a1) >> 3);
  if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * (((char *)a1[2] - (char *)*a1) >> 3)) >= 0x249249249249249)
    v6 = 0x492492492492492;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x492492492492492)
      sub_19C07C7FC();
    v7 = (char *)operator new(56 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[8 * (v3 >> 3)];
  v9 = (__int128 *)&v7[56 * v6];
  *(_OWORD *)v8 = *(_OWORD *)a2;
  v10 = *(_BYTE **)(a2 + 24);
  *((_QWORD *)v8 + 2) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v11 = &v7[v3];
  *((_QWORD *)v11 + 3) = 0;
  *((_QWORD *)v11 + 4) = 0;
  *((_QWORD *)v11 + 5) = 0;
  v12 = *(_BYTE **)(a2 + 32);
  v13 = v12 - v10;
  if (v12 != v10)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v12 - v10);
    *((_QWORD *)v11 + 3) = v14;
    *((_QWORD *)v11 + 4) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *((_QWORD *)v11 + 5) = v15;
    memcpy(v14, v10, v13);
    *((_QWORD *)v11 + 4) = v15;
  }
  *((_DWORD *)v11 + 12) = *(_DWORD *)(a2 + 48);
  v16 = (__int128 *)(v8 + 56);
  v25 = (__int128 *)(v8 + 56);
  v18 = *a1;
  v17 = a1[1];
  if (v17 == *a1)
  {
    *a1 = (__int128 *)v8;
    a1[1] = v16;
    a1[2] = v9;
  }
  else
  {
    v19 = v8;
    do
    {
      v20 = (__int128 *)(v19 - 56);
      v17 = (__int128 *)((char *)v17 - 56);
      sub_19C17C448((_DWORD)a1 + 16, (_QWORD *)v19 - 7, v17);
      v19 -= 56;
    }
    while (v17 != v18);
    v21 = *a1;
    v17 = a1[1];
    v22 = v20;
    v16 = v25;
    *a1 = v22;
    a1[1] = v25;
    a1[2] = v9;
    if (v17 != v21)
    {
      do
      {
        v23 = (void *)*((_QWORD *)v17 - 4);
        if (v23)
        {
          *((_QWORD *)v17 - 3) = v23;
          operator delete(v23);
        }
        if (*((char *)v17 - 33) < 0)
          operator delete(*((void **)v17 - 7));
        v17 = (__int128 *)((char *)v17 - 56);
      }
      while (v17 != v21);
      v17 = v21;
    }
  }
  if (v17)
    operator delete(v17);
  return v16;
}

void sub_19C1C8A54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void **v3;
  uint64_t v4;
  void *v6;
  va_list va;

  va_start(va, a2);
  v6 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v4 + 32) = v6;
    operator delete(v6);
  }
  if (*(char *)(v2 + 23) < 0)
  {
    operator delete(*(void **)v2);
    sub_19C17C3D4((uint64_t)va);
    _Unwind_Resume(a1);
  }
  sub_19C17C3D4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1C8AB0(__int128 *a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  void *v14;
  int64_t v15;
  char *v16;
  char *v17;
  __int128 *v18;
  void *v20[2];
  uint64_t v21;
  uint64_t v22;
  int v23;
  void *__dst[2];
  uint64_t v25;
  void *v26;
  _BYTE *v27;
  int v28;
  void *__p[4];

  if (a1 != a2)
  {
    v7 = a1;
    v8 = a4 + 152;
    do
    {
      if (*((char *)v7 + 23) < 0)
      {
        sub_19C07C6E8(v20, *(void **)v7, *((_QWORD *)v7 + 1));
      }
      else
      {
        v9 = *v7;
        v21 = *((_QWORD *)v7 + 2);
        *(_OWORD *)v20 = v9;
      }
      v10 = *((_QWORD *)v7 + 3);
      v23 = *((_DWORD *)v7 + 8);
      v22 = v10;
      v11 = v23;
      *(_QWORD *)(a4 + 5192) = v10;
      sub_19C1C8CCC(v8, v11, (uint64_t)__p);
      sub_19C17C80C(__dst, (__int128 *)v20, (uint64_t)__p);
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
      v12 = *(_QWORD *)(a3 + 8);
      if (v12 >= *(_QWORD *)(a3 + 16))
      {
        v18 = sub_19C1C8DF4((__int128 **)a3, (uint64_t)__dst);
      }
      else
      {
        v13 = *(_OWORD *)__dst;
        *(_QWORD *)(v12 + 16) = v25;
        *(_OWORD *)v12 = v13;
        __dst[1] = 0;
        v25 = 0;
        *(_QWORD *)(v12 + 24) = 0;
        __dst[0] = 0;
        *(_QWORD *)(v12 + 32) = 0;
        *(_QWORD *)(v12 + 40) = 0;
        v14 = v26;
        v15 = v27 - (_BYTE *)v26;
        if (v27 != v26)
        {
          if (v15 < 0)
            sub_19C07DA0C();
          v16 = (char *)operator new(v27 - (_BYTE *)v26);
          *(_QWORD *)(v12 + 24) = v16;
          *(_QWORD *)(v12 + 32) = v16;
          v17 = &v16[4 * (v15 >> 2)];
          *(_QWORD *)(v12 + 40) = v17;
          memcpy(v16, v14, v15);
          *(_QWORD *)(v12 + 32) = v17;
        }
        *(_DWORD *)(v12 + 48) = v28;
        v18 = (__int128 *)(v12 + 56);
        *(_QWORD *)(a3 + 8) = v12 + 56;
      }
      *(_QWORD *)(a3 + 8) = v18;
      if (v26)
      {
        v27 = v26;
        operator delete(v26);
      }
      if (SHIBYTE(v25) < 0)
      {
        operator delete(__dst[0]);
        if (SHIBYTE(v21) < 0)
LABEL_21:
          operator delete(v20[0]);
      }
      else if (SHIBYTE(v21) < 0)
      {
        goto LABEL_21;
      }
      v7 = (__int128 *)((char *)v7 + 40);
    }
    while (v7 != a2);
  }
  return a3;
}

void sub_19C1C8C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v17;
  void **v18;
  uint64_t v19;
  void *v21;

  v21 = *v18;
  if (*v18)
  {
    *(_QWORD *)(v19 + 32) = v21;
    operator delete(v21);
  }
  if (*(char *)(v19 + 23) < 0)
    operator delete(*(void **)v19);
  *(_QWORD *)(v17 + 8) = v19;
  sub_19C1C2C2C((uint64_t)&a17);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1C8CCC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  size_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;

  v4 = result;
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  if ((_DWORD)a2)
  {
    if ((a2 & 0x80000000) != 0)
      sub_19C07DA0C();
    v6 = 4 * (int)a2;
    v7 = (char *)operator new(v6);
    bzero(v7, 4 * (int)a2);
    *(_QWORD *)a3 = v7;
    *(_QWORD *)(a3 + 8) = &v7[v6];
    *(_QWORD *)(a3 + 16) = &v7[4 * (int)a2];
    *(_DWORD *)(a3 + 24) = a2;
  }
  else
  {
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_DWORD *)(a3 + 24) = 0;
    if (!a2)
      return result;
    v7 = 0;
  }
  v8 = 0;
  v9 = v4 + 2528;
  v10 = (_DWORD *)(v4 + 5040);
  do
  {
    result = sub_19C17ADE8((uint64_t)v10, v9, v10);
    *(_DWORD *)&v7[4 * v8++] = result;
  }
  while (a2 != v8);
  return result;
}

void sub_19C1C8DBC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1C8DD8(_Unwind_Exception *exception_object)
{
  void *v1;
  _QWORD *v2;

  if (v1)
  {
    *v2 = v1;
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

__int128 *sub_19C1C8DF4(__int128 **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  __int128 *v9;
  _BYTE *v10;
  char *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;
  __int128 *v16;
  __int128 *v17;
  __int128 *v18;
  char *v19;
  __int128 *v20;
  __int128 *v21;
  __int128 *v22;
  void *v23;
  __int128 *v25;

  v3 = (char *)a1[1] - (char *)*a1;
  v4 = 0x6DB6DB6DB6DB6DB7 * (v3 >> 3) + 1;
  if (v4 > 0x492492492492492)
    sub_19C07DA0C();
  if (0xDB6DB6DB6DB6DB6ELL * (((char *)a1[2] - (char *)*a1) >> 3) > v4)
    v4 = 0xDB6DB6DB6DB6DB6ELL * (((char *)a1[2] - (char *)*a1) >> 3);
  if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * (((char *)a1[2] - (char *)*a1) >> 3)) >= 0x249249249249249)
    v6 = 0x492492492492492;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x492492492492492)
      sub_19C07C7FC();
    v7 = (char *)operator new(56 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[8 * (v3 >> 3)];
  v9 = (__int128 *)&v7[56 * v6];
  *(_OWORD *)v8 = *(_OWORD *)a2;
  v10 = *(_BYTE **)(a2 + 24);
  *((_QWORD *)v8 + 2) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v11 = &v7[v3];
  *((_QWORD *)v11 + 3) = 0;
  *((_QWORD *)v11 + 4) = 0;
  *((_QWORD *)v11 + 5) = 0;
  v12 = *(_BYTE **)(a2 + 32);
  v13 = v12 - v10;
  if (v12 != v10)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v12 - v10);
    *((_QWORD *)v11 + 3) = v14;
    *((_QWORD *)v11 + 4) = v14;
    v15 = &v14[4 * (v13 >> 2)];
    *((_QWORD *)v11 + 5) = v15;
    memcpy(v14, v10, v13);
    *((_QWORD *)v11 + 4) = v15;
  }
  *((_DWORD *)v11 + 12) = *(_DWORD *)(a2 + 48);
  v16 = (__int128 *)(v8 + 56);
  v25 = (__int128 *)(v8 + 56);
  v18 = *a1;
  v17 = a1[1];
  if (v17 == *a1)
  {
    *a1 = (__int128 *)v8;
    a1[1] = v16;
    a1[2] = v9;
  }
  else
  {
    v19 = v8;
    do
    {
      v20 = (__int128 *)(v19 - 56);
      v17 = (__int128 *)((char *)v17 - 56);
      sub_19C17C8EC((_DWORD)a1 + 16, (_QWORD *)v19 - 7, v17);
      v19 -= 56;
    }
    while (v17 != v18);
    v21 = *a1;
    v17 = a1[1];
    v22 = v20;
    v16 = v25;
    *a1 = v22;
    a1[1] = v25;
    a1[2] = v9;
    if (v17 != v21)
    {
      do
      {
        v23 = (void *)*((_QWORD *)v17 - 4);
        if (v23)
        {
          *((_QWORD *)v17 - 3) = v23;
          operator delete(v23);
        }
        if (*((char *)v17 - 33) < 0)
          operator delete(*((void **)v17 - 7));
        v17 = (__int128 *)((char *)v17 - 56);
      }
      while (v17 != v21);
      v17 = v21;
    }
  }
  if (v17)
    operator delete(v17);
  return v16;
}

void sub_19C1C9020(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void **v3;
  uint64_t v4;
  void *v6;
  va_list va;

  va_start(va, a2);
  v6 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v4 + 32) = v6;
    operator delete(v6);
  }
  if (*(char *)(v2 + 23) < 0)
  {
    operator delete(*(void **)v2);
    sub_19C17C3D4((uint64_t)va);
    _Unwind_Resume(a1);
  }
  sub_19C17C3D4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_19C1C907C(uint64_t ***a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  uint64_t **v7;
  uint64_t **v8;
  uint64_t **v9;
  uint64_t **v10;
  char **v11;
  char **v12;
  uint64_t **v13;
  char **v14;

  v3 = (char *)a1[1] - (char *)*a1;
  v4 = 0x4EC4EC4EC4EC4EC5 * (v3 >> 3) + 1;
  if (v4 > 0x276276276276276)
    sub_19C07DA0C();
  if (0x9D89D89D89D89D8ALL * (a1[2] - *a1) > v4)
    v4 = 0x9D89D89D89D89D8ALL * (a1[2] - *a1);
  if ((unint64_t)(0x4EC4EC4EC4EC4EC5 * (a1[2] - *a1)) >= 0x13B13B13B13B13BLL)
    v6 = 0x276276276276276;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x276276276276276)
      sub_19C07C7FC();
    v7 = (uint64_t **)operator new(104 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[13 * v6];
  v9 = sub_19C1C1840(&v7[v3 >> 3], a2);
  *(uint64_t **)((char *)v7 + v3 + 96) = (uint64_t *)a2[12];
  v10 = v9 + 13;
  v12 = (char **)*a1;
  v11 = (char **)a1[1];
  if (v11 == (char **)*a1)
  {
    *a1 = v9;
    a1[1] = v10;
    a1[2] = v8;
    if (!v11)
      return v10;
    goto LABEL_17;
  }
  do
  {
    v13 = v9;
    v9 = sub_19C1C5D14(v9 - 13, (uint64_t)(v11 - 13));
    *(v13 - 1) = (uint64_t *)*(v11 - 1);
    v11 -= 13;
  }
  while (v11 != v12);
  v14 = (char **)*a1;
  v11 = (char **)a1[1];
  *a1 = v9;
  a1[1] = v10;
  a1[2] = v8;
  if (v11 != v14)
  {
    do
    {
      v11 -= 13;
      sub_19C17B808(v11);
    }
    while (v11 != v14);
    v11 = v14;
  }
  if (v11)
LABEL_17:
    operator delete(v11);
  return v10;
}

uint64_t sub_19C1C91F8(uint64_t a1, uint64_t *a2)
{
  char **v4;
  char **v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  int v13;
  int v14;
  _QWORD *v15;
  char ***v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  char **v39;
  char **v40;
  char **v41;
  void **v42;
  void **v43;
  void *v44;
  void **v45;
  void **v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t **v52;
  uint64_t **v53;
  uint64_t v54;
  uint64_t *v55;
  void *v57;
  void **v58;
  uint64_t v59;
  void *v60;
  void **v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  void *v65;
  void **v66;
  void *v67;
  void **v68;
  void *__p;
  char **v70;
  char v71;

  sub_19C1C2D98((uint64_t)&v65, (uint64_t)a2);
  *(_QWORD *)a1 = &unk_1E3D214F8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_19C1C2D98(a1 + 32, (uint64_t)&v65);
  if (v71)
  {
    v4 = (char **)__p;
    if (__p)
    {
      v5 = v70;
      v6 = __p;
      if (v70 != __p)
      {
        do
          v5 = sub_19C17B808(v5 - 12);
        while (v5 != v4);
        v6 = __p;
      }
      v70 = v4;
      operator delete(v6);
    }
  }
  v7 = (void **)v67;
  if (v67)
  {
    v8 = v68;
    v9 = v67;
    if (v68 != v67)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v67;
    }
    v68 = v7;
    operator delete(v9);
  }
  v10 = (void **)v65;
  if (v65)
  {
    v11 = v66;
    v12 = v65;
    if (v66 != v65)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v65;
    }
    v66 = v10;
    operator delete(v12);
  }
  *(_QWORD *)a1 = &unk_1E3D21708;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  v13 = sub_19C178A44(a2);
  v14 = sub_19C179558((uint64_t)a2);
  *(_DWORD *)(a1 + 176) = v14 + v13;
  *(_QWORD *)(a1 + 184) = v14 + v13;
  *(_OWORD *)(a1 + 192) = xmmword_19C27A9D0;
  *(_QWORD *)(a1 + 208) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 232) = 0;
  *(_DWORD *)(a1 + 240) = 0;
  v15 = operator new(0x10uLL);
  *(_QWORD *)(a1 + 216) = v15;
  *(_QWORD *)(a1 + 224) = v15 + 2;
  *(_QWORD *)(a1 + 232) = v15 + 2;
  *(_DWORD *)(a1 + 240) = 2;
  *v15 = 0;
  v15[1] = 0;
  *(_QWORD *)(a1 + 448) = 0;
  *(_QWORD *)(a1 + 456) = 0;
  *(_QWORD *)(a1 + 440) = 0;
  *(_DWORD *)(a1 + 464) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 292) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 420) = 0u;
  *(_QWORD *)(a1 + 496) = 0;
  *(_QWORD *)(a1 + 504) = 0;
  *(_DWORD *)(a1 + 520) = 0;
  *(_QWORD *)(a1 + 512) = 0;
  *(_DWORD *)(a1 + 536) = -1;
  *(_QWORD *)(a1 + 480) = &unk_1E3D210D8;
  *(_QWORD *)(a1 + 488) = a1 + 176;
  *(_QWORD *)(a1 + 544) = 0;
  sub_19C1C81AC(a1 + 552);
  v16 = (char ***)(a1 + 10656);
  *(_QWORD *)(a1 + 10672) = 0;
  *(_OWORD *)(a1 + 10656) = 0u;
  if ((int)sub_19C179558(a1 + 32) < 1)
    sub_19C1C9AE0(a1 + 480, (uint64_t *)(a1 + 32), (uint64_t *)(a1 + 108), (uint64_t *)&v63);
  else
    sub_19C1C9934(a1 + 480, (uint64_t *)(a1 + 32), (uint64_t *)&v63);
  v17 = v63;
  *(_QWORD *)&v63 = 0;
  v18 = *(_QWORD *)(a1 + 544);
  *(_QWORD *)(a1 + 544) = v17;
  if (v18)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = v63;
    *(_QWORD *)&v63 = 0;
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v20 = 0;
    v21 = *(_DWORD *)(a1 + 108);
    *(_DWORD *)(a1 + 8144) = v21;
    v22 = 1;
    v23 = v21;
    do
    {
      v24 = 1812433253 * (v23 ^ (v23 >> 30));
      v23 = v24 + v22;
      *(_DWORD *)(a1 + 8148 + 4 * v20) = v20 + v24 + 1;
      ++v22;
      ++v20;
    }
    while (v20 != 623);
    *(_QWORD *)(a1 + 10640) = 0;
    *(_DWORD *)(a1 + 552) = v21;
    v25 = 1;
    v26 = 139;
    v27 = v21;
    do
    {
      v28 = 1812433253 * (v27 ^ (v27 >> 30));
      v27 = v28 + v25;
      *(_DWORD *)(a1 + 4 * v26) = v26 + v28 - 138;
      ++v25;
      ++v26;
    }
    while (v26 != 762);
    v29 = 0;
    *(_QWORD *)(a1 + 3048) = 0;
    *(_DWORD *)(a1 + 3080) = v21;
    v30 = 1;
    v31 = v21;
    do
    {
      v32 = 1812433253 * (v31 ^ (v31 >> 30));
      v31 = v32 + v30;
      *(_DWORD *)(a1 + 3084 + 4 * v29) = v29 + v32 + 1;
      ++v30;
      ++v29;
    }
    while (v29 != 623);
    v33 = 0;
    *(_QWORD *)(a1 + 5576) = 0;
    *(_DWORD *)(a1 + 5600) = v21;
    v34 = 1;
    do
    {
      v35 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v35 + v34;
      *(_DWORD *)(a1 + 5604 + 4 * v33) = v33 + v35 + 1;
      ++v34;
      ++v33;
    }
    while (v33 != 623);
    *(_QWORD *)(a1 + 8096) = 0;
    sub_19C23B684();
  }
  v58 = 0;
  v59 = 0;
  v57 = 0;
  sub_19C17AF88(&v57, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 4));
  v60 = 0;
  v61 = 0;
  v62 = 0;
  sub_19C17B16C(&v60, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 56)) >> 3));
  v36 = sub_19C178A44((uint64_t *)(a1 + 32));
  v37 = 5 * (sub_19C179558(a1 + 32) + v36);
  if (*(_BYTE *)(a1 + 144))
  {
    v38 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
    if ((int)v37 <= v38)
      v37 = v38;
    else
      v37 = v37;
  }
  sub_19C17A144((uint64_t *)&v57, a1 + 552, v37, (char **)&v63);
  v39 = *v16;
  if (*v16)
  {
    v40 = *(char ***)(a1 + 10664);
    v41 = *v16;
    if (v40 != v39)
    {
      do
        v40 = sub_19C17B808(v40 - 12);
      while (v40 != v39);
      v41 = *v16;
    }
    *(_QWORD *)(a1 + 10664) = v39;
    operator delete(v41);
    *v16 = 0;
    *(_QWORD *)(a1 + 10664) = 0;
    *(_QWORD *)(a1 + 10672) = 0;
  }
  *(_OWORD *)(a1 + 10656) = v63;
  *(_QWORD *)(a1 + 10672) = v64;
  v64 = 0;
  v63 = 0uLL;
  v42 = (void **)v60;
  if (v60)
  {
    v43 = v61;
    v44 = v60;
    if (v61 != v60)
    {
      do
      {
        if (*((char *)v43 - 17) < 0)
          operator delete(*(v43 - 5));
        v43 -= 5;
      }
      while (v43 != v42);
      v44 = v60;
    }
    v61 = v42;
    operator delete(v44);
  }
  v45 = (void **)v57;
  if (v57)
  {
    v46 = v58;
    v47 = v57;
    if (v58 != v57)
    {
      do
      {
        if (*((char *)v46 - 25) < 0)
          operator delete(*(v46 - 6));
        v46 -= 6;
      }
      while (v46 != v45);
      v47 = v57;
    }
    v58 = v45;
    operator delete(v47);
  }
  if (*(_BYTE *)(a1 + 144))
  {
    v48 = *(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120);
    if (v48)
    {
      v49 = 0;
      v50 = 0;
      v51 = v48 / 96;
      do
      {
        while (1)
        {
          v53 = *(uint64_t ***)(a1 + 10664);
          v54 = *(_QWORD *)(a1 + 10656);
          if (v50 >= 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v53 - v54) >> 5))
            break;
          if (!*(_BYTE *)(a1 + 144))
            goto LABEL_77;
          sub_19C1C9C8C(v54 + v49, *(_QWORD *)(a1 + 120) + v49);
          ++v50;
          v49 += 96;
          if (v51 == v50)
            return a1;
        }
        if (!*(_BYTE *)(a1 + 144))
LABEL_77:
          sub_19C1D1E0C();
        v55 = (uint64_t *)(*(_QWORD *)(a1 + 120) + v49);
        if ((unint64_t)v53 < *(_QWORD *)(a1 + 10672))
          v52 = sub_19C1C1840(v53, v55) + 12;
        else
          v52 = sub_19C1D1CCC((uint64_t ***)(a1 + 10656), v55);
        *(_QWORD *)(a1 + 10664) = v52;
        ++v50;
        v49 += 96;
      }
      while (v51 != v50);
    }
  }
  return a1;
}

void sub_19C1C9844(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  _QWORD *v3;
  _QWORD *v4;
  std::random_device *v5;
  void **v6;
  void **v8;
  uint64_t v9;
  void *v10;

  sub_19C17AA64(v6);
  sub_19C1C7C7C(v5);
  v8 = (void **)(v1 + 62);
  v9 = v1[68];
  v1[68] = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  *v4 = &unk_1E3D20EA8;
  v10 = *v8;
  if (*v8)
  {
    v1[63] = v10;
    operator delete(v10);
  }
  sub_19C1D2994(v3);
  sub_19C1C9D28(v2);
  sub_19C1C7CC8(v1);
  _Unwind_Resume(a1);
}

void sub_19C1C9934(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v6 = operator new();
  v14 = 0;
  v15 = 0;
  v13 = 0;
  sub_19C17AF88(&v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1CAE54(v6, a1, (uint64_t *)&v13);
  *a3 = v6;
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v17;
    v9 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v17 = v7;
    operator delete(v9);
  }
  v10 = (void **)v13;
  if (v13)
  {
    v11 = v14;
    v12 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v13;
    }
    v14 = v10;
    operator delete(v12);
  }
}

void sub_19C1C9A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1C9AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1C9AE0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  void **v9;
  void **v10;
  void *v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  uint64_t v17;
  void *__p;
  void **v19;
  uint64_t v20;

  v8 = operator new();
  v16 = 0;
  v17 = 0;
  v15 = 0;
  sub_19C17AF88(&v15, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1CF494(v8, a1, (uint64_t *)&v15, *a3);
  *a4 = v8;
  v9 = (void **)__p;
  if (__p)
  {
    v10 = v19;
    v11 = __p;
    if (v19 != __p)
    {
      do
      {
        if (*((char *)v10 - 17) < 0)
          operator delete(*(v10 - 5));
        v10 -= 5;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v19 = v9;
    operator delete(v11);
  }
  v12 = (void **)v15;
  if (v15)
  {
    v13 = v16;
    v14 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v13 - 25) < 0)
          operator delete(*(v13 - 6));
        v13 -= 6;
      }
      while (v13 != v12);
      v14 = v15;
    }
    v16 = v12;
    operator delete(v14);
  }
}

void sub_19C1C9C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1C9C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1C9C8C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_19C1D1E40(a1, *(std::string **)a2, *(std::string **)(a2 + 8), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3));
    sub_19C1D2178(a1 + 24, *(std::string **)(a2 + 24), *(std::string **)(a2 + 32), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a2 + 32) - *(_QWORD *)(a2 + 24)) >> 3));
    sub_19C1D24B0((uint64_t **)(a1 + 48), *(_QWORD **)(a2 + 48), (_QWORD *)(a2 + 56));
    sub_19C1D24B0((uint64_t **)(a1 + 72), *(_QWORD **)(a2 + 72), (_QWORD *)(a2 + 80));
  }
  return a1;
}

void **sub_19C1C9D28(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  char *v5;
  void *v6;
  void *v7;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      v5 = (char *)a1[1];
      do
      {
        v7 = (void *)*((_QWORD *)v5 - 7);
        v5 -= 56;
        v6 = v7;
        if (v7)
        {
          *((_QWORD *)v3 - 6) = v6;
          operator delete(v6);
        }
        v3 = v5;
      }
      while (v5 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_19C1C9DA0(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_19C1D2A34(a1);
  operator delete(v1);
}

uint64_t **sub_19C1C9DB4@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  signed int v8;
  char *v10[13];

  v4 = a1 + 8;
  v5 = 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3);
  v6 = a1 + 32;
  v7 = sub_19C178A44((uint64_t *)(a1 + 32));
  v8 = 5 * (sub_19C179558(v6) + v7);
  if (*(_BYTE *)(v4 + 136) && v8 <= (int)(-1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5)))
    v8 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
  if (v5 < v8)
    return sub_19C1C1840(a2, (uint64_t *)(*(_QWORD *)(a1 + 10656)+ 96 * (int)(-991146299 * ((*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3))));
  (*(void (**)(char **__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 544) + 16))(v10, *(_QWORD *)(a1 + 544), v4);
  sub_19C1C1840(a2, (uint64_t *)v10);
  return (uint64_t **)sub_19C17B808(v10);
}

void sub_19C1C9ECC(uint64_t a1, __int128 **a2, double a3)
{
  double v6;
  double v7;
  double v8;
  double v9;
  unint64_t v10;
  void *v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t **v20;
  uint64_t **v21;
  uint64_t **v22;
  double v23;
  double v24;
  double v25;
  void *__p;
  _BYTE *v27;
  int v28;
  uint64_t *v29[12];
  double v30;

  sub_19C1CBD8C(a2, (uint64_t)&__p);
  v6 = sub_19C1CE1EC(a1 + 176, (const double **)&__p);
  v8 = sqrt(v7);
  v24 = v8;
  v25 = v6;
  v9 = erfc((v6 - *(double *)(a1 + 528)) * -0.707106781 / v8) * 0.5;
  v23 = v9;
  v10 = *(_QWORD *)(a1 + 160);
  if (v10 >= *(_QWORD *)(a1 + 168))
  {
    v15 = sub_19C1D2BAC((uint64_t *)(a1 + 152), (uint64_t)&__p, &v25, (uint64_t *)&v24, (uint64_t *)&v23);
  }
  else
  {
    *(_QWORD *)v10 = 0;
    *(_QWORD *)(v10 + 8) = 0;
    *(_QWORD *)(v10 + 16) = 0;
    v11 = __p;
    v12 = v27 - (_BYTE *)__p;
    if (v27 != __p)
    {
      if (v12 < 0)
        sub_19C07DA0C();
      v13 = (char *)operator new(v27 - (_BYTE *)__p);
      *(_QWORD *)v10 = v13;
      *(_QWORD *)(v10 + 8) = v13;
      v14 = &v13[8 * (v12 >> 3)];
      *(_QWORD *)(v10 + 16) = v14;
      memcpy(v13, v11, v12);
      *(_QWORD *)(v10 + 8) = v14;
    }
    *(_DWORD *)(v10 + 24) = v28;
    *(double *)(v10 + 32) = v6;
    *(double *)(v10 + 40) = v8;
    *(double *)(v10 + 48) = v9;
    v15 = v10 + 56;
    *(_QWORD *)(a1 + 160) = v10 + 56;
  }
  *(_QWORD *)(a1 + 160) = v15;
  v16 = *(int *)(a1 + 464);
  v17 = v16 + 1;
  *(_DWORD *)(a1 + 464) = v16 + 1;
  v18 = *(_QWORD *)(a1 + 440);
  v19 = (*(_QWORD *)(a1 + 448) - v18) >> 3;
  if (v16 + 1 <= v19)
  {
    if (v16 + 1 < v19)
      *(_QWORD *)(a1 + 448) = v18 + 8 * v16 + 8;
  }
  else
  {
    sub_19C17C9D8(a1 + 440, v16 + 1 - v19);
    v17 = *(int *)(a1 + 464);
    v18 = *(_QWORD *)(a1 + 440);
  }
  *(double *)(v18 + 8 * v17 - 8) = a3;
  sub_19C1D3004(a1 + 176, (uint64_t)&__p);
  sub_19C1D4724(a1 + 472, a1 + 176);
  sub_19C1CA150(a1 + 480);
  sub_19C1C1840(v29, (uint64_t *)a2);
  v30 = a3;
  v20 = *(uint64_t ***)(a1 + 16);
  if ((unint64_t)v20 >= *(_QWORD *)(a1 + 24))
  {
    v22 = sub_19C1C907C((uint64_t ***)(a1 + 8), (uint64_t *)v29);
  }
  else
  {
    v21 = sub_19C1C1840(v20, (uint64_t *)v29);
    *((double *)v21 + 12) = v30;
    v22 = v21 + 13;
  }
  *(_QWORD *)(a1 + 16) = v22;
  sub_19C17B808((char **)v29);
  if (__p)
  {
    v27 = __p;
    operator delete(__p);
  }
}

void sub_19C1CA0C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  sub_19C17B808(&a16);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

long double sub_19C1CA114(uint64_t a1, double a2, double a3)
{
  return erfc((a2 - *(double *)(a1 + 48)) * -0.707106781 / a3) * 0.5;
}

double sub_19C1CA148()
{
  return 0.0;
}

void sub_19C1CA150(uint64_t a1)
{
  _QWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double *v10;
  double *v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  char *v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  __int128 *v19;
  _OWORD *v20;
  unint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const double *v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  double *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  double *v44;
  uint64_t v45;
  unint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  double *v52;
  uint64_t v53;
  __int128 v54;
  double *v55;
  double *v56;
  double v57;
  double *v58;
  double *v59;
  double v60;
  BOOL v61;
  char *v62;
  signed int v63;
  _OWORD *v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  _OWORD *v84;
  unint64_t v85;
  __int128 v86;
  unint64_t v87;
  uint64_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v93;
  uint64_t v94;
  void *__p;
  int v96[2];
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  double *v104;
  uint64_t v105;
  double *v106;
  double *v107;
  double *v108;
  uint64_t v109;
  unsigned int v110;

  v104 = 0;
  v105 = 0;
  v106 = 0;
  v1 = *(_QWORD **)(a1 + 8);
  v101 = 0;
  v102 = 0;
  v100 = 0;
  v3 = (_BYTE *)v1[9];
  v2 = (_BYTE *)v1[10];
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(v2 - v3);
    v6 = &v5[8 * (v4 >> 3)];
    v100 = v5;
    v102 = v6;
    memcpy(v5, v3, v4);
    v101 = v6;
  }
  v7 = v1[12];
  v103 = v7;
  if (!(_DWORD)v7)
  {
    v55 = 0;
    v58 = 0;
    *(_DWORD *)(a1 + 56) = 0;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v90 = (int)v7;
  v91 = v7;
  v13 = 8 * (v7 >> 32);
  v88 = v7 >> 32;
  v89 = v13;
  v87 = (v7 >> 32) & 0xFFFFFFFFFFFFFFFCLL;
  v93 = HIDWORD(v7);
  v94 = 16;
  do
  {
    v14 = *(_QWORD *)(a1 + 8);
    v15 = v100;
    __p = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    if (!(_DWORD)v93)
    {
      v16 = 0;
      v108 = 0;
      v109 = 0;
      v107 = 0;
      v110 = 0;
      goto LABEL_27;
    }
    if (v7 < 0)
      sub_19C07DA0C();
    v16 = operator new(v13);
    bzero(v16, v13);
    if ((unint64_t)v7 >> 33 < 3)
    {
      v17 = 0;
      v18 = v88;
      goto LABEL_17;
    }
    v18 = v88;
    if ((unint64_t)((char *)v16 - &v100[v13 * v12]) < 0x20)
    {
      v17 = 0;
LABEL_17:
      v23 = v18 - v17;
      v24 = 8 * v17;
      v25 = (_QWORD *)v16 + v17;
      v26 = (uint64_t *)&v15[v8 + v24];
      do
      {
        v27 = *v26++;
        *v25++ = v27;
        --v23;
      }
      while (v23);
      goto LABEL_19;
    }
    v19 = (__int128 *)&v100[v94];
    v20 = v16 + 1;
    v21 = v87;
    do
    {
      v22 = *v19;
      *(v20 - 1) = *(v19 - 1);
      *v20 = v22;
      v19 += 2;
      v20 += 2;
      v21 -= 4;
    }
    while (v21);
    v17 = v87;
    if (v88 != v87)
      goto LABEL_17;
LABEL_19:
    v107 = 0;
    v108 = 0;
    v109 = 0;
    v110 = v93;
    sub_19C17C9D8((uint64_t)&v107, v18);
    v28 = v110;
    if ((int)v110 >= 1)
    {
      v29 = 0;
      v30 = v107;
      if (v110 < 4)
        goto LABEL_25;
      if ((unint64_t)((char *)v107 - (char *)v16) < 0x20)
        goto LABEL_25;
      v31 = 0;
      v29 = v110 & 0xFFFFFFFC;
      v32 = (8 * v110) & 0x7FFFFFFE0;
      do
      {
        v33 = v16[v31 / 0x10 + 1];
        v34 = (double *)&v30[v31 / 8];
        *(_OWORD *)v34 = v16[v31 / 0x10];
        *((_OWORD *)v34 + 1) = v33;
        v31 += 32;
      }
      while (v32 != v31);
      if (v29 != v28)
      {
LABEL_25:
        v35 = v28 - v29;
        v36 = v29 << 32;
        do
        {
          *(const double *)((char *)v30 + (v36 >> 29)) = *(const double *)((char *)v16 + (v36 >> 29));
          v36 += 0x100000000;
          --v35;
        }
        while (v35);
      }
    }
LABEL_27:
    v37 = sub_19C1CA920(v14, (const double **)&v107);
    v38 = v37;
    if (v11 < v10)
    {
      *v11++ = v37;
      v7 = v91;
      v13 = v89;
      v105 = (uint64_t)v11;
      v39 = v107;
      if (!v107)
        goto LABEL_30;
LABEL_29:
      v108 = v39;
      operator delete(v39);
      goto LABEL_30;
    }
    v40 = v11 - v9;
    v41 = v40 + 1;
    if ((unint64_t)(v40 + 1) >> 61)
      sub_19C07DA0C();
    if (((char *)v10 - (char *)v9) >> 2 > v41)
      v41 = ((char *)v10 - (char *)v9) >> 2;
    if ((unint64_t)((char *)v10 - (char *)v9) >= 0x7FFFFFFFFFFFFFF8)
      v42 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v42 = v41;
    if (v42)
    {
      if (v42 >> 61)
        sub_19C07C7FC();
      v43 = operator new(8 * v42);
      v44 = (double *)&v43[8 * v40];
      *v44 = v38;
      v45 = (uint64_t)(v44 + 1);
      if (v11 != v9)
      {
LABEL_41:
        v46 = (char *)(v11 - 1) - (char *)v9;
        if (v46 < 0x168
          || &v43[(char *)v11 - (char *)v9 - 8 - (v46 & 0xFFFFFFFFFFFFFFF8)] > &v43[(char *)v11 - (char *)v9 - 8]
          || (double *)((char *)v11 - (v46 & 0xFFFFFFFFFFFFFFF8) - 8) > v11 - 1
          || (unint64_t)((char *)v9 - v43) < 0x20)
        {
          v47 = v11;
          v7 = v91;
          v13 = v89;
        }
        else
        {
          v49 = (v46 >> 3) + 1;
          v50 = 8 * (v49 & 0x3FFFFFFFFFFFFFFCLL);
          v47 = &v11[v50 / 0xFFFFFFFFFFFFFFF8];
          v44 = (double *)((char *)v44 - v50);
          v51 = &v43[8 * v40 - 16];
          v52 = v11 - 2;
          v53 = v49 & 0x3FFFFFFFFFFFFFFCLL;
          v7 = v91;
          do
          {
            v54 = *(_OWORD *)v52;
            *(v51 - 1) = *((_OWORD *)v52 - 1);
            *v51 = v54;
            v51 -= 2;
            v52 -= 4;
            v53 -= 4;
          }
          while (v53);
          v13 = v89;
          if (v49 == (v49 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_44:
            v10 = (double *)&v43[8 * v42];
            v104 = v44;
            v105 = v45;
            v106 = v10;
            if (!v9)
              goto LABEL_46;
LABEL_45:
            operator delete(v9);
            goto LABEL_46;
          }
        }
        do
        {
          v48 = *((_QWORD *)v47-- - 1);
          *((_QWORD *)v44-- - 1) = v48;
        }
        while (v47 != v9);
        goto LABEL_44;
      }
    }
    else
    {
      v43 = 0;
      v44 = (double *)(8 * v40);
      *(double *)(8 * v40) = v37;
      v45 = 8 * v40 + 8;
      if (v11 != v9)
        goto LABEL_41;
    }
    v7 = v91;
    v13 = v89;
    v10 = (double *)&v43[8 * v42];
    v104 = v44;
    v105 = v45;
    v106 = v10;
    if (v9)
      goto LABEL_45;
LABEL_46:
    v9 = v44;
    v11 = (double *)v45;
    v105 = v45;
    v39 = v107;
    if (v107)
      goto LABEL_29;
LABEL_30:
    if (v16)
      operator delete(v16);
    ++v12;
    v94 += v13;
    v8 += v13;
  }
  while (v12 != v90);
  v55 = v104;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 96);
  if (v55 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v56 = v55 + 1;
  if (v55 + 1 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v57 = *v55;
  v58 = v55;
  v59 = v55 + 1;
  do
  {
    v60 = *v59++;
    v61 = v57 < v60;
    v57 = fmax(v57, v60);
    if (v61)
      v58 = v56;
    v56 = v59;
  }
  while (v59 != v11);
  v62 = v100;
  v63 = HIDWORD(v103);
  v107 = 0;
  v108 = 0;
  v109 = 0;
  if (!HIDWORD(v103))
  {
LABEL_81:
    v74 = 0;
    LODWORD(v73) = 0;
    v64 = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    __p = 0;
    v98 = 0;
    goto LABEL_82;
  }
LABEL_65:
  if (v63 < 0)
    sub_19C07DA0C();
  v64 = operator new(8 * v63);
  v65 = (v58 - v55) * v63;
  bzero(v64, 8 * v63);
  if (v63 < 0xA || (v66 = &v62[8 * v65], (unint64_t)((char *)v64 - v66) < 0x20))
  {
    v67 = 0;
    goto LABEL_69;
  }
  v67 = v63 & 0xFFFFFFFFFFFFFFFCLL;
  v83 = (__int128 *)(v66 + 16);
  v84 = v64 + 1;
  v85 = v67;
  do
  {
    v86 = *v83;
    *(v84 - 1) = *(v83 - 1);
    *v84 = v86;
    v83 += 2;
    v84 += 2;
    v85 -= 4;
  }
  while (v85);
  if (v67 != v63)
  {
LABEL_69:
    v68 = v63 - v67;
    v69 = 8 * v67;
    v70 = (_QWORD *)v64 + v67;
    v71 = &v62[8 * v65 + v69];
    do
    {
      v72 = *(_QWORD *)v71;
      v71 += 8;
      *v70++ = v72;
      --v68;
    }
    while (v68);
  }
  __p = 0;
  *(_QWORD *)v96 = 0;
  v97 = 0;
  v98 = v63;
  sub_19C17C9D8((uint64_t)&__p, v63);
  v73 = v98;
  v74 = (char *)__p;
  if ((int)v98 >= 1)
  {
    v75 = 0;
    if (v98 < 4)
      goto LABEL_77;
    if ((unint64_t)((_BYTE *)__p - (_BYTE *)v64) < 0x20)
      goto LABEL_77;
    v76 = 0;
    v75 = v98 & 0xFFFFFFFC;
    v77 = (8 * v98) & 0x7FFFFFFE0;
    do
    {
      v78 = v64[v76 / 0x10 + 1];
      v79 = &v74[v76];
      *(_OWORD *)v79 = v64[v76 / 0x10];
      *((_OWORD *)v79 + 1) = v78;
      v76 += 32;
    }
    while (v77 != v76);
    if (v75 != v73)
    {
LABEL_77:
      v80 = v73 - v75;
      v81 = v75 << 32;
      do
      {
        *(_QWORD *)&v74[v81 >> 29] = *(_QWORD *)((char *)v64 + (v81 >> 29));
        v81 += 0x100000000;
        --v80;
      }
      while (v80);
    }
  }
LABEL_82:
  v82 = *(_QWORD *)v58;
  v99 = *(_QWORD *)v58;
  if ((void **)(a1 + 16) != &__p)
  {
    sub_19C11EAD0((_QWORD *)(a1 + 16), v74, *(char **)v96, (uint64_t)(*(_QWORD *)v96 - (_QWORD)v74) >> 3);
    LODWORD(v73) = v98;
    v82 = v99;
    v74 = (char *)__p;
  }
  *(_DWORD *)(a1 + 40) = v73;
  *(_QWORD *)(a1 + 48) = v82;
  if (v74)
  {
    *(_QWORD *)v96 = v74;
    operator delete(v74);
  }
  if (v64)
    operator delete(v64);
  if (v62)
    operator delete(v62);
  if (v55)
  {
    v105 = (uint64_t)v55;
    operator delete(v55);
  }
}

void sub_19C1CA864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  void *v28;
  void *v29;

  if (__p)
    operator delete(__p);
  if (v28)
    operator delete(v28);
  if (v29)
    operator delete(v29);
  if (a27)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

double sub_19C1CA920(uint64_t a1, const double **a2)
{
  double v3;
  double v4;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 96))
  {
    sub_19C1CAA00(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 232), 1, &__C, (int)__N);
    v3 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 264), 1, &__C, *(int *)(a1 + 288));
    v4 = __C;
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v4 + v3;
  }
  else
  {
    __A[0] = 0;
    vDSP_meanvD(*(const double **)(a1 + 264), 1, (double *)__A, *(int *)(a1 + 288));
    return *(double *)__A;
  }
}

void sub_19C1CA9E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1CAA00(uint64_t a1@<X0>, const double **a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  signed int v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  double v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  char *v25;
  void *__p;
  char *v28;
  char *v29;
  signed int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = *(_DWORD *)(a1 + 96);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  *(_DWORD *)(a3 + 24) = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  if (v3)
  {
    if (v3 < 0)
      sub_19C07DA0C();
    v5 = v3;
    v6 = (char *)operator new(8 * v3);
    bzero(v6, 8 * v3);
    v7 = 0;
    v8 = 0;
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = &v6[8 * v3];
    *(_QWORD *)(a3 + 16) = &v6[8 * v3];
    *(_DWORD *)(a3 + 24) = v3;
    v25 = v6;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 72);
      v10 = *(_DWORD *)(a1 + 100);
      v31 = 0;
      v32 = 0;
      v33 = 0;
      if (!v10)
      {
        v11 = 0;
        v28 = 0;
        v29 = 0;
        __p = 0;
        v30 = 0;
        goto LABEL_14;
      }
      if (v10 < 0)
        sub_19C07DA0C();
      v11 = operator new(8 * v10);
      bzero(v11, 8 * v10);
      if (v10 >= 8 && (unint64_t)v11 - v9 - 8 * v8 * v10 >= 0x20)
      {
        v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
        v20 = (__int128 *)(v9 + v7 * v10 + 16);
        v21 = v11 + 1;
        v22 = v12;
        do
        {
          v23 = *v20;
          *(v21 - 1) = *(v20 - 1);
          *v21 = v23;
          v20 += 2;
          v21 += 2;
          v22 -= 4;
        }
        while (v22);
        if (v12 == v10)
          goto LABEL_12;
      }
      else
      {
        v12 = 0;
      }
      v13 = v10 - v12;
      v14 = 8 * v12;
      v15 = (_QWORD *)v11 + v12;
      v16 = (uint64_t *)(v9 + v14 + v7 * v10);
      do
      {
        v17 = *v16++;
        *v15++ = v17;
        --v13;
      }
      while (v13);
LABEL_12:
      __p = 0;
      v28 = 0;
      v30 = 0;
      v29 = 0;
      __p = operator new(8 * v10);
      v28 = (char *)__p + 8 * v10;
      v29 = v28;
      v30 = v10;
      memcpy(__p, v11, 8 * v10);
      v6 = v25;
LABEL_14:
      v18 = *(double *)(a1 + 24);
      v19 = sub_19C1CACA8(a1 + 8, (uint64_t)&__p, a2);
      *(long double *)&v6[8 * v8] = exp(v19 * -0.5) * v18;
      if (__p)
      {
        v28 = (char *)__p;
        operator delete(__p);
      }
      if (v11)
        operator delete(v11);
      ++v8;
      v7 += 8;
      if (v8 == v5)
        return;
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
}

void sub_19C1CAC34(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1CAC5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14)
{
  void *v14;

  if (__p)
  {
    operator delete(__p);
    if (!v14)
    {
LABEL_3:
      *(_QWORD *)(a10 + 8) = a11;
      operator delete(a11);
      _Unwind_Resume(a1);
    }
  }
  else if (!v14)
  {
    goto LABEL_3;
  }
  operator delete(v14);
  *(_QWORD *)(a10 + 8) = a11;
  operator delete(a11);
  _Unwind_Resume(a1);
}

double sub_19C1CACA8(uint64_t a1, uint64_t a2, const double **a3)
{
  uint64_t v6;
  const void *v7;
  int64_t v8;
  char *v9;
  char *v10;
  void *v11;
  double v12;
  double v13;
  double v14;

  v7 = *(const void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = v6 - *(_QWORD *)a2;
  if (v6 == *(_QWORD *)a2)
  {
    v10 = 0;
    v9 = 0;
  }
  else
  {
    if (v8 < 0)
      sub_19C07DA0C();
    v9 = (char *)operator new(v6 - *(_QWORD *)a2);
    v10 = &v9[8 * (v8 >> 3)];
    memcpy(v9, v7, v8);
  }
  vDSP_vsubD(*a3, 1, (const double *)v9, 1, (double *)v9, 1, *(int *)(a2 + 24));
  if (v10 == v9)
  {
    v11 = 0;
  }
  else
  {
    if (v10 - v9 < 0)
      sub_19C07DA0C();
    v11 = operator new(v10 - v9);
    memcpy(v11, v9, v10 - v9);
  }
  cblas_dnrm2_NEWLAPACK();
  v13 = v12;
  v14 = *(double *)(a1 + 24);
  if (v11)
    operator delete(v11);
  if (v9)
    operator delete(v9);
  return v13 * v13 / (v14 * v14);
}

void sub_19C1CADFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;

  if (v15)
    operator delete(v15);
  if (v14)
    operator delete(v14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1CAE54(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void **v6;
  void **v7;
  void *v8;
  void **v9;
  void **v10;
  void *v11;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_19C17AF88(&v13, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21648;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v13, (uint64_t)v14, 0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (_BYTE *)v13) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v17, 0xCCCCCCCCCCCCCCCDLL * (((char *)v17 - (_BYTE *)__p) >> 3));
  v6 = (void **)__p;
  if (__p)
  {
    v7 = v17;
    v8 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v7 - 17) < 0)
          operator delete(*(v7 - 5));
        v7 -= 5;
      }
      while (v7 != v6);
      v8 = __p;
    }
    v17 = v6;
    operator delete(v8);
  }
  v9 = (void **)v13;
  if (v13)
  {
    v10 = v14;
    v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 25) < 0)
          operator delete(*(v10 - 6));
        v10 -= 6;
      }
      while (v10 != v9);
      v11 = v13;
    }
    v14 = v9;
    operator delete(v11);
  }
  *(_QWORD *)a1 = &unk_1E3D21378;
  *(_DWORD *)(a1 + 64) = 5;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_19C1CAFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;

  v11 = v10;
  if (*v11)
  {
    sub_19C2563D4(v9, *v11);
    sub_19C17A75C(&a9);
    _Unwind_Resume(a1);
  }
  sub_19C17A75C(&a9);
  _Unwind_Resume(a1);
}

void sub_19C1CB034(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    sub_19C25623C((uint64_t)&a9, a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_19C1CB050(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *a1 = &unk_1E3D21648;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 17) < 0)
          operator delete(*(void **)(v3 - 40));
        v3 -= 40;
      }
      while (v3 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  v5 = a1[2];
  if (v5)
  {
    v6 = a1[3];
    v7 = (void *)a1[2];
    if (v6 != v5)
    {
      do
      {
        if (*(char *)(v6 - 25) < 0)
          operator delete(*(void **)(v6 - 48));
        v6 -= 48;
      }
      while (v6 != v5);
      v7 = (void *)a1[2];
    }
    a1[3] = v5;
    operator delete(v7);
  }
  return a1;
}

_QWORD *sub_19C1CB118(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;

  *a1 = &unk_1E3D21378;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  return sub_19C1CB050(a1);
}

void sub_19C1CB180(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;
  _QWORD *v5;

  *a1 = &unk_1E3D21378;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  v5 = sub_19C1CB050(a1);
  operator delete(v5);
}

void sub_19C1CB1EC(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  double *v15;
  double *v16;
  double *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v29;
  double v30;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD **v33;
  BOOL v34;
  uint64_t *v35;
  char **v36;
  char **v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40[4];
  uint64_t *v41;
  double *__A;
  double *v43;
  void *__p;
  char *v45;
  char *v46[3];
  char *v47[3];
  uint64_t *v48[12];
  char v49[8];
  _QWORD **v50;
  _QWORD *v51[2];
  uint64_t *v52;
  char **v53;
  double __C[2];

  sub_19C1CB798(a1);
  v6 = *(_QWORD *)(a1 + 72);
  if (v6 == *(_QWORD *)(a1 + 80))
  {
    v39 = a3;
    sub_19C1CBA2C(a2, &v52);
    sub_19C1CBAC4(a2, (uint64_t)v49);
    v7 = v50;
    if (v50 != v51)
    {
      do
      {
        v8 = *(_QWORD *)((char *)v7 + 28);
        sub_19C1C1840(v48, &v52[12 * (int)v8]);
        if (SHIDWORD(v8) >= 1)
        {
          v9 = 0;
          v10 = HIDWORD(v8) & ~(v8 >> 63);
          do
          {
            sub_19C1CBC00(a1, (uint64_t *)v48, (uint64_t **)&__A);
            sub_19C17A814((char **)v48, (uint64_t)&__A);
            sub_19C098FBC((uint64_t)v47, v47[1]);
            sub_19C098FBC((uint64_t)v46, v46[1]);
            v11 = (char *)__p;
            if (__p)
            {
              v12 = v45;
              v13 = __p;
              if (v45 != __p)
              {
                do
                {
                  v14 = (void *)*((_QWORD *)v12 - 4);
                  if (v14)
                  {
                    *((_QWORD *)v12 - 3) = v14;
                    operator delete(v14);
                  }
                  if (*(v12 - 33) < 0)
                    operator delete(*((void **)v12 - 7));
                  v12 -= 56;
                }
                while (v12 != v11);
                v13 = __p;
              }
              v45 = v11;
              operator delete(v13);
            }
            v15 = __A;
            if (*(double *)&__A != 0.0)
            {
              v16 = v43;
              v17 = __A;
              if (v43 != __A)
              {
                do
                {
                  v18 = (void *)*((_QWORD *)v16 - 4);
                  if (v18)
                  {
                    *((_QWORD *)v16 - 3) = v18;
                    operator delete(v18);
                  }
                  if (*((char *)v16 - 33) < 0)
                    operator delete(*((void **)v16 - 7));
                  v16 -= 7;
                }
                while (v16 != v15);
                v17 = __A;
              }
              v43 = v15;
              operator delete(v17);
            }
            v41 = 0;
            v19 = *(_QWORD *)(a1 + 8);
            sub_19C1CBD8C((__int128 **)v48, (uint64_t)v40);
            v20 = *(_QWORD *)(v19 + 8);
            if (*(_DWORD *)(v20 + 96))
            {
              sub_19C1CAA00(*(_QWORD *)(v19 + 8), (const double **)v40, (uint64_t)&__A);
              __C[0] = 0.0;
              vDSP_dotprD(__A, 1, *(const double **)(v20 + 232), 1, __C, (int)__p);
              v21 = __C[0];
              __C[0] = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 264), 1, __C, *(int *)(v20 + 288));
              v22 = __C[0];
              sub_19C1CE3C0(v20, (const double **)v40, (uint64_t)&__A);
              v24 = v23;
              v25 = *(double *)(v20 + 16);
              if (*(double *)&__A != 0.0)
              {
                v43 = __A;
                operator delete(__A);
              }
              v26 = v22 + v21;
              v27 = v25 + v24;
            }
            else
            {
              *(double *)&__A = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 264), 1, (double *)&__A, *(int *)(v20 + 288));
              v26 = *(double *)&__A;
              v27 = sub_19C1CE2F4(v20, (const double **)v40);
            }
            v28 = sqrt(v27);
            if (v28 < 0.00000001 || (v29 = *(_DWORD *)(*(_QWORD *)(v19 + 8) + 96), v29 <= 0))
            {
              v30 = (*(double (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            }
            else
            {
              if (*(_DWORD *)(v19 + 56) != v29)
                (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
              (**(void (***)(uint64_t, double, double))v19)(v19, v26, v28);
            }
            v31 = *(uint64_t **)&v30;
            if (v40[0])
            {
              v40[1] = v40[0];
              operator delete(v40[0]);
            }
            v41 = v31;
            sub_19C1CC134((int *)(a1 + 64), (uint64_t *)v48, &v41);
            ++v9;
          }
          while (v10 != v9);
        }
        sub_19C17B808((char **)v48);
        v32 = (_QWORD *)v7[1];
        if (v32)
        {
          do
          {
            v33 = (_QWORD **)v32;
            v32 = (_QWORD *)*v32;
          }
          while (v32);
        }
        else
        {
          do
          {
            v33 = (_QWORD **)v7[2];
            v34 = *v33 == v7;
            v7 = v33;
          }
          while (!v34);
        }
        v7 = v33;
      }
      while (v33 != v51);
    }
    v35 = *(uint64_t **)(a1 + 72);
    sub_19C1C1840((uint64_t **)v39, v35);
    *(_QWORD *)(v39 + 96) = v35[12];
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    sub_19C07C924((uint64_t)&v50, v51[0]);
    v36 = (char **)v52;
    if (v52)
    {
      v37 = v53;
      v38 = v52;
      if (v53 != (char **)v52)
      {
        do
          v37 = sub_19C17B808(v37 - 12);
        while (v37 != v36);
        v38 = v52;
      }
      v53 = v36;
      operator delete(v38);
    }
  }
  else
  {
    sub_19C1C1840((uint64_t **)a3, *(uint64_t **)(a1 + 72));
    *(_QWORD *)(a3 + 96) = *(_QWORD *)(v6 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
  }
}

void sub_19C1CB65C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  char **v28;
  uint64_t v29;

  sub_19C17B808(v28);
  sub_19C07C924(a10, *(_QWORD **)(v29 - 184));
  sub_19C17AA64((void **)(v29 - 168));
  _Unwind_Resume(a1);
}

void sub_19C1CB6F4(char *a1@<X8>)
{
  a1[23] = 17;
  strcpy(a1, "genetic_optimizer");
}

void sub_19C1CB718(char *a1@<X8>)
{
  a1[23] = 21;
  strcpy(a1, "acquisition_optimizer");
}

uint64_t sub_19C1CB740(uint64_t a1)
{
  char **v2;
  char **v3;
  char **v4;

  v2 = *(char ***)(a1 + 8);
  if (v2)
  {
    v3 = *(char ***)(a1 + 16);
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = *(char ***)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_19C1CB798(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  uint64_t *v11;
  uint64_t *v12;
  char **v13;
  uint64_t *v14;
  void *__p[4];
  uint64_t *v16;
  uint64_t *v17[13];
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;

  v18 = 5;
  v20 = 0;
  v21 = 0;
  v19 = 0;
  v3 = *(_QWORD *)(a1 + 72);
  v2 = (uint64_t *)(a1 + 72);
  if (v3 == *(_QWORD *)(a1 + 80))
  {
    v12 = 0;
    *(_DWORD *)(a1 + 64) = 5;
    if ((int *)(a1 + 64) == &v18)
      goto LABEL_18;
    goto LABEL_17;
  }
  do
  {
    sub_19C1C1840(v17, (uint64_t *)v3);
    v17[12] = *(uint64_t **)(v3 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)__p, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    v16 = 0;
    v4 = *(_QWORD *)(a1 + 8);
    sub_19C1CBD8C((__int128 **)v17, (uint64_t)__p);
    v5.n128_f64[0] = sub_19C1CE1EC(*(_QWORD *)(v4 + 8), (const double **)__p);
    v7 = sqrt(v6);
    if (v7 < 0.00000001 || (v8 = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 96), v8 <= 0))
    {
      v10 = (*(double (**)(uint64_t, __n128))(*(_QWORD *)v4 + 8))(v4, v5);
    }
    else
    {
      v9 = v5.n128_f64[0];
      if (*(_DWORD *)(v4 + 56) != v8)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      (**(void (***)(uint64_t, double, double))v4)(v4, v9, v7);
    }
    *(double *)&v11 = v10;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    v16 = v11;
    if (*(double *)&v11 > (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8)))
      sub_19C1CC134(&v18, (uint64_t *)v17, &v16);
    sub_19C17B808((char **)v17);
    v3 = *(_QWORD *)(a1 + 72);
  }
  while (v3 != *(_QWORD *)(a1 + 80));
  v12 = v19;
  *(_DWORD *)(a1 + 64) = v18;
  if ((int *)(a1 + 64) != &v18)
  {
LABEL_17:
    sub_19C1CC414(v2, v12, v20, 0x4EC4EC4EC4EC4EC5 * (v20 - v12));
    v12 = v19;
  }
LABEL_18:
  if (v12)
  {
    v13 = (char **)v20;
    v14 = v12;
    if (v20 != v12)
    {
      do
        v13 = sub_19C17B808(v13 - 13);
      while (v13 != (char **)v12);
      v14 = v19;
    }
    v20 = v12;
    operator delete(v14);
  }
}

void sub_19C1CB9C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_19C1CB740(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1CB9DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  sub_19C17B808((char **)va);
  sub_19C1CB740(v7 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1CBA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v15;

  if (__p)
    operator delete(__p);
  sub_19C17B808(&a15);
  sub_19C1CB740(v15 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1CBA2C(uint64_t **a1@<X0>, _QWORD *a2@<X8>)
{
  char **v3;
  char **v4;
  void *v5;
  void *__p;
  char **v7;

  sub_19C1CCA84((uint64_t ***)&__p, a1);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_19C1CC9BC((uint64_t)__p, (uint64_t)v7, (uint64_t)a2);
  v3 = (char **)__p;
  if (__p)
  {
    v4 = v7;
    v5 = __p;
    if (v7 != __p)
    {
      do
        v4 = sub_19C17B808(v4 - 13);
      while (v4 != v3);
      v5 = __p;
    }
    v7 = v3;
    operator delete(v5);
  }
}

void sub_19C1CBAA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void **v2;
  va_list va;

  va_start(va, a2);
  sub_19C17AA64(v2);
  sub_19C1C8154((void **)va);
  _Unwind_Resume(a1);
}

void sub_19C1CBAC4(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  int v5;
  void *__p[3];
  _QWORD v7[313];
  std::random_device v8;
  double *v9[3];

  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = a2 + 16;
  *(_QWORD *)(a2 + 24) = 0;
  sub_19C1CCB54(a1, __p);
  sub_19C17A140(v7, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v3 = 50;
  do
  {
    v5 = sub_19C1CCF6C((uint64_t)v9, (uint64_t)v7, v9);
    v4 = sub_19C1CCC40((int *)a2, &v5);
    ++*(_DWORD *)v4;
    --v3;
  }
  while (v3);
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
  std::random_device::~random_device(&v8);
}

void sub_19C1CBBA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  _QWORD **v15;

  if (__p)
  {
    operator delete(__p);
    sub_19C07C924(v14, *v15);
    _Unwind_Resume(a1);
  }
  sub_19C07C924(v14, *v15);
  _Unwind_Resume(a1);
}

void sub_19C1CBC00(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  void *v6[4];
  void *__p[4];
  void *v8[4];
  _OWORD v9[2];

  sub_19C1C1840(a3, a2);
  sub_19C1CD184((__int128 **)a2, (uint64_t)v8);
  sub_19C1CD0D8(a1, (uint64_t *)v8, v9);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v6);
  sub_19C1CD45C(a1, (uint64_t *)v6, __p);
  sub_19C1CD7E0((uint64_t *)a3, (uint64_t *)v9);
  sub_19C1CD99C((uint64_t)a3, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v6[0])
  {
    v6[1] = v6[0];
    operator delete(v6[0]);
  }
  if (*(_QWORD *)&v9[0])
  {
    *((_QWORD *)&v9[0] + 1) = *(_QWORD *)&v9[0];
    operator delete(*(void **)&v9[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
}

void sub_19C1CBCCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  char **v18;
  uint64_t v19;
  void *v21;
  void *v22;

  if (__p)
  {
    operator delete(__p);
    v21 = *(void **)(v19 - 64);
    if (!v21)
    {
LABEL_3:
      v22 = a17;
      if (!a17)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v21 = *(void **)(v19 - 64);
    if (!v21)
      goto LABEL_3;
  }
  *(_QWORD *)(v19 - 56) = v21;
  operator delete(v21);
  v22 = a17;
  if (!a17)
  {
LABEL_4:
    sub_19C17B808(v18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(v22);
  sub_19C17B808(v18);
  _Unwind_Resume(a1);
}

void sub_19C1CBD8C(__int128 **a1@<X0>, uint64_t a2@<X8>)
{
  signed int v4;
  char *v5;
  unint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  char *v12;
  uint64_t v13;
  float64x2_t *v14;
  char *v15;
  uint64_t v16;
  float64x2_t *v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  int64x2_t v21;
  float64x2_t v22;
  float64x2_t v23;
  float64x2_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27[3];
  unsigned int v28;
  void *v29;
  char *v30;
  char *v31;
  signed int v32;
  void *__p;
  char *v34;
  char *v35;
  signed int v36;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  sub_19C1CD184(a1, (uint64_t)&v29);
  v4 = v32;
  v34 = 0;
  v35 = 0;
  __p = 0;
  if (!v32)
  {
    v7 = 0;
    v5 = 0;
    v36 = 0;
    if (&__p != (void **)a2)
      goto LABEL_10;
LABEL_13:
    *(_DWORD *)(a2 + 24) = v4;
    if (!v5)
      goto LABEL_15;
    goto LABEL_14;
  }
  if (v32 < 0)
    sub_19C07DA0C();
  v5 = (char *)operator new(8 * v32);
  __p = v5;
  v35 = &v5[8 * v4];
  bzero(v5, 8 * v4);
  v6 = 0;
  v7 = &v5[8 * v4];
  v34 = v7;
  v36 = v4;
  v8 = v29;
  if (v4 < 4)
    goto LABEL_40;
  if ((unint64_t)(v5 - (_BYTE *)v29) < 0x20)
    goto LABEL_40;
  v9 = 0;
  v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  v10 = v6;
  do
  {
    v11 = *(_OWORD *)&v8[v9 + 2];
    v12 = &v5[v9 * 8];
    *(_OWORD *)v12 = *(_OWORD *)&v8[v9];
    *((_OWORD *)v12 + 1) = v11;
    v9 += 4;
    v10 -= 4;
  }
  while (v10);
  if (v6 != v4)
  {
LABEL_40:
    do
    {
      *(_QWORD *)&v5[8 * v6] = v8[v6];
      ++v6;
    }
    while (v4 != v6);
  }
  if (&__p == (void **)a2)
    goto LABEL_13;
LABEL_10:
  sub_19C11EAD0((_QWORD *)a2, v5, v7, (v7 - v5) >> 3);
  v5 = (char *)__p;
  *(_DWORD *)(a2 + 24) = v36;
  if (v5)
  {
LABEL_14:
    v34 = v5;
    operator delete(v5);
  }
LABEL_15:
  if (v29)
  {
    v30 = (char *)v29;
    operator delete(v29);
  }
  sub_19C1CD508((uint64_t)a1, (uint64_t)v27);
  v13 = v28;
  v30 = 0;
  v31 = 0;
  v29 = 0;
  if (!v28)
  {
    v32 = 0;
    goto LABEL_27;
  }
  if ((v28 & 0x80000000) != 0)
    sub_19C07DA0C();
  v14 = (float64x2_t *)operator new(8 * (int)v28);
  v29 = v14;
  v31 = (char *)&v14->f64[(int)v13];
  bzero(v14, 8 * (int)v13);
  v30 = (char *)&v14->f64[(int)v13];
  v32 = v13;
  v15 = (char *)v27[0];
  if (v13 < 8)
  {
    v16 = 0;
LABEL_25:
    v25 = v13 - v16;
    v26 = v16 << 32;
    do
    {
      *(double *)((char *)v14->f64 + (v26 >> 29)) = (double)*(int *)&v15[v26 >> 30];
      v26 += 0x100000000;
      --v25;
    }
    while (v25);
    goto LABEL_27;
  }
  v16 = v13 & 0xFFFFFFF8;
  v17 = v14 + 2;
  v18 = (char *)v27[0] + 16;
  v19 = v16;
  do
  {
    v20 = *((_OWORD *)v18 - 1);
    v21.i64[0] = (int)v20;
    v21.i64[1] = SDWORD1(v20);
    v22 = vcvtq_f64_s64(v21);
    v21.i64[0] = SDWORD2(v20);
    v21.i64[1] = SHIDWORD(v20);
    v23 = vcvtq_f64_s64(v21);
    v21.i64[0] = (int)*(_OWORD *)v18;
    v21.i64[1] = (int)HIDWORD(*(_QWORD *)v18);
    v24 = vcvtq_f64_s64(v21);
    v21.i64[0] = (int)*((_QWORD *)v18 + 1);
    v21.i64[1] = (int)HIDWORD(*(_OWORD *)v18);
    v17[-2] = v22;
    v17[-1] = v23;
    *v17 = v24;
    v17[1] = vcvtq_f64_s64(v21);
    v17 += 4;
    v18 += 32;
    v19 -= 8;
  }
  while (v19);
  if (v16 != v13)
    goto LABEL_25;
LABEL_27:
  sub_19C1CEDDC(a2, (uint64_t)&v29, (uint64_t)&__p);
  if (&__p != (void **)a2)
    sub_19C11EAD0((_QWORD *)a2, (char *)__p, v34, (v34 - (_BYTE *)__p) >> 3);
  *(_DWORD *)(a2 + 24) = v36;
  if (__p)
  {
    v34 = (char *)__p;
    operator delete(__p);
  }
  if (v29)
  {
    v30 = (char *)v29;
    operator delete(v29);
  }
  if (v27[0])
  {
    v27[1] = v27[0];
    operator delete(v27[0]);
  }
}

void sub_19C1CC064(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  uint64_t v18;
  void *v20;
  void *v21;
  void *v22;

  if (__p)
  {
    operator delete(__p);
    v20 = a13;
    if (!a13)
    {
LABEL_3:
      v21 = a9;
      if (!a9)
      {
LABEL_8:
        v22 = *(void **)v18;
        if (*(_QWORD *)v18)
        {
          *(_QWORD *)(v18 + 8) = v22;
          operator delete(v22);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_7:
      operator delete(v21);
      goto LABEL_8;
    }
  }
  else
  {
    v20 = a13;
    if (!a13)
      goto LABEL_3;
  }
  operator delete(v20);
  v21 = a9;
  if (!a9)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C1CC104(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1CC134(int *a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t ***v5;
  uint64_t **v6;
  uint64_t **v7;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t **v13;
  uint64_t **v14;
  char **v15;
  char **v16;
  uint64_t **v17;
  unint64_t v18;
  int v19;
  char **v20;
  uint64_t **v21;
  uint64_t **v22;
  uint64_t **v23;
  char **v24;
  uint64_t **v25;
  char **v26;
  uint64_t **v27;
  unint64_t v28;
  char v29;

  v5 = (uint64_t ***)(a1 + 2);
  v6 = (uint64_t **)*((_QWORD *)a1 + 2);
  if ((unint64_t)v6 >= *((_QWORD *)a1 + 3))
  {
    v8 = sub_19C1CEFB8(v5, a2, a3);
  }
  else
  {
    v7 = sub_19C1C1840(v6, a2);
    v7[12] = *a3;
    v8 = v7 + 13;
  }
  *((_QWORD *)a1 + 2) = v8;
  sub_19C1CC86C(*((char ***)a1 + 1), (uint64_t)v8, (uint64_t)&v26, 0x4EC4EC4EC4EC4EC5 * (((uint64_t)v8 - *((_QWORD *)a1 + 1)) >> 3));
  v10 = (uint64_t *)*((_QWORD *)a1 + 1);
  v9 = (uint64_t *)*((_QWORD *)a1 + 2);
  LODWORD(v11) = *a1;
  v12 = *a1;
  if (0x4EC4EC4EC4EC4EC5 * (v9 - v10) > v12)
  {
    v26 = 0;
    v27 = 0;
    v28 = 0;
    if (v10 == v9)
    {
      v16 = 0;
      v17 = 0;
    }
    else
    {
      do
      {
        if ((unint64_t)v27 >= v28)
        {
          v14 = sub_19C1C907C((uint64_t ***)&v26, v10);
        }
        else
        {
          v13 = sub_19C1C1840(v27, v10);
          v13[12] = (uint64_t *)v10[12];
          v14 = v13 + 13;
        }
        v27 = v14;
        sub_19C1CF138(v26, (uint64_t)v14, (uint64_t)&v29, 0x4EC4EC4EC4EC4EC5 * (((char *)v14 - (char *)v26) >> 3));
        sub_19C1CC660(*((char ***)a1 + 1), *((_QWORD *)a1 + 2), (uint64_t)&v29, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*((_QWORD *)a1 + 2) - *((_QWORD *)a1 + 1)) >> 3));
        v15 = sub_19C17B808((char **)(*((_QWORD *)a1 + 2) - 104));
        *((_QWORD *)a1 + 2) = v15;
        v10 = (uint64_t *)*((_QWORD *)a1 + 1);
      }
      while (v10 != (uint64_t *)v15);
      v16 = v26;
      v17 = v27;
      LODWORD(v11) = *a1;
      v12 = *a1;
    }
    v18 = 0x4EC4EC4EC4EC4EC5 * (((char *)v17 - (char *)v16) >> 3);
    if (v18 > v12)
    {
      do
      {
        sub_19C1CF288(v16, (uint64_t)v17, (uint64_t)&v29, v18);
        v17 = v27 - 13;
        sub_19C17B808((char **)v27 - 13);
        v27 = v17;
        v16 = v26;
        v18 = 0x4EC4EC4EC4EC4EC5 * (((char *)v17 - (char *)v26) >> 3);
        v11 = *a1;
      }
      while (v18 > v11);
    }
    if ((int)v11 >= 1)
    {
      v19 = v11 & ~((int)v11 >> 31);
      do
      {
        v20 = v26;
        v21 = (uint64_t **)*((_QWORD *)a1 + 2);
        if ((unint64_t)v21 >= *((_QWORD *)a1 + 3))
        {
          v23 = sub_19C1C907C(v5, (uint64_t *)v26);
        }
        else
        {
          v22 = sub_19C1C1840(v21, (uint64_t *)v26);
          v22[12] = (uint64_t *)v20[12];
          v23 = v22 + 13;
        }
        *((_QWORD *)a1 + 2) = v23;
        sub_19C1CC86C(*((char ***)a1 + 1), (uint64_t)v23, (uint64_t)&v29, 0x4EC4EC4EC4EC4EC5 * (((uint64_t)v23 - *((_QWORD *)a1 + 1)) >> 3));
        sub_19C1CF288(v26, (uint64_t)v27, (uint64_t)&v29, 0x4EC4EC4EC4EC4EC5 * (((char *)v27 - (char *)v26) >> 3));
        v27 = (uint64_t **)sub_19C17B808((char **)v27 - 13);
        --v19;
      }
      while (v19);
      v16 = v26;
    }
    if (v16)
    {
      v24 = (char **)v27;
      v25 = (uint64_t **)v16;
      if (v27 != (uint64_t **)v16)
      {
        do
          v24 = sub_19C17B808(v24 - 13);
        while (v24 != v16);
        v25 = (uint64_t **)v26;
      }
      v27 = (uint64_t **)v16;
      operator delete(v25);
    }
  }
}

void sub_19C1CC3D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_19C1C8154((void **)va);
  _Unwind_Resume(a1);
}

void sub_19C1CC3EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_19C1C8154((void **)va);
  _Unwind_Resume(a1);
}

void sub_19C1CC400(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_19C1C8154((void **)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_19C1CC414(uint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  char **v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t **result;
  uint64_t **v17;
  uint64_t *v18;
  uint64_t **v19;

  v6 = a2;
  v8 = a1[2];
  v9 = *a1;
  if (0x4EC4EC4EC4EC4EC5 * ((v8 - *a1) >> 3) < a4)
  {
    if (v9)
    {
      v10 = (char **)a1[1];
      v11 = (void *)v9;
      if (v10 != (char **)v9)
      {
        do
          v10 = sub_19C17B808(v10 - 13);
        while (v10 != (char **)v9);
        v11 = (void *)*a1;
      }
      a1[1] = v9;
      operator delete(v11);
      v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 > 0x276276276276276)
      goto LABEL_31;
    v12 = 0x4EC4EC4EC4EC4EC5 * (v8 >> 3);
    v13 = 2 * v12;
    if (2 * v12 <= a4)
      v13 = a4;
    v14 = v12 >= 0x13B13B13B13B13BLL ? 0x276276276276276 : v13;
    if (v14 > 0x276276276276276)
LABEL_31:
      sub_19C07DA0C();
    v15 = 13 * v14;
    result = (uint64_t **)operator new(104 * v14);
    *a1 = (uint64_t)result;
    a1[1] = (uint64_t)result;
    for (a1[2] = (uint64_t)&result[v15]; v6 != a3; result = v17 + 13)
    {
      v17 = sub_19C1C1840(result, v6);
      v17[12] = (uint64_t *)v6[12];
      v6 += 13;
    }
LABEL_16:
    a1[1] = (uint64_t)result;
    return result;
  }
  result = (uint64_t **)a1[1];
  if (0x4EC4EC4EC4EC4EC5 * (((uint64_t)result - v9) >> 3) < a4)
  {
    v18 = &a2[((uint64_t)result - v9) >> 3];
    if (result != (uint64_t **)v9)
    {
      do
      {
        sub_19C1C9C8C(v9, (uint64_t)v6);
        *(_QWORD *)(v9 + 96) = v6[12];
        v6 += 13;
        v9 += 104;
      }
      while (v6 != v18);
      v9 = a1[1];
    }
    result = (uint64_t **)v9;
    if (v18 != a3)
    {
      result = (uint64_t **)v9;
      do
      {
        v19 = sub_19C1C1840(result, v18);
        v19[12] = (uint64_t *)v18[12];
        v18 += 13;
        result = v19 + 13;
      }
      while (v18 != a3);
    }
    goto LABEL_16;
  }
  if (a2 != a3)
  {
    do
    {
      sub_19C1C9C8C(v9, (uint64_t)v6);
      *(_QWORD *)(v9 + 96) = v6[12];
      v9 += 104;
      v6 += 13;
    }
    while (v6 != a3);
    result = (uint64_t **)a1[1];
  }
  while (result != (uint64_t **)v9)
    result = (uint64_t **)sub_19C17B808((char **)result - 13);
  a1[1] = v9;
  return result;
}

char **sub_19C1CC660(char **result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char **v8;
  char **v9;
  uint64_t *v10[12];
  char *v11;

  if (a4 >= 2)
  {
    v7 = (uint64_t)result;
    sub_19C1C5D14(v10, (uint64_t)result);
    v11 = *(char **)(v7 + 96);
    v8 = (char **)sub_19C1CC768(v7, a3, a4);
    v9 = v8;
    if ((char **)(a2 - 104) == v8)
    {
      sub_19C17A814(v8, (uint64_t)v10);
      v9[12] = v11;
    }
    else
    {
      sub_19C17A814(v8, a2 - 104);
      v9[12] = *(char **)(a2 - 8);
      sub_19C17A814((char **)(a2 - 104), (uint64_t)v10);
      *(_QWORD *)(a2 - 8) = v11;
      sub_19C1CC86C((char **)v7, (uint64_t)(v9 + 13), a3, 0x4EC4EC4EC4EC4EC5 * (((uint64_t)v9 - v7 + 104) >> 3));
    }
    return sub_19C17B808((char **)v10);
  }
  return result;
}

void sub_19C1CC754(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_19C17B808((char **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1CC768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t *v15[12];
  double v16;
  uint64_t *v17[12];
  double v18;

  v5 = 0;
  v6 = a3 - 2;
  if (a3 < 2)
    v6 = a3 - 1;
  v7 = v6 >> 1;
  do
  {
    v8 = (uint64_t *)(a1 + 104 * v5);
    v9 = (uint64_t)(v8 + 13);
    v10 = (2 * v5) | 1;
    v11 = 2 * v5 + 2;
    if (v11 < a3)
    {
      sub_19C1C1840(v17, v8 + 13);
      v18 = *((double *)v8 + 25);
      sub_19C1C1840(v15, v8 + 26);
      v16 = *((double *)v8 + 38);
      v12 = v16;
      v13 = v18;
      sub_19C17B808((char **)v15);
      sub_19C17B808((char **)v17);
      if (v13 < v12)
      {
        v9 = (uint64_t)(v8 + 26);
        v10 = v11;
      }
    }
    sub_19C17A814((char **)a1, v9);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(v9 + 96);
    a1 = v9;
    v5 = v10;
  }
  while (v10 <= v7);
  return v9;
}

char **sub_19C1CC86C(char **result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char **v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  double v13;
  double v14;
  uint64_t *v15;
  double v16;
  double v17;
  uint64_t *v18[13];
  uint64_t *v19[12];
  double v20;
  uint64_t *v21[12];
  uint64_t *v22;
  uint64_t *v23[12];
  double v24;
  uint64_t *v25[12];
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a4 >= 2)
  {
    v27 = v7;
    v28 = v6;
    v29 = v4;
    v30 = v5;
    v9 = result;
    v10 = (unint64_t)(a4 - 2) >> 1;
    v11 = (uint64_t *)&result[13 * v10];
    sub_19C1C1840(v25, v11);
    v26 = *((double *)v11 + 12);
    v12 = (uint64_t *)(a2 - 104);
    sub_19C1C1840(v23, (uint64_t *)(a2 - 104));
    v24 = *(double *)(a2 - 8);
    v13 = v24;
    v14 = v26;
    sub_19C17B808((char **)v23);
    result = sub_19C17B808((char **)v25);
    if (v14 < v13)
    {
      sub_19C1C5D14(v21, a2 - 104);
      v22 = *(uint64_t **)(a2 - 8);
      do
      {
        v15 = v11;
        sub_19C17A814((char **)v12, (uint64_t)v11);
        v12[12] = v11[12];
        if (!v10)
          break;
        v10 = (v10 - 1) >> 1;
        v11 = (uint64_t *)&v9[13 * v10];
        sub_19C1C1840(v19, v11);
        v20 = *(double *)&v9[13 * v10 + 12];
        sub_19C1C1840(v18, (uint64_t *)v21);
        v16 = *(double *)&v22;
        v18[12] = v22;
        v17 = v20;
        sub_19C17B808((char **)v18);
        sub_19C17B808((char **)v19);
        v12 = v15;
      }
      while (v17 < v16);
      sub_19C17A814((char **)v15, (uint64_t)v21);
      v15[12] = (uint64_t)v22;
      return sub_19C17B808((char **)v21);
    }
  }
  return result;
}

uint64_t sub_19C1CC9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t **v6;
  uint64_t **v7;
  uint64_t *v9[13];
  uint64_t *v10[12];

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      sub_19C1C1840(v9, (uint64_t *)v5);
      v9[12] = *(uint64_t **)(v5 + 96);
      sub_19C1C1840(v10, (uint64_t *)v9);
      v7 = *(uint64_t ***)(a3 + 8);
      if ((unint64_t)v7 < *(_QWORD *)(a3 + 16))
        v6 = sub_19C1C5D14(v7, (uint64_t)v10) + 12;
      else
        v6 = sub_19C1C5BD4((uint64_t ***)a3, (uint64_t)v10);
      *(_QWORD *)(a3 + 8) = v6;
      sub_19C17B808((char **)v10);
      sub_19C17B808((char **)v9);
      v5 += 104;
    }
    while (v5 != a2);
  }
  return a3;
}

void sub_19C1CCA68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  char *v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, char *);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  sub_19C17B808((char **)va1);
  sub_19C17B808((char **)va);
  _Unwind_Resume(a1);
}

uint64_t ***sub_19C1CCA84(uint64_t ***a1, uint64_t **a2)
{
  uint64_t *v3;
  uint64_t *v4;
  int64_t v5;
  unint64_t v6;
  uint64_t **v7;
  uint64_t **v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v3 = *a2;
  v4 = a2[1];
  v5 = (char *)v4 - (char *)*a2;
  if (v4 != *a2)
  {
    v6 = 0x4EC4EC4EC4EC4EC5 * (v5 >> 3);
    if (v6 >= 0x276276276276277)
      sub_19C07DA0C();
    v7 = (uint64_t **)operator new(v5);
    *a1 = v7;
    a1[1] = v7;
    a1[2] = &v7[13 * v6];
    do
    {
      v8 = sub_19C1C1840(v7, v3);
      v8[12] = (uint64_t *)v3[12];
      v3 += 13;
      v7 = v8 + 13;
    }
    while (v3 != v4);
    a1[1] = v7;
  }
  return a1;
}

void sub_19C1CCB34(_Unwind_Exception *exception_object)
{
  _QWORD *v1;

  if (*v1)
    sub_19C256414((uint64_t)(v1 + 1));
  _Unwind_Resume(exception_object);
}

void sub_19C1CCB54(uint64_t **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  char **v5;
  uint64_t **v6;
  uint64_t **v7;
  uint64_t **v8;
  uint64_t *v9[12];
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_19C1CCA84(&v7, a1);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v3 = (uint64_t *)v7;
  v4 = (uint64_t *)v8;
  v12 = a2;
  if (v7 != v8)
  {
    do
    {
      sub_19C1C1840(v9, v3);
      v10 = v3[12];
      v11 = v10;
      sub_19C1CCDFC((uint64_t *)&v12, &v11);
      sub_19C17B808((char **)v9);
      v3 += 13;
    }
    while (v3 != v4);
    v3 = (uint64_t *)v7;
  }
  if (v3)
  {
    v5 = (char **)v8;
    v6 = (uint64_t **)v3;
    if (v8 != (uint64_t **)v3)
    {
      do
        v5 = sub_19C17B808(v5 - 13);
      while (v5 != (char **)v3);
      v6 = v7;
    }
    v8 = (uint64_t **)v3;
    operator delete(v6);
  }
}

void sub_19C1CCC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, char *a12)
{
  uint64_t v12;
  void *v14;

  sub_19C17B808(&a12);
  v14 = *(void **)v12;
  if (*(_QWORD *)v12)
  {
    *(_QWORD *)(v12 + 8) = v14;
    operator delete(v14);
  }
  sub_19C1C8154(&a9);
  _Unwind_Resume(a1);
}

char *sub_19C1CCC40(int *a1, int *a2)
{
  char *v4;
  uint64_t **v5;
  int v6;
  int *v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  uint64_t *v11;
  int v12;
  uint64_t *v13;
  uint64_t **v14;
  int v15;
  uint64_t **v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  char *v20;
  int v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;

  v5 = (uint64_t **)(a1 + 4);
  v4 = (char *)*((_QWORD *)a1 + 2);
  v6 = *a2;
  if (!v4)
  {
    v12 = *a1;
    v16 = (uint64_t **)(a1 + 4);
    v14 = (uint64_t **)(a1 + 4);
    goto LABEL_19;
  }
  v7 = a1 + 4;
  v8 = *((_QWORD *)a1 + 2);
  do
  {
    v9 = *(_DWORD *)(v8 + 28);
    v10 = v9 < v6;
    if (v9 >= v6)
      v11 = (uint64_t *)v8;
    else
      v11 = (uint64_t *)(v8 + 8);
    if (!v10)
      v7 = (int *)v8;
    v8 = *v11;
  }
  while (*v11);
  if (v7 == (int *)v5 || v6 < v7[7])
  {
    v12 = *a1;
    v13 = (uint64_t *)*((_QWORD *)a1 + 2);
    do
    {
      while (1)
      {
        v14 = (uint64_t **)v13;
        v15 = *((_DWORD *)v13 + 7);
        if (v6 < v15)
          break;
        if (v15 >= v6)
          goto LABEL_22;
        v13 = v14[1];
        if (!v13)
        {
          v16 = v14 + 1;
          goto LABEL_19;
        }
      }
      v13 = *v14;
    }
    while (*v14);
    v16 = v14;
LABEL_19:
    v17 = (uint64_t *)v14;
    v14 = (uint64_t **)operator new(0x28uLL);
    *((_DWORD *)v14 + 7) = v6;
    *((_DWORD *)v14 + 8) = 0;
    *v14 = 0;
    v14[1] = 0;
    v14[2] = v17;
    *v16 = (uint64_t *)v14;
    v18 = **((_QWORD **)a1 + 1);
    v19 = (uint64_t *)v14;
    if (v18)
    {
      *((_QWORD *)a1 + 1) = v18;
      v19 = *v16;
    }
    sub_19C07CC40(*((uint64_t **)a1 + 2), v19);
    v4 = (char *)*((_QWORD *)a1 + 2);
    ++*((_QWORD *)a1 + 3);
LABEL_22:
    *((_DWORD *)v14 + 8) = v12;
    v6 = *a2;
    v20 = (char *)v5;
    if (v4)
      goto LABEL_25;
LABEL_29:
    v22 = v20;
    v20 = (char *)operator new(0x28uLL);
    *((_DWORD *)v20 + 7) = v6;
    *((_DWORD *)v20 + 8) = 0;
    *(_QWORD *)v20 = 0;
    *((_QWORD *)v20 + 1) = 0;
    *((_QWORD *)v20 + 2) = v22;
    *v5 = (uint64_t *)v20;
    v23 = **((_QWORD **)a1 + 1);
    v24 = (uint64_t *)v20;
    if (v23)
    {
      *((_QWORD *)a1 + 1) = v23;
      v24 = *v5;
    }
    sub_19C07CC40(*((uint64_t **)a1 + 2), v24);
    ++*((_QWORD *)a1 + 3);
    return v20 + 32;
  }
  while (1)
  {
LABEL_25:
    while (1)
    {
      v20 = v4;
      v21 = *((_DWORD *)v4 + 7);
      if (v6 >= v21)
        break;
      v4 = *(char **)v20;
      v5 = (uint64_t **)v20;
      if (!*(_QWORD *)v20)
        goto LABEL_29;
    }
    if (v21 >= v6)
      return v20 + 32;
    v4 = (char *)*((_QWORD *)v20 + 1);
    if (!v4)
    {
      v5 = (uint64_t **)(v20 + 8);
      goto LABEL_29;
    }
  }
}

uint64_t *sub_19C1CCDFC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v4 = *a1;
  v6 = *(char **)(*a1 + 8);
  v5 = *(_QWORD *)(*a1 + 16);
  v7 = v6;
  if ((unint64_t)v6 >= v5)
  {
    v9 = *(char **)v4;
    v10 = (uint64_t)&v6[-*(_QWORD *)v4];
    v11 = v10 >> 3;
    v12 = (v10 >> 3) + 1;
    if (v12 >> 61)
      sub_19C07DA0C();
    v13 = v5 - (_QWORD)v9;
    if (v13 >> 2 > v12)
      v12 = v13 >> 2;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      v14 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
    {
      if (v14 >> 61)
        sub_19C07C7FC();
      v15 = operator new(8 * v14);
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[8 * v11];
    *v16 = *a2;
    v8 = v16 + 1;
    if (v6 != v9)
    {
      v17 = v6 - v9 - 8;
      if (v17 < 0x58)
        goto LABEL_27;
      if ((unint64_t)(v6 - v15 - v10) < 0x20)
        goto LABEL_27;
      v18 = (v17 >> 3) + 1;
      v19 = 8 * (v18 & 0x3FFFFFFFFFFFFFFCLL);
      v7 = &v6[-v19];
      v16 = (_QWORD *)((char *)v16 - v19);
      v20 = &v15[8 * v11 - 16];
      v21 = v6 - 16;
      v22 = v18 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v23 = *(_OWORD *)v21;
        *(v20 - 1) = *((_OWORD *)v21 - 1);
        *v20 = v23;
        v20 -= 2;
        v21 -= 32;
        v22 -= 4;
      }
      while (v22);
      if (v18 != (v18 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_27:
        do
        {
          v24 = *((_QWORD *)v7 - 1);
          v7 -= 8;
          *--v16 = v24;
        }
        while (v7 != v9);
      }
    }
    *(_QWORD *)v4 = v16;
    *(_QWORD *)(v4 + 8) = v8;
    *(_QWORD *)(v4 + 16) = &v15[8 * v14];
    if (v9)
      operator delete(v9);
  }
  else
  {
    *(_QWORD *)v6 = *a2;
    v8 = v6 + 8;
  }
  *(_QWORD *)(v4 + 8) = v8;
  return a1;
}

unint64_t sub_19C1CCF6C(uint64_t a1, uint64_t a2, double **a3)
{
  double *v3;
  double *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  double v14;
  unsigned int v15;
  double v16;
  unint64_t v17;
  unint64_t v18;
  double *v19;
  double *v20;
  double v21;

  v3 = *a3;
  v4 = a3[1];
  v5 = *(_QWORD *)(a2 + 2496);
  v6 = (v5 + 1) % 0x270uLL;
  v7 = 4 * v5;
  v8 = *(_DWORD *)(a2 + 4 * ((v5 + 397) % 0x270uLL)) ^ ((*(_DWORD *)(a2 + 4 * v6) & 0x7FFFFFFE | *(_DWORD *)(a2 + 4 * v5) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a2 + 4 * v6) << 31) >> 31) & 0x9908B0DF;
  *(_DWORD *)(a2 + v7) = v8;
  if (v6 == 623)
    v9 = 0;
  else
    v9 = v6 + 1;
  v10 = 397;
  if (v6 >= 0xE3)
    v10 = -227;
  v11 = *(_DWORD *)(a2 + 4 * (v10 + v6)) ^ ((*(_DWORD *)(a2 + 4 * v9) & 0x7FFFFFFE | *(_DWORD *)(a2 + 4 * v6) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a2 + 4 * v9) << 31) >> 31) & 0x9908B0DF;
  *(_DWORD *)(a2 + 4 * v6) = v11;
  *(_QWORD *)(a2 + 2496) = v9;
  v12 = (char *)v4 - (char *)v3;
  if (v4 != v3)
  {
    v13 = ((v8 ^ (v8 >> 11)) << 7) & 0x9D2C5680 ^ v8 ^ (v8 >> 11);
    v14 = (double)((v13 << 15) & 0xEFC60000 ^ v13 ^ (((v13 << 15) & 0xEFC60000 ^ v13) >> 18));
    v15 = ((v11 ^ (v11 >> 11)) << 7) & 0x9D2C5680 ^ v11 ^ (v11 >> 11);
    v16 = (v14 + (double)((v15 << 15) & 0xEFC60000 ^ v15 ^ (((v15 << 15) & 0xEFC60000 ^ v15) >> 18)) * 4294967300.0)
        * 5.42101086e-20;
    v17 = v12 >> 3;
    v4 = v3;
    do
    {
      v18 = v17 >> 1;
      v19 = &v4[v17 >> 1];
      v21 = *v19;
      v20 = v19 + 1;
      v17 += ~(v17 >> 1);
      if (v16 < v21)
        v17 = v18;
      else
        v4 = v20;
    }
    while (v17);
  }
  return (unint64_t)((char *)v4 - (char *)v3) >> 3;
}

double sub_19C1CD0D8@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = (uint64_t *)(a1 + 16);
  if (sub_19C178A44((uint64_t *)(a1 + 16)))
  {
    sub_19C178B08(v5, (uint64_t *)v7);
    sub_19C239578(a2, (uint64_t)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1CD170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C1CD184(__int128 **a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  size_t v6;
  char *v7;
  __int128 *v8;
  __int128 *v9;
  unint64_t v10;
  __int128 v11;
  _BYTE *v12;
  _BYTE *v13;
  int64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  char *v23;
  void *__p[2];
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  char *v28;
  int v29;

  v4 = sub_19C1CDC9C(*a1, a1[1], 0, (uint64_t)__p);
  v5 = v4;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  __p[0] = 0;
  __p[1] = 0;
  v25 = 0;
  if (!v4)
  {
    v7 = 0;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_DWORD *)(a2 + 24) = 0;
    v8 = *a1;
    v9 = a1[1];
    if (*a1 == v9)
      return;
    goto LABEL_6;
  }
  if (v4 < 0)
    sub_19C07DA0C();
  v6 = 8 * v4;
  v7 = (char *)operator new(v6);
  bzero(v7, 8 * v5);
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = &v7[v6];
  *(_QWORD *)(a2 + 16) = &v7[8 * v5];
  *(_DWORD *)(a2 + 24) = v5;
  v8 = *a1;
  v9 = a1[1];
  if (*a1 != v9)
  {
LABEL_6:
    v10 = 0;
    do
    {
      if (*((char *)v8 + 23) < 0)
      {
        sub_19C07C6E8(__p, *(void **)v8, *((_QWORD *)v8 + 1));
      }
      else
      {
        v11 = *v8;
        v25 = *((_QWORD *)v8 + 2);
        *(_OWORD *)__p = v11;
      }
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v13 = (_BYTE *)*((_QWORD *)v8 + 3);
      v12 = (_BYTE *)*((_QWORD *)v8 + 4);
      v14 = v12 - v13;
      if (v12 == v13)
      {
        v29 = *((_DWORD *)v8 + 12);
        v16 = v29;
        v17 = v10 + v29;
        if (v10 >= v17)
        {
          v10 += v29;
          if (SHIBYTE(v25) < 0)
            goto LABEL_25;
          goto LABEL_7;
        }
        v15 = 0;
        if ((unint64_t)v29 < 4)
        {
LABEL_15:
          v18 = 0;
          v19 = v10;
          do
          {
LABEL_23:
            *(_QWORD *)&v7[8 * v19] = v15[v18];
            v19 = ++v18 + v10;
          }
          while (v16 != v18);
          goto LABEL_24;
        }
      }
      else
      {
        if (v14 < 0)
          sub_19C07DA0C();
        v15 = operator new(v12 - v13);
        v26 = v15;
        v27 = v15;
        v28 = (char *)&v15[v14 >> 3];
        memcpy(v15, v13, v14);
        v29 = *((_DWORD *)v8 + 12);
        v16 = v29;
        v17 = v10 + v29;
        if (v10 >= v17)
          goto LABEL_24;
        if ((unint64_t)v29 < 4)
          goto LABEL_15;
      }
      v20 = 0;
      v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      v19 = v10 + (v16 & 0xFFFFFFFFFFFFFFFCLL);
      v21 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v22 = *(_OWORD *)&v15[v20 + 2];
        v23 = &v7[8 * v10 + v20 * 8];
        *(_OWORD *)v23 = *(_OWORD *)&v15[v20];
        *((_OWORD *)v23 + 1) = v22;
        v20 += 4;
        v21 -= 4;
      }
      while (v21);
      if (v16 != v18)
        goto LABEL_23;
LABEL_24:
      v27 = v15;
      operator delete(v15);
      v10 = v17;
      if (SHIBYTE(v25) < 0)
LABEL_25:
        operator delete(__p[0]);
LABEL_7:
      v8 = (__int128 *)((char *)v8 + 56);
    }
    while (v8 != v9);
  }
}

void sub_19C1CD3D4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1CD3F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  void *v17;

  if (!v17)
    _Unwind_Resume(exception_object);
  *(_QWORD *)(v16 + 8) = v17;
  operator delete(v17);
  _Unwind_Resume(exception_object);
}

double sub_19C1CD45C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = a1 + 16;
  if (sub_19C179558(a1 + 16))
  {
    sub_19C17961C(v5, (uint64_t *)v7);
    sub_19C23A200(a2, (uint64_t *)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1CD4F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C1CD508(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  size_t v6;
  char *v7;
  __int128 *v8;
  __int128 *v9;
  unint64_t v10;
  __int128 v11;
  _BYTE *v12;
  _BYTE *v13;
  int64_t v14;
  _DWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  char *v23;
  void *__p[2];
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  char *v28;
  int v29;

  v4 = sub_19C1CDF44(*(__int128 **)(a1 + 24), *(__int128 **)(a1 + 32), 0, (uint64_t)__p);
  v5 = v4;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  __p[0] = 0;
  __p[1] = 0;
  v25 = 0;
  if (!v4)
  {
    v7 = 0;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_DWORD *)(a2 + 24) = 0;
    v8 = *(__int128 **)(a1 + 24);
    v9 = *(__int128 **)(a1 + 32);
    if (v8 == v9)
      return;
    goto LABEL_6;
  }
  if (v4 < 0)
    sub_19C07DA0C();
  v6 = 4 * v4;
  v7 = (char *)operator new(v6);
  bzero(v7, 4 * v5);
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = &v7[v6];
  *(_QWORD *)(a2 + 16) = &v7[4 * v5];
  *(_DWORD *)(a2 + 24) = v5;
  v8 = *(__int128 **)(a1 + 24);
  v9 = *(__int128 **)(a1 + 32);
  if (v8 != v9)
  {
LABEL_6:
    v10 = 0;
    do
    {
      if (*((char *)v8 + 23) < 0)
      {
        sub_19C07C6E8(__p, *(void **)v8, *((_QWORD *)v8 + 1));
      }
      else
      {
        v11 = *v8;
        v25 = *((_QWORD *)v8 + 2);
        *(_OWORD *)__p = v11;
      }
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v13 = (_BYTE *)*((_QWORD *)v8 + 3);
      v12 = (_BYTE *)*((_QWORD *)v8 + 4);
      v14 = v12 - v13;
      if (v12 == v13)
      {
        v29 = *((_DWORD *)v8 + 12);
        v16 = v29;
        v17 = v10 + v29;
        if (v10 >= v17)
        {
          v10 += v29;
          if (SHIBYTE(v25) < 0)
            goto LABEL_25;
          goto LABEL_7;
        }
        v15 = 0;
        if ((unint64_t)v29 < 8)
        {
LABEL_15:
          v18 = 0;
          v19 = v10;
          do
          {
LABEL_23:
            *(_DWORD *)&v7[4 * v19] = v15[v18];
            v19 = ++v18 + v10;
          }
          while (v16 != v18);
          goto LABEL_24;
        }
      }
      else
      {
        if (v14 < 0)
          sub_19C07DA0C();
        v15 = operator new(v12 - v13);
        v26 = v15;
        v27 = v15;
        v28 = (char *)&v15[v14 >> 2];
        memcpy(v15, v13, v14);
        v29 = *((_DWORD *)v8 + 12);
        v16 = v29;
        v17 = v10 + v29;
        if (v10 >= v17)
          goto LABEL_24;
        if ((unint64_t)v29 < 8)
          goto LABEL_15;
      }
      v20 = 0;
      v18 = v16 & 0xFFFFFFFFFFFFFFF8;
      v19 = v10 + (v16 & 0xFFFFFFFFFFFFFFF8);
      v21 = v16 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        v22 = *(_OWORD *)&v15[v20 + 4];
        v23 = &v7[4 * v10 + v20 * 4];
        *(_OWORD *)v23 = *(_OWORD *)&v15[v20];
        *((_OWORD *)v23 + 1) = v22;
        v20 += 8;
        v21 -= 8;
      }
      while (v21);
      if (v16 != v18)
        goto LABEL_23;
LABEL_24:
      v27 = v15;
      operator delete(v15);
      v10 = v17;
      if (SHIBYTE(v25) < 0)
LABEL_25:
        operator delete(__p[0]);
LABEL_7:
      v8 = (__int128 *)((char *)v8 + 56);
    }
    while (v8 != v9);
  }
}

void sub_19C1CD758(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1CD774(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  void *v17;

  if (!v17)
    _Unwind_Resume(exception_object);
  *(_QWORD *)(v16 + 8) = v17;
  operator delete(v17);
  _Unwind_Resume(exception_object);
}

void sub_19C1CD7E0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  signed int v6;
  _OWORD *v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _OWORD *v15;
  __int128 *v16;
  unint64_t v17;
  __int128 v18;

  v2 = *a1;
  v3 = a1[1];
  if (*a1 != v3)
  {
    v5 = 0;
    while (1)
    {
      v6 = *(_DWORD *)(v2 + 48);
      if (v6)
      {
        if (v6 < 0)
          sub_19C07DA0C();
        v7 = operator new(8 * v6);
        bzero(v7, 8 * v6);
        v8 = (char *)v7 + 8 * v6;
        v9 = v5 + v6;
        if (v5 >= v9)
          goto LABEL_14;
        v10 = *a2;
        if (v6 >= 6 && (unint64_t)v7 - v10 + -8 * v5 >= 0x20)
        {
          v11 = v6 & 0xFFFFFFFFFFFFFFFCLL;
          v12 = v5 + v11;
          v15 = v7 + 1;
          v16 = (__int128 *)(v10 + 8 * v5 + 16);
          v17 = v11;
          do
          {
            v18 = *v16;
            *(v15 - 1) = *(v16 - 1);
            *v15 = v18;
            v15 += 2;
            v16 += 2;
            v17 -= 4;
          }
          while (v17);
          if (v11 == v6)
            goto LABEL_14;
        }
        else
        {
          v11 = 0;
          v12 = v5;
        }
        v13 = (_QWORD *)v7 + v11;
        v14 = v6 - v11;
        do
        {
          ++v11;
          *v13++ = *(_QWORD *)(v10 + 8 * v12);
          v12 = v11 + v5;
          --v14;
        }
        while (v14);
      }
      else
      {
        v8 = 0;
        v7 = 0;
        v9 = v5;
      }
LABEL_14:
      sub_19C11EAD0((_QWORD *)(v2 + 24), (char *)v7, v8, (v8 - (char *)v7) >> 3);
      *(_DWORD *)(v2 + 48) = v6;
      if (v7)
      {
        operator delete(v7);
        v5 += *(int *)(v2 + 48);
        v2 += 56;
        if (v2 == v3)
          return;
      }
      else
      {
        v5 = v9;
        v2 += 56;
        if (v2 == v3)
          return;
      }
    }
  }
}

void sub_19C1CD968(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1CD984(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_19C1CD99C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  signed int v6;
  _OWORD *v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _DWORD *v13;
  unint64_t v14;
  _OWORD *v15;
  __int128 *v16;
  unint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  if (v2 != v3)
  {
    v5 = 0;
    while (1)
    {
      v6 = *(_DWORD *)(v2 + 48);
      if (v6)
      {
        if (v6 < 0)
          sub_19C07DA0C();
        v7 = operator new(4 * v6);
        bzero(v7, 4 * v6);
        v8 = (char *)v7 + 4 * v6;
        v9 = v5 + v6;
        if (v5 >= v9)
          goto LABEL_14;
        v10 = *a2;
        if (v6 >= 8 && (unint64_t)v7 - v10 + -4 * v5 >= 0x20)
        {
          v11 = v6 & 0xFFFFFFFFFFFFFFF8;
          v12 = v5 + v11;
          v15 = v7 + 1;
          v16 = (__int128 *)(v10 + 4 * v5 + 16);
          v17 = v11;
          do
          {
            v18 = *v16;
            *(v15 - 1) = *(v16 - 1);
            *v15 = v18;
            v15 += 2;
            v16 += 2;
            v17 -= 8;
          }
          while (v17);
          if (v11 == v6)
            goto LABEL_14;
        }
        else
        {
          v11 = 0;
          v12 = v5;
        }
        v13 = (_DWORD *)v7 + v11;
        v14 = v6 - v11;
        do
        {
          ++v11;
          *v13++ = *(_DWORD *)(v10 + 4 * v12);
          v12 = v11 + v5;
          --v14;
        }
        while (v14);
      }
      else
      {
        v8 = 0;
        v7 = 0;
        v9 = v5;
      }
LABEL_14:
      sub_19C1CDB58((_QWORD *)(v2 + 24), (char *)v7, v8, (v8 - (char *)v7) >> 2);
      *(_DWORD *)(v2 + 48) = v6;
      if (v7)
      {
        operator delete(v7);
        v5 += *(int *)(v2 + 48);
        v2 += 56;
        if (v2 == v3)
          return;
      }
      else
      {
        v5 = v9;
        v2 += 56;
        if (v2 == v3)
          return;
      }
    }
  }
}

void sub_19C1CDB24(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1CDB40(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_19C1CDB58(_QWORD *result, char *__src, char *a3, size_t __sz)
{
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  size_t v14;
  void **v15;
  _BYTE *v16;
  unint64_t v17;
  char *v18;
  void *v19;

  v6 = __src;
  v7 = result;
  v8 = result[2];
  v9 = (char *)*result;
  if (__sz > (v8 - *result) >> 2)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (__sz >> 62)
      goto LABEL_22;
    v10 = v8 >> 1;
    if (v8 >> 1 <= __sz)
      v10 = __sz;
    v11 = (unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL;
    v12 = 0x3FFFFFFFFFFFFFFFLL;
    if (!v11)
      v12 = v10;
    if (v12 >> 62)
LABEL_22:
      sub_19C07DA0C();
    v13 = 4 * v12;
    result = operator new(4 * v12);
    v9 = (char *)result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + v13;
    v14 = a3 - v6;
    if (v14)
      result = memcpy(result, v6, v14);
    v15 = (void **)(v7 + 1);
    goto LABEL_21;
  }
  v15 = (void **)(result + 1);
  v16 = (_BYTE *)result[1];
  v17 = (v16 - v9) >> 2;
  if (v17 >= __sz)
  {
    v14 = a3 - __src;
    if (a3 == __src)
      goto LABEL_21;
    v19 = (void *)*result;
LABEL_20:
    result = memmove(v19, __src, v14);
    goto LABEL_21;
  }
  v18 = &__src[4 * v17];
  if (v16 != v9)
  {
    result = memmove((void *)*result, __src, v16 - v9);
    v9 = (char *)*v15;
  }
  v14 = a3 - v18;
  if (v14)
  {
    v19 = v9;
    __src = v18;
    goto LABEL_20;
  }
LABEL_21:
  *v15 = &v9[v14];
  return result;
}

uint64_t sub_19C1CDC9C(__int128 *a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  __int128 *i;
  __int128 v7;
  _BYTE *v8;
  _BYTE *v9;
  int64_t v10;
  _BYTE *v11;
  char *v12;
  void *v14[2];
  uint64_t v15;
  void *__p;
  void *v17;
  char *v18;
  int v19;
  uint64_t v20;

  v20 = a4;
  if (a1 != a2)
  {
    for (i = a1; i != a2; i = (__int128 *)((char *)i + 56))
    {
      if (*((char *)i + 23) < 0)
      {
        sub_19C07C6E8(v14, *(void **)i, *((_QWORD *)i + 1));
        __p = 0;
        v17 = 0;
        v18 = 0;
        v9 = (_BYTE *)*((_QWORD *)i + 3);
        v11 = (_BYTE *)*((_QWORD *)i + 4);
        v10 = v11 - v9;
        if (v11 != v9)
        {
LABEL_8:
          if (v10 < 0)
            sub_19C07DA0C();
          __p = operator new(v10);
          v17 = __p;
          v12 = (char *)__p + 8 * (v10 >> 3);
          v18 = v12;
          memcpy(__p, v9, v10);
          v17 = v12;
        }
      }
      else
      {
        v7 = *i;
        v15 = *((_QWORD *)i + 2);
        *(_OWORD *)v14 = v7;
        __p = 0;
        v17 = 0;
        v18 = 0;
        v9 = (_BYTE *)*((_QWORD *)i + 3);
        v8 = (_BYTE *)*((_QWORD *)i + 4);
        v10 = v8 - v9;
        if (v8 != v9)
          goto LABEL_8;
      }
      v19 = *((_DWORD *)i + 12);
      a3 = sub_19C1CDE30((uint64_t)&v20, a3, (uint64_t)v14);
      if (__p)
      {
        v17 = __p;
        operator delete(__p);
      }
      if (SHIBYTE(v15) < 0)
        operator delete(v14[0]);
    }
  }
  return a3;
}

void sub_19C1CDDD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1CDE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C1C2C2C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1CDE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int v8;
  uint64_t v10;
  uint64_t v11;
  void *__p[2];
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  int v17;

  if (*(char *)(a3 + 23) < 0)
  {
    sub_19C07C6E8(__p, *(void **)a3, *(_QWORD *)(a3 + 8));
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v10 = *(_QWORD *)(a3 + 24);
    v11 = *(_QWORD *)(a3 + 32);
    v7 = v11 - v10;
    if (v11 != v10)
    {
LABEL_3:
      if (v7 < 0)
        sub_19C07DA0C();
      v14 = (char *)operator new(v7);
      v15 = v14;
      v16 = &v14[8 * (v7 >> 3)];
      v8 = *(_DWORD *)(a3 + 48);
      v17 = v8;
      operator delete(v14);
      if ((SHIBYTE(v13) & 0x80000000) == 0)
        return a2 + v8;
      goto LABEL_8;
    }
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a3;
    v13 = *(_QWORD *)(a3 + 16);
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(a3 + 32);
    v7 = v6 - v5;
    if (v6 != v5)
      goto LABEL_3;
  }
  v8 = *(_DWORD *)(a3 + 48);
  v17 = v8;
  if ((SHIBYTE(v13) & 0x80000000) == 0)
    return a2 + v8;
LABEL_8:
  operator delete(__p[0]);
  return a2 + v8;
}

void sub_19C1CDF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
  {
    a13 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_19C255FC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1CDF44(__int128 *a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  __int128 *i;
  __int128 v7;
  _BYTE *v8;
  _BYTE *v9;
  int64_t v10;
  _BYTE *v11;
  char *v12;
  void *v14[2];
  uint64_t v15;
  void *__p;
  void *v17;
  char *v18;
  int v19;
  uint64_t v20;

  v20 = a4;
  if (a1 != a2)
  {
    for (i = a1; i != a2; i = (__int128 *)((char *)i + 56))
    {
      if (*((char *)i + 23) < 0)
      {
        sub_19C07C6E8(v14, *(void **)i, *((_QWORD *)i + 1));
        __p = 0;
        v17 = 0;
        v18 = 0;
        v9 = (_BYTE *)*((_QWORD *)i + 3);
        v11 = (_BYTE *)*((_QWORD *)i + 4);
        v10 = v11 - v9;
        if (v11 != v9)
        {
LABEL_8:
          if (v10 < 0)
            sub_19C07DA0C();
          __p = operator new(v10);
          v17 = __p;
          v12 = (char *)__p + 4 * (v10 >> 2);
          v18 = v12;
          memcpy(__p, v9, v10);
          v17 = v12;
        }
      }
      else
      {
        v7 = *i;
        v15 = *((_QWORD *)i + 2);
        *(_OWORD *)v14 = v7;
        __p = 0;
        v17 = 0;
        v18 = 0;
        v9 = (_BYTE *)*((_QWORD *)i + 3);
        v8 = (_BYTE *)*((_QWORD *)i + 4);
        v10 = v8 - v9;
        if (v8 != v9)
          goto LABEL_8;
      }
      v19 = *((_DWORD *)i + 12);
      a3 = sub_19C1CE0D8((uint64_t)&v20, a3, (uint64_t)v14);
      if (__p)
      {
        v17 = __p;
        operator delete(__p);
      }
      if (SHIBYTE(v15) < 0)
        operator delete(v14[0]);
    }
  }
  return a3;
}

void sub_19C1CE078(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1CE0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C1C2C2C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1CE0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int v8;
  uint64_t v10;
  uint64_t v11;
  void *__p[2];
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  int v17;

  if (*(char *)(a3 + 23) < 0)
  {
    sub_19C07C6E8(__p, *(void **)a3, *(_QWORD *)(a3 + 8));
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v10 = *(_QWORD *)(a3 + 24);
    v11 = *(_QWORD *)(a3 + 32);
    v7 = v11 - v10;
    if (v11 != v10)
    {
LABEL_3:
      if (v7 < 0)
        sub_19C07DA0C();
      v14 = (char *)operator new(v7);
      v15 = v14;
      v16 = &v14[4 * (v7 >> 2)];
      v8 = *(_DWORD *)(a3 + 48);
      v17 = v8;
      operator delete(v14);
      if ((SHIBYTE(v13) & 0x80000000) == 0)
        return a2 + v8;
      goto LABEL_8;
    }
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a3;
    v13 = *(_QWORD *)(a3 + 16);
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(a3 + 32);
    v7 = v6 - v5;
    if (v6 != v5)
      goto LABEL_3;
  }
  v8 = *(_DWORD *)(a3 + 48);
  v17 = v8;
  if ((SHIBYTE(v13) & 0x80000000) == 0)
    return a2 + v8;
LABEL_8:
  operator delete(__p[0]);
  return a2 + v8;
}

void sub_19C1CE1C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
  {
    a13 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_19C255FC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C1CE1EC(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 96))
  {
    sub_19C1CAA00(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 232), 1, &__C, (int)__N);
    v4 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 264), 1, &__C, *(int *)(a1 + 288));
    v5 = __C;
    sub_19C1CE3C0(a1, a2, (uint64_t)__A);
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v5 + v4;
  }
  else
  {
    v6 = sub_19C1CA920(a1, a2);
    sub_19C1CE2F4(a1, a2);
  }
  return v6;
}

void sub_19C1CE2D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_19C1CE2F4(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double v8;
  double v9;
  void *__p[4];

  if (*(_DWORD *)(a1 + 96))
  {
    sub_19C1CAA00(a1, a2, (uint64_t)__p);
    sub_19C1CE3C0(a1, a2, (uint64_t)__p);
    v5 = v4;
    v6 = *(double *)(a1 + 16);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    return v6 + v5;
  }
  else
  {
    v8 = *(double *)(a1 + 24);
    v9 = sub_19C1CACA8(a1 + 8, (uint64_t)a2, a2);
    return *(double *)(a1 + 16) + exp(v9 * -0.5) * v8;
  }
}

void sub_19C1CE3A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1CE3C0(uint64_t a1, const double **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  _OWORD *v20;
  unsigned int v21;
  double v22;
  void *__p[3];
  int v24;
  double *__B[3];
  vDSP_Length __N;

  sub_19C1CE734(a1 + 168, (uint64_t)__p);
  v6 = *(unsigned int *)(a1 + 192);
  if ((int)v6 >= 1)
  {
    v7 = 0;
    v8 = *(_DWORD *)(a1 + 196);
    v9 = v24;
    v10 = 1;
    v11 = -1;
    v12 = __p[0];
    do
    {
      if (v8 <= v10)
        v13 = v10;
      else
        v13 = v8;
      v14 = v7 + 1;
      if ((int)v7 + 1 >= v8)
        goto LABEL_3;
      v15 = 0;
      v16 = v13 + v11;
      v17 = (int)v7 * (uint64_t)v9;
      if ((v13 + v11) < 4)
      {
        v18 = v7 + 1;
      }
      else
      {
        v18 = v7 + 1;
        if (v13 - (int)v7 + v10 - 2 >= v10)
        {
          v19 = 0;
          v15 = v16 & 0xFFFFFFFC;
          v18 = v14 + (v16 & 0xFFFFFFFC);
          do
          {
            v20 = &v12[v17 + v10 + v19];
            *v20 = 0uLL;
            v20[1] = 0uLL;
            v19 += 4;
          }
          while ((v16 & 0xFFFFFFFC) != v19);
          if (v16 == v15)
            goto LABEL_3;
        }
      }
      v21 = v13 - v15;
      do
      {
        v12[v17 + v18] = 0;
        v18 = ++v15 + v14;
        --v21;
      }
      while (v10 != v21);
LABEL_3:
      ++v7;
      ++v10;
      --v11;
    }
    while (v7 != v6);
  }
  sub_19C1CE5B4((uint64_t)__p, a3, (uint64_t)__B);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v22 = sub_19C1CACA8(a1 + 8, (uint64_t)a2, a2);
  __p[0] = 0;
  vDSP_dotprD(__B[0], 1, __B[0], 1, (double *)__p, (int)__N);
  if (__B[0])
  {
    __B[1] = __B[0];
    operator delete(__B[0]);
  }
  exp(v22 * -0.5);
}

void sub_19C1CE584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1CE5B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  size_t v7;
  void *v8;
  void *__p[4];
  void *v10[7];
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v6 = *(int *)(a1 + 24);
  v14 = 1;
  v15 = v6;
  v12 = *(_DWORD *)(a2 + 24);
  v13 = v6;
  v11 = 0;
  memset(&v10[4], 0, 24);
  if ((_DWORD)v6)
  {
    if ((v6 & 0x80000000) != 0)
      sub_19C07DA0C();
    v7 = 4 * v6;
    v8 = operator new(4 * v6);
    bzero(v8, v7);
  }
  else
  {
    v8 = 0;
  }
  sub_19C1CE998(a2, (uint64_t)v10);
  sub_19C1CEB00(a1, __p);
  dgesv_NEWLAPACK();
  sub_19C1CEC74((uint64_t)v10, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  if (v8)
    operator delete(v8);
}

void sub_19C1CE6B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v20;

  if (__p)
  {
    operator delete(__p);
    v20 = a13;
    if (!a13)
    {
LABEL_3:
      if (!v18)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(v18);
      goto LABEL_8;
    }
  }
  else
  {
    v20 = a13;
    if (!a13)
      goto LABEL_3;
  }
  operator delete(v20);
  if (!v18)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C1CE734(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  signed int v4;
  int v5;
  int v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  BOOL v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 *v18;
  uint64_t *v19;
  _QWORD *v20;
  __int128 *v21;
  _OWORD *v22;
  unint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  __int128 *v32;
  unint64_t v33;
  __int128 *v34;
  _OWORD *v35;
  unint64_t v36;
  __int128 v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;

  v5 = *(_DWORD *)(a1 + 24);
  v4 = *(_DWORD *)(a1 + 28);
  v6 = v4 * v5;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  if (!(v4 * v5))
  {
    v9 = 0;
    *(_DWORD *)(a2 + 24) = v5;
    *(_DWORD *)(a2 + 28) = v4;
    if (v5)
      v11 = v4 == 0;
    else
      v11 = 1;
    if (v11)
      return;
    goto LABEL_12;
  }
  v7 = v6;
  if (v6 < 0)
    sub_19C07DA0C();
  v8 = 8 * v6;
  v9 = (char *)operator new(v8);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 16) = &v9[8 * v7];
  bzero(v9, 8 * v7);
  *(_QWORD *)(a2 + 8) = &v9[v8];
  *(_DWORD *)(a2 + 24) = v5;
  *(_DWORD *)(a2 + 28) = v4;
  if (v5)
    v10 = v4 == 0;
  else
    v10 = 1;
  if (!v10)
  {
LABEL_12:
    v12 = v5;
    v13 = *(uint64_t **)a1;
    v14 = 8 * v4;
    if (v4 > 3)
    {
      if ((v4 & 0xFFFFFFFFFFFFFFFCLL) == v4)
      {
        v16 = 0;
        v17 = v9 + 16;
        v18 = (__int128 *)(v13 + 2);
        v19 = *(uint64_t **)a1;
        v20 = v9;
        do
        {
          v21 = v18;
          v22 = v17;
          v23 = v4 & 0xFFFFFFFFFFFFFFFCLL;
          if ((unint64_t)(&v9[v14 * v16] - ((char *)v13 + v14 * v16)) >= 0x20)
          {
            do
            {
              v28 = *v21;
              *(v22 - 1) = *(v21 - 1);
              *v22 = v28;
              v22 += 2;
              v21 += 2;
              v23 -= 4;
            }
            while (v23);
          }
          else
          {
            v24 = v19;
            v25 = v20;
            v26 = v4;
            do
            {
              v27 = *v24++;
              *v25++ = v27;
              --v26;
            }
            while (v26);
          }
          ++v16;
          v17 = (_OWORD *)((char *)v17 + v14);
          v18 = (__int128 *)((char *)v18 + v14);
          v20 = (_QWORD *)((char *)v20 + v14);
          v19 = (uint64_t *)((char *)v19 + v14);
        }
        while (v16 != v5);
      }
      else
      {
        v29 = 0;
        v30 = 0;
        v31 = v9 + 16;
        v32 = (__int128 *)(v13 + 2);
        do
        {
          v33 = v4 & 0xFFFFFFFFFFFFFFFCLL;
          v34 = v32;
          v35 = v31;
          if ((unint64_t)(&v9[v14 * v30] - ((char *)v13 + v14 * v30)) >= 0x20)
          {
            do
            {
              v37 = *v34;
              *(v35 - 1) = *(v34 - 1);
              *v35 = v37;
              v35 += 2;
              v34 += 2;
              v33 -= 4;
            }
            while (v33);
            v36 = v4 & 0xFFFFFFFFFFFFFFFCLL;
          }
          else
          {
            v36 = 0;
          }
          v38 = v4 - v36;
          v39 = v36 + v29;
          v40 = &v9[v39 * 8];
          v41 = &v13[v39];
          do
          {
            v42 = *v41++;
            *(_QWORD *)v40 = v42;
            v40 += 8;
            --v38;
          }
          while (v38);
          ++v30;
          v31 = (_OWORD *)((char *)v31 + v14);
          v32 = (__int128 *)((char *)v32 + v14);
          v29 += v4;
        }
        while (v30 != v5);
      }
    }
    else
    {
      v15 = 0;
      do
      {
        *(_QWORD *)&v9[v15] = *(uint64_t *)((char *)v13 + v15);
        if (v4 != 1)
        {
          *(_QWORD *)&v9[v15 + 8] = *(uint64_t *)((char *)v13 + v15 + 8);
          if (v4 != 2)
            *(_QWORD *)&v9[v15 + 16] = *(uint64_t *)((char *)v13 + v15 + 16);
        }
        v15 += v14;
        --v12;
      }
      while (v12);
    }
  }
}

void sub_19C1CE97C(void *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  sub_19C07AF7C(a1);
}

void sub_19C1CE998(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;

  v4 = *(_DWORD *)(a1 + 24);
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(8 * v4);
    bzero(v5, 8 * v4);
    v6 = &v5[8 * v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  vDSP_mtransD(*(const double **)a1, 1, (double *)v5, 1, 1uLL, v4);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v7 = v6 - v5;
  if (v6 != v5)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v6 - v5);
    *(_QWORD *)a2 = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a2 + 16) = v9;
    memcpy(v8, v5, v6 - v5);
    *(_QWORD *)(a2 + 8) = v9;
  }
  *(_DWORD *)(a2 + 24) = v4;
  if (v5)
    operator delete(v5);
}

void sub_19C1CEAA4(_Unwind_Exception *exception_object)
{
  void *v1;

  if (!v1)
    _Unwind_Resume(exception_object);
  operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_19C1CEAE4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1CEB00(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  int v5;
  int v6;
  size_t v7;
  char *v8;
  char *v9;
  int64_t v10;
  char *v11;
  char *v12;

  v5 = *(_DWORD *)(a1 + 24);
  v4 = *(_DWORD *)(a1 + 28);
  v6 = v5 * v4;
  if (v5 * v4)
  {
    if (v6 < 0)
      sub_19C07DA0C();
    v7 = 8 * v6;
    v8 = (char *)operator new(v7);
    bzero(v8, v7);
    v9 = &v8[v7];
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  vDSP_mtransD(*(const double **)a1, 1, (double *)v8, 1, v4, v5);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v10 = v9 - v8;
  if (v9 != v8)
  {
    if (v10 < 0)
      sub_19C07DA0C();
    v11 = (char *)operator new(v9 - v8);
    *a2 = v11;
    v12 = &v11[8 * (v10 >> 3)];
    a2[2] = v12;
    memcpy(v11, v8, v10);
    a2[1] = v12;
  }
  a2[3] = __PAIR64__(v5, v4);
  if (v8)
    operator delete(v8);
}

void sub_19C1CEC18(_Unwind_Exception *exception_object)
{
  void *v1;

  if (!v1)
    _Unwind_Resume(exception_object);
  operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_19C1CEC58(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1CEC74(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;

  v4 = *(_DWORD *)(a1 + 24);
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(8 * v4);
    bzero(v5, 8 * v4);
    v6 = &v5[8 * v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  vDSP_mtransD(*(const double **)a1, 1, (double *)v5, 1, v4, 1uLL);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v7 = v6 - v5;
  if (v6 != v5)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v6 - v5);
    *(_QWORD *)a2 = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a2 + 16) = v9;
    memcpy(v8, v5, v6 - v5);
    *(_QWORD *)(a2 + 8) = v9;
  }
  *(_DWORD *)(a2 + 24) = v4;
  if (v5)
    operator delete(v5);
}

void sub_19C1CED80(_Unwind_Exception *exception_object)
{
  void *v1;

  if (!v1)
    _Unwind_Resume(exception_object);
  operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_19C1CEDC0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

__n128 sub_19C1CEDDC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 *v9;
  __n128 result;
  unint64_t v11;
  __n128 *v12;
  __n128 *v13;
  __n128 *v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t *v20;
  unint64_t v21;
  __n128 *v22;
  uint64_t v23;
  __n128 *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  __n128 *v30;
  __n128 *v31;
  unint64_t v32;
  __n128 v33;

  v6 = *(int *)(a1 + 24);
  v7 = *(int *)(a2 + 24);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  *(_DWORD *)(a3 + 24) = 0;
  v8 = v7 + v6;
  if (!((_DWORD)v7 + (_DWORD)v6))
  {
    v9 = 0;
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_DWORD *)(a3 + 24) = v8;
    if (!(_DWORD)v6)
      goto LABEL_13;
    goto LABEL_6;
  }
  if ((v8 & 0x80000000) != 0)
    sub_19C07DA0C();
  v9 = (__n128 *)operator new(8 * v8);
  bzero(v9, 8 * v8);
  *(_QWORD *)a3 = v9;
  *(_QWORD *)(a3 + 8) = (char *)v9 + 8 * v8;
  *(_QWORD *)(a3 + 16) = (char *)v9 + 8 * v8;
  *(_DWORD *)(a3 + 24) = v8;
  if ((_DWORD)v6)
  {
LABEL_6:
    v11 = 0;
    v12 = *(__n128 **)a1;
    if (v6 < 4)
      goto LABEL_11;
    if ((unint64_t)((char *)v9 - (char *)v12) < 0x20)
      goto LABEL_11;
    v11 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    v13 = v12 + 1;
    v14 = v9 + 1;
    v15 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      result = v13[-1];
      v16 = *v13;
      v14[-1] = result;
      *v14 = v16;
      v13 += 2;
      v14 += 2;
      v15 -= 4;
    }
    while (v15);
    if (v11 != v6)
    {
LABEL_11:
      v17 = v6 - v11;
      v18 = v11;
      v19 = &v12->n128_u64[v18];
      v20 = &v9->n128_u64[v18];
      do
      {
        v21 = *v19++;
        result.n128_u64[0] = v21;
        *v20++ = v21;
        --v17;
      }
      while (v17);
    }
  }
LABEL_13:
  if (v6 >= v8)
    return result;
  v22 = *(__n128 **)a2;
  v23 = v8 - v6;
  if ((unint64_t)(v8 - v6) < 6
    || (v24 = (__n128 *)((char *)v9 + 8 * v6), (unint64_t)((char *)v24 - (char *)v22) < 0x20))
  {
    v25 = 0;
    v26 = v6;
LABEL_17:
    v27 = &v22->n128_u64[v25];
    v28 = v23 - v25;
    do
    {
      ++v25;
      v29 = *v27++;
      result.n128_u64[0] = v29;
      v9->n128_u64[v26] = v29;
      v26 = v25 + v6;
      --v28;
    }
    while (v28);
    return result;
  }
  v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  v26 = (v23 & 0xFFFFFFFFFFFFFFFCLL) + v6;
  v30 = v22 + 1;
  v31 = v24 + 1;
  v32 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    result = v30[-1];
    v33 = *v30;
    v31[-1] = result;
    *v31 = v33;
    v30 += 2;
    v31 += 2;
    v32 -= 4;
  }
  while (v32);
  if (v23 != v25)
    goto LABEL_17;
  return result;
}

void sub_19C1CEF9C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

uint64_t **sub_19C1CEFB8(uint64_t ***a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v8;
  uint64_t **v9;
  uint64_t **v10;
  uint64_t **v11;
  uint64_t **v12;
  char **v13;
  char **v14;
  uint64_t **v15;
  char **v16;

  v4 = (char *)a1[1] - (char *)*a1;
  v5 = 0x4EC4EC4EC4EC4EC5 * (v4 >> 3) + 1;
  if (v5 > 0x276276276276276)
    sub_19C07DA0C();
  if (0x9D89D89D89D89D8ALL * (a1[2] - *a1) > v5)
    v5 = 0x9D89D89D89D89D8ALL * (a1[2] - *a1);
  if ((unint64_t)(0x4EC4EC4EC4EC4EC5 * (a1[2] - *a1)) >= 0x13B13B13B13B13BLL)
    v8 = 0x276276276276276;
  else
    v8 = v5;
  if (v8)
  {
    if (v8 > 0x276276276276276)
      sub_19C07C7FC();
    v9 = (uint64_t **)operator new(104 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[13 * v8];
  v11 = sub_19C1C1840(&v9[v4 >> 3], a2);
  *(uint64_t **)((char *)v9 + v4 + 96) = *a3;
  v12 = v11 + 13;
  v14 = (char **)*a1;
  v13 = (char **)a1[1];
  if (v13 == (char **)*a1)
  {
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v10;
    if (!v13)
      return v12;
    goto LABEL_17;
  }
  do
  {
    v15 = v11;
    v11 = sub_19C1C5D14(v11 - 13, (uint64_t)(v13 - 13));
    *(v15 - 1) = (uint64_t *)*(v13 - 1);
    v13 -= 13;
  }
  while (v13 != v14);
  v16 = (char **)*a1;
  v13 = (char **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v10;
  if (v13 != v16)
  {
    do
    {
      v13 -= 13;
      sub_19C17B808(v13);
    }
    while (v13 != v16);
    v13 = v16;
  }
  if (v13)
LABEL_17:
    operator delete(v13);
  return v12;
}

char **sub_19C1CF138(char **result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char **v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  double v13;
  double v14;
  uint64_t *v15;
  double v16;
  double v17;
  uint64_t *v18[13];
  uint64_t *v19[12];
  double v20;
  uint64_t *v21[12];
  uint64_t *v22;
  uint64_t *v23[12];
  double v24;
  uint64_t *v25[12];
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a4 >= 2)
  {
    v27 = v7;
    v28 = v6;
    v29 = v4;
    v30 = v5;
    v9 = result;
    v10 = (unint64_t)(a4 - 2) >> 1;
    v11 = (uint64_t *)&result[13 * v10];
    sub_19C1C1840(v25, v11);
    v26 = *((double *)v11 + 12);
    v12 = (uint64_t *)(a2 - 104);
    sub_19C1C1840(v23, (uint64_t *)(a2 - 104));
    v24 = *(double *)(a2 - 8);
    v13 = v24;
    v14 = v26;
    sub_19C17B808((char **)v23);
    result = sub_19C17B808((char **)v25);
    if (v14 > v13)
    {
      sub_19C1C5D14(v21, a2 - 104);
      v22 = *(uint64_t **)(a2 - 8);
      do
      {
        v15 = v11;
        sub_19C17A814((char **)v12, (uint64_t)v11);
        v12[12] = v11[12];
        if (!v10)
          break;
        v10 = (v10 - 1) >> 1;
        v11 = (uint64_t *)&v9[13 * v10];
        sub_19C1C1840(v19, v11);
        v20 = *(double *)&v9[13 * v10 + 12];
        sub_19C1C1840(v18, (uint64_t *)v21);
        v16 = *(double *)&v22;
        v18[12] = v22;
        v17 = v20;
        sub_19C17B808((char **)v18);
        sub_19C17B808((char **)v19);
        v12 = v15;
      }
      while (v17 > v16);
      sub_19C17A814((char **)v15, (uint64_t)v21);
      v15[12] = (uint64_t)v22;
      return sub_19C17B808((char **)v21);
    }
  }
  return result;
}

char **sub_19C1CF288(char **result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char **v8;
  char **v9;
  uint64_t *v10[12];
  char *v11;

  if (a4 >= 2)
  {
    v7 = (uint64_t)result;
    sub_19C1C5D14(v10, (uint64_t)result);
    v11 = *(char **)(v7 + 96);
    v8 = (char **)sub_19C1CF390(v7, a3, a4);
    v9 = v8;
    if ((char **)(a2 - 104) == v8)
    {
      sub_19C17A814(v8, (uint64_t)v10);
      v9[12] = v11;
    }
    else
    {
      sub_19C17A814(v8, a2 - 104);
      v9[12] = *(char **)(a2 - 8);
      sub_19C17A814((char **)(a2 - 104), (uint64_t)v10);
      *(_QWORD *)(a2 - 8) = v11;
      sub_19C1CF138((char **)v7, (uint64_t)(v9 + 13), a3, 0x4EC4EC4EC4EC4EC5 * (((uint64_t)v9 - v7 + 104) >> 3));
    }
    return sub_19C17B808((char **)v10);
  }
  return result;
}

void sub_19C1CF37C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_19C17B808((char **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1CF390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t *v15[12];
  double v16;
  uint64_t *v17[12];
  double v18;

  v5 = 0;
  v6 = a3 - 2;
  if (a3 < 2)
    v6 = a3 - 1;
  v7 = v6 >> 1;
  do
  {
    v8 = (uint64_t *)(a1 + 104 * v5);
    v9 = (uint64_t)(v8 + 13);
    v10 = (2 * v5) | 1;
    v11 = 2 * v5 + 2;
    if (v11 < a3)
    {
      sub_19C1C1840(v17, v8 + 13);
      v18 = *((double *)v8 + 25);
      sub_19C1C1840(v15, v8 + 26);
      v16 = *((double *)v8 + 38);
      v12 = v16;
      v13 = v18;
      sub_19C17B808((char **)v15);
      sub_19C17B808((char **)v17);
      if (v13 > v12)
      {
        v9 = (uint64_t)(v8 + 26);
        v10 = v11;
      }
    }
    sub_19C17A814((char **)a1, v9);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(v9 + 96);
    a1 = v9;
    v5 = v10;
  }
  while (v10 <= v7);
  return v9;
}

uint64_t sub_19C1CF494(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  void *v32[4];
  void *v33[4];
  void *v34;
  void **v35;
  uint64_t v36;
  void *__p;
  void **v38;
  uint64_t v39;

  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_19C17AF88(&v34, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v38 = 0;
  v39 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21648;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v34, (uint64_t)v35, 0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (_BYTE *)v34) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v38, 0xCCCCCCCCCCCCCCCDLL * (((char *)v38 - (_BYTE *)__p) >> 3));
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v38;
    v10 = __p;
    if (v38 != __p)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v38 = v8;
    operator delete(v10);
  }
  v11 = (void **)v34;
  if (v34)
  {
    v12 = v35;
    v13 = v34;
    if (v35 != v34)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v34;
    }
    v35 = v11;
    operator delete(v13);
  }
  *(_QWORD *)a1 = &unk_1E3D21198;
  v14 = sub_19C178A44(a3);
  sub_19C1CF858(a1 + 64, v14);
  sub_19C1C81AC(a1 + 184);
  sub_19C178B08(a3, (uint64_t *)v32);
  sub_19C1D0468(a1 + 64, (uint64_t *)v32);
  sub_19C1D0594(a1 + 64, (uint64_t *)v33);
  if (v33[0])
  {
    v33[1] = v33[0];
    operator delete(v33[0]);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  if ((a4 & 0xFF00000000) != 0)
  {
    v15 = 0;
    *(_DWORD *)(a1 + 7776) = a4;
    v16 = 1;
    v17 = a4;
    do
    {
      v18 = 1812433253 * (v17 ^ (v17 >> 30));
      v17 = v18 + v16;
      *(_DWORD *)(a1 + 7780 + 4 * v15) = v15 + v18 + 1;
      ++v16;
      ++v15;
    }
    while (v15 != 623);
    *(_QWORD *)(a1 + 10272) = 0;
    *(_DWORD *)(a1 + 184) = a4;
    v19 = 1;
    v20 = 47;
    v21 = a4;
    do
    {
      v22 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v22 + v19;
      *(_DWORD *)(a1 + 4 * v20) = v20 + v22 - 46;
      ++v19;
      ++v20;
    }
    while (v20 != 670);
    v23 = 0;
    *(_QWORD *)(a1 + 2680) = 0;
    *(_DWORD *)(a1 + 2712) = a4;
    v24 = 1;
    v25 = a4;
    do
    {
      v26 = 1812433253 * (v25 ^ (v25 >> 30));
      v25 = v26 + v24;
      *(_DWORD *)(a1 + 2716 + 4 * v23) = v23 + v26 + 1;
      ++v24;
      ++v23;
    }
    while (v23 != 623);
    v27 = 0;
    *(_QWORD *)(a1 + 5208) = 0;
    *(_DWORD *)(a1 + 5232) = a4;
    v28 = 1;
    v29 = a4;
    do
    {
      v30 = 1812433253 * (v29 ^ (v29 >> 30));
      v29 = v30 + v28;
      *(_DWORD *)(a1 + 5236 + 4 * v27) = v27 + v30 + 1;
      ++v28;
      ++v27;
    }
    while (v27 != 623);
    *(_QWORD *)(a1 + 7728) = 0;
    sub_19C23B684();
  }
  return a1;
}

void sub_19C1CF7B0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  sub_19C1CF8E8(v2);
  sub_19C1CB050(v1);
  _Unwind_Resume(a1);
}

void sub_19C1CF844(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_19C1CB050(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1CF858(uint64_t a1, unsigned int a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  *(_QWORD *)a1 = &unk_1E3D21150;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 88) = -1;
  *(_QWORD *)(a1 + 96) = 0x7FF0000000000000;
  *(_DWORD *)(a1 + 104) = -5;
  *(_BYTE *)(a1 + 112) = 0;
  sub_19C1CFECC(a1, a2);
  return a1;
}

void sub_19C1CF8C4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t *v2;
  uint64_t *v3;

  v3 = v2;
  sub_19C23AA14(*v3);
  sub_19C256454(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_19C1CF8E8(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;

  *a1 = &unk_1E3D21150;
  sub_19C23AA14(a1[1]);
  v2 = (void *)a1[8];
  if (v2)
  {
    a1[9] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[5];
  if (v3)
  {
    a1[6] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[2];
  if (v4)
  {
    a1[3] = v4;
    operator delete(v4);
  }
  return a1;
}

void sub_19C1CF958(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_19C1D0808(a1);
  operator delete(v1);
}

void sub_19C1CF96C(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  double v6;
  void **v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t **v13;
  uint64_t **i;
  uint64_t **v15;
  char **v16;
  uint64_t **v17;
  char **v18;
  char **v19;
  void *v20;
  double v21;
  double v22;
  BOOL v23;
  char v24;
  __int128 **v25;
  char **v26;
  char *v27;
  void *__p;
  char **v29;
  uint64_t *v30[12];
  _OWORD v31[3];
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[2];
  double v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  __int128 **v43;
  char *v44;
  uint64_t **v45;
  uint64_t **v46;

  v32 = 0u;
  memset(v31, 0, sizeof(v31));
  *(_QWORD *)&v32 = (char *)&v32 + 8;
  v35[0] = 0;
  v35[1] = 0;
  v33 = 0;
  v34 = v35;
  v6 = (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8));
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)v31);
  *(double *)(a3 + 96) = v6;
  sub_19C17B808((char **)v31);
  v38 = 0;
  v39 = 0;
  v37 = 0;
  sub_19C17AF88(&v37, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 4));
  v40 = 0;
  v41 = 0;
  v42 = 0;
  sub_19C17B16C(&v40, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 3));
  sub_19C17A144((uint64_t *)&v37, a1 + 184, 5, (char **)&v43);
  v7 = v40;
  if (v40)
  {
    v8 = v41;
    v9 = v40;
    if (v41 != v40)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v40;
    }
    v41 = v7;
    operator delete(v9);
  }
  v10 = (uint64_t)v37;
  if (v37)
  {
    v11 = v38;
    v12 = v37;
    if ((void *)v38 != v37)
    {
      do
      {
        if (*(char *)(v11 - 25) < 0)
          operator delete(*(void **)(v11 - 48));
        v11 -= 48;
      }
      while (v11 != v10);
      v12 = v37;
    }
    v38 = v10;
    operator delete(v12);
  }
  sub_19C1D08B0(a1, v43, (uint64_t)v31);
  sub_19C1C9C8C(a3, (uint64_t)v31);
  *(double *)(a3 + 96) = v36;
  sub_19C17B808((char **)v31);
  sub_19C1D08B0(a1, v43 + 12, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1D08B0(a1, v43 + 24, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1D08B0(a1, v43 + 36, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1D08B0(a1, v43 + 48, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1CCA84((uint64_t ***)&__p, a2);
  sub_19C1CCA84(&v45, (uint64_t **)&__p);
  v13 = v45;
  if (v45 != v46)
  {
    for (i = v45 + 13; i != v46; i += 13)
    {
      if (*((double *)v13 + 12) < *((double *)i + 12))
        v13 = i;
    }
  }
  sub_19C1C1840((uint64_t **)v31, (uint64_t *)v13);
  v36 = *((double *)v13 + 12);
  v15 = v45;
  if (v45)
  {
    v16 = (char **)v46;
    v17 = v45;
    if (v46 != v45)
    {
      do
        v16 = sub_19C17B808(v16 - 13);
      while (v16 != (char **)v15);
      v17 = v45;
    }
    v46 = v15;
    operator delete(v17);
  }
  sub_19C1C5D14(v30, (uint64_t)v31);
  sub_19C17B808((char **)v31);
  v18 = (char **)__p;
  if (__p)
  {
    v19 = v29;
    v20 = __p;
    if (v29 != __p)
    {
      do
        v19 = sub_19C17B808(v19 - 13);
      while (v19 != v18);
      v20 = __p;
    }
    v29 = v18;
    operator delete(v20);
  }
  sub_19C1D08B0(a1, (__int128 **)v30, (uint64_t)v31);
  v21 = v36;
  v22 = *(double *)(a3 + 96);
  v23 = sub_19C1D16FC((uint64_t *)v31, v30);
  v24 = v21 <= v22 || v23;
  if ((v24 & 1) == 0)
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C17B808((char **)v30);
  v25 = v43;
  if (v43)
  {
    v26 = (char **)v44;
    v27 = (char *)v43;
    if (v44 != (char *)v43)
    {
      do
        v26 = sub_19C17B808(v26 - 12);
      while (v26 != (char **)v25);
      v27 = (char *)v43;
    }
    v44 = (char *)v25;
    operator delete(v27);
  }
}

void sub_19C1CFD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  char **v5;
  uint64_t v6;
  char *v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, char *);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  sub_19C17B808((char **)va1);
  sub_19C17B808((char **)va);
  sub_19C17AA64((void **)(v6 - 112));
  sub_19C17B808(v5);
  _Unwind_Resume(a1);
}

void sub_19C1CFE50(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "direct_optimizer");
}

uint64_t *sub_19C1CFE70(uint64_t *a1)
{
  void *v2;
  void *v3;
  void *v4;

  sub_19C23AA14(*a1);
  v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = (uint64_t)v2;
    operator delete(v2);
  }
  v3 = (void *)a1[4];
  if (v3)
  {
    a1[5] = (uint64_t)v3;
    operator delete(v3);
  }
  v4 = (void *)a1[1];
  if (v4)
  {
    a1[2] = (uint64_t)v4;
    operator delete(v4);
  }
  return a1;
}

uint64_t *sub_19C1CFECC(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *__p;
  void *v13;

  sub_19C1D0060((uint64_t)&v7, 0, a2);
  sub_19C1CFFB0(a1 + 8, (uint64_t)&v7);
  sub_19C23AA14(v7);
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
  if (v10)
  {
    v11 = v10;
    operator delete(v10);
  }
  if (v8)
  {
    v9 = v8;
    operator delete(v8);
  }
  *(_BYTE *)(a1 + 112) = 1;
  v3 = sub_19C23B5D4(*(_QWORD *)(a1 + 8), 500);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v3);
  v4 = sub_19C23B544(*(_QWORD *)(a1 + 8), -1.0);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v4);
  v5 = sub_19C23B58C(*(_QWORD *)(a1 + 8), -1.0);
  return sub_19C1D01DC((uint64_t *)(a1 + 8), v5);
}

void sub_19C1CFF9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_19C1CFE70((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1CFFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  BOOL v5;
  std::bad_alloc *exception;
  std::bad_alloc *v8;

  if (a1 != a2)
  {
    sub_19C23AA14(*(_QWORD *)a1);
    v4 = sub_19C23ADA0(*(_QWORD *)a2);
    *(_QWORD *)a1 = v4;
    if (*(_QWORD *)a2)
      v5 = v4 == 0;
    else
      v5 = 0;
    if (v5)
    {
      exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
      v8 = std::bad_alloc::bad_alloc(exception);
      __cxa_throw(v8, MEMORY[0x1E0DE4EA8], MEMORY[0x1E0DE4DC0]);
    }
    sub_19C11EAD0((_QWORD *)(a1 + 8), *(char **)(a2 + 8), *(char **)(a2 + 16), (uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 3);
    sub_19C11EAD0((_QWORD *)(a1 + 32), *(char **)(a2 + 32), *(char **)(a2 + 40), (uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3);
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  }
  return a1;
}

uint64_t sub_19C1D0060(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  std::bad_alloc *exception;
  std::bad_alloc *v7;

  v4 = sub_19C23AB64(a2, a3);
  *(_QWORD *)a1 = v4;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_QWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = -1;
  *(_QWORD *)(a1 + 88) = 0x7FF0000000000000;
  *(_DWORD *)(a1 + 96) = -5;
  if (!v4)
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    v7 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v7, MEMORY[0x1E0DE4EA8], MEMORY[0x1E0DE4DC0]);
  }
  sub_19C23B66C(v4, (uint64_t)sub_19C1D0128, (uint64_t)sub_19C1D0168);
  return a1;
}

void sub_19C1D00FC(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + 56);
  if (v3)
  {
    *(_QWORD *)(v1 + 64) = v3;
    operator delete(v3);
  }
  sub_19C2564A0((void **)(v1 + 32), (void **)(v1 + 8), v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1D0128(_QWORD *__p)
{
  void (*v2)(void);

  if (__p)
  {
    if (__p[3])
    {
      v2 = (void (*)(void))__p[5];
      if (v2)
        v2();
    }
    operator delete(__p);
  }
  return 0;
}

__n128 sub_19C1D0168(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  __n128 result;
  uint64_t v5;
  __int128 v6;

  if (a1)
  {
    v2 = *(_QWORD *)(a1 + 24);
    if (!v2 || (v3 = *(uint64_t (**)(_QWORD))(a1 + 48)) == 0 || (v2 = v3(*(_QWORD *)(a1 + 24))) != 0)
    {
      v5 = operator new();
      v6 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)v5 = *(_OWORD *)a1;
      *(_OWORD *)(v5 + 16) = v6;
      result = *(__n128 *)(a1 + 32);
      *(__n128 *)(v5 + 32) = result;
      *(_QWORD *)(v5 + 48) = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(v5 + 24) = v2;
    }
  }
  return result;
}

uint64_t *sub_19C1D01DC(uint64_t *result, int a2)
{
  uint64_t *v2;
  std::runtime_error *exception;
  std::runtime_error *v4;
  std::bad_alloc *v5;
  std::bad_alloc *v6;
  std::logic_error *v7;
  const char *v8;
  std::runtime_error *v9;
  const char *v10;

  v2 = result;
  switch(a2)
  {
    case -5:
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1D0410(exception);
      __cxa_throw(exception, (struct type_info *)&unk_1E3D1D810, (void (*)(void *))std::runtime_error::~runtime_error);
    case -4:
      v4 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1D03E0(v4);
      __cxa_throw(v4, (struct type_info *)&unk_1E3D1D828, (void (*)(void *))std::runtime_error::~runtime_error);
    case -3:
      v5 = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
      v6 = std::bad_alloc::bad_alloc(v5);
      __cxa_throw(v6, MEMORY[0x1E0DE4EA8], MEMORY[0x1E0DE4DC0]);
    case -2:
      v7 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      if (sub_19C1D037C(v2))
        v8 = (const char *)sub_19C1D037C(v2);
      else
        v8 = "nlopt invalid argument";
      sub_19C1C79A4(v7, v8);
      __cxa_throw(v7, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    case -1:
      v9 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      if (sub_19C1D037C(v2))
        v10 = (const char *)sub_19C1D037C(v2);
      else
        v10 = "nlopt failure";
      std::runtime_error::runtime_error(v9, v10);
      __cxa_throw(v9, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
    default:
      return result;
  }
}

void sub_19C1D032C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C1D0340(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C1D0354(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C1D0368(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1D037C(uint64_t *a1)
{
  uint64_t v1;
  std::runtime_error *exception;

  v1 = *a1;
  if (!v1)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "uninitialized nlopt::opt");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  return sub_19C23B678(v1);
}

void sub_19C1D03CC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::runtime_error *sub_19C1D03E0(std::runtime_error *a1)
{
  std::runtime_error *result;

  result = std::runtime_error::runtime_error(a1, "nlopt roundoff-limited");
  result->__vftable = (std::runtime_error_vtbl *)&unk_1E3D219C8;
  return result;
}

std::runtime_error *sub_19C1D0410(std::runtime_error *a1)
{
  std::runtime_error *result;

  result = std::runtime_error::runtime_error(a1, "nlopt forced stop");
  result->__vftable = (std::runtime_error_vtbl *)&unk_1E3D219A0;
  return result;
}

void sub_19C1D0440(std::runtime_error *a1)
{
  void *v1;

  std::runtime_error::~runtime_error(a1);
  operator delete(v1);
}

void sub_19C1D0454(std::runtime_error *a1)
{
  void *v1;

  std::runtime_error::~runtime_error(a1);
  operator delete(v1);
}

void sub_19C1D0468(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  __int128 *v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  void *__p;
  void *v18;
  char *v19;

  v3 = *((int *)a2 + 6);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if ((_DWORD)v3)
  {
    if ((v3 & 0x80000000) != 0)
      sub_19C07DA0C();
    v5 = operator new(8 * v3);
    __p = v5;
    v19 = (char *)v5 + 8 * v3;
    bzero(v5, 8 * v3);
    v6 = 0;
    v18 = v19;
    v7 = *a2;
    if (v3 < 4)
      goto LABEL_8;
    if ((unint64_t)v5 - v7 < 0x20)
      goto LABEL_8;
    v6 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    v8 = (__int128 *)(v7 + 16);
    v9 = v5 + 1;
    v10 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v11 = *v8;
      *(v9 - 1) = *(v8 - 1);
      *v9 = v11;
      v8 += 2;
      v9 += 2;
      v10 -= 4;
    }
    while (v10);
    if (v6 != v3)
    {
LABEL_8:
      v12 = v3 - v6;
      v13 = 8 * v6;
      v14 = (_QWORD *)v5 + v6;
      v15 = (uint64_t *)(v7 + v13);
      do
      {
        v16 = *v15++;
        *v14++ = v16;
        --v12;
      }
      while (v12);
    }
  }
  sub_19C1D06C0((uint64_t *)(a1 + 8), (const void **)&__p);
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_19C1D0574(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1D0594(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  __int128 *v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  void *__p;
  void *v18;
  char *v19;

  v3 = *((int *)a2 + 6);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if ((_DWORD)v3)
  {
    if ((v3 & 0x80000000) != 0)
      sub_19C07DA0C();
    v5 = operator new(8 * v3);
    __p = v5;
    v19 = (char *)v5 + 8 * v3;
    bzero(v5, 8 * v3);
    v6 = 0;
    v18 = v19;
    v7 = *a2;
    if (v3 < 4)
      goto LABEL_8;
    if ((unint64_t)v5 - v7 < 0x20)
      goto LABEL_8;
    v6 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    v8 = (__int128 *)(v7 + 16);
    v9 = v5 + 1;
    v10 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v11 = *v8;
      *(v9 - 1) = *(v8 - 1);
      *v9 = v11;
      v8 += 2;
      v9 += 2;
      v10 -= 4;
    }
    while (v10);
    if (v6 != v3)
    {
LABEL_8:
      v12 = v3 - v6;
      v13 = 8 * v6;
      v14 = (_QWORD *)v5 + v6;
      v15 = (uint64_t *)(v7 + v13);
      do
      {
        v16 = *v15++;
        *v14++ = v16;
        --v12;
      }
      while (v12);
    }
  }
  sub_19C1D0764((uint64_t *)(a1 + 8), (const void **)&__p);
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_19C1D06A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_19C1D06C0(uint64_t *a1, const void **a2)
{
  uint64_t v4;
  int v5;
  _BYTE *v6;
  _BYTE *v7;
  const void *v8;
  int v9;
  std::logic_error *exception;

  v4 = *a1;
  if (v4)
  {
    v5 = sub_19C23B664(v4);
    v6 = *a2;
    v7 = a2[1];
    if (v5 != (v7 - (_BYTE *)*a2) >> 3)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1C79A4(exception, "dimension mismatch");
      __cxa_throw(exception, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    }
    v4 = *a1;
  }
  else
  {
    v6 = *a2;
    v7 = a2[1];
  }
  if (v6 == v7)
    v8 = 0;
  else
    v8 = v6;
  v9 = sub_19C23B378(v4, v8);
  return sub_19C1D01DC(a1, v9);
}

void sub_19C1D0750(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_19C1D0764(uint64_t *a1, const void **a2)
{
  uint64_t v4;
  int v5;
  _BYTE *v6;
  _BYTE *v7;
  const void *v8;
  int v9;
  std::logic_error *exception;

  v4 = *a1;
  if (v4)
  {
    v5 = sub_19C23B664(v4);
    v6 = *a2;
    v7 = a2[1];
    if (v5 != (v7 - (_BYTE *)*a2) >> 3)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1C79A4(exception, "dimension mismatch");
      __cxa_throw(exception, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    }
    v4 = *a1;
  }
  else
  {
    v6 = *a2;
    v7 = a2[1];
  }
  if (v6 == v7)
    v8 = 0;
  else
    v8 = v6;
  v9 = sub_19C23B47C(v4, v8);
  return sub_19C1D01DC(a1, v9);
}

void sub_19C1D07F4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_19C1D0808(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = &unk_1E3D21198;
  std::random_device::~random_device((std::random_device *)(a1 + 10280));
  std::random_device::~random_device((std::random_device *)(a1 + 7736));
  std::random_device::~random_device((std::random_device *)(a1 + 5216));
  std::random_device::~random_device((std::random_device *)(a1 + 2688));
  *(_QWORD *)(a1 + 64) = &unk_1E3D21150;
  sub_19C23AA14(*(_QWORD *)(a1 + 72));
  v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(_QWORD *)(a1 + 136) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 104);
  if (v3)
  {
    *(_QWORD *)(a1 + 112) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 80);
  if (v4)
  {
    *(_QWORD *)(a1 + 88) = v4;
    operator delete(v4);
  }
  return sub_19C1CB050((_QWORD *)a1);
}

void sub_19C1D08B0(uint64_t a1@<X0>, __int128 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float64x2_t *v9;
  char *v10;
  uint64_t v11;
  float64x2_t *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  int64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  int v25;
  double v26;
  double v27;
  void *v28[3];
  unsigned int v29;
  void *v30;
  char *v31;
  char *v32;
  int v33;
  void *v34;
  void *v35;
  void *__p[12];
  void *v37[4];
  _QWORD v38[2];

  v38[0] = a1;
  v38[1] = a2;
  v6 = a1 + 64;
  sub_19C1CD184(a2, (uint64_t)__p);
  sub_19C1D0C34(v6, (uint64_t)v38, (uint64_t *)__p, (uint64_t)v37);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_19C1CD508((uint64_t)a2, (uint64_t)&v34);
  sub_19C1C1840((uint64_t **)__p, (uint64_t *)a2);
  sub_19C1CD7E0((uint64_t *)__p, (uint64_t *)v37);
  sub_19C1CD99C((uint64_t)__p, (uint64_t *)&v34);
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  v7 = *(_QWORD *)(a1 + 8);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v28);
  v8 = v29;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  if (!v29)
  {
    v33 = 0;
    goto LABEL_15;
  }
  if ((v29 & 0x80000000) != 0)
    sub_19C07DA0C();
  v9 = (float64x2_t *)operator new(8 * (int)v29);
  v30 = v9;
  v32 = (char *)&v9->f64[(int)v8];
  bzero(v9, 8 * (int)v8);
  v31 = (char *)&v9->f64[(int)v8];
  v33 = v8;
  v10 = (char *)v28[0];
  if (v8 < 8)
  {
    v11 = 0;
LABEL_13:
    v20 = v8 - v11;
    v21 = v11 << 32;
    do
    {
      *(double *)((char *)v9->f64 + (v21 >> 29)) = (double)*(int *)&v10[v21 >> 30];
      v21 += 0x100000000;
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
  v11 = v8 & 0xFFFFFFF8;
  v12 = v9 + 2;
  v13 = (char *)v28[0] + 16;
  v14 = v11;
  do
  {
    v15 = *((_OWORD *)v13 - 1);
    v16.i64[0] = (int)v15;
    v16.i64[1] = SDWORD1(v15);
    v17 = vcvtq_f64_s64(v16);
    v16.i64[0] = SDWORD2(v15);
    v16.i64[1] = SHIDWORD(v15);
    v18 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*(_OWORD *)v13;
    v16.i64[1] = (int)HIDWORD(*(_QWORD *)v13);
    v19 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*((_QWORD *)v13 + 1);
    v16.i64[1] = (int)HIDWORD(*(_OWORD *)v13);
    v12[-2] = v17;
    v12[-1] = v18;
    *v12 = v19;
    v12[1] = vcvtq_f64_s64(v16);
    v12 += 4;
    v13 += 32;
    v14 -= 8;
  }
  while (v14);
  if (v11 != v8)
    goto LABEL_13;
LABEL_15:
  sub_19C1CEDDC((uint64_t)v37, (uint64_t)&v30, (uint64_t)&v34);
  v22 = sub_19C1CE1EC(*(_QWORD *)(v7 + 8), (const double **)&v34);
  v24 = sqrt(v23);
  if (v24 < 0.00000001 || (v25 = *(_DWORD *)(*(_QWORD *)(v7 + 8) + 96), v25 <= 0))
  {
    v26 = (*(double (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  else
  {
    if (*(_DWORD *)(v7 + 56) != v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    (**(void (***)(uint64_t, double, double))v7)(v7, v22, v24);
  }
  v27 = v26;
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)__p);
  *(double *)(a3 + 96) = v27;
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  if (v30)
  {
    v31 = (char *)v30;
    operator delete(v30);
  }
  if (v28[0])
  {
    v28[1] = v28[0];
    operator delete(v28[0]);
  }
  sub_19C17B808((char **)__p);
  if (v37[0])
  {
    v37[1] = v37[0];
    operator delete(v37[0]);
  }
}

void sub_19C1D0B5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v24;
  void *v25;

  if (a13)
  {
    operator delete(a13);
    v24 = __p;
    if (!__p)
    {
LABEL_4:
      sub_19C17B808((char **)&a21);
      v25 = *(void **)(v22 - 128);
      if (v25)
      {
        *(_QWORD *)(v22 - 120) = v25;
        operator delete(v25);
      }
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v24 = __p;
    if (!__p)
      goto LABEL_4;
  }
  operator delete(v24);
  goto LABEL_4;
}

void sub_19C1D0C34(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1D1184;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1D107C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1D0E88);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

void sub_19C1D1184(uint64_t **a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  void *__p;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v18 = 0;
  v19 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    __p = 0;
    v18 = 0;
    v19 = 0;
    v20 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  __p = v8;
  v18 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v19 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v20 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1D147C(a3, (uint64_t)&__p);
    if (__p)
    {
      v18 = (char *)__p;
      operator delete(__p);
    }
  }
  else
  {
    sub_19C1D147C(a3, (uint64_t)&__p);
    __break(1u);
  }
}

void sub_19C1D1318(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1D1338(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

double sub_19C1D1354(unsigned int a1, const void *a2, void *a3, uint64_t a4)
{
  void **v7;
  uint64_t v8;
  double v9;

  v7 = (void **)(*(_QWORD *)a4 + 8);
  if (a1)
    memcpy(*v7, a2, 8 * a1);
  if (a3)
    v8 = *(_QWORD *)a4 + 32;
  else
    v8 = *(_QWORD *)a4 + 56;
  v9 = (*(double (**)(void **, uint64_t, _QWORD))(a4 + 32))(v7, v8, *(_QWORD *)(a4 + 24));
  if (a1 && a3)
    memcpy(a3, *(const void **)(*(_QWORD *)a4 + 32), 8 * a1);
  return v9;
}

double sub_19C1D13E4(void *a1, int a2)
{
  uint64_t **v2;
  int v3;
  int v4;
  int v5;
  int v6;

  if (a2 == 2)
    v3 = -5;
  else
    v3 = -1;
  if (a2 == 3)
    v4 = -4;
  else
    v4 = v3;
  if (a2 == 4)
    v5 = -2;
  else
    v5 = v4;
  if (a2 == 5)
    v6 = -3;
  else
    v6 = v5;
  __cxa_begin_catch(a1);
  *((_DWORD *)*v2 + 24) = v6;
  __cxa_end_catch();
  sub_19C1D144C(*v2);
  return INFINITY;
}

uint64_t *sub_19C1D144C(uint64_t *a1)
{
  int v2;

  v2 = sub_19C23B614(*a1, 1);
  return sub_19C1D01DC(a1, v2);
}

uint64_t sub_19C1D147C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  float64x2_t *v5;
  char *v6;
  uint64_t v7;
  float64x2_t *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  int64x2_t v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  int v21;
  double v22;
  double v23;
  void *v25[3];
  unsigned int v26;
  void *v27;
  char *v28;
  char *v29;
  int v30;
  void *__p[4];

  v3 = *(_QWORD *)(*a1 + 8);
  sub_19C1CD508(a1[1], (uint64_t)v25);
  v4 = v26;
  v28 = 0;
  v29 = 0;
  v27 = 0;
  if (!v26)
  {
    v30 = 0;
    goto LABEL_11;
  }
  if ((v26 & 0x80000000) != 0)
    sub_19C07DA0C();
  v5 = (float64x2_t *)operator new(8 * (int)v26);
  v27 = v5;
  v29 = (char *)&v5->f64[(int)v4];
  bzero(v5, 8 * (int)v4);
  v28 = (char *)&v5->f64[(int)v4];
  v30 = v4;
  v6 = (char *)v25[0];
  if (v4 < 8)
  {
    v7 = 0;
LABEL_9:
    v16 = v4 - v7;
    v17 = v7 << 32;
    do
    {
      *(double *)((char *)v5->f64 + (v17 >> 29)) = (double)*(int *)&v6[v17 >> 30];
      v17 += 0x100000000;
      --v16;
    }
    while (v16);
    goto LABEL_11;
  }
  v7 = v4 & 0xFFFFFFF8;
  v8 = v5 + 2;
  v9 = (char *)v25[0] + 16;
  v10 = v7;
  do
  {
    v11 = *((_OWORD *)v9 - 1);
    v12.i64[0] = (int)v11;
    v12.i64[1] = SDWORD1(v11);
    v13 = vcvtq_f64_s64(v12);
    v12.i64[0] = SDWORD2(v11);
    v12.i64[1] = SHIDWORD(v11);
    v14 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*(_OWORD *)v9;
    v12.i64[1] = (int)HIDWORD(*(_QWORD *)v9);
    v15 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*((_QWORD *)v9 + 1);
    v12.i64[1] = (int)HIDWORD(*(_OWORD *)v9);
    v8[-2] = v13;
    v8[-1] = v14;
    *v8 = v15;
    v8[1] = vcvtq_f64_s64(v12);
    v8 += 4;
    v9 += 32;
    v10 -= 8;
  }
  while (v10);
  if (v7 != v4)
    goto LABEL_9;
LABEL_11:
  sub_19C1CEDDC(a2, (uint64_t)&v27, (uint64_t)__p);
  v18 = sub_19C1CE1EC(*(_QWORD *)(v3 + 8), (const double **)__p);
  v20 = sqrt(v19);
  if (v20 < 0.00000001 || (v21 = *(_DWORD *)(*(_QWORD *)(v3 + 8) + 96), v21 <= 0))
  {
    v22 = (*(double (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  else
  {
    if (*(_DWORD *)(v3 + 56) != v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    (**(void (***)(uint64_t, double, double))v3)(v3, v18, v20);
  }
  v23 = v22;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v27)
  {
    v28 = (char *)v27;
    operator delete(v27);
  }
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
  return *(_QWORD *)&v23;
}

void sub_19C1D167C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  void *v19;

  if (__p)
  {
    operator delete(__p);
    v19 = a9;
    if (!a9)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v19 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v19);
  _Unwind_Resume(exception_object);
}

BOOL sub_19C1D16FC(uint64_t *a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  const void **v11;
  unsigned __int8 *v12;
  uint64_t *v13;
  uint64_t *v14;
  BOOL v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  const void **v24;
  unsigned __int8 *v25;
  uint64_t *v26;
  uint64_t *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 **v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned __int8 *v35;
  int v36;
  unsigned __int8 *v37;
  uint64_t v38;
  _BOOL8 result;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unsigned __int8 **v43;
  _QWORD *v44;
  uint64_t v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  int v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  unsigned __int8 *v53;
  int v54;
  int v55;
  int v56;

  if (a1[8] != a2[8])
    return 0;
  v4 = (uint64_t *)a1[6];
  v5 = a1 + 7;
  if (v4 != a1 + 7)
  {
    v6 = (_QWORD *)a2[6];
    do
    {
      v7 = *((unsigned __int8 *)v4 + 55);
      if ((v7 & 0x80u) == 0)
        v8 = *((unsigned __int8 *)v4 + 55);
      else
        v8 = v4[5];
      v9 = *((unsigned __int8 *)v6 + 55);
      v10 = (char)v9;
      if ((v9 & 0x80u) != 0)
        v9 = v6[5];
      if (v8 != v9)
        return 0;
      v11 = (const void **)(v4 + 4);
      if (v10 >= 0)
        v12 = (unsigned __int8 *)(v6 + 4);
      else
        v12 = (unsigned __int8 *)v6[4];
      if ((v7 & 0x80) != 0)
      {
        if (memcmp(*v11, v12, v4[5]))
          return 0;
      }
      else if (*((_BYTE *)v4 + 55))
      {
        while (*(unsigned __int8 *)v11 == *v12)
        {
          v11 = (const void **)((char *)v11 + 1);
          ++v12;
          if (!--v7)
            goto LABEL_19;
        }
        return 0;
      }
LABEL_19:
      v13 = (uint64_t *)v4[1];
      if (v13)
      {
        do
        {
          v14 = v13;
          v13 = (uint64_t *)*v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          v14 = (uint64_t *)v4[2];
          v15 = *v14 == (_QWORD)v4;
          v4 = v14;
        }
        while (!v15);
      }
      v16 = (_QWORD *)v6[1];
      if (v16)
      {
        do
        {
          v17 = v16;
          v16 = (_QWORD *)*v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          v17 = (_QWORD *)v6[2];
          v15 = *v17 == (_QWORD)v6;
          v6 = v17;
        }
        while (!v15);
      }
      v6 = v17;
      v4 = v14;
    }
    while (v14 != v5);
  }
  if (a1[11] != a2[11])
    return 0;
  v18 = (uint64_t *)a1[9];
  if (v18 != a1 + 10)
  {
    v19 = (_QWORD *)a2[9];
    do
    {
      v20 = *((unsigned __int8 *)v18 + 55);
      if ((v20 & 0x80u) == 0)
        v21 = *((unsigned __int8 *)v18 + 55);
      else
        v21 = v18[5];
      v22 = *((unsigned __int8 *)v19 + 55);
      v23 = (char)v22;
      if ((v22 & 0x80u) != 0)
        v22 = v19[5];
      if (v21 != v22)
        return 0;
      v24 = (const void **)(v18 + 4);
      if (v23 >= 0)
        v25 = (unsigned __int8 *)(v19 + 4);
      else
        v25 = (unsigned __int8 *)v19[4];
      if ((v20 & 0x80) != 0)
      {
        if (memcmp(*v24, v25, v18[5]))
          return 0;
      }
      else if (*((_BYTE *)v18 + 55))
      {
        while (*(unsigned __int8 *)v24 == *v25)
        {
          v24 = (const void **)((char *)v24 + 1);
          ++v25;
          if (!--v20)
            goto LABEL_48;
        }
        return 0;
      }
LABEL_48:
      v26 = (uint64_t *)v18[1];
      if (v26)
      {
        do
        {
          v27 = v26;
          v26 = (uint64_t *)*v26;
        }
        while (v26);
      }
      else
      {
        do
        {
          v27 = (uint64_t *)v18[2];
          v15 = *v27 == (_QWORD)v18;
          v18 = v27;
        }
        while (!v15);
      }
      v28 = (_QWORD *)v19[1];
      if (v28)
      {
        do
        {
          v29 = v28;
          v28 = (_QWORD *)*v28;
        }
        while (v28);
      }
      else
      {
        do
        {
          v29 = (_QWORD *)v19[2];
          v15 = *v29 == (_QWORD)v19;
          v19 = v29;
        }
        while (!v15);
      }
      v19 = v29;
      v18 = v27;
    }
    while (v27 != a1 + 10);
  }
  v31 = *a1;
  v30 = a1[1];
  v32 = (unsigned __int8 **)*a2;
  if (v30 - *a1 != a2[1] - *a2)
    return 0;
  for (; v31 != v30; v32 += 7)
  {
    v33 = *(unsigned __int8 *)(v31 + 23);
    if ((v33 & 0x80u) == 0)
      v34 = (unsigned __int8 *)*(unsigned __int8 *)(v31 + 23);
    else
      v34 = *(unsigned __int8 **)(v31 + 8);
    v35 = (unsigned __int8 *)*((unsigned __int8 *)v32 + 23);
    v36 = (char)v35;
    if ((char)v35 < 0)
      v35 = v32[1];
    if (v34 != v35)
      return 0;
    if (v36 >= 0)
      v37 = (unsigned __int8 *)v32;
    else
      v37 = *v32;
    if ((v33 & 0x80) != 0)
    {
      if (memcmp(*(const void **)v31, v37, *(_QWORD *)(v31 + 8)))
        return 0;
    }
    else if (*(_BYTE *)(v31 + 23))
    {
      v38 = 0;
      while (*(unsigned __int8 *)(v31 + v38) == v37[v38])
      {
        if (v33 == ++v38)
          goto LABEL_77;
      }
      return 0;
    }
LABEL_77:
    result = sub_19C1D1B20(v31 + 24, (uint64_t)(v32 + 3), 0.000001);
    if (!result)
      return result;
    v31 += 56;
  }
  v42 = a1 + 3;
  v40 = a1[3];
  v41 = v42[1];
  v44 = a2 + 3;
  v43 = (unsigned __int8 **)a2[3];
  if (v41 - v40 != v44[1] - (_QWORD)v43)
    return 0;
  if (v40 != v41)
  {
    while (1)
    {
      v45 = *(unsigned __int8 *)(v40 + 23);
      if ((v45 & 0x80u) == 0)
        v46 = (unsigned __int8 *)*(unsigned __int8 *)(v40 + 23);
      else
        v46 = *(unsigned __int8 **)(v40 + 8);
      v47 = (unsigned __int8 *)*((unsigned __int8 *)v43 + 23);
      v48 = (char)v47;
      if ((char)v47 < 0)
        v47 = v43[1];
      if (v46 != v47)
        return 0;
      if (v48 >= 0)
        v49 = (unsigned __int8 *)v43;
      else
        v49 = *v43;
      if ((v45 & 0x80) != 0)
      {
        if (memcmp(*(const void **)v40, v49, *(_QWORD *)(v40 + 8)))
          return 0;
      }
      else if (*(_BYTE *)(v40 + 23))
      {
        v50 = 0;
        while (*(unsigned __int8 *)(v40 + v50) == v49[v50])
        {
          if (v45 == ++v50)
            goto LABEL_97;
        }
        return 0;
      }
LABEL_97:
      v51 = *(int *)(v40 + 48);
      if ((_DWORD)v51 != *((_DWORD *)v43 + 12))
        return 0;
      if ((_DWORD)v51)
      {
        v52 = *(int **)(v40 + 24);
        v53 = v43[3];
        do
        {
          v55 = *v52++;
          v54 = v55;
          v56 = *(_DWORD *)v53;
          v53 += 4;
          if (v54 != v56)
            return 0;
        }
        while (--v51);
      }
      v40 += 56;
      v43 += 7;
      result = 1;
      if (v40 == v41)
        return result;
    }
  }
  return 1;
}

BOOL sub_19C1D1B20(uint64_t a1, uint64_t a2, double a3)
{
  int v3;
  uint64_t v6;
  const void *v7;
  int64_t v8;
  char *v9;
  char *v10;
  void *v12;
  double v13;
  double v14;

  v3 = *(_DWORD *)(a1 + 24);
  if (v3 != *(_DWORD *)(a2 + 24))
    return 0;
  v7 = *(const void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v8 = v6 - *(_QWORD *)a1;
  if (v6 == *(_QWORD *)a1)
  {
    v10 = 0;
    v9 = 0;
  }
  else
  {
    if (v8 < 0)
      sub_19C07DA0C();
    v9 = (char *)operator new(v6 - *(_QWORD *)a1);
    v10 = &v9[8 * (v8 >> 3)];
    memcpy(v9, v7, v8);
  }
  vDSP_vsubD(*(const double **)a2, 1, (const double *)v9, 1, (double *)v9, 1, v3);
  if (v10 == v9)
  {
    v12 = 0;
  }
  else
  {
    if (v10 - v9 < 0)
      sub_19C07DA0C();
    v12 = operator new(v10 - v9);
    memcpy(v12, v9, v10 - v9);
  }
  cblas_dnrm2_NEWLAPACK();
  v14 = v13;
  if (v12)
    operator delete(v12);
  if (v9)
    operator delete(v9);
  return v14 <= a3;
}

void sub_19C1D1C74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;

  if (v15)
    operator delete(v15);
  if (v14)
    operator delete(v14);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_19C1D1CCC(uint64_t ***a1, uint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  uint64_t **v7;
  uint64_t **v8;
  uint64_t **v9;
  uint64_t **v10;
  char **v11;
  char **v12;
  char **v13;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((char *)a1[1] - (char *)*a1) >> 5);
  v4 = v3 + 1;
  if (v3 + 1 > 0x2AAAAAAAAAAAAAALL)
    sub_19C07DA0C();
  if (0x5555555555555556 * (((char *)a1[2] - (char *)*a1) >> 5) > v4)
    v4 = 0x5555555555555556 * (((char *)a1[2] - (char *)*a1) >> 5);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a1[2] - (char *)*a1) >> 5) >= 0x155555555555555)
    v6 = 0x2AAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x2AAAAAAAAAAAAAALL)
      sub_19C07C7FC();
    v7 = (uint64_t **)operator new(96 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[12 * v6];
  v9 = sub_19C1C1840(&v7[12 * v3], a2);
  v10 = v9 + 12;
  v12 = (char **)*a1;
  v11 = (char **)a1[1];
  if (v11 == (char **)*a1)
  {
    *a1 = v9;
    a1[1] = v10;
    a1[2] = v8;
    if (!v11)
      return v10;
    goto LABEL_17;
  }
  do
  {
    v11 -= 12;
    v9 = sub_19C1C5D14(v9 - 12, (uint64_t)v11);
  }
  while (v11 != v12);
  v13 = (char **)*a1;
  v11 = (char **)a1[1];
  *a1 = v9;
  a1[1] = v10;
  a1[2] = v8;
  if (v11 != v13)
  {
    do
    {
      v11 -= 12;
      sub_19C17B808(v11);
    }
    while (v11 != v13);
    v11 = v13;
  }
  if (v11)
LABEL_17:
    operator delete(v11);
  return v10;
}

void sub_19C1D1E0C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x1E0DE5048] + 16;
  __cxa_throw(exception, MEMORY[0x1E0DE4E90], MEMORY[0x1E0DE4380]);
}

void sub_19C1D1E40(uint64_t a1, std::string *__str, std::string *a3, unint64_t a4)
{
  std::string *v6;
  uint64_t v8;
  int v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  void *v13;
  std::string *v14;
  std::string *v15;
  std::string *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;

  v6 = __str;
  v9 = a1 + 16;
  v8 = *(_QWORD *)(a1 + 16);
  v10 = *(std::string **)a1;
  if (0x6DB6DB6DB6DB6DB7 * ((v8 - *(_QWORD *)a1) >> 3) < a4)
  {
    if (v10)
    {
      v11 = *(std::string **)(a1 + 8);
      v12 = *(std::string **)a1;
      if (v11 != v10)
      {
        do
        {
          v13 = (void *)v11[-2].__r_.__value_.__r.__words[2];
          if (v13)
          {
            v11[-1].__r_.__value_.__r.__words[0] = (std::string::size_type)v13;
            operator delete(v13);
          }
          if (v11[-2].__r_.__value_.__s.__data_[15] < 0)
            operator delete((void *)v11[-3].__r_.__value_.__r.__words[2]);
          v11 = (std::string *)((char *)v11 - 56);
        }
        while (v11 != v10);
        v12 = *(std::string **)a1;
      }
      *(_QWORD *)(a1 + 8) = v10;
      operator delete(v12);
      v8 = 0;
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
    }
    if (a4 > 0x492492492492492)
      goto LABEL_48;
    v17 = 0x6DB6DB6DB6DB6DB7 * (v8 >> 3);
    v18 = 2 * v17;
    if (2 * v17 <= a4)
      v18 = a4;
    v19 = v17 >= 0x249249249249249 ? 0x492492492492492 : v18;
    if (v19 > 0x492492492492492)
LABEL_48:
      sub_19C07DA0C();
    v20 = 56 * v19;
    v10 = (std::string *)operator new(56 * v19);
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = (char *)v10 + v20;
    if (v6 != a3)
    {
      v21 = 0;
      do
      {
        sub_19C17BD30(v9, &v10->__r_.__value_.__r.__words[v21 / 8], (__int128 *)((char *)v6 + v21));
        v21 += 56;
      }
      while ((std::string *)((char *)v6 + v21) != a3);
      v10 = (std::string *)((char *)v10 + v21);
    }
LABEL_35:
    *(_QWORD *)(a1 + 8) = v10;
    return;
  }
  v14 = *(std::string **)(a1 + 8);
  if (0x6DB6DB6DB6DB6DB7 * (((char *)v14 - (char *)v10) >> 3) >= a4)
  {
    if (__str != a3)
    {
      do
      {
        std::string::operator=(v10, v6);
        if (v10 != v6)
          sub_19C11EAD0(v10[1].__r_.__value_.__r.__words, v6[1].__r_.__value_.__l.__data_, (char *)v6[1].__r_.__value_.__l.__size_, (uint64_t)(v6[1].__r_.__value_.__l.__size_ - v6[1].__r_.__value_.__r.__words[0]) >> 3);
        LODWORD(v10[2].__r_.__value_.__l.__data_) = v6[2].__r_.__value_.__l.__data_;
        v10 = (std::string *)((char *)v10 + 56);
        v6 = (std::string *)((char *)v6 + 56);
      }
      while (v6 != a3);
      v14 = *(std::string **)(a1 + 8);
    }
    while (v14 != v10)
    {
      v23 = (void *)v14[-2].__r_.__value_.__r.__words[2];
      if (v23)
      {
        v14[-1].__r_.__value_.__r.__words[0] = (std::string::size_type)v23;
        operator delete(v23);
      }
      if (v14[-2].__r_.__value_.__s.__data_[15] < 0)
        operator delete((void *)v14[-3].__r_.__value_.__r.__words[2]);
      v14 = (std::string *)((char *)v14 - 56);
    }
    goto LABEL_35;
  }
  v15 = (std::string *)((char *)__str + 8 * (((char *)v14 - (char *)v10) >> 3));
  if (v14 != v10)
  {
    do
    {
      std::string::operator=(v10, v6);
      if (v10 != v6)
        sub_19C11EAD0(v10[1].__r_.__value_.__r.__words, v6[1].__r_.__value_.__l.__data_, (char *)v6[1].__r_.__value_.__l.__size_, (uint64_t)(v6[1].__r_.__value_.__l.__size_ - v6[1].__r_.__value_.__r.__words[0]) >> 3);
      LODWORD(v10[2].__r_.__value_.__l.__data_) = v6[2].__r_.__value_.__l.__data_;
      v6 = (std::string *)((char *)v6 + 56);
      v10 = (std::string *)((char *)v10 + 56);
    }
    while (v6 != v15);
    v10 = *(std::string **)(a1 + 8);
    v16 = v10;
    if (v15 == a3)
      goto LABEL_40;
    goto LABEL_37;
  }
  v16 = *(std::string **)a1;
  if (v15 != a3)
  {
LABEL_37:
    v22 = 0;
    do
    {
      sub_19C17BD30(v9, &v10->__r_.__value_.__r.__words[v22 / 8], (__int128 *)((char *)v15 + v22));
      v22 += 56;
    }
    while ((std::string *)((char *)v15 + v22) != a3);
    v16 = (std::string *)((char *)v10 + v22);
  }
LABEL_40:
  *(_QWORD *)(a1 + 8) = v16;
}

void sub_19C1D2178(uint64_t a1, std::string *__str, std::string *a3, unint64_t a4)
{
  std::string *v6;
  uint64_t v8;
  int v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  void *v13;
  std::string *v14;
  std::string *v15;
  std::string *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;

  v6 = __str;
  v9 = a1 + 16;
  v8 = *(_QWORD *)(a1 + 16);
  v10 = *(std::string **)a1;
  if (0x6DB6DB6DB6DB6DB7 * ((v8 - *(_QWORD *)a1) >> 3) < a4)
  {
    if (v10)
    {
      v11 = *(std::string **)(a1 + 8);
      v12 = *(std::string **)a1;
      if (v11 != v10)
      {
        do
        {
          v13 = (void *)v11[-2].__r_.__value_.__r.__words[2];
          if (v13)
          {
            v11[-1].__r_.__value_.__r.__words[0] = (std::string::size_type)v13;
            operator delete(v13);
          }
          if (v11[-2].__r_.__value_.__s.__data_[15] < 0)
            operator delete((void *)v11[-3].__r_.__value_.__r.__words[2]);
          v11 = (std::string *)((char *)v11 - 56);
        }
        while (v11 != v10);
        v12 = *(std::string **)a1;
      }
      *(_QWORD *)(a1 + 8) = v10;
      operator delete(v12);
      v8 = 0;
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
    }
    if (a4 > 0x492492492492492)
      goto LABEL_48;
    v17 = 0x6DB6DB6DB6DB6DB7 * (v8 >> 3);
    v18 = 2 * v17;
    if (2 * v17 <= a4)
      v18 = a4;
    v19 = v17 >= 0x249249249249249 ? 0x492492492492492 : v18;
    if (v19 > 0x492492492492492)
LABEL_48:
      sub_19C07DA0C();
    v20 = 56 * v19;
    v10 = (std::string *)operator new(56 * v19);
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = (char *)v10 + v20;
    if (v6 != a3)
    {
      v21 = 0;
      do
      {
        sub_19C17BF30(v9, &v10->__r_.__value_.__r.__words[v21 / 8], (__int128 *)((char *)v6 + v21));
        v21 += 56;
      }
      while ((std::string *)((char *)v6 + v21) != a3);
      v10 = (std::string *)((char *)v10 + v21);
    }
LABEL_35:
    *(_QWORD *)(a1 + 8) = v10;
    return;
  }
  v14 = *(std::string **)(a1 + 8);
  if (0x6DB6DB6DB6DB6DB7 * (((char *)v14 - (char *)v10) >> 3) >= a4)
  {
    if (__str != a3)
    {
      do
      {
        std::string::operator=(v10, v6);
        if (v10 != v6)
          sub_19C1CDB58(v10[1].__r_.__value_.__r.__words, v6[1].__r_.__value_.__l.__data_, (char *)v6[1].__r_.__value_.__l.__size_, (uint64_t)(v6[1].__r_.__value_.__l.__size_ - v6[1].__r_.__value_.__r.__words[0]) >> 2);
        LODWORD(v10[2].__r_.__value_.__l.__data_) = v6[2].__r_.__value_.__l.__data_;
        v10 = (std::string *)((char *)v10 + 56);
        v6 = (std::string *)((char *)v6 + 56);
      }
      while (v6 != a3);
      v14 = *(std::string **)(a1 + 8);
    }
    while (v14 != v10)
    {
      v23 = (void *)v14[-2].__r_.__value_.__r.__words[2];
      if (v23)
      {
        v14[-1].__r_.__value_.__r.__words[0] = (std::string::size_type)v23;
        operator delete(v23);
      }
      if (v14[-2].__r_.__value_.__s.__data_[15] < 0)
        operator delete((void *)v14[-3].__r_.__value_.__r.__words[2]);
      v14 = (std::string *)((char *)v14 - 56);
    }
    goto LABEL_35;
  }
  v15 = (std::string *)((char *)__str + 8 * (((char *)v14 - (char *)v10) >> 3));
  if (v14 != v10)
  {
    do
    {
      std::string::operator=(v10, v6);
      if (v10 != v6)
        sub_19C1CDB58(v10[1].__r_.__value_.__r.__words, v6[1].__r_.__value_.__l.__data_, (char *)v6[1].__r_.__value_.__l.__size_, (uint64_t)(v6[1].__r_.__value_.__l.__size_ - v6[1].__r_.__value_.__r.__words[0]) >> 2);
      LODWORD(v10[2].__r_.__value_.__l.__data_) = v6[2].__r_.__value_.__l.__data_;
      v6 = (std::string *)((char *)v6 + 56);
      v10 = (std::string *)((char *)v10 + 56);
    }
    while (v6 != v15);
    v10 = *(std::string **)(a1 + 8);
    v16 = v10;
    if (v15 == a3)
      goto LABEL_40;
    goto LABEL_37;
  }
  v16 = *(std::string **)a1;
  if (v15 != a3)
  {
LABEL_37:
    v22 = 0;
    do
    {
      sub_19C17BF30(v9, &v10->__r_.__value_.__r.__words[v22 / 8], (__int128 *)((char *)v15 + v22));
      v22 += 56;
    }
    while ((std::string *)((char *)v15 + v22) != a3);
    v16 = (std::string *)((char *)v10 + v22);
  }
LABEL_40:
  *(_QWORD *)(a1 + 8) = v16;
}

void sub_19C1D24B0(uint64_t **a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t **v15;
  uint64_t **v16;
  int v17;
  size_t v18;
  const void *v19;
  _QWORD *v20;
  const void *v21;
  const void *v22;
  int v23;
  size_t v24;
  const void *v25;
  size_t v26;
  int v27;
  _BOOL4 v28;
  uint64_t *v29;
  uint64_t *v30;
  _QWORD *v31;
  BOOL v32;
  uint64_t *v33;
  uint64_t **v34;
  uint64_t *i;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;

  v5 = a1;
  if (a1[2])
  {
    v6 = *a1;
    v8 = a1 + 1;
    v7 = a1[1];
    *a1 = (uint64_t *)(a1 + 1);
    v7[2] = 0;
    a1[1] = 0;
    a1[2] = 0;
    if (v6[1])
      v9 = (uint64_t *)v6[1];
    else
      v9 = v6;
    v39 = (uint64_t)a1;
    v41 = v9;
    if (!v9)
      goto LABEL_65;
    v10 = (uint64_t *)v9[2];
    if (v10)
    {
      v11 = (uint64_t *)*v10;
      if ((uint64_t *)*v10 == v9)
      {
        *v10 = 0;
        while (1)
        {
          v38 = (uint64_t *)v10[1];
          if (!v38)
            break;
          do
          {
            v10 = v38;
            v38 = (uint64_t *)*v38;
          }
          while (v38);
        }
      }
      else
      {
        for (v10[1] = 0; v11; v11 = (uint64_t *)v10[1])
        {
          do
          {
            v10 = v11;
            v11 = (uint64_t *)*v11;
          }
          while (v11);
        }
      }
    }
    v40 = v10;
    if (a2 == a3)
    {
      v34 = a1;
      sub_19C098FBC((uint64_t)a1, (char *)v9);
      if (!v10)
        goto LABEL_66;
      goto LABEL_62;
    }
    v12 = a2;
    while (1)
    {
      std::string::operator=((std::string *)(v9 + 4), (const std::string *)(v12 + 4));
      v13 = v41;
      v14 = *v8;
      v15 = v5 + 1;
      v16 = v5 + 1;
      if (!*v8)
        break;
      v17 = *((char *)v41 + 55);
      if (v17 >= 0)
        v18 = *((unsigned __int8 *)v41 + 55);
      else
        v18 = v41[5];
      if (v17 >= 0)
        v19 = v41 + 4;
      else
        v19 = (const void *)v41[4];
      do
      {
        while (1)
        {
          v15 = (uint64_t **)v14;
          v22 = (const void *)v14[4];
          v20 = v14 + 4;
          v21 = v22;
          v23 = *((char *)v20 + 23);
          if (v23 >= 0)
            v24 = *((unsigned __int8 *)v20 + 23);
          else
            v24 = v20[1];
          if (v23 >= 0)
            v25 = v20;
          else
            v25 = v21;
          if (v24 >= v18)
            v26 = v18;
          else
            v26 = v24;
          v27 = memcmp(v19, v25, v26);
          v28 = v18 < v24;
          if (v27)
            v28 = v27 < 0;
          if (!v28)
            break;
          v14 = *v15;
          v16 = v15;
          if (!*v15)
            goto LABEL_34;
        }
        v14 = v15[1];
      }
      while (v14);
      v16 = v15 + 1;
      *v41 = 0;
      v41[1] = 0;
      v41[2] = (uint64_t)v15;
      v15[1] = v41;
      v29 = (uint64_t *)**v5;
      if (v29)
        goto LABEL_35;
LABEL_36:
      sub_19C07CC40(v5[1], v13);
      v5[2] = (uint64_t *)((char *)v5[2] + 1);
      v9 = v40;
      v41 = v40;
      if (v40)
      {
        v10 = (uint64_t *)v40[2];
        if (v10)
        {
          v30 = (uint64_t *)*v10;
          if ((uint64_t *)*v10 == v40)
          {
            *v10 = 0;
            while (1)
            {
              v33 = (uint64_t *)v10[1];
              if (!v33)
                break;
              do
              {
                v10 = v33;
                v33 = (uint64_t *)*v33;
              }
              while (v33);
            }
          }
          else
          {
            for (v10[1] = 0; v30; v30 = (uint64_t *)v10[1])
            {
              do
              {
                v10 = v30;
                v30 = (uint64_t *)*v30;
              }
              while (v30);
            }
          }
        }
        v40 = v10;
        v31 = (_QWORD *)v12[1];
        if (v31)
        {
          do
          {
LABEL_45:
            a2 = v31;
            v31 = (_QWORD *)*v31;
          }
          while (v31);
          goto LABEL_49;
        }
      }
      else
      {
        v10 = 0;
        v31 = (_QWORD *)v12[1];
        if (v31)
          goto LABEL_45;
      }
      do
      {
        a2 = (_QWORD *)v12[2];
        v32 = *a2 == (_QWORD)v12;
        v12 = a2;
      }
      while (!v32);
LABEL_49:
      if (v9)
      {
        v12 = a2;
        if (a2 != a3)
          continue;
      }
      v34 = (uint64_t **)v39;
      sub_19C098FBC(v39, (char *)v9);
      if (!v10)
        goto LABEL_66;
LABEL_62:
      for (i = (uint64_t *)v10[2]; i; i = (uint64_t *)i[2])
        v10 = i;
      a1 = v34;
      v9 = v10;
LABEL_65:
      sub_19C098FBC((uint64_t)a1, (char *)v9);
      goto LABEL_66;
    }
LABEL_34:
    *v41 = 0;
    v41[1] = 0;
    v41[2] = (uint64_t)v15;
    *v16 = v41;
    v29 = (uint64_t *)**v5;
    if (!v29)
      goto LABEL_36;
LABEL_35:
    *v5 = v29;
    v13 = *v16;
    goto LABEL_36;
  }
LABEL_66:
  if (a2 != a3)
  {
    do
    {
      sub_19C1D2844(v5, (uint64_t)(a2 + 4));
      v36 = (_QWORD *)a2[1];
      if (v36)
      {
        do
        {
          v37 = v36;
          v36 = (_QWORD *)*v36;
        }
        while (v36);
      }
      else
      {
        do
        {
          v37 = (_QWORD *)a2[2];
          v32 = *v37 == (_QWORD)a2;
          a2 = v37;
        }
        while (!v32);
      }
      a2 = v37;
    }
    while (v37 != a3);
  }
}

void sub_19C1D27DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_19C1D27F0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1D27F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_19C098FBC(*(_QWORD *)a1, *(char **)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = *(_QWORD *)(v3 + 16);
      }
      while (v3);
      *(_QWORD *)(a1 + 8) = v2;
    }
    sub_19C098FBC(*(_QWORD *)a1, (char *)v2);
  }
  return a1;
}

char *sub_19C1D2844(uint64_t **a1, uint64_t a2)
{
  char *v4;
  char *v5;
  _OWORD *v6;
  uint64_t *v7;
  uint64_t **v8;
  int v9;
  size_t v10;
  _QWORD *v11;
  const void *v12;
  const void *v13;
  int v14;
  size_t v15;
  const void *v16;
  size_t v17;
  int v18;
  _BOOL4 v19;
  uint64_t **v20;
  uint64_t *v21;
  uint64_t *v22;

  v4 = (char *)operator new(0x38uLL);
  v5 = v4;
  v6 = v4 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_19C07C6E8(v4 + 32, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *v6 = *(_OWORD *)a2;
    *((_QWORD *)v4 + 6) = *(_QWORD *)(a2 + 16);
  }
  v8 = a1 + 1;
  v7 = a1[1];
  if (v7)
  {
    v9 = v5[55];
    if (v9 >= 0)
      v10 = v5[55];
    else
      v10 = *((_QWORD *)v5 + 5);
    if (v9 < 0)
      v6 = (_OWORD *)*((_QWORD *)v5 + 4);
    do
    {
      while (1)
      {
        v8 = (uint64_t **)v7;
        v13 = (const void *)v7[4];
        v11 = v7 + 4;
        v12 = v13;
        v14 = *((char *)v11 + 23);
        if (v14 >= 0)
          v15 = *((unsigned __int8 *)v11 + 23);
        else
          v15 = v11[1];
        if (v14 >= 0)
          v16 = v11;
        else
          v16 = v12;
        if (v15 >= v10)
          v17 = v10;
        else
          v17 = v15;
        v18 = memcmp(v6, v16, v17);
        v19 = v10 < v15;
        if (v18)
          v19 = v18 < 0;
        if (!v19)
          break;
        v7 = *v8;
        v20 = v8;
        if (!*v8)
          goto LABEL_28;
      }
      v7 = v8[1];
    }
    while (v7);
    v20 = v8 + 1;
  }
  else
  {
    v20 = a1 + 1;
  }
LABEL_28:
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = v8;
  *v20 = (uint64_t *)v5;
  v21 = (uint64_t *)**a1;
  v22 = (uint64_t *)v5;
  if (v21)
  {
    *a1 = v21;
    v22 = *v20;
  }
  sub_19C07CC40(a1[1], v22);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v5;
}

void sub_19C1D2980(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_19C1D2994(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v2 = (void *)a1[33];
  if (v2)
  {
    a1[34] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[29];
  if (v3)
  {
    a1[30] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[25];
  if (v4)
  {
    a1[26] = v4;
    operator delete(v4);
  }
  v5 = (void *)a1[21];
  if (v5)
  {
    a1[22] = v5;
    operator delete(v5);
  }
  v6 = (void *)a1[17];
  if (v6)
  {
    a1[18] = v6;
    operator delete(v6);
  }
  v7 = (void *)a1[13];
  if (v7)
  {
    a1[14] = v7;
    operator delete(v7);
  }
  v8 = (void *)a1[9];
  if (v8)
  {
    a1[10] = v8;
    operator delete(v8);
  }
  v9 = (void *)a1[5];
  if (v9)
  {
    a1[6] = v9;
    operator delete(v9);
  }
  return a1;
}

uint64_t sub_19C1D2A34(uint64_t a1)
{
  char **v2;
  char **v3;
  char **v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char **v13;
  char **v14;
  void *v15;

  *(_QWORD *)a1 = &unk_1E3D21708;
  v2 = *(char ***)(a1 + 10656);
  if (v2)
  {
    v3 = *(char ***)(a1 + 10664);
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 12);
      while (v3 != v2);
      v4 = *(char ***)(a1 + 10656);
    }
    *(_QWORD *)(a1 + 10664) = v2;
    operator delete(v4);
  }
  std::random_device::~random_device((std::random_device *)(a1 + 10648));
  std::random_device::~random_device((std::random_device *)(a1 + 8104));
  std::random_device::~random_device((std::random_device *)(a1 + 5584));
  std::random_device::~random_device((std::random_device *)(a1 + 3056));
  v5 = *(_QWORD *)(a1 + 544);
  *(_QWORD *)(a1 + 544) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  *(_QWORD *)(a1 + 480) = &unk_1E3D20EA8;
  v6 = *(void **)(a1 + 496);
  if (v6)
  {
    *(_QWORD *)(a1 + 504) = v6;
    operator delete(v6);
  }
  sub_19C1D2994((_QWORD *)(a1 + 176));
  v7 = *(_QWORD *)(a1 + 152);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 160);
    v9 = *(void **)(a1 + 152);
    if (v8 != v7)
    {
      v10 = *(_QWORD *)(a1 + 160);
      do
      {
        v12 = *(void **)(v10 - 56);
        v10 -= 56;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v8 - 48) = v11;
          operator delete(v11);
        }
        v8 = v10;
      }
      while (v10 != v7);
      v9 = *(void **)(a1 + 152);
    }
    *(_QWORD *)(a1 + 160) = v7;
    operator delete(v9);
  }
  *(_QWORD *)a1 = &unk_1E3D214F8;
  sub_19C1C2E88(a1 + 32);
  v13 = *(char ***)(a1 + 8);
  if (v13)
  {
    v14 = *(char ***)(a1 + 16);
    v15 = *(void **)(a1 + 8);
    if (v14 != v13)
    {
      do
        v14 = sub_19C17B808(v14 - 13);
      while (v14 != v13);
      v15 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v13;
    operator delete(v15);
  }
  return a1;
}

uint64_t sub_19C1D2BAC(uint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  int64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  void *v32;
  void *v33;
  char *v36;
  uint64_t v37;

  v6 = *a1;
  v7 = a1[1];
  v8 = 0x6DB6DB6DB6DB6DB7 * ((v7 - *a1) >> 3);
  v9 = v8 + 1;
  if ((unint64_t)(v8 + 1) > 0x492492492492492)
    sub_19C07DA0C();
  v12 = a2;
  if (0xDB6DB6DB6DB6DB6ELL * ((a1[2] - v6) >> 3) > v9)
    v9 = 0xDB6DB6DB6DB6DB6ELL * ((a1[2] - v6) >> 3);
  if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((a1[2] - v6) >> 3)) >= 0x249249249249249)
    v13 = 0x492492492492492;
  else
    v13 = v9;
  v37 = v7 - *a1;
  if (v13)
  {
    if (v13 > 0x492492492492492)
      sub_19C07C7FC();
    v14 = a1[1];
    v15 = a3;
    v16 = (char *)operator new(56 * v13);
    a3 = v15;
    v7 = v14;
    v12 = a2;
  }
  else
  {
    v16 = 0;
  }
  v17 = (uint64_t)&v16[56 * v8];
  v18 = &v16[56 * v13];
  v19 = *a3;
  v20 = *a4;
  v21 = *a5;
  *(_QWORD *)(v17 + 8) = 0;
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)v17 = 0;
  v23 = *(const void **)v12;
  v22 = *(_QWORD *)(v12 + 8);
  v24 = v22 - *(_QWORD *)v12;
  if (v22 != *(_QWORD *)v12)
  {
    if (v24 < 0)
      sub_19C07DA0C();
    v36 = v18;
    v25 = (char *)operator new(v24);
    *(_QWORD *)v17 = v25;
    *(_QWORD *)(v17 + 8) = v25;
    v26 = &v25[8 * (v24 >> 3)];
    *(_QWORD *)(v17 + 16) = v26;
    memcpy(v25, v23, v24);
    *(_QWORD *)(v17 + 8) = v26;
    v18 = v36;
  }
  *(_DWORD *)(v17 + 24) = *(_DWORD *)(v12 + 24);
  v27 = &v16[v37];
  *((_QWORD *)v27 + 4) = v19;
  *((_QWORD *)v27 + 5) = v20;
  *((_QWORD *)v27 + 6) = v21;
  sub_19C1D2E74((uint64_t)(a1 + 2), v7, v7, v6, v6, v17, v17);
  v29 = (char *)*a1;
  v28 = (char *)a1[1];
  *a1 = v30;
  a1[1] = v17 + 56;
  a1[2] = (uint64_t)v18;
  if (v28 != v29)
  {
    v31 = v28;
    do
    {
      v33 = (void *)*((_QWORD *)v31 - 7);
      v31 -= 56;
      v32 = v33;
      if (v33)
      {
        *((_QWORD *)v28 - 6) = v32;
        operator delete(v32);
      }
      v28 = v31;
    }
    while (v31 != v29);
  }
  if (v29)
    operator delete(v29);
  return v17 + 56;
}

void sub_19C1D2DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_19C1D2E08((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_19C1D2DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  void *v6;
  va_list va;

  va_start(va, a4);
  v6 = *(void **)v4;
  if (*(_QWORD *)v4)
  {
    *(_QWORD *)(v4 + 8) = v6;
    operator delete(v6);
  }
  sub_19C1D2E08((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1D2E08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      while (1)
      {
        v5 = v2 - 56;
        v4 = *(void **)(v2 - 56);
        *(_QWORD *)(a1 + 16) = v2 - 56;
        if (!v4)
          break;
        *(_QWORD *)(v2 - 48) = v4;
        operator delete(v4);
        v2 = *(_QWORD *)(a1 + 16);
        if (v2 == v3)
          goto LABEL_6;
      }
      v2 -= 56;
    }
    while (v5 != v3);
  }
LABEL_6:
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_19C1D2E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  int64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;

  v7 = a7;
  v19 = a6;
  v20 = a7;
  if (a3 != a5)
  {
    v9 = a3;
    v10 = a3;
    do
    {
      *(_QWORD *)(v7 - 56) = 0;
      *(_QWORD *)(v7 - 48) = 0;
      *(_QWORD *)(v7 - 40) = 0;
      v14 = *(_BYTE **)(v10 - 56);
      v13 = *(_BYTE **)(v10 - 48);
      v10 -= 56;
      v15 = v7;
      v16 = v13 - v14;
      if (v13 != v14)
      {
        if (v16 < 0)
          sub_19C07DA0C();
        v17 = (char *)operator new(v13 - v14);
        *(_QWORD *)(v7 - 56) = v17;
        *(_QWORD *)(v7 - 48) = v17;
        v11 = &v17[8 * (v16 >> 3)];
        *(_QWORD *)(v7 - 40) = v11;
        memcpy(v17, v14, v16);
        *(_QWORD *)(v7 - 48) = v11;
        v15 = v20;
      }
      *(_DWORD *)(v7 - 32) = *(_DWORD *)(v9 - 32);
      v12 = *(_QWORD *)(v9 - 8);
      *(_OWORD *)(v7 - 24) = *(_OWORD *)(v9 - 24);
      *(_QWORD *)(v7 - 8) = v12;
      v7 = v15 - 56;
      v20 = v15 - 56;
      v9 = v10;
    }
    while (v10 != a5);
    return v19;
  }
  return a6;
}

void sub_19C1D2F7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  void **v10;
  void *v12;

  v12 = *v10;
  if (*v10)
  {
    *(_QWORD *)(v9 - 48) = v12;
    operator delete(v12);
  }
  sub_19C1D2FA4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1D2FA4(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
    v4 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
    while (v3 != v4)
    {
      v5 = *(void **)v3;
      if (*(_QWORD *)v3)
      {
        *(_QWORD *)(v3 + 8) = v5;
        operator delete(v5);
      }
      v3 += 56;
    }
  }
  return a1;
}

void sub_19C1D3004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  void *__p[4];

  v5 = (uint64_t *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 72);
  v6 = *(_DWORD *)(a1 + 96);
  v7 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 96) = v6 + 1;
  *(_DWORD *)(a1 + 100) = v7;
  v8 = v7 * (v6 + 1);
  v9 = (*(_QWORD *)(a1 + 80) - v4) >> 3;
  if (v8 <= v9)
  {
    if (v8 < v9)
      *(_QWORD *)(a1 + 80) = v4 + 8 * v8;
  }
  else
  {
    sub_19C17C9D8(a1 + 72, v8 - v9);
    v6 = *(_DWORD *)(a1 + 96) - 1;
  }
  sub_19C1CE998(a2, (uint64_t)__p);
  v10 = *(int *)(a1 + 100);
  v11 = (char *)__p[0];
  if (!(_DWORD)v10)
  {
    if (!__p[0])
      goto LABEL_18;
    goto LABEL_17;
  }
  v12 = (int)v10 * (uint64_t)v6;
  v13 = *v5;
  if (v10 >= 8 && (v14 = 8 * v12 + v13, v14 - (unint64_t)__p[0] >= 0x20))
  {
    v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    v20 = (__int128 *)((char *)__p[0] + 16);
    v21 = (_OWORD *)(v14 + 16);
    v22 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v23 = *v20;
      *(v21 - 1) = *(v20 - 1);
      *v21 = v23;
      v20 += 2;
      v21 += 2;
      v22 -= 4;
    }
    while (v22);
    if (v15 == v10)
      goto LABEL_17;
  }
  else
  {
    v15 = 0;
  }
  v16 = v10 - v15;
  v17 = (_QWORD *)(v13 + 8 * (v15 + v12));
  v18 = &v11[8 * v15];
  do
  {
    v19 = *(_QWORD *)v18;
    v18 += 8;
    *v17++ = v19;
    --v16;
  }
  while (v16);
LABEL_17:
  __p[1] = v11;
  operator delete(v11);
LABEL_18:
  sub_19C1D313C(a1, 1, 1);
}

void sub_19C1D313C(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  signed int v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  char *v32;
  char *v33;
  uint64_t v35;
  void *__p;
  void *v37;
  uint64_t v38;
  unsigned int v39;
  char *__C;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  if (a2)
  {
    v5 = (_QWORD *)(a1 + 104);
    v4 = *(_QWORD *)(a1 + 104);
    v6 = *(_DWORD *)(a1 + 96);
    *(_DWORD *)(a1 + 128) = v6;
    v7 = (*(_QWORD *)(a1 + 112) - v4) >> 3;
    v35 = v6;
    if (v6 <= v7)
    {
      if (v6 < v7)
        *(_QWORD *)(a1 + 112) = v4 + 8 * v6;
    }
    else
    {
      sub_19C17C9D8(a1 + 104, v6 - v7);
      v6 = *(_DWORD *)(a1 + 96);
      v35 = v6;
    }
    if (v6)
    {
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *(_QWORD *)(a1 + 72);
        v11 = *(_DWORD *)(a1 + 100);
        __C = 0;
        v41 = 0;
        v42 = 0;
        if (v11)
          break;
        v12 = 0;
        v37 = 0;
        v38 = 0;
        __p = 0;
        v39 = 0;
LABEL_26:
        __C = 0;
        vDSP_meanvD(*(const double **)(a1 + 264), 1, (double *)&__C, *(int *)(a1 + 288));
        *(_QWORD *)(*v5 + 8 * v9) = __C;
        if (__p)
        {
          v37 = __p;
          operator delete(__p);
        }
        if (v12)
          operator delete(v12);
        ++v9;
        v8 += 8;
        if (v9 == v35)
          goto LABEL_34;
      }
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = operator new(8 * v11);
      bzero(v12, 8 * v11);
      if (v11 >= 8 && (unint64_t)v12 - v10 - 8 * v9 * v11 >= 0x20)
      {
        v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
        v28 = (__int128 *)(v10 + v8 * v11 + 16);
        v29 = v12 + 1;
        v30 = v13;
        do
        {
          v31 = *v28;
          *(v29 - 1) = *(v28 - 1);
          *v29 = v31;
          v28 += 2;
          v29 += 2;
          v30 -= 4;
        }
        while (v30);
        if (v13 == v11)
        {
LABEL_16:
          __p = 0;
          v37 = 0;
          v38 = 0;
          v39 = v11;
          sub_19C17C9D8((uint64_t)&__p, v11);
          v19 = v39;
          if ((int)v39 >= 1)
          {
            v20 = 0;
            v21 = (char *)__p;
            if (v39 < 4)
              goto LABEL_22;
            if ((unint64_t)((_BYTE *)__p - (_BYTE *)v12) < 0x20)
              goto LABEL_22;
            v22 = 0;
            v20 = v39 & 0xFFFFFFFC;
            v23 = (8 * v39) & 0x7FFFFFFE0;
            do
            {
              v24 = v12[v22 / 0x10 + 1];
              v25 = &v21[v22];
              *(_OWORD *)v25 = v12[v22 / 0x10];
              *((_OWORD *)v25 + 1) = v24;
              v22 += 32;
            }
            while (v23 != v22);
            if (v20 != v19)
            {
LABEL_22:
              v26 = v19 - v20;
              v27 = v20 << 32;
              do
              {
                *(_QWORD *)&v21[v27 >> 29] = *(_QWORD *)((char *)v12 + (v27 >> 29));
                v27 += 0x100000000;
                --v26;
              }
              while (v26);
            }
          }
          goto LABEL_26;
        }
      }
      else
      {
        v13 = 0;
      }
      v14 = v11 - v13;
      v15 = 8 * v13;
      v16 = (_QWORD *)v12 + v13;
      v17 = (uint64_t *)(v10 + v15 + v8 * v11);
      do
      {
        v18 = *v17++;
        *v16++ = v18;
        --v14;
      }
      while (v14);
      goto LABEL_16;
    }
  }
LABEL_34:
  sub_19C1D34B8(a1 + 8, (uint64_t *)(a1 + 72), (uint64_t)&__C);
  if ((char **)(a1 + 136) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 136), __C, v41, (v41 - __C) >> 3);
  v32 = __C;
  *(_QWORD *)(a1 + 160) = v43;
  if (v32)
  {
    v41 = v32;
    operator delete(v32);
  }
  sub_19C1D3978(a1 + 136, (uint64_t)&__C);
  if ((char **)(a1 + 168) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 168), __C, v41, (v41 - __C) >> 3);
  v33 = __C;
  *(_QWORD *)(a1 + 192) = v43;
  if (v33)
  {
    v41 = v33;
    operator delete(v33);
  }
  sub_19C1D3B78(a1);
  if (a3)
    sub_19C1D3D98((int32x2_t *)a1);
}

void sub_19C1D3454(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1D34B8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  size_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  signed int v12;
  char *v13;
  size_t v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  _OWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  __int128 *v33;
  _OWORD *v34;
  unint64_t v35;
  __int128 v36;
  __int128 *v37;
  _OWORD *v38;
  unint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  char *v55;
  signed int v56;
  void *__p;
  char *v58;
  char *v59;
  signed int v60;

  v4 = *((unsigned int *)a2 + 6);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  if (!(_DWORD)v4)
  {
    v7 = 0;
    *(_DWORD *)(a3 + 24) = 0;
    *(_DWORD *)(a3 + 28) = 0;
LABEL_41:
    v41 = (int)v4;
    if ((_DWORD)v4)
      goto LABEL_42;
    return;
  }
  v6 = 8 * (v4 * v4);
  v7 = (char *)operator new(v6);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 16) = &v7[v6];
  bzero(v7, v6);
  *(_QWORD *)(a3 + 8) = &v7[v6];
  *(_DWORD *)(a3 + 24) = v4;
  *(_DWORD *)(a3 + 28) = v4;
  if ((int)v4 <= 0)
    goto LABEL_41;
  v49 = 0;
  v8 = 0;
  v52 = 1;
  v47 = v4;
  v48 = a1;
  do
  {
    v9 = 0;
    v10 = 0;
    v51 = (int)v8 * v4;
    do
    {
      v11 = *a2;
      v12 = *((_DWORD *)a2 + 7);
      __p = 0;
      v58 = 0;
      v59 = 0;
      if (v12)
      {
        if (v12 < 0)
          sub_19C07DA0C();
        v13 = v7;
        v14 = 8 * v12;
        v15 = operator new(v14);
        bzero(v15, v14);
        if (v12 < 8 || (unint64_t)v15 - v11 - 8 * v8 * v12 < 0x20)
        {
          v16 = 0;
          goto LABEL_12;
        }
        v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v33 = (__int128 *)(v11 + v49 * v12 + 16);
        v34 = v15 + 1;
        v35 = v16;
        do
        {
          v36 = *v33;
          *(v34 - 1) = *(v33 - 1);
          *v34 = v36;
          v33 += 2;
          v34 += 2;
          v35 -= 4;
        }
        while (v35);
        if (v16 != v12)
        {
LABEL_12:
          v17 = v12 - v16;
          v18 = 8 * v16;
          v19 = (_QWORD *)v15 + v16;
          v20 = (uint64_t *)(v11 + v18 + v49 * v12);
          do
          {
            v21 = *v20++;
            *v19++ = v21;
            --v17;
          }
          while (v17);
        }
        v53 = 0;
        v54 = 0;
        v56 = 0;
        v55 = 0;
        v53 = operator new(8 * v12);
        v54 = (char *)v53 + v14;
        v55 = (char *)v53 + 8 * v12;
        v56 = v12;
        memcpy(v53, v15, 8 * v12);
        v22 = operator new(8 * v12);
        bzero(v22, 8 * v12);
        if (v12 < 8 || (unint64_t)v22 - v11 - 8 * v10 * v12 < 0x20)
        {
          v23 = 0;
          goto LABEL_17;
        }
        v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v37 = (__int128 *)(v11 + v9 * v12 + 16);
        v38 = v22 + 1;
        v39 = v23;
        do
        {
          v40 = *v37;
          *(v38 - 1) = *(v37 - 1);
          *v38 = v40;
          v37 += 2;
          v38 += 2;
          v39 -= 4;
        }
        while (v39);
        if (v23 != v12)
        {
LABEL_17:
          v24 = v12 - v23;
          v25 = 8 * v23;
          v26 = (_QWORD *)v22 + v23;
          v27 = (uint64_t *)(v11 + v25 + v9 * v12);
          do
          {
            v28 = *v27++;
            *v26++ = v28;
            --v24;
          }
          while (v24);
        }
        __p = 0;
        v58 = 0;
        v60 = 0;
        v59 = 0;
        v29 = (int)v10;
        __p = operator new(8 * v12);
        v58 = (char *)__p + v14;
        v59 = (char *)__p + 8 * v12;
        v60 = v12;
        memcpy(__p, v22, 8 * v12);
        v7 = v13;
        a1 = v48;
        goto LABEL_21;
      }
      v15 = 0;
      v22 = 0;
      v54 = 0;
      v55 = 0;
      v53 = 0;
      v56 = 0;
      v29 = (int)v10;
      __p = 0;
      v58 = 0;
      v60 = 0;
      v59 = 0;
LABEL_21:
      v30 = *(double *)(a1 + 16);
      v31 = sub_19C1CACA8(a1, (uint64_t)&v53, (const double **)&__p);
      v32 = exp(v31 * -0.5) * v30;
      if ((_DWORD)v8 == (_DWORD)v10)
        v32 = v32 + *(double *)(a1 + 8) + 1.0e-10;
      *(double *)&v7[8 * v29 + 8 * v51] = v32;
      if (__p)
      {
        v58 = (char *)__p;
        operator delete(__p);
      }
      if (v22)
        operator delete(v22);
      if (v53)
      {
        v54 = (char *)v53;
        operator delete(v53);
      }
      if (v15)
        operator delete(v15);
      ++v10;
      v9 += 8;
    }
    while (v10 != v52);
    ++v8;
    ++v52;
    v49 += 8;
    v4 = v47;
  }
  while (v8 != v47);
  v41 = v47;
LABEL_42:
  if (v41 != 1)
  {
    v42 = 0;
    v43 = 8 * v41;
    v44 = v7;
    do
    {
      if (v42)
      {
        v45 = 0;
        v46 = v44;
        do
        {
          *v46 = *(_QWORD *)&v7[8 * v45++];
          v46 = (_QWORD *)((char *)v46 + v43);
        }
        while (v42 != v45);
      }
      ++v42;
      ++v44;
      v7 += v43;
    }
    while (v42 != v41);
  }
}

void sub_19C1D38D4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1D38FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  uint64_t v27;
  void *v28;

  if (__p)
  {
    operator delete(__p);
    v27 = a10;
    if (!v25)
    {
LABEL_3:
      v28 = a18;
      if (!a18)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    v27 = a10;
    if (!v25)
      goto LABEL_3;
  }
  operator delete(v25);
  v28 = a18;
  if (!a18)
  {
LABEL_4:
    if (!v23)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v28);
  if (!v23)
  {
LABEL_5:
    *(_QWORD *)(v27 + 8) = v24;
    operator delete(v24);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(v23);
  *(_QWORD *)(v27 + 8) = v24;
  operator delete(v24);
  _Unwind_Resume(a1);
}

void sub_19C1D3978(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  _OWORD *v18;
  unsigned int v19;
  void *__p[3];
  int v21;
  int v22;
  void *v23;
  char v24;
  void *v25[4];
  int v26;
  int v27;
  int v28;

  v3 = *(_DWORD *)(a1 + 28);
  v27 = *(_DWORD *)(a1 + 24);
  v28 = v3;
  v26 = 0;
  sub_19C1CEB00(a1, v25);
  v24 = 1;
  LOWORD(v23) = 76;
  dpotrf_NEWLAPACK();
  sub_19C1CEB00((uint64_t)v25, __p);
  sub_19C1CE734((uint64_t)__p, a2);
  v4 = v21;
  if (v21 >= 1)
  {
    v5 = 0;
    v6 = v22;
    v7 = *(_DWORD *)(a2 + 28);
    v8 = 1;
    v9 = -1;
    v10 = *(_QWORD *)a2;
    do
    {
      if (v6 <= v8)
        v11 = v8;
      else
        v11 = v6;
      v12 = v5 + 1;
      if ((int)v5 + 1 >= v6)
        goto LABEL_3;
      v13 = 0;
      v14 = v11 + v9;
      v15 = (int)v5 * (uint64_t)v7;
      if ((v11 + v9) < 4)
      {
        v16 = v5 + 1;
      }
      else
      {
        v16 = v5 + 1;
        if (v11 - (int)v5 + v8 - 2 >= v8)
        {
          v17 = 0;
          v13 = v14 & 0xFFFFFFFC;
          v16 = v12 + (v14 & 0xFFFFFFFC);
          do
          {
            v18 = (_OWORD *)(v10 + 8 * (v15 + v8 + v17));
            *v18 = 0uLL;
            v18[1] = 0uLL;
            v17 += 4;
          }
          while ((v14 & 0xFFFFFFFC) != v17);
          if (v14 == v13)
            goto LABEL_3;
        }
      }
      v19 = v11 - v13;
      do
      {
        *(_QWORD *)(v10 + 8 * (v15 + v16)) = 0;
        v16 = ++v13 + v12;
        --v19;
      }
      while (v8 != v19);
LABEL_3:
      ++v5;
      ++v8;
      --v9;
    }
    while (v5 != v4);
  }
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v24 < 0)
    operator delete(v23);
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
}

void sub_19C1D3B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21)
{
  void *v22;

  if (__p)
  {
    operator delete(__p);
    if ((a19 & 0x80000000) == 0)
    {
LABEL_3:
      v22 = a20;
      if (!a20)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a19 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a14);
  v22 = a20;
  if (!a20)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(v22);
  _Unwind_Resume(exception_object);
}

void sub_19C1D3B78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _OWORD *v16;
  unsigned int v17;
  void *v18[4];
  void *__p;
  char *v20;
  int v21;
  void *v22[3];
  int v23;

  sub_19C1CE734(a1 + 168, (uint64_t)v22);
  v2 = *(unsigned int *)(a1 + 192);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    v4 = *(_DWORD *)(a1 + 196);
    v5 = v23;
    v6 = 1;
    v7 = -1;
    v8 = v22[0];
    do
    {
      if (v4 <= v6)
        v9 = v6;
      else
        v9 = v4;
      v10 = v3 + 1;
      if ((int)v3 + 1 >= v4)
        goto LABEL_3;
      v11 = 0;
      v12 = v9 + v7;
      v13 = (int)v3 * (uint64_t)v5;
      if ((v9 + v7) < 4)
      {
        v14 = v3 + 1;
      }
      else
      {
        v14 = v3 + 1;
        if (v9 - (int)v3 + v6 - 2 >= v6)
        {
          v15 = 0;
          v11 = v12 & 0xFFFFFFFC;
          v14 = v10 + (v12 & 0xFFFFFFFC);
          do
          {
            v16 = &v8[v13 + v6 + v15];
            *v16 = 0uLL;
            v16[1] = 0uLL;
            v15 += 4;
          }
          while ((v12 & 0xFFFFFFFC) != v15);
          if (v12 == v11)
            goto LABEL_3;
        }
      }
      v17 = v9 - v11;
      do
      {
        v8[v13 + v14] = 0;
        v14 = ++v11 + v10;
        --v17;
      }
      while (v6 != v17);
LABEL_3:
      ++v3;
      ++v6;
      --v7;
    }
    while (v3 != v2);
  }
  sub_19C1D3FFC(a1, (uint64_t)v18);
  sub_19C1CE5B4((uint64_t)v22, (uint64_t)v18, (uint64_t)&__p);
  if ((void **)(a1 + 232) != &__p)
    sub_19C11EAD0((_QWORD *)(a1 + 232), (char *)__p, v20, (v20 - (_BYTE *)__p) >> 3);
  *(_DWORD *)(a1 + 256) = v21;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  sub_19C1CEB00((uint64_t)v22, &__p);
  sub_19C1D43B4((uint64_t)&__p, a1 + 232);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v22[0])
  {
    v22[1] = v22[0];
    operator delete(v22[0]);
  }
}

void sub_19C1D3D34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  if (a9)
    operator delete(a9);
  if (a17)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_19C1D3D98(int32x2_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int32 v14;
  int v15;
  int v16;
  _QWORD *v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  _OWORD *v25;
  unsigned int v26;
  void *__p;
  char *v28;
  int32x2_t v29;

  v2 = a1[12].u32[0];
  sub_19C176BE8(v2, v2, (uint64_t)&__p);
  if ((int)v2 >= 1)
  {
    v3 = v29.i32[1] + 1;
    v4 = __p;
    if ((_DWORD)v2 == 1)
    {
      v5 = 0;
LABEL_7:
      v8 = v2 - v5;
      v9 = v5 << 32;
      do
      {
        v4[(v9 >> 32) * v3] = 0x3FF0000000000000;
        v9 += 0x100000000;
        --v8;
      }
      while (v8);
      goto LABEL_9;
    }
    v6 = 0;
    v5 = v2 & 0xFFFFFFFE;
    v7 = v5;
    do
    {
      v4[(v6 >> 32) * v3] = 0x3FF0000000000000;
      v4[((v6 >> 32) | 1) * v3] = 0x3FF0000000000000;
      v6 += 0x200000000;
      v7 -= 2;
    }
    while (v7);
    if (v5 != v2)
      goto LABEL_7;
  }
LABEL_9:
  if (&a1[25] != (int32x2_t *)&__p)
    sub_19C11EAD0(&a1[25], (char *)__p, v28, (v28 - (_BYTE *)__p) >> 3);
  v10 = (char *)__p;
  a1[28] = v29;
  if (v10)
  {
    v28 = v10;
    operator delete(v10);
  }
  sub_19C1CE734((uint64_t)&a1[21], (uint64_t)&__p);
  v11 = a1[24].u32[0];
  if ((int)v11 >= 1)
  {
    v12 = 0;
    v13 = a1[24].i32[1];
    v14 = v29.i32[1];
    v15 = 1;
    v16 = -1;
    v17 = __p;
    do
    {
      if (v13 <= v15)
        v18 = v15;
      else
        v18 = v13;
      v19 = v12 + 1;
      if ((int)v12 + 1 >= v13)
        goto LABEL_15;
      v20 = 0;
      v21 = v18 + v16;
      v22 = (int)v12 * (uint64_t)v14;
      if ((v18 + v16) < 4)
      {
        v23 = v12 + 1;
      }
      else
      {
        v23 = v12 + 1;
        if (v18 - (int)v12 + v15 - 2 >= v15)
        {
          v24 = 0;
          v20 = v21 & 0xFFFFFFFC;
          v23 = v19 + (v21 & 0xFFFFFFFC);
          do
          {
            v25 = &v17[v22 + v15 + v24];
            *v25 = 0uLL;
            v25[1] = 0uLL;
            v24 += 4;
          }
          while ((v21 & 0xFFFFFFFC) != v24);
          if (v21 == v20)
            goto LABEL_15;
        }
      }
      v26 = v18 - v20;
      do
      {
        v17[v22 + v23] = 0;
        v23 = ++v20 + v19;
        --v26;
      }
      while (v15 != v26);
LABEL_15:
      ++v12;
      ++v15;
      --v16;
    }
    while (v12 != v11);
  }
  sub_19C1D44C8((uint64_t)&__p, a1 + 25);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
  sub_19C1CEB00((uint64_t)&a1[21], &__p);
  sub_19C1D44C8((uint64_t)&__p, a1 + 25);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
}

void sub_19C1D3FD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1D3FFC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  signed int v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  char *v28;

  v4 = *(_DWORD *)(a1 + 288);
  v5 = 8 * v4;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * v4);
    bzero(v6, 8 * v4);
    v7 = 0;
    v8 = &v6[v5];
    v9 = *(_QWORD *)(a1 + 264);
    if (v4 < 4)
      goto LABEL_46;
    if ((unint64_t)&v6[-v9] < 0x20)
      goto LABEL_46;
    v10 = 0;
    v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    v11 = v7;
    do
    {
      v12 = *(_OWORD *)(v9 + v10 + 16);
      v13 = &v6[v10];
      *(_OWORD *)v13 = *(_OWORD *)(v9 + v10);
      *((_OWORD *)v13 + 1) = v12;
      v10 += 32;
      v11 -= 4;
    }
    while (v11);
    if (v7 != v4)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v6[8 * v7] = *(_QWORD *)(v9 + 8 * v7);
        ++v7;
      }
      while (v4 != v7);
    }
    v14 = *(int *)(a1 + 128);
    if ((_DWORD)v14)
      goto LABEL_10;
LABEL_19:
    v15 = 0;
    goto LABEL_20;
  }
  v8 = 0;
  v6 = 0;
  v14 = *(int *)(a1 + 128);
  if (!(_DWORD)v14)
    goto LABEL_19;
LABEL_10:
  if ((v14 & 0x80000000) != 0)
    sub_19C07DA0C();
  v15 = (char *)operator new(8 * v14);
  bzero(v15, 8 * v14);
  v16 = 0;
  v17 = *(_QWORD *)(a1 + 104);
  if (v14 < 4)
    goto LABEL_47;
  if ((unint64_t)&v15[-v17] < 0x20)
    goto LABEL_47;
  v18 = 0;
  v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  v19 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v20 = *(_OWORD *)(v17 + v18 + 16);
    v21 = &v15[v18];
    *(_OWORD *)v21 = *(_OWORD *)(v17 + v18);
    *((_OWORD *)v21 + 1) = v20;
    v18 += 32;
    v19 -= 4;
  }
  while (v19);
  if (v16 != v14)
  {
LABEL_47:
    do
    {
      *(_QWORD *)&v15[8 * v16] = *(_QWORD *)(v17 + 8 * v16);
      ++v16;
    }
    while (v14 != v16);
  }
LABEL_20:
  vDSP_vsubD((const double *)v15, 1, (const double *)v6, 1, (double *)v6, 1, v4);
  if (v8 != v6)
  {
    if (v8 - v6 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v8 - v6);
    memcpy(v22, v6, v8 - v6);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    if (!v4)
    {
      *(_DWORD *)(a2 + 24) = 0;
      operator delete(v22);
      if (!v15)
        goto LABEL_35;
LABEL_34:
      operator delete(v15);
      goto LABEL_35;
    }
LABEL_26:
    if (v4 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(8 * v4);
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 16) = &v23[8 * v4];
    bzero(v23, 8 * v4);
    *(_QWORD *)(a2 + 8) = &v23[v5];
    *(_DWORD *)(a2 + 24) = v4;
    if (v4 >= 4)
    {
      v25 = 0;
      v24 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      v26 = v24;
      do
      {
        v27 = *(_OWORD *)&v22[v25 + 16];
        v28 = &v23[v25];
        *(_OWORD *)v28 = *(_OWORD *)&v22[v25];
        *((_OWORD *)v28 + 1) = v27;
        v25 += 32;
        v26 -= 4;
      }
      while (v26);
      if (v24 == v4)
      {
LABEL_33:
        operator delete(v22);
        if (!v15)
          goto LABEL_35;
        goto LABEL_34;
      }
    }
    else
    {
      v24 = 0;
    }
    do
    {
      *(_QWORD *)&v23[8 * v24] = *(_QWORD *)&v22[8 * v24];
      ++v24;
    }
    while (v4 != v24);
    goto LABEL_33;
  }
  v22 = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v4)
    goto LABEL_26;
  *(_DWORD *)(a2 + 24) = 0;
  if (v15)
    goto LABEL_34;
LABEL_35:
  if (v6)
    operator delete(v6);
}

void sub_19C1D4320(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  void *v18;
  void *v19;

  if (v19)
  {
    operator delete(v19);
    if (!v18)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v18)
  {
    goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_19C1D4384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a9)
    operator delete(a9);
  sub_19C07AF7C(a1);
}

void sub_19C1D4398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13)
    JUMPOUT(0x19C1D43A8);
  JUMPOUT(0x19C1D43ACLL);
}

void sub_19C1D43B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  size_t v4;
  void *v5;
  void *__p[7];
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  v3 = *(int *)(a1 + 24);
  v10 = 1;
  v11 = v3;
  v8 = *(_DWORD *)(a2 + 24);
  v9 = v3;
  v7 = 0;
  memset(&__p[4], 0, 24);
  if ((_DWORD)v3)
  {
    if ((v3 & 0x80000000) != 0)
      sub_19C07DA0C();
    v4 = 4 * v3;
    v5 = operator new(4 * v3);
    bzero(v5, v4);
  }
  else
  {
    v5 = 0;
  }
  sub_19C1CEB00(a1, __p);
  dgesv_NEWLAPACK();
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v5)
    operator delete(v5);
}

void sub_19C1D4484(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;

  if (__p)
    operator delete(__p);
  if (v14)
    operator delete(v14);
  _Unwind_Resume(exception_object);
}

void sub_19C1D44C8(uint64_t a1, int32x2_t *a2)
{
  uint64_t v4;
  __int32 v5;
  __int32 v6;
  size_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  int32x2_t v12;
  __int128 *v13;
  _OWORD *v14;
  unint64_t v15;
  __int128 v16;
  _QWORD *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  int32x2_t v24;
  __int128 *v25;
  _OWORD *v26;
  unint64_t v27;
  __int128 v28;
  _QWORD *v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  void *__p[7];
  int v34;
  __int32 v35;
  int v36;
  __int32 v37;
  int v38;
  _OWORD *v39;
  char *v40;
  int v41;
  int v42;

  v4 = *(int *)(a1 + 24);
  v38 = v4;
  v6 = a2[3].i32[0];
  v5 = a2[3].i32[1];
  v36 = v4;
  v37 = v5;
  v34 = 0;
  v35 = v6;
  memset(&__p[4], 0, 24);
  if ((_DWORD)v4)
  {
    if ((v4 & 0x80000000) != 0)
      sub_19C07DA0C();
    v7 = 4 * v4;
    v8 = operator new(4 * v4);
    bzero(v8, v7);
  }
  else
  {
    v8 = 0;
  }
  sub_19C1CEB00(a1, __p);
  sub_19C1CEB00((uint64_t)a2, &v39);
  v9 = (char *)v39;
  v10 = v42 * (uint64_t)v41;
  if ((_DWORD)v10)
  {
    v11 = 0;
    v12 = *a2;
    if (v10 < 4)
      goto LABEL_11;
    if (*(_QWORD *)&v12 - (_QWORD)v39 < 0x20uLL)
      goto LABEL_11;
    v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    v13 = v39 + 1;
    v14 = (_OWORD *)(*(_QWORD *)&v12 + 16);
    v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v16 = *v13;
      *(v14 - 1) = *(v13 - 1);
      *v14 = v16;
      v13 += 2;
      v14 += 2;
      v15 -= 4;
    }
    while (v15);
    if (v11 != v10)
    {
LABEL_11:
      v17 = (_QWORD *)(*(_QWORD *)&v12 + 8 * v11);
      v18 = v10 - v11;
      v19 = &v9[8 * v11];
      do
      {
        v20 = *(_QWORD *)v19;
        v19 += 8;
        *v17++ = v20;
        --v18;
      }
      while (v18);
    }
  }
  else if (!v39)
  {
    goto LABEL_16;
  }
  v40 = v9;
  operator delete(v9);
LABEL_16:
  a2[3] = vrev64_s32(a2[3]);
  dgesv_NEWLAPACK();
  sub_19C1CEB00((uint64_t)a2, &v39);
  v21 = (char *)v39;
  v22 = v42 * (uint64_t)v41;
  if ((_DWORD)v22)
  {
    v23 = 0;
    v24 = *a2;
    if (v22 < 4)
      goto LABEL_22;
    if (*(_QWORD *)&v24 - (_QWORD)v39 < 0x20uLL)
      goto LABEL_22;
    v23 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    v25 = v39 + 1;
    v26 = (_OWORD *)(*(_QWORD *)&v24 + 16);
    v27 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v28 = *v25;
      *(v26 - 1) = *(v25 - 1);
      *v26 = v28;
      v25 += 2;
      v26 += 2;
      v27 -= 4;
    }
    while (v27);
    if (v23 != v22)
    {
LABEL_22:
      v29 = (_QWORD *)(*(_QWORD *)&v24 + 8 * v23);
      v30 = v22 - v23;
      v31 = &v21[8 * v23];
      do
      {
        v32 = *(_QWORD *)v31;
        v31 += 8;
        *v29++ = v32;
        --v30;
      }
      while (v30);
    }
  }
  else if (!v39)
  {
    goto LABEL_27;
  }
  v40 = v21;
  operator delete(v21);
LABEL_27:
  a2[3] = vrev64_s32(a2[3]);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8)
    operator delete(v8);
}

void sub_19C1D46DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;

  if (__p)
    operator delete(__p);
  if (v14)
    operator delete(v14);
  _Unwind_Resume(exception_object);
}

void sub_19C1D4724(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _OWORD *v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  long double *v10;
  void *v11;
  char *v12;
  int v13;
  void *v14;
  void *v15;
  char *v16;
  int v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  int v21;
  void *__p;
  void *v23;
  _OWORD *v24;
  int v25;
  _QWORD v26[2];
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  v33 = a2;
  sub_19C1CF858((uint64_t)v26, 2u);
  v3 = operator new(0x10uLL);
  *v3 = 0;
  v3[1] = 0;
  v18 = v3;
  v19 = v3 + 2;
  v20 = v3 + 2;
  v21 = 2;
  v4 = operator new(0x10uLL);
  __p = v4;
  *v4 = xmmword_19C27A9E0;
  v23 = v4 + 1;
  v24 = v4 + 1;
  v25 = 2;
  *(_OWORD *)v3 = xmmword_19C27A9F0;
  sub_19C1D0468((uint64_t)v26, (uint64_t *)&v18);
  sub_19C1D0594((uint64_t)v26, (uint64_t *)&__p);
  if (__p)
  {
    v23 = __p;
    operator delete(__p);
  }
  if (v18)
  {
    v19 = v18;
    operator delete(v18);
  }
  v6 = *(_BYTE **)(a2 + 40);
  v5 = *(_BYTE **)(a2 + 48);
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    v9 = &v8[8 * (v7 >> 3)];
    v14 = v8;
    v16 = v9;
    memcpy(v8, v6, v7);
    v15 = v9;
  }
  v17 = *(_DWORD *)(a2 + 64);
  sub_19C1D49D0((uint64_t)v26, (uint64_t)&v33, (uint64_t *)&v14, (uint64_t)&v11);
  if ((void **)(a2 + 40) != &v11)
    sub_19C11EAD0((_QWORD *)(a2 + 40), (char *)v11, v12, (v12 - (_BYTE *)v11) >> 3);
  *(_DWORD *)(a2 + 64) = v13;
  v10 = (long double *)v11;
  *(long double *)(a2 + 24) = exp(*(double *)v11 + *(double *)v11);
  *(long double *)(a2 + 32) = exp(v10[1]);
  sub_19C1D313C(a2, 1, 1);
  if (v11)
  {
    v12 = (char *)v11;
    operator delete(v11);
  }
  if (v14)
  {
    v15 = v14;
    operator delete(v14);
  }
  v26[0] = &unk_1E3D21150;
  sub_19C23AA14(v26[1]);
  if (v31)
  {
    v32 = v31;
    operator delete(v31);
  }
  if (v29)
  {
    v30 = v29;
    operator delete(v29);
  }
  if (v27)
  {
    v28 = v27;
    operator delete(v27);
  }
}

void sub_19C1D4940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (!__p)
  {
    sub_19C1CF8E8(&a25);
    _Unwind_Resume(a1);
  }
  operator delete(__p);
  sub_19C1CF8E8(&a25);
  _Unwind_Resume(a1);
}

void sub_19C1D49B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  sub_19C176E10((uint64_t)va);
  sub_19C1CF8E8((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_19C1D49D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1D4F20;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1D4E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1D4C24);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

double sub_19C1D4F20(uint64_t **a1, uint64_t *a2, int **a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  double v33;
  void *__p;
  void *v35;
  char v36;
  _QWORD v37[3];
  signed int v38;
  char v39;
  void *v40;
  char *v41;
  char *v42;
  int v43;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v41 = 0;
  v42 = 0;
  v40 = 0;
  v43 = 0;
  v33 = 0.0;
  __p = 0;
  v35 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  v40 = v8;
  v41 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v42 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v43 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1D5214(a3, (uint64_t)&v40, 0, (uint64_t)&v33);
    v17 = v33;
    if (v36)
    {
      v31 = __p;
      if (__p)
      {
        v35 = __p;
        goto LABEL_31;
      }
    }
  }
  else
  {
    LOBYTE(v37[0]) = 0;
    v39 = 0;
    sub_19C1D5214(a3, (uint64_t)&v40, 1, (uint64_t)&v33);
    v17 = v33;
    sub_19C1D66F8((uint64_t)v37, (uint64_t)&__p);
    if (v36 && __p)
    {
      v35 = __p;
      operator delete(__p);
    }
    v18 = v38;
    if (v38)
    {
      v19 = 0;
      v20 = v37[0];
      v21 = *a2;
      if (v38 < 4)
        goto LABEL_23;
      if ((unint64_t)(v21 - v37[0]) < 0x20)
        goto LABEL_23;
      v19 = v38 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = (__int128 *)(v37[0] + 16);
      v23 = (_OWORD *)(v21 + 16);
      v24 = v19;
      do
      {
        v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 4;
      }
      while (v24);
      if (v19 != v18)
      {
LABEL_23:
        v26 = v18 - v19;
        v27 = 8 * v19;
        v28 = (_QWORD *)(v21 + 8 * v19);
        v29 = (uint64_t *)(v20 + v27);
        do
        {
          v30 = *v29++;
          *v28++ = v30;
          --v26;
        }
        while (v26);
      }
    }
    if (v39)
    {
      v31 = (void *)v37[0];
      if (v37[0])
      {
        v37[1] = v37[0];
LABEL_31:
        operator delete(v31);
      }
    }
  }
  if (v40)
  {
    v41 = (char *)v40;
    operator delete(v40);
  }
  return v17;
}

void sub_19C1D519C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,void *__p,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1D51F8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

_QWORD *sub_19C1D5214@<X0>(int **a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char *v7;
  double v8;
  double v9;
  void *v10;
  int64_t v11;
  char *v12;
  char *v13;
  _BYTE *v15;
  _BYTE *v16;
  int v17;
  _QWORD v18[5];
  _QWORD v19[3];
  int v20;

  sub_19C1D609C((uint64_t)v18, *a1);
  if (v19 != (_QWORD *)a2)
    sub_19C11EAD0(v19, *(char **)a2, *(char **)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  v20 = *(_DWORD *)(a2 + 24);
  v7 = *(char **)a2;
  v18[3] = exp(*(double *)v7 + *(double *)v7);
  v18[4] = exp(*((long double *)v7 + 1));
  sub_19C1D313C((uint64_t)v18, 0, a3);
  v8 = sub_19C1D53EC((uint64_t)v18);
  v9 = v8;
  if ((a3 & 1) != 0)
  {
    sub_19C1D5618((uint64_t)v18, (uint64_t)&v15);
    *(_QWORD *)(a4 + 8) = 0;
    *(double *)a4 = v9;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0;
    v10 = v15;
    v11 = v16 - v15;
    if (v16 != v15)
    {
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = (char *)operator new(v16 - v15);
      *(_QWORD *)(a4 + 8) = v12;
      v13 = &v12[8 * (v11 >> 3)];
      *(_QWORD *)(a4 + 24) = v13;
      memcpy(v12, v10, v11);
      *(_QWORD *)(a4 + 16) = v13;
    }
    *(_DWORD *)(a4 + 32) = v17;
    *(_BYTE *)(a4 + 40) = 1;
    if (v10)
    {
      v16 = v10;
      operator delete(v10);
    }
  }
  else
  {
    *(double *)a4 = v8;
    *(_BYTE *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 40) = 0;
  }
  return sub_19C1D2994(v18);
}

void sub_19C1D5364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_19C1D2994((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1D5378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  void **v14;
  void *v16;
  void *v17;

  v16 = *v14;
  if (*v14)
  {
    *(_QWORD *)(v13 + 16) = v16;
    operator delete(v16);
    v17 = __p;
    if (!__p)
    {
LABEL_3:
      sub_19C1D2994(&a13);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v17 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v17);
  sub_19C1D2994(&a13);
  _Unwind_Resume(a1);
}

void sub_19C1D53C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_19C1D2994((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1D53D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_19C1D2994((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_19C1D53EC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  double *v8;
  void *__p;
  char *v11;
  char *v12;
  int v13;
  void *__C[3];
  vDSP_Length v15;
  double *__A;
  double *v17;
  uint64_t v18;
  vDSP_Length __N;

  sub_19C1D3FFC(a1, (uint64_t)&__A);
  __C[0] = 0;
  vDSP_dotprD(__A, 1, *(const double **)(a1 + 232), 1, (double *)__C, (int)__N);
  v2 = __C[0];
  if (__A)
  {
    v17 = __A;
    operator delete(__A);
  }
  v3 = *(int *)(a1 + 196);
  if ((int)v3 >= *(_DWORD *)(a1 + 192))
    v4 = *(_DWORD *)(a1 + 192);
  else
    v4 = *(_DWORD *)(a1 + 196);
  __A = 0;
  v17 = 0;
  v18 = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = operator new(8 * v4);
    bzero(v5, 8 * v4);
    v6 = 0;
    v7 = *(_QWORD **)(a1 + 168);
    do
    {
      *((_QWORD *)v5 + v6++) = *v7;
      v7 += v3 + 1;
    }
    while (v4 != v6);
    __p = operator new(8 * v4);
    v11 = (char *)__p + 8 * v4;
    v12 = v11;
    v13 = v4;
    memcpy(__p, v5, 8 * v4);
  }
  else
  {
    v5 = 0;
    v11 = 0;
    v12 = 0;
    __p = 0;
    v13 = 0;
  }
  sub_19C1D650C((uint64_t)&__p, (uint64_t)__C);
  __A = 0;
  vDSP_sveD((const double *)__C[0], 1, (double *)&__A, (int)v15);
  v8 = __A;
  if (__C[0])
  {
    __C[1] = __C[0];
    operator delete(__C[0]);
  }
  if (__p)
  {
    v11 = (char *)__p;
    operator delete(__p);
  }
  if (v5)
    operator delete(v5);
  return (double)*(int *)(a1 + 96) * -0.918938533 - (*(double *)&v8 - *(double *)&v2 * -0.5);
}

void sub_19C1D5590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v20;

  if (__p)
  {
    operator delete(__p);
    v20 = a9;
    if (!a9)
    {
LABEL_3:
      if (!v18)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(v18);
      goto LABEL_8;
    }
  }
  else
  {
    v20 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v20);
  if (!v18)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C1D55FC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1D5618(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  double *v5;
  double *v6;
  _BYTE *v7;
  _BYTE *v8;
  int64_t v9;
  char *v10;
  char *v11;
  void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  vDSP_Length v18;
  int64_t v19;
  char *v20;
  char *v21;
  char *v22;
  unint64_t i;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  __int128 v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  long double *v65;
  double v66;
  double v67;
  long double v68;
  uint64_t v69;
  double *v70;
  double *v71;
  double *v72;
  double *v73;
  __int128 *v74;
  _OWORD *v75;
  unint64_t v76;
  __int128 v77;
  __int128 *v78;
  _OWORD *v79;
  unint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  void *v86[4];
  void *v87;
  void *v88;
  char *v89;
  int v90;
  void *__p;
  char *v92;
  char *v93;
  unint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  unint64_t v98;
  void *v99;
  char *v100;
  char *v101;
  unint64_t v102;
  double *v103;
  double *v104;
  double *v105;
  unint64_t v106;
  double __B;
  char *v108;
  char *v109;
  unint64_t v110;

  v103 = 0;
  v104 = 0;
  v105 = 0;
  v3 = *(_BYTE **)(a1 + 200);
  v2 = *(_BYTE **)(a1 + 208);
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (double *)operator new(v2 - v3);
    v6 = &v5[v4 >> 3];
    v103 = v5;
    v105 = v6;
    memcpy(v5, v3, v4);
    v104 = v6;
  }
  v106 = *(_QWORD *)(a1 + 224);
  v88 = 0;
  v89 = 0;
  v87 = 0;
  v8 = *(_BYTE **)(a1 + 232);
  v7 = *(_BYTE **)(a1 + 240);
  v9 = v7 - v8;
  if (v7 != v8)
  {
    if (v9 < 0)
      sub_19C07DA0C();
    v10 = (char *)operator new(v7 - v8);
    v11 = &v10[8 * (v9 >> 3)];
    v87 = v10;
    v89 = v11;
    memcpy(v10, v8, v9);
    v88 = v11;
  }
  v90 = *(_DWORD *)(a1 + 256);
  sub_19C1CE998(a1 + 232, (uint64_t)v86);
  sub_19C1D65EC((uint64_t)&v87, (uint64_t)v86, (uint64_t)&__p);
  v95 = 0;
  v96 = 0;
  v97 = 0;
  v12 = __p;
  v13 = v92 - (_BYTE *)__p;
  if (v92 == __p)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v92 - (_BYTE *)__p);
    v15 = &v14[8 * (v13 >> 3)];
    v95 = v14;
    v97 = v15;
    memcpy(v14, v12, v13);
    v96 = v15;
  }
  v16 = v94;
  v98 = v94;
  v17 = HIDWORD(v94);
  v18 = HIDWORD(v94) * (int)v94;
  vDSP_vsubD(v103, 1, (const double *)v14, 1, (double *)v14, 1, v18);
  v99 = 0;
  v100 = 0;
  v101 = 0;
  v19 = v15 - v14;
  if (!v19)
  {
    v20 = 0;
    v102 = v16;
    v108 = 0;
    v109 = 0;
    __B = 0.0;
    if ((_DWORD)v18)
      goto LABEL_14;
LABEL_18:
    v22 = 0;
    v21 = 0;
    v110 = __PAIR64__(v17, v16);
    goto LABEL_23;
  }
  if (v19 < 0)
    sub_19C07DA0C();
  v20 = (char *)operator new(v19);
  v99 = v20;
  v101 = &v20[8 * (v19 >> 3)];
  memcpy(v20, v14, v19);
  v100 = &v20[8 * (v19 >> 3)];
  v102 = v16;
  v108 = 0;
  v109 = 0;
  __B = 0.0;
  if (!(_DWORD)v18)
    goto LABEL_18;
LABEL_14:
  if ((v18 & 0x80000000) != 0)
    sub_19C07DA0C();
  v21 = (char *)operator new(8 * v18);
  *(_QWORD *)&__B = v21;
  v109 = &v21[8 * v18];
  bzero(v21, 8 * v18);
  v22 = &v21[8 * v18];
  v110 = __PAIR64__(v17, v16);
  if (v18 < 4)
  {
    for (i = 0; i != v18; ++i)
LABEL_22:
      *(_QWORD *)&v21[8 * i] = *(_QWORD *)&v20[8 * i];
    goto LABEL_23;
  }
  v24 = 0;
  i = v18 & 0xFFFFFFFFFFFFFFFCLL;
  v25 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v26 = *(_OWORD *)&v20[v24 + 16];
    v27 = &v21[v24];
    *(_OWORD *)v27 = *(_OWORD *)&v20[v24];
    *((_OWORD *)v27 + 1) = v26;
    v24 += 32;
    v25 -= 4;
  }
  while (v25);
  if (i != v18)
    goto LABEL_22;
LABEL_23:
  sub_19C11EAD0(&v103, v21, v22, (v22 - v21) >> 3);
  v106 = v110;
  if (v21)
  {
    v108 = v21;
    operator delete(v21);
  }
  if (v20)
  {
    v100 = v20;
    operator delete(v20);
  }
  if (v14)
  {
    v96 = v14;
    operator delete(v14);
  }
  if (__p)
  {
    v92 = (char *)__p;
    operator delete(__p);
  }
  if (v86[0])
  {
    v86[1] = v86[0];
    operator delete(v86[0]);
  }
  if (v87)
  {
    v88 = v87;
    operator delete(v87);
  }
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v28 = operator new(0x10uLL);
  *(_QWORD *)(a2 + 8) = v28 + 2;
  *(_QWORD *)(a2 + 16) = v28 + 2;
  *(_QWORD *)a2 = v28;
  *(_DWORD *)(a2 + 24) = 2;
  *v28 = 0;
  v28[1] = 0;
  v82 = *(int *)(a1 + 96);
  if ((_DWORD)v82)
  {
    v29 = 0;
    v83 = 0;
    do
    {
      v30 = 0;
      v31 = 0;
      do
      {
        v32 = *(_QWORD *)(a1 + 72);
        v33 = *(unsigned int *)(a1 + 100);
        __B = 0.0;
        v108 = 0;
        v109 = 0;
        if (!(_DWORD)v33)
        {
          v34 = 0;
          v100 = 0;
          v101 = 0;
          v99 = 0;
          LODWORD(v102) = 0;
LABEL_68:
          v51 = 0;
          v92 = 0;
          v93 = 0;
          __p = 0;
          LODWORD(v94) = 0;
          goto LABEL_72;
        }
        if ((v33 & 0x80000000) != 0)
          sub_19C07DA0C();
        v34 = operator new(8 * (int)v33);
        bzero(v34, 8 * (int)v33);
        if (v33 < 8 || (unint64_t)v34 - v32 - 8 * v29 * (int)v33 < 0x20)
        {
          v35 = 0;
LABEL_45:
          v36 = (int)v33 - v35;
          v37 = 8 * v35;
          v38 = (_QWORD *)v34 + v35;
          v39 = (uint64_t *)(v32 + v37 + v83 * (int)v33);
          do
          {
            v40 = *v39++;
            *v38++ = v40;
            --v36;
          }
          while (v36);
          goto LABEL_47;
        }
        v35 = (int)v33 & 0xFFFFFFFFFFFFFFFCLL;
        v74 = (__int128 *)(v32 + v83 * (int)v33 + 16);
        v75 = v34 + 1;
        v76 = v35;
        do
        {
          v77 = *v74;
          *(v75 - 1) = *(v74 - 1);
          *v75 = v77;
          v74 += 2;
          v75 += 2;
          v76 -= 4;
        }
        while (v76);
        if (v35 != (int)v33)
          goto LABEL_45;
LABEL_47:
        v99 = 0;
        v100 = 0;
        v101 = 0;
        LODWORD(v102) = v33;
        v41 = operator new(8 * (int)v33);
        bzero(v41, 8 * (int)v33);
        v99 = v41;
        v100 = (char *)v41 + 8 * (int)v33;
        v101 = v100;
        if ((v33 - 6) >= 0x7FFFFFFB)
        {
          v42 = 0;
LABEL_54:
          v47 = v33 - v42;
          v48 = v42 << 32;
          do
          {
            *(_QWORD *)((char *)v41 + (v48 >> 29)) = *(_QWORD *)((char *)v34 + (v48 >> 29));
            v48 += 0x100000000;
            --v47;
          }
          while (v47);
          goto LABEL_56;
        }
        v42 = v33 & 0xFFFFFFFC;
        v43 = v41 + 1;
        v44 = v34 + 1;
        v45 = v42;
        do
        {
          v46 = *v44;
          *(v43 - 1) = *(v44 - 1);
          *v43 = v46;
          v43 += 2;
          v44 += 2;
          v45 -= 4;
        }
        while (v45);
        if (v42 != v33)
          goto LABEL_54;
LABEL_56:
        v49 = *(_QWORD *)(a1 + 72);
        v50 = *(unsigned int *)(a1 + 100);
        __B = 0.0;
        v108 = 0;
        v109 = 0;
        if (!(_DWORD)v50)
          goto LABEL_68;
        if ((v50 & 0x80000000) != 0)
          sub_19C07DA0C();
        v51 = operator new(8 * (int)v50);
        bzero(v51, 8 * (int)v50);
        if (v50 < 8 || (unint64_t)v51 - v49 - 8 * v31 * (int)v50 < 0x20)
        {
          v52 = 0;
LABEL_61:
          v53 = (int)v50 - v52;
          v54 = 8 * v52;
          v55 = (_QWORD *)v51 + v52;
          v56 = (uint64_t *)(v49 + v54 + v30 * (int)v50);
          do
          {
            v57 = *v56++;
            *v55++ = v57;
            --v53;
          }
          while (v53);
          goto LABEL_63;
        }
        v52 = (int)v50 & 0xFFFFFFFFFFFFFFFCLL;
        v78 = (__int128 *)(v49 + v30 * (int)v50 + 16);
        v79 = v51 + 1;
        v80 = v52;
        do
        {
          v81 = *v78;
          *(v79 - 1) = *(v78 - 1);
          *v79 = v81;
          v78 += 2;
          v79 += 2;
          v80 -= 4;
        }
        while (v80);
        if (v52 != (int)v50)
          goto LABEL_61;
LABEL_63:
        __p = 0;
        v92 = 0;
        v93 = 0;
        LODWORD(v94) = v50;
        v58 = (char *)operator new(8 * (int)v50);
        bzero(v58, 8 * (int)v50);
        __p = v58;
        v92 = &v58[8 * (int)v50];
        v93 = v92;
        if ((v50 - 6) >= 0x7FFFFFFB)
        {
          v60 = 0;
LABEL_70:
          v63 = v50 - v60;
          v64 = v60 << 32;
          do
          {
            *(_QWORD *)&v58[v64 >> 29] = *(_QWORD *)((char *)v51 + (v64 >> 29));
            v64 += 0x100000000;
            --v63;
          }
          while (v63);
          goto LABEL_72;
        }
        v59 = 0;
        v60 = v50 & 0xFFFFFFFC;
        do
        {
          v61 = v51[v59 / 0x10 + 1];
          v62 = &v58[v59];
          *(_OWORD *)v62 = v51[v59 / 0x10];
          *((_OWORD *)v62 + 1) = v61;
          v59 += 32;
        }
        while (((8 * v50) & 0x7FFFFFFE0) != v59);
        if (v60 != v50)
          goto LABEL_70;
LABEL_72:
        v65 = (long double *)operator new(0x10uLL);
        *v65 = 0.0;
        v65[1] = 0.0;
        v66 = sub_19C1CACA8(a1 + 8, (uint64_t)&v99, (const double **)&__p);
        v67 = *(double *)(a1 + 24);
        v68 = v67 * exp(v66 * -0.5);
        *v65 = v68 + v68;
        v65[1] = v68 * v66;
        if (__p)
        {
          v92 = (char *)__p;
          operator delete(__p);
        }
        if (v51)
          operator delete(v51);
        if (v99)
        {
          v100 = (char *)v99;
          operator delete(v99);
        }
        if (v34)
          operator delete(v34);
        v69 = SHIDWORD(v106);
        v70 = v103;
        v71 = (double *)operator new(0x10uLL);
        *(_OWORD *)v71 = *(_OWORD *)v65;
        if (v29 == v31)
        {
          vDSP_vsmulD(v71, 1, &v70[v29 + v29 * v69], v71, 1, 2uLL);
          v72 = (double *)operator new(0x10uLL);
          *(_OWORD *)v72 = *(_OWORD *)v71;
          __B = 0.5;
          vDSP_vsmulD(v72, 1, &__B, v72, 1, 2uLL);
          v73 = (double *)operator new(0x10uLL);
          *(_OWORD *)v73 = *(_OWORD *)v72;
          vDSP_vaddD(*(const double **)a2, 1, v73, 1, *(double **)a2, 1, 2uLL);
          operator delete(v73);
        }
        else
        {
          vDSP_vsmulD(v71, 1, &v70[v31 + v29 * v69], v71, 1, 2uLL);
          v72 = (double *)operator new(0x10uLL);
          *(_OWORD *)v72 = *(_OWORD *)v71;
          vDSP_vaddD(*(const double **)a2, 1, v72, 1, *(double **)a2, 1, 2uLL);
        }
        operator delete(v72);
        operator delete(v71);
        operator delete(v65);
        ++v31;
        v30 += 8;
      }
      while (v31 <= v29);
      ++v29;
      v83 += 8;
    }
    while (v29 != v82);
  }
  if (v103)
  {
    v104 = v103;
    operator delete(v103);
  }
}

void sub_19C1D5EA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v38;
  void *v39;
  void *v40;

  if (v35)
    operator delete(v35);
  if (v34)
    operator delete(v34);
  if (v33)
    operator delete(v33);
  if (__p)
  {
    operator delete(__p);
    v38 = a16;
    if (!a16)
    {
LABEL_9:
      v39 = a20;
      if (!a20)
      {
LABEL_14:
        v40 = *(void **)(v36 - 184);
        if (v40)
        {
          *(_QWORD *)(v36 - 176) = v40;
          operator delete(v40);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_13:
      operator delete(v39);
      goto LABEL_14;
    }
  }
  else
  {
    v38 = a16;
    if (!a16)
      goto LABEL_9;
  }
  operator delete(v38);
  v39 = a20;
  if (!a20)
    goto LABEL_14;
  goto LABEL_13;
}

void sub_19C1D6040(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;

  operator delete(v34);
  if (__p)
  {
    operator delete(__p);
    if (!v35)
    {
LABEL_3:
      v36 = a32;
      if (!a32)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v35)
  {
    goto LABEL_3;
  }
  operator delete(v35);
  v36 = a32;
  if (!a32)
  {
LABEL_4:
    if (v33)
      goto LABEL_12;
    goto LABEL_13;
  }
LABEL_8:
  operator delete(v36);
  if (v33)
LABEL_12:
    JUMPOUT(0x19C1D5FECLL);
LABEL_13:
  JUMPOUT(0x19C1D5FF0);
}

uint64_t sub_19C1D609C(uint64_t a1, int *a2)
{
  int v4;
  __int128 v5;
  _BYTE *v6;
  _BYTE *v7;
  int64_t v8;
  char *v9;
  char *v10;
  int v11;
  _BYTE *v12;
  _BYTE *v13;
  int64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  int64_t v20;
  char *v21;
  char *v22;
  int v23;
  _BYTE *v24;
  _BYTE *v25;
  int64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  int64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  int64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  int64_t v44;
  char *v45;
  char *v46;
  _BYTE *v47;
  _BYTE *v48;
  int64_t v49;
  char *v50;
  char *v51;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 2);
  v5 = *(_OWORD *)(a2 + 6);
  *(_QWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  v7 = (_BYTE *)*((_QWORD *)a2 + 5);
  v6 = (_BYTE *)*((_QWORD *)a2 + 6);
  v8 = v6 - v7;
  if (v6 != v7)
  {
    if (v8 < 0)
      sub_19C07DA0C();
    v9 = (char *)operator new(v6 - v7);
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v9;
    v10 = &v9[8 * (v8 >> 3)];
    *(_QWORD *)(a1 + 56) = v10;
    memcpy(v9, v7, v8);
    *(_QWORD *)(a1 + 48) = v10;
  }
  v11 = a2[16];
  *(_QWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  v13 = (_BYTE *)*((_QWORD *)a2 + 9);
  v12 = (_BYTE *)*((_QWORD *)a2 + 10);
  v14 = v12 - v13;
  if (v12 != v13)
  {
    if (v14 < 0)
      sub_19C07DA0C();
    v15 = (char *)operator new(v12 - v13);
    *(_QWORD *)(a1 + 72) = v15;
    *(_QWORD *)(a1 + 80) = v15;
    v16 = &v15[8 * (v14 >> 3)];
    *(_QWORD *)(a1 + 88) = v16;
    memcpy(v15, v13, v14);
    *(_QWORD *)(a1 + 80) = v16;
  }
  v17 = *((_QWORD *)a2 + 12);
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  v19 = (_BYTE *)*((_QWORD *)a2 + 13);
  v18 = (_BYTE *)*((_QWORD *)a2 + 14);
  v20 = v18 - v19;
  if (v18 != v19)
  {
    if (v20 < 0)
      sub_19C07DA0C();
    v21 = (char *)operator new(v18 - v19);
    *(_QWORD *)(a1 + 104) = v21;
    *(_QWORD *)(a1 + 112) = v21;
    v22 = &v21[8 * (v20 >> 3)];
    *(_QWORD *)(a1 + 120) = v22;
    memcpy(v21, v19, v20);
    *(_QWORD *)(a1 + 112) = v22;
  }
  v23 = a2[32];
  *(_QWORD *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 128) = v23;
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  v25 = (_BYTE *)*((_QWORD *)a2 + 17);
  v24 = (_BYTE *)*((_QWORD *)a2 + 18);
  v26 = v24 - v25;
  if (v24 != v25)
  {
    if (v26 < 0)
      sub_19C07DA0C();
    v27 = (char *)operator new(v24 - v25);
    *(_QWORD *)(a1 + 136) = v27;
    *(_QWORD *)(a1 + 144) = v27;
    v28 = &v27[8 * (v26 >> 3)];
    *(_QWORD *)(a1 + 152) = v28;
    memcpy(v27, v25, v26);
    *(_QWORD *)(a1 + 144) = v28;
  }
  v29 = *((_QWORD *)a2 + 20);
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 160) = v29;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  v31 = (_BYTE *)*((_QWORD *)a2 + 21);
  v30 = (_BYTE *)*((_QWORD *)a2 + 22);
  v32 = v30 - v31;
  if (v30 != v31)
  {
    if (v32 < 0)
      sub_19C07DA0C();
    v33 = (char *)operator new(v30 - v31);
    *(_QWORD *)(a1 + 168) = v33;
    *(_QWORD *)(a1 + 176) = v33;
    v34 = &v33[8 * (v32 >> 3)];
    *(_QWORD *)(a1 + 184) = v34;
    memcpy(v33, v31, v32);
    *(_QWORD *)(a1 + 176) = v34;
  }
  v35 = *((_QWORD *)a2 + 24);
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 192) = v35;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  v37 = (_BYTE *)*((_QWORD *)a2 + 25);
  v36 = (_BYTE *)*((_QWORD *)a2 + 26);
  v38 = v36 - v37;
  if (v36 != v37)
  {
    if (v38 < 0)
      sub_19C07DA0C();
    v39 = (char *)operator new(v36 - v37);
    *(_QWORD *)(a1 + 200) = v39;
    *(_QWORD *)(a1 + 208) = v39;
    v40 = &v39[8 * (v38 >> 3)];
    *(_QWORD *)(a1 + 216) = v40;
    memcpy(v39, v37, v38);
    *(_QWORD *)(a1 + 208) = v40;
  }
  v41 = *((_QWORD *)a2 + 28);
  *(_QWORD *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 224) = v41;
  *(_QWORD *)(a1 + 240) = 0;
  *(_QWORD *)(a1 + 248) = 0;
  v43 = (_BYTE *)*((_QWORD *)a2 + 29);
  v42 = (_BYTE *)*((_QWORD *)a2 + 30);
  v44 = v42 - v43;
  if (v42 != v43)
  {
    if (v44 < 0)
      sub_19C07DA0C();
    v45 = (char *)operator new(v42 - v43);
    *(_QWORD *)(a1 + 232) = v45;
    *(_QWORD *)(a1 + 240) = v45;
    v46 = &v45[8 * (v44 >> 3)];
    *(_QWORD *)(a1 + 248) = v46;
    memcpy(v45, v43, v44);
    *(_QWORD *)(a1 + 240) = v46;
  }
  *(_DWORD *)(a1 + 256) = a2[64];
  *(_QWORD *)(a1 + 272) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  v48 = (_BYTE *)*((_QWORD *)a2 + 33);
  v47 = (_BYTE *)*((_QWORD *)a2 + 34);
  v49 = v47 - v48;
  if (v47 != v48)
  {
    if (v49 < 0)
      sub_19C07DA0C();
    v50 = (char *)operator new(v47 - v48);
    *(_QWORD *)(a1 + 264) = v50;
    *(_QWORD *)(a1 + 272) = v50;
    v51 = &v50[8 * (v49 >> 3)];
    *(_QWORD *)(a1 + 280) = v51;
    memcpy(v50, v48, v49);
    *(_QWORD *)(a1 + 272) = v51;
  }
  *(_DWORD *)(a1 + 288) = a2[72];
  return a1;
}

void sub_19C1D63D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, void **a10)
{
  _QWORD *v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  v18 = *v11;
  if (*v11)
  {
    v10[34] = v18;
    operator delete(v18);
    v19 = *v16;
    if (!*v16)
    {
LABEL_3:
      v20 = *v15;
      if (!*v15)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else
  {
    v19 = *v16;
    if (!*v16)
      goto LABEL_3;
  }
  v10[30] = v19;
  operator delete(v19);
  v20 = *v15;
  if (!*v15)
  {
LABEL_4:
    v21 = *v14;
    if (!*v14)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  v10[26] = v20;
  operator delete(v20);
  v21 = *v14;
  if (!*v14)
  {
LABEL_5:
    v22 = *v13;
    if (!*v13)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  v10[22] = v21;
  operator delete(v21);
  v22 = *v13;
  if (!*v13)
  {
LABEL_6:
    v23 = *v12;
    if (!*v12)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  v10[18] = v22;
  operator delete(v22);
  v23 = *v12;
  if (!*v12)
  {
LABEL_7:
    v24 = *a9;
    if (!*a9)
      goto LABEL_9;
    goto LABEL_8;
  }
LABEL_17:
  v10[14] = v23;
  operator delete(v23);
  v24 = *a9;
  if (!*a9)
  {
LABEL_9:
    v25 = *a10;
    if (*a10)
    {
      v10[6] = v25;
      operator delete(v25);
    }
    _Unwind_Resume(exception_object);
  }
LABEL_8:
  v10[10] = v24;
  operator delete(v24);
  goto LABEL_9;
}

void sub_19C1D64EC()
{
  _QWORD *v0;

  if (!*v0)
    JUMPOUT(0x19C1D6418);
  JUMPOUT(0x19C1D6410);
}

void sub_19C1D64FC()
{
  _QWORD *v0;

  if (!*v0)
    JUMPOUT(0x19C1D642CLL);
  JUMPOUT(0x19C1D6424);
}

void sub_19C1D650C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  char *v5;
  int v6;

  v4 = *(_DWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(8 * v4);
    *(_QWORD *)a2 = v5;
    *(_QWORD *)(a2 + 16) = &v5[8 * v4];
    bzero(v5, 8 * v4);
    *(_QWORD *)(a2 + 8) = &v5[8 * v4];
  }
  else
  {
    v5 = 0;
  }
  *(_DWORD *)(a2 + 24) = v4;
  v6 = v4;
  vvlog((double *)v5, *(const double **)a1, &v6);
}

void sub_19C1D65B4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v2;

  if (v2)
  {
    *(_QWORD *)(v1 + 8) = v2;
    operator delete(v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C1D65D0(void *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  sub_19C07AF7C(a1);
}

void sub_19C1D65EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  size_t v10;
  char *v11;

  v6 = *(_DWORD *)(a1 + 24);
  v7 = *(_DWORD *)(a2 + 24);
  v8 = v7 * v6;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  if (v7 * v6)
  {
    v9 = v8;
    if (v8 < 0)
      sub_19C07DA0C();
    v10 = 8 * v8;
    v11 = (char *)operator new(v10);
    *(_QWORD *)a3 = v11;
    *(_QWORD *)(a3 + 16) = &v11[8 * v9];
    bzero(v11, 8 * v9);
    *(_QWORD *)(a3 + 8) = &v11[v10];
  }
  else
  {
    v11 = 0;
  }
  *(_DWORD *)(a3 + 24) = v6;
  *(_DWORD *)(a3 + 28) = v7;
  vDSP_mmulD(*(const double **)a1, 1, *(const double **)a2, 1, (double *)v11, 1, v6, v7, 1uLL);
}

void sub_19C1D66C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v2;

  if (v2)
  {
    *(_QWORD *)(v1 + 8) = v2;
    operator delete(v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C1D66DC(void *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  sub_19C07AF7C(a1);
}

void sub_19C1D66F8(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  char *v8;
  char *v9;

  if (*(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32))
  {
    if (*(_BYTE *)(a1 + 32))
    {
      if (a1 != a2)
        sub_19C11EAD0((_QWORD *)a1, *(char **)a2, *(char **)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    }
  }
  else if (*(_BYTE *)(a1 + 32))
  {
    v4 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v4;
      operator delete(v4);
    }
    *(_BYTE *)(a1 + 32) = 0;
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    v6 = *(char **)a2;
    v5 = *(_QWORD *)(a2 + 8);
    v7 = v5 - *(_QWORD *)a2;
    if (v5 != *(_QWORD *)a2)
    {
      if (v7 < 0)
        sub_19C07DA0C();
      v8 = (char *)operator new(v5 - *(_QWORD *)a2);
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v8;
      v9 = &v8[8 * (v7 >> 3)];
      *(_QWORD *)(a1 + 16) = v9;
      memcpy(v8, v6, v7);
      *(_QWORD *)(a1 + 8) = v9;
    }
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = 1;
  }
}

void sub_19C1D67FC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C1D6818(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double *v3;
  char **v4;
  char **v6;
  char **v7;
  void *v8;
  char **v9;
  char **v10;
  void *v11;
  void *v12;
  char **v13;
  void *__p;
  char **v15;

  sub_19C1CCA84((uint64_t ***)&v12, (uint64_t **)(a1 + 8));
  sub_19C1CCA84((uint64_t ***)&__p, (uint64_t **)&v12);
  v3 = (double *)__p;
  v4 = (char **)((char *)__p + 104);
  if (__p != v15 && v4 != v15)
  {
    do
    {
      if (v3[12] < *((double *)v4 + 12))
        v3 = (double *)v4;
      v4 += 13;
    }
    while (v4 != v15);
  }
  sub_19C1C1840((uint64_t **)a2, (uint64_t *)v3);
  *(double *)(a2 + 96) = v3[12];
  v6 = (char **)__p;
  if (__p)
  {
    v7 = v15;
    v8 = __p;
    if (v15 != __p)
    {
      do
        v7 = sub_19C17B808(v7 - 13);
      while (v7 != v6);
      v8 = __p;
    }
    v15 = v6;
    operator delete(v8);
  }
  v9 = (char **)v12;
  if (v12)
  {
    v10 = v13;
    v11 = v12;
    if (v13 != v12)
    {
      do
        v10 = sub_19C17B808(v10 - 13);
      while (v10 != v9);
      v11 = v12;
    }
    v13 = v9;
    operator delete(v11);
  }
}

void sub_19C1D6908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_19C1C8154(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_19C1D691C(uint64_t a1, _DWORD *a2)
{
  _BOOL8 v2;
  std::runtime_error *exception;

  if (*(_BYTE *)(a1 + 8))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Early stopping already requested.");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  v2 = *a2 >= *(_DWORD *)(a1 + 12);
  *(_BYTE *)(a1 + 8) = v2;
  return v2;
}

void sub_19C1D6984(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL sub_19C1D6998(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v5;
  int v6;
  int v8;
  _BOOL4 v9;
  std::runtime_error *exception;

  if (*(_BYTE *)(a1 + 8))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Early stopping already requested.");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  v3 = *(_DWORD *)(a1 + 12);
  if (v3 == -1)
    return 0;
  v6 = *a2;
  v5 = (uint64_t)(a2 + 2);
  if (v6 == 1 || *(double *)(a1 + 120) < *((double *)a2 + 13) - *(double *)(a1 + 16))
  {
    sub_19C1C9C8C(a1 + 24, v5);
    *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 13);
    *(_DWORD *)(a1 + 128) = 0;
    *(_BYTE *)(a1 + 8) = 0;
    return 0;
  }
  else
  {
    v8 = *(_DWORD *)(a1 + 128);
    *(_DWORD *)(a1 + 128) = v8 + 1;
    v9 = v8 >= v3;
    *(_BYTE *)(a1 + 8) = v9;
    return v9;
  }
}

void sub_19C1D6A80(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C1D6A94()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = &unk_1E3D24F98;
  __cxa_throw(exception, (struct type_info *)&unk_1E3D1DF90, (void (*)(void *))std::exception::~exception);
}

void sub_19C1D6ACC(std::exception *a1)
{
  void *v1;

  std::exception::~exception(a1);
  operator delete(v1);
}

char **sub_19C1D6AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  BOOL v18;
  void *v20;
  _BYTE v21[4];
  _BYTE v22[12];
  _OWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  double v26;
  char *v27[2];
  int v28;
  char *v29[12];
  BOOL (**v30)(uint64_t, _DWORD *);
  char v31;
  int v32;
  BOOL (**v33)(uint64_t, int *);
  char v34;
  uint64_t v35;
  int v36;
  uint64_t *v37[13];
  int v38;

  v6 = *(_DWORD *)(a1 + 56);
  v7 = *(_DWORD *)(a1 + 60);
  v8 = *(_QWORD *)(a1 + 64);
  v21[0] = 0;
  *(_DWORD *)v22 = v7;
  *(_QWORD *)&v22[4] = v8;
  memset(v23, 0, sizeof(v23));
  v24 = v25;
  v25[0] = 0;
  v26 = 0.0;
  v27[0] = 0;
  v25[1] = 0;
  v25[2] = &v26;
  v28 = 0;
  v31 = 0;
  v30 = (BOOL (**)(uint64_t, _DWORD *))&unk_1E3D21888;
  v32 = v6;
  v34 = 0;
  v36 = HIDWORD(v8);
  v35 = *(_QWORD *)v22;
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D218A0;
  sub_19C1C5D14(v37, (uint64_t)v23);
  v37[12] = (uint64_t *)v27[1];
  v38 = v28;
  v20 = &unk_1E3D218A0;
  sub_19C17B808((char **)v23);
  v9 = *(_DWORD *)(a1 + 72);
  (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
  v10 = *(_QWORD *)(a2 + 24);
  if (!v10)
    goto LABEL_16;
  v11 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v10 + 48))(v10, v29);
  (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
  std::chrono::steady_clock::now();
  LODWORD(v20) = 1;
  sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
  v26 = v11;
  sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
  if (1 % v9)
    goto LABEL_5;
  v12 = *(_QWORD *)(a2 + 56);
  if (!v12)
LABEL_17:
    sub_19C1D6A94();
  if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v12 + 48))(v12, &v20) & 1) == 0)
  {
LABEL_5:
    if (!(*v30)((uint64_t)&v30, &v20))
    {
      v13 = (*v33)((uint64_t)&v33, (int *)&v20);
      sub_19C17B808(v27);
      sub_19C17B808((char **)v21);
      sub_19C17B808(v29);
      if (v13)
        goto LABEL_15;
      v14 = 2;
      while (1)
      {
        (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
        v15 = *(_QWORD *)(a2 + 24);
        if (!v15)
          break;
        v16 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v15 + 48))(v15, v29);
        (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
        std::chrono::steady_clock::now();
        std::chrono::steady_clock::now();
        LODWORD(v20) = v14;
        sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
        v26 = v16;
        sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
        if (!(v14 % v9))
        {
          v17 = *(_QWORD *)(a2 + 56);
          if (!v17)
            goto LABEL_17;
          if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v17 + 48))(v17, &v20) & 1) != 0)
            goto LABEL_6;
        }
        if ((*v30)((uint64_t)&v30, &v20))
          goto LABEL_6;
        v18 = (*v33)((uint64_t)&v33, (int *)&v20);
        sub_19C17B808(v27);
        sub_19C17B808((char **)v21);
        sub_19C17B808(v29);
        ++v14;
        if (v18)
          goto LABEL_15;
      }
LABEL_16:
      sub_19C1D6A94();
    }
  }
LABEL_6:
  sub_19C17B808(v27);
  sub_19C17B808((char **)v21);
  sub_19C17B808(v29);
LABEL_15:
  sub_19C1D6818(*(_QWORD *)(a1 + 120), a3);
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D218A0;
  return sub_19C17B808((char **)v37);
}

void sub_19C1D6E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char *a37)
{
  char **v37;
  char **v38;
  char **v39;
  uint64_t v40;

  sub_19C17B808(v39);
  sub_19C17B808(v38);
  sub_19C17B808(&a37);
  *(_QWORD *)(v40 - 240) = &unk_1E3D218A0;
  sub_19C17B808(v37);
  _Unwind_Resume(a1);
}

void sub_19C1D6E88(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  std::logic_error *exception;
  uint64_t v5;

  v3 = *(_DWORD *)(a1 + 48);
  if (v3 == 1)
  {
    sub_19C1D6F30(a1, &v5);
    *a2 = v5;
  }
  else
  {
    if (v3)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1C79A4(exception, "Invalid optimizer in user config.");
      __cxa_throw(exception, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    }
    sub_19C1C76D4(a1, &v5);
    *a2 = v5;
  }
}

void sub_19C1D6F1C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C1D6F30(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  void **v15;
  void *v16;
  void **v17;
  void *__p;
  char **v19;
  char v20;

  v4 = operator new();
  sub_19C1C2D98((uint64_t)&v14, a1);
  sub_19C1D7098(v4, (uint64_t *)&v14);
  *a2 = v4;
  if (v20)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v19;
      v7 = __p;
      if (v19 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v19 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v16;
  if (v16)
  {
    v9 = v17;
    v10 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v16;
    }
    v17 = v8;
    operator delete(v10);
  }
  v11 = (void **)v14;
  if (v14)
  {
    v12 = v15;
    v13 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v14;
    }
    v15 = v11;
    operator delete(v13);
  }
}

void sub_19C1D7068(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  va_list va;

  va_start(va, a2);
  sub_19C1C2E88((uint64_t)va);
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_19C1D7084(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1D7098(uint64_t a1, uint64_t *a2)
{
  char **v4;
  char **v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  int v13;
  int v14;
  _QWORD *v15;
  char ***v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  char **v39;
  char **v40;
  char **v41;
  void **v42;
  void **v43;
  void *v44;
  void **v45;
  void **v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t **v52;
  uint64_t **v53;
  uint64_t v54;
  uint64_t *v55;
  void *v57;
  void **v58;
  uint64_t v59;
  void *v60;
  void **v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  void *v65;
  void **v66;
  void *v67;
  void **v68;
  void *__p;
  char **v70;
  char v71;

  sub_19C1C2D98((uint64_t)&v65, (uint64_t)a2);
  *(_QWORD *)a1 = &unk_1E3D214F8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_19C1C2D98(a1 + 32, (uint64_t)&v65);
  if (v71)
  {
    v4 = (char **)__p;
    if (__p)
    {
      v5 = v70;
      v6 = __p;
      if (v70 != __p)
      {
        do
          v5 = sub_19C17B808(v5 - 12);
        while (v5 != v4);
        v6 = __p;
      }
      v70 = v4;
      operator delete(v6);
    }
  }
  v7 = (void **)v67;
  if (v67)
  {
    v8 = v68;
    v9 = v67;
    if (v68 != v67)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v67;
    }
    v68 = v7;
    operator delete(v9);
  }
  v10 = (void **)v65;
  if (v65)
  {
    v11 = v66;
    v12 = v65;
    if (v66 != v65)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v65;
    }
    v66 = v10;
    operator delete(v12);
  }
  *(_QWORD *)a1 = &unk_1E3D216D8;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  v13 = sub_19C178A44(a2);
  v14 = sub_19C179558((uint64_t)a2);
  *(_DWORD *)(a1 + 176) = v14 + v13;
  *(_QWORD *)(a1 + 184) = v14 + v13;
  *(_OWORD *)(a1 + 192) = xmmword_19C27A9D0;
  *(_QWORD *)(a1 + 208) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 232) = 0;
  *(_DWORD *)(a1 + 240) = 0;
  v15 = operator new(0x10uLL);
  *(_QWORD *)(a1 + 216) = v15;
  *(_QWORD *)(a1 + 224) = v15 + 2;
  *(_QWORD *)(a1 + 232) = v15 + 2;
  *(_DWORD *)(a1 + 240) = 2;
  *v15 = 0;
  v15[1] = 0;
  *(_QWORD *)(a1 + 448) = 0;
  *(_QWORD *)(a1 + 456) = 0;
  *(_QWORD *)(a1 + 440) = 0;
  *(_DWORD *)(a1 + 464) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 292) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 420) = 0u;
  *(_QWORD *)(a1 + 496) = 0;
  *(_QWORD *)(a1 + 504) = 0;
  *(_DWORD *)(a1 + 520) = 0;
  *(_QWORD *)(a1 + 512) = 0;
  *(_DWORD *)(a1 + 536) = -1;
  *(_QWORD *)(a1 + 480) = &unk_1E3D20FE8;
  *(_QWORD *)(a1 + 488) = a1 + 176;
  *(_QWORD *)(a1 + 544) = 0;
  *(_QWORD *)(a1 + 560) = 0;
  sub_19C1C81AC(a1 + 568);
  v16 = (char ***)(a1 + 10672);
  *(_QWORD *)(a1 + 10688) = 0;
  *(_OWORD *)(a1 + 10672) = 0u;
  if ((int)sub_19C179558(a1 + 32) < 1)
    sub_19C1D7984(a1 + 480, (uint64_t *)(a1 + 32), (uint64_t *)(a1 + 108), (uint64_t *)&v63);
  else
    sub_19C1D77D8(a1 + 480, (uint64_t *)(a1 + 32), (uint64_t *)&v63);
  v17 = v63;
  *(_QWORD *)&v63 = 0;
  v18 = *(_QWORD *)(a1 + 560);
  *(_QWORD *)(a1 + 560) = v17;
  if (v18)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = v63;
    *(_QWORD *)&v63 = 0;
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v20 = 0;
    v21 = *(_DWORD *)(a1 + 108);
    *(_DWORD *)(a1 + 8160) = v21;
    v22 = 1;
    v23 = v21;
    do
    {
      v24 = 1812433253 * (v23 ^ (v23 >> 30));
      v23 = v24 + v22;
      *(_DWORD *)(a1 + 8164 + 4 * v20) = v20 + v24 + 1;
      ++v22;
      ++v20;
    }
    while (v20 != 623);
    *(_QWORD *)(a1 + 10656) = 0;
    *(_DWORD *)(a1 + 568) = v21;
    v25 = 1;
    v26 = 143;
    v27 = v21;
    do
    {
      v28 = 1812433253 * (v27 ^ (v27 >> 30));
      v27 = v28 + v25;
      *(_DWORD *)(a1 + 4 * v26) = v26 + v28 - 142;
      ++v25;
      ++v26;
    }
    while (v26 != 766);
    v29 = 0;
    *(_QWORD *)(a1 + 3064) = 0;
    *(_DWORD *)(a1 + 3096) = v21;
    v30 = 1;
    v31 = v21;
    do
    {
      v32 = 1812433253 * (v31 ^ (v31 >> 30));
      v31 = v32 + v30;
      *(_DWORD *)(a1 + 3100 + 4 * v29) = v29 + v32 + 1;
      ++v30;
      ++v29;
    }
    while (v29 != 623);
    v33 = 0;
    *(_QWORD *)(a1 + 5592) = 0;
    *(_DWORD *)(a1 + 5616) = v21;
    v34 = 1;
    do
    {
      v35 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v35 + v34;
      *(_DWORD *)(a1 + 5620 + 4 * v33) = v33 + v35 + 1;
      ++v34;
      ++v33;
    }
    while (v33 != 623);
    *(_QWORD *)(a1 + 8112) = 0;
    sub_19C23B684();
  }
  v58 = 0;
  v59 = 0;
  v57 = 0;
  sub_19C17AF88(&v57, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 4));
  v60 = 0;
  v61 = 0;
  v62 = 0;
  sub_19C17B16C(&v60, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 56)) >> 3));
  v36 = sub_19C178A44((uint64_t *)(a1 + 32));
  v37 = 5 * (sub_19C179558(a1 + 32) + v36);
  if (*(_BYTE *)(a1 + 144))
  {
    v38 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
    if ((int)v37 <= v38)
      v37 = v38;
    else
      v37 = v37;
  }
  sub_19C17A144((uint64_t *)&v57, a1 + 568, v37, (char **)&v63);
  v39 = *v16;
  if (*v16)
  {
    v40 = *(char ***)(a1 + 10680);
    v41 = *v16;
    if (v40 != v39)
    {
      do
        v40 = sub_19C17B808(v40 - 12);
      while (v40 != v39);
      v41 = *v16;
    }
    *(_QWORD *)(a1 + 10680) = v39;
    operator delete(v41);
    *v16 = 0;
    *(_QWORD *)(a1 + 10680) = 0;
    *(_QWORD *)(a1 + 10688) = 0;
  }
  *(_OWORD *)(a1 + 10672) = v63;
  *(_QWORD *)(a1 + 10688) = v64;
  v64 = 0;
  v63 = 0uLL;
  v42 = (void **)v60;
  if (v60)
  {
    v43 = v61;
    v44 = v60;
    if (v61 != v60)
    {
      do
      {
        if (*((char *)v43 - 17) < 0)
          operator delete(*(v43 - 5));
        v43 -= 5;
      }
      while (v43 != v42);
      v44 = v60;
    }
    v61 = v42;
    operator delete(v44);
  }
  v45 = (void **)v57;
  if (v57)
  {
    v46 = v58;
    v47 = v57;
    if (v58 != v57)
    {
      do
      {
        if (*((char *)v46 - 25) < 0)
          operator delete(*(v46 - 6));
        v46 -= 6;
      }
      while (v46 != v45);
      v47 = v57;
    }
    v58 = v45;
    operator delete(v47);
  }
  if (*(_BYTE *)(a1 + 144))
  {
    v48 = *(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120);
    if (v48)
    {
      v49 = 0;
      v50 = 0;
      v51 = v48 / 96;
      do
      {
        while (1)
        {
          v53 = *(uint64_t ***)(a1 + 10680);
          v54 = *(_QWORD *)(a1 + 10672);
          if (v50 >= 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v53 - v54) >> 5))
            break;
          if (!*(_BYTE *)(a1 + 144))
            goto LABEL_77;
          sub_19C1C9C8C(v54 + v49, *(_QWORD *)(a1 + 120) + v49);
          ++v50;
          v49 += 96;
          if (v51 == v50)
            return a1;
        }
        if (!*(_BYTE *)(a1 + 144))
LABEL_77:
          sub_19C1D1E0C();
        v55 = (uint64_t *)(*(_QWORD *)(a1 + 120) + v49);
        if ((unint64_t)v53 < *(_QWORD *)(a1 + 10688))
          v52 = sub_19C1C1840(v53, v55) + 12;
        else
          v52 = sub_19C1D1CCC((uint64_t ***)(a1 + 10672), v55);
        *(_QWORD *)(a1 + 10680) = v52;
        ++v50;
        v49 += 96;
      }
      while (v51 != v50);
    }
  }
  return a1;
}

void sub_19C1D76E8(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  _QWORD *v3;
  _QWORD *v4;
  std::random_device *v5;
  void **v6;
  void **v8;
  uint64_t v9;
  void *v10;

  sub_19C17AA64(v6);
  sub_19C1C7C7C(v5);
  v8 = (void **)(v1 + 62);
  v9 = v1[70];
  v1[70] = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  *v4 = &unk_1E3D20E80;
  v10 = *v8;
  if (*v8)
  {
    v1[63] = v10;
    operator delete(v10);
  }
  sub_19C1D2994(v3);
  sub_19C1C9D28(v2);
  sub_19C1C7CC8(v1);
  _Unwind_Resume(a1);
}

void sub_19C1D77D8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v6 = operator new();
  v14 = 0;
  v15 = 0;
  v13 = 0;
  sub_19C17AF88(&v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1D8C5C(v6, a1, (uint64_t *)&v13);
  *a3 = v6;
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v17;
    v9 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v17 = v7;
    operator delete(v9);
  }
  v10 = (void **)v13;
  if (v13)
  {
    v11 = v14;
    v12 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v13;
    }
    v14 = v10;
    operator delete(v12);
  }
}

void sub_19C1D7930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1D794C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1D7984(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  void **v9;
  void **v10;
  void *v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  uint64_t v17;
  void *__p;
  void **v19;
  uint64_t v20;

  v8 = operator new();
  v16 = 0;
  v17 = 0;
  v15 = 0;
  sub_19C17AF88(&v15, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1D9FC4(v8, a1, (uint64_t *)&v15, *a3);
  *a4 = v8;
  v9 = (void **)__p;
  if (__p)
  {
    v10 = v19;
    v11 = __p;
    if (v19 != __p)
    {
      do
      {
        if (*((char *)v10 - 17) < 0)
          operator delete(*(v10 - 5));
        v10 -= 5;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v19 = v9;
    operator delete(v11);
  }
  v12 = (void **)v15;
  if (v15)
  {
    v13 = v16;
    v14 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v13 - 25) < 0)
          operator delete(*(v13 - 6));
        v13 -= 6;
      }
      while (v13 != v12);
      v14 = v15;
    }
    v16 = v12;
    operator delete(v14);
  }
}

void sub_19C1D7ADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1D7AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1D7B34(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_19C1DB670(a1);
  operator delete(v1);
}

uint64_t **sub_19C1D7B48@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  signed int v8;
  char *v10[13];

  v4 = a1 + 8;
  v5 = 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3);
  v6 = a1 + 32;
  v7 = sub_19C178A44((uint64_t *)(a1 + 32));
  v8 = 5 * (sub_19C179558(v6) + v7);
  if (*(_BYTE *)(v4 + 136) && v8 <= (int)(-1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5)))
    v8 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
  if (v5 < v8)
    return sub_19C1C1840(a2, (uint64_t *)(*(_QWORD *)(a1 + 10672)+ 96 * (int)(-991146299 * ((*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3))));
  (*(void (**)(char **__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 560) + 16))(v10, *(_QWORD *)(a1 + 560), v4);
  sub_19C1C1840(a2, (uint64_t *)v10);
  return (uint64_t **)sub_19C17B808(v10);
}

void sub_19C1D7C60(uint64_t a1, __int128 **a2, double a3)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  long double v11;
  double v12;
  unint64_t v13;
  void *v14;
  int64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t **v23;
  uint64_t **v24;
  uint64_t **v25;
  double v26;
  double v27;
  double v28;
  void *__p;
  _BYTE *v30;
  int v31;
  uint64_t *v32[12];
  double v33;

  sub_19C1CBD8C(a2, (uint64_t)&__p);
  v6 = sub_19C1D9BFC(a1 + 176, (const double **)&__p);
  v8 = sqrt(v7);
  v27 = v8;
  v28 = v6;
  v9 = v6 - (*(double *)(a1 + 528) + *(double *)(a1 + 544));
  v10 = v9 / v8;
  v11 = erfc(v9 / v8 * -0.707106781) * (0.5 * v9);
  v12 = v11 + v8 * 0.39894228 * exp(v10 * v10 * -0.5);
  v26 = v12;
  v13 = *(_QWORD *)(a1 + 160);
  if (v13 >= *(_QWORD *)(a1 + 168))
  {
    v18 = sub_19C1D2BAC((uint64_t *)(a1 + 152), (uint64_t)&__p, &v28, (uint64_t *)&v27, (uint64_t *)&v26);
  }
  else
  {
    *(_QWORD *)v13 = 0;
    *(_QWORD *)(v13 + 8) = 0;
    *(_QWORD *)(v13 + 16) = 0;
    v14 = __p;
    v15 = v30 - (_BYTE *)__p;
    if (v30 != __p)
    {
      if (v15 < 0)
        sub_19C07DA0C();
      v16 = (char *)operator new(v30 - (_BYTE *)__p);
      *(_QWORD *)v13 = v16;
      *(_QWORD *)(v13 + 8) = v16;
      v17 = &v16[8 * (v15 >> 3)];
      *(_QWORD *)(v13 + 16) = v17;
      memcpy(v16, v14, v15);
      *(_QWORD *)(v13 + 8) = v17;
    }
    *(_DWORD *)(v13 + 24) = v31;
    *(double *)(v13 + 32) = v6;
    *(double *)(v13 + 40) = v8;
    *(double *)(v13 + 48) = v12;
    v18 = v13 + 56;
    *(_QWORD *)(a1 + 160) = v13 + 56;
  }
  *(_QWORD *)(a1 + 160) = v18;
  v19 = *(int *)(a1 + 464);
  v20 = v19 + 1;
  *(_DWORD *)(a1 + 464) = v19 + 1;
  v21 = *(_QWORD *)(a1 + 440);
  v22 = (*(_QWORD *)(a1 + 448) - v21) >> 3;
  if (v19 + 1 <= v22)
  {
    if (v19 + 1 < v22)
      *(_QWORD *)(a1 + 448) = v21 + 8 * v19 + 8;
  }
  else
  {
    sub_19C17C9D8(a1 + 440, v19 + 1 - v22);
    v20 = *(int *)(a1 + 464);
    v21 = *(_QWORD *)(a1 + 440);
  }
  *(double *)(v21 + 8 * v20 - 8) = a3;
  sub_19C1DB7E8(a1 + 176, (uint64_t)&__p);
  sub_19C1DC998(a1 + 472, a1 + 176);
  sub_19C1D7F58(a1 + 480);
  sub_19C1C1840(v32, (uint64_t *)a2);
  v33 = a3;
  v23 = *(uint64_t ***)(a1 + 16);
  if ((unint64_t)v23 >= *(_QWORD *)(a1 + 24))
  {
    v25 = sub_19C1C907C((uint64_t ***)(a1 + 8), (uint64_t *)v32);
  }
  else
  {
    v24 = sub_19C1C1840(v23, (uint64_t *)v32);
    *((double *)v24 + 12) = v33;
    v25 = v24 + 13;
  }
  *(_QWORD *)(a1 + 16) = v25;
  sub_19C17B808((char **)v32);
  if (__p)
  {
    v30 = __p;
    operator delete(__p);
  }
}

void sub_19C1D7E90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  sub_19C17B808(&a16);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

long double sub_19C1D7EDC(uint64_t a1, double a2, double a3)
{
  double v4;
  double v5;
  long double v6;

  v4 = a2 - (*(double *)(a1 + 48) + *(double *)(a1 + 64));
  v5 = v4 / a3;
  v6 = erfc(v4 / a3 * -0.707106781) * (0.5 * v4);
  return v6 + a3 * 0.39894228 * exp(v5 * v5 * -0.5);
}

double sub_19C1D7F50()
{
  return 0.0;
}

void sub_19C1D7F58(uint64_t a1)
{
  _QWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double *v10;
  double *v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  char *v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  __int128 *v19;
  _OWORD *v20;
  unint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const double *v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  double *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  double *v44;
  uint64_t v45;
  unint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  double *v52;
  uint64_t v53;
  __int128 v54;
  double *v55;
  double *v56;
  double v57;
  double *v58;
  double *v59;
  double v60;
  BOOL v61;
  char *v62;
  signed int v63;
  _OWORD *v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  _OWORD *v84;
  unint64_t v85;
  __int128 v86;
  unint64_t v87;
  uint64_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v93;
  uint64_t v94;
  void *__p;
  int v96[2];
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  double *v104;
  uint64_t v105;
  double *v106;
  double *v107;
  double *v108;
  uint64_t v109;
  unsigned int v110;

  v104 = 0;
  v105 = 0;
  v106 = 0;
  v1 = *(_QWORD **)(a1 + 8);
  v101 = 0;
  v102 = 0;
  v100 = 0;
  v3 = (_BYTE *)v1[9];
  v2 = (_BYTE *)v1[10];
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(v2 - v3);
    v6 = &v5[8 * (v4 >> 3)];
    v100 = v5;
    v102 = v6;
    memcpy(v5, v3, v4);
    v101 = v6;
  }
  v7 = v1[12];
  v103 = v7;
  if (!(_DWORD)v7)
  {
    v55 = 0;
    v58 = 0;
    *(_DWORD *)(a1 + 56) = 0;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v90 = (int)v7;
  v91 = v7;
  v13 = 8 * (v7 >> 32);
  v88 = v7 >> 32;
  v89 = v13;
  v87 = (v7 >> 32) & 0xFFFFFFFFFFFFFFFCLL;
  v93 = HIDWORD(v7);
  v94 = 16;
  do
  {
    v14 = *(_QWORD *)(a1 + 8);
    v15 = v100;
    __p = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    if (!(_DWORD)v93)
    {
      v16 = 0;
      v108 = 0;
      v109 = 0;
      v107 = 0;
      v110 = 0;
      goto LABEL_27;
    }
    if (v7 < 0)
      sub_19C07DA0C();
    v16 = operator new(v13);
    bzero(v16, v13);
    if ((unint64_t)v7 >> 33 < 3)
    {
      v17 = 0;
      v18 = v88;
      goto LABEL_17;
    }
    v18 = v88;
    if ((unint64_t)((char *)v16 - &v100[v13 * v12]) < 0x20)
    {
      v17 = 0;
LABEL_17:
      v23 = v18 - v17;
      v24 = 8 * v17;
      v25 = (_QWORD *)v16 + v17;
      v26 = (uint64_t *)&v15[v8 + v24];
      do
      {
        v27 = *v26++;
        *v25++ = v27;
        --v23;
      }
      while (v23);
      goto LABEL_19;
    }
    v19 = (__int128 *)&v100[v94];
    v20 = v16 + 1;
    v21 = v87;
    do
    {
      v22 = *v19;
      *(v20 - 1) = *(v19 - 1);
      *v20 = v22;
      v19 += 2;
      v20 += 2;
      v21 -= 4;
    }
    while (v21);
    v17 = v87;
    if (v88 != v87)
      goto LABEL_17;
LABEL_19:
    v107 = 0;
    v108 = 0;
    v109 = 0;
    v110 = v93;
    sub_19C17C9D8((uint64_t)&v107, v18);
    v28 = v110;
    if ((int)v110 >= 1)
    {
      v29 = 0;
      v30 = v107;
      if (v110 < 4)
        goto LABEL_25;
      if ((unint64_t)((char *)v107 - (char *)v16) < 0x20)
        goto LABEL_25;
      v31 = 0;
      v29 = v110 & 0xFFFFFFFC;
      v32 = (8 * v110) & 0x7FFFFFFE0;
      do
      {
        v33 = v16[v31 / 0x10 + 1];
        v34 = (double *)&v30[v31 / 8];
        *(_OWORD *)v34 = v16[v31 / 0x10];
        *((_OWORD *)v34 + 1) = v33;
        v31 += 32;
      }
      while (v32 != v31);
      if (v29 != v28)
      {
LABEL_25:
        v35 = v28 - v29;
        v36 = v29 << 32;
        do
        {
          *(const double *)((char *)v30 + (v36 >> 29)) = *(const double *)((char *)v16 + (v36 >> 29));
          v36 += 0x100000000;
          --v35;
        }
        while (v35);
      }
    }
LABEL_27:
    v37 = sub_19C1D8728(v14, (const double **)&v107);
    v38 = v37;
    if (v11 < v10)
    {
      *v11++ = v37;
      v7 = v91;
      v13 = v89;
      v105 = (uint64_t)v11;
      v39 = v107;
      if (!v107)
        goto LABEL_30;
LABEL_29:
      v108 = v39;
      operator delete(v39);
      goto LABEL_30;
    }
    v40 = v11 - v9;
    v41 = v40 + 1;
    if ((unint64_t)(v40 + 1) >> 61)
      sub_19C07DA0C();
    if (((char *)v10 - (char *)v9) >> 2 > v41)
      v41 = ((char *)v10 - (char *)v9) >> 2;
    if ((unint64_t)((char *)v10 - (char *)v9) >= 0x7FFFFFFFFFFFFFF8)
      v42 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v42 = v41;
    if (v42)
    {
      if (v42 >> 61)
        sub_19C07C7FC();
      v43 = operator new(8 * v42);
      v44 = (double *)&v43[8 * v40];
      *v44 = v38;
      v45 = (uint64_t)(v44 + 1);
      if (v11 != v9)
      {
LABEL_41:
        v46 = (char *)(v11 - 1) - (char *)v9;
        if (v46 < 0x168
          || &v43[(char *)v11 - (char *)v9 - 8 - (v46 & 0xFFFFFFFFFFFFFFF8)] > &v43[(char *)v11 - (char *)v9 - 8]
          || (double *)((char *)v11 - (v46 & 0xFFFFFFFFFFFFFFF8) - 8) > v11 - 1
          || (unint64_t)((char *)v9 - v43) < 0x20)
        {
          v47 = v11;
          v7 = v91;
          v13 = v89;
        }
        else
        {
          v49 = (v46 >> 3) + 1;
          v50 = 8 * (v49 & 0x3FFFFFFFFFFFFFFCLL);
          v47 = &v11[v50 / 0xFFFFFFFFFFFFFFF8];
          v44 = (double *)((char *)v44 - v50);
          v51 = &v43[8 * v40 - 16];
          v52 = v11 - 2;
          v53 = v49 & 0x3FFFFFFFFFFFFFFCLL;
          v7 = v91;
          do
          {
            v54 = *(_OWORD *)v52;
            *(v51 - 1) = *((_OWORD *)v52 - 1);
            *v51 = v54;
            v51 -= 2;
            v52 -= 4;
            v53 -= 4;
          }
          while (v53);
          v13 = v89;
          if (v49 == (v49 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_44:
            v10 = (double *)&v43[8 * v42];
            v104 = v44;
            v105 = v45;
            v106 = v10;
            if (!v9)
              goto LABEL_46;
LABEL_45:
            operator delete(v9);
            goto LABEL_46;
          }
        }
        do
        {
          v48 = *((_QWORD *)v47-- - 1);
          *((_QWORD *)v44-- - 1) = v48;
        }
        while (v47 != v9);
        goto LABEL_44;
      }
    }
    else
    {
      v43 = 0;
      v44 = (double *)(8 * v40);
      *(double *)(8 * v40) = v37;
      v45 = 8 * v40 + 8;
      if (v11 != v9)
        goto LABEL_41;
    }
    v7 = v91;
    v13 = v89;
    v10 = (double *)&v43[8 * v42];
    v104 = v44;
    v105 = v45;
    v106 = v10;
    if (v9)
      goto LABEL_45;
LABEL_46:
    v9 = v44;
    v11 = (double *)v45;
    v105 = v45;
    v39 = v107;
    if (v107)
      goto LABEL_29;
LABEL_30:
    if (v16)
      operator delete(v16);
    ++v12;
    v94 += v13;
    v8 += v13;
  }
  while (v12 != v90);
  v55 = v104;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 96);
  if (v55 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v56 = v55 + 1;
  if (v55 + 1 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v57 = *v55;
  v58 = v55;
  v59 = v55 + 1;
  do
  {
    v60 = *v59++;
    v61 = v57 < v60;
    v57 = fmax(v57, v60);
    if (v61)
      v58 = v56;
    v56 = v59;
  }
  while (v59 != v11);
  v62 = v100;
  v63 = HIDWORD(v103);
  v107 = 0;
  v108 = 0;
  v109 = 0;
  if (!HIDWORD(v103))
  {
LABEL_81:
    v74 = 0;
    LODWORD(v73) = 0;
    v64 = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    __p = 0;
    v98 = 0;
    goto LABEL_82;
  }
LABEL_65:
  if (v63 < 0)
    sub_19C07DA0C();
  v64 = operator new(8 * v63);
  v65 = (v58 - v55) * v63;
  bzero(v64, 8 * v63);
  if (v63 < 0xA || (v66 = &v62[8 * v65], (unint64_t)((char *)v64 - v66) < 0x20))
  {
    v67 = 0;
    goto LABEL_69;
  }
  v67 = v63 & 0xFFFFFFFFFFFFFFFCLL;
  v83 = (__int128 *)(v66 + 16);
  v84 = v64 + 1;
  v85 = v67;
  do
  {
    v86 = *v83;
    *(v84 - 1) = *(v83 - 1);
    *v84 = v86;
    v83 += 2;
    v84 += 2;
    v85 -= 4;
  }
  while (v85);
  if (v67 != v63)
  {
LABEL_69:
    v68 = v63 - v67;
    v69 = 8 * v67;
    v70 = (_QWORD *)v64 + v67;
    v71 = &v62[8 * v65 + v69];
    do
    {
      v72 = *(_QWORD *)v71;
      v71 += 8;
      *v70++ = v72;
      --v68;
    }
    while (v68);
  }
  __p = 0;
  *(_QWORD *)v96 = 0;
  v97 = 0;
  v98 = v63;
  sub_19C17C9D8((uint64_t)&__p, v63);
  v73 = v98;
  v74 = (char *)__p;
  if ((int)v98 >= 1)
  {
    v75 = 0;
    if (v98 < 4)
      goto LABEL_77;
    if ((unint64_t)((_BYTE *)__p - (_BYTE *)v64) < 0x20)
      goto LABEL_77;
    v76 = 0;
    v75 = v98 & 0xFFFFFFFC;
    v77 = (8 * v98) & 0x7FFFFFFE0;
    do
    {
      v78 = v64[v76 / 0x10 + 1];
      v79 = &v74[v76];
      *(_OWORD *)v79 = v64[v76 / 0x10];
      *((_OWORD *)v79 + 1) = v78;
      v76 += 32;
    }
    while (v77 != v76);
    if (v75 != v73)
    {
LABEL_77:
      v80 = v73 - v75;
      v81 = v75 << 32;
      do
      {
        *(_QWORD *)&v74[v81 >> 29] = *(_QWORD *)((char *)v64 + (v81 >> 29));
        v81 += 0x100000000;
        --v80;
      }
      while (v80);
    }
  }
LABEL_82:
  v82 = *(_QWORD *)v58;
  v99 = *(_QWORD *)v58;
  if ((void **)(a1 + 16) != &__p)
  {
    sub_19C11EAD0((_QWORD *)(a1 + 16), v74, *(char **)v96, (uint64_t)(*(_QWORD *)v96 - (_QWORD)v74) >> 3);
    LODWORD(v73) = v98;
    v82 = v99;
    v74 = (char *)__p;
  }
  *(_DWORD *)(a1 + 40) = v73;
  *(_QWORD *)(a1 + 48) = v82;
  if (v74)
  {
    *(_QWORD *)v96 = v74;
    operator delete(v74);
  }
  if (v64)
    operator delete(v64);
  if (v62)
    operator delete(v62);
  if (v55)
  {
    v105 = (uint64_t)v55;
    operator delete(v55);
  }
}

void sub_19C1D866C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  void *v28;
  void *v29;

  if (__p)
    operator delete(__p);
  if (v28)
    operator delete(v28);
  if (v29)
    operator delete(v29);
  if (a27)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

double sub_19C1D8728(uint64_t a1, const double **a2)
{
  double v3;
  double v4;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 96))
  {
    sub_19C1D8808(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 232), 1, &__C, (int)__N);
    v3 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 264), 1, &__C, *(int *)(a1 + 288));
    v4 = __C;
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v4 + v3;
  }
  else
  {
    __A[0] = 0;
    vDSP_meanvD(*(const double **)(a1 + 264), 1, (double *)__A, *(int *)(a1 + 288));
    return *(double *)__A;
  }
}

void sub_19C1D87EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1D8808(uint64_t a1@<X0>, const double **a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  signed int v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  double v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  char *v25;
  void *__p;
  char *v28;
  char *v29;
  signed int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = *(_DWORD *)(a1 + 96);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  *(_DWORD *)(a3 + 24) = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  if (v3)
  {
    if (v3 < 0)
      sub_19C07DA0C();
    v5 = v3;
    v6 = (char *)operator new(8 * v3);
    bzero(v6, 8 * v3);
    v7 = 0;
    v8 = 0;
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = &v6[8 * v3];
    *(_QWORD *)(a3 + 16) = &v6[8 * v3];
    *(_DWORD *)(a3 + 24) = v3;
    v25 = v6;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 72);
      v10 = *(_DWORD *)(a1 + 100);
      v31 = 0;
      v32 = 0;
      v33 = 0;
      if (!v10)
      {
        v11 = 0;
        v28 = 0;
        v29 = 0;
        __p = 0;
        v30 = 0;
        goto LABEL_14;
      }
      if (v10 < 0)
        sub_19C07DA0C();
      v11 = operator new(8 * v10);
      bzero(v11, 8 * v10);
      if (v10 >= 8 && (unint64_t)v11 - v9 - 8 * v8 * v10 >= 0x20)
      {
        v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
        v20 = (__int128 *)(v9 + v7 * v10 + 16);
        v21 = v11 + 1;
        v22 = v12;
        do
        {
          v23 = *v20;
          *(v21 - 1) = *(v20 - 1);
          *v21 = v23;
          v20 += 2;
          v21 += 2;
          v22 -= 4;
        }
        while (v22);
        if (v12 == v10)
          goto LABEL_12;
      }
      else
      {
        v12 = 0;
      }
      v13 = v10 - v12;
      v14 = 8 * v12;
      v15 = (_QWORD *)v11 + v12;
      v16 = (uint64_t *)(v9 + v14 + v7 * v10);
      do
      {
        v17 = *v16++;
        *v15++ = v17;
        --v13;
      }
      while (v13);
LABEL_12:
      __p = 0;
      v28 = 0;
      v30 = 0;
      v29 = 0;
      __p = operator new(8 * v10);
      v28 = (char *)__p + 8 * v10;
      v29 = v28;
      v30 = v10;
      memcpy(__p, v11, 8 * v10);
      v6 = v25;
LABEL_14:
      v18 = *(double *)(a1 + 24);
      v19 = sub_19C1D8AB0(a1 + 8, (uint64_t)&__p, a2);
      *(long double *)&v6[8 * v8] = exp(v19 * -0.5) * v18;
      if (__p)
      {
        v28 = (char *)__p;
        operator delete(__p);
      }
      if (v11)
        operator delete(v11);
      ++v8;
      v7 += 8;
      if (v8 == v5)
        return;
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
}

void sub_19C1D8A3C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1D8A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14)
{
  void *v14;

  if (__p)
  {
    operator delete(__p);
    if (!v14)
    {
LABEL_3:
      *(_QWORD *)(a10 + 8) = a11;
      operator delete(a11);
      _Unwind_Resume(a1);
    }
  }
  else if (!v14)
  {
    goto LABEL_3;
  }
  operator delete(v14);
  *(_QWORD *)(a10 + 8) = a11;
  operator delete(a11);
  _Unwind_Resume(a1);
}

double sub_19C1D8AB0(uint64_t a1, uint64_t a2, const double **a3)
{
  uint64_t v6;
  const void *v7;
  int64_t v8;
  char *v9;
  char *v10;
  void *v11;
  double v12;
  double v13;
  double v14;

  v7 = *(const void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = v6 - *(_QWORD *)a2;
  if (v6 == *(_QWORD *)a2)
  {
    v10 = 0;
    v9 = 0;
  }
  else
  {
    if (v8 < 0)
      sub_19C07DA0C();
    v9 = (char *)operator new(v6 - *(_QWORD *)a2);
    v10 = &v9[8 * (v8 >> 3)];
    memcpy(v9, v7, v8);
  }
  vDSP_vsubD(*a3, 1, (const double *)v9, 1, (double *)v9, 1, *(int *)(a2 + 24));
  if (v10 == v9)
  {
    v11 = 0;
  }
  else
  {
    if (v10 - v9 < 0)
      sub_19C07DA0C();
    v11 = operator new(v10 - v9);
    memcpy(v11, v9, v10 - v9);
  }
  cblas_dnrm2_NEWLAPACK();
  v13 = v12;
  v14 = *(double *)(a1 + 24);
  if (v11)
    operator delete(v11);
  if (v9)
    operator delete(v9);
  return v13 * v13 / (v14 * v14);
}

void sub_19C1D8C04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;

  if (v15)
    operator delete(v15);
  if (v14)
    operator delete(v14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1D8C5C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void **v6;
  void **v7;
  void *v8;
  void **v9;
  void **v10;
  void *v11;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_19C17AF88(&v13, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21528;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v13, (uint64_t)v14, 0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (_BYTE *)v13) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v17, 0xCCCCCCCCCCCCCCCDLL * (((char *)v17 - (_BYTE *)__p) >> 3));
  v6 = (void **)__p;
  if (__p)
  {
    v7 = v17;
    v8 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v7 - 17) < 0)
          operator delete(*(v7 - 5));
        v7 -= 5;
      }
      while (v7 != v6);
      v8 = __p;
    }
    v17 = v6;
    operator delete(v8);
  }
  v9 = (void **)v13;
  if (v13)
  {
    v10 = v14;
    v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 25) < 0)
          operator delete(*(v10 - 6));
        v10 -= 6;
      }
      while (v10 != v9);
      v11 = v13;
    }
    v14 = v9;
    operator delete(v11);
  }
  *(_QWORD *)a1 = &unk_1E3D21348;
  *(_DWORD *)(a1 + 64) = 5;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_19C1D8DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;

  v11 = v10;
  if (*v11)
  {
    sub_19C2563D4(v9, *v11);
    sub_19C17A75C(&a9);
    _Unwind_Resume(a1);
  }
  sub_19C17A75C(&a9);
  _Unwind_Resume(a1);
}

void sub_19C1D8E3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    sub_19C25623C((uint64_t)&a9, a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_19C1D8E58(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;

  *a1 = &unk_1E3D21348;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  return sub_19C1D9480(a1);
}

void sub_19C1D8EC0(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;
  _QWORD *v5;

  *a1 = &unk_1E3D21348;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  v5 = sub_19C1D9480(a1);
  operator delete(v5);
}

void sub_19C1D8F2C(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  double *v15;
  double *v16;
  double *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v29;
  double v30;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD **v33;
  BOOL v34;
  uint64_t *v35;
  char **v36;
  char **v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40[4];
  uint64_t *v41;
  double *__A;
  double *v43;
  void *__p;
  char *v45;
  char *v46[3];
  char *v47[3];
  uint64_t *v48[12];
  char v49[8];
  _QWORD **v50;
  _QWORD *v51[2];
  uint64_t *v52;
  char **v53;
  double __C[2];

  sub_19C1D9548(a1);
  v6 = *(_QWORD *)(a1 + 72);
  if (v6 == *(_QWORD *)(a1 + 80))
  {
    v39 = a3;
    sub_19C1CBA2C(a2, &v52);
    sub_19C1D97DC(a2, (uint64_t)v49);
    v7 = v50;
    if (v50 != v51)
    {
      do
      {
        v8 = *(_QWORD *)((char *)v7 + 28);
        sub_19C1C1840(v48, &v52[12 * (int)v8]);
        if (SHIDWORD(v8) >= 1)
        {
          v9 = 0;
          v10 = HIDWORD(v8) & ~(v8 >> 63);
          do
          {
            sub_19C1D9918(a1, (uint64_t *)v48, (uint64_t **)&__A);
            sub_19C17A814((char **)v48, (uint64_t)&__A);
            sub_19C098FBC((uint64_t)v47, v47[1]);
            sub_19C098FBC((uint64_t)v46, v46[1]);
            v11 = (char *)__p;
            if (__p)
            {
              v12 = v45;
              v13 = __p;
              if (v45 != __p)
              {
                do
                {
                  v14 = (void *)*((_QWORD *)v12 - 4);
                  if (v14)
                  {
                    *((_QWORD *)v12 - 3) = v14;
                    operator delete(v14);
                  }
                  if (*(v12 - 33) < 0)
                    operator delete(*((void **)v12 - 7));
                  v12 -= 56;
                }
                while (v12 != v11);
                v13 = __p;
              }
              v45 = v11;
              operator delete(v13);
            }
            v15 = __A;
            if (*(double *)&__A != 0.0)
            {
              v16 = v43;
              v17 = __A;
              if (v43 != __A)
              {
                do
                {
                  v18 = (void *)*((_QWORD *)v16 - 4);
                  if (v18)
                  {
                    *((_QWORD *)v16 - 3) = v18;
                    operator delete(v18);
                  }
                  if (*((char *)v16 - 33) < 0)
                    operator delete(*((void **)v16 - 7));
                  v16 -= 7;
                }
                while (v16 != v15);
                v17 = __A;
              }
              v43 = v15;
              operator delete(v17);
            }
            v41 = 0;
            v19 = *(_QWORD *)(a1 + 8);
            sub_19C1CBD8C((__int128 **)v48, (uint64_t)v40);
            v20 = *(_QWORD *)(v19 + 8);
            if (*(_DWORD *)(v20 + 96))
            {
              sub_19C1D8808(*(_QWORD *)(v19 + 8), (const double **)v40, (uint64_t)&__A);
              __C[0] = 0.0;
              vDSP_dotprD(__A, 1, *(const double **)(v20 + 232), 1, __C, (int)__p);
              v21 = __C[0];
              __C[0] = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 264), 1, __C, *(int *)(v20 + 288));
              v22 = __C[0];
              sub_19C1D9DD0(v20, (const double **)v40, (uint64_t)&__A);
              v24 = v23;
              v25 = *(double *)(v20 + 16);
              if (*(double *)&__A != 0.0)
              {
                v43 = __A;
                operator delete(__A);
              }
              v26 = v22 + v21;
              v27 = v25 + v24;
            }
            else
            {
              *(double *)&__A = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 264), 1, (double *)&__A, *(int *)(v20 + 288));
              v26 = *(double *)&__A;
              v27 = sub_19C1D9D04(v20, (const double **)v40);
            }
            v28 = sqrt(v27);
            if (v28 < 0.00000001 || (v29 = *(_DWORD *)(*(_QWORD *)(v19 + 8) + 96), v29 <= 0))
            {
              v30 = (*(double (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            }
            else
            {
              if (*(_DWORD *)(v19 + 56) != v29)
                (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
              (**(void (***)(uint64_t, double, double))v19)(v19, v26, v28);
            }
            v31 = *(uint64_t **)&v30;
            if (v40[0])
            {
              v40[1] = v40[0];
              operator delete(v40[0]);
            }
            v41 = v31;
            sub_19C1CC134((int *)(a1 + 64), (uint64_t *)v48, &v41);
            ++v9;
          }
          while (v10 != v9);
        }
        sub_19C17B808((char **)v48);
        v32 = (_QWORD *)v7[1];
        if (v32)
        {
          do
          {
            v33 = (_QWORD **)v32;
            v32 = (_QWORD *)*v32;
          }
          while (v32);
        }
        else
        {
          do
          {
            v33 = (_QWORD **)v7[2];
            v34 = *v33 == v7;
            v7 = v33;
          }
          while (!v34);
        }
        v7 = v33;
      }
      while (v33 != v51);
    }
    v35 = *(uint64_t **)(a1 + 72);
    sub_19C1C1840((uint64_t **)v39, v35);
    *(_QWORD *)(v39 + 96) = v35[12];
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    sub_19C07C924((uint64_t)&v50, v51[0]);
    v36 = (char **)v52;
    if (v52)
    {
      v37 = v53;
      v38 = v52;
      if (v53 != (char **)v52)
      {
        do
          v37 = sub_19C17B808(v37 - 12);
        while (v37 != v36);
        v38 = v52;
      }
      v53 = v36;
      operator delete(v38);
    }
  }
  else
  {
    sub_19C1C1840((uint64_t **)a3, *(uint64_t **)(a1 + 72));
    *(_QWORD *)(a3 + 96) = *(_QWORD *)(v6 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
  }
}

void sub_19C1D939C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  char **v28;
  uint64_t v29;

  sub_19C17B808(v28);
  sub_19C07C924(a10, *(_QWORD **)(v29 - 184));
  sub_19C17AA64((void **)(v29 - 168));
  _Unwind_Resume(a1);
}

void sub_19C1D9434(char *a1@<X8>)
{
  a1[23] = 17;
  strcpy(a1, "genetic_optimizer");
}

void sub_19C1D9458(char *a1@<X8>)
{
  a1[23] = 21;
  strcpy(a1, "acquisition_optimizer");
}

_QWORD *sub_19C1D9480(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *a1 = &unk_1E3D21528;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 17) < 0)
          operator delete(*(void **)(v3 - 40));
        v3 -= 40;
      }
      while (v3 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  v5 = a1[2];
  if (v5)
  {
    v6 = a1[3];
    v7 = (void *)a1[2];
    if (v6 != v5)
    {
      do
      {
        if (*(char *)(v6 - 25) < 0)
          operator delete(*(void **)(v6 - 48));
        v6 -= 48;
      }
      while (v6 != v5);
      v7 = (void *)a1[2];
    }
    a1[3] = v5;
    operator delete(v7);
  }
  return a1;
}

void sub_19C1D9548(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  uint64_t *v11;
  uint64_t *v12;
  char **v13;
  uint64_t *v14;
  void *__p[4];
  uint64_t *v16;
  uint64_t *v17[13];
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;

  v18 = 5;
  v20 = 0;
  v21 = 0;
  v19 = 0;
  v3 = *(_QWORD *)(a1 + 72);
  v2 = (uint64_t *)(a1 + 72);
  if (v3 == *(_QWORD *)(a1 + 80))
  {
    v12 = 0;
    *(_DWORD *)(a1 + 64) = 5;
    if ((int *)(a1 + 64) == &v18)
      goto LABEL_18;
    goto LABEL_17;
  }
  do
  {
    sub_19C1C1840(v17, (uint64_t *)v3);
    v17[12] = *(uint64_t **)(v3 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)__p, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    v16 = 0;
    v4 = *(_QWORD *)(a1 + 8);
    sub_19C1CBD8C((__int128 **)v17, (uint64_t)__p);
    v5.n128_f64[0] = sub_19C1D9BFC(*(_QWORD *)(v4 + 8), (const double **)__p);
    v7 = sqrt(v6);
    if (v7 < 0.00000001 || (v8 = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 96), v8 <= 0))
    {
      v10 = (*(double (**)(uint64_t, __n128))(*(_QWORD *)v4 + 8))(v4, v5);
    }
    else
    {
      v9 = v5.n128_f64[0];
      if (*(_DWORD *)(v4 + 56) != v8)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      (**(void (***)(uint64_t, double, double))v4)(v4, v9, v7);
    }
    *(double *)&v11 = v10;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    v16 = v11;
    if (*(double *)&v11 > (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8)))
      sub_19C1CC134(&v18, (uint64_t *)v17, &v16);
    sub_19C17B808((char **)v17);
    v3 = *(_QWORD *)(a1 + 72);
  }
  while (v3 != *(_QWORD *)(a1 + 80));
  v12 = v19;
  *(_DWORD *)(a1 + 64) = v18;
  if ((int *)(a1 + 64) != &v18)
  {
LABEL_17:
    sub_19C1CC414(v2, v12, v20, 0x4EC4EC4EC4EC4EC5 * (v20 - v12));
    v12 = v19;
  }
LABEL_18:
  if (v12)
  {
    v13 = (char **)v20;
    v14 = v12;
    if (v20 != v12)
    {
      do
        v13 = sub_19C17B808(v13 - 13);
      while (v13 != (char **)v12);
      v14 = v19;
    }
    v20 = v12;
    operator delete(v14);
  }
}

void sub_19C1D9778(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_19C1CB740(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1D978C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  sub_19C17B808((char **)va);
  sub_19C1CB740(v7 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1D97B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v15;

  if (__p)
    operator delete(__p);
  sub_19C17B808(&a15);
  sub_19C1CB740(v15 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1D97DC(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  int v5;
  void *__p[3];
  _QWORD v7[313];
  std::random_device v8;
  double *v9[3];

  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = a2 + 16;
  *(_QWORD *)(a2 + 24) = 0;
  sub_19C1CCB54(a1, __p);
  sub_19C17A140(v7, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v3 = 50;
  do
  {
    v5 = sub_19C1CCF6C((uint64_t)v9, (uint64_t)v7, v9);
    v4 = sub_19C1CCC40((int *)a2, &v5);
    ++*(_DWORD *)v4;
    --v3;
  }
  while (v3);
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
  std::random_device::~random_device(&v8);
}

void sub_19C1D98B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  _QWORD **v15;

  if (__p)
  {
    operator delete(__p);
    sub_19C07C924(v14, *v15);
    _Unwind_Resume(a1);
  }
  sub_19C07C924(v14, *v15);
  _Unwind_Resume(a1);
}

void sub_19C1D9918(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  void *v6[4];
  void *__p[4];
  void *v8[4];
  _OWORD v9[2];

  sub_19C1C1840(a3, a2);
  sub_19C1CD184((__int128 **)a2, (uint64_t)v8);
  sub_19C1D9AA4(a1, (uint64_t *)v8, v9);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v6);
  sub_19C1D9B50(a1, (uint64_t *)v6, __p);
  sub_19C1CD7E0((uint64_t *)a3, (uint64_t *)v9);
  sub_19C1CD99C((uint64_t)a3, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v6[0])
  {
    v6[1] = v6[0];
    operator delete(v6[0]);
  }
  if (*(_QWORD *)&v9[0])
  {
    *((_QWORD *)&v9[0] + 1) = *(_QWORD *)&v9[0];
    operator delete(*(void **)&v9[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
}

void sub_19C1D99E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  char **v18;
  uint64_t v19;
  void *v21;
  void *v22;

  if (__p)
  {
    operator delete(__p);
    v21 = *(void **)(v19 - 64);
    if (!v21)
    {
LABEL_3:
      v22 = a17;
      if (!a17)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v21 = *(void **)(v19 - 64);
    if (!v21)
      goto LABEL_3;
  }
  *(_QWORD *)(v19 - 56) = v21;
  operator delete(v21);
  v22 = a17;
  if (!a17)
  {
LABEL_4:
    sub_19C17B808(v18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(v22);
  sub_19C17B808(v18);
  _Unwind_Resume(a1);
}

double sub_19C1D9AA4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = (uint64_t *)(a1 + 16);
  if (sub_19C178A44((uint64_t *)(a1 + 16)))
  {
    sub_19C178B08(v5, (uint64_t *)v7);
    sub_19C239578(a2, (uint64_t)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1D9B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C1D9B50@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = a1 + 16;
  if (sub_19C179558(a1 + 16))
  {
    sub_19C17961C(v5, (uint64_t *)v7);
    sub_19C23A200(a2, (uint64_t *)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1D9BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C1D9BFC(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 96))
  {
    sub_19C1D8808(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 232), 1, &__C, (int)__N);
    v4 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 264), 1, &__C, *(int *)(a1 + 288));
    v5 = __C;
    sub_19C1D9DD0(a1, a2, (uint64_t)__A);
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v5 + v4;
  }
  else
  {
    v6 = sub_19C1D8728(a1, a2);
    sub_19C1D9D04(a1, a2);
  }
  return v6;
}

void sub_19C1D9CE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_19C1D9D04(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double v8;
  double v9;
  void *__p[4];

  if (*(_DWORD *)(a1 + 96))
  {
    sub_19C1D8808(a1, a2, (uint64_t)__p);
    sub_19C1D9DD0(a1, a2, (uint64_t)__p);
    v5 = v4;
    v6 = *(double *)(a1 + 16);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    return v6 + v5;
  }
  else
  {
    v8 = *(double *)(a1 + 24);
    v9 = sub_19C1D8AB0(a1 + 8, (uint64_t)a2, a2);
    return *(double *)(a1 + 16) + exp(v9 * -0.5) * v8;
  }
}

void sub_19C1D9DB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1D9DD0(uint64_t a1, const double **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  _OWORD *v20;
  unsigned int v21;
  double v22;
  void *__p[3];
  int v24;
  double *__B[3];
  vDSP_Length __N;

  sub_19C1CE734(a1 + 168, (uint64_t)__p);
  v6 = *(unsigned int *)(a1 + 192);
  if ((int)v6 >= 1)
  {
    v7 = 0;
    v8 = *(_DWORD *)(a1 + 196);
    v9 = v24;
    v10 = 1;
    v11 = -1;
    v12 = __p[0];
    do
    {
      if (v8 <= v10)
        v13 = v10;
      else
        v13 = v8;
      v14 = v7 + 1;
      if ((int)v7 + 1 >= v8)
        goto LABEL_3;
      v15 = 0;
      v16 = v13 + v11;
      v17 = (int)v7 * (uint64_t)v9;
      if ((v13 + v11) < 4)
      {
        v18 = v7 + 1;
      }
      else
      {
        v18 = v7 + 1;
        if (v13 - (int)v7 + v10 - 2 >= v10)
        {
          v19 = 0;
          v15 = v16 & 0xFFFFFFFC;
          v18 = v14 + (v16 & 0xFFFFFFFC);
          do
          {
            v20 = &v12[v17 + v10 + v19];
            *v20 = 0uLL;
            v20[1] = 0uLL;
            v19 += 4;
          }
          while ((v16 & 0xFFFFFFFC) != v19);
          if (v16 == v15)
            goto LABEL_3;
        }
      }
      v21 = v13 - v15;
      do
      {
        v12[v17 + v18] = 0;
        v18 = ++v15 + v14;
        --v21;
      }
      while (v10 != v21);
LABEL_3:
      ++v7;
      ++v10;
      --v11;
    }
    while (v7 != v6);
  }
  sub_19C1CE5B4((uint64_t)__p, a3, (uint64_t)__B);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v22 = sub_19C1D8AB0(a1 + 8, (uint64_t)a2, a2);
  __p[0] = 0;
  vDSP_dotprD(__B[0], 1, __B[0], 1, (double *)__p, (int)__N);
  if (__B[0])
  {
    __B[1] = __B[0];
    operator delete(__B[0]);
  }
  exp(v22 * -0.5);
}

void sub_19C1D9F94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1D9FC4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  void *v32[4];
  void *v33[4];
  void *v34;
  void **v35;
  uint64_t v36;
  void *__p;
  void **v38;
  uint64_t v39;

  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_19C17AF88(&v34, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v38 = 0;
  v39 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21528;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v34, (uint64_t)v35, 0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (_BYTE *)v34) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v38, 0xCCCCCCCCCCCCCCCDLL * (((char *)v38 - (_BYTE *)__p) >> 3));
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v38;
    v10 = __p;
    if (v38 != __p)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v38 = v8;
    operator delete(v10);
  }
  v11 = (void **)v34;
  if (v34)
  {
    v12 = v35;
    v13 = v34;
    if (v35 != v34)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v34;
    }
    v35 = v11;
    operator delete(v13);
  }
  *(_QWORD *)a1 = &unk_1E3D21168;
  v14 = sub_19C178A44(a3);
  sub_19C1CF858(a1 + 64, v14);
  sub_19C1C81AC(a1 + 184);
  sub_19C178B08(a3, (uint64_t *)v32);
  sub_19C1D0468(a1 + 64, (uint64_t *)v32);
  sub_19C1D0594(a1 + 64, (uint64_t *)v33);
  if (v33[0])
  {
    v33[1] = v33[0];
    operator delete(v33[0]);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  if ((a4 & 0xFF00000000) != 0)
  {
    v15 = 0;
    *(_DWORD *)(a1 + 7776) = a4;
    v16 = 1;
    v17 = a4;
    do
    {
      v18 = 1812433253 * (v17 ^ (v17 >> 30));
      v17 = v18 + v16;
      *(_DWORD *)(a1 + 7780 + 4 * v15) = v15 + v18 + 1;
      ++v16;
      ++v15;
    }
    while (v15 != 623);
    *(_QWORD *)(a1 + 10272) = 0;
    *(_DWORD *)(a1 + 184) = a4;
    v19 = 1;
    v20 = 47;
    v21 = a4;
    do
    {
      v22 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v22 + v19;
      *(_DWORD *)(a1 + 4 * v20) = v20 + v22 - 46;
      ++v19;
      ++v20;
    }
    while (v20 != 670);
    v23 = 0;
    *(_QWORD *)(a1 + 2680) = 0;
    *(_DWORD *)(a1 + 2712) = a4;
    v24 = 1;
    v25 = a4;
    do
    {
      v26 = 1812433253 * (v25 ^ (v25 >> 30));
      v25 = v26 + v24;
      *(_DWORD *)(a1 + 2716 + 4 * v23) = v23 + v26 + 1;
      ++v24;
      ++v23;
    }
    while (v23 != 623);
    v27 = 0;
    *(_QWORD *)(a1 + 5208) = 0;
    *(_DWORD *)(a1 + 5232) = a4;
    v28 = 1;
    v29 = a4;
    do
    {
      v30 = 1812433253 * (v29 ^ (v29 >> 30));
      v29 = v30 + v28;
      *(_DWORD *)(a1 + 5236 + 4 * v27) = v27 + v30 + 1;
      ++v28;
      ++v27;
    }
    while (v27 != 623);
    *(_QWORD *)(a1 + 7728) = 0;
    sub_19C23B684();
  }
  return a1;
}

void sub_19C1DA2E0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  sub_19C1CF8E8(v2);
  sub_19C1D9480(v1);
  _Unwind_Resume(a1);
}

void sub_19C1DA374(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_19C1D9480(v1);
  _Unwind_Resume(a1);
}

void sub_19C1DA38C(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_19C1DA8A4(a1);
  operator delete(v1);
}

void sub_19C1DA3A0(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  double v6;
  void **v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t **v13;
  uint64_t **i;
  uint64_t **v15;
  char **v16;
  uint64_t **v17;
  char **v18;
  char **v19;
  void *v20;
  double v21;
  double v22;
  BOOL v23;
  char v24;
  __int128 **v25;
  char **v26;
  char *v27;
  void *__p;
  char **v29;
  uint64_t *v30[12];
  _OWORD v31[3];
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[2];
  double v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  __int128 **v43;
  char *v44;
  uint64_t **v45;
  uint64_t **v46;

  v32 = 0u;
  memset(v31, 0, sizeof(v31));
  *(_QWORD *)&v32 = (char *)&v32 + 8;
  v35[0] = 0;
  v35[1] = 0;
  v33 = 0;
  v34 = v35;
  v6 = (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8));
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)v31);
  *(double *)(a3 + 96) = v6;
  sub_19C17B808((char **)v31);
  v38 = 0;
  v39 = 0;
  v37 = 0;
  sub_19C17AF88(&v37, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 4));
  v40 = 0;
  v41 = 0;
  v42 = 0;
  sub_19C17B16C(&v40, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 3));
  sub_19C17A144((uint64_t *)&v37, a1 + 184, 5, (char **)&v43);
  v7 = v40;
  if (v40)
  {
    v8 = v41;
    v9 = v40;
    if (v41 != v40)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v40;
    }
    v41 = v7;
    operator delete(v9);
  }
  v10 = (uint64_t)v37;
  if (v37)
  {
    v11 = v38;
    v12 = v37;
    if ((void *)v38 != v37)
    {
      do
      {
        if (*(char *)(v11 - 25) < 0)
          operator delete(*(void **)(v11 - 48));
        v11 -= 48;
      }
      while (v11 != v10);
      v12 = v37;
    }
    v38 = v10;
    operator delete(v12);
  }
  sub_19C1DA94C(a1, v43, (uint64_t)v31);
  sub_19C1C9C8C(a3, (uint64_t)v31);
  *(double *)(a3 + 96) = v36;
  sub_19C17B808((char **)v31);
  sub_19C1DA94C(a1, v43 + 12, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1DA94C(a1, v43 + 24, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1DA94C(a1, v43 + 36, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1DA94C(a1, v43 + 48, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1CCA84((uint64_t ***)&__p, a2);
  sub_19C1CCA84(&v45, (uint64_t **)&__p);
  v13 = v45;
  if (v45 != v46)
  {
    for (i = v45 + 13; i != v46; i += 13)
    {
      if (*((double *)v13 + 12) < *((double *)i + 12))
        v13 = i;
    }
  }
  sub_19C1C1840((uint64_t **)v31, (uint64_t *)v13);
  v36 = *((double *)v13 + 12);
  v15 = v45;
  if (v45)
  {
    v16 = (char **)v46;
    v17 = v45;
    if (v46 != v45)
    {
      do
        v16 = sub_19C17B808(v16 - 13);
      while (v16 != (char **)v15);
      v17 = v45;
    }
    v46 = v15;
    operator delete(v17);
  }
  sub_19C1C5D14(v30, (uint64_t)v31);
  sub_19C17B808((char **)v31);
  v18 = (char **)__p;
  if (__p)
  {
    v19 = v29;
    v20 = __p;
    if (v29 != __p)
    {
      do
        v19 = sub_19C17B808(v19 - 13);
      while (v19 != v18);
      v20 = __p;
    }
    v29 = v18;
    operator delete(v20);
  }
  sub_19C1DA94C(a1, (__int128 **)v30, (uint64_t)v31);
  v21 = v36;
  v22 = *(double *)(a3 + 96);
  v23 = sub_19C1D16FC((uint64_t *)v31, v30);
  v24 = v21 <= v22 || v23;
  if ((v24 & 1) == 0)
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C17B808((char **)v30);
  v25 = v43;
  if (v43)
  {
    v26 = (char **)v44;
    v27 = (char *)v43;
    if (v44 != (char *)v43)
    {
      do
        v26 = sub_19C17B808(v26 - 12);
      while (v26 != (char **)v25);
      v27 = (char *)v43;
    }
    v44 = (char *)v25;
    operator delete(v27);
  }
}

void sub_19C1DA7CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  char **v5;
  uint64_t v6;
  char *v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, char *);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  sub_19C17B808((char **)va1);
  sub_19C17B808((char **)va);
  sub_19C17AA64((void **)(v6 - 112));
  sub_19C17B808(v5);
  _Unwind_Resume(a1);
}

void sub_19C1DA884(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "direct_optimizer");
}

_QWORD *sub_19C1DA8A4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = &unk_1E3D21168;
  std::random_device::~random_device((std::random_device *)(a1 + 10280));
  std::random_device::~random_device((std::random_device *)(a1 + 7736));
  std::random_device::~random_device((std::random_device *)(a1 + 5216));
  std::random_device::~random_device((std::random_device *)(a1 + 2688));
  *(_QWORD *)(a1 + 64) = &unk_1E3D21150;
  sub_19C23AA14(*(_QWORD *)(a1 + 72));
  v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(_QWORD *)(a1 + 136) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 104);
  if (v3)
  {
    *(_QWORD *)(a1 + 112) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 80);
  if (v4)
  {
    *(_QWORD *)(a1 + 88) = v4;
    operator delete(v4);
  }
  return sub_19C1D9480((_QWORD *)a1);
}

void sub_19C1DA94C(uint64_t a1@<X0>, __int128 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float64x2_t *v9;
  char *v10;
  uint64_t v11;
  float64x2_t *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  int64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  int v25;
  double v26;
  double v27;
  void *v28[3];
  unsigned int v29;
  void *v30;
  char *v31;
  char *v32;
  int v33;
  void *v34;
  void *v35;
  void *__p[12];
  void *v37[4];
  _QWORD v38[2];

  v38[0] = a1;
  v38[1] = a2;
  v6 = a1 + 64;
  sub_19C1CD184(a2, (uint64_t)__p);
  sub_19C1DACD0(v6, (uint64_t)v38, (uint64_t *)__p, (uint64_t)v37);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_19C1CD508((uint64_t)a2, (uint64_t)&v34);
  sub_19C1C1840((uint64_t **)__p, (uint64_t *)a2);
  sub_19C1CD7E0((uint64_t *)__p, (uint64_t *)v37);
  sub_19C1CD99C((uint64_t)__p, (uint64_t *)&v34);
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  v7 = *(_QWORD *)(a1 + 8);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v28);
  v8 = v29;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  if (!v29)
  {
    v33 = 0;
    goto LABEL_15;
  }
  if ((v29 & 0x80000000) != 0)
    sub_19C07DA0C();
  v9 = (float64x2_t *)operator new(8 * (int)v29);
  v30 = v9;
  v32 = (char *)&v9->f64[(int)v8];
  bzero(v9, 8 * (int)v8);
  v31 = (char *)&v9->f64[(int)v8];
  v33 = v8;
  v10 = (char *)v28[0];
  if (v8 < 8)
  {
    v11 = 0;
LABEL_13:
    v20 = v8 - v11;
    v21 = v11 << 32;
    do
    {
      *(double *)((char *)v9->f64 + (v21 >> 29)) = (double)*(int *)&v10[v21 >> 30];
      v21 += 0x100000000;
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
  v11 = v8 & 0xFFFFFFF8;
  v12 = v9 + 2;
  v13 = (char *)v28[0] + 16;
  v14 = v11;
  do
  {
    v15 = *((_OWORD *)v13 - 1);
    v16.i64[0] = (int)v15;
    v16.i64[1] = SDWORD1(v15);
    v17 = vcvtq_f64_s64(v16);
    v16.i64[0] = SDWORD2(v15);
    v16.i64[1] = SHIDWORD(v15);
    v18 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*(_OWORD *)v13;
    v16.i64[1] = (int)HIDWORD(*(_QWORD *)v13);
    v19 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*((_QWORD *)v13 + 1);
    v16.i64[1] = (int)HIDWORD(*(_OWORD *)v13);
    v12[-2] = v17;
    v12[-1] = v18;
    *v12 = v19;
    v12[1] = vcvtq_f64_s64(v16);
    v12 += 4;
    v13 += 32;
    v14 -= 8;
  }
  while (v14);
  if (v11 != v8)
    goto LABEL_13;
LABEL_15:
  sub_19C1CEDDC((uint64_t)v37, (uint64_t)&v30, (uint64_t)&v34);
  v22 = sub_19C1D9BFC(*(_QWORD *)(v7 + 8), (const double **)&v34);
  v24 = sqrt(v23);
  if (v24 < 0.00000001 || (v25 = *(_DWORD *)(*(_QWORD *)(v7 + 8) + 96), v25 <= 0))
  {
    v26 = (*(double (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  else
  {
    if (*(_DWORD *)(v7 + 56) != v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    (**(void (***)(uint64_t, double, double))v7)(v7, v22, v24);
  }
  v27 = v26;
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)__p);
  *(double *)(a3 + 96) = v27;
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  if (v30)
  {
    v31 = (char *)v30;
    operator delete(v30);
  }
  if (v28[0])
  {
    v28[1] = v28[0];
    operator delete(v28[0]);
  }
  sub_19C17B808((char **)__p);
  if (v37[0])
  {
    v37[1] = v37[0];
    operator delete(v37[0]);
  }
}

void sub_19C1DABF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v24;
  void *v25;

  if (a13)
  {
    operator delete(a13);
    v24 = __p;
    if (!__p)
    {
LABEL_4:
      sub_19C17B808((char **)&a21);
      v25 = *(void **)(v22 - 128);
      if (v25)
      {
        *(_QWORD *)(v22 - 120) = v25;
        operator delete(v25);
      }
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v24 = __p;
    if (!__p)
      goto LABEL_4;
  }
  operator delete(v24);
  goto LABEL_4;
}

void sub_19C1DACD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1DB220;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1DB118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1DAF24);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

void sub_19C1DB220(uint64_t **a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  void *__p;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v18 = 0;
  v19 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    __p = 0;
    v18 = 0;
    v19 = 0;
    v20 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  __p = v8;
  v18 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v19 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v20 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1DB3F0(a3, (uint64_t)&__p);
    if (__p)
    {
      v18 = (char *)__p;
      operator delete(__p);
    }
  }
  else
  {
    sub_19C1DB3F0(a3, (uint64_t)&__p);
    __break(1u);
  }
}

void sub_19C1DB3B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1DB3D4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

uint64_t sub_19C1DB3F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  float64x2_t *v5;
  char *v6;
  uint64_t v7;
  float64x2_t *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  int64x2_t v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  int v21;
  double v22;
  double v23;
  void *v25[3];
  unsigned int v26;
  void *v27;
  char *v28;
  char *v29;
  int v30;
  void *__p[4];

  v3 = *(_QWORD *)(*a1 + 8);
  sub_19C1CD508(a1[1], (uint64_t)v25);
  v4 = v26;
  v28 = 0;
  v29 = 0;
  v27 = 0;
  if (!v26)
  {
    v30 = 0;
    goto LABEL_11;
  }
  if ((v26 & 0x80000000) != 0)
    sub_19C07DA0C();
  v5 = (float64x2_t *)operator new(8 * (int)v26);
  v27 = v5;
  v29 = (char *)&v5->f64[(int)v4];
  bzero(v5, 8 * (int)v4);
  v28 = (char *)&v5->f64[(int)v4];
  v30 = v4;
  v6 = (char *)v25[0];
  if (v4 < 8)
  {
    v7 = 0;
LABEL_9:
    v16 = v4 - v7;
    v17 = v7 << 32;
    do
    {
      *(double *)((char *)v5->f64 + (v17 >> 29)) = (double)*(int *)&v6[v17 >> 30];
      v17 += 0x100000000;
      --v16;
    }
    while (v16);
    goto LABEL_11;
  }
  v7 = v4 & 0xFFFFFFF8;
  v8 = v5 + 2;
  v9 = (char *)v25[0] + 16;
  v10 = v7;
  do
  {
    v11 = *((_OWORD *)v9 - 1);
    v12.i64[0] = (int)v11;
    v12.i64[1] = SDWORD1(v11);
    v13 = vcvtq_f64_s64(v12);
    v12.i64[0] = SDWORD2(v11);
    v12.i64[1] = SHIDWORD(v11);
    v14 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*(_OWORD *)v9;
    v12.i64[1] = (int)HIDWORD(*(_QWORD *)v9);
    v15 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*((_QWORD *)v9 + 1);
    v12.i64[1] = (int)HIDWORD(*(_OWORD *)v9);
    v8[-2] = v13;
    v8[-1] = v14;
    *v8 = v15;
    v8[1] = vcvtq_f64_s64(v12);
    v8 += 4;
    v9 += 32;
    v10 -= 8;
  }
  while (v10);
  if (v7 != v4)
    goto LABEL_9;
LABEL_11:
  sub_19C1CEDDC(a2, (uint64_t)&v27, (uint64_t)__p);
  v18 = sub_19C1D9BFC(*(_QWORD *)(v3 + 8), (const double **)__p);
  v20 = sqrt(v19);
  if (v20 < 0.00000001 || (v21 = *(_DWORD *)(*(_QWORD *)(v3 + 8) + 96), v21 <= 0))
  {
    v22 = (*(double (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  else
  {
    if (*(_DWORD *)(v3 + 56) != v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    (**(void (***)(uint64_t, double, double))v3)(v3, v18, v20);
  }
  v23 = v22;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v27)
  {
    v28 = (char *)v27;
    operator delete(v27);
  }
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
  return *(_QWORD *)&v23;
}

void sub_19C1DB5F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  void *v19;

  if (__p)
  {
    operator delete(__p);
    v19 = a9;
    if (!a9)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v19 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1DB670(uint64_t a1)
{
  char **v2;
  char **v3;
  char **v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char **v13;
  char **v14;
  void *v15;

  *(_QWORD *)a1 = &unk_1E3D216D8;
  v2 = *(char ***)(a1 + 10672);
  if (v2)
  {
    v3 = *(char ***)(a1 + 10680);
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 12);
      while (v3 != v2);
      v4 = *(char ***)(a1 + 10672);
    }
    *(_QWORD *)(a1 + 10680) = v2;
    operator delete(v4);
  }
  std::random_device::~random_device((std::random_device *)(a1 + 10664));
  std::random_device::~random_device((std::random_device *)(a1 + 8120));
  std::random_device::~random_device((std::random_device *)(a1 + 5600));
  std::random_device::~random_device((std::random_device *)(a1 + 3072));
  v5 = *(_QWORD *)(a1 + 560);
  *(_QWORD *)(a1 + 560) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  *(_QWORD *)(a1 + 480) = &unk_1E3D20E80;
  v6 = *(void **)(a1 + 496);
  if (v6)
  {
    *(_QWORD *)(a1 + 504) = v6;
    operator delete(v6);
  }
  sub_19C1D2994((_QWORD *)(a1 + 176));
  v7 = *(_QWORD *)(a1 + 152);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 160);
    v9 = *(void **)(a1 + 152);
    if (v8 != v7)
    {
      v10 = *(_QWORD *)(a1 + 160);
      do
      {
        v12 = *(void **)(v10 - 56);
        v10 -= 56;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v8 - 48) = v11;
          operator delete(v11);
        }
        v8 = v10;
      }
      while (v10 != v7);
      v9 = *(void **)(a1 + 152);
    }
    *(_QWORD *)(a1 + 160) = v7;
    operator delete(v9);
  }
  *(_QWORD *)a1 = &unk_1E3D214F8;
  sub_19C1C2E88(a1 + 32);
  v13 = *(char ***)(a1 + 8);
  if (v13)
  {
    v14 = *(char ***)(a1 + 16);
    v15 = *(void **)(a1 + 8);
    if (v14 != v13)
    {
      do
        v14 = sub_19C17B808(v14 - 13);
      while (v14 != v13);
      v15 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v13;
    operator delete(v15);
  }
  return a1;
}

void sub_19C1DB7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  void *__p[4];

  v5 = (uint64_t *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 72);
  v6 = *(_DWORD *)(a1 + 96);
  v7 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 96) = v6 + 1;
  *(_DWORD *)(a1 + 100) = v7;
  v8 = v7 * (v6 + 1);
  v9 = (*(_QWORD *)(a1 + 80) - v4) >> 3;
  if (v8 <= v9)
  {
    if (v8 < v9)
      *(_QWORD *)(a1 + 80) = v4 + 8 * v8;
  }
  else
  {
    sub_19C17C9D8(a1 + 72, v8 - v9);
    v6 = *(_DWORD *)(a1 + 96) - 1;
  }
  sub_19C1CE998(a2, (uint64_t)__p);
  v10 = *(int *)(a1 + 100);
  v11 = (char *)__p[0];
  if (!(_DWORD)v10)
  {
    if (!__p[0])
      goto LABEL_18;
    goto LABEL_17;
  }
  v12 = (int)v10 * (uint64_t)v6;
  v13 = *v5;
  if (v10 >= 8 && (v14 = 8 * v12 + v13, v14 - (unint64_t)__p[0] >= 0x20))
  {
    v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    v20 = (__int128 *)((char *)__p[0] + 16);
    v21 = (_OWORD *)(v14 + 16);
    v22 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v23 = *v20;
      *(v21 - 1) = *(v20 - 1);
      *v21 = v23;
      v20 += 2;
      v21 += 2;
      v22 -= 4;
    }
    while (v22);
    if (v15 == v10)
      goto LABEL_17;
  }
  else
  {
    v15 = 0;
  }
  v16 = v10 - v15;
  v17 = (_QWORD *)(v13 + 8 * (v15 + v12));
  v18 = &v11[8 * v15];
  do
  {
    v19 = *(_QWORD *)v18;
    v18 += 8;
    *v17++ = v19;
    --v16;
  }
  while (v16);
LABEL_17:
  __p[1] = v11;
  operator delete(v11);
LABEL_18:
  sub_19C1DB920(a1, 1, 1);
}

void sub_19C1DB920(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  signed int v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  char *v32;
  char *v33;
  uint64_t v35;
  void *__p;
  void *v37;
  uint64_t v38;
  unsigned int v39;
  char *__C;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  if (a2)
  {
    v5 = (_QWORD *)(a1 + 104);
    v4 = *(_QWORD *)(a1 + 104);
    v6 = *(_DWORD *)(a1 + 96);
    *(_DWORD *)(a1 + 128) = v6;
    v7 = (*(_QWORD *)(a1 + 112) - v4) >> 3;
    v35 = v6;
    if (v6 <= v7)
    {
      if (v6 < v7)
        *(_QWORD *)(a1 + 112) = v4 + 8 * v6;
    }
    else
    {
      sub_19C17C9D8(a1 + 104, v6 - v7);
      v6 = *(_DWORD *)(a1 + 96);
      v35 = v6;
    }
    if (v6)
    {
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *(_QWORD *)(a1 + 72);
        v11 = *(_DWORD *)(a1 + 100);
        __C = 0;
        v41 = 0;
        v42 = 0;
        if (v11)
          break;
        v12 = 0;
        v37 = 0;
        v38 = 0;
        __p = 0;
        v39 = 0;
LABEL_26:
        __C = 0;
        vDSP_meanvD(*(const double **)(a1 + 264), 1, (double *)&__C, *(int *)(a1 + 288));
        *(_QWORD *)(*v5 + 8 * v9) = __C;
        if (__p)
        {
          v37 = __p;
          operator delete(__p);
        }
        if (v12)
          operator delete(v12);
        ++v9;
        v8 += 8;
        if (v9 == v35)
          goto LABEL_34;
      }
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = operator new(8 * v11);
      bzero(v12, 8 * v11);
      if (v11 >= 8 && (unint64_t)v12 - v10 - 8 * v9 * v11 >= 0x20)
      {
        v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
        v28 = (__int128 *)(v10 + v8 * v11 + 16);
        v29 = v12 + 1;
        v30 = v13;
        do
        {
          v31 = *v28;
          *(v29 - 1) = *(v28 - 1);
          *v29 = v31;
          v28 += 2;
          v29 += 2;
          v30 -= 4;
        }
        while (v30);
        if (v13 == v11)
        {
LABEL_16:
          __p = 0;
          v37 = 0;
          v38 = 0;
          v39 = v11;
          sub_19C17C9D8((uint64_t)&__p, v11);
          v19 = v39;
          if ((int)v39 >= 1)
          {
            v20 = 0;
            v21 = (char *)__p;
            if (v39 < 4)
              goto LABEL_22;
            if ((unint64_t)((_BYTE *)__p - (_BYTE *)v12) < 0x20)
              goto LABEL_22;
            v22 = 0;
            v20 = v39 & 0xFFFFFFFC;
            v23 = (8 * v39) & 0x7FFFFFFE0;
            do
            {
              v24 = v12[v22 / 0x10 + 1];
              v25 = &v21[v22];
              *(_OWORD *)v25 = v12[v22 / 0x10];
              *((_OWORD *)v25 + 1) = v24;
              v22 += 32;
            }
            while (v23 != v22);
            if (v20 != v19)
            {
LABEL_22:
              v26 = v19 - v20;
              v27 = v20 << 32;
              do
              {
                *(_QWORD *)&v21[v27 >> 29] = *(_QWORD *)((char *)v12 + (v27 >> 29));
                v27 += 0x100000000;
                --v26;
              }
              while (v26);
            }
          }
          goto LABEL_26;
        }
      }
      else
      {
        v13 = 0;
      }
      v14 = v11 - v13;
      v15 = 8 * v13;
      v16 = (_QWORD *)v12 + v13;
      v17 = (uint64_t *)(v10 + v15 + v8 * v11);
      do
      {
        v18 = *v17++;
        *v16++ = v18;
        --v14;
      }
      while (v14);
      goto LABEL_16;
    }
  }
LABEL_34:
  sub_19C1DBC9C(a1 + 8, (uint64_t *)(a1 + 72), (uint64_t)&__C);
  if ((char **)(a1 + 136) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 136), __C, v41, (v41 - __C) >> 3);
  v32 = __C;
  *(_QWORD *)(a1 + 160) = v43;
  if (v32)
  {
    v41 = v32;
    operator delete(v32);
  }
  sub_19C1D3978(a1 + 136, (uint64_t)&__C);
  if ((char **)(a1 + 168) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 168), __C, v41, (v41 - __C) >> 3);
  v33 = __C;
  *(_QWORD *)(a1 + 192) = v43;
  if (v33)
  {
    v41 = v33;
    operator delete(v33);
  }
  sub_19C1DC15C(a1);
  if (a3)
    sub_19C1DC37C((int32x2_t *)a1);
}

void sub_19C1DBC38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1DBC9C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  size_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  signed int v12;
  char *v13;
  size_t v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  _OWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  __int128 *v33;
  _OWORD *v34;
  unint64_t v35;
  __int128 v36;
  __int128 *v37;
  _OWORD *v38;
  unint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  char *v55;
  signed int v56;
  void *__p;
  char *v58;
  char *v59;
  signed int v60;

  v4 = *((unsigned int *)a2 + 6);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  if (!(_DWORD)v4)
  {
    v7 = 0;
    *(_DWORD *)(a3 + 24) = 0;
    *(_DWORD *)(a3 + 28) = 0;
LABEL_41:
    v41 = (int)v4;
    if ((_DWORD)v4)
      goto LABEL_42;
    return;
  }
  v6 = 8 * (v4 * v4);
  v7 = (char *)operator new(v6);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 16) = &v7[v6];
  bzero(v7, v6);
  *(_QWORD *)(a3 + 8) = &v7[v6];
  *(_DWORD *)(a3 + 24) = v4;
  *(_DWORD *)(a3 + 28) = v4;
  if ((int)v4 <= 0)
    goto LABEL_41;
  v49 = 0;
  v8 = 0;
  v52 = 1;
  v47 = v4;
  v48 = a1;
  do
  {
    v9 = 0;
    v10 = 0;
    v51 = (int)v8 * v4;
    do
    {
      v11 = *a2;
      v12 = *((_DWORD *)a2 + 7);
      __p = 0;
      v58 = 0;
      v59 = 0;
      if (v12)
      {
        if (v12 < 0)
          sub_19C07DA0C();
        v13 = v7;
        v14 = 8 * v12;
        v15 = operator new(v14);
        bzero(v15, v14);
        if (v12 < 8 || (unint64_t)v15 - v11 - 8 * v8 * v12 < 0x20)
        {
          v16 = 0;
          goto LABEL_12;
        }
        v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v33 = (__int128 *)(v11 + v49 * v12 + 16);
        v34 = v15 + 1;
        v35 = v16;
        do
        {
          v36 = *v33;
          *(v34 - 1) = *(v33 - 1);
          *v34 = v36;
          v33 += 2;
          v34 += 2;
          v35 -= 4;
        }
        while (v35);
        if (v16 != v12)
        {
LABEL_12:
          v17 = v12 - v16;
          v18 = 8 * v16;
          v19 = (_QWORD *)v15 + v16;
          v20 = (uint64_t *)(v11 + v18 + v49 * v12);
          do
          {
            v21 = *v20++;
            *v19++ = v21;
            --v17;
          }
          while (v17);
        }
        v53 = 0;
        v54 = 0;
        v56 = 0;
        v55 = 0;
        v53 = operator new(8 * v12);
        v54 = (char *)v53 + v14;
        v55 = (char *)v53 + 8 * v12;
        v56 = v12;
        memcpy(v53, v15, 8 * v12);
        v22 = operator new(8 * v12);
        bzero(v22, 8 * v12);
        if (v12 < 8 || (unint64_t)v22 - v11 - 8 * v10 * v12 < 0x20)
        {
          v23 = 0;
          goto LABEL_17;
        }
        v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v37 = (__int128 *)(v11 + v9 * v12 + 16);
        v38 = v22 + 1;
        v39 = v23;
        do
        {
          v40 = *v37;
          *(v38 - 1) = *(v37 - 1);
          *v38 = v40;
          v37 += 2;
          v38 += 2;
          v39 -= 4;
        }
        while (v39);
        if (v23 != v12)
        {
LABEL_17:
          v24 = v12 - v23;
          v25 = 8 * v23;
          v26 = (_QWORD *)v22 + v23;
          v27 = (uint64_t *)(v11 + v25 + v9 * v12);
          do
          {
            v28 = *v27++;
            *v26++ = v28;
            --v24;
          }
          while (v24);
        }
        __p = 0;
        v58 = 0;
        v60 = 0;
        v59 = 0;
        v29 = (int)v10;
        __p = operator new(8 * v12);
        v58 = (char *)__p + v14;
        v59 = (char *)__p + 8 * v12;
        v60 = v12;
        memcpy(__p, v22, 8 * v12);
        v7 = v13;
        a1 = v48;
        goto LABEL_21;
      }
      v15 = 0;
      v22 = 0;
      v54 = 0;
      v55 = 0;
      v53 = 0;
      v56 = 0;
      v29 = (int)v10;
      __p = 0;
      v58 = 0;
      v60 = 0;
      v59 = 0;
LABEL_21:
      v30 = *(double *)(a1 + 16);
      v31 = sub_19C1D8AB0(a1, (uint64_t)&v53, (const double **)&__p);
      v32 = exp(v31 * -0.5) * v30;
      if ((_DWORD)v8 == (_DWORD)v10)
        v32 = v32 + *(double *)(a1 + 8) + 1.0e-10;
      *(double *)&v7[8 * v29 + 8 * v51] = v32;
      if (__p)
      {
        v58 = (char *)__p;
        operator delete(__p);
      }
      if (v22)
        operator delete(v22);
      if (v53)
      {
        v54 = (char *)v53;
        operator delete(v53);
      }
      if (v15)
        operator delete(v15);
      ++v10;
      v9 += 8;
    }
    while (v10 != v52);
    ++v8;
    ++v52;
    v49 += 8;
    v4 = v47;
  }
  while (v8 != v47);
  v41 = v47;
LABEL_42:
  if (v41 != 1)
  {
    v42 = 0;
    v43 = 8 * v41;
    v44 = v7;
    do
    {
      if (v42)
      {
        v45 = 0;
        v46 = v44;
        do
        {
          *v46 = *(_QWORD *)&v7[8 * v45++];
          v46 = (_QWORD *)((char *)v46 + v43);
        }
        while (v42 != v45);
      }
      ++v42;
      ++v44;
      v7 += v43;
    }
    while (v42 != v41);
  }
}

void sub_19C1DC0B8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1DC0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  uint64_t v27;
  void *v28;

  if (__p)
  {
    operator delete(__p);
    v27 = a10;
    if (!v25)
    {
LABEL_3:
      v28 = a18;
      if (!a18)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    v27 = a10;
    if (!v25)
      goto LABEL_3;
  }
  operator delete(v25);
  v28 = a18;
  if (!a18)
  {
LABEL_4:
    if (!v23)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v28);
  if (!v23)
  {
LABEL_5:
    *(_QWORD *)(v27 + 8) = v24;
    operator delete(v24);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(v23);
  *(_QWORD *)(v27 + 8) = v24;
  operator delete(v24);
  _Unwind_Resume(a1);
}

void sub_19C1DC15C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _OWORD *v16;
  unsigned int v17;
  void *v18[4];
  void *__p;
  char *v20;
  int v21;
  void *v22[3];
  int v23;

  sub_19C1CE734(a1 + 168, (uint64_t)v22);
  v2 = *(unsigned int *)(a1 + 192);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    v4 = *(_DWORD *)(a1 + 196);
    v5 = v23;
    v6 = 1;
    v7 = -1;
    v8 = v22[0];
    do
    {
      if (v4 <= v6)
        v9 = v6;
      else
        v9 = v4;
      v10 = v3 + 1;
      if ((int)v3 + 1 >= v4)
        goto LABEL_3;
      v11 = 0;
      v12 = v9 + v7;
      v13 = (int)v3 * (uint64_t)v5;
      if ((v9 + v7) < 4)
      {
        v14 = v3 + 1;
      }
      else
      {
        v14 = v3 + 1;
        if (v9 - (int)v3 + v6 - 2 >= v6)
        {
          v15 = 0;
          v11 = v12 & 0xFFFFFFFC;
          v14 = v10 + (v12 & 0xFFFFFFFC);
          do
          {
            v16 = &v8[v13 + v6 + v15];
            *v16 = 0uLL;
            v16[1] = 0uLL;
            v15 += 4;
          }
          while ((v12 & 0xFFFFFFFC) != v15);
          if (v12 == v11)
            goto LABEL_3;
        }
      }
      v17 = v9 - v11;
      do
      {
        v8[v13 + v14] = 0;
        v14 = ++v11 + v10;
        --v17;
      }
      while (v6 != v17);
LABEL_3:
      ++v3;
      ++v6;
      --v7;
    }
    while (v3 != v2);
  }
  sub_19C1DC5E0(a1, (uint64_t)v18);
  sub_19C1CE5B4((uint64_t)v22, (uint64_t)v18, (uint64_t)&__p);
  if ((void **)(a1 + 232) != &__p)
    sub_19C11EAD0((_QWORD *)(a1 + 232), (char *)__p, v20, (v20 - (_BYTE *)__p) >> 3);
  *(_DWORD *)(a1 + 256) = v21;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  sub_19C1CEB00((uint64_t)v22, &__p);
  sub_19C1D43B4((uint64_t)&__p, a1 + 232);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v22[0])
  {
    v22[1] = v22[0];
    operator delete(v22[0]);
  }
}

void sub_19C1DC318(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  if (a9)
    operator delete(a9);
  if (a17)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_19C1DC37C(int32x2_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int32 v14;
  int v15;
  int v16;
  _QWORD *v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  _OWORD *v25;
  unsigned int v26;
  void *__p;
  char *v28;
  int32x2_t v29;

  v2 = a1[12].u32[0];
  sub_19C176BE8(v2, v2, (uint64_t)&__p);
  if ((int)v2 >= 1)
  {
    v3 = v29.i32[1] + 1;
    v4 = __p;
    if ((_DWORD)v2 == 1)
    {
      v5 = 0;
LABEL_7:
      v8 = v2 - v5;
      v9 = v5 << 32;
      do
      {
        v4[(v9 >> 32) * v3] = 0x3FF0000000000000;
        v9 += 0x100000000;
        --v8;
      }
      while (v8);
      goto LABEL_9;
    }
    v6 = 0;
    v5 = v2 & 0xFFFFFFFE;
    v7 = v5;
    do
    {
      v4[(v6 >> 32) * v3] = 0x3FF0000000000000;
      v4[((v6 >> 32) | 1) * v3] = 0x3FF0000000000000;
      v6 += 0x200000000;
      v7 -= 2;
    }
    while (v7);
    if (v5 != v2)
      goto LABEL_7;
  }
LABEL_9:
  if (&a1[25] != (int32x2_t *)&__p)
    sub_19C11EAD0(&a1[25], (char *)__p, v28, (v28 - (_BYTE *)__p) >> 3);
  v10 = (char *)__p;
  a1[28] = v29;
  if (v10)
  {
    v28 = v10;
    operator delete(v10);
  }
  sub_19C1CE734((uint64_t)&a1[21], (uint64_t)&__p);
  v11 = a1[24].u32[0];
  if ((int)v11 >= 1)
  {
    v12 = 0;
    v13 = a1[24].i32[1];
    v14 = v29.i32[1];
    v15 = 1;
    v16 = -1;
    v17 = __p;
    do
    {
      if (v13 <= v15)
        v18 = v15;
      else
        v18 = v13;
      v19 = v12 + 1;
      if ((int)v12 + 1 >= v13)
        goto LABEL_15;
      v20 = 0;
      v21 = v18 + v16;
      v22 = (int)v12 * (uint64_t)v14;
      if ((v18 + v16) < 4)
      {
        v23 = v12 + 1;
      }
      else
      {
        v23 = v12 + 1;
        if (v18 - (int)v12 + v15 - 2 >= v15)
        {
          v24 = 0;
          v20 = v21 & 0xFFFFFFFC;
          v23 = v19 + (v21 & 0xFFFFFFFC);
          do
          {
            v25 = &v17[v22 + v15 + v24];
            *v25 = 0uLL;
            v25[1] = 0uLL;
            v24 += 4;
          }
          while ((v21 & 0xFFFFFFFC) != v24);
          if (v21 == v20)
            goto LABEL_15;
        }
      }
      v26 = v18 - v20;
      do
      {
        v17[v22 + v23] = 0;
        v23 = ++v20 + v19;
        --v26;
      }
      while (v15 != v26);
LABEL_15:
      ++v12;
      ++v15;
      --v16;
    }
    while (v12 != v11);
  }
  sub_19C1D44C8((uint64_t)&__p, a1 + 25);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
  sub_19C1CEB00((uint64_t)&a1[21], &__p);
  sub_19C1D44C8((uint64_t)&__p, a1 + 25);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
}

void sub_19C1DC5BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1DC5E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  signed int v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  char *v28;

  v4 = *(_DWORD *)(a1 + 288);
  v5 = 8 * v4;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * v4);
    bzero(v6, 8 * v4);
    v7 = 0;
    v8 = &v6[v5];
    v9 = *(_QWORD *)(a1 + 264);
    if (v4 < 4)
      goto LABEL_46;
    if ((unint64_t)&v6[-v9] < 0x20)
      goto LABEL_46;
    v10 = 0;
    v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    v11 = v7;
    do
    {
      v12 = *(_OWORD *)(v9 + v10 + 16);
      v13 = &v6[v10];
      *(_OWORD *)v13 = *(_OWORD *)(v9 + v10);
      *((_OWORD *)v13 + 1) = v12;
      v10 += 32;
      v11 -= 4;
    }
    while (v11);
    if (v7 != v4)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v6[8 * v7] = *(_QWORD *)(v9 + 8 * v7);
        ++v7;
      }
      while (v4 != v7);
    }
    v14 = *(int *)(a1 + 128);
    if ((_DWORD)v14)
      goto LABEL_10;
LABEL_19:
    v15 = 0;
    goto LABEL_20;
  }
  v8 = 0;
  v6 = 0;
  v14 = *(int *)(a1 + 128);
  if (!(_DWORD)v14)
    goto LABEL_19;
LABEL_10:
  if ((v14 & 0x80000000) != 0)
    sub_19C07DA0C();
  v15 = (char *)operator new(8 * v14);
  bzero(v15, 8 * v14);
  v16 = 0;
  v17 = *(_QWORD *)(a1 + 104);
  if (v14 < 4)
    goto LABEL_47;
  if ((unint64_t)&v15[-v17] < 0x20)
    goto LABEL_47;
  v18 = 0;
  v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  v19 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v20 = *(_OWORD *)(v17 + v18 + 16);
    v21 = &v15[v18];
    *(_OWORD *)v21 = *(_OWORD *)(v17 + v18);
    *((_OWORD *)v21 + 1) = v20;
    v18 += 32;
    v19 -= 4;
  }
  while (v19);
  if (v16 != v14)
  {
LABEL_47:
    do
    {
      *(_QWORD *)&v15[8 * v16] = *(_QWORD *)(v17 + 8 * v16);
      ++v16;
    }
    while (v14 != v16);
  }
LABEL_20:
  vDSP_vsubD((const double *)v15, 1, (const double *)v6, 1, (double *)v6, 1, v4);
  if (v8 != v6)
  {
    if (v8 - v6 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v8 - v6);
    memcpy(v22, v6, v8 - v6);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    if (!v4)
    {
      *(_DWORD *)(a2 + 24) = 0;
      operator delete(v22);
      if (!v15)
        goto LABEL_35;
LABEL_34:
      operator delete(v15);
      goto LABEL_35;
    }
LABEL_26:
    if (v4 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(8 * v4);
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 16) = &v23[8 * v4];
    bzero(v23, 8 * v4);
    *(_QWORD *)(a2 + 8) = &v23[v5];
    *(_DWORD *)(a2 + 24) = v4;
    if (v4 >= 4)
    {
      v25 = 0;
      v24 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      v26 = v24;
      do
      {
        v27 = *(_OWORD *)&v22[v25 + 16];
        v28 = &v23[v25];
        *(_OWORD *)v28 = *(_OWORD *)&v22[v25];
        *((_OWORD *)v28 + 1) = v27;
        v25 += 32;
        v26 -= 4;
      }
      while (v26);
      if (v24 == v4)
      {
LABEL_33:
        operator delete(v22);
        if (!v15)
          goto LABEL_35;
        goto LABEL_34;
      }
    }
    else
    {
      v24 = 0;
    }
    do
    {
      *(_QWORD *)&v23[8 * v24] = *(_QWORD *)&v22[8 * v24];
      ++v24;
    }
    while (v4 != v24);
    goto LABEL_33;
  }
  v22 = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v4)
    goto LABEL_26;
  *(_DWORD *)(a2 + 24) = 0;
  if (v15)
    goto LABEL_34;
LABEL_35:
  if (v6)
    operator delete(v6);
}

void sub_19C1DC904(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  void *v18;
  void *v19;

  if (v19)
  {
    operator delete(v19);
    if (!v18)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v18)
  {
    goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_19C1DC968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a9)
    operator delete(a9);
  sub_19C07AF7C(a1);
}

void sub_19C1DC97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13)
    JUMPOUT(0x19C1DC98CLL);
  JUMPOUT(0x19C1DC990);
}

void sub_19C1DC998(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _OWORD *v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  long double *v10;
  void *v11;
  char *v12;
  int v13;
  void *v14;
  void *v15;
  char *v16;
  int v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  int v21;
  void *__p;
  void *v23;
  _OWORD *v24;
  int v25;
  _QWORD v26[2];
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  v33 = a2;
  sub_19C1CF858((uint64_t)v26, 2u);
  v3 = operator new(0x10uLL);
  *v3 = 0;
  v3[1] = 0;
  v18 = v3;
  v19 = v3 + 2;
  v20 = v3 + 2;
  v21 = 2;
  v4 = operator new(0x10uLL);
  __p = v4;
  *v4 = xmmword_19C27A9E0;
  v23 = v4 + 1;
  v24 = v4 + 1;
  v25 = 2;
  *(_OWORD *)v3 = xmmword_19C27A9F0;
  sub_19C1D0468((uint64_t)v26, (uint64_t *)&v18);
  sub_19C1D0594((uint64_t)v26, (uint64_t *)&__p);
  if (__p)
  {
    v23 = __p;
    operator delete(__p);
  }
  if (v18)
  {
    v19 = v18;
    operator delete(v18);
  }
  v6 = *(_BYTE **)(a2 + 40);
  v5 = *(_BYTE **)(a2 + 48);
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    v9 = &v8[8 * (v7 >> 3)];
    v14 = v8;
    v16 = v9;
    memcpy(v8, v6, v7);
    v15 = v9;
  }
  v17 = *(_DWORD *)(a2 + 64);
  sub_19C1DCC44((uint64_t)v26, (uint64_t)&v33, (uint64_t *)&v14, (uint64_t)&v11);
  if ((void **)(a2 + 40) != &v11)
    sub_19C11EAD0((_QWORD *)(a2 + 40), (char *)v11, v12, (v12 - (_BYTE *)v11) >> 3);
  *(_DWORD *)(a2 + 64) = v13;
  v10 = (long double *)v11;
  *(long double *)(a2 + 24) = exp(*(double *)v11 + *(double *)v11);
  *(long double *)(a2 + 32) = exp(v10[1]);
  sub_19C1DB920(a2, 1, 1);
  if (v11)
  {
    v12 = (char *)v11;
    operator delete(v11);
  }
  if (v14)
  {
    v15 = v14;
    operator delete(v14);
  }
  v26[0] = &unk_1E3D21150;
  sub_19C23AA14(v26[1]);
  if (v31)
  {
    v32 = v31;
    operator delete(v31);
  }
  if (v29)
  {
    v30 = v29;
    operator delete(v29);
  }
  if (v27)
  {
    v28 = v27;
    operator delete(v27);
  }
}

void sub_19C1DCBB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (!__p)
  {
    sub_19C1CF8E8(&a25);
    _Unwind_Resume(a1);
  }
  operator delete(__p);
  sub_19C1CF8E8(&a25);
  _Unwind_Resume(a1);
}

void sub_19C1DCC28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  sub_19C176E10((uint64_t)va);
  sub_19C1CF8E8((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_19C1DCC44(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1DD194;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1DD08C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1DCE98);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

double sub_19C1DD194(uint64_t **a1, uint64_t *a2, int **a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  double v33;
  void *__p;
  void *v35;
  char v36;
  _QWORD v37[3];
  signed int v38;
  char v39;
  void *v40;
  char *v41;
  char *v42;
  int v43;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v41 = 0;
  v42 = 0;
  v40 = 0;
  v43 = 0;
  v33 = 0.0;
  __p = 0;
  v35 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  v40 = v8;
  v41 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v42 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v43 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1DD488(a3, (uint64_t)&v40, 0, (uint64_t)&v33);
    v17 = v33;
    if (v36)
    {
      v31 = __p;
      if (__p)
      {
        v35 = __p;
        goto LABEL_31;
      }
    }
  }
  else
  {
    LOBYTE(v37[0]) = 0;
    v39 = 0;
    sub_19C1DD488(a3, (uint64_t)&v40, 1, (uint64_t)&v33);
    v17 = v33;
    sub_19C1D66F8((uint64_t)v37, (uint64_t)&__p);
    if (v36 && __p)
    {
      v35 = __p;
      operator delete(__p);
    }
    v18 = v38;
    if (v38)
    {
      v19 = 0;
      v20 = v37[0];
      v21 = *a2;
      if (v38 < 4)
        goto LABEL_23;
      if ((unint64_t)(v21 - v37[0]) < 0x20)
        goto LABEL_23;
      v19 = v38 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = (__int128 *)(v37[0] + 16);
      v23 = (_OWORD *)(v21 + 16);
      v24 = v19;
      do
      {
        v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 4;
      }
      while (v24);
      if (v19 != v18)
      {
LABEL_23:
        v26 = v18 - v19;
        v27 = 8 * v19;
        v28 = (_QWORD *)(v21 + 8 * v19);
        v29 = (uint64_t *)(v20 + v27);
        do
        {
          v30 = *v29++;
          *v28++ = v30;
          --v26;
        }
        while (v26);
      }
    }
    if (v39)
    {
      v31 = (void *)v37[0];
      if (v37[0])
      {
        v37[1] = v37[0];
LABEL_31:
        operator delete(v31);
      }
    }
  }
  if (v40)
  {
    v41 = (char *)v40;
    operator delete(v40);
  }
  return v17;
}

void sub_19C1DD410(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,void *__p,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1DD46C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

_QWORD *sub_19C1DD488@<X0>(int **a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char *v7;
  double v8;
  double v9;
  void *v10;
  int64_t v11;
  char *v12;
  char *v13;
  _BYTE *v15;
  _BYTE *v16;
  int v17;
  _QWORD v18[5];
  _QWORD v19[3];
  int v20;

  sub_19C1DE310((uint64_t)v18, *a1);
  if (v19 != (_QWORD *)a2)
    sub_19C11EAD0(v19, *(char **)a2, *(char **)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  v20 = *(_DWORD *)(a2 + 24);
  v7 = *(char **)a2;
  v18[3] = exp(*(double *)v7 + *(double *)v7);
  v18[4] = exp(*((long double *)v7 + 1));
  sub_19C1DB920((uint64_t)v18, 0, a3);
  v8 = sub_19C1DD660((uint64_t)v18);
  v9 = v8;
  if ((a3 & 1) != 0)
  {
    sub_19C1DD88C((uint64_t)v18, (uint64_t)&v15);
    *(_QWORD *)(a4 + 8) = 0;
    *(double *)a4 = v9;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0;
    v10 = v15;
    v11 = v16 - v15;
    if (v16 != v15)
    {
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = (char *)operator new(v16 - v15);
      *(_QWORD *)(a4 + 8) = v12;
      v13 = &v12[8 * (v11 >> 3)];
      *(_QWORD *)(a4 + 24) = v13;
      memcpy(v12, v10, v11);
      *(_QWORD *)(a4 + 16) = v13;
    }
    *(_DWORD *)(a4 + 32) = v17;
    *(_BYTE *)(a4 + 40) = 1;
    if (v10)
    {
      v16 = v10;
      operator delete(v10);
    }
  }
  else
  {
    *(double *)a4 = v8;
    *(_BYTE *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 40) = 0;
  }
  return sub_19C1D2994(v18);
}

void sub_19C1DD5D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_19C1D2994((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1DD5EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  void **v14;
  void *v16;
  void *v17;

  v16 = *v14;
  if (*v14)
  {
    *(_QWORD *)(v13 + 16) = v16;
    operator delete(v16);
    v17 = __p;
    if (!__p)
    {
LABEL_3:
      sub_19C1D2994(&a13);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v17 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v17);
  sub_19C1D2994(&a13);
  _Unwind_Resume(a1);
}

void sub_19C1DD638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_19C1D2994((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1DD64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_19C1D2994((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_19C1DD660(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  double *v8;
  void *__p;
  char *v11;
  char *v12;
  int v13;
  void *__C[3];
  vDSP_Length v15;
  double *__A;
  double *v17;
  uint64_t v18;
  vDSP_Length __N;

  sub_19C1DC5E0(a1, (uint64_t)&__A);
  __C[0] = 0;
  vDSP_dotprD(__A, 1, *(const double **)(a1 + 232), 1, (double *)__C, (int)__N);
  v2 = __C[0];
  if (__A)
  {
    v17 = __A;
    operator delete(__A);
  }
  v3 = *(int *)(a1 + 196);
  if ((int)v3 >= *(_DWORD *)(a1 + 192))
    v4 = *(_DWORD *)(a1 + 192);
  else
    v4 = *(_DWORD *)(a1 + 196);
  __A = 0;
  v17 = 0;
  v18 = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = operator new(8 * v4);
    bzero(v5, 8 * v4);
    v6 = 0;
    v7 = *(_QWORD **)(a1 + 168);
    do
    {
      *((_QWORD *)v5 + v6++) = *v7;
      v7 += v3 + 1;
    }
    while (v4 != v6);
    __p = operator new(8 * v4);
    v11 = (char *)__p + 8 * v4;
    v12 = v11;
    v13 = v4;
    memcpy(__p, v5, 8 * v4);
  }
  else
  {
    v5 = 0;
    v11 = 0;
    v12 = 0;
    __p = 0;
    v13 = 0;
  }
  sub_19C1D650C((uint64_t)&__p, (uint64_t)__C);
  __A = 0;
  vDSP_sveD((const double *)__C[0], 1, (double *)&__A, (int)v15);
  v8 = __A;
  if (__C[0])
  {
    __C[1] = __C[0];
    operator delete(__C[0]);
  }
  if (__p)
  {
    v11 = (char *)__p;
    operator delete(__p);
  }
  if (v5)
    operator delete(v5);
  return (double)*(int *)(a1 + 96) * -0.918938533 - (*(double *)&v8 - *(double *)&v2 * -0.5);
}

void sub_19C1DD804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v20;

  if (__p)
  {
    operator delete(__p);
    v20 = a9;
    if (!a9)
    {
LABEL_3:
      if (!v18)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(v18);
      goto LABEL_8;
    }
  }
  else
  {
    v20 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v20);
  if (!v18)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C1DD870(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1DD88C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  double *v5;
  double *v6;
  _BYTE *v7;
  _BYTE *v8;
  int64_t v9;
  char *v10;
  char *v11;
  void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  vDSP_Length v18;
  int64_t v19;
  char *v20;
  char *v21;
  char *v22;
  unint64_t i;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  __int128 v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  long double *v65;
  double v66;
  double v67;
  long double v68;
  uint64_t v69;
  double *v70;
  double *v71;
  double *v72;
  double *v73;
  __int128 *v74;
  _OWORD *v75;
  unint64_t v76;
  __int128 v77;
  __int128 *v78;
  _OWORD *v79;
  unint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  void *v86[4];
  void *v87;
  void *v88;
  char *v89;
  int v90;
  void *__p;
  char *v92;
  char *v93;
  unint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  unint64_t v98;
  void *v99;
  char *v100;
  char *v101;
  unint64_t v102;
  double *v103;
  double *v104;
  double *v105;
  unint64_t v106;
  double __B;
  char *v108;
  char *v109;
  unint64_t v110;

  v103 = 0;
  v104 = 0;
  v105 = 0;
  v3 = *(_BYTE **)(a1 + 200);
  v2 = *(_BYTE **)(a1 + 208);
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (double *)operator new(v2 - v3);
    v6 = &v5[v4 >> 3];
    v103 = v5;
    v105 = v6;
    memcpy(v5, v3, v4);
    v104 = v6;
  }
  v106 = *(_QWORD *)(a1 + 224);
  v88 = 0;
  v89 = 0;
  v87 = 0;
  v8 = *(_BYTE **)(a1 + 232);
  v7 = *(_BYTE **)(a1 + 240);
  v9 = v7 - v8;
  if (v7 != v8)
  {
    if (v9 < 0)
      sub_19C07DA0C();
    v10 = (char *)operator new(v7 - v8);
    v11 = &v10[8 * (v9 >> 3)];
    v87 = v10;
    v89 = v11;
    memcpy(v10, v8, v9);
    v88 = v11;
  }
  v90 = *(_DWORD *)(a1 + 256);
  sub_19C1CE998(a1 + 232, (uint64_t)v86);
  sub_19C1D65EC((uint64_t)&v87, (uint64_t)v86, (uint64_t)&__p);
  v95 = 0;
  v96 = 0;
  v97 = 0;
  v12 = __p;
  v13 = v92 - (_BYTE *)__p;
  if (v92 == __p)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v92 - (_BYTE *)__p);
    v15 = &v14[8 * (v13 >> 3)];
    v95 = v14;
    v97 = v15;
    memcpy(v14, v12, v13);
    v96 = v15;
  }
  v16 = v94;
  v98 = v94;
  v17 = HIDWORD(v94);
  v18 = HIDWORD(v94) * (int)v94;
  vDSP_vsubD(v103, 1, (const double *)v14, 1, (double *)v14, 1, v18);
  v99 = 0;
  v100 = 0;
  v101 = 0;
  v19 = v15 - v14;
  if (!v19)
  {
    v20 = 0;
    v102 = v16;
    v108 = 0;
    v109 = 0;
    __B = 0.0;
    if ((_DWORD)v18)
      goto LABEL_14;
LABEL_18:
    v22 = 0;
    v21 = 0;
    v110 = __PAIR64__(v17, v16);
    goto LABEL_23;
  }
  if (v19 < 0)
    sub_19C07DA0C();
  v20 = (char *)operator new(v19);
  v99 = v20;
  v101 = &v20[8 * (v19 >> 3)];
  memcpy(v20, v14, v19);
  v100 = &v20[8 * (v19 >> 3)];
  v102 = v16;
  v108 = 0;
  v109 = 0;
  __B = 0.0;
  if (!(_DWORD)v18)
    goto LABEL_18;
LABEL_14:
  if ((v18 & 0x80000000) != 0)
    sub_19C07DA0C();
  v21 = (char *)operator new(8 * v18);
  *(_QWORD *)&__B = v21;
  v109 = &v21[8 * v18];
  bzero(v21, 8 * v18);
  v22 = &v21[8 * v18];
  v110 = __PAIR64__(v17, v16);
  if (v18 < 4)
  {
    for (i = 0; i != v18; ++i)
LABEL_22:
      *(_QWORD *)&v21[8 * i] = *(_QWORD *)&v20[8 * i];
    goto LABEL_23;
  }
  v24 = 0;
  i = v18 & 0xFFFFFFFFFFFFFFFCLL;
  v25 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v26 = *(_OWORD *)&v20[v24 + 16];
    v27 = &v21[v24];
    *(_OWORD *)v27 = *(_OWORD *)&v20[v24];
    *((_OWORD *)v27 + 1) = v26;
    v24 += 32;
    v25 -= 4;
  }
  while (v25);
  if (i != v18)
    goto LABEL_22;
LABEL_23:
  sub_19C11EAD0(&v103, v21, v22, (v22 - v21) >> 3);
  v106 = v110;
  if (v21)
  {
    v108 = v21;
    operator delete(v21);
  }
  if (v20)
  {
    v100 = v20;
    operator delete(v20);
  }
  if (v14)
  {
    v96 = v14;
    operator delete(v14);
  }
  if (__p)
  {
    v92 = (char *)__p;
    operator delete(__p);
  }
  if (v86[0])
  {
    v86[1] = v86[0];
    operator delete(v86[0]);
  }
  if (v87)
  {
    v88 = v87;
    operator delete(v87);
  }
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v28 = operator new(0x10uLL);
  *(_QWORD *)(a2 + 8) = v28 + 2;
  *(_QWORD *)(a2 + 16) = v28 + 2;
  *(_QWORD *)a2 = v28;
  *(_DWORD *)(a2 + 24) = 2;
  *v28 = 0;
  v28[1] = 0;
  v82 = *(int *)(a1 + 96);
  if ((_DWORD)v82)
  {
    v29 = 0;
    v83 = 0;
    do
    {
      v30 = 0;
      v31 = 0;
      do
      {
        v32 = *(_QWORD *)(a1 + 72);
        v33 = *(unsigned int *)(a1 + 100);
        __B = 0.0;
        v108 = 0;
        v109 = 0;
        if (!(_DWORD)v33)
        {
          v34 = 0;
          v100 = 0;
          v101 = 0;
          v99 = 0;
          LODWORD(v102) = 0;
LABEL_68:
          v51 = 0;
          v92 = 0;
          v93 = 0;
          __p = 0;
          LODWORD(v94) = 0;
          goto LABEL_72;
        }
        if ((v33 & 0x80000000) != 0)
          sub_19C07DA0C();
        v34 = operator new(8 * (int)v33);
        bzero(v34, 8 * (int)v33);
        if (v33 < 8 || (unint64_t)v34 - v32 - 8 * v29 * (int)v33 < 0x20)
        {
          v35 = 0;
LABEL_45:
          v36 = (int)v33 - v35;
          v37 = 8 * v35;
          v38 = (_QWORD *)v34 + v35;
          v39 = (uint64_t *)(v32 + v37 + v83 * (int)v33);
          do
          {
            v40 = *v39++;
            *v38++ = v40;
            --v36;
          }
          while (v36);
          goto LABEL_47;
        }
        v35 = (int)v33 & 0xFFFFFFFFFFFFFFFCLL;
        v74 = (__int128 *)(v32 + v83 * (int)v33 + 16);
        v75 = v34 + 1;
        v76 = v35;
        do
        {
          v77 = *v74;
          *(v75 - 1) = *(v74 - 1);
          *v75 = v77;
          v74 += 2;
          v75 += 2;
          v76 -= 4;
        }
        while (v76);
        if (v35 != (int)v33)
          goto LABEL_45;
LABEL_47:
        v99 = 0;
        v100 = 0;
        v101 = 0;
        LODWORD(v102) = v33;
        v41 = operator new(8 * (int)v33);
        bzero(v41, 8 * (int)v33);
        v99 = v41;
        v100 = (char *)v41 + 8 * (int)v33;
        v101 = v100;
        if ((v33 - 6) >= 0x7FFFFFFB)
        {
          v42 = 0;
LABEL_54:
          v47 = v33 - v42;
          v48 = v42 << 32;
          do
          {
            *(_QWORD *)((char *)v41 + (v48 >> 29)) = *(_QWORD *)((char *)v34 + (v48 >> 29));
            v48 += 0x100000000;
            --v47;
          }
          while (v47);
          goto LABEL_56;
        }
        v42 = v33 & 0xFFFFFFFC;
        v43 = v41 + 1;
        v44 = v34 + 1;
        v45 = v42;
        do
        {
          v46 = *v44;
          *(v43 - 1) = *(v44 - 1);
          *v43 = v46;
          v43 += 2;
          v44 += 2;
          v45 -= 4;
        }
        while (v45);
        if (v42 != v33)
          goto LABEL_54;
LABEL_56:
        v49 = *(_QWORD *)(a1 + 72);
        v50 = *(unsigned int *)(a1 + 100);
        __B = 0.0;
        v108 = 0;
        v109 = 0;
        if (!(_DWORD)v50)
          goto LABEL_68;
        if ((v50 & 0x80000000) != 0)
          sub_19C07DA0C();
        v51 = operator new(8 * (int)v50);
        bzero(v51, 8 * (int)v50);
        if (v50 < 8 || (unint64_t)v51 - v49 - 8 * v31 * (int)v50 < 0x20)
        {
          v52 = 0;
LABEL_61:
          v53 = (int)v50 - v52;
          v54 = 8 * v52;
          v55 = (_QWORD *)v51 + v52;
          v56 = (uint64_t *)(v49 + v54 + v30 * (int)v50);
          do
          {
            v57 = *v56++;
            *v55++ = v57;
            --v53;
          }
          while (v53);
          goto LABEL_63;
        }
        v52 = (int)v50 & 0xFFFFFFFFFFFFFFFCLL;
        v78 = (__int128 *)(v49 + v30 * (int)v50 + 16);
        v79 = v51 + 1;
        v80 = v52;
        do
        {
          v81 = *v78;
          *(v79 - 1) = *(v78 - 1);
          *v79 = v81;
          v78 += 2;
          v79 += 2;
          v80 -= 4;
        }
        while (v80);
        if (v52 != (int)v50)
          goto LABEL_61;
LABEL_63:
        __p = 0;
        v92 = 0;
        v93 = 0;
        LODWORD(v94) = v50;
        v58 = (char *)operator new(8 * (int)v50);
        bzero(v58, 8 * (int)v50);
        __p = v58;
        v92 = &v58[8 * (int)v50];
        v93 = v92;
        if ((v50 - 6) >= 0x7FFFFFFB)
        {
          v60 = 0;
LABEL_70:
          v63 = v50 - v60;
          v64 = v60 << 32;
          do
          {
            *(_QWORD *)&v58[v64 >> 29] = *(_QWORD *)((char *)v51 + (v64 >> 29));
            v64 += 0x100000000;
            --v63;
          }
          while (v63);
          goto LABEL_72;
        }
        v59 = 0;
        v60 = v50 & 0xFFFFFFFC;
        do
        {
          v61 = v51[v59 / 0x10 + 1];
          v62 = &v58[v59];
          *(_OWORD *)v62 = v51[v59 / 0x10];
          *((_OWORD *)v62 + 1) = v61;
          v59 += 32;
        }
        while (((8 * v50) & 0x7FFFFFFE0) != v59);
        if (v60 != v50)
          goto LABEL_70;
LABEL_72:
        v65 = (long double *)operator new(0x10uLL);
        *v65 = 0.0;
        v65[1] = 0.0;
        v66 = sub_19C1D8AB0(a1 + 8, (uint64_t)&v99, (const double **)&__p);
        v67 = *(double *)(a1 + 24);
        v68 = v67 * exp(v66 * -0.5);
        *v65 = v68 + v68;
        v65[1] = v68 * v66;
        if (__p)
        {
          v92 = (char *)__p;
          operator delete(__p);
        }
        if (v51)
          operator delete(v51);
        if (v99)
        {
          v100 = (char *)v99;
          operator delete(v99);
        }
        if (v34)
          operator delete(v34);
        v69 = SHIDWORD(v106);
        v70 = v103;
        v71 = (double *)operator new(0x10uLL);
        *(_OWORD *)v71 = *(_OWORD *)v65;
        if (v29 == v31)
        {
          vDSP_vsmulD(v71, 1, &v70[v29 + v29 * v69], v71, 1, 2uLL);
          v72 = (double *)operator new(0x10uLL);
          *(_OWORD *)v72 = *(_OWORD *)v71;
          __B = 0.5;
          vDSP_vsmulD(v72, 1, &__B, v72, 1, 2uLL);
          v73 = (double *)operator new(0x10uLL);
          *(_OWORD *)v73 = *(_OWORD *)v72;
          vDSP_vaddD(*(const double **)a2, 1, v73, 1, *(double **)a2, 1, 2uLL);
          operator delete(v73);
        }
        else
        {
          vDSP_vsmulD(v71, 1, &v70[v31 + v29 * v69], v71, 1, 2uLL);
          v72 = (double *)operator new(0x10uLL);
          *(_OWORD *)v72 = *(_OWORD *)v71;
          vDSP_vaddD(*(const double **)a2, 1, v72, 1, *(double **)a2, 1, 2uLL);
        }
        operator delete(v72);
        operator delete(v71);
        operator delete(v65);
        ++v31;
        v30 += 8;
      }
      while (v31 <= v29);
      ++v29;
      v83 += 8;
    }
    while (v29 != v82);
  }
  if (v103)
  {
    v104 = v103;
    operator delete(v103);
  }
}

void sub_19C1DE11C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v38;
  void *v39;
  void *v40;

  if (v35)
    operator delete(v35);
  if (v34)
    operator delete(v34);
  if (v33)
    operator delete(v33);
  if (__p)
  {
    operator delete(__p);
    v38 = a16;
    if (!a16)
    {
LABEL_9:
      v39 = a20;
      if (!a20)
      {
LABEL_14:
        v40 = *(void **)(v36 - 184);
        if (v40)
        {
          *(_QWORD *)(v36 - 176) = v40;
          operator delete(v40);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_13:
      operator delete(v39);
      goto LABEL_14;
    }
  }
  else
  {
    v38 = a16;
    if (!a16)
      goto LABEL_9;
  }
  operator delete(v38);
  v39 = a20;
  if (!a20)
    goto LABEL_14;
  goto LABEL_13;
}

void sub_19C1DE2B4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;

  operator delete(v34);
  if (__p)
  {
    operator delete(__p);
    if (!v35)
    {
LABEL_3:
      v36 = a32;
      if (!a32)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v35)
  {
    goto LABEL_3;
  }
  operator delete(v35);
  v36 = a32;
  if (!a32)
  {
LABEL_4:
    if (v33)
      goto LABEL_12;
    goto LABEL_13;
  }
LABEL_8:
  operator delete(v36);
  if (v33)
LABEL_12:
    JUMPOUT(0x19C1DE260);
LABEL_13:
  JUMPOUT(0x19C1DE264);
}

uint64_t sub_19C1DE310(uint64_t a1, int *a2)
{
  int v4;
  __int128 v5;
  _BYTE *v6;
  _BYTE *v7;
  int64_t v8;
  char *v9;
  char *v10;
  int v11;
  _BYTE *v12;
  _BYTE *v13;
  int64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  int64_t v20;
  char *v21;
  char *v22;
  int v23;
  _BYTE *v24;
  _BYTE *v25;
  int64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  int64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  int64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  int64_t v44;
  char *v45;
  char *v46;
  _BYTE *v47;
  _BYTE *v48;
  int64_t v49;
  char *v50;
  char *v51;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 2);
  v5 = *(_OWORD *)(a2 + 6);
  *(_QWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  v7 = (_BYTE *)*((_QWORD *)a2 + 5);
  v6 = (_BYTE *)*((_QWORD *)a2 + 6);
  v8 = v6 - v7;
  if (v6 != v7)
  {
    if (v8 < 0)
      sub_19C07DA0C();
    v9 = (char *)operator new(v6 - v7);
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v9;
    v10 = &v9[8 * (v8 >> 3)];
    *(_QWORD *)(a1 + 56) = v10;
    memcpy(v9, v7, v8);
    *(_QWORD *)(a1 + 48) = v10;
  }
  v11 = a2[16];
  *(_QWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  v13 = (_BYTE *)*((_QWORD *)a2 + 9);
  v12 = (_BYTE *)*((_QWORD *)a2 + 10);
  v14 = v12 - v13;
  if (v12 != v13)
  {
    if (v14 < 0)
      sub_19C07DA0C();
    v15 = (char *)operator new(v12 - v13);
    *(_QWORD *)(a1 + 72) = v15;
    *(_QWORD *)(a1 + 80) = v15;
    v16 = &v15[8 * (v14 >> 3)];
    *(_QWORD *)(a1 + 88) = v16;
    memcpy(v15, v13, v14);
    *(_QWORD *)(a1 + 80) = v16;
  }
  v17 = *((_QWORD *)a2 + 12);
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  v19 = (_BYTE *)*((_QWORD *)a2 + 13);
  v18 = (_BYTE *)*((_QWORD *)a2 + 14);
  v20 = v18 - v19;
  if (v18 != v19)
  {
    if (v20 < 0)
      sub_19C07DA0C();
    v21 = (char *)operator new(v18 - v19);
    *(_QWORD *)(a1 + 104) = v21;
    *(_QWORD *)(a1 + 112) = v21;
    v22 = &v21[8 * (v20 >> 3)];
    *(_QWORD *)(a1 + 120) = v22;
    memcpy(v21, v19, v20);
    *(_QWORD *)(a1 + 112) = v22;
  }
  v23 = a2[32];
  *(_QWORD *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 128) = v23;
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  v25 = (_BYTE *)*((_QWORD *)a2 + 17);
  v24 = (_BYTE *)*((_QWORD *)a2 + 18);
  v26 = v24 - v25;
  if (v24 != v25)
  {
    if (v26 < 0)
      sub_19C07DA0C();
    v27 = (char *)operator new(v24 - v25);
    *(_QWORD *)(a1 + 136) = v27;
    *(_QWORD *)(a1 + 144) = v27;
    v28 = &v27[8 * (v26 >> 3)];
    *(_QWORD *)(a1 + 152) = v28;
    memcpy(v27, v25, v26);
    *(_QWORD *)(a1 + 144) = v28;
  }
  v29 = *((_QWORD *)a2 + 20);
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 160) = v29;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  v31 = (_BYTE *)*((_QWORD *)a2 + 21);
  v30 = (_BYTE *)*((_QWORD *)a2 + 22);
  v32 = v30 - v31;
  if (v30 != v31)
  {
    if (v32 < 0)
      sub_19C07DA0C();
    v33 = (char *)operator new(v30 - v31);
    *(_QWORD *)(a1 + 168) = v33;
    *(_QWORD *)(a1 + 176) = v33;
    v34 = &v33[8 * (v32 >> 3)];
    *(_QWORD *)(a1 + 184) = v34;
    memcpy(v33, v31, v32);
    *(_QWORD *)(a1 + 176) = v34;
  }
  v35 = *((_QWORD *)a2 + 24);
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 192) = v35;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  v37 = (_BYTE *)*((_QWORD *)a2 + 25);
  v36 = (_BYTE *)*((_QWORD *)a2 + 26);
  v38 = v36 - v37;
  if (v36 != v37)
  {
    if (v38 < 0)
      sub_19C07DA0C();
    v39 = (char *)operator new(v36 - v37);
    *(_QWORD *)(a1 + 200) = v39;
    *(_QWORD *)(a1 + 208) = v39;
    v40 = &v39[8 * (v38 >> 3)];
    *(_QWORD *)(a1 + 216) = v40;
    memcpy(v39, v37, v38);
    *(_QWORD *)(a1 + 208) = v40;
  }
  v41 = *((_QWORD *)a2 + 28);
  *(_QWORD *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 224) = v41;
  *(_QWORD *)(a1 + 240) = 0;
  *(_QWORD *)(a1 + 248) = 0;
  v43 = (_BYTE *)*((_QWORD *)a2 + 29);
  v42 = (_BYTE *)*((_QWORD *)a2 + 30);
  v44 = v42 - v43;
  if (v42 != v43)
  {
    if (v44 < 0)
      sub_19C07DA0C();
    v45 = (char *)operator new(v42 - v43);
    *(_QWORD *)(a1 + 232) = v45;
    *(_QWORD *)(a1 + 240) = v45;
    v46 = &v45[8 * (v44 >> 3)];
    *(_QWORD *)(a1 + 248) = v46;
    memcpy(v45, v43, v44);
    *(_QWORD *)(a1 + 240) = v46;
  }
  *(_DWORD *)(a1 + 256) = a2[64];
  *(_QWORD *)(a1 + 272) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  v48 = (_BYTE *)*((_QWORD *)a2 + 33);
  v47 = (_BYTE *)*((_QWORD *)a2 + 34);
  v49 = v47 - v48;
  if (v47 != v48)
  {
    if (v49 < 0)
      sub_19C07DA0C();
    v50 = (char *)operator new(v47 - v48);
    *(_QWORD *)(a1 + 264) = v50;
    *(_QWORD *)(a1 + 272) = v50;
    v51 = &v50[8 * (v49 >> 3)];
    *(_QWORD *)(a1 + 280) = v51;
    memcpy(v50, v48, v49);
    *(_QWORD *)(a1 + 272) = v51;
  }
  *(_DWORD *)(a1 + 288) = a2[72];
  return a1;
}

void sub_19C1DE644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, void **a10)
{
  _QWORD *v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  v18 = *v11;
  if (*v11)
  {
    v10[34] = v18;
    operator delete(v18);
    v19 = *v16;
    if (!*v16)
    {
LABEL_3:
      v20 = *v15;
      if (!*v15)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else
  {
    v19 = *v16;
    if (!*v16)
      goto LABEL_3;
  }
  v10[30] = v19;
  operator delete(v19);
  v20 = *v15;
  if (!*v15)
  {
LABEL_4:
    v21 = *v14;
    if (!*v14)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  v10[26] = v20;
  operator delete(v20);
  v21 = *v14;
  if (!*v14)
  {
LABEL_5:
    v22 = *v13;
    if (!*v13)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  v10[22] = v21;
  operator delete(v21);
  v22 = *v13;
  if (!*v13)
  {
LABEL_6:
    v23 = *v12;
    if (!*v12)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  v10[18] = v22;
  operator delete(v22);
  v23 = *v12;
  if (!*v12)
  {
LABEL_7:
    v24 = *a9;
    if (!*a9)
      goto LABEL_9;
    goto LABEL_8;
  }
LABEL_17:
  v10[14] = v23;
  operator delete(v23);
  v24 = *a9;
  if (!*a9)
  {
LABEL_9:
    v25 = *a10;
    if (*a10)
    {
      v10[6] = v25;
      operator delete(v25);
    }
    _Unwind_Resume(exception_object);
  }
LABEL_8:
  v10[10] = v24;
  operator delete(v24);
  goto LABEL_9;
}

void sub_19C1DE760()
{
  _QWORD *v0;

  if (!*v0)
    JUMPOUT(0x19C1DE68CLL);
  JUMPOUT(0x19C1DE684);
}

void sub_19C1DE770()
{
  _QWORD *v0;

  if (!*v0)
    JUMPOUT(0x19C1DE6A0);
  JUMPOUT(0x19C1DE698);
}

BOOL sub_19C1DE780(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v5;
  int v6;
  int v8;
  _BOOL4 v9;
  std::runtime_error *exception;

  if (*(_BYTE *)(a1 + 8))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Early stopping already requested.");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  v3 = *(_DWORD *)(a1 + 12);
  if (v3 == -1)
    return 0;
  v6 = *a2;
  v5 = (uint64_t)(a2 + 2);
  if (v6 == 1 || *(double *)(a1 + 120) < *((double *)a2 + 13) - *(double *)(a1 + 16))
  {
    sub_19C1C9C8C(a1 + 24, v5);
    *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 13);
    *(_DWORD *)(a1 + 128) = 0;
    *(_BYTE *)(a1 + 8) = 0;
    return 0;
  }
  else
  {
    v8 = *(_DWORD *)(a1 + 128);
    *(_DWORD *)(a1 + 128) = v8 + 1;
    v9 = v8 >= v3;
    *(_BYTE *)(a1 + 8) = v9;
    return v9;
  }
}

void sub_19C1DE868(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char **sub_19C1DE87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  BOOL v18;
  void *v20;
  _BYTE v21[4];
  _BYTE v22[12];
  _OWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  double v26;
  char *v27[2];
  int v28;
  char *v29[12];
  BOOL (**v30)(uint64_t, _DWORD *);
  char v31;
  int v32;
  BOOL (**v33)(uint64_t, int *);
  char v34;
  uint64_t v35;
  int v36;
  uint64_t *v37[13];
  int v38;

  v6 = *(_DWORD *)(a1 + 56);
  v7 = *(_DWORD *)(a1 + 60);
  v8 = *(_QWORD *)(a1 + 64);
  v21[0] = 0;
  *(_DWORD *)v22 = v7;
  *(_QWORD *)&v22[4] = v8;
  memset(v23, 0, sizeof(v23));
  v24 = v25;
  v25[0] = 0;
  v26 = 0.0;
  v27[0] = 0;
  v25[1] = 0;
  v25[2] = &v26;
  v28 = 0;
  v31 = 0;
  v30 = (BOOL (**)(uint64_t, _DWORD *))&unk_1E3D21888;
  v32 = v6;
  v34 = 0;
  v36 = HIDWORD(v8);
  v35 = *(_QWORD *)v22;
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D218D0;
  sub_19C1C5D14(v37, (uint64_t)v23);
  v37[12] = (uint64_t *)v27[1];
  v38 = v28;
  v20 = &unk_1E3D218D0;
  sub_19C17B808((char **)v23);
  v9 = *(_DWORD *)(a1 + 72);
  (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
  v10 = *(_QWORD *)(a2 + 24);
  if (!v10)
    goto LABEL_16;
  v11 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v10 + 48))(v10, v29);
  (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
  std::chrono::steady_clock::now();
  LODWORD(v20) = 1;
  sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
  v26 = v11;
  sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
  if (1 % v9)
    goto LABEL_5;
  v12 = *(_QWORD *)(a2 + 56);
  if (!v12)
LABEL_17:
    sub_19C1D6A94();
  if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v12 + 48))(v12, &v20) & 1) == 0)
  {
LABEL_5:
    if (!(*v30)((uint64_t)&v30, &v20))
    {
      v13 = (*v33)((uint64_t)&v33, (int *)&v20);
      sub_19C17B808(v27);
      sub_19C17B808((char **)v21);
      sub_19C17B808(v29);
      if (v13)
        goto LABEL_15;
      v14 = 2;
      while (1)
      {
        (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
        v15 = *(_QWORD *)(a2 + 24);
        if (!v15)
          break;
        v16 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v15 + 48))(v15, v29);
        (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
        std::chrono::steady_clock::now();
        std::chrono::steady_clock::now();
        LODWORD(v20) = v14;
        sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
        v26 = v16;
        sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
        if (!(v14 % v9))
        {
          v17 = *(_QWORD *)(a2 + 56);
          if (!v17)
            goto LABEL_17;
          if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v17 + 48))(v17, &v20) & 1) != 0)
            goto LABEL_6;
        }
        if ((*v30)((uint64_t)&v30, &v20))
          goto LABEL_6;
        v18 = (*v33)((uint64_t)&v33, (int *)&v20);
        sub_19C17B808(v27);
        sub_19C17B808((char **)v21);
        sub_19C17B808(v29);
        ++v14;
        if (v18)
          goto LABEL_15;
      }
LABEL_16:
      sub_19C1D6A94();
    }
  }
LABEL_6:
  sub_19C17B808(v27);
  sub_19C17B808((char **)v21);
  sub_19C17B808(v29);
LABEL_15:
  sub_19C1D6818(*(_QWORD *)(a1 + 120), a3);
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D218D0;
  return sub_19C17B808((char **)v37);
}

void sub_19C1DEBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char *a37)
{
  char **v37;
  char **v38;
  char **v39;
  uint64_t v40;

  sub_19C17B808(v39);
  sub_19C17B808(v38);
  sub_19C17B808(&a37);
  *(_QWORD *)(v40 - 240) = &unk_1E3D218D0;
  sub_19C17B808(v37);
  _Unwind_Resume(a1);
}

void sub_19C1DEC24(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  std::logic_error *exception;
  uint64_t v5;

  v3 = *(_DWORD *)(a1 + 48);
  if (v3 == 1)
  {
    sub_19C1DECCC(a1, &v5);
    *a2 = v5;
  }
  else
  {
    if (v3)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1C79A4(exception, "Invalid optimizer in user config.");
      __cxa_throw(exception, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    }
    sub_19C1C76D4(a1, &v5);
    *a2 = v5;
  }
}

void sub_19C1DECB8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C1DECCC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  void **v15;
  void *v16;
  void **v17;
  void *__p;
  char **v19;
  char v20;

  v4 = operator new();
  sub_19C1C2D98((uint64_t)&v14, a1);
  sub_19C1DEE34(v4, (uint64_t *)&v14);
  *a2 = v4;
  if (v20)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v19;
      v7 = __p;
      if (v19 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v19 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v16;
  if (v16)
  {
    v9 = v17;
    v10 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v16;
    }
    v17 = v8;
    operator delete(v10);
  }
  v11 = (void **)v14;
  if (v14)
  {
    v12 = v15;
    v13 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v14;
    }
    v15 = v11;
    operator delete(v13);
  }
}

void sub_19C1DEE04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  va_list va;

  va_start(va, a2);
  sub_19C1C2E88((uint64_t)va);
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_19C1DEE20(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1DEE34(uint64_t a1, uint64_t *a2)
{
  char **v4;
  char **v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  int v13;
  int v14;
  _QWORD *v15;
  char ***v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  char **v39;
  char **v40;
  char **v41;
  void **v42;
  void **v43;
  void *v44;
  void **v45;
  void **v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t **v52;
  uint64_t **v53;
  uint64_t v54;
  uint64_t *v55;
  void *v57;
  void **v58;
  uint64_t v59;
  void *v60;
  void **v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  void *v65;
  void **v66;
  void *v67;
  void **v68;
  void *__p;
  char **v70;
  char v71;

  sub_19C1C2D98((uint64_t)&v65, (uint64_t)a2);
  *(_QWORD *)a1 = &unk_1E3D214F8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_19C1C2D98(a1 + 32, (uint64_t)&v65);
  if (v71)
  {
    v4 = (char **)__p;
    if (__p)
    {
      v5 = v70;
      v6 = __p;
      if (v70 != __p)
      {
        do
          v5 = sub_19C17B808(v5 - 12);
        while (v5 != v4);
        v6 = __p;
      }
      v70 = v4;
      operator delete(v6);
    }
  }
  v7 = (void **)v67;
  if (v67)
  {
    v8 = v68;
    v9 = v67;
    if (v68 != v67)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v67;
    }
    v68 = v7;
    operator delete(v9);
  }
  v10 = (void **)v65;
  if (v65)
  {
    v11 = v66;
    v12 = v65;
    if (v66 != v65)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v65;
    }
    v66 = v10;
    operator delete(v12);
  }
  *(_QWORD *)a1 = &unk_1E3D21738;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  v13 = sub_19C178A44(a2);
  v14 = sub_19C179558((uint64_t)a2);
  *(_DWORD *)(a1 + 176) = v14 + v13;
  *(_QWORD *)(a1 + 184) = v14 + v13;
  *(_OWORD *)(a1 + 192) = xmmword_19C27A9D0;
  *(_QWORD *)(a1 + 208) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 232) = 0;
  *(_DWORD *)(a1 + 240) = 0;
  v15 = operator new(0x10uLL);
  *(_QWORD *)(a1 + 216) = v15;
  *(_QWORD *)(a1 + 224) = v15 + 2;
  *(_QWORD *)(a1 + 232) = v15 + 2;
  *(_DWORD *)(a1 + 240) = 2;
  *v15 = 0;
  v15[1] = 0;
  *(_QWORD *)(a1 + 448) = 0;
  *(_QWORD *)(a1 + 456) = 0;
  *(_QWORD *)(a1 + 440) = 0;
  *(_DWORD *)(a1 + 464) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 292) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 420) = 0u;
  *(_QWORD *)(a1 + 496) = 0;
  *(_QWORD *)(a1 + 504) = 0;
  *(_DWORD *)(a1 + 520) = 0;
  *(_QWORD *)(a1 + 512) = 0;
  *(_DWORD *)(a1 + 536) = -1;
  *(_QWORD *)(a1 + 480) = &unk_1E3D21060;
  *(_QWORD *)(a1 + 488) = a1 + 176;
  *(_QWORD *)(a1 + 552) = 0x3FB999999999999ALL;
  *(_QWORD *)(a1 + 560) = 0;
  sub_19C1C81AC(a1 + 568);
  v16 = (char ***)(a1 + 10672);
  *(_QWORD *)(a1 + 10688) = 0;
  *(_OWORD *)(a1 + 10672) = 0u;
  if ((int)sub_19C179558(a1 + 32) < 1)
    sub_19C1DF72C(a1 + 480, (uint64_t *)(a1 + 32), (uint64_t *)(a1 + 108), (uint64_t *)&v63);
  else
    sub_19C1DF580(a1 + 480, (uint64_t *)(a1 + 32), (uint64_t *)&v63);
  v17 = v63;
  *(_QWORD *)&v63 = 0;
  v18 = *(_QWORD *)(a1 + 560);
  *(_QWORD *)(a1 + 560) = v17;
  if (v18)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = v63;
    *(_QWORD *)&v63 = 0;
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v20 = 0;
    v21 = *(_DWORD *)(a1 + 108);
    *(_DWORD *)(a1 + 8160) = v21;
    v22 = 1;
    v23 = v21;
    do
    {
      v24 = 1812433253 * (v23 ^ (v23 >> 30));
      v23 = v24 + v22;
      *(_DWORD *)(a1 + 8164 + 4 * v20) = v20 + v24 + 1;
      ++v22;
      ++v20;
    }
    while (v20 != 623);
    *(_QWORD *)(a1 + 10656) = 0;
    *(_DWORD *)(a1 + 568) = v21;
    v25 = 1;
    v26 = 143;
    v27 = v21;
    do
    {
      v28 = 1812433253 * (v27 ^ (v27 >> 30));
      v27 = v28 + v25;
      *(_DWORD *)(a1 + 4 * v26) = v26 + v28 - 142;
      ++v25;
      ++v26;
    }
    while (v26 != 766);
    v29 = 0;
    *(_QWORD *)(a1 + 3064) = 0;
    *(_DWORD *)(a1 + 3096) = v21;
    v30 = 1;
    v31 = v21;
    do
    {
      v32 = 1812433253 * (v31 ^ (v31 >> 30));
      v31 = v32 + v30;
      *(_DWORD *)(a1 + 3100 + 4 * v29) = v29 + v32 + 1;
      ++v30;
      ++v29;
    }
    while (v29 != 623);
    v33 = 0;
    *(_QWORD *)(a1 + 5592) = 0;
    *(_DWORD *)(a1 + 5616) = v21;
    v34 = 1;
    do
    {
      v35 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v35 + v34;
      *(_DWORD *)(a1 + 5620 + 4 * v33) = v33 + v35 + 1;
      ++v34;
      ++v33;
    }
    while (v33 != 623);
    *(_QWORD *)(a1 + 8112) = 0;
    sub_19C23B684();
  }
  v58 = 0;
  v59 = 0;
  v57 = 0;
  sub_19C17AF88(&v57, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 4));
  v60 = 0;
  v61 = 0;
  v62 = 0;
  sub_19C17B16C(&v60, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 56)) >> 3));
  v36 = sub_19C178A44((uint64_t *)(a1 + 32));
  v37 = 5 * (sub_19C179558(a1 + 32) + v36);
  if (*(_BYTE *)(a1 + 144))
  {
    v38 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
    if ((int)v37 <= v38)
      v37 = v38;
    else
      v37 = v37;
  }
  sub_19C17A144((uint64_t *)&v57, a1 + 568, v37, (char **)&v63);
  v39 = *v16;
  if (*v16)
  {
    v40 = *(char ***)(a1 + 10680);
    v41 = *v16;
    if (v40 != v39)
    {
      do
        v40 = sub_19C17B808(v40 - 12);
      while (v40 != v39);
      v41 = *v16;
    }
    *(_QWORD *)(a1 + 10680) = v39;
    operator delete(v41);
    *v16 = 0;
    *(_QWORD *)(a1 + 10680) = 0;
    *(_QWORD *)(a1 + 10688) = 0;
  }
  *(_OWORD *)(a1 + 10672) = v63;
  *(_QWORD *)(a1 + 10688) = v64;
  v64 = 0;
  v63 = 0uLL;
  v42 = (void **)v60;
  if (v60)
  {
    v43 = v61;
    v44 = v60;
    if (v61 != v60)
    {
      do
      {
        if (*((char *)v43 - 17) < 0)
          operator delete(*(v43 - 5));
        v43 -= 5;
      }
      while (v43 != v42);
      v44 = v60;
    }
    v61 = v42;
    operator delete(v44);
  }
  v45 = (void **)v57;
  if (v57)
  {
    v46 = v58;
    v47 = v57;
    if (v58 != v57)
    {
      do
      {
        if (*((char *)v46 - 25) < 0)
          operator delete(*(v46 - 6));
        v46 -= 6;
      }
      while (v46 != v45);
      v47 = v57;
    }
    v58 = v45;
    operator delete(v47);
  }
  if (*(_BYTE *)(a1 + 144))
  {
    v48 = *(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120);
    if (v48)
    {
      v49 = 0;
      v50 = 0;
      v51 = v48 / 96;
      do
      {
        while (1)
        {
          v53 = *(uint64_t ***)(a1 + 10680);
          v54 = *(_QWORD *)(a1 + 10672);
          if (v50 >= 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v53 - v54) >> 5))
            break;
          if (!*(_BYTE *)(a1 + 144))
            goto LABEL_77;
          sub_19C1C9C8C(v54 + v49, *(_QWORD *)(a1 + 120) + v49);
          ++v50;
          v49 += 96;
          if (v51 == v50)
            return a1;
        }
        if (!*(_BYTE *)(a1 + 144))
LABEL_77:
          sub_19C1D1E0C();
        v55 = (uint64_t *)(*(_QWORD *)(a1 + 120) + v49);
        if ((unint64_t)v53 < *(_QWORD *)(a1 + 10688))
          v52 = sub_19C1C1840(v53, v55) + 12;
        else
          v52 = sub_19C1D1CCC((uint64_t ***)(a1 + 10672), v55);
        *(_QWORD *)(a1 + 10680) = v52;
        ++v50;
        v49 += 96;
      }
      while (v51 != v50);
    }
  }
  return a1;
}

void sub_19C1DF490(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  _QWORD *v3;
  _QWORD *v4;
  std::random_device *v5;
  void **v6;
  void **v8;
  uint64_t v9;
  void *v10;

  sub_19C17AA64(v6);
  sub_19C1C7C7C(v5);
  v8 = (void **)(v1 + 62);
  v9 = v1[70];
  v1[70] = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  *v4 = &unk_1E3D20ED0;
  v10 = *v8;
  if (*v8)
  {
    v1[63] = v10;
    operator delete(v10);
  }
  sub_19C1D2994(v3);
  sub_19C1C9D28(v2);
  sub_19C1C7CC8(v1);
  _Unwind_Resume(a1);
}

void sub_19C1DF580(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v6 = operator new();
  v14 = 0;
  v15 = 0;
  v13 = 0;
  sub_19C17AF88(&v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1E0A24(v6, a1, (uint64_t *)&v13);
  *a3 = v6;
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v17;
    v9 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v17 = v7;
    operator delete(v9);
  }
  v10 = (void **)v13;
  if (v13)
  {
    v11 = v14;
    v12 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v13;
    }
    v14 = v10;
    operator delete(v12);
  }
}

void sub_19C1DF6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1DF6F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1DF72C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  void **v9;
  void **v10;
  void *v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  uint64_t v17;
  void *__p;
  void **v19;
  uint64_t v20;

  v8 = operator new();
  v16 = 0;
  v17 = 0;
  v15 = 0;
  sub_19C17AF88(&v15, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1E1D8C(v8, a1, (uint64_t *)&v15, *a3);
  *a4 = v8;
  v9 = (void **)__p;
  if (__p)
  {
    v10 = v19;
    v11 = __p;
    if (v19 != __p)
    {
      do
      {
        if (*((char *)v10 - 17) < 0)
          operator delete(*(v10 - 5));
        v10 -= 5;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v19 = v9;
    operator delete(v11);
  }
  v12 = (void **)v15;
  if (v15)
  {
    v13 = v16;
    v14 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v13 - 25) < 0)
          operator delete(*(v13 - 6));
        v13 -= 6;
      }
      while (v13 != v12);
      v14 = v15;
    }
    v16 = v12;
    operator delete(v14);
  }
}

void sub_19C1DF884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1DF8A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1DF8DC(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_19C1E3438(a1);
  operator delete(v1);
}

uint64_t **sub_19C1DF8F0@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  signed int v8;
  char *v10[13];

  v4 = a1 + 8;
  v5 = 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3);
  v6 = a1 + 32;
  v7 = sub_19C178A44((uint64_t *)(a1 + 32));
  v8 = 5 * (sub_19C179558(v6) + v7);
  if (*(_BYTE *)(v4 + 136) && v8 <= (int)(-1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5)))
    v8 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
  if (v5 < v8)
    return sub_19C1C1840(a2, (uint64_t *)(*(_QWORD *)(a1 + 10672)+ 96 * (int)(-991146299 * ((*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3))));
  (*(void (**)(char **__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 560) + 16))(v10, *(_QWORD *)(a1 + 560), v4);
  sub_19C1C1840(a2, (uint64_t *)v10);
  return (uint64_t **)sub_19C17B808(v10);
}

void sub_19C1DFA08(uint64_t a1, __int128 **a2, double a3)
{
  double v6;
  double v7;
  double v8;
  double v9;
  unint64_t v10;
  void *v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  long double v20;
  long double v21;
  uint64_t **v22;
  uint64_t **v23;
  uint64_t **v24;
  double v25;
  double v26;
  double v27;
  void *__p;
  _BYTE *v29;
  int v30;
  uint64_t *v31[12];
  double v32;

  sub_19C1CBD8C(a2, (uint64_t)&__p);
  v6 = sub_19C1E19C4(a1 + 176, (const double **)&__p);
  v8 = sqrt(v7);
  v26 = v8;
  v27 = v6;
  v9 = v6 + *(double *)(a1 + 544) * v8;
  v25 = v9;
  v10 = *(_QWORD *)(a1 + 160);
  if (v10 >= *(_QWORD *)(a1 + 168))
  {
    v15 = sub_19C1D2BAC((uint64_t *)(a1 + 152), (uint64_t)&__p, &v27, (uint64_t *)&v26, (uint64_t *)&v25);
  }
  else
  {
    *(_QWORD *)v10 = 0;
    *(_QWORD *)(v10 + 8) = 0;
    *(_QWORD *)(v10 + 16) = 0;
    v11 = __p;
    v12 = v29 - (_BYTE *)__p;
    if (v29 != __p)
    {
      if (v12 < 0)
        sub_19C07DA0C();
      v13 = (char *)operator new(v29 - (_BYTE *)__p);
      *(_QWORD *)v10 = v13;
      *(_QWORD *)(v10 + 8) = v13;
      v14 = &v13[8 * (v12 >> 3)];
      *(_QWORD *)(v10 + 16) = v14;
      memcpy(v13, v11, v12);
      *(_QWORD *)(v10 + 8) = v14;
    }
    *(_DWORD *)(v10 + 24) = v30;
    *(double *)(v10 + 32) = v6;
    *(double *)(v10 + 40) = v8;
    *(double *)(v10 + 48) = v9;
    v15 = v10 + 56;
    *(_QWORD *)(a1 + 160) = v10 + 56;
  }
  *(_QWORD *)(a1 + 160) = v15;
  v16 = *(int *)(a1 + 464);
  v17 = v16 + 1;
  *(_DWORD *)(a1 + 464) = v16 + 1;
  v18 = *(_QWORD *)(a1 + 440);
  v19 = (*(_QWORD *)(a1 + 448) - v18) >> 3;
  if (v16 + 1 <= v19)
  {
    if (v16 + 1 < v19)
      *(_QWORD *)(a1 + 448) = v18 + 8 * v16 + 8;
  }
  else
  {
    sub_19C17C9D8(a1 + 440, v16 + 1 - v19);
    v17 = *(int *)(a1 + 464);
    v18 = *(_QWORD *)(a1 + 440);
  }
  *(double *)(v18 + 8 * v17 - 8) = a3;
  sub_19C1E35B0(a1 + 176, (uint64_t)&__p);
  sub_19C1E4760(a1 + 472, a1 + 176);
  v20 = pow((double)*(int *)(*(_QWORD *)(a1 + 488) + 96), (double)*(int *)(*(_QWORD *)(a1 + 488) + 100) * 0.5 + 2.0);
  v21 = log(v20 * 9.8696044 / (*(double *)(a1 + 552) * 3.0));
  *(double *)(a1 + 544) = sqrt(v21 + v21);
  sub_19C1DFD20(a1 + 480);
  sub_19C1C1840(v31, (uint64_t *)a2);
  v32 = a3;
  v22 = *(uint64_t ***)(a1 + 16);
  if ((unint64_t)v22 >= *(_QWORD *)(a1 + 24))
  {
    v24 = sub_19C1C907C((uint64_t ***)(a1 + 8), (uint64_t *)v31);
  }
  else
  {
    v23 = sub_19C1C1840(v22, (uint64_t *)v31);
    *((double *)v23 + 12) = v32;
    v24 = v23 + 13;
  }
  *(_QWORD *)(a1 + 16) = v24;
  sub_19C17B808((char **)v31);
  if (__p)
  {
    v29 = __p;
    operator delete(__p);
  }
}

void sub_19C1DFC40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  sub_19C17B808(&a16);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

double sub_19C1DFC8C(uint64_t a1, double a2, double a3)
{
  return a2 + *(double *)(a1 + 64) * a3;
}

double sub_19C1DFC98()
{
  return -1.79769313e308;
}

void sub_19C1DFCA4(uint64_t a1)
{
  long double v2;
  long double v3;

  v2 = pow((double)*(int *)(*(_QWORD *)(a1 + 8) + 96), (double)*(int *)(*(_QWORD *)(a1 + 8) + 100) * 0.5 + 2.0);
  v3 = log(v2 * 9.8696044 / (*(double *)(a1 + 72) * 3.0));
  *(double *)(a1 + 64) = sqrt(v3 + v3);
  sub_19C1DFD20(a1);
}

double sub_19C1DFD18()
{
  return 0.0;
}

void sub_19C1DFD20(uint64_t a1)
{
  _QWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double *v10;
  double *v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  char *v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  __int128 *v19;
  _OWORD *v20;
  unint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const double *v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  double *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  double *v44;
  uint64_t v45;
  unint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  double *v52;
  uint64_t v53;
  __int128 v54;
  double *v55;
  double *v56;
  double v57;
  double *v58;
  double *v59;
  double v60;
  BOOL v61;
  char *v62;
  signed int v63;
  _OWORD *v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  _OWORD *v84;
  unint64_t v85;
  __int128 v86;
  unint64_t v87;
  uint64_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v93;
  uint64_t v94;
  void *__p;
  int v96[2];
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  double *v104;
  uint64_t v105;
  double *v106;
  double *v107;
  double *v108;
  uint64_t v109;
  unsigned int v110;

  v104 = 0;
  v105 = 0;
  v106 = 0;
  v1 = *(_QWORD **)(a1 + 8);
  v101 = 0;
  v102 = 0;
  v100 = 0;
  v3 = (_BYTE *)v1[9];
  v2 = (_BYTE *)v1[10];
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(v2 - v3);
    v6 = &v5[8 * (v4 >> 3)];
    v100 = v5;
    v102 = v6;
    memcpy(v5, v3, v4);
    v101 = v6;
  }
  v7 = v1[12];
  v103 = v7;
  if (!(_DWORD)v7)
  {
    v55 = 0;
    v58 = 0;
    *(_DWORD *)(a1 + 56) = 0;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v90 = (int)v7;
  v91 = v7;
  v13 = 8 * (v7 >> 32);
  v88 = v7 >> 32;
  v89 = v13;
  v87 = (v7 >> 32) & 0xFFFFFFFFFFFFFFFCLL;
  v93 = HIDWORD(v7);
  v94 = 16;
  do
  {
    v14 = *(_QWORD *)(a1 + 8);
    v15 = v100;
    __p = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    if (!(_DWORD)v93)
    {
      v16 = 0;
      v108 = 0;
      v109 = 0;
      v107 = 0;
      v110 = 0;
      goto LABEL_27;
    }
    if (v7 < 0)
      sub_19C07DA0C();
    v16 = operator new(v13);
    bzero(v16, v13);
    if ((unint64_t)v7 >> 33 < 3)
    {
      v17 = 0;
      v18 = v88;
      goto LABEL_17;
    }
    v18 = v88;
    if ((unint64_t)((char *)v16 - &v100[v13 * v12]) < 0x20)
    {
      v17 = 0;
LABEL_17:
      v23 = v18 - v17;
      v24 = 8 * v17;
      v25 = (_QWORD *)v16 + v17;
      v26 = (uint64_t *)&v15[v8 + v24];
      do
      {
        v27 = *v26++;
        *v25++ = v27;
        --v23;
      }
      while (v23);
      goto LABEL_19;
    }
    v19 = (__int128 *)&v100[v94];
    v20 = v16 + 1;
    v21 = v87;
    do
    {
      v22 = *v19;
      *(v20 - 1) = *(v19 - 1);
      *v20 = v22;
      v19 += 2;
      v20 += 2;
      v21 -= 4;
    }
    while (v21);
    v17 = v87;
    if (v88 != v87)
      goto LABEL_17;
LABEL_19:
    v107 = 0;
    v108 = 0;
    v109 = 0;
    v110 = v93;
    sub_19C17C9D8((uint64_t)&v107, v18);
    v28 = v110;
    if ((int)v110 >= 1)
    {
      v29 = 0;
      v30 = v107;
      if (v110 < 4)
        goto LABEL_25;
      if ((unint64_t)((char *)v107 - (char *)v16) < 0x20)
        goto LABEL_25;
      v31 = 0;
      v29 = v110 & 0xFFFFFFFC;
      v32 = (8 * v110) & 0x7FFFFFFE0;
      do
      {
        v33 = v16[v31 / 0x10 + 1];
        v34 = (double *)&v30[v31 / 8];
        *(_OWORD *)v34 = v16[v31 / 0x10];
        *((_OWORD *)v34 + 1) = v33;
        v31 += 32;
      }
      while (v32 != v31);
      if (v29 != v28)
      {
LABEL_25:
        v35 = v28 - v29;
        v36 = v29 << 32;
        do
        {
          *(const double *)((char *)v30 + (v36 >> 29)) = *(const double *)((char *)v16 + (v36 >> 29));
          v36 += 0x100000000;
          --v35;
        }
        while (v35);
      }
    }
LABEL_27:
    v37 = sub_19C1E04F0(v14, (const double **)&v107);
    v38 = v37;
    if (v11 < v10)
    {
      *v11++ = v37;
      v7 = v91;
      v13 = v89;
      v105 = (uint64_t)v11;
      v39 = v107;
      if (!v107)
        goto LABEL_30;
LABEL_29:
      v108 = v39;
      operator delete(v39);
      goto LABEL_30;
    }
    v40 = v11 - v9;
    v41 = v40 + 1;
    if ((unint64_t)(v40 + 1) >> 61)
      sub_19C07DA0C();
    if (((char *)v10 - (char *)v9) >> 2 > v41)
      v41 = ((char *)v10 - (char *)v9) >> 2;
    if ((unint64_t)((char *)v10 - (char *)v9) >= 0x7FFFFFFFFFFFFFF8)
      v42 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v42 = v41;
    if (v42)
    {
      if (v42 >> 61)
        sub_19C07C7FC();
      v43 = operator new(8 * v42);
      v44 = (double *)&v43[8 * v40];
      *v44 = v38;
      v45 = (uint64_t)(v44 + 1);
      if (v11 != v9)
      {
LABEL_41:
        v46 = (char *)(v11 - 1) - (char *)v9;
        if (v46 < 0x168
          || &v43[(char *)v11 - (char *)v9 - 8 - (v46 & 0xFFFFFFFFFFFFFFF8)] > &v43[(char *)v11 - (char *)v9 - 8]
          || (double *)((char *)v11 - (v46 & 0xFFFFFFFFFFFFFFF8) - 8) > v11 - 1
          || (unint64_t)((char *)v9 - v43) < 0x20)
        {
          v47 = v11;
          v7 = v91;
          v13 = v89;
        }
        else
        {
          v49 = (v46 >> 3) + 1;
          v50 = 8 * (v49 & 0x3FFFFFFFFFFFFFFCLL);
          v47 = &v11[v50 / 0xFFFFFFFFFFFFFFF8];
          v44 = (double *)((char *)v44 - v50);
          v51 = &v43[8 * v40 - 16];
          v52 = v11 - 2;
          v53 = v49 & 0x3FFFFFFFFFFFFFFCLL;
          v7 = v91;
          do
          {
            v54 = *(_OWORD *)v52;
            *(v51 - 1) = *((_OWORD *)v52 - 1);
            *v51 = v54;
            v51 -= 2;
            v52 -= 4;
            v53 -= 4;
          }
          while (v53);
          v13 = v89;
          if (v49 == (v49 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_44:
            v10 = (double *)&v43[8 * v42];
            v104 = v44;
            v105 = v45;
            v106 = v10;
            if (!v9)
              goto LABEL_46;
LABEL_45:
            operator delete(v9);
            goto LABEL_46;
          }
        }
        do
        {
          v48 = *((_QWORD *)v47-- - 1);
          *((_QWORD *)v44-- - 1) = v48;
        }
        while (v47 != v9);
        goto LABEL_44;
      }
    }
    else
    {
      v43 = 0;
      v44 = (double *)(8 * v40);
      *(double *)(8 * v40) = v37;
      v45 = 8 * v40 + 8;
      if (v11 != v9)
        goto LABEL_41;
    }
    v7 = v91;
    v13 = v89;
    v10 = (double *)&v43[8 * v42];
    v104 = v44;
    v105 = v45;
    v106 = v10;
    if (v9)
      goto LABEL_45;
LABEL_46:
    v9 = v44;
    v11 = (double *)v45;
    v105 = v45;
    v39 = v107;
    if (v107)
      goto LABEL_29;
LABEL_30:
    if (v16)
      operator delete(v16);
    ++v12;
    v94 += v13;
    v8 += v13;
  }
  while (v12 != v90);
  v55 = v104;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 96);
  if (v55 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v56 = v55 + 1;
  if (v55 + 1 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v57 = *v55;
  v58 = v55;
  v59 = v55 + 1;
  do
  {
    v60 = *v59++;
    v61 = v57 < v60;
    v57 = fmax(v57, v60);
    if (v61)
      v58 = v56;
    v56 = v59;
  }
  while (v59 != v11);
  v62 = v100;
  v63 = HIDWORD(v103);
  v107 = 0;
  v108 = 0;
  v109 = 0;
  if (!HIDWORD(v103))
  {
LABEL_81:
    v74 = 0;
    LODWORD(v73) = 0;
    v64 = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    __p = 0;
    v98 = 0;
    goto LABEL_82;
  }
LABEL_65:
  if (v63 < 0)
    sub_19C07DA0C();
  v64 = operator new(8 * v63);
  v65 = (v58 - v55) * v63;
  bzero(v64, 8 * v63);
  if (v63 < 0xA || (v66 = &v62[8 * v65], (unint64_t)((char *)v64 - v66) < 0x20))
  {
    v67 = 0;
    goto LABEL_69;
  }
  v67 = v63 & 0xFFFFFFFFFFFFFFFCLL;
  v83 = (__int128 *)(v66 + 16);
  v84 = v64 + 1;
  v85 = v67;
  do
  {
    v86 = *v83;
    *(v84 - 1) = *(v83 - 1);
    *v84 = v86;
    v83 += 2;
    v84 += 2;
    v85 -= 4;
  }
  while (v85);
  if (v67 != v63)
  {
LABEL_69:
    v68 = v63 - v67;
    v69 = 8 * v67;
    v70 = (_QWORD *)v64 + v67;
    v71 = &v62[8 * v65 + v69];
    do
    {
      v72 = *(_QWORD *)v71;
      v71 += 8;
      *v70++ = v72;
      --v68;
    }
    while (v68);
  }
  __p = 0;
  *(_QWORD *)v96 = 0;
  v97 = 0;
  v98 = v63;
  sub_19C17C9D8((uint64_t)&__p, v63);
  v73 = v98;
  v74 = (char *)__p;
  if ((int)v98 >= 1)
  {
    v75 = 0;
    if (v98 < 4)
      goto LABEL_77;
    if ((unint64_t)((_BYTE *)__p - (_BYTE *)v64) < 0x20)
      goto LABEL_77;
    v76 = 0;
    v75 = v98 & 0xFFFFFFFC;
    v77 = (8 * v98) & 0x7FFFFFFE0;
    do
    {
      v78 = v64[v76 / 0x10 + 1];
      v79 = &v74[v76];
      *(_OWORD *)v79 = v64[v76 / 0x10];
      *((_OWORD *)v79 + 1) = v78;
      v76 += 32;
    }
    while (v77 != v76);
    if (v75 != v73)
    {
LABEL_77:
      v80 = v73 - v75;
      v81 = v75 << 32;
      do
      {
        *(_QWORD *)&v74[v81 >> 29] = *(_QWORD *)((char *)v64 + (v81 >> 29));
        v81 += 0x100000000;
        --v80;
      }
      while (v80);
    }
  }
LABEL_82:
  v82 = *(_QWORD *)v58;
  v99 = *(_QWORD *)v58;
  if ((void **)(a1 + 16) != &__p)
  {
    sub_19C11EAD0((_QWORD *)(a1 + 16), v74, *(char **)v96, (uint64_t)(*(_QWORD *)v96 - (_QWORD)v74) >> 3);
    LODWORD(v73) = v98;
    v82 = v99;
    v74 = (char *)__p;
  }
  *(_DWORD *)(a1 + 40) = v73;
  *(_QWORD *)(a1 + 48) = v82;
  if (v74)
  {
    *(_QWORD *)v96 = v74;
    operator delete(v74);
  }
  if (v64)
    operator delete(v64);
  if (v62)
    operator delete(v62);
  if (v55)
  {
    v105 = (uint64_t)v55;
    operator delete(v55);
  }
}

void sub_19C1E0434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  void *v28;
  void *v29;

  if (__p)
    operator delete(__p);
  if (v28)
    operator delete(v28);
  if (v29)
    operator delete(v29);
  if (a27)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

double sub_19C1E04F0(uint64_t a1, const double **a2)
{
  double v3;
  double v4;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 96))
  {
    sub_19C1E05D0(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 232), 1, &__C, (int)__N);
    v3 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 264), 1, &__C, *(int *)(a1 + 288));
    v4 = __C;
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v4 + v3;
  }
  else
  {
    __A[0] = 0;
    vDSP_meanvD(*(const double **)(a1 + 264), 1, (double *)__A, *(int *)(a1 + 288));
    return *(double *)__A;
  }
}

void sub_19C1E05B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1E05D0(uint64_t a1@<X0>, const double **a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  signed int v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  double v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  char *v25;
  void *__p;
  char *v28;
  char *v29;
  signed int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = *(_DWORD *)(a1 + 96);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  *(_DWORD *)(a3 + 24) = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  if (v3)
  {
    if (v3 < 0)
      sub_19C07DA0C();
    v5 = v3;
    v6 = (char *)operator new(8 * v3);
    bzero(v6, 8 * v3);
    v7 = 0;
    v8 = 0;
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = &v6[8 * v3];
    *(_QWORD *)(a3 + 16) = &v6[8 * v3];
    *(_DWORD *)(a3 + 24) = v3;
    v25 = v6;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 72);
      v10 = *(_DWORD *)(a1 + 100);
      v31 = 0;
      v32 = 0;
      v33 = 0;
      if (!v10)
      {
        v11 = 0;
        v28 = 0;
        v29 = 0;
        __p = 0;
        v30 = 0;
        goto LABEL_14;
      }
      if (v10 < 0)
        sub_19C07DA0C();
      v11 = operator new(8 * v10);
      bzero(v11, 8 * v10);
      if (v10 >= 8 && (unint64_t)v11 - v9 - 8 * v8 * v10 >= 0x20)
      {
        v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
        v20 = (__int128 *)(v9 + v7 * v10 + 16);
        v21 = v11 + 1;
        v22 = v12;
        do
        {
          v23 = *v20;
          *(v21 - 1) = *(v20 - 1);
          *v21 = v23;
          v20 += 2;
          v21 += 2;
          v22 -= 4;
        }
        while (v22);
        if (v12 == v10)
          goto LABEL_12;
      }
      else
      {
        v12 = 0;
      }
      v13 = v10 - v12;
      v14 = 8 * v12;
      v15 = (_QWORD *)v11 + v12;
      v16 = (uint64_t *)(v9 + v14 + v7 * v10);
      do
      {
        v17 = *v16++;
        *v15++ = v17;
        --v13;
      }
      while (v13);
LABEL_12:
      __p = 0;
      v28 = 0;
      v30 = 0;
      v29 = 0;
      __p = operator new(8 * v10);
      v28 = (char *)__p + 8 * v10;
      v29 = v28;
      v30 = v10;
      memcpy(__p, v11, 8 * v10);
      v6 = v25;
LABEL_14:
      v18 = *(double *)(a1 + 24);
      v19 = sub_19C1E0878(a1 + 8, (uint64_t)&__p, a2);
      *(long double *)&v6[8 * v8] = exp(v19 * -0.5) * v18;
      if (__p)
      {
        v28 = (char *)__p;
        operator delete(__p);
      }
      if (v11)
        operator delete(v11);
      ++v8;
      v7 += 8;
      if (v8 == v5)
        return;
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
}

void sub_19C1E0804(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1E082C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14)
{
  void *v14;

  if (__p)
  {
    operator delete(__p);
    if (!v14)
    {
LABEL_3:
      *(_QWORD *)(a10 + 8) = a11;
      operator delete(a11);
      _Unwind_Resume(a1);
    }
  }
  else if (!v14)
  {
    goto LABEL_3;
  }
  operator delete(v14);
  *(_QWORD *)(a10 + 8) = a11;
  operator delete(a11);
  _Unwind_Resume(a1);
}

double sub_19C1E0878(uint64_t a1, uint64_t a2, const double **a3)
{
  uint64_t v6;
  const void *v7;
  int64_t v8;
  char *v9;
  char *v10;
  void *v11;
  double v12;
  double v13;
  double v14;

  v7 = *(const void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = v6 - *(_QWORD *)a2;
  if (v6 == *(_QWORD *)a2)
  {
    v10 = 0;
    v9 = 0;
  }
  else
  {
    if (v8 < 0)
      sub_19C07DA0C();
    v9 = (char *)operator new(v6 - *(_QWORD *)a2);
    v10 = &v9[8 * (v8 >> 3)];
    memcpy(v9, v7, v8);
  }
  vDSP_vsubD(*a3, 1, (const double *)v9, 1, (double *)v9, 1, *(int *)(a2 + 24));
  if (v10 == v9)
  {
    v11 = 0;
  }
  else
  {
    if (v10 - v9 < 0)
      sub_19C07DA0C();
    v11 = operator new(v10 - v9);
    memcpy(v11, v9, v10 - v9);
  }
  cblas_dnrm2_NEWLAPACK();
  v13 = v12;
  v14 = *(double *)(a1 + 24);
  if (v11)
    operator delete(v11);
  if (v9)
    operator delete(v9);
  return v13 * v13 / (v14 * v14);
}

void sub_19C1E09CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;

  if (v15)
    operator delete(v15);
  if (v14)
    operator delete(v14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1E0A24(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void **v6;
  void **v7;
  void *v8;
  void **v9;
  void **v10;
  void *v11;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_19C17AF88(&v13, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D215B8;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v13, (uint64_t)v14, 0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (_BYTE *)v13) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v17, 0xCCCCCCCCCCCCCCCDLL * (((char *)v17 - (_BYTE *)__p) >> 3));
  v6 = (void **)__p;
  if (__p)
  {
    v7 = v17;
    v8 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v7 - 17) < 0)
          operator delete(*(v7 - 5));
        v7 -= 5;
      }
      while (v7 != v6);
      v8 = __p;
    }
    v17 = v6;
    operator delete(v8);
  }
  v9 = (void **)v13;
  if (v13)
  {
    v10 = v14;
    v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 25) < 0)
          operator delete(*(v10 - 6));
        v10 -= 6;
      }
      while (v10 != v9);
      v11 = v13;
    }
    v14 = v9;
    operator delete(v11);
  }
  *(_QWORD *)a1 = &unk_1E3D213A8;
  *(_DWORD *)(a1 + 64) = 5;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_19C1E0BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;

  v11 = v10;
  if (*v11)
  {
    sub_19C2563D4(v9, *v11);
    sub_19C17A75C(&a9);
    _Unwind_Resume(a1);
  }
  sub_19C17A75C(&a9);
  _Unwind_Resume(a1);
}

void sub_19C1E0C04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    sub_19C25623C((uint64_t)&a9, a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_19C1E0C20(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;

  *a1 = &unk_1E3D213A8;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  return sub_19C1E1248(a1);
}

void sub_19C1E0C88(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;
  _QWORD *v5;

  *a1 = &unk_1E3D213A8;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  v5 = sub_19C1E1248(a1);
  operator delete(v5);
}

void sub_19C1E0CF4(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  double *v15;
  double *v16;
  double *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v29;
  double v30;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD **v33;
  BOOL v34;
  uint64_t *v35;
  char **v36;
  char **v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40[4];
  uint64_t *v41;
  double *__A;
  double *v43;
  void *__p;
  char *v45;
  char *v46[3];
  char *v47[3];
  uint64_t *v48[12];
  char v49[8];
  _QWORD **v50;
  _QWORD *v51[2];
  uint64_t *v52;
  char **v53;
  double __C[2];

  sub_19C1E1310(a1);
  v6 = *(_QWORD *)(a1 + 72);
  if (v6 == *(_QWORD *)(a1 + 80))
  {
    v39 = a3;
    sub_19C1CBA2C(a2, &v52);
    sub_19C1E15A4(a2, (uint64_t)v49);
    v7 = v50;
    if (v50 != v51)
    {
      do
      {
        v8 = *(_QWORD *)((char *)v7 + 28);
        sub_19C1C1840(v48, &v52[12 * (int)v8]);
        if (SHIDWORD(v8) >= 1)
        {
          v9 = 0;
          v10 = HIDWORD(v8) & ~(v8 >> 63);
          do
          {
            sub_19C1E16E0(a1, (uint64_t *)v48, (uint64_t **)&__A);
            sub_19C17A814((char **)v48, (uint64_t)&__A);
            sub_19C098FBC((uint64_t)v47, v47[1]);
            sub_19C098FBC((uint64_t)v46, v46[1]);
            v11 = (char *)__p;
            if (__p)
            {
              v12 = v45;
              v13 = __p;
              if (v45 != __p)
              {
                do
                {
                  v14 = (void *)*((_QWORD *)v12 - 4);
                  if (v14)
                  {
                    *((_QWORD *)v12 - 3) = v14;
                    operator delete(v14);
                  }
                  if (*(v12 - 33) < 0)
                    operator delete(*((void **)v12 - 7));
                  v12 -= 56;
                }
                while (v12 != v11);
                v13 = __p;
              }
              v45 = v11;
              operator delete(v13);
            }
            v15 = __A;
            if (*(double *)&__A != 0.0)
            {
              v16 = v43;
              v17 = __A;
              if (v43 != __A)
              {
                do
                {
                  v18 = (void *)*((_QWORD *)v16 - 4);
                  if (v18)
                  {
                    *((_QWORD *)v16 - 3) = v18;
                    operator delete(v18);
                  }
                  if (*((char *)v16 - 33) < 0)
                    operator delete(*((void **)v16 - 7));
                  v16 -= 7;
                }
                while (v16 != v15);
                v17 = __A;
              }
              v43 = v15;
              operator delete(v17);
            }
            v41 = 0;
            v19 = *(_QWORD *)(a1 + 8);
            sub_19C1CBD8C((__int128 **)v48, (uint64_t)v40);
            v20 = *(_QWORD *)(v19 + 8);
            if (*(_DWORD *)(v20 + 96))
            {
              sub_19C1E05D0(*(_QWORD *)(v19 + 8), (const double **)v40, (uint64_t)&__A);
              __C[0] = 0.0;
              vDSP_dotprD(__A, 1, *(const double **)(v20 + 232), 1, __C, (int)__p);
              v21 = __C[0];
              __C[0] = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 264), 1, __C, *(int *)(v20 + 288));
              v22 = __C[0];
              sub_19C1E1B98(v20, (const double **)v40, (uint64_t)&__A);
              v24 = v23;
              v25 = *(double *)(v20 + 16);
              if (*(double *)&__A != 0.0)
              {
                v43 = __A;
                operator delete(__A);
              }
              v26 = v22 + v21;
              v27 = v25 + v24;
            }
            else
            {
              *(double *)&__A = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 264), 1, (double *)&__A, *(int *)(v20 + 288));
              v26 = *(double *)&__A;
              v27 = sub_19C1E1ACC(v20, (const double **)v40);
            }
            v28 = sqrt(v27);
            if (v28 < 0.00000001 || (v29 = *(_DWORD *)(*(_QWORD *)(v19 + 8) + 96), v29 <= 0))
            {
              v30 = (*(double (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            }
            else
            {
              if (*(_DWORD *)(v19 + 56) != v29)
                (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
              (**(void (***)(uint64_t, double, double))v19)(v19, v26, v28);
            }
            v31 = *(uint64_t **)&v30;
            if (v40[0])
            {
              v40[1] = v40[0];
              operator delete(v40[0]);
            }
            v41 = v31;
            sub_19C1CC134((int *)(a1 + 64), (uint64_t *)v48, &v41);
            ++v9;
          }
          while (v10 != v9);
        }
        sub_19C17B808((char **)v48);
        v32 = (_QWORD *)v7[1];
        if (v32)
        {
          do
          {
            v33 = (_QWORD **)v32;
            v32 = (_QWORD *)*v32;
          }
          while (v32);
        }
        else
        {
          do
          {
            v33 = (_QWORD **)v7[2];
            v34 = *v33 == v7;
            v7 = v33;
          }
          while (!v34);
        }
        v7 = v33;
      }
      while (v33 != v51);
    }
    v35 = *(uint64_t **)(a1 + 72);
    sub_19C1C1840((uint64_t **)v39, v35);
    *(_QWORD *)(v39 + 96) = v35[12];
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    sub_19C07C924((uint64_t)&v50, v51[0]);
    v36 = (char **)v52;
    if (v52)
    {
      v37 = v53;
      v38 = v52;
      if (v53 != (char **)v52)
      {
        do
          v37 = sub_19C17B808(v37 - 12);
        while (v37 != v36);
        v38 = v52;
      }
      v53 = v36;
      operator delete(v38);
    }
  }
  else
  {
    sub_19C1C1840((uint64_t **)a3, *(uint64_t **)(a1 + 72));
    *(_QWORD *)(a3 + 96) = *(_QWORD *)(v6 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
  }
}

void sub_19C1E1164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  char **v28;
  uint64_t v29;

  sub_19C17B808(v28);
  sub_19C07C924(a10, *(_QWORD **)(v29 - 184));
  sub_19C17AA64((void **)(v29 - 168));
  _Unwind_Resume(a1);
}

void sub_19C1E11FC(char *a1@<X8>)
{
  a1[23] = 17;
  strcpy(a1, "genetic_optimizer");
}

void sub_19C1E1220(char *a1@<X8>)
{
  a1[23] = 21;
  strcpy(a1, "acquisition_optimizer");
}

_QWORD *sub_19C1E1248(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *a1 = &unk_1E3D215B8;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 17) < 0)
          operator delete(*(void **)(v3 - 40));
        v3 -= 40;
      }
      while (v3 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  v5 = a1[2];
  if (v5)
  {
    v6 = a1[3];
    v7 = (void *)a1[2];
    if (v6 != v5)
    {
      do
      {
        if (*(char *)(v6 - 25) < 0)
          operator delete(*(void **)(v6 - 48));
        v6 -= 48;
      }
      while (v6 != v5);
      v7 = (void *)a1[2];
    }
    a1[3] = v5;
    operator delete(v7);
  }
  return a1;
}

void sub_19C1E1310(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  uint64_t *v11;
  uint64_t *v12;
  char **v13;
  uint64_t *v14;
  void *__p[4];
  uint64_t *v16;
  uint64_t *v17[13];
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;

  v18 = 5;
  v20 = 0;
  v21 = 0;
  v19 = 0;
  v3 = *(_QWORD *)(a1 + 72);
  v2 = (uint64_t *)(a1 + 72);
  if (v3 == *(_QWORD *)(a1 + 80))
  {
    v12 = 0;
    *(_DWORD *)(a1 + 64) = 5;
    if ((int *)(a1 + 64) == &v18)
      goto LABEL_18;
    goto LABEL_17;
  }
  do
  {
    sub_19C1C1840(v17, (uint64_t *)v3);
    v17[12] = *(uint64_t **)(v3 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)__p, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    v16 = 0;
    v4 = *(_QWORD *)(a1 + 8);
    sub_19C1CBD8C((__int128 **)v17, (uint64_t)__p);
    v5.n128_f64[0] = sub_19C1E19C4(*(_QWORD *)(v4 + 8), (const double **)__p);
    v7 = sqrt(v6);
    if (v7 < 0.00000001 || (v8 = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 96), v8 <= 0))
    {
      v10 = (*(double (**)(uint64_t, __n128))(*(_QWORD *)v4 + 8))(v4, v5);
    }
    else
    {
      v9 = v5.n128_f64[0];
      if (*(_DWORD *)(v4 + 56) != v8)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      (**(void (***)(uint64_t, double, double))v4)(v4, v9, v7);
    }
    *(double *)&v11 = v10;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    v16 = v11;
    if (*(double *)&v11 > (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8)))
      sub_19C1CC134(&v18, (uint64_t *)v17, &v16);
    sub_19C17B808((char **)v17);
    v3 = *(_QWORD *)(a1 + 72);
  }
  while (v3 != *(_QWORD *)(a1 + 80));
  v12 = v19;
  *(_DWORD *)(a1 + 64) = v18;
  if ((int *)(a1 + 64) != &v18)
  {
LABEL_17:
    sub_19C1CC414(v2, v12, v20, 0x4EC4EC4EC4EC4EC5 * (v20 - v12));
    v12 = v19;
  }
LABEL_18:
  if (v12)
  {
    v13 = (char **)v20;
    v14 = v12;
    if (v20 != v12)
    {
      do
        v13 = sub_19C17B808(v13 - 13);
      while (v13 != (char **)v12);
      v14 = v19;
    }
    v20 = v12;
    operator delete(v14);
  }
}

void sub_19C1E1540(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_19C1CB740(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1E1554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  sub_19C17B808((char **)va);
  sub_19C1CB740(v7 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1E1578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v15;

  if (__p)
    operator delete(__p);
  sub_19C17B808(&a15);
  sub_19C1CB740(v15 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1E15A4(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  int v5;
  void *__p[3];
  _QWORD v7[313];
  std::random_device v8;
  double *v9[3];

  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = a2 + 16;
  *(_QWORD *)(a2 + 24) = 0;
  sub_19C1CCB54(a1, __p);
  sub_19C17A140(v7, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v3 = 50;
  do
  {
    v5 = sub_19C1CCF6C((uint64_t)v9, (uint64_t)v7, v9);
    v4 = sub_19C1CCC40((int *)a2, &v5);
    ++*(_DWORD *)v4;
    --v3;
  }
  while (v3);
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
  std::random_device::~random_device(&v8);
}

void sub_19C1E1680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  _QWORD **v15;

  if (__p)
  {
    operator delete(__p);
    sub_19C07C924(v14, *v15);
    _Unwind_Resume(a1);
  }
  sub_19C07C924(v14, *v15);
  _Unwind_Resume(a1);
}

void sub_19C1E16E0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  void *v6[4];
  void *__p[4];
  void *v8[4];
  _OWORD v9[2];

  sub_19C1C1840(a3, a2);
  sub_19C1CD184((__int128 **)a2, (uint64_t)v8);
  sub_19C1E186C(a1, (uint64_t *)v8, v9);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v6);
  sub_19C1E1918(a1, (uint64_t *)v6, __p);
  sub_19C1CD7E0((uint64_t *)a3, (uint64_t *)v9);
  sub_19C1CD99C((uint64_t)a3, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v6[0])
  {
    v6[1] = v6[0];
    operator delete(v6[0]);
  }
  if (*(_QWORD *)&v9[0])
  {
    *((_QWORD *)&v9[0] + 1) = *(_QWORD *)&v9[0];
    operator delete(*(void **)&v9[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
}

void sub_19C1E17AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  char **v18;
  uint64_t v19;
  void *v21;
  void *v22;

  if (__p)
  {
    operator delete(__p);
    v21 = *(void **)(v19 - 64);
    if (!v21)
    {
LABEL_3:
      v22 = a17;
      if (!a17)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v21 = *(void **)(v19 - 64);
    if (!v21)
      goto LABEL_3;
  }
  *(_QWORD *)(v19 - 56) = v21;
  operator delete(v21);
  v22 = a17;
  if (!a17)
  {
LABEL_4:
    sub_19C17B808(v18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(v22);
  sub_19C17B808(v18);
  _Unwind_Resume(a1);
}

double sub_19C1E186C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = (uint64_t *)(a1 + 16);
  if (sub_19C178A44((uint64_t *)(a1 + 16)))
  {
    sub_19C178B08(v5, (uint64_t *)v7);
    sub_19C239578(a2, (uint64_t)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1E1904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C1E1918@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = a1 + 16;
  if (sub_19C179558(a1 + 16))
  {
    sub_19C17961C(v5, (uint64_t *)v7);
    sub_19C23A200(a2, (uint64_t *)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1E19B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C1E19C4(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 96))
  {
    sub_19C1E05D0(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 232), 1, &__C, (int)__N);
    v4 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 264), 1, &__C, *(int *)(a1 + 288));
    v5 = __C;
    sub_19C1E1B98(a1, a2, (uint64_t)__A);
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v5 + v4;
  }
  else
  {
    v6 = sub_19C1E04F0(a1, a2);
    sub_19C1E1ACC(a1, a2);
  }
  return v6;
}

void sub_19C1E1AAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_19C1E1ACC(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double v8;
  double v9;
  void *__p[4];

  if (*(_DWORD *)(a1 + 96))
  {
    sub_19C1E05D0(a1, a2, (uint64_t)__p);
    sub_19C1E1B98(a1, a2, (uint64_t)__p);
    v5 = v4;
    v6 = *(double *)(a1 + 16);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    return v6 + v5;
  }
  else
  {
    v8 = *(double *)(a1 + 24);
    v9 = sub_19C1E0878(a1 + 8, (uint64_t)a2, a2);
    return *(double *)(a1 + 16) + exp(v9 * -0.5) * v8;
  }
}

void sub_19C1E1B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1E1B98(uint64_t a1, const double **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  _OWORD *v20;
  unsigned int v21;
  double v22;
  void *__p[3];
  int v24;
  double *__B[3];
  vDSP_Length __N;

  sub_19C1CE734(a1 + 168, (uint64_t)__p);
  v6 = *(unsigned int *)(a1 + 192);
  if ((int)v6 >= 1)
  {
    v7 = 0;
    v8 = *(_DWORD *)(a1 + 196);
    v9 = v24;
    v10 = 1;
    v11 = -1;
    v12 = __p[0];
    do
    {
      if (v8 <= v10)
        v13 = v10;
      else
        v13 = v8;
      v14 = v7 + 1;
      if ((int)v7 + 1 >= v8)
        goto LABEL_3;
      v15 = 0;
      v16 = v13 + v11;
      v17 = (int)v7 * (uint64_t)v9;
      if ((v13 + v11) < 4)
      {
        v18 = v7 + 1;
      }
      else
      {
        v18 = v7 + 1;
        if (v13 - (int)v7 + v10 - 2 >= v10)
        {
          v19 = 0;
          v15 = v16 & 0xFFFFFFFC;
          v18 = v14 + (v16 & 0xFFFFFFFC);
          do
          {
            v20 = &v12[v17 + v10 + v19];
            *v20 = 0uLL;
            v20[1] = 0uLL;
            v19 += 4;
          }
          while ((v16 & 0xFFFFFFFC) != v19);
          if (v16 == v15)
            goto LABEL_3;
        }
      }
      v21 = v13 - v15;
      do
      {
        v12[v17 + v18] = 0;
        v18 = ++v15 + v14;
        --v21;
      }
      while (v10 != v21);
LABEL_3:
      ++v7;
      ++v10;
      --v11;
    }
    while (v7 != v6);
  }
  sub_19C1CE5B4((uint64_t)__p, a3, (uint64_t)__B);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v22 = sub_19C1E0878(a1 + 8, (uint64_t)a2, a2);
  __p[0] = 0;
  vDSP_dotprD(__B[0], 1, __B[0], 1, (double *)__p, (int)__N);
  if (__B[0])
  {
    __B[1] = __B[0];
    operator delete(__B[0]);
  }
  exp(v22 * -0.5);
}

void sub_19C1E1D5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1E1D8C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  void *v32[4];
  void *v33[4];
  void *v34;
  void **v35;
  uint64_t v36;
  void *__p;
  void **v38;
  uint64_t v39;

  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_19C17AF88(&v34, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v38 = 0;
  v39 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D215B8;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v34, (uint64_t)v35, 0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (_BYTE *)v34) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v38, 0xCCCCCCCCCCCCCCCDLL * (((char *)v38 - (_BYTE *)__p) >> 3));
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v38;
    v10 = __p;
    if (v38 != __p)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v38 = v8;
    operator delete(v10);
  }
  v11 = (void **)v34;
  if (v34)
  {
    v12 = v35;
    v13 = v34;
    if (v35 != v34)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v34;
    }
    v35 = v11;
    operator delete(v13);
  }
  *(_QWORD *)a1 = &unk_1E3D211C8;
  v14 = sub_19C178A44(a3);
  sub_19C1CF858(a1 + 64, v14);
  sub_19C1C81AC(a1 + 184);
  sub_19C178B08(a3, (uint64_t *)v32);
  sub_19C1D0468(a1 + 64, (uint64_t *)v32);
  sub_19C1D0594(a1 + 64, (uint64_t *)v33);
  if (v33[0])
  {
    v33[1] = v33[0];
    operator delete(v33[0]);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  if ((a4 & 0xFF00000000) != 0)
  {
    v15 = 0;
    *(_DWORD *)(a1 + 7776) = a4;
    v16 = 1;
    v17 = a4;
    do
    {
      v18 = 1812433253 * (v17 ^ (v17 >> 30));
      v17 = v18 + v16;
      *(_DWORD *)(a1 + 7780 + 4 * v15) = v15 + v18 + 1;
      ++v16;
      ++v15;
    }
    while (v15 != 623);
    *(_QWORD *)(a1 + 10272) = 0;
    *(_DWORD *)(a1 + 184) = a4;
    v19 = 1;
    v20 = 47;
    v21 = a4;
    do
    {
      v22 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v22 + v19;
      *(_DWORD *)(a1 + 4 * v20) = v20 + v22 - 46;
      ++v19;
      ++v20;
    }
    while (v20 != 670);
    v23 = 0;
    *(_QWORD *)(a1 + 2680) = 0;
    *(_DWORD *)(a1 + 2712) = a4;
    v24 = 1;
    v25 = a4;
    do
    {
      v26 = 1812433253 * (v25 ^ (v25 >> 30));
      v25 = v26 + v24;
      *(_DWORD *)(a1 + 2716 + 4 * v23) = v23 + v26 + 1;
      ++v24;
      ++v23;
    }
    while (v23 != 623);
    v27 = 0;
    *(_QWORD *)(a1 + 5208) = 0;
    *(_DWORD *)(a1 + 5232) = a4;
    v28 = 1;
    v29 = a4;
    do
    {
      v30 = 1812433253 * (v29 ^ (v29 >> 30));
      v29 = v30 + v28;
      *(_DWORD *)(a1 + 5236 + 4 * v27) = v27 + v30 + 1;
      ++v28;
      ++v27;
    }
    while (v27 != 623);
    *(_QWORD *)(a1 + 7728) = 0;
    sub_19C23B684();
  }
  return a1;
}

void sub_19C1E20A8(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  sub_19C1CF8E8(v2);
  sub_19C1E1248(v1);
  _Unwind_Resume(a1);
}

void sub_19C1E213C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_19C1E1248(v1);
  _Unwind_Resume(a1);
}

void sub_19C1E2154(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_19C1E266C(a1);
  operator delete(v1);
}

void sub_19C1E2168(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  double v6;
  void **v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t **v13;
  uint64_t **i;
  uint64_t **v15;
  char **v16;
  uint64_t **v17;
  char **v18;
  char **v19;
  void *v20;
  double v21;
  double v22;
  BOOL v23;
  char v24;
  __int128 **v25;
  char **v26;
  char *v27;
  void *__p;
  char **v29;
  uint64_t *v30[12];
  _OWORD v31[3];
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[2];
  double v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  __int128 **v43;
  char *v44;
  uint64_t **v45;
  uint64_t **v46;

  v32 = 0u;
  memset(v31, 0, sizeof(v31));
  *(_QWORD *)&v32 = (char *)&v32 + 8;
  v35[0] = 0;
  v35[1] = 0;
  v33 = 0;
  v34 = v35;
  v6 = (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8));
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)v31);
  *(double *)(a3 + 96) = v6;
  sub_19C17B808((char **)v31);
  v38 = 0;
  v39 = 0;
  v37 = 0;
  sub_19C17AF88(&v37, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 4));
  v40 = 0;
  v41 = 0;
  v42 = 0;
  sub_19C17B16C(&v40, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 3));
  sub_19C17A144((uint64_t *)&v37, a1 + 184, 5, (char **)&v43);
  v7 = v40;
  if (v40)
  {
    v8 = v41;
    v9 = v40;
    if (v41 != v40)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v40;
    }
    v41 = v7;
    operator delete(v9);
  }
  v10 = (uint64_t)v37;
  if (v37)
  {
    v11 = v38;
    v12 = v37;
    if ((void *)v38 != v37)
    {
      do
      {
        if (*(char *)(v11 - 25) < 0)
          operator delete(*(void **)(v11 - 48));
        v11 -= 48;
      }
      while (v11 != v10);
      v12 = v37;
    }
    v38 = v10;
    operator delete(v12);
  }
  sub_19C1E2714(a1, v43, (uint64_t)v31);
  sub_19C1C9C8C(a3, (uint64_t)v31);
  *(double *)(a3 + 96) = v36;
  sub_19C17B808((char **)v31);
  sub_19C1E2714(a1, v43 + 12, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1E2714(a1, v43 + 24, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1E2714(a1, v43 + 36, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1E2714(a1, v43 + 48, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1CCA84((uint64_t ***)&__p, a2);
  sub_19C1CCA84(&v45, (uint64_t **)&__p);
  v13 = v45;
  if (v45 != v46)
  {
    for (i = v45 + 13; i != v46; i += 13)
    {
      if (*((double *)v13 + 12) < *((double *)i + 12))
        v13 = i;
    }
  }
  sub_19C1C1840((uint64_t **)v31, (uint64_t *)v13);
  v36 = *((double *)v13 + 12);
  v15 = v45;
  if (v45)
  {
    v16 = (char **)v46;
    v17 = v45;
    if (v46 != v45)
    {
      do
        v16 = sub_19C17B808(v16 - 13);
      while (v16 != (char **)v15);
      v17 = v45;
    }
    v46 = v15;
    operator delete(v17);
  }
  sub_19C1C5D14(v30, (uint64_t)v31);
  sub_19C17B808((char **)v31);
  v18 = (char **)__p;
  if (__p)
  {
    v19 = v29;
    v20 = __p;
    if (v29 != __p)
    {
      do
        v19 = sub_19C17B808(v19 - 13);
      while (v19 != v18);
      v20 = __p;
    }
    v29 = v18;
    operator delete(v20);
  }
  sub_19C1E2714(a1, (__int128 **)v30, (uint64_t)v31);
  v21 = v36;
  v22 = *(double *)(a3 + 96);
  v23 = sub_19C1D16FC((uint64_t *)v31, v30);
  v24 = v21 <= v22 || v23;
  if ((v24 & 1) == 0)
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C17B808((char **)v30);
  v25 = v43;
  if (v43)
  {
    v26 = (char **)v44;
    v27 = (char *)v43;
    if (v44 != (char *)v43)
    {
      do
        v26 = sub_19C17B808(v26 - 12);
      while (v26 != (char **)v25);
      v27 = (char *)v43;
    }
    v44 = (char *)v25;
    operator delete(v27);
  }
}

void sub_19C1E2594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  char **v5;
  uint64_t v6;
  char *v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, char *);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  sub_19C17B808((char **)va1);
  sub_19C17B808((char **)va);
  sub_19C17AA64((void **)(v6 - 112));
  sub_19C17B808(v5);
  _Unwind_Resume(a1);
}

void sub_19C1E264C(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "direct_optimizer");
}

_QWORD *sub_19C1E266C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = &unk_1E3D211C8;
  std::random_device::~random_device((std::random_device *)(a1 + 10280));
  std::random_device::~random_device((std::random_device *)(a1 + 7736));
  std::random_device::~random_device((std::random_device *)(a1 + 5216));
  std::random_device::~random_device((std::random_device *)(a1 + 2688));
  *(_QWORD *)(a1 + 64) = &unk_1E3D21150;
  sub_19C23AA14(*(_QWORD *)(a1 + 72));
  v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(_QWORD *)(a1 + 136) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 104);
  if (v3)
  {
    *(_QWORD *)(a1 + 112) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 80);
  if (v4)
  {
    *(_QWORD *)(a1 + 88) = v4;
    operator delete(v4);
  }
  return sub_19C1E1248((_QWORD *)a1);
}

void sub_19C1E2714(uint64_t a1@<X0>, __int128 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float64x2_t *v9;
  char *v10;
  uint64_t v11;
  float64x2_t *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  int64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  int v25;
  double v26;
  double v27;
  void *v28[3];
  unsigned int v29;
  void *v30;
  char *v31;
  char *v32;
  int v33;
  void *v34;
  void *v35;
  void *__p[12];
  void *v37[4];
  _QWORD v38[2];

  v38[0] = a1;
  v38[1] = a2;
  v6 = a1 + 64;
  sub_19C1CD184(a2, (uint64_t)__p);
  sub_19C1E2A98(v6, (uint64_t)v38, (uint64_t *)__p, (uint64_t)v37);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_19C1CD508((uint64_t)a2, (uint64_t)&v34);
  sub_19C1C1840((uint64_t **)__p, (uint64_t *)a2);
  sub_19C1CD7E0((uint64_t *)__p, (uint64_t *)v37);
  sub_19C1CD99C((uint64_t)__p, (uint64_t *)&v34);
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  v7 = *(_QWORD *)(a1 + 8);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v28);
  v8 = v29;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  if (!v29)
  {
    v33 = 0;
    goto LABEL_15;
  }
  if ((v29 & 0x80000000) != 0)
    sub_19C07DA0C();
  v9 = (float64x2_t *)operator new(8 * (int)v29);
  v30 = v9;
  v32 = (char *)&v9->f64[(int)v8];
  bzero(v9, 8 * (int)v8);
  v31 = (char *)&v9->f64[(int)v8];
  v33 = v8;
  v10 = (char *)v28[0];
  if (v8 < 8)
  {
    v11 = 0;
LABEL_13:
    v20 = v8 - v11;
    v21 = v11 << 32;
    do
    {
      *(double *)((char *)v9->f64 + (v21 >> 29)) = (double)*(int *)&v10[v21 >> 30];
      v21 += 0x100000000;
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
  v11 = v8 & 0xFFFFFFF8;
  v12 = v9 + 2;
  v13 = (char *)v28[0] + 16;
  v14 = v11;
  do
  {
    v15 = *((_OWORD *)v13 - 1);
    v16.i64[0] = (int)v15;
    v16.i64[1] = SDWORD1(v15);
    v17 = vcvtq_f64_s64(v16);
    v16.i64[0] = SDWORD2(v15);
    v16.i64[1] = SHIDWORD(v15);
    v18 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*(_OWORD *)v13;
    v16.i64[1] = (int)HIDWORD(*(_QWORD *)v13);
    v19 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*((_QWORD *)v13 + 1);
    v16.i64[1] = (int)HIDWORD(*(_OWORD *)v13);
    v12[-2] = v17;
    v12[-1] = v18;
    *v12 = v19;
    v12[1] = vcvtq_f64_s64(v16);
    v12 += 4;
    v13 += 32;
    v14 -= 8;
  }
  while (v14);
  if (v11 != v8)
    goto LABEL_13;
LABEL_15:
  sub_19C1CEDDC((uint64_t)v37, (uint64_t)&v30, (uint64_t)&v34);
  v22 = sub_19C1E19C4(*(_QWORD *)(v7 + 8), (const double **)&v34);
  v24 = sqrt(v23);
  if (v24 < 0.00000001 || (v25 = *(_DWORD *)(*(_QWORD *)(v7 + 8) + 96), v25 <= 0))
  {
    v26 = (*(double (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  else
  {
    if (*(_DWORD *)(v7 + 56) != v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    (**(void (***)(uint64_t, double, double))v7)(v7, v22, v24);
  }
  v27 = v26;
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)__p);
  *(double *)(a3 + 96) = v27;
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  if (v30)
  {
    v31 = (char *)v30;
    operator delete(v30);
  }
  if (v28[0])
  {
    v28[1] = v28[0];
    operator delete(v28[0]);
  }
  sub_19C17B808((char **)__p);
  if (v37[0])
  {
    v37[1] = v37[0];
    operator delete(v37[0]);
  }
}

void sub_19C1E29C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v24;
  void *v25;

  if (a13)
  {
    operator delete(a13);
    v24 = __p;
    if (!__p)
    {
LABEL_4:
      sub_19C17B808((char **)&a21);
      v25 = *(void **)(v22 - 128);
      if (v25)
      {
        *(_QWORD *)(v22 - 120) = v25;
        operator delete(v25);
      }
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v24 = __p;
    if (!__p)
      goto LABEL_4;
  }
  operator delete(v24);
  goto LABEL_4;
}

void sub_19C1E2A98(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1E2FE8;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1E2EE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1E2CECLL);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

void sub_19C1E2FE8(uint64_t **a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  void *__p;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v18 = 0;
  v19 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    __p = 0;
    v18 = 0;
    v19 = 0;
    v20 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  __p = v8;
  v18 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v19 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v20 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1E31B8(a3, (uint64_t)&__p);
    if (__p)
    {
      v18 = (char *)__p;
      operator delete(__p);
    }
  }
  else
  {
    sub_19C1E31B8(a3, (uint64_t)&__p);
    __break(1u);
  }
}

void sub_19C1E317C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1E319C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

uint64_t sub_19C1E31B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  float64x2_t *v5;
  char *v6;
  uint64_t v7;
  float64x2_t *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  int64x2_t v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  int v21;
  double v22;
  double v23;
  void *v25[3];
  unsigned int v26;
  void *v27;
  char *v28;
  char *v29;
  int v30;
  void *__p[4];

  v3 = *(_QWORD *)(*a1 + 8);
  sub_19C1CD508(a1[1], (uint64_t)v25);
  v4 = v26;
  v28 = 0;
  v29 = 0;
  v27 = 0;
  if (!v26)
  {
    v30 = 0;
    goto LABEL_11;
  }
  if ((v26 & 0x80000000) != 0)
    sub_19C07DA0C();
  v5 = (float64x2_t *)operator new(8 * (int)v26);
  v27 = v5;
  v29 = (char *)&v5->f64[(int)v4];
  bzero(v5, 8 * (int)v4);
  v28 = (char *)&v5->f64[(int)v4];
  v30 = v4;
  v6 = (char *)v25[0];
  if (v4 < 8)
  {
    v7 = 0;
LABEL_9:
    v16 = v4 - v7;
    v17 = v7 << 32;
    do
    {
      *(double *)((char *)v5->f64 + (v17 >> 29)) = (double)*(int *)&v6[v17 >> 30];
      v17 += 0x100000000;
      --v16;
    }
    while (v16);
    goto LABEL_11;
  }
  v7 = v4 & 0xFFFFFFF8;
  v8 = v5 + 2;
  v9 = (char *)v25[0] + 16;
  v10 = v7;
  do
  {
    v11 = *((_OWORD *)v9 - 1);
    v12.i64[0] = (int)v11;
    v12.i64[1] = SDWORD1(v11);
    v13 = vcvtq_f64_s64(v12);
    v12.i64[0] = SDWORD2(v11);
    v12.i64[1] = SHIDWORD(v11);
    v14 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*(_OWORD *)v9;
    v12.i64[1] = (int)HIDWORD(*(_QWORD *)v9);
    v15 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*((_QWORD *)v9 + 1);
    v12.i64[1] = (int)HIDWORD(*(_OWORD *)v9);
    v8[-2] = v13;
    v8[-1] = v14;
    *v8 = v15;
    v8[1] = vcvtq_f64_s64(v12);
    v8 += 4;
    v9 += 32;
    v10 -= 8;
  }
  while (v10);
  if (v7 != v4)
    goto LABEL_9;
LABEL_11:
  sub_19C1CEDDC(a2, (uint64_t)&v27, (uint64_t)__p);
  v18 = sub_19C1E19C4(*(_QWORD *)(v3 + 8), (const double **)__p);
  v20 = sqrt(v19);
  if (v20 < 0.00000001 || (v21 = *(_DWORD *)(*(_QWORD *)(v3 + 8) + 96), v21 <= 0))
  {
    v22 = (*(double (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  else
  {
    if (*(_DWORD *)(v3 + 56) != v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    (**(void (***)(uint64_t, double, double))v3)(v3, v18, v20);
  }
  v23 = v22;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v27)
  {
    v28 = (char *)v27;
    operator delete(v27);
  }
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
  return *(_QWORD *)&v23;
}

void sub_19C1E33B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  void *v19;

  if (__p)
  {
    operator delete(__p);
    v19 = a9;
    if (!a9)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v19 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1E3438(uint64_t a1)
{
  char **v2;
  char **v3;
  char **v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char **v13;
  char **v14;
  void *v15;

  *(_QWORD *)a1 = &unk_1E3D21738;
  v2 = *(char ***)(a1 + 10672);
  if (v2)
  {
    v3 = *(char ***)(a1 + 10680);
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 12);
      while (v3 != v2);
      v4 = *(char ***)(a1 + 10672);
    }
    *(_QWORD *)(a1 + 10680) = v2;
    operator delete(v4);
  }
  std::random_device::~random_device((std::random_device *)(a1 + 10664));
  std::random_device::~random_device((std::random_device *)(a1 + 8120));
  std::random_device::~random_device((std::random_device *)(a1 + 5600));
  std::random_device::~random_device((std::random_device *)(a1 + 3072));
  v5 = *(_QWORD *)(a1 + 560);
  *(_QWORD *)(a1 + 560) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  *(_QWORD *)(a1 + 480) = &unk_1E3D20ED0;
  v6 = *(void **)(a1 + 496);
  if (v6)
  {
    *(_QWORD *)(a1 + 504) = v6;
    operator delete(v6);
  }
  sub_19C1D2994((_QWORD *)(a1 + 176));
  v7 = *(_QWORD *)(a1 + 152);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 160);
    v9 = *(void **)(a1 + 152);
    if (v8 != v7)
    {
      v10 = *(_QWORD *)(a1 + 160);
      do
      {
        v12 = *(void **)(v10 - 56);
        v10 -= 56;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v8 - 48) = v11;
          operator delete(v11);
        }
        v8 = v10;
      }
      while (v10 != v7);
      v9 = *(void **)(a1 + 152);
    }
    *(_QWORD *)(a1 + 160) = v7;
    operator delete(v9);
  }
  *(_QWORD *)a1 = &unk_1E3D214F8;
  sub_19C1C2E88(a1 + 32);
  v13 = *(char ***)(a1 + 8);
  if (v13)
  {
    v14 = *(char ***)(a1 + 16);
    v15 = *(void **)(a1 + 8);
    if (v14 != v13)
    {
      do
        v14 = sub_19C17B808(v14 - 13);
      while (v14 != v13);
      v15 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v13;
    operator delete(v15);
  }
  return a1;
}

void sub_19C1E35B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  void *__p[4];

  v5 = (uint64_t *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 72);
  v6 = *(_DWORD *)(a1 + 96);
  v7 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 96) = v6 + 1;
  *(_DWORD *)(a1 + 100) = v7;
  v8 = v7 * (v6 + 1);
  v9 = (*(_QWORD *)(a1 + 80) - v4) >> 3;
  if (v8 <= v9)
  {
    if (v8 < v9)
      *(_QWORD *)(a1 + 80) = v4 + 8 * v8;
  }
  else
  {
    sub_19C17C9D8(a1 + 72, v8 - v9);
    v6 = *(_DWORD *)(a1 + 96) - 1;
  }
  sub_19C1CE998(a2, (uint64_t)__p);
  v10 = *(int *)(a1 + 100);
  v11 = (char *)__p[0];
  if (!(_DWORD)v10)
  {
    if (!__p[0])
      goto LABEL_18;
    goto LABEL_17;
  }
  v12 = (int)v10 * (uint64_t)v6;
  v13 = *v5;
  if (v10 >= 8 && (v14 = 8 * v12 + v13, v14 - (unint64_t)__p[0] >= 0x20))
  {
    v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    v20 = (__int128 *)((char *)__p[0] + 16);
    v21 = (_OWORD *)(v14 + 16);
    v22 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v23 = *v20;
      *(v21 - 1) = *(v20 - 1);
      *v21 = v23;
      v20 += 2;
      v21 += 2;
      v22 -= 4;
    }
    while (v22);
    if (v15 == v10)
      goto LABEL_17;
  }
  else
  {
    v15 = 0;
  }
  v16 = v10 - v15;
  v17 = (_QWORD *)(v13 + 8 * (v15 + v12));
  v18 = &v11[8 * v15];
  do
  {
    v19 = *(_QWORD *)v18;
    v18 += 8;
    *v17++ = v19;
    --v16;
  }
  while (v16);
LABEL_17:
  __p[1] = v11;
  operator delete(v11);
LABEL_18:
  sub_19C1E36E8(a1, 1, 1);
}

void sub_19C1E36E8(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  signed int v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  char *v32;
  char *v33;
  uint64_t v35;
  void *__p;
  void *v37;
  uint64_t v38;
  unsigned int v39;
  char *__C;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  if (a2)
  {
    v5 = (_QWORD *)(a1 + 104);
    v4 = *(_QWORD *)(a1 + 104);
    v6 = *(_DWORD *)(a1 + 96);
    *(_DWORD *)(a1 + 128) = v6;
    v7 = (*(_QWORD *)(a1 + 112) - v4) >> 3;
    v35 = v6;
    if (v6 <= v7)
    {
      if (v6 < v7)
        *(_QWORD *)(a1 + 112) = v4 + 8 * v6;
    }
    else
    {
      sub_19C17C9D8(a1 + 104, v6 - v7);
      v6 = *(_DWORD *)(a1 + 96);
      v35 = v6;
    }
    if (v6)
    {
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *(_QWORD *)(a1 + 72);
        v11 = *(_DWORD *)(a1 + 100);
        __C = 0;
        v41 = 0;
        v42 = 0;
        if (v11)
          break;
        v12 = 0;
        v37 = 0;
        v38 = 0;
        __p = 0;
        v39 = 0;
LABEL_26:
        __C = 0;
        vDSP_meanvD(*(const double **)(a1 + 264), 1, (double *)&__C, *(int *)(a1 + 288));
        *(_QWORD *)(*v5 + 8 * v9) = __C;
        if (__p)
        {
          v37 = __p;
          operator delete(__p);
        }
        if (v12)
          operator delete(v12);
        ++v9;
        v8 += 8;
        if (v9 == v35)
          goto LABEL_34;
      }
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = operator new(8 * v11);
      bzero(v12, 8 * v11);
      if (v11 >= 8 && (unint64_t)v12 - v10 - 8 * v9 * v11 >= 0x20)
      {
        v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
        v28 = (__int128 *)(v10 + v8 * v11 + 16);
        v29 = v12 + 1;
        v30 = v13;
        do
        {
          v31 = *v28;
          *(v29 - 1) = *(v28 - 1);
          *v29 = v31;
          v28 += 2;
          v29 += 2;
          v30 -= 4;
        }
        while (v30);
        if (v13 == v11)
        {
LABEL_16:
          __p = 0;
          v37 = 0;
          v38 = 0;
          v39 = v11;
          sub_19C17C9D8((uint64_t)&__p, v11);
          v19 = v39;
          if ((int)v39 >= 1)
          {
            v20 = 0;
            v21 = (char *)__p;
            if (v39 < 4)
              goto LABEL_22;
            if ((unint64_t)((_BYTE *)__p - (_BYTE *)v12) < 0x20)
              goto LABEL_22;
            v22 = 0;
            v20 = v39 & 0xFFFFFFFC;
            v23 = (8 * v39) & 0x7FFFFFFE0;
            do
            {
              v24 = v12[v22 / 0x10 + 1];
              v25 = &v21[v22];
              *(_OWORD *)v25 = v12[v22 / 0x10];
              *((_OWORD *)v25 + 1) = v24;
              v22 += 32;
            }
            while (v23 != v22);
            if (v20 != v19)
            {
LABEL_22:
              v26 = v19 - v20;
              v27 = v20 << 32;
              do
              {
                *(_QWORD *)&v21[v27 >> 29] = *(_QWORD *)((char *)v12 + (v27 >> 29));
                v27 += 0x100000000;
                --v26;
              }
              while (v26);
            }
          }
          goto LABEL_26;
        }
      }
      else
      {
        v13 = 0;
      }
      v14 = v11 - v13;
      v15 = 8 * v13;
      v16 = (_QWORD *)v12 + v13;
      v17 = (uint64_t *)(v10 + v15 + v8 * v11);
      do
      {
        v18 = *v17++;
        *v16++ = v18;
        --v14;
      }
      while (v14);
      goto LABEL_16;
    }
  }
LABEL_34:
  sub_19C1E3A64(a1 + 8, (uint64_t *)(a1 + 72), (uint64_t)&__C);
  if ((char **)(a1 + 136) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 136), __C, v41, (v41 - __C) >> 3);
  v32 = __C;
  *(_QWORD *)(a1 + 160) = v43;
  if (v32)
  {
    v41 = v32;
    operator delete(v32);
  }
  sub_19C1D3978(a1 + 136, (uint64_t)&__C);
  if ((char **)(a1 + 168) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 168), __C, v41, (v41 - __C) >> 3);
  v33 = __C;
  *(_QWORD *)(a1 + 192) = v43;
  if (v33)
  {
    v41 = v33;
    operator delete(v33);
  }
  sub_19C1E3F24(a1);
  if (a3)
    sub_19C1E4144((int32x2_t *)a1);
}

void sub_19C1E3A00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1E3A64(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  size_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  signed int v12;
  char *v13;
  size_t v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  _OWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  __int128 *v33;
  _OWORD *v34;
  unint64_t v35;
  __int128 v36;
  __int128 *v37;
  _OWORD *v38;
  unint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  char *v55;
  signed int v56;
  void *__p;
  char *v58;
  char *v59;
  signed int v60;

  v4 = *((unsigned int *)a2 + 6);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  if (!(_DWORD)v4)
  {
    v7 = 0;
    *(_DWORD *)(a3 + 24) = 0;
    *(_DWORD *)(a3 + 28) = 0;
LABEL_41:
    v41 = (int)v4;
    if ((_DWORD)v4)
      goto LABEL_42;
    return;
  }
  v6 = 8 * (v4 * v4);
  v7 = (char *)operator new(v6);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 16) = &v7[v6];
  bzero(v7, v6);
  *(_QWORD *)(a3 + 8) = &v7[v6];
  *(_DWORD *)(a3 + 24) = v4;
  *(_DWORD *)(a3 + 28) = v4;
  if ((int)v4 <= 0)
    goto LABEL_41;
  v49 = 0;
  v8 = 0;
  v52 = 1;
  v47 = v4;
  v48 = a1;
  do
  {
    v9 = 0;
    v10 = 0;
    v51 = (int)v8 * v4;
    do
    {
      v11 = *a2;
      v12 = *((_DWORD *)a2 + 7);
      __p = 0;
      v58 = 0;
      v59 = 0;
      if (v12)
      {
        if (v12 < 0)
          sub_19C07DA0C();
        v13 = v7;
        v14 = 8 * v12;
        v15 = operator new(v14);
        bzero(v15, v14);
        if (v12 < 8 || (unint64_t)v15 - v11 - 8 * v8 * v12 < 0x20)
        {
          v16 = 0;
          goto LABEL_12;
        }
        v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v33 = (__int128 *)(v11 + v49 * v12 + 16);
        v34 = v15 + 1;
        v35 = v16;
        do
        {
          v36 = *v33;
          *(v34 - 1) = *(v33 - 1);
          *v34 = v36;
          v33 += 2;
          v34 += 2;
          v35 -= 4;
        }
        while (v35);
        if (v16 != v12)
        {
LABEL_12:
          v17 = v12 - v16;
          v18 = 8 * v16;
          v19 = (_QWORD *)v15 + v16;
          v20 = (uint64_t *)(v11 + v18 + v49 * v12);
          do
          {
            v21 = *v20++;
            *v19++ = v21;
            --v17;
          }
          while (v17);
        }
        v53 = 0;
        v54 = 0;
        v56 = 0;
        v55 = 0;
        v53 = operator new(8 * v12);
        v54 = (char *)v53 + v14;
        v55 = (char *)v53 + 8 * v12;
        v56 = v12;
        memcpy(v53, v15, 8 * v12);
        v22 = operator new(8 * v12);
        bzero(v22, 8 * v12);
        if (v12 < 8 || (unint64_t)v22 - v11 - 8 * v10 * v12 < 0x20)
        {
          v23 = 0;
          goto LABEL_17;
        }
        v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v37 = (__int128 *)(v11 + v9 * v12 + 16);
        v38 = v22 + 1;
        v39 = v23;
        do
        {
          v40 = *v37;
          *(v38 - 1) = *(v37 - 1);
          *v38 = v40;
          v37 += 2;
          v38 += 2;
          v39 -= 4;
        }
        while (v39);
        if (v23 != v12)
        {
LABEL_17:
          v24 = v12 - v23;
          v25 = 8 * v23;
          v26 = (_QWORD *)v22 + v23;
          v27 = (uint64_t *)(v11 + v25 + v9 * v12);
          do
          {
            v28 = *v27++;
            *v26++ = v28;
            --v24;
          }
          while (v24);
        }
        __p = 0;
        v58 = 0;
        v60 = 0;
        v59 = 0;
        v29 = (int)v10;
        __p = operator new(8 * v12);
        v58 = (char *)__p + v14;
        v59 = (char *)__p + 8 * v12;
        v60 = v12;
        memcpy(__p, v22, 8 * v12);
        v7 = v13;
        a1 = v48;
        goto LABEL_21;
      }
      v15 = 0;
      v22 = 0;
      v54 = 0;
      v55 = 0;
      v53 = 0;
      v56 = 0;
      v29 = (int)v10;
      __p = 0;
      v58 = 0;
      v60 = 0;
      v59 = 0;
LABEL_21:
      v30 = *(double *)(a1 + 16);
      v31 = sub_19C1E0878(a1, (uint64_t)&v53, (const double **)&__p);
      v32 = exp(v31 * -0.5) * v30;
      if ((_DWORD)v8 == (_DWORD)v10)
        v32 = v32 + *(double *)(a1 + 8) + 1.0e-10;
      *(double *)&v7[8 * v29 + 8 * v51] = v32;
      if (__p)
      {
        v58 = (char *)__p;
        operator delete(__p);
      }
      if (v22)
        operator delete(v22);
      if (v53)
      {
        v54 = (char *)v53;
        operator delete(v53);
      }
      if (v15)
        operator delete(v15);
      ++v10;
      v9 += 8;
    }
    while (v10 != v52);
    ++v8;
    ++v52;
    v49 += 8;
    v4 = v47;
  }
  while (v8 != v47);
  v41 = v47;
LABEL_42:
  if (v41 != 1)
  {
    v42 = 0;
    v43 = 8 * v41;
    v44 = v7;
    do
    {
      if (v42)
      {
        v45 = 0;
        v46 = v44;
        do
        {
          *v46 = *(_QWORD *)&v7[8 * v45++];
          v46 = (_QWORD *)((char *)v46 + v43);
        }
        while (v42 != v45);
      }
      ++v42;
      ++v44;
      v7 += v43;
    }
    while (v42 != v41);
  }
}

void sub_19C1E3E80(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1E3EA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  uint64_t v27;
  void *v28;

  if (__p)
  {
    operator delete(__p);
    v27 = a10;
    if (!v25)
    {
LABEL_3:
      v28 = a18;
      if (!a18)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    v27 = a10;
    if (!v25)
      goto LABEL_3;
  }
  operator delete(v25);
  v28 = a18;
  if (!a18)
  {
LABEL_4:
    if (!v23)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v28);
  if (!v23)
  {
LABEL_5:
    *(_QWORD *)(v27 + 8) = v24;
    operator delete(v24);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(v23);
  *(_QWORD *)(v27 + 8) = v24;
  operator delete(v24);
  _Unwind_Resume(a1);
}

void sub_19C1E3F24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _OWORD *v16;
  unsigned int v17;
  void *v18[4];
  void *__p;
  char *v20;
  int v21;
  void *v22[3];
  int v23;

  sub_19C1CE734(a1 + 168, (uint64_t)v22);
  v2 = *(unsigned int *)(a1 + 192);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    v4 = *(_DWORD *)(a1 + 196);
    v5 = v23;
    v6 = 1;
    v7 = -1;
    v8 = v22[0];
    do
    {
      if (v4 <= v6)
        v9 = v6;
      else
        v9 = v4;
      v10 = v3 + 1;
      if ((int)v3 + 1 >= v4)
        goto LABEL_3;
      v11 = 0;
      v12 = v9 + v7;
      v13 = (int)v3 * (uint64_t)v5;
      if ((v9 + v7) < 4)
      {
        v14 = v3 + 1;
      }
      else
      {
        v14 = v3 + 1;
        if (v9 - (int)v3 + v6 - 2 >= v6)
        {
          v15 = 0;
          v11 = v12 & 0xFFFFFFFC;
          v14 = v10 + (v12 & 0xFFFFFFFC);
          do
          {
            v16 = &v8[v13 + v6 + v15];
            *v16 = 0uLL;
            v16[1] = 0uLL;
            v15 += 4;
          }
          while ((v12 & 0xFFFFFFFC) != v15);
          if (v12 == v11)
            goto LABEL_3;
        }
      }
      v17 = v9 - v11;
      do
      {
        v8[v13 + v14] = 0;
        v14 = ++v11 + v10;
        --v17;
      }
      while (v6 != v17);
LABEL_3:
      ++v3;
      ++v6;
      --v7;
    }
    while (v3 != v2);
  }
  sub_19C1E43A8(a1, (uint64_t)v18);
  sub_19C1CE5B4((uint64_t)v22, (uint64_t)v18, (uint64_t)&__p);
  if ((void **)(a1 + 232) != &__p)
    sub_19C11EAD0((_QWORD *)(a1 + 232), (char *)__p, v20, (v20 - (_BYTE *)__p) >> 3);
  *(_DWORD *)(a1 + 256) = v21;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  sub_19C1CEB00((uint64_t)v22, &__p);
  sub_19C1D43B4((uint64_t)&__p, a1 + 232);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v22[0])
  {
    v22[1] = v22[0];
    operator delete(v22[0]);
  }
}

void sub_19C1E40E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  if (a9)
    operator delete(a9);
  if (a17)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_19C1E4144(int32x2_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int32 v14;
  int v15;
  int v16;
  _QWORD *v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  _OWORD *v25;
  unsigned int v26;
  void *__p;
  char *v28;
  int32x2_t v29;

  v2 = a1[12].u32[0];
  sub_19C176BE8(v2, v2, (uint64_t)&__p);
  if ((int)v2 >= 1)
  {
    v3 = v29.i32[1] + 1;
    v4 = __p;
    if ((_DWORD)v2 == 1)
    {
      v5 = 0;
LABEL_7:
      v8 = v2 - v5;
      v9 = v5 << 32;
      do
      {
        v4[(v9 >> 32) * v3] = 0x3FF0000000000000;
        v9 += 0x100000000;
        --v8;
      }
      while (v8);
      goto LABEL_9;
    }
    v6 = 0;
    v5 = v2 & 0xFFFFFFFE;
    v7 = v5;
    do
    {
      v4[(v6 >> 32) * v3] = 0x3FF0000000000000;
      v4[((v6 >> 32) | 1) * v3] = 0x3FF0000000000000;
      v6 += 0x200000000;
      v7 -= 2;
    }
    while (v7);
    if (v5 != v2)
      goto LABEL_7;
  }
LABEL_9:
  if (&a1[25] != (int32x2_t *)&__p)
    sub_19C11EAD0(&a1[25], (char *)__p, v28, (v28 - (_BYTE *)__p) >> 3);
  v10 = (char *)__p;
  a1[28] = v29;
  if (v10)
  {
    v28 = v10;
    operator delete(v10);
  }
  sub_19C1CE734((uint64_t)&a1[21], (uint64_t)&__p);
  v11 = a1[24].u32[0];
  if ((int)v11 >= 1)
  {
    v12 = 0;
    v13 = a1[24].i32[1];
    v14 = v29.i32[1];
    v15 = 1;
    v16 = -1;
    v17 = __p;
    do
    {
      if (v13 <= v15)
        v18 = v15;
      else
        v18 = v13;
      v19 = v12 + 1;
      if ((int)v12 + 1 >= v13)
        goto LABEL_15;
      v20 = 0;
      v21 = v18 + v16;
      v22 = (int)v12 * (uint64_t)v14;
      if ((v18 + v16) < 4)
      {
        v23 = v12 + 1;
      }
      else
      {
        v23 = v12 + 1;
        if (v18 - (int)v12 + v15 - 2 >= v15)
        {
          v24 = 0;
          v20 = v21 & 0xFFFFFFFC;
          v23 = v19 + (v21 & 0xFFFFFFFC);
          do
          {
            v25 = &v17[v22 + v15 + v24];
            *v25 = 0uLL;
            v25[1] = 0uLL;
            v24 += 4;
          }
          while ((v21 & 0xFFFFFFFC) != v24);
          if (v21 == v20)
            goto LABEL_15;
        }
      }
      v26 = v18 - v20;
      do
      {
        v17[v22 + v23] = 0;
        v23 = ++v20 + v19;
        --v26;
      }
      while (v15 != v26);
LABEL_15:
      ++v12;
      ++v15;
      --v16;
    }
    while (v12 != v11);
  }
  sub_19C1D44C8((uint64_t)&__p, a1 + 25);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
  sub_19C1CEB00((uint64_t)&a1[21], &__p);
  sub_19C1D44C8((uint64_t)&__p, a1 + 25);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
}

void sub_19C1E4384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1E43A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  signed int v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  char *v28;

  v4 = *(_DWORD *)(a1 + 288);
  v5 = 8 * v4;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * v4);
    bzero(v6, 8 * v4);
    v7 = 0;
    v8 = &v6[v5];
    v9 = *(_QWORD *)(a1 + 264);
    if (v4 < 4)
      goto LABEL_46;
    if ((unint64_t)&v6[-v9] < 0x20)
      goto LABEL_46;
    v10 = 0;
    v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    v11 = v7;
    do
    {
      v12 = *(_OWORD *)(v9 + v10 + 16);
      v13 = &v6[v10];
      *(_OWORD *)v13 = *(_OWORD *)(v9 + v10);
      *((_OWORD *)v13 + 1) = v12;
      v10 += 32;
      v11 -= 4;
    }
    while (v11);
    if (v7 != v4)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v6[8 * v7] = *(_QWORD *)(v9 + 8 * v7);
        ++v7;
      }
      while (v4 != v7);
    }
    v14 = *(int *)(a1 + 128);
    if ((_DWORD)v14)
      goto LABEL_10;
LABEL_19:
    v15 = 0;
    goto LABEL_20;
  }
  v8 = 0;
  v6 = 0;
  v14 = *(int *)(a1 + 128);
  if (!(_DWORD)v14)
    goto LABEL_19;
LABEL_10:
  if ((v14 & 0x80000000) != 0)
    sub_19C07DA0C();
  v15 = (char *)operator new(8 * v14);
  bzero(v15, 8 * v14);
  v16 = 0;
  v17 = *(_QWORD *)(a1 + 104);
  if (v14 < 4)
    goto LABEL_47;
  if ((unint64_t)&v15[-v17] < 0x20)
    goto LABEL_47;
  v18 = 0;
  v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  v19 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v20 = *(_OWORD *)(v17 + v18 + 16);
    v21 = &v15[v18];
    *(_OWORD *)v21 = *(_OWORD *)(v17 + v18);
    *((_OWORD *)v21 + 1) = v20;
    v18 += 32;
    v19 -= 4;
  }
  while (v19);
  if (v16 != v14)
  {
LABEL_47:
    do
    {
      *(_QWORD *)&v15[8 * v16] = *(_QWORD *)(v17 + 8 * v16);
      ++v16;
    }
    while (v14 != v16);
  }
LABEL_20:
  vDSP_vsubD((const double *)v15, 1, (const double *)v6, 1, (double *)v6, 1, v4);
  if (v8 != v6)
  {
    if (v8 - v6 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v8 - v6);
    memcpy(v22, v6, v8 - v6);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    if (!v4)
    {
      *(_DWORD *)(a2 + 24) = 0;
      operator delete(v22);
      if (!v15)
        goto LABEL_35;
LABEL_34:
      operator delete(v15);
      goto LABEL_35;
    }
LABEL_26:
    if (v4 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(8 * v4);
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 16) = &v23[8 * v4];
    bzero(v23, 8 * v4);
    *(_QWORD *)(a2 + 8) = &v23[v5];
    *(_DWORD *)(a2 + 24) = v4;
    if (v4 >= 4)
    {
      v25 = 0;
      v24 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      v26 = v24;
      do
      {
        v27 = *(_OWORD *)&v22[v25 + 16];
        v28 = &v23[v25];
        *(_OWORD *)v28 = *(_OWORD *)&v22[v25];
        *((_OWORD *)v28 + 1) = v27;
        v25 += 32;
        v26 -= 4;
      }
      while (v26);
      if (v24 == v4)
      {
LABEL_33:
        operator delete(v22);
        if (!v15)
          goto LABEL_35;
        goto LABEL_34;
      }
    }
    else
    {
      v24 = 0;
    }
    do
    {
      *(_QWORD *)&v23[8 * v24] = *(_QWORD *)&v22[8 * v24];
      ++v24;
    }
    while (v4 != v24);
    goto LABEL_33;
  }
  v22 = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v4)
    goto LABEL_26;
  *(_DWORD *)(a2 + 24) = 0;
  if (v15)
    goto LABEL_34;
LABEL_35:
  if (v6)
    operator delete(v6);
}

void sub_19C1E46CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  void *v18;
  void *v19;

  if (v19)
  {
    operator delete(v19);
    if (!v18)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v18)
  {
    goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_19C1E4730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a9)
    operator delete(a9);
  sub_19C07AF7C(a1);
}

void sub_19C1E4744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13)
    JUMPOUT(0x19C1E4754);
  JUMPOUT(0x19C1E4758);
}

void sub_19C1E4760(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _OWORD *v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  long double *v10;
  void *v11;
  char *v12;
  int v13;
  void *v14;
  void *v15;
  char *v16;
  int v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  int v21;
  void *__p;
  void *v23;
  _OWORD *v24;
  int v25;
  _QWORD v26[2];
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  v33 = a2;
  sub_19C1CF858((uint64_t)v26, 2u);
  v3 = operator new(0x10uLL);
  *v3 = 0;
  v3[1] = 0;
  v18 = v3;
  v19 = v3 + 2;
  v20 = v3 + 2;
  v21 = 2;
  v4 = operator new(0x10uLL);
  __p = v4;
  *v4 = xmmword_19C27A9E0;
  v23 = v4 + 1;
  v24 = v4 + 1;
  v25 = 2;
  *(_OWORD *)v3 = xmmword_19C27A9F0;
  sub_19C1D0468((uint64_t)v26, (uint64_t *)&v18);
  sub_19C1D0594((uint64_t)v26, (uint64_t *)&__p);
  if (__p)
  {
    v23 = __p;
    operator delete(__p);
  }
  if (v18)
  {
    v19 = v18;
    operator delete(v18);
  }
  v6 = *(_BYTE **)(a2 + 40);
  v5 = *(_BYTE **)(a2 + 48);
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    v9 = &v8[8 * (v7 >> 3)];
    v14 = v8;
    v16 = v9;
    memcpy(v8, v6, v7);
    v15 = v9;
  }
  v17 = *(_DWORD *)(a2 + 64);
  sub_19C1E4A0C((uint64_t)v26, (uint64_t)&v33, (uint64_t *)&v14, (uint64_t)&v11);
  if ((void **)(a2 + 40) != &v11)
    sub_19C11EAD0((_QWORD *)(a2 + 40), (char *)v11, v12, (v12 - (_BYTE *)v11) >> 3);
  *(_DWORD *)(a2 + 64) = v13;
  v10 = (long double *)v11;
  *(long double *)(a2 + 24) = exp(*(double *)v11 + *(double *)v11);
  *(long double *)(a2 + 32) = exp(v10[1]);
  sub_19C1E36E8(a2, 1, 1);
  if (v11)
  {
    v12 = (char *)v11;
    operator delete(v11);
  }
  if (v14)
  {
    v15 = v14;
    operator delete(v14);
  }
  v26[0] = &unk_1E3D21150;
  sub_19C23AA14(v26[1]);
  if (v31)
  {
    v32 = v31;
    operator delete(v31);
  }
  if (v29)
  {
    v30 = v29;
    operator delete(v29);
  }
  if (v27)
  {
    v28 = v27;
    operator delete(v27);
  }
}

void sub_19C1E497C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (!__p)
  {
    sub_19C1CF8E8(&a25);
    _Unwind_Resume(a1);
  }
  operator delete(__p);
  sub_19C1CF8E8(&a25);
  _Unwind_Resume(a1);
}

void sub_19C1E49F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  sub_19C176E10((uint64_t)va);
  sub_19C1CF8E8((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_19C1E4A0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1E4F5C;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1E4E54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1E4C60);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

double sub_19C1E4F5C(uint64_t **a1, uint64_t *a2, int **a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  double v33;
  void *__p;
  void *v35;
  char v36;
  _QWORD v37[3];
  signed int v38;
  char v39;
  void *v40;
  char *v41;
  char *v42;
  int v43;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v41 = 0;
  v42 = 0;
  v40 = 0;
  v43 = 0;
  v33 = 0.0;
  __p = 0;
  v35 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  v40 = v8;
  v41 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v42 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v43 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1E5250(a3, (uint64_t)&v40, 0, (uint64_t)&v33);
    v17 = v33;
    if (v36)
    {
      v31 = __p;
      if (__p)
      {
        v35 = __p;
        goto LABEL_31;
      }
    }
  }
  else
  {
    LOBYTE(v37[0]) = 0;
    v39 = 0;
    sub_19C1E5250(a3, (uint64_t)&v40, 1, (uint64_t)&v33);
    v17 = v33;
    sub_19C1D66F8((uint64_t)v37, (uint64_t)&__p);
    if (v36 && __p)
    {
      v35 = __p;
      operator delete(__p);
    }
    v18 = v38;
    if (v38)
    {
      v19 = 0;
      v20 = v37[0];
      v21 = *a2;
      if (v38 < 4)
        goto LABEL_23;
      if ((unint64_t)(v21 - v37[0]) < 0x20)
        goto LABEL_23;
      v19 = v38 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = (__int128 *)(v37[0] + 16);
      v23 = (_OWORD *)(v21 + 16);
      v24 = v19;
      do
      {
        v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 4;
      }
      while (v24);
      if (v19 != v18)
      {
LABEL_23:
        v26 = v18 - v19;
        v27 = 8 * v19;
        v28 = (_QWORD *)(v21 + 8 * v19);
        v29 = (uint64_t *)(v20 + v27);
        do
        {
          v30 = *v29++;
          *v28++ = v30;
          --v26;
        }
        while (v26);
      }
    }
    if (v39)
    {
      v31 = (void *)v37[0];
      if (v37[0])
      {
        v37[1] = v37[0];
LABEL_31:
        operator delete(v31);
      }
    }
  }
  if (v40)
  {
    v41 = (char *)v40;
    operator delete(v40);
  }
  return v17;
}

void sub_19C1E51D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,void *__p,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1E5234(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

_QWORD *sub_19C1E5250@<X0>(int **a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char *v7;
  double v8;
  double v9;
  void *v10;
  int64_t v11;
  char *v12;
  char *v13;
  _BYTE *v15;
  _BYTE *v16;
  int v17;
  _QWORD v18[5];
  _QWORD v19[3];
  int v20;

  sub_19C1E60D8((uint64_t)v18, *a1);
  if (v19 != (_QWORD *)a2)
    sub_19C11EAD0(v19, *(char **)a2, *(char **)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  v20 = *(_DWORD *)(a2 + 24);
  v7 = *(char **)a2;
  v18[3] = exp(*(double *)v7 + *(double *)v7);
  v18[4] = exp(*((long double *)v7 + 1));
  sub_19C1E36E8((uint64_t)v18, 0, a3);
  v8 = sub_19C1E5428((uint64_t)v18);
  v9 = v8;
  if ((a3 & 1) != 0)
  {
    sub_19C1E5654((uint64_t)v18, (uint64_t)&v15);
    *(_QWORD *)(a4 + 8) = 0;
    *(double *)a4 = v9;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0;
    v10 = v15;
    v11 = v16 - v15;
    if (v16 != v15)
    {
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = (char *)operator new(v16 - v15);
      *(_QWORD *)(a4 + 8) = v12;
      v13 = &v12[8 * (v11 >> 3)];
      *(_QWORD *)(a4 + 24) = v13;
      memcpy(v12, v10, v11);
      *(_QWORD *)(a4 + 16) = v13;
    }
    *(_DWORD *)(a4 + 32) = v17;
    *(_BYTE *)(a4 + 40) = 1;
    if (v10)
    {
      v16 = v10;
      operator delete(v10);
    }
  }
  else
  {
    *(double *)a4 = v8;
    *(_BYTE *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 40) = 0;
  }
  return sub_19C1D2994(v18);
}

void sub_19C1E53A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_19C1D2994((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1E53B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  void **v14;
  void *v16;
  void *v17;

  v16 = *v14;
  if (*v14)
  {
    *(_QWORD *)(v13 + 16) = v16;
    operator delete(v16);
    v17 = __p;
    if (!__p)
    {
LABEL_3:
      sub_19C1D2994(&a13);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v17 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v17);
  sub_19C1D2994(&a13);
  _Unwind_Resume(a1);
}

void sub_19C1E5400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_19C1D2994((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1E5414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_19C1D2994((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_19C1E5428(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  double *v8;
  void *__p;
  char *v11;
  char *v12;
  int v13;
  void *__C[3];
  vDSP_Length v15;
  double *__A;
  double *v17;
  uint64_t v18;
  vDSP_Length __N;

  sub_19C1E43A8(a1, (uint64_t)&__A);
  __C[0] = 0;
  vDSP_dotprD(__A, 1, *(const double **)(a1 + 232), 1, (double *)__C, (int)__N);
  v2 = __C[0];
  if (__A)
  {
    v17 = __A;
    operator delete(__A);
  }
  v3 = *(int *)(a1 + 196);
  if ((int)v3 >= *(_DWORD *)(a1 + 192))
    v4 = *(_DWORD *)(a1 + 192);
  else
    v4 = *(_DWORD *)(a1 + 196);
  __A = 0;
  v17 = 0;
  v18 = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = operator new(8 * v4);
    bzero(v5, 8 * v4);
    v6 = 0;
    v7 = *(_QWORD **)(a1 + 168);
    do
    {
      *((_QWORD *)v5 + v6++) = *v7;
      v7 += v3 + 1;
    }
    while (v4 != v6);
    __p = operator new(8 * v4);
    v11 = (char *)__p + 8 * v4;
    v12 = v11;
    v13 = v4;
    memcpy(__p, v5, 8 * v4);
  }
  else
  {
    v5 = 0;
    v11 = 0;
    v12 = 0;
    __p = 0;
    v13 = 0;
  }
  sub_19C1D650C((uint64_t)&__p, (uint64_t)__C);
  __A = 0;
  vDSP_sveD((const double *)__C[0], 1, (double *)&__A, (int)v15);
  v8 = __A;
  if (__C[0])
  {
    __C[1] = __C[0];
    operator delete(__C[0]);
  }
  if (__p)
  {
    v11 = (char *)__p;
    operator delete(__p);
  }
  if (v5)
    operator delete(v5);
  return (double)*(int *)(a1 + 96) * -0.918938533 - (*(double *)&v8 - *(double *)&v2 * -0.5);
}

void sub_19C1E55CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v20;

  if (__p)
  {
    operator delete(__p);
    v20 = a9;
    if (!a9)
    {
LABEL_3:
      if (!v18)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(v18);
      goto LABEL_8;
    }
  }
  else
  {
    v20 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v20);
  if (!v18)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C1E5638(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1E5654(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  double *v5;
  double *v6;
  _BYTE *v7;
  _BYTE *v8;
  int64_t v9;
  char *v10;
  char *v11;
  void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  vDSP_Length v18;
  int64_t v19;
  char *v20;
  char *v21;
  char *v22;
  unint64_t i;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  __int128 v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  long double *v65;
  double v66;
  double v67;
  long double v68;
  uint64_t v69;
  double *v70;
  double *v71;
  double *v72;
  double *v73;
  __int128 *v74;
  _OWORD *v75;
  unint64_t v76;
  __int128 v77;
  __int128 *v78;
  _OWORD *v79;
  unint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  void *v86[4];
  void *v87;
  void *v88;
  char *v89;
  int v90;
  void *__p;
  char *v92;
  char *v93;
  unint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  unint64_t v98;
  void *v99;
  char *v100;
  char *v101;
  unint64_t v102;
  double *v103;
  double *v104;
  double *v105;
  unint64_t v106;
  double __B;
  char *v108;
  char *v109;
  unint64_t v110;

  v103 = 0;
  v104 = 0;
  v105 = 0;
  v3 = *(_BYTE **)(a1 + 200);
  v2 = *(_BYTE **)(a1 + 208);
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (double *)operator new(v2 - v3);
    v6 = &v5[v4 >> 3];
    v103 = v5;
    v105 = v6;
    memcpy(v5, v3, v4);
    v104 = v6;
  }
  v106 = *(_QWORD *)(a1 + 224);
  v88 = 0;
  v89 = 0;
  v87 = 0;
  v8 = *(_BYTE **)(a1 + 232);
  v7 = *(_BYTE **)(a1 + 240);
  v9 = v7 - v8;
  if (v7 != v8)
  {
    if (v9 < 0)
      sub_19C07DA0C();
    v10 = (char *)operator new(v7 - v8);
    v11 = &v10[8 * (v9 >> 3)];
    v87 = v10;
    v89 = v11;
    memcpy(v10, v8, v9);
    v88 = v11;
  }
  v90 = *(_DWORD *)(a1 + 256);
  sub_19C1CE998(a1 + 232, (uint64_t)v86);
  sub_19C1D65EC((uint64_t)&v87, (uint64_t)v86, (uint64_t)&__p);
  v95 = 0;
  v96 = 0;
  v97 = 0;
  v12 = __p;
  v13 = v92 - (_BYTE *)__p;
  if (v92 == __p)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v92 - (_BYTE *)__p);
    v15 = &v14[8 * (v13 >> 3)];
    v95 = v14;
    v97 = v15;
    memcpy(v14, v12, v13);
    v96 = v15;
  }
  v16 = v94;
  v98 = v94;
  v17 = HIDWORD(v94);
  v18 = HIDWORD(v94) * (int)v94;
  vDSP_vsubD(v103, 1, (const double *)v14, 1, (double *)v14, 1, v18);
  v99 = 0;
  v100 = 0;
  v101 = 0;
  v19 = v15 - v14;
  if (!v19)
  {
    v20 = 0;
    v102 = v16;
    v108 = 0;
    v109 = 0;
    __B = 0.0;
    if ((_DWORD)v18)
      goto LABEL_14;
LABEL_18:
    v22 = 0;
    v21 = 0;
    v110 = __PAIR64__(v17, v16);
    goto LABEL_23;
  }
  if (v19 < 0)
    sub_19C07DA0C();
  v20 = (char *)operator new(v19);
  v99 = v20;
  v101 = &v20[8 * (v19 >> 3)];
  memcpy(v20, v14, v19);
  v100 = &v20[8 * (v19 >> 3)];
  v102 = v16;
  v108 = 0;
  v109 = 0;
  __B = 0.0;
  if (!(_DWORD)v18)
    goto LABEL_18;
LABEL_14:
  if ((v18 & 0x80000000) != 0)
    sub_19C07DA0C();
  v21 = (char *)operator new(8 * v18);
  *(_QWORD *)&__B = v21;
  v109 = &v21[8 * v18];
  bzero(v21, 8 * v18);
  v22 = &v21[8 * v18];
  v110 = __PAIR64__(v17, v16);
  if (v18 < 4)
  {
    for (i = 0; i != v18; ++i)
LABEL_22:
      *(_QWORD *)&v21[8 * i] = *(_QWORD *)&v20[8 * i];
    goto LABEL_23;
  }
  v24 = 0;
  i = v18 & 0xFFFFFFFFFFFFFFFCLL;
  v25 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v26 = *(_OWORD *)&v20[v24 + 16];
    v27 = &v21[v24];
    *(_OWORD *)v27 = *(_OWORD *)&v20[v24];
    *((_OWORD *)v27 + 1) = v26;
    v24 += 32;
    v25 -= 4;
  }
  while (v25);
  if (i != v18)
    goto LABEL_22;
LABEL_23:
  sub_19C11EAD0(&v103, v21, v22, (v22 - v21) >> 3);
  v106 = v110;
  if (v21)
  {
    v108 = v21;
    operator delete(v21);
  }
  if (v20)
  {
    v100 = v20;
    operator delete(v20);
  }
  if (v14)
  {
    v96 = v14;
    operator delete(v14);
  }
  if (__p)
  {
    v92 = (char *)__p;
    operator delete(__p);
  }
  if (v86[0])
  {
    v86[1] = v86[0];
    operator delete(v86[0]);
  }
  if (v87)
  {
    v88 = v87;
    operator delete(v87);
  }
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v28 = operator new(0x10uLL);
  *(_QWORD *)(a2 + 8) = v28 + 2;
  *(_QWORD *)(a2 + 16) = v28 + 2;
  *(_QWORD *)a2 = v28;
  *(_DWORD *)(a2 + 24) = 2;
  *v28 = 0;
  v28[1] = 0;
  v82 = *(int *)(a1 + 96);
  if ((_DWORD)v82)
  {
    v29 = 0;
    v83 = 0;
    do
    {
      v30 = 0;
      v31 = 0;
      do
      {
        v32 = *(_QWORD *)(a1 + 72);
        v33 = *(unsigned int *)(a1 + 100);
        __B = 0.0;
        v108 = 0;
        v109 = 0;
        if (!(_DWORD)v33)
        {
          v34 = 0;
          v100 = 0;
          v101 = 0;
          v99 = 0;
          LODWORD(v102) = 0;
LABEL_68:
          v51 = 0;
          v92 = 0;
          v93 = 0;
          __p = 0;
          LODWORD(v94) = 0;
          goto LABEL_72;
        }
        if ((v33 & 0x80000000) != 0)
          sub_19C07DA0C();
        v34 = operator new(8 * (int)v33);
        bzero(v34, 8 * (int)v33);
        if (v33 < 8 || (unint64_t)v34 - v32 - 8 * v29 * (int)v33 < 0x20)
        {
          v35 = 0;
LABEL_45:
          v36 = (int)v33 - v35;
          v37 = 8 * v35;
          v38 = (_QWORD *)v34 + v35;
          v39 = (uint64_t *)(v32 + v37 + v83 * (int)v33);
          do
          {
            v40 = *v39++;
            *v38++ = v40;
            --v36;
          }
          while (v36);
          goto LABEL_47;
        }
        v35 = (int)v33 & 0xFFFFFFFFFFFFFFFCLL;
        v74 = (__int128 *)(v32 + v83 * (int)v33 + 16);
        v75 = v34 + 1;
        v76 = v35;
        do
        {
          v77 = *v74;
          *(v75 - 1) = *(v74 - 1);
          *v75 = v77;
          v74 += 2;
          v75 += 2;
          v76 -= 4;
        }
        while (v76);
        if (v35 != (int)v33)
          goto LABEL_45;
LABEL_47:
        v99 = 0;
        v100 = 0;
        v101 = 0;
        LODWORD(v102) = v33;
        v41 = operator new(8 * (int)v33);
        bzero(v41, 8 * (int)v33);
        v99 = v41;
        v100 = (char *)v41 + 8 * (int)v33;
        v101 = v100;
        if ((v33 - 6) >= 0x7FFFFFFB)
        {
          v42 = 0;
LABEL_54:
          v47 = v33 - v42;
          v48 = v42 << 32;
          do
          {
            *(_QWORD *)((char *)v41 + (v48 >> 29)) = *(_QWORD *)((char *)v34 + (v48 >> 29));
            v48 += 0x100000000;
            --v47;
          }
          while (v47);
          goto LABEL_56;
        }
        v42 = v33 & 0xFFFFFFFC;
        v43 = v41 + 1;
        v44 = v34 + 1;
        v45 = v42;
        do
        {
          v46 = *v44;
          *(v43 - 1) = *(v44 - 1);
          *v43 = v46;
          v43 += 2;
          v44 += 2;
          v45 -= 4;
        }
        while (v45);
        if (v42 != v33)
          goto LABEL_54;
LABEL_56:
        v49 = *(_QWORD *)(a1 + 72);
        v50 = *(unsigned int *)(a1 + 100);
        __B = 0.0;
        v108 = 0;
        v109 = 0;
        if (!(_DWORD)v50)
          goto LABEL_68;
        if ((v50 & 0x80000000) != 0)
          sub_19C07DA0C();
        v51 = operator new(8 * (int)v50);
        bzero(v51, 8 * (int)v50);
        if (v50 < 8 || (unint64_t)v51 - v49 - 8 * v31 * (int)v50 < 0x20)
        {
          v52 = 0;
LABEL_61:
          v53 = (int)v50 - v52;
          v54 = 8 * v52;
          v55 = (_QWORD *)v51 + v52;
          v56 = (uint64_t *)(v49 + v54 + v30 * (int)v50);
          do
          {
            v57 = *v56++;
            *v55++ = v57;
            --v53;
          }
          while (v53);
          goto LABEL_63;
        }
        v52 = (int)v50 & 0xFFFFFFFFFFFFFFFCLL;
        v78 = (__int128 *)(v49 + v30 * (int)v50 + 16);
        v79 = v51 + 1;
        v80 = v52;
        do
        {
          v81 = *v78;
          *(v79 - 1) = *(v78 - 1);
          *v79 = v81;
          v78 += 2;
          v79 += 2;
          v80 -= 4;
        }
        while (v80);
        if (v52 != (int)v50)
          goto LABEL_61;
LABEL_63:
        __p = 0;
        v92 = 0;
        v93 = 0;
        LODWORD(v94) = v50;
        v58 = (char *)operator new(8 * (int)v50);
        bzero(v58, 8 * (int)v50);
        __p = v58;
        v92 = &v58[8 * (int)v50];
        v93 = v92;
        if ((v50 - 6) >= 0x7FFFFFFB)
        {
          v60 = 0;
LABEL_70:
          v63 = v50 - v60;
          v64 = v60 << 32;
          do
          {
            *(_QWORD *)&v58[v64 >> 29] = *(_QWORD *)((char *)v51 + (v64 >> 29));
            v64 += 0x100000000;
            --v63;
          }
          while (v63);
          goto LABEL_72;
        }
        v59 = 0;
        v60 = v50 & 0xFFFFFFFC;
        do
        {
          v61 = v51[v59 / 0x10 + 1];
          v62 = &v58[v59];
          *(_OWORD *)v62 = v51[v59 / 0x10];
          *((_OWORD *)v62 + 1) = v61;
          v59 += 32;
        }
        while (((8 * v50) & 0x7FFFFFFE0) != v59);
        if (v60 != v50)
          goto LABEL_70;
LABEL_72:
        v65 = (long double *)operator new(0x10uLL);
        *v65 = 0.0;
        v65[1] = 0.0;
        v66 = sub_19C1E0878(a1 + 8, (uint64_t)&v99, (const double **)&__p);
        v67 = *(double *)(a1 + 24);
        v68 = v67 * exp(v66 * -0.5);
        *v65 = v68 + v68;
        v65[1] = v68 * v66;
        if (__p)
        {
          v92 = (char *)__p;
          operator delete(__p);
        }
        if (v51)
          operator delete(v51);
        if (v99)
        {
          v100 = (char *)v99;
          operator delete(v99);
        }
        if (v34)
          operator delete(v34);
        v69 = SHIDWORD(v106);
        v70 = v103;
        v71 = (double *)operator new(0x10uLL);
        *(_OWORD *)v71 = *(_OWORD *)v65;
        if (v29 == v31)
        {
          vDSP_vsmulD(v71, 1, &v70[v29 + v29 * v69], v71, 1, 2uLL);
          v72 = (double *)operator new(0x10uLL);
          *(_OWORD *)v72 = *(_OWORD *)v71;
          __B = 0.5;
          vDSP_vsmulD(v72, 1, &__B, v72, 1, 2uLL);
          v73 = (double *)operator new(0x10uLL);
          *(_OWORD *)v73 = *(_OWORD *)v72;
          vDSP_vaddD(*(const double **)a2, 1, v73, 1, *(double **)a2, 1, 2uLL);
          operator delete(v73);
        }
        else
        {
          vDSP_vsmulD(v71, 1, &v70[v31 + v29 * v69], v71, 1, 2uLL);
          v72 = (double *)operator new(0x10uLL);
          *(_OWORD *)v72 = *(_OWORD *)v71;
          vDSP_vaddD(*(const double **)a2, 1, v72, 1, *(double **)a2, 1, 2uLL);
        }
        operator delete(v72);
        operator delete(v71);
        operator delete(v65);
        ++v31;
        v30 += 8;
      }
      while (v31 <= v29);
      ++v29;
      v83 += 8;
    }
    while (v29 != v82);
  }
  if (v103)
  {
    v104 = v103;
    operator delete(v103);
  }
}

void sub_19C1E5EE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v38;
  void *v39;
  void *v40;

  if (v35)
    operator delete(v35);
  if (v34)
    operator delete(v34);
  if (v33)
    operator delete(v33);
  if (__p)
  {
    operator delete(__p);
    v38 = a16;
    if (!a16)
    {
LABEL_9:
      v39 = a20;
      if (!a20)
      {
LABEL_14:
        v40 = *(void **)(v36 - 184);
        if (v40)
        {
          *(_QWORD *)(v36 - 176) = v40;
          operator delete(v40);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_13:
      operator delete(v39);
      goto LABEL_14;
    }
  }
  else
  {
    v38 = a16;
    if (!a16)
      goto LABEL_9;
  }
  operator delete(v38);
  v39 = a20;
  if (!a20)
    goto LABEL_14;
  goto LABEL_13;
}

void sub_19C1E607C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;

  operator delete(v34);
  if (__p)
  {
    operator delete(__p);
    if (!v35)
    {
LABEL_3:
      v36 = a32;
      if (!a32)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v35)
  {
    goto LABEL_3;
  }
  operator delete(v35);
  v36 = a32;
  if (!a32)
  {
LABEL_4:
    if (v33)
      goto LABEL_12;
    goto LABEL_13;
  }
LABEL_8:
  operator delete(v36);
  if (v33)
LABEL_12:
    JUMPOUT(0x19C1E6028);
LABEL_13:
  JUMPOUT(0x19C1E602CLL);
}

uint64_t sub_19C1E60D8(uint64_t a1, int *a2)
{
  int v4;
  __int128 v5;
  _BYTE *v6;
  _BYTE *v7;
  int64_t v8;
  char *v9;
  char *v10;
  int v11;
  _BYTE *v12;
  _BYTE *v13;
  int64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  int64_t v20;
  char *v21;
  char *v22;
  int v23;
  _BYTE *v24;
  _BYTE *v25;
  int64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  int64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  int64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  int64_t v44;
  char *v45;
  char *v46;
  _BYTE *v47;
  _BYTE *v48;
  int64_t v49;
  char *v50;
  char *v51;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 2);
  v5 = *(_OWORD *)(a2 + 6);
  *(_QWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  v7 = (_BYTE *)*((_QWORD *)a2 + 5);
  v6 = (_BYTE *)*((_QWORD *)a2 + 6);
  v8 = v6 - v7;
  if (v6 != v7)
  {
    if (v8 < 0)
      sub_19C07DA0C();
    v9 = (char *)operator new(v6 - v7);
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v9;
    v10 = &v9[8 * (v8 >> 3)];
    *(_QWORD *)(a1 + 56) = v10;
    memcpy(v9, v7, v8);
    *(_QWORD *)(a1 + 48) = v10;
  }
  v11 = a2[16];
  *(_QWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  v13 = (_BYTE *)*((_QWORD *)a2 + 9);
  v12 = (_BYTE *)*((_QWORD *)a2 + 10);
  v14 = v12 - v13;
  if (v12 != v13)
  {
    if (v14 < 0)
      sub_19C07DA0C();
    v15 = (char *)operator new(v12 - v13);
    *(_QWORD *)(a1 + 72) = v15;
    *(_QWORD *)(a1 + 80) = v15;
    v16 = &v15[8 * (v14 >> 3)];
    *(_QWORD *)(a1 + 88) = v16;
    memcpy(v15, v13, v14);
    *(_QWORD *)(a1 + 80) = v16;
  }
  v17 = *((_QWORD *)a2 + 12);
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  v19 = (_BYTE *)*((_QWORD *)a2 + 13);
  v18 = (_BYTE *)*((_QWORD *)a2 + 14);
  v20 = v18 - v19;
  if (v18 != v19)
  {
    if (v20 < 0)
      sub_19C07DA0C();
    v21 = (char *)operator new(v18 - v19);
    *(_QWORD *)(a1 + 104) = v21;
    *(_QWORD *)(a1 + 112) = v21;
    v22 = &v21[8 * (v20 >> 3)];
    *(_QWORD *)(a1 + 120) = v22;
    memcpy(v21, v19, v20);
    *(_QWORD *)(a1 + 112) = v22;
  }
  v23 = a2[32];
  *(_QWORD *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 128) = v23;
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  v25 = (_BYTE *)*((_QWORD *)a2 + 17);
  v24 = (_BYTE *)*((_QWORD *)a2 + 18);
  v26 = v24 - v25;
  if (v24 != v25)
  {
    if (v26 < 0)
      sub_19C07DA0C();
    v27 = (char *)operator new(v24 - v25);
    *(_QWORD *)(a1 + 136) = v27;
    *(_QWORD *)(a1 + 144) = v27;
    v28 = &v27[8 * (v26 >> 3)];
    *(_QWORD *)(a1 + 152) = v28;
    memcpy(v27, v25, v26);
    *(_QWORD *)(a1 + 144) = v28;
  }
  v29 = *((_QWORD *)a2 + 20);
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 160) = v29;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  v31 = (_BYTE *)*((_QWORD *)a2 + 21);
  v30 = (_BYTE *)*((_QWORD *)a2 + 22);
  v32 = v30 - v31;
  if (v30 != v31)
  {
    if (v32 < 0)
      sub_19C07DA0C();
    v33 = (char *)operator new(v30 - v31);
    *(_QWORD *)(a1 + 168) = v33;
    *(_QWORD *)(a1 + 176) = v33;
    v34 = &v33[8 * (v32 >> 3)];
    *(_QWORD *)(a1 + 184) = v34;
    memcpy(v33, v31, v32);
    *(_QWORD *)(a1 + 176) = v34;
  }
  v35 = *((_QWORD *)a2 + 24);
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 192) = v35;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  v37 = (_BYTE *)*((_QWORD *)a2 + 25);
  v36 = (_BYTE *)*((_QWORD *)a2 + 26);
  v38 = v36 - v37;
  if (v36 != v37)
  {
    if (v38 < 0)
      sub_19C07DA0C();
    v39 = (char *)operator new(v36 - v37);
    *(_QWORD *)(a1 + 200) = v39;
    *(_QWORD *)(a1 + 208) = v39;
    v40 = &v39[8 * (v38 >> 3)];
    *(_QWORD *)(a1 + 216) = v40;
    memcpy(v39, v37, v38);
    *(_QWORD *)(a1 + 208) = v40;
  }
  v41 = *((_QWORD *)a2 + 28);
  *(_QWORD *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 224) = v41;
  *(_QWORD *)(a1 + 240) = 0;
  *(_QWORD *)(a1 + 248) = 0;
  v43 = (_BYTE *)*((_QWORD *)a2 + 29);
  v42 = (_BYTE *)*((_QWORD *)a2 + 30);
  v44 = v42 - v43;
  if (v42 != v43)
  {
    if (v44 < 0)
      sub_19C07DA0C();
    v45 = (char *)operator new(v42 - v43);
    *(_QWORD *)(a1 + 232) = v45;
    *(_QWORD *)(a1 + 240) = v45;
    v46 = &v45[8 * (v44 >> 3)];
    *(_QWORD *)(a1 + 248) = v46;
    memcpy(v45, v43, v44);
    *(_QWORD *)(a1 + 240) = v46;
  }
  *(_DWORD *)(a1 + 256) = a2[64];
  *(_QWORD *)(a1 + 272) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  v48 = (_BYTE *)*((_QWORD *)a2 + 33);
  v47 = (_BYTE *)*((_QWORD *)a2 + 34);
  v49 = v47 - v48;
  if (v47 != v48)
  {
    if (v49 < 0)
      sub_19C07DA0C();
    v50 = (char *)operator new(v47 - v48);
    *(_QWORD *)(a1 + 264) = v50;
    *(_QWORD *)(a1 + 272) = v50;
    v51 = &v50[8 * (v49 >> 3)];
    *(_QWORD *)(a1 + 280) = v51;
    memcpy(v50, v48, v49);
    *(_QWORD *)(a1 + 272) = v51;
  }
  *(_DWORD *)(a1 + 288) = a2[72];
  return a1;
}

void sub_19C1E640C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, void **a10)
{
  _QWORD *v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  v18 = *v11;
  if (*v11)
  {
    v10[34] = v18;
    operator delete(v18);
    v19 = *v16;
    if (!*v16)
    {
LABEL_3:
      v20 = *v15;
      if (!*v15)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else
  {
    v19 = *v16;
    if (!*v16)
      goto LABEL_3;
  }
  v10[30] = v19;
  operator delete(v19);
  v20 = *v15;
  if (!*v15)
  {
LABEL_4:
    v21 = *v14;
    if (!*v14)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  v10[26] = v20;
  operator delete(v20);
  v21 = *v14;
  if (!*v14)
  {
LABEL_5:
    v22 = *v13;
    if (!*v13)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  v10[22] = v21;
  operator delete(v21);
  v22 = *v13;
  if (!*v13)
  {
LABEL_6:
    v23 = *v12;
    if (!*v12)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  v10[18] = v22;
  operator delete(v22);
  v23 = *v12;
  if (!*v12)
  {
LABEL_7:
    v24 = *a9;
    if (!*a9)
      goto LABEL_9;
    goto LABEL_8;
  }
LABEL_17:
  v10[14] = v23;
  operator delete(v23);
  v24 = *a9;
  if (!*a9)
  {
LABEL_9:
    v25 = *a10;
    if (*a10)
    {
      v10[6] = v25;
      operator delete(v25);
    }
    _Unwind_Resume(exception_object);
  }
LABEL_8:
  v10[10] = v24;
  operator delete(v24);
  goto LABEL_9;
}

void sub_19C1E6528()
{
  _QWORD *v0;

  if (!*v0)
    JUMPOUT(0x19C1E6454);
  JUMPOUT(0x19C1E644CLL);
}

void sub_19C1E6538()
{
  _QWORD *v0;

  if (!*v0)
    JUMPOUT(0x19C1E6468);
  JUMPOUT(0x19C1E6460);
}

BOOL sub_19C1E6548(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v5;
  int v6;
  int v8;
  _BOOL4 v9;
  std::runtime_error *exception;

  if (*(_BYTE *)(a1 + 8))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Early stopping already requested.");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  v3 = *(_DWORD *)(a1 + 12);
  if (v3 == -1)
    return 0;
  v6 = *a2;
  v5 = (uint64_t)(a2 + 2);
  if (v6 == 1 || *(double *)(a1 + 120) < *((double *)a2 + 13) - *(double *)(a1 + 16))
  {
    sub_19C1C9C8C(a1 + 24, v5);
    *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 13);
    *(_DWORD *)(a1 + 128) = 0;
    *(_BYTE *)(a1 + 8) = 0;
    return 0;
  }
  else
  {
    v8 = *(_DWORD *)(a1 + 128);
    *(_DWORD *)(a1 + 128) = v8 + 1;
    v9 = v8 >= v3;
    *(_BYTE *)(a1 + 8) = v9;
    return v9;
  }
}

void sub_19C1E6630(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C1E6644(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  char **v22;
  void *v23;
  void **v24;
  void **v25;
  void *v26;
  void **v27;
  void **v28;
  void *v29;
  void *v30;
  void **v31;
  void *v32;
  void **v33;
  void *__p;
  char **v35;
  char v36;
  void *v37;
  void **v38;
  void *v39;
  void **v40;
  void *v41;
  char **v42;
  char v43;
  uint64_t v44;
  _BYTE v45[24];
  _BYTE *v46;
  _BYTE v47[24];
  _BYTE *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  sub_19C1C2D98((uint64_t)&v30, a1);
  sub_19C1C2D98((uint64_t)&v37, (uint64_t)&v30);
  sub_19C1E7628((uint64_t)&v37, &v44);
  if (v36)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v35;
      v7 = __p;
      if (v35 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v35 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v32;
  if (v32)
  {
    v9 = v33;
    v10 = v32;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v32;
    }
    v33 = v8;
    operator delete(v10);
  }
  v11 = (void **)v30;
  if (v30)
  {
    v12 = v31;
    v13 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v30;
    }
    v31 = v11;
    operator delete(v13);
  }
  v14 = a2[3];
  if (!v14)
    goto LABEL_26;
  if ((_QWORD *)v14 != a2)
  {
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
LABEL_26:
    v46 = (_BYTE *)v14;
    goto LABEL_28;
  }
  v46 = v45;
  (*(void (**)(_QWORD *, _BYTE *))(*a2 + 24))(a2, v45);
LABEL_28:
  v15 = v47;
  v16 = a2[7];
  if (!v16)
  {
LABEL_31:
    v48 = (_BYTE *)v16;
    goto LABEL_33;
  }
  if ((_QWORD *)v16 != a2 + 4)
  {
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
    goto LABEL_31;
  }
  v48 = v47;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v16 + 24))(v16, v47);
LABEL_33:
  sub_19C1E7280((uint64_t)&v37, (uint64_t)v45, a3);
  if (v48 == v47)
  {
    v17 = 4;
  }
  else
  {
    if (!v48)
      goto LABEL_38;
    v17 = 5;
    v15 = v48;
  }
  (*(void (**)(_QWORD *))(*v15 + 8 * v17))(v15);
LABEL_38:
  v18 = v46;
  if (v46 == v45)
  {
    v19 = 4;
    v18 = v45;
  }
  else
  {
    if (!v46)
      goto LABEL_43;
    v19 = 5;
  }
  (*(void (**)(void))(*v18 + 8 * v19))();
LABEL_43:
  v20 = v44;
  v44 = 0;
  if (v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
  if (v43)
  {
    v21 = (char **)v41;
    if (v41)
    {
      v22 = v42;
      v23 = v41;
      if (v42 != v41)
      {
        do
          v22 = sub_19C17B808(v22 - 12);
        while (v22 != v21);
        v23 = v41;
      }
      v42 = v21;
      operator delete(v23);
    }
  }
  v24 = (void **)v39;
  if (v39)
  {
    v25 = v40;
    v26 = v39;
    if (v40 != v39)
    {
      do
      {
        if (*((char *)v25 - 17) < 0)
          operator delete(*(v25 - 5));
        v25 -= 5;
      }
      while (v25 != v24);
      v26 = v39;
    }
    v40 = v24;
    operator delete(v26);
  }
  v27 = (void **)v37;
  if (v37)
  {
    v28 = v38;
    v29 = v37;
    if (v38 != v37)
    {
      do
      {
        if (*((char *)v28 - 25) < 0)
          operator delete(*(v28 - 6));
        v28 -= 6;
      }
      while (v28 != v27);
      v29 = v37;
    }
    v38 = v27;
    operator delete(v29);
  }
}

void sub_19C1E697C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = *(_QWORD **)(v39 - 96);
  if (v41 == (_QWORD *)(v39 - 120))
  {
    v42 = 4;
    v41 = (_QWORD *)(v39 - 120);
  }
  else
  {
    if (!v41)
    {
      v43 = a39;
      a39 = 0;
      if (v43)
        goto LABEL_8;
      goto LABEL_5;
    }
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
  v43 = a39;
  a39 = 0;
  if (v43)
  {
LABEL_8:
    (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
    sub_19C1C2E88((uint64_t)&a24);
    _Unwind_Resume(a1);
  }
LABEL_5:
  sub_19C1C2E88((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_19C1E6A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  sub_19C1C2E88((uint64_t)&a24);
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C1E6A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C1E6A58(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  char **v22;
  void *v23;
  void **v24;
  void **v25;
  void *v26;
  void **v27;
  void **v28;
  void *v29;
  void *v30;
  void **v31;
  void *v32;
  void **v33;
  void *__p;
  char **v35;
  char v36;
  void *v37;
  void **v38;
  void *v39;
  void **v40;
  void *v41;
  char **v42;
  char v43;
  uint64_t v44;
  _BYTE v45[24];
  _BYTE *v46;
  _BYTE v47[24];
  _BYTE *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  sub_19C1C2D98((uint64_t)&v30, a1);
  sub_19C1C2D98((uint64_t)&v37, (uint64_t)&v30);
  sub_19C1F0480((uint64_t)&v37, &v44);
  if (v36)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v35;
      v7 = __p;
      if (v35 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v35 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v32;
  if (v32)
  {
    v9 = v33;
    v10 = v32;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v32;
    }
    v33 = v8;
    operator delete(v10);
  }
  v11 = (void **)v30;
  if (v30)
  {
    v12 = v31;
    v13 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v30;
    }
    v31 = v11;
    operator delete(v13);
  }
  v14 = a2[3];
  if (!v14)
    goto LABEL_26;
  if ((_QWORD *)v14 != a2)
  {
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
LABEL_26:
    v46 = (_BYTE *)v14;
    goto LABEL_28;
  }
  v46 = v45;
  (*(void (**)(_QWORD *, _BYTE *))(*a2 + 24))(a2, v45);
LABEL_28:
  v15 = v47;
  v16 = a2[7];
  if (!v16)
  {
LABEL_31:
    v48 = (_BYTE *)v16;
    goto LABEL_33;
  }
  if ((_QWORD *)v16 != a2 + 4)
  {
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
    goto LABEL_31;
  }
  v48 = v47;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v16 + 24))(v16, v47);
LABEL_33:
  sub_19C1F00D8((uint64_t)&v37, (uint64_t)v45, a3);
  if (v48 == v47)
  {
    v17 = 4;
  }
  else
  {
    if (!v48)
      goto LABEL_38;
    v17 = 5;
    v15 = v48;
  }
  (*(void (**)(_QWORD *))(*v15 + 8 * v17))(v15);
LABEL_38:
  v18 = v46;
  if (v46 == v45)
  {
    v19 = 4;
    v18 = v45;
  }
  else
  {
    if (!v46)
      goto LABEL_43;
    v19 = 5;
  }
  (*(void (**)(void))(*v18 + 8 * v19))();
LABEL_43:
  v20 = v44;
  v44 = 0;
  if (v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
  if (v43)
  {
    v21 = (char **)v41;
    if (v41)
    {
      v22 = v42;
      v23 = v41;
      if (v42 != v41)
      {
        do
          v22 = sub_19C17B808(v22 - 12);
        while (v22 != v21);
        v23 = v41;
      }
      v42 = v21;
      operator delete(v23);
    }
  }
  v24 = (void **)v39;
  if (v39)
  {
    v25 = v40;
    v26 = v39;
    if (v40 != v39)
    {
      do
      {
        if (*((char *)v25 - 17) < 0)
          operator delete(*(v25 - 5));
        v25 -= 5;
      }
      while (v25 != v24);
      v26 = v39;
    }
    v40 = v24;
    operator delete(v26);
  }
  v27 = (void **)v37;
  if (v37)
  {
    v28 = v38;
    v29 = v37;
    if (v38 != v37)
    {
      do
      {
        if (*((char *)v28 - 25) < 0)
          operator delete(*(v28 - 6));
        v28 -= 6;
      }
      while (v28 != v27);
      v29 = v37;
    }
    v38 = v27;
    operator delete(v29);
  }
}

void sub_19C1E6D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = *(_QWORD **)(v39 - 96);
  if (v41 == (_QWORD *)(v39 - 120))
  {
    v42 = 4;
    v41 = (_QWORD *)(v39 - 120);
  }
  else
  {
    if (!v41)
    {
      v43 = a39;
      a39 = 0;
      if (v43)
        goto LABEL_8;
      goto LABEL_5;
    }
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
  v43 = a39;
  a39 = 0;
  if (v43)
  {
LABEL_8:
    (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
    sub_19C1C2E88((uint64_t)&a24);
    _Unwind_Resume(a1);
  }
LABEL_5:
  sub_19C1C2E88((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_19C1E6E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  sub_19C1C2E88((uint64_t)&a24);
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C1E6E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C1E6E6C(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  char **v22;
  void *v23;
  void **v24;
  void **v25;
  void *v26;
  void **v27;
  void **v28;
  void *v29;
  void *v30;
  void **v31;
  void *v32;
  void **v33;
  void *__p;
  char **v35;
  char v36;
  void *v37;
  void **v38;
  void *v39;
  void **v40;
  void *v41;
  char **v42;
  char v43;
  uint64_t v44;
  _BYTE v45[24];
  _BYTE *v46;
  _BYTE v47[24];
  _BYTE *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  sub_19C1C2D98((uint64_t)&v30, a1);
  sub_19C1C2D98((uint64_t)&v37, (uint64_t)&v30);
  sub_19C1F8F84((uint64_t)&v37, &v44);
  if (v36)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v35;
      v7 = __p;
      if (v35 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v35 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v32;
  if (v32)
  {
    v9 = v33;
    v10 = v32;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v32;
    }
    v33 = v8;
    operator delete(v10);
  }
  v11 = (void **)v30;
  if (v30)
  {
    v12 = v31;
    v13 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v30;
    }
    v31 = v11;
    operator delete(v13);
  }
  v14 = a2[3];
  if (!v14)
    goto LABEL_26;
  if ((_QWORD *)v14 != a2)
  {
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
LABEL_26:
    v46 = (_BYTE *)v14;
    goto LABEL_28;
  }
  v46 = v45;
  (*(void (**)(_QWORD *, _BYTE *))(*a2 + 24))(a2, v45);
LABEL_28:
  v15 = v47;
  v16 = a2[7];
  if (!v16)
  {
LABEL_31:
    v48 = (_BYTE *)v16;
    goto LABEL_33;
  }
  if ((_QWORD *)v16 != a2 + 4)
  {
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
    goto LABEL_31;
  }
  v48 = v47;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v16 + 24))(v16, v47);
LABEL_33:
  sub_19C1F8BDC((uint64_t)&v37, (uint64_t)v45, a3);
  if (v48 == v47)
  {
    v17 = 4;
  }
  else
  {
    if (!v48)
      goto LABEL_38;
    v17 = 5;
    v15 = v48;
  }
  (*(void (**)(_QWORD *))(*v15 + 8 * v17))(v15);
LABEL_38:
  v18 = v46;
  if (v46 == v45)
  {
    v19 = 4;
    v18 = v45;
  }
  else
  {
    if (!v46)
      goto LABEL_43;
    v19 = 5;
  }
  (*(void (**)(void))(*v18 + 8 * v19))();
LABEL_43:
  v20 = v44;
  v44 = 0;
  if (v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
  if (v43)
  {
    v21 = (char **)v41;
    if (v41)
    {
      v22 = v42;
      v23 = v41;
      if (v42 != v41)
      {
        do
          v22 = sub_19C17B808(v22 - 12);
        while (v22 != v21);
        v23 = v41;
      }
      v42 = v21;
      operator delete(v23);
    }
  }
  v24 = (void **)v39;
  if (v39)
  {
    v25 = v40;
    v26 = v39;
    if (v40 != v39)
    {
      do
      {
        if (*((char *)v25 - 17) < 0)
          operator delete(*(v25 - 5));
        v25 -= 5;
      }
      while (v25 != v24);
      v26 = v39;
    }
    v40 = v24;
    operator delete(v26);
  }
  v27 = (void **)v37;
  if (v37)
  {
    v28 = v38;
    v29 = v37;
    if (v38 != v37)
    {
      do
      {
        if (*((char *)v28 - 25) < 0)
          operator delete(*(v28 - 6));
        v28 -= 6;
      }
      while (v28 != v27);
      v29 = v37;
    }
    v38 = v27;
    operator delete(v29);
  }
}

void sub_19C1E71A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = *(_QWORD **)(v39 - 96);
  if (v41 == (_QWORD *)(v39 - 120))
  {
    v42 = 4;
    v41 = (_QWORD *)(v39 - 120);
  }
  else
  {
    if (!v41)
    {
      v43 = a39;
      a39 = 0;
      if (v43)
        goto LABEL_8;
      goto LABEL_5;
    }
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
  v43 = a39;
  a39 = 0;
  if (v43)
  {
LABEL_8:
    (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
    sub_19C1C2E88((uint64_t)&a24);
    _Unwind_Resume(a1);
  }
LABEL_5:
  sub_19C1C2E88((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_19C1E724C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  sub_19C1C2E88((uint64_t)&a24);
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C1E7268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char **sub_19C1E7280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  BOOL v18;
  void *v20;
  _BYTE v21[4];
  _BYTE v22[12];
  _OWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  double v26;
  char *v27[2];
  int v28;
  char *v29[12];
  BOOL (**v30)(uint64_t, _DWORD *);
  char v31;
  int v32;
  BOOL (**v33)(uint64_t, int *);
  char v34;
  uint64_t v35;
  int v36;
  uint64_t *v37[13];
  int v38;

  v6 = *(_DWORD *)(a1 + 56);
  v7 = *(_DWORD *)(a1 + 60);
  v8 = *(_QWORD *)(a1 + 64);
  v21[0] = 0;
  *(_DWORD *)v22 = v7;
  *(_QWORD *)&v22[4] = v8;
  memset(v23, 0, sizeof(v23));
  v24 = v25;
  v25[0] = 0;
  v26 = 0.0;
  v27[0] = 0;
  v25[1] = 0;
  v25[2] = &v26;
  v28 = 0;
  v31 = 0;
  v30 = (BOOL (**)(uint64_t, _DWORD *))&unk_1E3D21888;
  v32 = v6;
  v34 = 0;
  v36 = HIDWORD(v8);
  v35 = *(_QWORD *)v22;
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D21900;
  sub_19C1C5D14(v37, (uint64_t)v23);
  v37[12] = (uint64_t *)v27[1];
  v38 = v28;
  v20 = &unk_1E3D21900;
  sub_19C17B808((char **)v23);
  v9 = *(_DWORD *)(a1 + 72);
  (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
  v10 = *(_QWORD *)(a2 + 24);
  if (!v10)
    goto LABEL_16;
  v11 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v10 + 48))(v10, v29);
  (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
  std::chrono::steady_clock::now();
  LODWORD(v20) = 1;
  sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
  v26 = v11;
  sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
  if (1 % v9)
    goto LABEL_5;
  v12 = *(_QWORD *)(a2 + 56);
  if (!v12)
LABEL_17:
    sub_19C1D6A94();
  if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v12 + 48))(v12, &v20) & 1) == 0)
  {
LABEL_5:
    if (!(*v30)((uint64_t)&v30, &v20))
    {
      v13 = (*v33)((uint64_t)&v33, (int *)&v20);
      sub_19C17B808(v27);
      sub_19C17B808((char **)v21);
      sub_19C17B808(v29);
      if (v13)
        goto LABEL_15;
      v14 = 2;
      while (1)
      {
        (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
        v15 = *(_QWORD *)(a2 + 24);
        if (!v15)
          break;
        v16 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v15 + 48))(v15, v29);
        (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
        std::chrono::steady_clock::now();
        std::chrono::steady_clock::now();
        LODWORD(v20) = v14;
        sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
        v26 = v16;
        sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
        if (!(v14 % v9))
        {
          v17 = *(_QWORD *)(a2 + 56);
          if (!v17)
            goto LABEL_17;
          if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v17 + 48))(v17, &v20) & 1) != 0)
            goto LABEL_6;
        }
        if ((*v30)((uint64_t)&v30, &v20))
          goto LABEL_6;
        v18 = (*v33)((uint64_t)&v33, (int *)&v20);
        sub_19C17B808(v27);
        sub_19C17B808((char **)v21);
        sub_19C17B808(v29);
        ++v14;
        if (v18)
          goto LABEL_15;
      }
LABEL_16:
      sub_19C1D6A94();
    }
  }
LABEL_6:
  sub_19C17B808(v27);
  sub_19C17B808((char **)v21);
  sub_19C17B808(v29);
LABEL_15:
  sub_19C1D6818(*(_QWORD *)(a1 + 120), a3);
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D21900;
  return sub_19C17B808((char **)v37);
}

void sub_19C1E75AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char *a37)
{
  char **v37;
  char **v38;
  char **v39;
  uint64_t v40;

  sub_19C17B808(v39);
  sub_19C17B808(v38);
  sub_19C17B808(&a37);
  *(_QWORD *)(v40 - 240) = &unk_1E3D21900;
  sub_19C17B808(v37);
  _Unwind_Resume(a1);
}

void sub_19C1E7628(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  std::logic_error *exception;
  uint64_t v5;

  v3 = *(_DWORD *)(a1 + 48);
  if (v3 == 1)
  {
    sub_19C1E76D0(a1, &v5);
    *a2 = v5;
  }
  else
  {
    if (v3)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1C79A4(exception, "Invalid optimizer in user config.");
      __cxa_throw(exception, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    }
    sub_19C1C76D4(a1, &v5);
    *a2 = v5;
  }
}

void sub_19C1E76BC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C1E76D0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  void **v15;
  void *v16;
  void **v17;
  void *__p;
  char **v19;
  char v20;

  v4 = operator new();
  sub_19C1C2D98((uint64_t)&v14, a1);
  sub_19C1E7838(v4, (uint64_t *)&v14);
  *a2 = v4;
  if (v20)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v19;
      v7 = __p;
      if (v19 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v19 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v16;
  if (v16)
  {
    v9 = v17;
    v10 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v16;
    }
    v17 = v8;
    operator delete(v10);
  }
  v11 = (void **)v14;
  if (v14)
  {
    v12 = v15;
    v13 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v14;
    }
    v15 = v11;
    operator delete(v13);
  }
}

void sub_19C1E7808(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  va_list va;

  va_start(va, a2);
  sub_19C1C2E88((uint64_t)va);
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_19C1E7824(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1E7838(uint64_t a1, uint64_t *a2)
{
  char **v4;
  char **v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  int v13;
  int v14;
  char ***v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  char **v38;
  char **v39;
  char **v40;
  void **v41;
  void **v42;
  void *v43;
  void **v44;
  void **v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t **v51;
  uint64_t **v52;
  uint64_t v53;
  uint64_t *v54;
  void *v56;
  void **v57;
  uint64_t v58;
  void *v59;
  void **v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  void *v64;
  void **v65;
  void *v66;
  void **v67;
  void *__p;
  char **v69;
  char v70;

  sub_19C1C2D98((uint64_t)&v64, (uint64_t)a2);
  *(_QWORD *)a1 = &unk_1E3D214F8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_19C1C2D98(a1 + 32, (uint64_t)&v64);
  if (v70)
  {
    v4 = (char **)__p;
    if (__p)
    {
      v5 = v69;
      v6 = __p;
      if (v69 != __p)
      {
        do
          v5 = sub_19C17B808(v5 - 12);
        while (v5 != v4);
        v6 = __p;
      }
      v69 = v4;
      operator delete(v6);
    }
  }
  v7 = (void **)v66;
  if (v66)
  {
    v8 = v67;
    v9 = v66;
    if (v67 != v66)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v66;
    }
    v67 = v7;
    operator delete(v9);
  }
  v10 = (void **)v64;
  if (v64)
  {
    v11 = v65;
    v12 = v64;
    if (v65 != v64)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v64;
    }
    v65 = v10;
    operator delete(v12);
  }
  *(_QWORD *)a1 = &unk_1E3D21798;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  v13 = sub_19C178A44(a2);
  v14 = sub_19C179558((uint64_t)a2);
  *(_DWORD *)(a1 + 176) = v14 + v13;
  sub_19C1E8640(a1 + 184, v14 + v13);
  *(_QWORD *)(a1 + 464) = 0;
  *(_QWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 488) = 0;
  *(_QWORD *)(a1 + 480) = 0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 316) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 444) = 0u;
  *(_QWORD *)(a1 + 528) = 0;
  *(_QWORD *)(a1 + 520) = 0;
  *(_DWORD *)(a1 + 544) = 0;
  *(_DWORD *)(a1 + 560) = -1;
  *(_QWORD *)(a1 + 536) = 0;
  *(_QWORD *)(a1 + 504) = &unk_1E3D21100;
  *(_QWORD *)(a1 + 512) = a1 + 176;
  *(_QWORD *)(a1 + 568) = 0;
  sub_19C1C81AC(a1 + 576);
  v15 = (char ***)(a1 + 10680);
  *(_QWORD *)(a1 + 10696) = 0;
  *(_OWORD *)(a1 + 10680) = 0u;
  if ((int)sub_19C179558(a1 + 32) < 1)
    sub_19C1E80DC(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)(a1 + 108), (uint64_t *)&v62);
  else
    sub_19C1E7F30(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)&v62);
  v16 = v62;
  *(_QWORD *)&v62 = 0;
  v17 = *(_QWORD *)(a1 + 568);
  *(_QWORD *)(a1 + 568) = v16;
  if (v17)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v62;
    *(_QWORD *)&v62 = 0;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v19 = 0;
    v20 = *(_DWORD *)(a1 + 108);
    *(_DWORD *)(a1 + 8168) = v20;
    v21 = 1;
    v22 = v20;
    do
    {
      v23 = 1812433253 * (v22 ^ (v22 >> 30));
      v22 = v23 + v21;
      *(_DWORD *)(a1 + 8172 + 4 * v19) = v19 + v23 + 1;
      ++v21;
      ++v19;
    }
    while (v19 != 623);
    *(_QWORD *)(a1 + 10664) = 0;
    *(_DWORD *)(a1 + 576) = v20;
    v24 = 1;
    v25 = 145;
    v26 = v20;
    do
    {
      v27 = 1812433253 * (v26 ^ (v26 >> 30));
      v26 = v27 + v24;
      *(_DWORD *)(a1 + 4 * v25) = v25 + v27 - 144;
      ++v24;
      ++v25;
    }
    while (v25 != 768);
    v28 = 0;
    *(_QWORD *)(a1 + 3072) = 0;
    *(_DWORD *)(a1 + 3104) = v20;
    v29 = 1;
    v30 = v20;
    do
    {
      v31 = 1812433253 * (v30 ^ (v30 >> 30));
      v30 = v31 + v29;
      *(_DWORD *)(a1 + 3108 + 4 * v28) = v28 + v31 + 1;
      ++v29;
      ++v28;
    }
    while (v28 != 623);
    v32 = 0;
    *(_QWORD *)(a1 + 5600) = 0;
    *(_DWORD *)(a1 + 5624) = v20;
    v33 = 1;
    do
    {
      v34 = 1812433253 * (v20 ^ (v20 >> 30));
      v20 = v34 + v33;
      *(_DWORD *)(a1 + 5628 + 4 * v32) = v32 + v34 + 1;
      ++v33;
      ++v32;
    }
    while (v32 != 623);
    *(_QWORD *)(a1 + 8120) = 0;
    sub_19C23B684();
  }
  v57 = 0;
  v58 = 0;
  v56 = 0;
  sub_19C17AF88(&v56, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 4));
  v59 = 0;
  v60 = 0;
  v61 = 0;
  sub_19C17B16C(&v59, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 56)) >> 3));
  v35 = sub_19C178A44((uint64_t *)(a1 + 32));
  v36 = 5 * (sub_19C179558(a1 + 32) + v35);
  if (*(_BYTE *)(a1 + 144))
  {
    v37 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
    if ((int)v36 <= v37)
      v36 = v37;
    else
      v36 = v36;
  }
  sub_19C17A144((uint64_t *)&v56, a1 + 576, v36, (char **)&v62);
  v38 = *v15;
  if (*v15)
  {
    v39 = *(char ***)(a1 + 10688);
    v40 = *v15;
    if (v39 != v38)
    {
      do
        v39 = sub_19C17B808(v39 - 12);
      while (v39 != v38);
      v40 = *v15;
    }
    *(_QWORD *)(a1 + 10688) = v38;
    operator delete(v40);
    *v15 = 0;
    *(_QWORD *)(a1 + 10688) = 0;
    *(_QWORD *)(a1 + 10696) = 0;
  }
  *(_OWORD *)v15 = v62;
  *(_QWORD *)(a1 + 10696) = v63;
  v63 = 0;
  v62 = 0uLL;
  v41 = (void **)v59;
  if (v59)
  {
    v42 = v60;
    v43 = v59;
    if (v60 != v59)
    {
      do
      {
        if (*((char *)v42 - 17) < 0)
          operator delete(*(v42 - 5));
        v42 -= 5;
      }
      while (v42 != v41);
      v43 = v59;
    }
    v60 = v41;
    operator delete(v43);
  }
  v44 = (void **)v56;
  if (v56)
  {
    v45 = v57;
    v46 = v56;
    if (v57 != v56)
    {
      do
      {
        if (*((char *)v45 - 25) < 0)
          operator delete(*(v45 - 6));
        v45 -= 6;
      }
      while (v45 != v44);
      v46 = v56;
    }
    v57 = v44;
    operator delete(v46);
  }
  if (*(_BYTE *)(a1 + 144))
  {
    v47 = *(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120);
    if (v47)
    {
      v48 = 0;
      v49 = 0;
      v50 = v47 / 96;
      do
      {
        while (1)
        {
          v52 = *(uint64_t ***)(a1 + 10688);
          v53 = *(_QWORD *)(a1 + 10680);
          if (v49 >= 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v52 - v53) >> 5))
            break;
          if (!*(_BYTE *)(a1 + 144))
            goto LABEL_77;
          sub_19C1C9C8C(v53 + v48, *(_QWORD *)(a1 + 120) + v48);
          ++v49;
          v48 += 96;
          if (v50 == v49)
            return a1;
        }
        if (!*(_BYTE *)(a1 + 144))
LABEL_77:
          sub_19C1D1E0C();
        v54 = (uint64_t *)(*(_QWORD *)(a1 + 120) + v48);
        if ((unint64_t)v52 < *(_QWORD *)(a1 + 10696))
          v51 = sub_19C1C1840(v52, v54) + 12;
        else
          v51 = sub_19C1D1CCC((uint64_t ***)(a1 + 10680), v54);
        *(_QWORD *)(a1 + 10688) = v51;
        ++v49;
        v48 += 96;
      }
      while (v50 != v49);
    }
  }
  return a1;
}

void sub_19C1E7E44(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  _QWORD *v3;
  _QWORD *v4;
  std::random_device *v5;
  void **v6;
  void **v8;
  uint64_t v9;
  void *v10;

  sub_19C17AA64(v6);
  sub_19C1C7C7C(v5);
  v8 = (void **)(v1 + 65);
  v9 = v1[71];
  v1[71] = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  *v4 = &unk_1E3D20F20;
  v10 = *v8;
  if (*v8)
  {
    v1[66] = v10;
    operator delete(v10);
  }
  sub_19C1EC3CC(v3);
  sub_19C1C9D28(v2);
  sub_19C1C7CC8(v1);
  _Unwind_Resume(a1);
}

void sub_19C1E7F30(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v6 = operator new();
  v14 = 0;
  v15 = 0;
  v13 = 0;
  sub_19C17AF88(&v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1E99B8(v6, a1, (uint64_t *)&v13);
  *a3 = v6;
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v17;
    v9 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v17 = v7;
    operator delete(v9);
  }
  v10 = (void **)v13;
  if (v13)
  {
    v11 = v14;
    v12 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v13;
    }
    v14 = v10;
    operator delete(v12);
  }
}

void sub_19C1E8088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1E80A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1E80DC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  void **v9;
  void **v10;
  void *v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  uint64_t v17;
  void *__p;
  void **v19;
  uint64_t v20;

  v8 = operator new();
  v16 = 0;
  v17 = 0;
  v15 = 0;
  sub_19C17AF88(&v15, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1EAD20(v8, a1, (uint64_t *)&v15, *a3);
  *a4 = v8;
  v9 = (void **)__p;
  if (__p)
  {
    v10 = v19;
    v11 = __p;
    if (v19 != __p)
    {
      do
      {
        if (*((char *)v10 - 17) < 0)
          operator delete(*(v10 - 5));
        v10 -= 5;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v19 = v9;
    operator delete(v11);
  }
  v12 = (void **)v15;
  if (v15)
  {
    v13 = v16;
    v14 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v13 - 25) < 0)
          operator delete(*(v13 - 6));
        v13 -= 6;
      }
      while (v13 != v12);
      v14 = v15;
    }
    v16 = v12;
    operator delete(v14);
  }
}

void sub_19C1E8234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1E8250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1E828C(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_19C1EC47C(a1);
  operator delete(v1);
}

uint64_t **sub_19C1E82A0@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  signed int v8;
  char *v10[13];

  v4 = a1 + 8;
  v5 = 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3);
  v6 = a1 + 32;
  v7 = sub_19C178A44((uint64_t *)(a1 + 32));
  v8 = 5 * (sub_19C179558(v6) + v7);
  if (*(_BYTE *)(v4 + 136) && v8 <= (int)(-1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5)))
    v8 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
  if (v5 < v8)
    return sub_19C1C1840(a2, (uint64_t *)(*(_QWORD *)(a1 + 10680)+ 96 * (int)(-991146299 * ((*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3))));
  (*(void (**)(char **__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 568) + 16))(v10, *(_QWORD *)(a1 + 568), v4);
  sub_19C1C1840(a2, (uint64_t *)v10);
  return (uint64_t **)sub_19C17B808(v10);
}

void sub_19C1E83B8(uint64_t a1, __int128 **a2, double a3)
{
  double v6;
  double v7;
  double v8;
  double v9;
  unint64_t v10;
  void *v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t **v20;
  uint64_t **v21;
  uint64_t **v22;
  double v23;
  double v24;
  double v25;
  void *__p;
  _BYTE *v27;
  int v28;
  uint64_t *v29[12];
  double v30;

  sub_19C1CBD8C(a2, (uint64_t)&__p);
  v6 = sub_19C1EA958(a1 + 176, (const double **)&__p);
  v8 = sqrt(v7);
  v24 = v8;
  v25 = v6;
  v9 = erfc((v6 - *(double *)(a1 + 552)) * -0.707106781 / v8) * 0.5;
  v23 = v9;
  v10 = *(_QWORD *)(a1 + 160);
  if (v10 >= *(_QWORD *)(a1 + 168))
  {
    v15 = sub_19C1D2BAC((uint64_t *)(a1 + 152), (uint64_t)&__p, &v25, (uint64_t *)&v24, (uint64_t *)&v23);
  }
  else
  {
    *(_QWORD *)v10 = 0;
    *(_QWORD *)(v10 + 8) = 0;
    *(_QWORD *)(v10 + 16) = 0;
    v11 = __p;
    v12 = v27 - (_BYTE *)__p;
    if (v27 != __p)
    {
      if (v12 < 0)
        sub_19C07DA0C();
      v13 = (char *)operator new(v27 - (_BYTE *)__p);
      *(_QWORD *)v10 = v13;
      *(_QWORD *)(v10 + 8) = v13;
      v14 = &v13[8 * (v12 >> 3)];
      *(_QWORD *)(v10 + 16) = v14;
      memcpy(v13, v11, v12);
      *(_QWORD *)(v10 + 8) = v14;
    }
    *(_DWORD *)(v10 + 24) = v28;
    *(double *)(v10 + 32) = v6;
    *(double *)(v10 + 40) = v8;
    *(double *)(v10 + 48) = v9;
    v15 = v10 + 56;
    *(_QWORD *)(a1 + 160) = v10 + 56;
  }
  *(_QWORD *)(a1 + 160) = v15;
  v16 = *(int *)(a1 + 488);
  v17 = v16 + 1;
  *(_DWORD *)(a1 + 488) = v16 + 1;
  v18 = *(_QWORD *)(a1 + 464);
  v19 = (*(_QWORD *)(a1 + 472) - v18) >> 3;
  if (v16 + 1 <= v19)
  {
    if (v16 + 1 < v19)
      *(_QWORD *)(a1 + 472) = v18 + 8 * v16 + 8;
  }
  else
  {
    sub_19C17C9D8(a1 + 464, v16 + 1 - v19);
    v17 = *(int *)(a1 + 488);
    v18 = *(_QWORD *)(a1 + 464);
  }
  *(double *)(v18 + 8 * v17 - 8) = a3;
  sub_19C1EC5F4(a1 + 176, (uint64_t)&__p);
  sub_19C1ED7A4(a1 + 496, a1 + 176);
  sub_19C1E8890(a1 + 504);
  sub_19C1C1840(v29, (uint64_t *)a2);
  v30 = a3;
  v20 = *(uint64_t ***)(a1 + 16);
  if ((unint64_t)v20 >= *(_QWORD *)(a1 + 24))
  {
    v22 = sub_19C1C907C((uint64_t ***)(a1 + 8), (uint64_t *)v29);
  }
  else
  {
    v21 = sub_19C1C1840(v20, (uint64_t *)v29);
    *((double *)v21 + 12) = v30;
    v22 = v21 + 13;
  }
  *(_QWORD *)(a1 + 16) = v22;
  sub_19C17B808((char **)v29);
  if (__p)
  {
    v27 = __p;
    operator delete(__p);
  }
}

void sub_19C1E85B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  sub_19C17B808(&a16);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

_QWORD *sub_19C1E8600(_QWORD *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[3];
  if (v3)
  {
    a1[4] = v3;
    operator delete(v3);
  }
  return a1;
}

uint64_t sub_19C1E8640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  size_t v5;
  char *v6;
  int v7;
  _QWORD *v8;
  unint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  long double *v15;
  double *v16;
  uint64_t v17;
  long double v18;
  long double v20;

  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_19C27A9D0;
  *(_QWORD *)(a1 + 24) = 0;
  v4 = a2 << 32;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v5 = 8 * (int)a2;
  if ((_DWORD)a2)
  {
    if ((a2 & 0x80000000) != 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * (int)a2);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 40) = &v6[8 * (int)a2];
    bzero(v6, v5);
    *(_QWORD *)(a1 + 32) = &v6[v5];
    *(_DWORD *)(a1 + 48) = a2;
    if (v4)
      goto LABEL_4;
  }
  else
  {
    v6 = 0;
    *(_DWORD *)(a1 + 48) = 0;
    if (v4)
LABEL_4:
      memset_pattern16(v6, &unk_19C277730, v5);
  }
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v7 = a2 + 1;
  if ((_DWORD)a2 == -1)
  {
    v8 = 0;
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 72) = 0;
    *(_DWORD *)(a1 + 80) = v7;
    MEMORY[0] = 0;
    if (!a2)
      return a1;
    goto LABEL_12;
  }
  if (v7 < 0)
    sub_19C07DA0C();
  v8 = operator new(8 * v7);
  bzero(v8, 8 * v7);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = &v8[v7];
  *(_QWORD *)(a1 + 72) = &v8[v7];
  *(_DWORD *)(a1 + 80) = v7;
  *v8 = 0;
  if (a2)
  {
LABEL_12:
    v9 = 0;
    if (a2 == 1)
      goto LABEL_16;
    v9 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v10 = v8 + 1;
    v11 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v12 = (__int128 *)v6;
    do
    {
      v13 = *v12++;
      v20 = log(*((long double *)&v13 + 1));
      *(double *)&v14 = log(*(long double *)&v13);
      *((long double *)&v14 + 1) = v20;
      *v10++ = v14;
      v11 -= 2;
    }
    while (v11);
    if (v9 != a2)
    {
LABEL_16:
      v15 = (long double *)&v8[v9 + 1];
      v16 = (double *)&v6[8 * v9];
      v17 = a2 - v9;
      do
      {
        v18 = *v16++;
        *v15++ = log(v18);
        --v17;
      }
      while (v17);
    }
  }
  return a1;
}

void sub_19C1E881C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1E8838(void *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v4;
    operator delete(v4);
  }
  sub_19C07AF7C(a1);
}

long double sub_19C1E8854(uint64_t a1, double a2, double a3)
{
  return erfc((a2 - *(double *)(a1 + 48)) * -0.707106781 / a3) * 0.5;
}

double sub_19C1E8888()
{
  return 0.0;
}

void sub_19C1E8890(uint64_t a1)
{
  _QWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double *v10;
  double *v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  char *v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  __int128 *v19;
  _OWORD *v20;
  unint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const double *v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  double *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  double *v44;
  uint64_t v45;
  unint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  double *v52;
  uint64_t v53;
  __int128 v54;
  double *v55;
  double *v56;
  double v57;
  double *v58;
  double *v59;
  double v60;
  BOOL v61;
  char *v62;
  signed int v63;
  _OWORD *v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  _OWORD *v84;
  unint64_t v85;
  __int128 v86;
  unint64_t v87;
  uint64_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v93;
  uint64_t v94;
  void *__p;
  int v96[2];
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  double *v104;
  uint64_t v105;
  double *v106;
  double *v107;
  double *v108;
  uint64_t v109;
  unsigned int v110;

  v104 = 0;
  v105 = 0;
  v106 = 0;
  v1 = *(_QWORD **)(a1 + 8);
  v101 = 0;
  v102 = 0;
  v100 = 0;
  v3 = (_BYTE *)v1[12];
  v2 = (_BYTE *)v1[13];
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(v2 - v3);
    v6 = &v5[8 * (v4 >> 3)];
    v100 = v5;
    v102 = v6;
    memcpy(v5, v3, v4);
    v101 = v6;
  }
  v7 = v1[15];
  v103 = v7;
  if (!(_DWORD)v7)
  {
    v55 = 0;
    v58 = 0;
    *(_DWORD *)(a1 + 56) = 0;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v90 = (int)v7;
  v91 = v7;
  v13 = 8 * (v7 >> 32);
  v88 = v7 >> 32;
  v89 = v13;
  v87 = (v7 >> 32) & 0xFFFFFFFFFFFFFFFCLL;
  v93 = HIDWORD(v7);
  v94 = 16;
  do
  {
    v14 = *(_QWORD *)(a1 + 8);
    v15 = v100;
    __p = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    if (!(_DWORD)v93)
    {
      v16 = 0;
      v108 = 0;
      v109 = 0;
      v107 = 0;
      v110 = 0;
      goto LABEL_27;
    }
    if (v7 < 0)
      sub_19C07DA0C();
    v16 = operator new(v13);
    bzero(v16, v13);
    if ((unint64_t)v7 >> 33 < 3)
    {
      v17 = 0;
      v18 = v88;
      goto LABEL_17;
    }
    v18 = v88;
    if ((unint64_t)((char *)v16 - &v100[v13 * v12]) < 0x20)
    {
      v17 = 0;
LABEL_17:
      v23 = v18 - v17;
      v24 = 8 * v17;
      v25 = (_QWORD *)v16 + v17;
      v26 = (uint64_t *)&v15[v8 + v24];
      do
      {
        v27 = *v26++;
        *v25++ = v27;
        --v23;
      }
      while (v23);
      goto LABEL_19;
    }
    v19 = (__int128 *)&v100[v94];
    v20 = v16 + 1;
    v21 = v87;
    do
    {
      v22 = *v19;
      *(v20 - 1) = *(v19 - 1);
      *v20 = v22;
      v19 += 2;
      v20 += 2;
      v21 -= 4;
    }
    while (v21);
    v17 = v87;
    if (v88 != v87)
      goto LABEL_17;
LABEL_19:
    v107 = 0;
    v108 = 0;
    v109 = 0;
    v110 = v93;
    sub_19C17C9D8((uint64_t)&v107, v18);
    v28 = v110;
    if ((int)v110 >= 1)
    {
      v29 = 0;
      v30 = v107;
      if (v110 < 4)
        goto LABEL_25;
      if ((unint64_t)((char *)v107 - (char *)v16) < 0x20)
        goto LABEL_25;
      v31 = 0;
      v29 = v110 & 0xFFFFFFFC;
      v32 = (8 * v110) & 0x7FFFFFFE0;
      do
      {
        v33 = v16[v31 / 0x10 + 1];
        v34 = (double *)&v30[v31 / 8];
        *(_OWORD *)v34 = v16[v31 / 0x10];
        *((_OWORD *)v34 + 1) = v33;
        v31 += 32;
      }
      while (v32 != v31);
      if (v29 != v28)
      {
LABEL_25:
        v35 = v28 - v29;
        v36 = v29 << 32;
        do
        {
          *(const double *)((char *)v30 + (v36 >> 29)) = *(const double *)((char *)v16 + (v36 >> 29));
          v36 += 0x100000000;
          --v35;
        }
        while (v35);
      }
    }
LABEL_27:
    v37 = sub_19C1E9060(v14, (const double **)&v107);
    v38 = v37;
    if (v11 < v10)
    {
      *v11++ = v37;
      v7 = v91;
      v13 = v89;
      v105 = (uint64_t)v11;
      v39 = v107;
      if (!v107)
        goto LABEL_30;
LABEL_29:
      v108 = v39;
      operator delete(v39);
      goto LABEL_30;
    }
    v40 = v11 - v9;
    v41 = v40 + 1;
    if ((unint64_t)(v40 + 1) >> 61)
      sub_19C07DA0C();
    if (((char *)v10 - (char *)v9) >> 2 > v41)
      v41 = ((char *)v10 - (char *)v9) >> 2;
    if ((unint64_t)((char *)v10 - (char *)v9) >= 0x7FFFFFFFFFFFFFF8)
      v42 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v42 = v41;
    if (v42)
    {
      if (v42 >> 61)
        sub_19C07C7FC();
      v43 = operator new(8 * v42);
      v44 = (double *)&v43[8 * v40];
      *v44 = v38;
      v45 = (uint64_t)(v44 + 1);
      if (v11 != v9)
      {
LABEL_41:
        v46 = (char *)(v11 - 1) - (char *)v9;
        if (v46 < 0x168
          || &v43[(char *)v11 - (char *)v9 - 8 - (v46 & 0xFFFFFFFFFFFFFFF8)] > &v43[(char *)v11 - (char *)v9 - 8]
          || (double *)((char *)v11 - (v46 & 0xFFFFFFFFFFFFFFF8) - 8) > v11 - 1
          || (unint64_t)((char *)v9 - v43) < 0x20)
        {
          v47 = v11;
          v7 = v91;
          v13 = v89;
        }
        else
        {
          v49 = (v46 >> 3) + 1;
          v50 = 8 * (v49 & 0x3FFFFFFFFFFFFFFCLL);
          v47 = &v11[v50 / 0xFFFFFFFFFFFFFFF8];
          v44 = (double *)((char *)v44 - v50);
          v51 = &v43[8 * v40 - 16];
          v52 = v11 - 2;
          v53 = v49 & 0x3FFFFFFFFFFFFFFCLL;
          v7 = v91;
          do
          {
            v54 = *(_OWORD *)v52;
            *(v51 - 1) = *((_OWORD *)v52 - 1);
            *v51 = v54;
            v51 -= 2;
            v52 -= 4;
            v53 -= 4;
          }
          while (v53);
          v13 = v89;
          if (v49 == (v49 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_44:
            v10 = (double *)&v43[8 * v42];
            v104 = v44;
            v105 = v45;
            v106 = v10;
            if (!v9)
              goto LABEL_46;
LABEL_45:
            operator delete(v9);
            goto LABEL_46;
          }
        }
        do
        {
          v48 = *((_QWORD *)v47-- - 1);
          *((_QWORD *)v44-- - 1) = v48;
        }
        while (v47 != v9);
        goto LABEL_44;
      }
    }
    else
    {
      v43 = 0;
      v44 = (double *)(8 * v40);
      *(double *)(8 * v40) = v37;
      v45 = 8 * v40 + 8;
      if (v11 != v9)
        goto LABEL_41;
    }
    v7 = v91;
    v13 = v89;
    v10 = (double *)&v43[8 * v42];
    v104 = v44;
    v105 = v45;
    v106 = v10;
    if (v9)
      goto LABEL_45;
LABEL_46:
    v9 = v44;
    v11 = (double *)v45;
    v105 = v45;
    v39 = v107;
    if (v107)
      goto LABEL_29;
LABEL_30:
    if (v16)
      operator delete(v16);
    ++v12;
    v94 += v13;
    v8 += v13;
  }
  while (v12 != v90);
  v55 = v104;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 120);
  if (v55 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v56 = v55 + 1;
  if (v55 + 1 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v57 = *v55;
  v58 = v55;
  v59 = v55 + 1;
  do
  {
    v60 = *v59++;
    v61 = v57 < v60;
    v57 = fmax(v57, v60);
    if (v61)
      v58 = v56;
    v56 = v59;
  }
  while (v59 != v11);
  v62 = v100;
  v63 = HIDWORD(v103);
  v107 = 0;
  v108 = 0;
  v109 = 0;
  if (!HIDWORD(v103))
  {
LABEL_81:
    v74 = 0;
    LODWORD(v73) = 0;
    v64 = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    __p = 0;
    v98 = 0;
    goto LABEL_82;
  }
LABEL_65:
  if (v63 < 0)
    sub_19C07DA0C();
  v64 = operator new(8 * v63);
  v65 = (v58 - v55) * v63;
  bzero(v64, 8 * v63);
  if (v63 < 0xA || (v66 = &v62[8 * v65], (unint64_t)((char *)v64 - v66) < 0x20))
  {
    v67 = 0;
    goto LABEL_69;
  }
  v67 = v63 & 0xFFFFFFFFFFFFFFFCLL;
  v83 = (__int128 *)(v66 + 16);
  v84 = v64 + 1;
  v85 = v67;
  do
  {
    v86 = *v83;
    *(v84 - 1) = *(v83 - 1);
    *v84 = v86;
    v83 += 2;
    v84 += 2;
    v85 -= 4;
  }
  while (v85);
  if (v67 != v63)
  {
LABEL_69:
    v68 = v63 - v67;
    v69 = 8 * v67;
    v70 = (_QWORD *)v64 + v67;
    v71 = &v62[8 * v65 + v69];
    do
    {
      v72 = *(_QWORD *)v71;
      v71 += 8;
      *v70++ = v72;
      --v68;
    }
    while (v68);
  }
  __p = 0;
  *(_QWORD *)v96 = 0;
  v97 = 0;
  v98 = v63;
  sub_19C17C9D8((uint64_t)&__p, v63);
  v73 = v98;
  v74 = (char *)__p;
  if ((int)v98 >= 1)
  {
    v75 = 0;
    if (v98 < 4)
      goto LABEL_77;
    if ((unint64_t)((_BYTE *)__p - (_BYTE *)v64) < 0x20)
      goto LABEL_77;
    v76 = 0;
    v75 = v98 & 0xFFFFFFFC;
    v77 = (8 * v98) & 0x7FFFFFFE0;
    do
    {
      v78 = v64[v76 / 0x10 + 1];
      v79 = &v74[v76];
      *(_OWORD *)v79 = v64[v76 / 0x10];
      *((_OWORD *)v79 + 1) = v78;
      v76 += 32;
    }
    while (v77 != v76);
    if (v75 != v73)
    {
LABEL_77:
      v80 = v73 - v75;
      v81 = v75 << 32;
      do
      {
        *(_QWORD *)&v74[v81 >> 29] = *(_QWORD *)((char *)v64 + (v81 >> 29));
        v81 += 0x100000000;
        --v80;
      }
      while (v80);
    }
  }
LABEL_82:
  v82 = *(_QWORD *)v58;
  v99 = *(_QWORD *)v58;
  if ((void **)(a1 + 16) != &__p)
  {
    sub_19C11EAD0((_QWORD *)(a1 + 16), v74, *(char **)v96, (uint64_t)(*(_QWORD *)v96 - (_QWORD)v74) >> 3);
    LODWORD(v73) = v98;
    v82 = v99;
    v74 = (char *)__p;
  }
  *(_DWORD *)(a1 + 40) = v73;
  *(_QWORD *)(a1 + 48) = v82;
  if (v74)
  {
    *(_QWORD *)v96 = v74;
    operator delete(v74);
  }
  if (v64)
    operator delete(v64);
  if (v62)
    operator delete(v62);
  if (v55)
  {
    v105 = (uint64_t)v55;
    operator delete(v55);
  }
}

void sub_19C1E8FA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  void *v28;
  void *v29;

  if (__p)
    operator delete(__p);
  if (v28)
    operator delete(v28);
  if (v29)
    operator delete(v29);
  if (a27)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

double sub_19C1E9060(uint64_t a1, const double **a2)
{
  double v3;
  double v4;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C1E9140(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v3 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v4 = __C;
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v4 + v3;
  }
  else
  {
    __A[0] = 0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)__A, *(int *)(a1 + 312));
    return *(double *)__A;
  }
}

void sub_19C1E9124(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1E9140(uint64_t a1@<X0>, const double **a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  signed int v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  double v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  char *v25;
  void *__p;
  char *v28;
  char *v29;
  signed int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = *(_DWORD *)(a1 + 120);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  *(_DWORD *)(a3 + 24) = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  if (v3)
  {
    if (v3 < 0)
      sub_19C07DA0C();
    v5 = v3;
    v6 = (char *)operator new(8 * v3);
    bzero(v6, 8 * v3);
    v7 = 0;
    v8 = 0;
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = &v6[8 * v3];
    *(_QWORD *)(a3 + 16) = &v6[8 * v3];
    *(_DWORD *)(a3 + 24) = v3;
    v25 = v6;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 96);
      v10 = *(_DWORD *)(a1 + 124);
      v31 = 0;
      v32 = 0;
      v33 = 0;
      if (!v10)
      {
        v11 = 0;
        v28 = 0;
        v29 = 0;
        __p = 0;
        v30 = 0;
        goto LABEL_14;
      }
      if (v10 < 0)
        sub_19C07DA0C();
      v11 = operator new(8 * v10);
      bzero(v11, 8 * v10);
      if (v10 >= 8 && (unint64_t)v11 - v9 - 8 * v8 * v10 >= 0x20)
      {
        v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
        v20 = (__int128 *)(v9 + v7 * v10 + 16);
        v21 = v11 + 1;
        v22 = v12;
        do
        {
          v23 = *v20;
          *(v21 - 1) = *(v20 - 1);
          *v21 = v23;
          v20 += 2;
          v21 += 2;
          v22 -= 4;
        }
        while (v22);
        if (v12 == v10)
          goto LABEL_12;
      }
      else
      {
        v12 = 0;
      }
      v13 = v10 - v12;
      v14 = 8 * v12;
      v15 = (_QWORD *)v11 + v12;
      v16 = (uint64_t *)(v9 + v14 + v7 * v10);
      do
      {
        v17 = *v16++;
        *v15++ = v17;
        --v13;
      }
      while (v13);
LABEL_12:
      __p = 0;
      v28 = 0;
      v30 = 0;
      v29 = 0;
      __p = operator new(8 * v10);
      v28 = (char *)__p + 8 * v10;
      v29 = v28;
      v30 = v10;
      memcpy(__p, v11, 8 * v10);
      v6 = v25;
LABEL_14:
      v18 = *(double *)(a1 + 24);
      v19 = sub_19C1E93E8(a1 + 8, (uint64_t)&__p, a2);
      *(long double *)&v6[8 * v8] = exp(v19 * -0.5) * v18;
      if (__p)
      {
        v28 = (char *)__p;
        operator delete(__p);
      }
      if (v11)
        operator delete(v11);
      ++v8;
      v7 += 8;
      if (v8 == v5)
        return;
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
}

void sub_19C1E9374(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1E939C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14)
{
  void *v14;

  if (__p)
  {
    operator delete(__p);
    if (!v14)
    {
LABEL_3:
      *(_QWORD *)(a10 + 8) = a11;
      operator delete(a11);
      _Unwind_Resume(a1);
    }
  }
  else if (!v14)
  {
    goto LABEL_3;
  }
  operator delete(v14);
  *(_QWORD *)(a10 + 8) = a11;
  operator delete(a11);
  _Unwind_Resume(a1);
}

double sub_19C1E93E8(uint64_t a1, uint64_t a2, const double **a3)
{
  uint64_t v6;
  double *v7;
  double *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  const void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  signed int v16;
  uint64_t v17;
  char *v18;
  double *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  double *v24;
  double v25;
  void *__p[4];
  double *__A[3];
  vDSP_Length v29;
  char *v30;
  char *v31;
  char *v32;
  signed int v33;
  double __C;
  char *v35;
  char *v36;
  signed int v37;
  double *__B;
  double *v39;
  double *v40;
  signed int v41;
  void *v42[3];
  int v43;

  sub_19C1E98BC(*(_DWORD *)(a1 + 48), *(_DWORD *)(a1 + 48), (uint64_t)v42);
  v6 = *(int *)(a1 + 48);
  if ((_DWORD)v6)
  {
    v7 = *(double **)(a1 + 24);
    v8 = (double *)v42[0];
    v9 = 8 * v43 + 8;
    do
    {
      v10 = *v7++;
      *v8 = 1.0 / (v10 * v10);
      v8 = (double *)((char *)v8 + v9);
      --v6;
    }
    while (v6);
  }
  v31 = 0;
  v32 = 0;
  v30 = 0;
  v12 = *(const void **)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v13 = v11 - *(_QWORD *)a2;
  if (v11 == *(_QWORD *)a2)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - *(_QWORD *)a2);
    v15 = &v14[8 * (v13 >> 3)];
    v30 = v14;
    v32 = v15;
    memcpy(v14, v12, v13);
    v31 = v15;
  }
  v16 = *(_DWORD *)(a2 + 24);
  v33 = v16;
  vDSP_vsubD(*a3, 1, (const double *)v14, 1, (double *)v14, 1, v16);
  __C = 0.0;
  v35 = 0;
  v36 = 0;
  v17 = v15 - v14;
  if (v15 != v14)
  {
    if (v17 < 0)
      sub_19C07DA0C();
    v18 = (char *)operator new(v15 - v14);
    *(_QWORD *)&__C = v18;
    v36 = &v18[8 * (v17 >> 3)];
    memcpy(v18, v14, v15 - v14);
    v35 = v36;
    v37 = v16;
    v39 = 0;
    v40 = 0;
    __B = 0;
    if (!v16)
    {
      v41 = 0;
      v35 = v18;
      operator delete(v18);
      if (!v14)
        goto LABEL_23;
LABEL_22:
      v31 = v14;
      operator delete(v14);
      goto LABEL_23;
    }
LABEL_14:
    if (v16 < 0)
      sub_19C07DA0C();
    v19 = (double *)operator new(8 * v16);
    __B = v19;
    v40 = &v19[v16];
    bzero(v19, 8 * v16);
    v39 = v40;
    v41 = v16;
    if (v16 >= 4)
    {
      v21 = 0;
      v20 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = v20;
      do
      {
        v23 = *(_OWORD *)&v18[v21 * 8 + 16];
        v24 = &v19[v21];
        *(_OWORD *)v24 = *(_OWORD *)&v18[v21 * 8];
        *((_OWORD *)v24 + 1) = v23;
        v21 += 4;
        v22 -= 4;
      }
      while (v22);
      if (v20 == v16)
      {
LABEL_21:
        v35 = v18;
        operator delete(v18);
        if (!v14)
          goto LABEL_23;
        goto LABEL_22;
      }
    }
    else
    {
      v20 = 0;
    }
    do
    {
      v19[v20] = *(double *)&v18[8 * v20];
      ++v20;
    }
    while (v16 != v20);
    goto LABEL_21;
  }
  v18 = 0;
  v37 = v16;
  v39 = 0;
  v40 = 0;
  __B = 0;
  if (v16)
    goto LABEL_14;
  v41 = 0;
  if (v14)
    goto LABEL_22;
LABEL_23:
  sub_19C1CE998((uint64_t)&__B, (uint64_t)__p);
  sub_19C1E97B8((uint64_t)__p, (uint64_t)v42, (uint64_t)__A);
  vDSP_mmulD(__A[0], 1, __B, 1, &__C, 1, 1uLL, 1uLL, (int)v29);
  v25 = __C;
  if (__A[0])
  {
    __A[1] = __A[0];
    operator delete(__A[0]);
  }
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (__B)
  {
    v39 = __B;
    operator delete(__B);
  }
  if (v42[0])
  {
    v42[1] = v42[0];
    operator delete(v42[0]);
  }
  return v25;
}

void sub_19C1E96E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  uint64_t v28;
  void *v30;
  void *v31;
  void *v32;

  if (__p)
  {
    operator delete(__p);
    v30 = a11;
    if (!a11)
    {
LABEL_3:
      v31 = a27;
      if (!a27)
      {
LABEL_8:
        v32 = *(void **)(v28 - 112);
        if (v32)
        {
          *(_QWORD *)(v28 - 104) = v32;
          operator delete(v32);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_7:
      operator delete(v31);
      goto LABEL_8;
    }
  }
  else
  {
    v30 = a11;
    if (!a11)
      goto LABEL_3;
  }
  operator delete(v30);
  v31 = a27;
  if (!a27)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C1E97B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  char *v7;

  v6 = *(_DWORD *)(a2 + 28);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  if (v6)
  {
    if (v6 < 0)
      sub_19C07DA0C();
    v7 = (char *)operator new(8 * v6);
    *(_QWORD *)a3 = v7;
    *(_QWORD *)(a3 + 16) = &v7[8 * v6];
    bzero(v7, 8 * v6);
    *(_QWORD *)(a3 + 8) = &v7[8 * v6];
  }
  else
  {
    v7 = 0;
  }
  *(_DWORD *)(a3 + 24) = v6;
  vDSP_mmulD(*(const double **)a1, 1, *(const double **)a2, 1, (double *)v7, 1, 1uLL, v6, *(int *)(a1 + 24));
}

void sub_19C1E9884(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v2;

  if (v2)
  {
    *(_QWORD *)(v1 + 8) = v2;
    operator delete(v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C1E98A0(void *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  sub_19C07AF7C(a1);
}

void sub_19C1E98BC(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v6 = a2 * a1;
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  if (a2 * a1)
  {
    v7 = v6;
    if (v6 < 0)
      sub_19C07DA0C();
    v8 = 8 * v6;
    v9 = (char *)operator new(v8);
    *(_QWORD *)a3 = v9;
    *(_QWORD *)(a3 + 16) = &v9[8 * v7];
    bzero(v9, 8 * v7);
    *(_QWORD *)(a3 + 8) = &v9[v8];
  }
  else
  {
    v9 = 0;
  }
  *(_DWORD *)(a3 + 24) = a1;
  *(_DWORD *)(a3 + 28) = a2;
  v10 = a2 * (uint64_t)a1;
  v11 = v10 / a2;
  v12 = v10 % a2;
  if (v10 >= a2 || v12)
  {
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 1;
    do
    {
      *(_QWORD *)&v9[8 * v13 + 8 * v14 * a2] = 0;
      ++v15;
      v14 = v16 / a2;
      v13 = v15 - v14 * a2;
      ++v16;
    }
    while (v14 != v11 || v13 != v12);
  }
}

void sub_19C1E999C(void *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  sub_19C07AF7C(a1);
}

uint64_t sub_19C1E99B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void **v6;
  void **v7;
  void *v8;
  void **v9;
  void **v10;
  void *v11;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_19C17AF88(&v13, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21678;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v13, (uint64_t)v14, 0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (_BYTE *)v13) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v17, 0xCCCCCCCCCCCCCCCDLL * (((char *)v17 - (_BYTE *)__p) >> 3));
  v6 = (void **)__p;
  if (__p)
  {
    v7 = v17;
    v8 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v7 - 17) < 0)
          operator delete(*(v7 - 5));
        v7 -= 5;
      }
      while (v7 != v6);
      v8 = __p;
    }
    v17 = v6;
    operator delete(v8);
  }
  v9 = (void **)v13;
  if (v13)
  {
    v10 = v14;
    v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 25) < 0)
          operator delete(*(v10 - 6));
        v10 -= 6;
      }
      while (v10 != v9);
      v11 = v13;
    }
    v14 = v9;
    operator delete(v11);
  }
  *(_QWORD *)a1 = &unk_1E3D21408;
  *(_DWORD *)(a1 + 64) = 5;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_19C1E9B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;

  v11 = v10;
  if (*v11)
  {
    sub_19C2563D4(v9, *v11);
    sub_19C17A75C(&a9);
    _Unwind_Resume(a1);
  }
  sub_19C17A75C(&a9);
  _Unwind_Resume(a1);
}

void sub_19C1E9B98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    sub_19C25623C((uint64_t)&a9, a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_19C1E9BB4(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;

  *a1 = &unk_1E3D21408;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  return sub_19C1EA1DC(a1);
}

void sub_19C1E9C1C(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;
  _QWORD *v5;

  *a1 = &unk_1E3D21408;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  v5 = sub_19C1EA1DC(a1);
  operator delete(v5);
}

void sub_19C1E9C88(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  double *v15;
  double *v16;
  double *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v29;
  double v30;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD **v33;
  BOOL v34;
  uint64_t *v35;
  char **v36;
  char **v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40[4];
  uint64_t *v41;
  double *__A;
  double *v43;
  void *__p;
  char *v45;
  char *v46[3];
  char *v47[3];
  uint64_t *v48[12];
  char v49[8];
  _QWORD **v50;
  _QWORD *v51[2];
  uint64_t *v52;
  char **v53;
  double __C[2];

  sub_19C1EA2A4(a1);
  v6 = *(_QWORD *)(a1 + 72);
  if (v6 == *(_QWORD *)(a1 + 80))
  {
    v39 = a3;
    sub_19C1CBA2C(a2, &v52);
    sub_19C1EA538(a2, (uint64_t)v49);
    v7 = v50;
    if (v50 != v51)
    {
      do
      {
        v8 = *(_QWORD *)((char *)v7 + 28);
        sub_19C1C1840(v48, &v52[12 * (int)v8]);
        if (SHIDWORD(v8) >= 1)
        {
          v9 = 0;
          v10 = HIDWORD(v8) & ~(v8 >> 63);
          do
          {
            sub_19C1EA674(a1, (uint64_t *)v48, (uint64_t **)&__A);
            sub_19C17A814((char **)v48, (uint64_t)&__A);
            sub_19C098FBC((uint64_t)v47, v47[1]);
            sub_19C098FBC((uint64_t)v46, v46[1]);
            v11 = (char *)__p;
            if (__p)
            {
              v12 = v45;
              v13 = __p;
              if (v45 != __p)
              {
                do
                {
                  v14 = (void *)*((_QWORD *)v12 - 4);
                  if (v14)
                  {
                    *((_QWORD *)v12 - 3) = v14;
                    operator delete(v14);
                  }
                  if (*(v12 - 33) < 0)
                    operator delete(*((void **)v12 - 7));
                  v12 -= 56;
                }
                while (v12 != v11);
                v13 = __p;
              }
              v45 = v11;
              operator delete(v13);
            }
            v15 = __A;
            if (*(double *)&__A != 0.0)
            {
              v16 = v43;
              v17 = __A;
              if (v43 != __A)
              {
                do
                {
                  v18 = (void *)*((_QWORD *)v16 - 4);
                  if (v18)
                  {
                    *((_QWORD *)v16 - 3) = v18;
                    operator delete(v18);
                  }
                  if (*((char *)v16 - 33) < 0)
                    operator delete(*((void **)v16 - 7));
                  v16 -= 7;
                }
                while (v16 != v15);
                v17 = __A;
              }
              v43 = v15;
              operator delete(v17);
            }
            v41 = 0;
            v19 = *(_QWORD *)(a1 + 8);
            sub_19C1CBD8C((__int128 **)v48, (uint64_t)v40);
            v20 = *(_QWORD *)(v19 + 8);
            if (*(_DWORD *)(v20 + 120))
            {
              sub_19C1E9140(*(_QWORD *)(v19 + 8), (const double **)v40, (uint64_t)&__A);
              __C[0] = 0.0;
              vDSP_dotprD(__A, 1, *(const double **)(v20 + 256), 1, __C, (int)__p);
              v21 = __C[0];
              __C[0] = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, __C, *(int *)(v20 + 312));
              v22 = __C[0];
              sub_19C1EAB2C(v20, (const double **)v40, (uint64_t)&__A);
              v24 = v23;
              v25 = *(double *)(v20 + 16);
              if (*(double *)&__A != 0.0)
              {
                v43 = __A;
                operator delete(__A);
              }
              v26 = v22 + v21;
              v27 = v25 + v24;
            }
            else
            {
              *(double *)&__A = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, (double *)&__A, *(int *)(v20 + 312));
              v26 = *(double *)&__A;
              v27 = sub_19C1EAA60(v20, (const double **)v40);
            }
            v28 = sqrt(v27);
            if (v28 < 0.00000001 || (v29 = *(_DWORD *)(*(_QWORD *)(v19 + 8) + 120), v29 <= 0))
            {
              v30 = (*(double (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            }
            else
            {
              if (*(_DWORD *)(v19 + 56) != v29)
                (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
              (**(void (***)(uint64_t, double, double))v19)(v19, v26, v28);
            }
            v31 = *(uint64_t **)&v30;
            if (v40[0])
            {
              v40[1] = v40[0];
              operator delete(v40[0]);
            }
            v41 = v31;
            sub_19C1CC134((int *)(a1 + 64), (uint64_t *)v48, &v41);
            ++v9;
          }
          while (v10 != v9);
        }
        sub_19C17B808((char **)v48);
        v32 = (_QWORD *)v7[1];
        if (v32)
        {
          do
          {
            v33 = (_QWORD **)v32;
            v32 = (_QWORD *)*v32;
          }
          while (v32);
        }
        else
        {
          do
          {
            v33 = (_QWORD **)v7[2];
            v34 = *v33 == v7;
            v7 = v33;
          }
          while (!v34);
        }
        v7 = v33;
      }
      while (v33 != v51);
    }
    v35 = *(uint64_t **)(a1 + 72);
    sub_19C1C1840((uint64_t **)v39, v35);
    *(_QWORD *)(v39 + 96) = v35[12];
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    sub_19C07C924((uint64_t)&v50, v51[0]);
    v36 = (char **)v52;
    if (v52)
    {
      v37 = v53;
      v38 = v52;
      if (v53 != (char **)v52)
      {
        do
          v37 = sub_19C17B808(v37 - 12);
        while (v37 != v36);
        v38 = v52;
      }
      v53 = v36;
      operator delete(v38);
    }
  }
  else
  {
    sub_19C1C1840((uint64_t **)a3, *(uint64_t **)(a1 + 72));
    *(_QWORD *)(a3 + 96) = *(_QWORD *)(v6 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
  }
}

void sub_19C1EA0F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  char **v28;
  uint64_t v29;

  sub_19C17B808(v28);
  sub_19C07C924(a10, *(_QWORD **)(v29 - 184));
  sub_19C17AA64((void **)(v29 - 168));
  _Unwind_Resume(a1);
}

void sub_19C1EA190(char *a1@<X8>)
{
  a1[23] = 17;
  strcpy(a1, "genetic_optimizer");
}

void sub_19C1EA1B4(char *a1@<X8>)
{
  a1[23] = 21;
  strcpy(a1, "acquisition_optimizer");
}

_QWORD *sub_19C1EA1DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *a1 = &unk_1E3D21678;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 17) < 0)
          operator delete(*(void **)(v3 - 40));
        v3 -= 40;
      }
      while (v3 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  v5 = a1[2];
  if (v5)
  {
    v6 = a1[3];
    v7 = (void *)a1[2];
    if (v6 != v5)
    {
      do
      {
        if (*(char *)(v6 - 25) < 0)
          operator delete(*(void **)(v6 - 48));
        v6 -= 48;
      }
      while (v6 != v5);
      v7 = (void *)a1[2];
    }
    a1[3] = v5;
    operator delete(v7);
  }
  return a1;
}

void sub_19C1EA2A4(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  uint64_t *v11;
  uint64_t *v12;
  char **v13;
  uint64_t *v14;
  void *__p[4];
  uint64_t *v16;
  uint64_t *v17[13];
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;

  v18 = 5;
  v20 = 0;
  v21 = 0;
  v19 = 0;
  v3 = *(_QWORD *)(a1 + 72);
  v2 = (uint64_t *)(a1 + 72);
  if (v3 == *(_QWORD *)(a1 + 80))
  {
    v12 = 0;
    *(_DWORD *)(a1 + 64) = 5;
    if ((int *)(a1 + 64) == &v18)
      goto LABEL_18;
    goto LABEL_17;
  }
  do
  {
    sub_19C1C1840(v17, (uint64_t *)v3);
    v17[12] = *(uint64_t **)(v3 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)__p, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    v16 = 0;
    v4 = *(_QWORD *)(a1 + 8);
    sub_19C1CBD8C((__int128 **)v17, (uint64_t)__p);
    v5.n128_f64[0] = sub_19C1EA958(*(_QWORD *)(v4 + 8), (const double **)__p);
    v7 = sqrt(v6);
    if (v7 < 0.00000001 || (v8 = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 120), v8 <= 0))
    {
      v10 = (*(double (**)(uint64_t, __n128))(*(_QWORD *)v4 + 8))(v4, v5);
    }
    else
    {
      v9 = v5.n128_f64[0];
      if (*(_DWORD *)(v4 + 56) != v8)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      (**(void (***)(uint64_t, double, double))v4)(v4, v9, v7);
    }
    *(double *)&v11 = v10;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    v16 = v11;
    if (*(double *)&v11 > (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8)))
      sub_19C1CC134(&v18, (uint64_t *)v17, &v16);
    sub_19C17B808((char **)v17);
    v3 = *(_QWORD *)(a1 + 72);
  }
  while (v3 != *(_QWORD *)(a1 + 80));
  v12 = v19;
  *(_DWORD *)(a1 + 64) = v18;
  if ((int *)(a1 + 64) != &v18)
  {
LABEL_17:
    sub_19C1CC414(v2, v12, v20, 0x4EC4EC4EC4EC4EC5 * (v20 - v12));
    v12 = v19;
  }
LABEL_18:
  if (v12)
  {
    v13 = (char **)v20;
    v14 = v12;
    if (v20 != v12)
    {
      do
        v13 = sub_19C17B808(v13 - 13);
      while (v13 != (char **)v12);
      v14 = v19;
    }
    v20 = v12;
    operator delete(v14);
  }
}

void sub_19C1EA4D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_19C1CB740(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1EA4E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  sub_19C17B808((char **)va);
  sub_19C1CB740(v7 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1EA50C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v15;

  if (__p)
    operator delete(__p);
  sub_19C17B808(&a15);
  sub_19C1CB740(v15 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1EA538(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  int v5;
  void *__p[3];
  _QWORD v7[313];
  std::random_device v8;
  double *v9[3];

  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = a2 + 16;
  *(_QWORD *)(a2 + 24) = 0;
  sub_19C1CCB54(a1, __p);
  sub_19C17A140(v7, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v3 = 50;
  do
  {
    v5 = sub_19C1CCF6C((uint64_t)v9, (uint64_t)v7, v9);
    v4 = sub_19C1CCC40((int *)a2, &v5);
    ++*(_DWORD *)v4;
    --v3;
  }
  while (v3);
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
  std::random_device::~random_device(&v8);
}

void sub_19C1EA614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  _QWORD **v15;

  if (__p)
  {
    operator delete(__p);
    sub_19C07C924(v14, *v15);
    _Unwind_Resume(a1);
  }
  sub_19C07C924(v14, *v15);
  _Unwind_Resume(a1);
}

void sub_19C1EA674(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  void *v6[4];
  void *__p[4];
  void *v8[4];
  _OWORD v9[2];

  sub_19C1C1840(a3, a2);
  sub_19C1CD184((__int128 **)a2, (uint64_t)v8);
  sub_19C1EA800(a1, (uint64_t *)v8, v9);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v6);
  sub_19C1EA8AC(a1, (uint64_t *)v6, __p);
  sub_19C1CD7E0((uint64_t *)a3, (uint64_t *)v9);
  sub_19C1CD99C((uint64_t)a3, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v6[0])
  {
    v6[1] = v6[0];
    operator delete(v6[0]);
  }
  if (*(_QWORD *)&v9[0])
  {
    *((_QWORD *)&v9[0] + 1) = *(_QWORD *)&v9[0];
    operator delete(*(void **)&v9[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
}

void sub_19C1EA740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  char **v18;
  uint64_t v19;
  void *v21;
  void *v22;

  if (__p)
  {
    operator delete(__p);
    v21 = *(void **)(v19 - 64);
    if (!v21)
    {
LABEL_3:
      v22 = a17;
      if (!a17)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v21 = *(void **)(v19 - 64);
    if (!v21)
      goto LABEL_3;
  }
  *(_QWORD *)(v19 - 56) = v21;
  operator delete(v21);
  v22 = a17;
  if (!a17)
  {
LABEL_4:
    sub_19C17B808(v18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(v22);
  sub_19C17B808(v18);
  _Unwind_Resume(a1);
}

double sub_19C1EA800@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = (uint64_t *)(a1 + 16);
  if (sub_19C178A44((uint64_t *)(a1 + 16)))
  {
    sub_19C178B08(v5, (uint64_t *)v7);
    sub_19C239578(a2, (uint64_t)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1EA898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C1EA8AC@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = a1 + 16;
  if (sub_19C179558(a1 + 16))
  {
    sub_19C17961C(v5, (uint64_t *)v7);
    sub_19C23A200(a2, (uint64_t *)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1EA944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C1EA958(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C1E9140(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v4 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v5 = __C;
    sub_19C1EAB2C(a1, a2, (uint64_t)__A);
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v5 + v4;
  }
  else
  {
    v6 = sub_19C1E9060(a1, a2);
    sub_19C1EAA60(a1, a2);
  }
  return v6;
}

void sub_19C1EAA40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_19C1EAA60(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double v8;
  double v9;
  void *__p[4];

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C1E9140(a1, a2, (uint64_t)__p);
    sub_19C1EAB2C(a1, a2, (uint64_t)__p);
    v5 = v4;
    v6 = *(double *)(a1 + 16);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    return v6 + v5;
  }
  else
  {
    v8 = *(double *)(a1 + 24);
    v9 = sub_19C1E93E8(a1 + 8, (uint64_t)a2, a2);
    return *(double *)(a1 + 16) + exp(v9 * -0.5) * v8;
  }
}

void sub_19C1EAB10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1EAB2C(uint64_t a1, const double **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  _OWORD *v20;
  unsigned int v21;
  double v22;
  void *__p[3];
  int v24;
  double *__B[3];
  vDSP_Length __N;

  sub_19C1CE734(a1 + 192, (uint64_t)__p);
  v6 = *(unsigned int *)(a1 + 216);
  if ((int)v6 >= 1)
  {
    v7 = 0;
    v8 = *(_DWORD *)(a1 + 220);
    v9 = v24;
    v10 = 1;
    v11 = -1;
    v12 = __p[0];
    do
    {
      if (v8 <= v10)
        v13 = v10;
      else
        v13 = v8;
      v14 = v7 + 1;
      if ((int)v7 + 1 >= v8)
        goto LABEL_3;
      v15 = 0;
      v16 = v13 + v11;
      v17 = (int)v7 * (uint64_t)v9;
      if ((v13 + v11) < 4)
      {
        v18 = v7 + 1;
      }
      else
      {
        v18 = v7 + 1;
        if (v13 - (int)v7 + v10 - 2 >= v10)
        {
          v19 = 0;
          v15 = v16 & 0xFFFFFFFC;
          v18 = v14 + (v16 & 0xFFFFFFFC);
          do
          {
            v20 = &v12[v17 + v10 + v19];
            *v20 = 0uLL;
            v20[1] = 0uLL;
            v19 += 4;
          }
          while ((v16 & 0xFFFFFFFC) != v19);
          if (v16 == v15)
            goto LABEL_3;
        }
      }
      v21 = v13 - v15;
      do
      {
        v12[v17 + v18] = 0;
        v18 = ++v15 + v14;
        --v21;
      }
      while (v10 != v21);
LABEL_3:
      ++v7;
      ++v10;
      --v11;
    }
    while (v7 != v6);
  }
  sub_19C1CE5B4((uint64_t)__p, a3, (uint64_t)__B);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v22 = sub_19C1E93E8(a1 + 8, (uint64_t)a2, a2);
  __p[0] = 0;
  vDSP_dotprD(__B[0], 1, __B[0], 1, (double *)__p, (int)__N);
  if (__B[0])
  {
    __B[1] = __B[0];
    operator delete(__B[0]);
  }
  exp(v22 * -0.5);
}

void sub_19C1EACF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1EAD20(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  void *v32[4];
  void *v33[4];
  void *v34;
  void **v35;
  uint64_t v36;
  void *__p;
  void **v38;
  uint64_t v39;

  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_19C17AF88(&v34, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v38 = 0;
  v39 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21678;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v34, (uint64_t)v35, 0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (_BYTE *)v34) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v38, 0xCCCCCCCCCCCCCCCDLL * (((char *)v38 - (_BYTE *)__p) >> 3));
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v38;
    v10 = __p;
    if (v38 != __p)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v38 = v8;
    operator delete(v10);
  }
  v11 = (void **)v34;
  if (v34)
  {
    v12 = v35;
    v13 = v34;
    if (v35 != v34)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v34;
    }
    v35 = v11;
    operator delete(v13);
  }
  *(_QWORD *)a1 = &unk_1E3D21228;
  v14 = sub_19C178A44(a3);
  sub_19C1CF858(a1 + 64, v14);
  sub_19C1C81AC(a1 + 184);
  sub_19C178B08(a3, (uint64_t *)v32);
  sub_19C1D0468(a1 + 64, (uint64_t *)v32);
  sub_19C1D0594(a1 + 64, (uint64_t *)v33);
  if (v33[0])
  {
    v33[1] = v33[0];
    operator delete(v33[0]);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  if ((a4 & 0xFF00000000) != 0)
  {
    v15 = 0;
    *(_DWORD *)(a1 + 7776) = a4;
    v16 = 1;
    v17 = a4;
    do
    {
      v18 = 1812433253 * (v17 ^ (v17 >> 30));
      v17 = v18 + v16;
      *(_DWORD *)(a1 + 7780 + 4 * v15) = v15 + v18 + 1;
      ++v16;
      ++v15;
    }
    while (v15 != 623);
    *(_QWORD *)(a1 + 10272) = 0;
    *(_DWORD *)(a1 + 184) = a4;
    v19 = 1;
    v20 = 47;
    v21 = a4;
    do
    {
      v22 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v22 + v19;
      *(_DWORD *)(a1 + 4 * v20) = v20 + v22 - 46;
      ++v19;
      ++v20;
    }
    while (v20 != 670);
    v23 = 0;
    *(_QWORD *)(a1 + 2680) = 0;
    *(_DWORD *)(a1 + 2712) = a4;
    v24 = 1;
    v25 = a4;
    do
    {
      v26 = 1812433253 * (v25 ^ (v25 >> 30));
      v25 = v26 + v24;
      *(_DWORD *)(a1 + 2716 + 4 * v23) = v23 + v26 + 1;
      ++v24;
      ++v23;
    }
    while (v23 != 623);
    v27 = 0;
    *(_QWORD *)(a1 + 5208) = 0;
    *(_DWORD *)(a1 + 5232) = a4;
    v28 = 1;
    v29 = a4;
    do
    {
      v30 = 1812433253 * (v29 ^ (v29 >> 30));
      v29 = v30 + v28;
      *(_DWORD *)(a1 + 5236 + 4 * v27) = v27 + v30 + 1;
      ++v28;
      ++v27;
    }
    while (v27 != 623);
    *(_QWORD *)(a1 + 7728) = 0;
    sub_19C23B684();
  }
  return a1;
}

void sub_19C1EB03C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  sub_19C1CF8E8(v2);
  sub_19C1EA1DC(v1);
  _Unwind_Resume(a1);
}

void sub_19C1EB0D0(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_19C1EA1DC(v1);
  _Unwind_Resume(a1);
}

void sub_19C1EB0E8(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_19C1EB600(a1);
  operator delete(v1);
}

void sub_19C1EB0FC(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  double v6;
  void **v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t **v13;
  uint64_t **i;
  uint64_t **v15;
  char **v16;
  uint64_t **v17;
  char **v18;
  char **v19;
  void *v20;
  double v21;
  double v22;
  BOOL v23;
  char v24;
  __int128 **v25;
  char **v26;
  char *v27;
  void *__p;
  char **v29;
  uint64_t *v30[12];
  _OWORD v31[3];
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[2];
  double v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  __int128 **v43;
  char *v44;
  uint64_t **v45;
  uint64_t **v46;

  v32 = 0u;
  memset(v31, 0, sizeof(v31));
  *(_QWORD *)&v32 = (char *)&v32 + 8;
  v35[0] = 0;
  v35[1] = 0;
  v33 = 0;
  v34 = v35;
  v6 = (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8));
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)v31);
  *(double *)(a3 + 96) = v6;
  sub_19C17B808((char **)v31);
  v38 = 0;
  v39 = 0;
  v37 = 0;
  sub_19C17AF88(&v37, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 4));
  v40 = 0;
  v41 = 0;
  v42 = 0;
  sub_19C17B16C(&v40, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 3));
  sub_19C17A144((uint64_t *)&v37, a1 + 184, 5, (char **)&v43);
  v7 = v40;
  if (v40)
  {
    v8 = v41;
    v9 = v40;
    if (v41 != v40)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v40;
    }
    v41 = v7;
    operator delete(v9);
  }
  v10 = (uint64_t)v37;
  if (v37)
  {
    v11 = v38;
    v12 = v37;
    if ((void *)v38 != v37)
    {
      do
      {
        if (*(char *)(v11 - 25) < 0)
          operator delete(*(void **)(v11 - 48));
        v11 -= 48;
      }
      while (v11 != v10);
      v12 = v37;
    }
    v38 = v10;
    operator delete(v12);
  }
  sub_19C1EB6A8(a1, v43, (uint64_t)v31);
  sub_19C1C9C8C(a3, (uint64_t)v31);
  *(double *)(a3 + 96) = v36;
  sub_19C17B808((char **)v31);
  sub_19C1EB6A8(a1, v43 + 12, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1EB6A8(a1, v43 + 24, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1EB6A8(a1, v43 + 36, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1EB6A8(a1, v43 + 48, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1CCA84((uint64_t ***)&__p, a2);
  sub_19C1CCA84(&v45, (uint64_t **)&__p);
  v13 = v45;
  if (v45 != v46)
  {
    for (i = v45 + 13; i != v46; i += 13)
    {
      if (*((double *)v13 + 12) < *((double *)i + 12))
        v13 = i;
    }
  }
  sub_19C1C1840((uint64_t **)v31, (uint64_t *)v13);
  v36 = *((double *)v13 + 12);
  v15 = v45;
  if (v45)
  {
    v16 = (char **)v46;
    v17 = v45;
    if (v46 != v45)
    {
      do
        v16 = sub_19C17B808(v16 - 13);
      while (v16 != (char **)v15);
      v17 = v45;
    }
    v46 = v15;
    operator delete(v17);
  }
  sub_19C1C5D14(v30, (uint64_t)v31);
  sub_19C17B808((char **)v31);
  v18 = (char **)__p;
  if (__p)
  {
    v19 = v29;
    v20 = __p;
    if (v29 != __p)
    {
      do
        v19 = sub_19C17B808(v19 - 13);
      while (v19 != v18);
      v20 = __p;
    }
    v29 = v18;
    operator delete(v20);
  }
  sub_19C1EB6A8(a1, (__int128 **)v30, (uint64_t)v31);
  v21 = v36;
  v22 = *(double *)(a3 + 96);
  v23 = sub_19C1D16FC((uint64_t *)v31, v30);
  v24 = v21 <= v22 || v23;
  if ((v24 & 1) == 0)
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C17B808((char **)v30);
  v25 = v43;
  if (v43)
  {
    v26 = (char **)v44;
    v27 = (char *)v43;
    if (v44 != (char *)v43)
    {
      do
        v26 = sub_19C17B808(v26 - 12);
      while (v26 != (char **)v25);
      v27 = (char *)v43;
    }
    v44 = (char *)v25;
    operator delete(v27);
  }
}

void sub_19C1EB528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  char **v5;
  uint64_t v6;
  char *v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, char *);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  sub_19C17B808((char **)va1);
  sub_19C17B808((char **)va);
  sub_19C17AA64((void **)(v6 - 112));
  sub_19C17B808(v5);
  _Unwind_Resume(a1);
}

void sub_19C1EB5E0(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "direct_optimizer");
}

_QWORD *sub_19C1EB600(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = &unk_1E3D21228;
  std::random_device::~random_device((std::random_device *)(a1 + 10280));
  std::random_device::~random_device((std::random_device *)(a1 + 7736));
  std::random_device::~random_device((std::random_device *)(a1 + 5216));
  std::random_device::~random_device((std::random_device *)(a1 + 2688));
  *(_QWORD *)(a1 + 64) = &unk_1E3D21150;
  sub_19C23AA14(*(_QWORD *)(a1 + 72));
  v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(_QWORD *)(a1 + 136) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 104);
  if (v3)
  {
    *(_QWORD *)(a1 + 112) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 80);
  if (v4)
  {
    *(_QWORD *)(a1 + 88) = v4;
    operator delete(v4);
  }
  return sub_19C1EA1DC((_QWORD *)a1);
}

void sub_19C1EB6A8(uint64_t a1@<X0>, __int128 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float64x2_t *v9;
  char *v10;
  uint64_t v11;
  float64x2_t *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  int64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  int v25;
  double v26;
  double v27;
  void *v28[3];
  unsigned int v29;
  void *v30;
  char *v31;
  char *v32;
  int v33;
  void *v34;
  void *v35;
  void *__p[12];
  void *v37[4];
  _QWORD v38[2];

  v38[0] = a1;
  v38[1] = a2;
  v6 = a1 + 64;
  sub_19C1CD184(a2, (uint64_t)__p);
  sub_19C1EBA2C(v6, (uint64_t)v38, (uint64_t *)__p, (uint64_t)v37);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_19C1CD508((uint64_t)a2, (uint64_t)&v34);
  sub_19C1C1840((uint64_t **)__p, (uint64_t *)a2);
  sub_19C1CD7E0((uint64_t *)__p, (uint64_t *)v37);
  sub_19C1CD99C((uint64_t)__p, (uint64_t *)&v34);
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  v7 = *(_QWORD *)(a1 + 8);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v28);
  v8 = v29;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  if (!v29)
  {
    v33 = 0;
    goto LABEL_15;
  }
  if ((v29 & 0x80000000) != 0)
    sub_19C07DA0C();
  v9 = (float64x2_t *)operator new(8 * (int)v29);
  v30 = v9;
  v32 = (char *)&v9->f64[(int)v8];
  bzero(v9, 8 * (int)v8);
  v31 = (char *)&v9->f64[(int)v8];
  v33 = v8;
  v10 = (char *)v28[0];
  if (v8 < 8)
  {
    v11 = 0;
LABEL_13:
    v20 = v8 - v11;
    v21 = v11 << 32;
    do
    {
      *(double *)((char *)v9->f64 + (v21 >> 29)) = (double)*(int *)&v10[v21 >> 30];
      v21 += 0x100000000;
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
  v11 = v8 & 0xFFFFFFF8;
  v12 = v9 + 2;
  v13 = (char *)v28[0] + 16;
  v14 = v11;
  do
  {
    v15 = *((_OWORD *)v13 - 1);
    v16.i64[0] = (int)v15;
    v16.i64[1] = SDWORD1(v15);
    v17 = vcvtq_f64_s64(v16);
    v16.i64[0] = SDWORD2(v15);
    v16.i64[1] = SHIDWORD(v15);
    v18 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*(_OWORD *)v13;
    v16.i64[1] = (int)HIDWORD(*(_QWORD *)v13);
    v19 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*((_QWORD *)v13 + 1);
    v16.i64[1] = (int)HIDWORD(*(_OWORD *)v13);
    v12[-2] = v17;
    v12[-1] = v18;
    *v12 = v19;
    v12[1] = vcvtq_f64_s64(v16);
    v12 += 4;
    v13 += 32;
    v14 -= 8;
  }
  while (v14);
  if (v11 != v8)
    goto LABEL_13;
LABEL_15:
  sub_19C1CEDDC((uint64_t)v37, (uint64_t)&v30, (uint64_t)&v34);
  v22 = sub_19C1EA958(*(_QWORD *)(v7 + 8), (const double **)&v34);
  v24 = sqrt(v23);
  if (v24 < 0.00000001 || (v25 = *(_DWORD *)(*(_QWORD *)(v7 + 8) + 120), v25 <= 0))
  {
    v26 = (*(double (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  else
  {
    if (*(_DWORD *)(v7 + 56) != v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    (**(void (***)(uint64_t, double, double))v7)(v7, v22, v24);
  }
  v27 = v26;
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)__p);
  *(double *)(a3 + 96) = v27;
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  if (v30)
  {
    v31 = (char *)v30;
    operator delete(v30);
  }
  if (v28[0])
  {
    v28[1] = v28[0];
    operator delete(v28[0]);
  }
  sub_19C17B808((char **)__p);
  if (v37[0])
  {
    v37[1] = v37[0];
    operator delete(v37[0]);
  }
}

void sub_19C1EB954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v24;
  void *v25;

  if (a13)
  {
    operator delete(a13);
    v24 = __p;
    if (!__p)
    {
LABEL_4:
      sub_19C17B808((char **)&a21);
      v25 = *(void **)(v22 - 128);
      if (v25)
      {
        *(_QWORD *)(v22 - 120) = v25;
        operator delete(v25);
      }
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v24 = __p;
    if (!__p)
      goto LABEL_4;
  }
  operator delete(v24);
  goto LABEL_4;
}

void sub_19C1EBA2C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1EBF7C;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1EBE74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1EBC80);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

void sub_19C1EBF7C(uint64_t **a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  void *__p;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v18 = 0;
  v19 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    __p = 0;
    v18 = 0;
    v19 = 0;
    v20 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  __p = v8;
  v18 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v19 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v20 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1EC14C(a3, (uint64_t)&__p);
    if (__p)
    {
      v18 = (char *)__p;
      operator delete(__p);
    }
  }
  else
  {
    sub_19C1EC14C(a3, (uint64_t)&__p);
    __break(1u);
  }
}

void sub_19C1EC110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1EC130(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

uint64_t sub_19C1EC14C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  float64x2_t *v5;
  char *v6;
  uint64_t v7;
  float64x2_t *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  int64x2_t v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  int v21;
  double v22;
  double v23;
  void *v25[3];
  unsigned int v26;
  void *v27;
  char *v28;
  char *v29;
  int v30;
  void *__p[4];

  v3 = *(_QWORD *)(*a1 + 8);
  sub_19C1CD508(a1[1], (uint64_t)v25);
  v4 = v26;
  v28 = 0;
  v29 = 0;
  v27 = 0;
  if (!v26)
  {
    v30 = 0;
    goto LABEL_11;
  }
  if ((v26 & 0x80000000) != 0)
    sub_19C07DA0C();
  v5 = (float64x2_t *)operator new(8 * (int)v26);
  v27 = v5;
  v29 = (char *)&v5->f64[(int)v4];
  bzero(v5, 8 * (int)v4);
  v28 = (char *)&v5->f64[(int)v4];
  v30 = v4;
  v6 = (char *)v25[0];
  if (v4 < 8)
  {
    v7 = 0;
LABEL_9:
    v16 = v4 - v7;
    v17 = v7 << 32;
    do
    {
      *(double *)((char *)v5->f64 + (v17 >> 29)) = (double)*(int *)&v6[v17 >> 30];
      v17 += 0x100000000;
      --v16;
    }
    while (v16);
    goto LABEL_11;
  }
  v7 = v4 & 0xFFFFFFF8;
  v8 = v5 + 2;
  v9 = (char *)v25[0] + 16;
  v10 = v7;
  do
  {
    v11 = *((_OWORD *)v9 - 1);
    v12.i64[0] = (int)v11;
    v12.i64[1] = SDWORD1(v11);
    v13 = vcvtq_f64_s64(v12);
    v12.i64[0] = SDWORD2(v11);
    v12.i64[1] = SHIDWORD(v11);
    v14 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*(_OWORD *)v9;
    v12.i64[1] = (int)HIDWORD(*(_QWORD *)v9);
    v15 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*((_QWORD *)v9 + 1);
    v12.i64[1] = (int)HIDWORD(*(_OWORD *)v9);
    v8[-2] = v13;
    v8[-1] = v14;
    *v8 = v15;
    v8[1] = vcvtq_f64_s64(v12);
    v8 += 4;
    v9 += 32;
    v10 -= 8;
  }
  while (v10);
  if (v7 != v4)
    goto LABEL_9;
LABEL_11:
  sub_19C1CEDDC(a2, (uint64_t)&v27, (uint64_t)__p);
  v18 = sub_19C1EA958(*(_QWORD *)(v3 + 8), (const double **)__p);
  v20 = sqrt(v19);
  if (v20 < 0.00000001 || (v21 = *(_DWORD *)(*(_QWORD *)(v3 + 8) + 120), v21 <= 0))
  {
    v22 = (*(double (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  else
  {
    if (*(_DWORD *)(v3 + 56) != v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    (**(void (***)(uint64_t, double, double))v3)(v3, v18, v20);
  }
  v23 = v22;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v27)
  {
    v28 = (char *)v27;
    operator delete(v27);
  }
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
  return *(_QWORD *)&v23;
}

void sub_19C1EC34C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  void *v19;

  if (__p)
  {
    operator delete(__p);
    v19 = a9;
    if (!a9)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v19 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v19);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_19C1EC3CC(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v2 = (void *)a1[36];
  if (v2)
  {
    a1[37] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[32];
  if (v3)
  {
    a1[33] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[28];
  if (v4)
  {
    a1[29] = v4;
    operator delete(v4);
  }
  v5 = (void *)a1[24];
  if (v5)
  {
    a1[25] = v5;
    operator delete(v5);
  }
  v6 = (void *)a1[20];
  if (v6)
  {
    a1[21] = v6;
    operator delete(v6);
  }
  v7 = (void *)a1[16];
  if (v7)
  {
    a1[17] = v7;
    operator delete(v7);
  }
  v8 = (void *)a1[12];
  if (v8)
  {
    a1[13] = v8;
    operator delete(v8);
  }
  v9 = (void *)a1[8];
  if (v9)
  {
    a1[9] = v9;
    operator delete(v9);
  }
  v10 = (void *)a1[4];
  if (v10)
  {
    a1[5] = v10;
    operator delete(v10);
  }
  return a1;
}

uint64_t sub_19C1EC47C(uint64_t a1)
{
  char **v2;
  char **v3;
  char **v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char **v13;
  char **v14;
  void *v15;

  *(_QWORD *)a1 = &unk_1E3D21798;
  v2 = *(char ***)(a1 + 10680);
  if (v2)
  {
    v3 = *(char ***)(a1 + 10688);
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 12);
      while (v3 != v2);
      v4 = *(char ***)(a1 + 10680);
    }
    *(_QWORD *)(a1 + 10688) = v2;
    operator delete(v4);
  }
  std::random_device::~random_device((std::random_device *)(a1 + 10672));
  std::random_device::~random_device((std::random_device *)(a1 + 8128));
  std::random_device::~random_device((std::random_device *)(a1 + 5608));
  std::random_device::~random_device((std::random_device *)(a1 + 3080));
  v5 = *(_QWORD *)(a1 + 568);
  *(_QWORD *)(a1 + 568) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  *(_QWORD *)(a1 + 504) = &unk_1E3D20F20;
  v6 = *(void **)(a1 + 520);
  if (v6)
  {
    *(_QWORD *)(a1 + 528) = v6;
    operator delete(v6);
  }
  sub_19C1EC3CC((_QWORD *)(a1 + 176));
  v7 = *(_QWORD *)(a1 + 152);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 160);
    v9 = *(void **)(a1 + 152);
    if (v8 != v7)
    {
      v10 = *(_QWORD *)(a1 + 160);
      do
      {
        v12 = *(void **)(v10 - 56);
        v10 -= 56;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v8 - 48) = v11;
          operator delete(v11);
        }
        v8 = v10;
      }
      while (v10 != v7);
      v9 = *(void **)(a1 + 152);
    }
    *(_QWORD *)(a1 + 160) = v7;
    operator delete(v9);
  }
  *(_QWORD *)a1 = &unk_1E3D214F8;
  sub_19C1C2E88(a1 + 32);
  v13 = *(char ***)(a1 + 8);
  if (v13)
  {
    v14 = *(char ***)(a1 + 16);
    v15 = *(void **)(a1 + 8);
    if (v14 != v13)
    {
      do
        v14 = sub_19C17B808(v14 - 13);
      while (v14 != v13);
      v15 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v13;
    operator delete(v15);
  }
  return a1;
}

void sub_19C1EC5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  void *__p[4];

  v5 = (uint64_t *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 96);
  v6 = *(_DWORD *)(a1 + 120);
  v7 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 120) = v6 + 1;
  *(_DWORD *)(a1 + 124) = v7;
  v8 = v7 * (v6 + 1);
  v9 = (*(_QWORD *)(a1 + 104) - v4) >> 3;
  if (v8 <= v9)
  {
    if (v8 < v9)
      *(_QWORD *)(a1 + 104) = v4 + 8 * v8;
  }
  else
  {
    sub_19C17C9D8(a1 + 96, v8 - v9);
    v6 = *(_DWORD *)(a1 + 120) - 1;
  }
  sub_19C1CE998(a2, (uint64_t)__p);
  v10 = *(int *)(a1 + 124);
  v11 = (char *)__p[0];
  if (!(_DWORD)v10)
  {
    if (!__p[0])
      goto LABEL_18;
    goto LABEL_17;
  }
  v12 = (int)v10 * (uint64_t)v6;
  v13 = *v5;
  if (v10 >= 8 && (v14 = 8 * v12 + v13, v14 - (unint64_t)__p[0] >= 0x20))
  {
    v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    v20 = (__int128 *)((char *)__p[0] + 16);
    v21 = (_OWORD *)(v14 + 16);
    v22 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v23 = *v20;
      *(v21 - 1) = *(v20 - 1);
      *v21 = v23;
      v20 += 2;
      v21 += 2;
      v22 -= 4;
    }
    while (v22);
    if (v15 == v10)
      goto LABEL_17;
  }
  else
  {
    v15 = 0;
  }
  v16 = v10 - v15;
  v17 = (_QWORD *)(v13 + 8 * (v15 + v12));
  v18 = &v11[8 * v15];
  do
  {
    v19 = *(_QWORD *)v18;
    v18 += 8;
    *v17++ = v19;
    --v16;
  }
  while (v16);
LABEL_17:
  __p[1] = v11;
  operator delete(v11);
LABEL_18:
  sub_19C1EC72C(a1, 1, 1);
}

void sub_19C1EC72C(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  signed int v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  char *v32;
  char *v33;
  uint64_t v35;
  void *__p;
  void *v37;
  uint64_t v38;
  unsigned int v39;
  char *__C;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  if (a2)
  {
    v5 = (_QWORD *)(a1 + 128);
    v4 = *(_QWORD *)(a1 + 128);
    v6 = *(_DWORD *)(a1 + 120);
    *(_DWORD *)(a1 + 152) = v6;
    v7 = (*(_QWORD *)(a1 + 136) - v4) >> 3;
    v35 = v6;
    if (v6 <= v7)
    {
      if (v6 < v7)
        *(_QWORD *)(a1 + 136) = v4 + 8 * v6;
    }
    else
    {
      sub_19C17C9D8(a1 + 128, v6 - v7);
      v6 = *(_DWORD *)(a1 + 120);
      v35 = v6;
    }
    if (v6)
    {
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *(_QWORD *)(a1 + 96);
        v11 = *(_DWORD *)(a1 + 124);
        __C = 0;
        v41 = 0;
        v42 = 0;
        if (v11)
          break;
        v12 = 0;
        v37 = 0;
        v38 = 0;
        __p = 0;
        v39 = 0;
LABEL_26:
        __C = 0;
        vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)&__C, *(int *)(a1 + 312));
        *(_QWORD *)(*v5 + 8 * v9) = __C;
        if (__p)
        {
          v37 = __p;
          operator delete(__p);
        }
        if (v12)
          operator delete(v12);
        ++v9;
        v8 += 8;
        if (v9 == v35)
          goto LABEL_34;
      }
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = operator new(8 * v11);
      bzero(v12, 8 * v11);
      if (v11 >= 8 && (unint64_t)v12 - v10 - 8 * v9 * v11 >= 0x20)
      {
        v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
        v28 = (__int128 *)(v10 + v8 * v11 + 16);
        v29 = v12 + 1;
        v30 = v13;
        do
        {
          v31 = *v28;
          *(v29 - 1) = *(v28 - 1);
          *v29 = v31;
          v28 += 2;
          v29 += 2;
          v30 -= 4;
        }
        while (v30);
        if (v13 == v11)
        {
LABEL_16:
          __p = 0;
          v37 = 0;
          v38 = 0;
          v39 = v11;
          sub_19C17C9D8((uint64_t)&__p, v11);
          v19 = v39;
          if ((int)v39 >= 1)
          {
            v20 = 0;
            v21 = (char *)__p;
            if (v39 < 4)
              goto LABEL_22;
            if ((unint64_t)((_BYTE *)__p - (_BYTE *)v12) < 0x20)
              goto LABEL_22;
            v22 = 0;
            v20 = v39 & 0xFFFFFFFC;
            v23 = (8 * v39) & 0x7FFFFFFE0;
            do
            {
              v24 = v12[v22 / 0x10 + 1];
              v25 = &v21[v22];
              *(_OWORD *)v25 = v12[v22 / 0x10];
              *((_OWORD *)v25 + 1) = v24;
              v22 += 32;
            }
            while (v23 != v22);
            if (v20 != v19)
            {
LABEL_22:
              v26 = v19 - v20;
              v27 = v20 << 32;
              do
              {
                *(_QWORD *)&v21[v27 >> 29] = *(_QWORD *)((char *)v12 + (v27 >> 29));
                v27 += 0x100000000;
                --v26;
              }
              while (v26);
            }
          }
          goto LABEL_26;
        }
      }
      else
      {
        v13 = 0;
      }
      v14 = v11 - v13;
      v15 = 8 * v13;
      v16 = (_QWORD *)v12 + v13;
      v17 = (uint64_t *)(v10 + v15 + v8 * v11);
      do
      {
        v18 = *v17++;
        *v16++ = v18;
        --v14;
      }
      while (v14);
      goto LABEL_16;
    }
  }
LABEL_34:
  sub_19C1ECAA8(a1 + 8, (uint64_t *)(a1 + 96), (uint64_t)&__C);
  if ((char **)(a1 + 160) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 160), __C, v41, (v41 - __C) >> 3);
  v32 = __C;
  *(_QWORD *)(a1 + 184) = v43;
  if (v32)
  {
    v41 = v32;
    operator delete(v32);
  }
  sub_19C1D3978(a1 + 160, (uint64_t)&__C);
  if ((char **)(a1 + 192) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 192), __C, v41, (v41 - __C) >> 3);
  v33 = __C;
  *(_QWORD *)(a1 + 216) = v43;
  if (v33)
  {
    v41 = v33;
    operator delete(v33);
  }
  sub_19C1ECF68(a1);
  if (a3)
    sub_19C1ED188((int32x2_t *)a1);
}

void sub_19C1ECA44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1ECAA8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  size_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  signed int v12;
  char *v13;
  size_t v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  _OWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  __int128 *v33;
  _OWORD *v34;
  unint64_t v35;
  __int128 v36;
  __int128 *v37;
  _OWORD *v38;
  unint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  char *v55;
  signed int v56;
  void *__p;
  char *v58;
  char *v59;
  signed int v60;

  v4 = *((unsigned int *)a2 + 6);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  if (!(_DWORD)v4)
  {
    v7 = 0;
    *(_DWORD *)(a3 + 24) = 0;
    *(_DWORD *)(a3 + 28) = 0;
LABEL_41:
    v41 = (int)v4;
    if ((_DWORD)v4)
      goto LABEL_42;
    return;
  }
  v6 = 8 * (v4 * v4);
  v7 = (char *)operator new(v6);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 16) = &v7[v6];
  bzero(v7, v6);
  *(_QWORD *)(a3 + 8) = &v7[v6];
  *(_DWORD *)(a3 + 24) = v4;
  *(_DWORD *)(a3 + 28) = v4;
  if ((int)v4 <= 0)
    goto LABEL_41;
  v49 = 0;
  v8 = 0;
  v52 = 1;
  v47 = v4;
  v48 = a1;
  do
  {
    v9 = 0;
    v10 = 0;
    v51 = (int)v8 * v4;
    do
    {
      v11 = *a2;
      v12 = *((_DWORD *)a2 + 7);
      __p = 0;
      v58 = 0;
      v59 = 0;
      if (v12)
      {
        if (v12 < 0)
          sub_19C07DA0C();
        v13 = v7;
        v14 = 8 * v12;
        v15 = operator new(v14);
        bzero(v15, v14);
        if (v12 < 8 || (unint64_t)v15 - v11 - 8 * v8 * v12 < 0x20)
        {
          v16 = 0;
          goto LABEL_12;
        }
        v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v33 = (__int128 *)(v11 + v49 * v12 + 16);
        v34 = v15 + 1;
        v35 = v16;
        do
        {
          v36 = *v33;
          *(v34 - 1) = *(v33 - 1);
          *v34 = v36;
          v33 += 2;
          v34 += 2;
          v35 -= 4;
        }
        while (v35);
        if (v16 != v12)
        {
LABEL_12:
          v17 = v12 - v16;
          v18 = 8 * v16;
          v19 = (_QWORD *)v15 + v16;
          v20 = (uint64_t *)(v11 + v18 + v49 * v12);
          do
          {
            v21 = *v20++;
            *v19++ = v21;
            --v17;
          }
          while (v17);
        }
        v53 = 0;
        v54 = 0;
        v56 = 0;
        v55 = 0;
        v53 = operator new(8 * v12);
        v54 = (char *)v53 + v14;
        v55 = (char *)v53 + 8 * v12;
        v56 = v12;
        memcpy(v53, v15, 8 * v12);
        v22 = operator new(8 * v12);
        bzero(v22, 8 * v12);
        if (v12 < 8 || (unint64_t)v22 - v11 - 8 * v10 * v12 < 0x20)
        {
          v23 = 0;
          goto LABEL_17;
        }
        v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v37 = (__int128 *)(v11 + v9 * v12 + 16);
        v38 = v22 + 1;
        v39 = v23;
        do
        {
          v40 = *v37;
          *(v38 - 1) = *(v37 - 1);
          *v38 = v40;
          v37 += 2;
          v38 += 2;
          v39 -= 4;
        }
        while (v39);
        if (v23 != v12)
        {
LABEL_17:
          v24 = v12 - v23;
          v25 = 8 * v23;
          v26 = (_QWORD *)v22 + v23;
          v27 = (uint64_t *)(v11 + v25 + v9 * v12);
          do
          {
            v28 = *v27++;
            *v26++ = v28;
            --v24;
          }
          while (v24);
        }
        __p = 0;
        v58 = 0;
        v60 = 0;
        v59 = 0;
        v29 = (int)v10;
        __p = operator new(8 * v12);
        v58 = (char *)__p + v14;
        v59 = (char *)__p + 8 * v12;
        v60 = v12;
        memcpy(__p, v22, 8 * v12);
        v7 = v13;
        a1 = v48;
        goto LABEL_21;
      }
      v15 = 0;
      v22 = 0;
      v54 = 0;
      v55 = 0;
      v53 = 0;
      v56 = 0;
      v29 = (int)v10;
      __p = 0;
      v58 = 0;
      v60 = 0;
      v59 = 0;
LABEL_21:
      v30 = *(double *)(a1 + 16);
      v31 = sub_19C1E93E8(a1, (uint64_t)&v53, (const double **)&__p);
      v32 = exp(v31 * -0.5) * v30;
      if ((_DWORD)v8 == (_DWORD)v10)
        v32 = v32 + *(double *)(a1 + 8) + 1.0e-10;
      *(double *)&v7[8 * v29 + 8 * v51] = v32;
      if (__p)
      {
        v58 = (char *)__p;
        operator delete(__p);
      }
      if (v22)
        operator delete(v22);
      if (v53)
      {
        v54 = (char *)v53;
        operator delete(v53);
      }
      if (v15)
        operator delete(v15);
      ++v10;
      v9 += 8;
    }
    while (v10 != v52);
    ++v8;
    ++v52;
    v49 += 8;
    v4 = v47;
  }
  while (v8 != v47);
  v41 = v47;
LABEL_42:
  if (v41 != 1)
  {
    v42 = 0;
    v43 = 8 * v41;
    v44 = v7;
    do
    {
      if (v42)
      {
        v45 = 0;
        v46 = v44;
        do
        {
          *v46 = *(_QWORD *)&v7[8 * v45++];
          v46 = (_QWORD *)((char *)v46 + v43);
        }
        while (v42 != v45);
      }
      ++v42;
      ++v44;
      v7 += v43;
    }
    while (v42 != v41);
  }
}

void sub_19C1ECEC4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1ECEEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  uint64_t v27;
  void *v28;

  if (__p)
  {
    operator delete(__p);
    v27 = a10;
    if (!v25)
    {
LABEL_3:
      v28 = a18;
      if (!a18)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    v27 = a10;
    if (!v25)
      goto LABEL_3;
  }
  operator delete(v25);
  v28 = a18;
  if (!a18)
  {
LABEL_4:
    if (!v23)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v28);
  if (!v23)
  {
LABEL_5:
    *(_QWORD *)(v27 + 8) = v24;
    operator delete(v24);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(v23);
  *(_QWORD *)(v27 + 8) = v24;
  operator delete(v24);
  _Unwind_Resume(a1);
}

void sub_19C1ECF68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _OWORD *v16;
  unsigned int v17;
  void *v18[4];
  void *__p;
  char *v20;
  int v21;
  void *v22[3];
  int v23;

  sub_19C1CE734(a1 + 192, (uint64_t)v22);
  v2 = *(unsigned int *)(a1 + 216);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    v4 = *(_DWORD *)(a1 + 220);
    v5 = v23;
    v6 = 1;
    v7 = -1;
    v8 = v22[0];
    do
    {
      if (v4 <= v6)
        v9 = v6;
      else
        v9 = v4;
      v10 = v3 + 1;
      if ((int)v3 + 1 >= v4)
        goto LABEL_3;
      v11 = 0;
      v12 = v9 + v7;
      v13 = (int)v3 * (uint64_t)v5;
      if ((v9 + v7) < 4)
      {
        v14 = v3 + 1;
      }
      else
      {
        v14 = v3 + 1;
        if (v9 - (int)v3 + v6 - 2 >= v6)
        {
          v15 = 0;
          v11 = v12 & 0xFFFFFFFC;
          v14 = v10 + (v12 & 0xFFFFFFFC);
          do
          {
            v16 = &v8[v13 + v6 + v15];
            *v16 = 0uLL;
            v16[1] = 0uLL;
            v15 += 4;
          }
          while ((v12 & 0xFFFFFFFC) != v15);
          if (v12 == v11)
            goto LABEL_3;
        }
      }
      v17 = v9 - v11;
      do
      {
        v8[v13 + v14] = 0;
        v14 = ++v11 + v10;
        --v17;
      }
      while (v6 != v17);
LABEL_3:
      ++v3;
      ++v6;
      --v7;
    }
    while (v3 != v2);
  }
  sub_19C1ED3EC(a1, (uint64_t)v18);
  sub_19C1CE5B4((uint64_t)v22, (uint64_t)v18, (uint64_t)&__p);
  if ((void **)(a1 + 256) != &__p)
    sub_19C11EAD0((_QWORD *)(a1 + 256), (char *)__p, v20, (v20 - (_BYTE *)__p) >> 3);
  *(_DWORD *)(a1 + 280) = v21;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  sub_19C1CEB00((uint64_t)v22, &__p);
  sub_19C1D43B4((uint64_t)&__p, a1 + 256);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v22[0])
  {
    v22[1] = v22[0];
    operator delete(v22[0]);
  }
}

void sub_19C1ED124(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  if (a9)
    operator delete(a9);
  if (a17)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_19C1ED188(int32x2_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int32 v14;
  int v15;
  int v16;
  _QWORD *v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  _OWORD *v25;
  unsigned int v26;
  void *__p;
  char *v28;
  int32x2_t v29;

  v2 = a1[15].u32[0];
  sub_19C176BE8(v2, v2, (uint64_t)&__p);
  if ((int)v2 >= 1)
  {
    v3 = v29.i32[1] + 1;
    v4 = __p;
    if ((_DWORD)v2 == 1)
    {
      v5 = 0;
LABEL_7:
      v8 = v2 - v5;
      v9 = v5 << 32;
      do
      {
        v4[(v9 >> 32) * v3] = 0x3FF0000000000000;
        v9 += 0x100000000;
        --v8;
      }
      while (v8);
      goto LABEL_9;
    }
    v6 = 0;
    v5 = v2 & 0xFFFFFFFE;
    v7 = v5;
    do
    {
      v4[(v6 >> 32) * v3] = 0x3FF0000000000000;
      v4[((v6 >> 32) | 1) * v3] = 0x3FF0000000000000;
      v6 += 0x200000000;
      v7 -= 2;
    }
    while (v7);
    if (v5 != v2)
      goto LABEL_7;
  }
LABEL_9:
  if (&a1[28] != (int32x2_t *)&__p)
    sub_19C11EAD0(&a1[28], (char *)__p, v28, (v28 - (_BYTE *)__p) >> 3);
  v10 = (char *)__p;
  a1[31] = v29;
  if (v10)
  {
    v28 = v10;
    operator delete(v10);
  }
  sub_19C1CE734((uint64_t)&a1[24], (uint64_t)&__p);
  v11 = a1[27].u32[0];
  if ((int)v11 >= 1)
  {
    v12 = 0;
    v13 = a1[27].i32[1];
    v14 = v29.i32[1];
    v15 = 1;
    v16 = -1;
    v17 = __p;
    do
    {
      if (v13 <= v15)
        v18 = v15;
      else
        v18 = v13;
      v19 = v12 + 1;
      if ((int)v12 + 1 >= v13)
        goto LABEL_15;
      v20 = 0;
      v21 = v18 + v16;
      v22 = (int)v12 * (uint64_t)v14;
      if ((v18 + v16) < 4)
      {
        v23 = v12 + 1;
      }
      else
      {
        v23 = v12 + 1;
        if (v18 - (int)v12 + v15 - 2 >= v15)
        {
          v24 = 0;
          v20 = v21 & 0xFFFFFFFC;
          v23 = v19 + (v21 & 0xFFFFFFFC);
          do
          {
            v25 = &v17[v22 + v15 + v24];
            *v25 = 0uLL;
            v25[1] = 0uLL;
            v24 += 4;
          }
          while ((v21 & 0xFFFFFFFC) != v24);
          if (v21 == v20)
            goto LABEL_15;
        }
      }
      v26 = v18 - v20;
      do
      {
        v17[v22 + v23] = 0;
        v23 = ++v20 + v19;
        --v26;
      }
      while (v15 != v26);
LABEL_15:
      ++v12;
      ++v15;
      --v16;
    }
    while (v12 != v11);
  }
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
  sub_19C1CEB00((uint64_t)&a1[24], &__p);
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
}

void sub_19C1ED3C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1ED3EC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  signed int v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  char *v28;

  v4 = *(_DWORD *)(a1 + 312);
  v5 = 8 * v4;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * v4);
    bzero(v6, 8 * v4);
    v7 = 0;
    v8 = &v6[v5];
    v9 = *(_QWORD *)(a1 + 288);
    if (v4 < 4)
      goto LABEL_46;
    if ((unint64_t)&v6[-v9] < 0x20)
      goto LABEL_46;
    v10 = 0;
    v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    v11 = v7;
    do
    {
      v12 = *(_OWORD *)(v9 + v10 + 16);
      v13 = &v6[v10];
      *(_OWORD *)v13 = *(_OWORD *)(v9 + v10);
      *((_OWORD *)v13 + 1) = v12;
      v10 += 32;
      v11 -= 4;
    }
    while (v11);
    if (v7 != v4)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v6[8 * v7] = *(_QWORD *)(v9 + 8 * v7);
        ++v7;
      }
      while (v4 != v7);
    }
    v14 = *(int *)(a1 + 152);
    if ((_DWORD)v14)
      goto LABEL_10;
LABEL_19:
    v15 = 0;
    goto LABEL_20;
  }
  v8 = 0;
  v6 = 0;
  v14 = *(int *)(a1 + 152);
  if (!(_DWORD)v14)
    goto LABEL_19;
LABEL_10:
  if ((v14 & 0x80000000) != 0)
    sub_19C07DA0C();
  v15 = (char *)operator new(8 * v14);
  bzero(v15, 8 * v14);
  v16 = 0;
  v17 = *(_QWORD *)(a1 + 128);
  if (v14 < 4)
    goto LABEL_47;
  if ((unint64_t)&v15[-v17] < 0x20)
    goto LABEL_47;
  v18 = 0;
  v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  v19 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v20 = *(_OWORD *)(v17 + v18 + 16);
    v21 = &v15[v18];
    *(_OWORD *)v21 = *(_OWORD *)(v17 + v18);
    *((_OWORD *)v21 + 1) = v20;
    v18 += 32;
    v19 -= 4;
  }
  while (v19);
  if (v16 != v14)
  {
LABEL_47:
    do
    {
      *(_QWORD *)&v15[8 * v16] = *(_QWORD *)(v17 + 8 * v16);
      ++v16;
    }
    while (v14 != v16);
  }
LABEL_20:
  vDSP_vsubD((const double *)v15, 1, (const double *)v6, 1, (double *)v6, 1, v4);
  if (v8 != v6)
  {
    if (v8 - v6 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v8 - v6);
    memcpy(v22, v6, v8 - v6);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    if (!v4)
    {
      *(_DWORD *)(a2 + 24) = 0;
      operator delete(v22);
      if (!v15)
        goto LABEL_35;
LABEL_34:
      operator delete(v15);
      goto LABEL_35;
    }
LABEL_26:
    if (v4 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(8 * v4);
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 16) = &v23[8 * v4];
    bzero(v23, 8 * v4);
    *(_QWORD *)(a2 + 8) = &v23[v5];
    *(_DWORD *)(a2 + 24) = v4;
    if (v4 >= 4)
    {
      v25 = 0;
      v24 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      v26 = v24;
      do
      {
        v27 = *(_OWORD *)&v22[v25 + 16];
        v28 = &v23[v25];
        *(_OWORD *)v28 = *(_OWORD *)&v22[v25];
        *((_OWORD *)v28 + 1) = v27;
        v25 += 32;
        v26 -= 4;
      }
      while (v26);
      if (v24 == v4)
      {
LABEL_33:
        operator delete(v22);
        if (!v15)
          goto LABEL_35;
        goto LABEL_34;
      }
    }
    else
    {
      v24 = 0;
    }
    do
    {
      *(_QWORD *)&v23[8 * v24] = *(_QWORD *)&v22[8 * v24];
      ++v24;
    }
    while (v4 != v24);
    goto LABEL_33;
  }
  v22 = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v4)
    goto LABEL_26;
  *(_DWORD *)(a2 + 24) = 0;
  if (v15)
    goto LABEL_34;
LABEL_35:
  if (v6)
    operator delete(v6);
}

void sub_19C1ED710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  void *v18;
  void *v19;

  if (v19)
  {
    operator delete(v19);
    if (!v18)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v18)
  {
    goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_19C1ED774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a9)
    operator delete(a9);
  sub_19C07AF7C(a1);
}

void sub_19C1ED788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13)
    JUMPOUT(0x19C1ED798);
  JUMPOUT(0x19C1ED79CLL);
}

void sub_19C1ED7A4(uint64_t a1, uint64_t a2)
{
  _BYTE *v3;
  _BYTE *v4;
  int v5;
  unsigned int v6;
  signed int v7;
  int v8;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  unsigned int v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  int64_t v22;
  char *v23;
  char *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double *v29;
  long double *v30;
  unint64_t v31;
  long double v32;
  __int128 *v33;
  unint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  long double v38;
  void *v39;
  char *v40;
  int v41;
  void *v42;
  void *v43;
  char *v44;
  int v45;
  void *v46[4];
  void *__p[4];
  _QWORD v48[2];
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;

  v55 = a2;
  sub_19C1CF858((uint64_t)v48, *(_DWORD *)(a2 + 8) + 1);
  sub_19C17D694((uint64_t)v46, *(_DWORD *)(a2 + 8) + 1);
  v3 = v46[0];
  *(_QWORD *)v46[0] = 0xC01E000000000000;
  v4 = __p[0];
  *(_QWORD *)__p[0] = 0x401E000000000000;
  v5 = *(_DWORD *)(a2 + 8);
  if (v5 >= 1)
  {
    v6 = 0;
    v7 = 1;
    if (v5 < 0xA)
      goto LABEL_7;
    if ((unint64_t)(v4 - v3) < 0x20)
      goto LABEL_7;
    v8 = 0;
    v6 = v5 & 0xFFFFFFFC;
    v7 = v5 & 0xFFFFFFFC | 1;
    __asm
    {
      FMOV            V0.2D, #-10.0
      FMOV            V1.2D, #10.0
    }
    do
    {
      v15 = 8 * v8;
      v16 = &v3[v15 + 8];
      *v16 = _Q0;
      v16[1] = _Q0;
      v17 = &v4[v15 + 8];
      *v17 = _Q1;
      v17[1] = _Q1;
      v8 += 4;
    }
    while (v6 != v8);
    if (v6 != v5)
    {
LABEL_7:
      v18 = v5 - v6;
      do
      {
        v19 = 8 * v7;
        *(_QWORD *)&v3[v19] = 0xC024000000000000;
        *(_QWORD *)&v4[v19] = 0x4024000000000000;
        v7 = v6 + 2;
        ++v6;
        --v18;
      }
      while (v18);
    }
  }
  sub_19C1D0468((uint64_t)v48, (uint64_t *)v46);
  sub_19C1D0594((uint64_t)v48, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v46[0])
  {
    v46[1] = v46[0];
    operator delete(v46[0]);
  }
  v21 = *(_BYTE **)(a2 + 64);
  v20 = *(_BYTE **)(a2 + 72);
  v42 = 0;
  v43 = 0;
  v44 = 0;
  v22 = v20 - v21;
  if (v20 != v21)
  {
    if (v22 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(v20 - v21);
    v24 = &v23[8 * (v22 >> 3)];
    v42 = v23;
    v44 = v24;
    memcpy(v23, v21, v22);
    v43 = v24;
  }
  v45 = *(_DWORD *)(a2 + 88);
  sub_19C1EDB3C((uint64_t)v48, (uint64_t)&v55, (uint64_t *)&v42, (uint64_t)&v39);
  if ((void **)(a2 + 64) != &v39)
    sub_19C11EAD0((_QWORD *)(a2 + 64), (char *)v39, v40, (v40 - (_BYTE *)v39) >> 3);
  *(_DWORD *)(a2 + 88) = v41;
  v25 = (char *)v39;
  *(long double *)(a2 + 24) = exp(*(double *)v39 + *(double *)v39);
  v26 = *(_QWORD *)(a2 + 8);
  if (v26)
  {
    v27 = *(_QWORD *)(a2 + 32);
    if (v26 < 4 || (unint64_t)(v27 - (_QWORD)v25 - 8) < 0x10)
    {
      v28 = 0;
LABEL_22:
      v29 = (double *)&v25[8 * v28 + 8];
      v30 = (long double *)(v27 + 8 * v28);
      v31 = v26 - v28;
      do
      {
        v32 = *v29++;
        *v30++ = exp(v32);
        --v31;
      }
      while (v31);
      goto LABEL_24;
    }
    v28 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v33 = (__int128 *)(v25 + 8);
    v34 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v35 = *(_OWORD **)(a2 + 32);
    do
    {
      v36 = *v33++;
      v38 = exp(*((long double *)&v36 + 1));
      *(double *)&v37 = exp(*(long double *)&v36);
      *((long double *)&v37 + 1) = v38;
      *v35++ = v37;
      v34 -= 2;
    }
    while (v34);
    if (v26 != v28)
      goto LABEL_22;
  }
LABEL_24:
  sub_19C1EC72C(a2, 1, 1);
  if (v39)
  {
    v40 = (char *)v39;
    operator delete(v39);
  }
  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  v48[0] = &unk_1E3D21150;
  sub_19C23AA14(v48[1]);
  if (v53)
  {
    v54 = v53;
    operator delete(v53);
  }
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }
}

void sub_19C1EDAB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  if (__p)
  {
    operator delete(__p);
    sub_19C1CF8E8(&a29);
    _Unwind_Resume(a1);
  }
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C1EDB20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  sub_19C176E10((uint64_t)&a21);
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C1EDB3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1EE08C;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1EDF84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1EDD90);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

double sub_19C1EE08C(uint64_t **a1, uint64_t *a2, int **a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  double v33;
  void *__p;
  void *v35;
  char v36;
  _QWORD v37[3];
  signed int v38;
  char v39;
  void *v40;
  char *v41;
  char *v42;
  int v43;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v41 = 0;
  v42 = 0;
  v40 = 0;
  v43 = 0;
  v33 = 0.0;
  __p = 0;
  v35 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  v40 = v8;
  v41 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v42 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v43 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1EE380(a3, (uint64_t)&v40, 0, (uint64_t)&v33);
    v17 = v33;
    if (v36)
    {
      v31 = __p;
      if (__p)
      {
        v35 = __p;
        goto LABEL_31;
      }
    }
  }
  else
  {
    LOBYTE(v37[0]) = 0;
    v39 = 0;
    sub_19C1EE380(a3, (uint64_t)&v40, 1, (uint64_t)&v33);
    v17 = v33;
    sub_19C1D66F8((uint64_t)v37, (uint64_t)&__p);
    if (v36 && __p)
    {
      v35 = __p;
      operator delete(__p);
    }
    v18 = v38;
    if (v38)
    {
      v19 = 0;
      v20 = v37[0];
      v21 = *a2;
      if (v38 < 4)
        goto LABEL_23;
      if ((unint64_t)(v21 - v37[0]) < 0x20)
        goto LABEL_23;
      v19 = v38 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = (__int128 *)(v37[0] + 16);
      v23 = (_OWORD *)(v21 + 16);
      v24 = v19;
      do
      {
        v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 4;
      }
      while (v24);
      if (v19 != v18)
      {
LABEL_23:
        v26 = v18 - v19;
        v27 = 8 * v19;
        v28 = (_QWORD *)(v21 + 8 * v19);
        v29 = (uint64_t *)(v20 + v27);
        do
        {
          v30 = *v29++;
          *v28++ = v30;
          --v26;
        }
        while (v26);
      }
    }
    if (v39)
    {
      v31 = (void *)v37[0];
      if (v37[0])
      {
        v37[1] = v37[0];
LABEL_31:
        operator delete(v31);
      }
    }
  }
  if (v40)
  {
    v41 = (char *)v40;
    operator delete(v40);
  }
  return v17;
}

void sub_19C1EE308(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,void *__p,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1EE364(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

_QWORD *sub_19C1EE380@<X0>(int **a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char *v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  double *v11;
  long double *v12;
  unint64_t v13;
  long double v14;
  double v15;
  double v16;
  void *v17;
  int64_t v18;
  char *v19;
  char *v20;
  __int128 *v22;
  unint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  long double v27;
  _BYTE *v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  long double v33;
  char *v34;
  _QWORD v35[3];
  int v36;

  sub_19C1EF518((uint64_t)&v31, *a1);
  if (v35 != (_QWORD *)a2)
    sub_19C11EAD0(v35, *(char **)a2, *(char **)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  v36 = *(_DWORD *)(a2 + 24);
  v7 = *(char **)a2;
  v33 = exp(*(double *)v7 + *(double *)v7);
  v8 = v32;
  if (v32)
  {
    v9 = v34;
    if (v32 < 4 || (unint64_t)(v34 - v7 - 8) < 0x10)
    {
      v10 = 0;
LABEL_7:
      v11 = (double *)&v7[8 * v10 + 8];
      v12 = (long double *)&v9[8 * v10];
      v13 = v8 - v10;
      do
      {
        v14 = *v11++;
        *v12++ = exp(v14);
        --v13;
      }
      while (v13);
      goto LABEL_9;
    }
    v10 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v22 = (__int128 *)(v7 + 8);
    v23 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v24 = v34;
    do
    {
      v25 = *v22++;
      v27 = exp(*((long double *)&v25 + 1));
      *(double *)&v26 = exp(*(long double *)&v25);
      *((long double *)&v26 + 1) = v27;
      *(_OWORD *)v24 = v26;
      v24 += 16;
      v23 -= 2;
    }
    while (v23);
    if (v8 != v10)
      goto LABEL_7;
  }
LABEL_9:
  sub_19C1EC72C((uint64_t)&v31, 0, a3);
  v15 = sub_19C1EE5F8((uint64_t)&v31);
  v16 = v15;
  if ((a3 & 1) != 0)
  {
    sub_19C1EE824((uint64_t)&v31, (uint64_t)&v28);
    *(_QWORD *)(a4 + 8) = 0;
    *(double *)a4 = v16;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0;
    v17 = v28;
    v18 = v29 - v28;
    if (v29 != v28)
    {
      if (v18 < 0)
        sub_19C07DA0C();
      v19 = (char *)operator new(v29 - v28);
      *(_QWORD *)(a4 + 8) = v19;
      v20 = &v19[8 * (v18 >> 3)];
      *(_QWORD *)(a4 + 24) = v20;
      memcpy(v19, v17, v18);
      *(_QWORD *)(a4 + 16) = v20;
    }
    *(_DWORD *)(a4 + 32) = v30;
    *(_BYTE *)(a4 + 40) = 1;
    if (v17)
    {
      v29 = v17;
      operator delete(v17);
    }
  }
  else
  {
    *(double *)a4 = v15;
    *(_BYTE *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 40) = 0;
  }
  return sub_19C1EC3CC(&v31);
}

void sub_19C1EE570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1EE584(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  void **v19;
  void *v21;
  void *v22;

  v21 = *v19;
  if (*v19)
  {
    *(_QWORD *)(v18 + 16) = v21;
    operator delete(v21);
    v22 = __p;
    if (!__p)
    {
LABEL_3:
      sub_19C1EC3CC(&a18);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v22 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v22);
  sub_19C1EC3CC(&a18);
  _Unwind_Resume(a1);
}

void sub_19C1EE5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1EE5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_19C1EE5F8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  double *v8;
  void *__p;
  char *v11;
  char *v12;
  int v13;
  void *__C[3];
  vDSP_Length v15;
  double *__A;
  double *v17;
  uint64_t v18;
  vDSP_Length __N;

  sub_19C1ED3EC(a1, (uint64_t)&__A);
  __C[0] = 0;
  vDSP_dotprD(__A, 1, *(const double **)(a1 + 256), 1, (double *)__C, (int)__N);
  v2 = __C[0];
  if (__A)
  {
    v17 = __A;
    operator delete(__A);
  }
  v3 = *(int *)(a1 + 220);
  if ((int)v3 >= *(_DWORD *)(a1 + 216))
    v4 = *(_DWORD *)(a1 + 216);
  else
    v4 = *(_DWORD *)(a1 + 220);
  __A = 0;
  v17 = 0;
  v18 = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = operator new(8 * v4);
    bzero(v5, 8 * v4);
    v6 = 0;
    v7 = *(_QWORD **)(a1 + 192);
    do
    {
      *((_QWORD *)v5 + v6++) = *v7;
      v7 += v3 + 1;
    }
    while (v4 != v6);
    __p = operator new(8 * v4);
    v11 = (char *)__p + 8 * v4;
    v12 = v11;
    v13 = v4;
    memcpy(__p, v5, 8 * v4);
  }
  else
  {
    v5 = 0;
    v11 = 0;
    v12 = 0;
    __p = 0;
    v13 = 0;
  }
  sub_19C1D650C((uint64_t)&__p, (uint64_t)__C);
  __A = 0;
  vDSP_sveD((const double *)__C[0], 1, (double *)&__A, (int)v15);
  v8 = __A;
  if (__C[0])
  {
    __C[1] = __C[0];
    operator delete(__C[0]);
  }
  if (__p)
  {
    v11 = (char *)__p;
    operator delete(__p);
  }
  if (v5)
    operator delete(v5);
  return (double)*(int *)(a1 + 120) * -0.918938533 - (*(double *)&v8 - *(double *)&v2 * -0.5);
}

void sub_19C1EE79C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v20;

  if (__p)
  {
    operator delete(__p);
    v20 = a9;
    if (!a9)
    {
LABEL_3:
      if (!v18)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(v18);
      goto LABEL_8;
    }
  }
  else
  {
    v20 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v20);
  if (!v18)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C1EE808(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1EE824(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  double *v5;
  double *v6;
  _BYTE *v7;
  _BYTE *v8;
  int64_t v9;
  char *v10;
  char *v11;
  void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  vDSP_Length v18;
  int64_t v19;
  char *v20;
  char *v21;
  char *v22;
  unint64_t i;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  int v28;
  char *v29;
  unint64_t j;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  __int128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  const void *v68;
  int64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  double *v73;
  const void *v74;
  int64_t v75;
  char *v76;
  const double *v77;
  int v78;
  int64_t v79;
  char *v80;
  char *v81;
  const double *v82;
  int v83;
  uint64_t v84;
  char *v85;
  int64_t v86;
  char *v87;
  __int128 *v88;
  _OWORD *v89;
  unint64_t v90;
  __int128 v91;
  __int128 *v92;
  _OWORD *v93;
  unint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  vDSP_Length v98;
  void *v101;
  char *v102;
  char *v103;
  int v104;
  void *v105;
  void *v106;
  char *v107;
  int v108;
  void *__p;
  _BYTE *v110;
  _BYTE *v111;
  unint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  unint64_t v116;
  _BYTE *v117;
  char *v118;
  char *v119;
  unint64_t v120;
  double *v121;
  double *v122;
  double *v123;
  unint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  unint64_t v128;

  v121 = 0;
  v122 = 0;
  v123 = 0;
  v3 = *(_BYTE **)(a1 + 224);
  v2 = *(_BYTE **)(a1 + 232);
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (double *)operator new(v2 - v3);
    v6 = &v5[v4 >> 3];
    v121 = v5;
    v123 = v6;
    memcpy(v5, v3, v4);
    v122 = v6;
  }
  v7 = *(_BYTE **)(a1 + 256);
  v124 = *(_QWORD *)(a1 + 248);
  v106 = 0;
  v107 = 0;
  v105 = 0;
  v8 = *(_BYTE **)(a1 + 264);
  v9 = v8 - v7;
  if (v8 != v7)
  {
    if (v9 < 0)
      sub_19C07DA0C();
    v10 = (char *)operator new(v8 - v7);
    v11 = &v10[8 * (v9 >> 3)];
    v105 = v10;
    v107 = v11;
    memcpy(v10, v7, v9);
    v106 = v11;
  }
  v108 = *(_DWORD *)(a1 + 280);
  sub_19C1CE998(a1 + 256, (uint64_t)&v101);
  sub_19C1D65EC((uint64_t)&v105, (uint64_t)&v101, (uint64_t)&__p);
  v113 = 0;
  v114 = 0;
  v115 = 0;
  v12 = __p;
  v13 = v110 - (_BYTE *)__p;
  if (v110 == __p)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v110 - (_BYTE *)__p);
    v15 = &v14[8 * (v13 >> 3)];
    v113 = v14;
    v115 = v15;
    memcpy(v14, v12, v13);
    v114 = v15;
  }
  v16 = v112;
  v116 = v112;
  v17 = HIDWORD(v112);
  v18 = HIDWORD(v112) * (int)v112;
  vDSP_vsubD(v121, 1, (const double *)v14, 1, (double *)v14, 1, v18);
  v117 = 0;
  v118 = 0;
  v119 = 0;
  v19 = v15 - v14;
  if (!v19)
  {
    v20 = 0;
    v120 = v16;
    v126 = 0;
    v127 = 0;
    v125 = 0;
    if ((_DWORD)v18)
      goto LABEL_14;
LABEL_18:
    v22 = 0;
    v21 = 0;
    v128 = __PAIR64__(v17, v16);
    goto LABEL_23;
  }
  if (v19 < 0)
    sub_19C07DA0C();
  v20 = (char *)operator new(v19);
  v117 = v20;
  v119 = &v20[8 * (v19 >> 3)];
  memcpy(v20, v14, v19);
  v118 = &v20[8 * (v19 >> 3)];
  v120 = v16;
  v126 = 0;
  v127 = 0;
  v125 = 0;
  if (!(_DWORD)v18)
    goto LABEL_18;
LABEL_14:
  if ((v18 & 0x80000000) != 0)
    sub_19C07DA0C();
  v21 = (char *)operator new(8 * v18);
  v125 = v21;
  v127 = &v21[8 * v18];
  bzero(v21, 8 * v18);
  v22 = &v21[8 * v18];
  v128 = __PAIR64__(v17, v16);
  if (v18 < 4)
  {
    for (i = 0; i != v18; ++i)
LABEL_22:
      *(_QWORD *)&v21[8 * i] = *(_QWORD *)&v20[8 * i];
    goto LABEL_23;
  }
  v24 = 0;
  i = v18 & 0xFFFFFFFFFFFFFFFCLL;
  v25 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v26 = *(_OWORD *)&v20[v24 + 16];
    v27 = &v21[v24];
    *(_OWORD *)v27 = *(_OWORD *)&v20[v24];
    *((_OWORD *)v27 + 1) = v26;
    v24 += 32;
    v25 -= 4;
  }
  while (v25);
  if (i != v18)
    goto LABEL_22;
LABEL_23:
  sub_19C11EAD0(&v121, v21, v22, (v22 - v21) >> 3);
  v124 = v128;
  if (v21)
  {
    v126 = v21;
    operator delete(v21);
  }
  if (v20)
  {
    v118 = v20;
    operator delete(v20);
  }
  if (v14)
  {
    v114 = v14;
    operator delete(v14);
  }
  if (__p)
  {
    v110 = __p;
    operator delete(__p);
  }
  if (v101)
  {
    v102 = (char *)v101;
    operator delete(v101);
  }
  if (v105)
  {
    v106 = v105;
    operator delete(v105);
  }
  v28 = *(_DWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v98 = v28 + 1;
  if (v28 == -1)
  {
    *(_DWORD *)(a2 + 24) = 0;
    v96 = *(int *)(a1 + 120);
    if (!(_DWORD)v96)
      goto LABEL_125;
    goto LABEL_40;
  }
  if (v28 <= -2)
    sub_19C07DA0C();
  v29 = (char *)operator new(8 * v98);
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = &v29[8 * v98];
  *(_QWORD *)(a2 + 16) = &v29[8 * v28 + 8];
  *(_DWORD *)(a2 + 24) = v28 + 1;
  bzero(v29, 8 * v98);
  v96 = *(int *)(a1 + 120);
  if ((_DWORD)v96)
  {
LABEL_40:
    v97 = 0;
    for (j = 0; j != v96; ++j)
    {
      v31 = 0;
      v32 = 0;
      do
      {
        v33 = *(_QWORD *)(a1 + 96);
        v34 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v34)
        {
          v35 = 0;
          v110 = 0;
          v111 = 0;
          __p = 0;
          LODWORD(v112) = 0;
LABEL_72:
          v52 = 0;
          v102 = 0;
          v103 = 0;
          v101 = 0;
          v104 = 0;
          goto LABEL_76;
        }
        if ((v34 & 0x80000000) != 0)
          sub_19C07DA0C();
        v35 = operator new(8 * (int)v34);
        bzero(v35, 8 * (int)v34);
        if (v34 < 8 || (unint64_t)v35 - v33 - 8 * j * (int)v34 < 0x20)
        {
          v36 = 0;
LABEL_49:
          v37 = (int)v34 - v36;
          v38 = 8 * v36;
          v39 = (_QWORD *)v35 + v36;
          v40 = (uint64_t *)(v33 + v38 + v97 * (int)v34);
          do
          {
            v41 = *v40++;
            *v39++ = v41;
            --v37;
          }
          while (v37);
          goto LABEL_51;
        }
        v36 = (int)v34 & 0xFFFFFFFFFFFFFFFCLL;
        v88 = (__int128 *)(v33 + v97 * (int)v34 + 16);
        v89 = v35 + 1;
        v90 = v36;
        do
        {
          v91 = *v88;
          *(v89 - 1) = *(v88 - 1);
          *v89 = v91;
          v88 += 2;
          v89 += 2;
          v90 -= 4;
        }
        while (v90);
        if (v36 != (int)v34)
          goto LABEL_49;
LABEL_51:
        __p = 0;
        v110 = 0;
        v111 = 0;
        LODWORD(v112) = v34;
        v42 = operator new(8 * (int)v34);
        bzero(v42, 8 * (int)v34);
        __p = v42;
        v110 = (char *)v42 + 8 * (int)v34;
        v111 = v110;
        if ((v34 - 6) >= 0x7FFFFFFB)
        {
          v43 = 0;
LABEL_58:
          v48 = v34 - v43;
          v49 = v43 << 32;
          do
          {
            *(_QWORD *)((char *)v42 + (v49 >> 29)) = *(_QWORD *)((char *)v35 + (v49 >> 29));
            v49 += 0x100000000;
            --v48;
          }
          while (v48);
          goto LABEL_60;
        }
        v43 = v34 & 0xFFFFFFFC;
        v44 = v42 + 1;
        v45 = v35 + 1;
        v46 = v43;
        do
        {
          v47 = *v45;
          *(v44 - 1) = *(v45 - 1);
          *v44 = v47;
          v44 += 2;
          v45 += 2;
          v46 -= 4;
        }
        while (v46);
        if (v43 != v34)
          goto LABEL_58;
LABEL_60:
        v50 = *(_QWORD *)(a1 + 96);
        v51 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v51)
          goto LABEL_72;
        if ((v51 & 0x80000000) != 0)
          sub_19C07DA0C();
        v52 = operator new(8 * (int)v51);
        bzero(v52, 8 * (int)v51);
        if (v51 < 8 || (unint64_t)v52 - v50 - 8 * v32 * (int)v51 < 0x20)
        {
          v53 = 0;
LABEL_65:
          v54 = (int)v51 - v53;
          v55 = 8 * v53;
          v56 = (_QWORD *)v52 + v53;
          v57 = (uint64_t *)(v50 + v55 + v31 * (int)v51);
          do
          {
            v58 = *v57++;
            *v56++ = v58;
            --v54;
          }
          while (v54);
          goto LABEL_67;
        }
        v53 = (int)v51 & 0xFFFFFFFFFFFFFFFCLL;
        v92 = (__int128 *)(v50 + v31 * (int)v51 + 16);
        v93 = v52 + 1;
        v94 = v53;
        do
        {
          v95 = *v92;
          *(v93 - 1) = *(v92 - 1);
          *v93 = v95;
          v92 += 2;
          v93 += 2;
          v94 -= 4;
        }
        while (v94);
        if (v53 != (int)v51)
          goto LABEL_65;
LABEL_67:
        v101 = 0;
        v102 = 0;
        v103 = 0;
        v104 = v51;
        v59 = (char *)operator new(8 * (int)v51);
        bzero(v59, 8 * (int)v51);
        v101 = v59;
        v102 = &v59[8 * (int)v51];
        v103 = v102;
        if ((v51 - 6) >= 0x7FFFFFFB)
        {
          v61 = 0;
LABEL_74:
          v64 = v51 - v61;
          v65 = v61 << 32;
          do
          {
            *(_QWORD *)&v59[v65 >> 29] = *(_QWORD *)((char *)v52 + (v65 >> 29));
            v65 += 0x100000000;
            --v64;
          }
          while (v64);
          goto LABEL_76;
        }
        v60 = 0;
        v61 = v51 & 0xFFFFFFFC;
        do
        {
          v62 = v52[v60 / 0x10 + 1];
          v63 = &v59[v60];
          *(_OWORD *)v63 = v52[v60 / 0x10];
          *((_OWORD *)v63 + 1) = v62;
          v60 += 32;
        }
        while (((8 * v51) & 0x7FFFFFFE0) != v60);
        if (v61 != v51)
          goto LABEL_74;
LABEL_76:
        sub_19C1EFA48(a1 + 8, (uint64_t)&__p, (const double **)&v101, (uint64_t)&v117);
        if (v101)
        {
          v102 = (char *)v101;
          operator delete(v101);
        }
        if (v52)
          operator delete(v52);
        if (__p)
        {
          v110 = __p;
          operator delete(__p);
        }
        if (v35)
          operator delete(v35);
        if (j == v32)
        {
          v66 = SHIDWORD(v124);
          v67 = v121;
          v68 = v117;
          v69 = v118 - v117;
          if (v118 == v117)
          {
            v71 = 0;
            v70 = 0;
          }
          else
          {
            if (v69 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v71 = &v70[8 * (v69 >> 3)];
            memcpy(v70, v68, v69);
          }
          v77 = &v67[j + j * v66];
          v78 = v120;
          vDSP_vsmulD((const double *)v70, 1, v77, (double *)v70, 1, (int)v120);
          v79 = v71 - v70;
          if (v79)
          {
            if (v79 < 0)
              sub_19C07DA0C();
            v80 = (char *)operator new(v79);
            v81 = &v80[8 * (v79 >> 3)];
            memcpy(v80, v70, v79);
          }
          else
          {
            v81 = 0;
            v80 = 0;
          }
          __p = (void *)0x3FE0000000000000;
          vDSP_vsmulD((const double *)v80, 1, (const double *)&__p, (double *)v80, 1, v78);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v86 = v81 - v80;
          if (v81 == v80)
          {
            v87 = 0;
          }
          else
          {
            if (v86 < 0)
              sub_19C07DA0C();
            v87 = (char *)operator new(v81 - v80);
            v125 = v87;
            v127 = &v87[8 * (v86 >> 3)];
            memcpy(v87, v80, v86);
            v126 = &v87[8 * (v86 >> 3)];
          }
          LODWORD(v128) = v78;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v87, 1, *(double **)a2, 1, v98);
          if (v87)
            operator delete(v87);
          if (v80)
            operator delete(v80);
          if (v70)
            goto LABEL_114;
        }
        else
        {
          v72 = SHIDWORD(v124);
          v73 = v121;
          v74 = v117;
          v75 = v118 - v117;
          if (v118 == v117)
          {
            v76 = 0;
            v70 = 0;
          }
          else
          {
            if (v75 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v76 = &v70[8 * (v75 >> 3)];
            memcpy(v70, v74, v75);
          }
          v82 = &v73[v32 + j * v72];
          v83 = v120;
          vDSP_vsmulD((const double *)v70, 1, v82, (double *)v70, 1, (int)v120);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v84 = v76 - v70;
          if (v76 == v70)
          {
            v85 = 0;
          }
          else
          {
            if (v84 < 0)
              sub_19C07DA0C();
            v85 = (char *)operator new(v76 - v70);
            v125 = v85;
            v127 = &v85[8 * (v84 >> 3)];
            memcpy(v85, v70, v76 - v70);
            v126 = &v85[8 * (v84 >> 3)];
          }
          LODWORD(v128) = v83;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v85, 1, *(double **)a2, 1, v98);
          if (v85)
            operator delete(v85);
          if (v70)
LABEL_114:
            operator delete(v70);
        }
        if (v117)
        {
          v118 = v117;
          operator delete(v117);
        }
        ++v32;
        v31 += 8;
      }
      while (v32 <= j);
      v97 += 8;
    }
  }
LABEL_125:
  if (v121)
  {
    v122 = v121;
    operator delete(v121);
  }
}

void sub_19C1EF270(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v15;

  v15 = *(void **)a14;
  if (*(_QWORD *)a14)
  {
    *(_QWORD *)(a14 + 8) = v15;
    operator delete(v15);
  }
  sub_19C07AF7C(a1);
}

void sub_19C1EF294(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37)
{
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v42;
  void *v43;
  void *v44;

  if (v39)
    operator delete(v39);
  if (v38)
  {
    *(_QWORD *)(v40 - 176) = v38;
    operator delete(v38);
  }
  if (v37)
  {
    *(_QWORD *)(v40 - 208) = v37;
    operator delete(v37);
  }
  if (__p)
  {
    operator delete(__p);
    v42 = a28;
    if (!a28)
    {
LABEL_9:
      v43 = a32;
      if (!a32)
      {
LABEL_14:
        v44 = *(void **)(v40 - 152);
        if (v44)
        {
          *(_QWORD *)(v40 - 144) = v44;
          operator delete(v44);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_13:
      operator delete(v43);
      goto LABEL_14;
    }
  }
  else
  {
    v42 = a28;
    if (!a28)
      goto LABEL_9;
  }
  operator delete(v42);
  v43 = a32;
  if (!a32)
    goto LABEL_14;
  goto LABEL_13;
}

void sub_19C1EF4C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37)
{
  uint64_t v37;
  void *v38;
  void *v39;

  if (__p)
  {
    operator delete(__p);
    if (!v38)
    {
LABEL_3:
      v39 = a36;
      if (!a36)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v38)
  {
    goto LABEL_3;
  }
  operator delete(v38);
  v39 = a36;
  if (!a36)
  {
LABEL_4:
    if (v37)
      goto LABEL_12;
    goto LABEL_13;
  }
LABEL_8:
  operator delete(v39);
  if (v37)
LABEL_12:
    JUMPOUT(0x19C1EF474);
LABEL_13:
  JUMPOUT(0x19C1EF478);
}

uint64_t sub_19C1EF518(uint64_t a1, int *a2)
{
  int v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;
  int v16;
  _BYTE *v17;
  _BYTE *v18;
  int64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  int64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  int64_t v31;
  char *v32;
  char *v33;
  _BYTE *v34;
  _BYTE *v35;
  int64_t v36;
  char *v37;
  char *v38;
  _BYTE *v39;
  _BYTE *v40;
  int64_t v41;
  char *v42;
  char *v43;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  sub_19C1EF920(a1 + 8, (uint64_t)(a2 + 2));
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  v6 = (_BYTE *)*((_QWORD *)a2 + 12);
  v5 = (_BYTE *)*((_QWORD *)a2 + 13);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 96) = v8;
    *(_QWORD *)(a1 + 104) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 112) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 104) = v9;
  }
  v10 = *((_QWORD *)a2 + 15);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 120) = v10;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  v12 = (_BYTE *)*((_QWORD *)a2 + 16);
  v11 = (_BYTE *)*((_QWORD *)a2 + 17);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 128) = v14;
    *(_QWORD *)(a1 + 136) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 144) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 136) = v15;
  }
  v16 = a2[38];
  *(_QWORD *)(a1 + 160) = 0;
  *(_DWORD *)(a1 + 152) = v16;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  v18 = (_BYTE *)*((_QWORD *)a2 + 20);
  v17 = (_BYTE *)*((_QWORD *)a2 + 21);
  v19 = v17 - v18;
  if (v17 != v18)
  {
    if (v19 < 0)
      sub_19C07DA0C();
    v20 = (char *)operator new(v17 - v18);
    *(_QWORD *)(a1 + 160) = v20;
    *(_QWORD *)(a1 + 168) = v20;
    v21 = &v20[8 * (v19 >> 3)];
    *(_QWORD *)(a1 + 176) = v21;
    memcpy(v20, v18, v19);
    *(_QWORD *)(a1 + 168) = v21;
  }
  v22 = *((_QWORD *)a2 + 23);
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 184) = v22;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  v24 = (_BYTE *)*((_QWORD *)a2 + 24);
  v23 = (_BYTE *)*((_QWORD *)a2 + 25);
  v25 = v23 - v24;
  if (v23 != v24)
  {
    if (v25 < 0)
      sub_19C07DA0C();
    v26 = (char *)operator new(v23 - v24);
    *(_QWORD *)(a1 + 192) = v26;
    *(_QWORD *)(a1 + 200) = v26;
    v27 = &v26[8 * (v25 >> 3)];
    *(_QWORD *)(a1 + 208) = v27;
    memcpy(v26, v24, v25);
    *(_QWORD *)(a1 + 200) = v27;
  }
  v28 = *((_QWORD *)a2 + 27);
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 216) = v28;
  *(_QWORD *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 240) = 0;
  v30 = (_BYTE *)*((_QWORD *)a2 + 28);
  v29 = (_BYTE *)*((_QWORD *)a2 + 29);
  v31 = v29 - v30;
  if (v29 != v30)
  {
    if (v31 < 0)
      sub_19C07DA0C();
    v32 = (char *)operator new(v29 - v30);
    *(_QWORD *)(a1 + 224) = v32;
    *(_QWORD *)(a1 + 232) = v32;
    v33 = &v32[8 * (v31 >> 3)];
    *(_QWORD *)(a1 + 240) = v33;
    memcpy(v32, v30, v31);
    *(_QWORD *)(a1 + 232) = v33;
  }
  *(_QWORD *)(a1 + 248) = *((_QWORD *)a2 + 31);
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0;
  v35 = (_BYTE *)*((_QWORD *)a2 + 32);
  v34 = (_BYTE *)*((_QWORD *)a2 + 33);
  v36 = v34 - v35;
  if (v34 != v35)
  {
    if (v36 < 0)
      sub_19C07DA0C();
    v37 = (char *)operator new(v34 - v35);
    *(_QWORD *)(a1 + 256) = v37;
    *(_QWORD *)(a1 + 264) = v37;
    v38 = &v37[8 * (v36 >> 3)];
    *(_QWORD *)(a1 + 272) = v38;
    memcpy(v37, v35, v36);
    *(_QWORD *)(a1 + 264) = v38;
  }
  *(_DWORD *)(a1 + 280) = a2[70];
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 288) = 0;
  v40 = (_BYTE *)*((_QWORD *)a2 + 36);
  v39 = (_BYTE *)*((_QWORD *)a2 + 37);
  v41 = v39 - v40;
  if (v39 != v40)
  {
    if (v41 < 0)
      sub_19C07DA0C();
    v42 = (char *)operator new(v39 - v40);
    *(_QWORD *)(a1 + 288) = v42;
    *(_QWORD *)(a1 + 296) = v42;
    v43 = &v42[8 * (v41 >> 3)];
    *(_QWORD *)(a1 + 304) = v43;
    memcpy(v42, v40, v41);
    *(_QWORD *)(a1 + 296) = v43;
  }
  *(_DWORD *)(a1 + 312) = a2[78];
  return a1;
}

void sub_19C1EF7F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, _QWORD *a10)
{
  _QWORD *v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  v18 = *v16;
  if (*v16)
  {
    v10[37] = v18;
    operator delete(v18);
    v19 = *a9;
    if (!*a9)
    {
LABEL_3:
      v20 = *v15;
      if (!*v15)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else
  {
    v19 = *a9;
    if (!*a9)
      goto LABEL_3;
  }
  v10[33] = v19;
  operator delete(v19);
  v20 = *v15;
  if (!*v15)
  {
LABEL_4:
    v21 = *v14;
    if (!*v14)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v10[29] = v20;
  operator delete(v20);
  v21 = *v14;
  if (!*v14)
  {
LABEL_5:
    v22 = *v13;
    if (!*v13)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  v10[25] = v21;
  operator delete(v21);
  v22 = *v13;
  if (!*v13)
  {
LABEL_6:
    v23 = *v12;
    if (!*v12)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  v10[21] = v22;
  operator delete(v22);
  v23 = *v12;
  if (!*v12)
  {
LABEL_7:
    v24 = *v11;
    if (!*v11)
      goto LABEL_8;
    goto LABEL_15;
  }
LABEL_14:
  v10[17] = v23;
  operator delete(v23);
  v24 = *v11;
  if (!*v11)
  {
LABEL_8:
    sub_19C1E8600(a10);
    _Unwind_Resume(a1);
  }
LABEL_15:
  v10[13] = v24;
  operator delete(v24);
  sub_19C1E8600(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1EF920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v6 = *(_BYTE **)(a2 + 24);
  v5 = *(_BYTE **)(a2 + 32);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 40) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 32) = v9;
  }
  v10 = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v12 = *(_BYTE **)(a2 + 56);
  v11 = *(_BYTE **)(a2 + 64);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 56) = v14;
    *(_QWORD *)(a1 + 64) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 72) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 64) = v15;
  }
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

void sub_19C1EFA14(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void *v5;
  void *v6;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 64) = v5;
    operator delete(v5);
  }
  v6 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C1EFA48(uint64_t a1@<X0>, uint64_t a2@<X1>, const double **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  double *v9;
  double *v10;
  int v11;
  int v12;
  uint64_t v13;
  const void *v14;
  int64_t v15;
  char *v16;
  char *v17;
  int v18;
  int64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  signed int v25;
  float64x2_t *v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  _OWORD *f64;
  double v33;
  double v34;
  unint64_t v35;
  unint64_t v36;
  double *v37;
  double *v38;
  unint64_t v39;
  double v40;
  float64x2_t *v41;
  float64x2_t *v42;
  unint64_t v43;
  float64x2_t v44;
  void *v45;
  void *v46;
  char *v47;
  int v48;
  void *__p[3];
  signed int v50;
  float64x2_t *v51;
  float64x2_t *v52;
  char *v53;
  vDSP_Length __N;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_DWORD *)a1;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v51 = 0;
  v52 = 0;
  v53 = 0;
  v12 = v11 + 1;
  if (v11 != -1)
  {
    if (v11 <= -2)
      sub_19C07DA0C();
    v10 = (double *)operator new(8 * v12);
    v8 = (uint64_t)&v10[v11 + 1];
    bzero(v10, 8 * v12);
    v9 = &v10[v12];
  }
  *(_QWORD *)a4 = v10;
  *(_QWORD *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = v8;
  *(_DWORD *)(a4 + 24) = v12;
  v14 = *(const void **)a2;
  v13 = *(_QWORD *)(a2 + 8);
  v15 = v13 - *(_QWORD *)a2;
  if (v13 == *(_QWORD *)a2)
  {
    v17 = 0;
    v16 = 0;
  }
  else
  {
    if (v15 < 0)
      sub_19C07DA0C();
    v16 = (char *)operator new(v13 - *(_QWORD *)a2);
    v17 = &v16[8 * (v15 >> 3)];
    memcpy(v16, v14, v15);
  }
  v18 = *(_DWORD *)(a2 + 24);
  vDSP_vsubD(*a3, 1, (const double *)v16, 1, (double *)v16, 1, v18);
  v19 = v17 - v16;
  if (v17 == v16)
  {
    v21 = 0;
    v20 = 0;
  }
  else
  {
    if (v19 < 0)
      sub_19C07DA0C();
    v20 = (char *)operator new(v17 - v16);
    v21 = &v20[8 * (v19 >> 3)];
    memcpy(v20, v16, v19);
  }
  vDSP_vdivD(*(const double **)(a1 + 24), 1, (const double *)v20, 1, (double *)v20, 1, v18);
  v45 = 0;
  v46 = 0;
  v47 = 0;
  v22 = v21 - v20;
  if (v21 != v20)
  {
    if (v22 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(v21 - v20);
    v24 = &v23[8 * (v22 >> 3)];
    v45 = v23;
    v47 = v24;
    memcpy(v23, v20, v21 - v20);
    v46 = v24;
  }
  v48 = v18;
  sub_19C1EFF00((uint64_t)&v45, (uint64_t)__p);
  v25 = v50;
  v52 = 0;
  v53 = 0;
  v51 = 0;
  if (v50)
  {
    if (v50 < 0)
      sub_19C07DA0C();
    v26 = (float64x2_t *)operator new(8 * v50);
    v51 = v26;
    v53 = (char *)&v26->f64[v25];
    bzero(v26, 8 * v25);
    v27 = 0;
    v52 = (float64x2_t *)((char *)v26 + 8 * v25);
    LODWORD(__N) = v25;
    v28 = __p[0];
    if (v25 < 4)
      goto LABEL_52;
    if ((unint64_t)((char *)v26 - (char *)__p[0]) < 0x20)
      goto LABEL_52;
    v29 = 0;
    v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
    v30 = v27;
    do
    {
      v31 = *(_OWORD *)&v28[v29 / 8 + 2];
      f64 = (_OWORD *)v26[v29 / 0x10].f64;
      *f64 = *(_OWORD *)&v28[v29 / 8];
      f64[1] = v31;
      v29 += 32;
      v30 -= 4;
    }
    while (v30);
    if (v27 != v25)
    {
LABEL_52:
      do
      {
        *(_QWORD *)&v26->f64[v27] = v28[v27];
        ++v27;
      }
      while (v25 != v27);
    }
  }
  else
  {
    v26 = 0;
    LODWORD(__N) = 0;
    v28 = __p[0];
    if (!__p[0])
      goto LABEL_26;
  }
  __p[1] = v28;
  operator delete(v28);
LABEL_26:
  if (v45)
  {
    v46 = v45;
    operator delete(v45);
  }
  if (v20)
    operator delete(v20);
  if (v16)
    operator delete(v16);
  v33 = *(double *)(a1 + 16);
  __p[0] = 0;
  vDSP_sveD(v26->f64, 1, (double *)__p, (int)__N);
  v34 = exp(*(double *)__p * -0.5) * v33;
  *v10 = v34 + v34;
  v35 = *(_QWORD *)a1;
  if (*(_QWORD *)a1)
  {
    if (v35 >= 4 && (unint64_t)((char *)v10 - (char *)v26 + 8) >= 0x20)
    {
      v36 = v35 & 0xFFFFFFFFFFFFFFFCLL;
      v41 = (float64x2_t *)(v10 + 3);
      v42 = v26 + 1;
      v43 = v35 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v44 = vmulq_n_f64(*v42, v34);
        v41[-1] = vmulq_n_f64(v42[-1], v34);
        *v41 = v44;
        v41 += 2;
        v42 += 2;
        v43 -= 4;
      }
      while (v43);
      if (v35 == v36)
        goto LABEL_44;
    }
    else
    {
      v36 = 0;
    }
    v37 = &v10[v36 + 1];
    v38 = &v26->f64[v36];
    v39 = v35 - v36;
    do
    {
      v40 = *v38++;
      *v37++ = v40 * v34;
      --v39;
    }
    while (v39);
LABEL_44:
    v52 = v26;
    operator delete(v26);
    return;
  }
  if (v26)
    goto LABEL_44;
}

void sub_19C1EFE48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  void *v26;
  uint64_t v27;
  void *v28;

  if (v28)
    operator delete(v28);
  if (v26)
  {
    *(_QWORD *)(v27 + 8) = v26;
    operator delete(v26);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C1EFEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!a9)
    JUMPOUT(0x19C1EFED8);
  JUMPOUT(0x19C1EFECCLL);
}

void sub_19C1EFF00(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  char *v5;

  v4 = *(_DWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(8 * v4);
    *(_QWORD *)a2 = v5;
    *(_QWORD *)(a2 + 16) = &v5[8 * v4];
    bzero(v5, 8 * v4);
    *(_QWORD *)(a2 + 8) = &v5[8 * v4];
  }
  else
  {
    v5 = 0;
  }
  *(_DWORD *)(a2 + 24) = v4;
  vDSP_vsqD(*(const double **)a1, 1, (double *)v5, 1, v4);
}

void sub_19C1EFFA4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v2;

  if (v2)
  {
    *(_QWORD *)(v1 + 8) = v2;
    operator delete(v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C1EFFC0(void *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  sub_19C07AF7C(a1);
}

BOOL sub_19C1EFFDC(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v5;
  int v6;
  int v8;
  _BOOL4 v9;
  std::runtime_error *exception;

  if (*(_BYTE *)(a1 + 8))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Early stopping already requested.");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  v3 = *(_DWORD *)(a1 + 12);
  if (v3 == -1)
    return 0;
  v6 = *a2;
  v5 = (uint64_t)(a2 + 2);
  if (v6 == 1 || *(double *)(a1 + 120) < *((double *)a2 + 13) - *(double *)(a1 + 16))
  {
    sub_19C1C9C8C(a1 + 24, v5);
    *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 13);
    *(_DWORD *)(a1 + 128) = 0;
    *(_BYTE *)(a1 + 8) = 0;
    return 0;
  }
  else
  {
    v8 = *(_DWORD *)(a1 + 128);
    *(_DWORD *)(a1 + 128) = v8 + 1;
    v9 = v8 >= v3;
    *(_BYTE *)(a1 + 8) = v9;
    return v9;
  }
}

void sub_19C1F00C4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char **sub_19C1F00D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  BOOL v18;
  void *v20;
  _BYTE v21[4];
  _BYTE v22[12];
  _OWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  double v26;
  char *v27[2];
  int v28;
  char *v29[12];
  BOOL (**v30)(uint64_t, _DWORD *);
  char v31;
  int v32;
  BOOL (**v33)(uint64_t, int *);
  char v34;
  uint64_t v35;
  int v36;
  uint64_t *v37[13];
  int v38;

  v6 = *(_DWORD *)(a1 + 56);
  v7 = *(_DWORD *)(a1 + 60);
  v8 = *(_QWORD *)(a1 + 64);
  v21[0] = 0;
  *(_DWORD *)v22 = v7;
  *(_QWORD *)&v22[4] = v8;
  memset(v23, 0, sizeof(v23));
  v24 = v25;
  v25[0] = 0;
  v26 = 0.0;
  v27[0] = 0;
  v25[1] = 0;
  v25[2] = &v26;
  v28 = 0;
  v31 = 0;
  v30 = (BOOL (**)(uint64_t, _DWORD *))&unk_1E3D21888;
  v32 = v6;
  v34 = 0;
  v36 = HIDWORD(v8);
  v35 = *(_QWORD *)v22;
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D218E8;
  sub_19C1C5D14(v37, (uint64_t)v23);
  v37[12] = (uint64_t *)v27[1];
  v38 = v28;
  v20 = &unk_1E3D218E8;
  sub_19C17B808((char **)v23);
  v9 = *(_DWORD *)(a1 + 72);
  (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
  v10 = *(_QWORD *)(a2 + 24);
  if (!v10)
    goto LABEL_16;
  v11 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v10 + 48))(v10, v29);
  (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
  std::chrono::steady_clock::now();
  LODWORD(v20) = 1;
  sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
  v26 = v11;
  sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
  if (1 % v9)
    goto LABEL_5;
  v12 = *(_QWORD *)(a2 + 56);
  if (!v12)
LABEL_17:
    sub_19C1D6A94();
  if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v12 + 48))(v12, &v20) & 1) == 0)
  {
LABEL_5:
    if (!(*v30)((uint64_t)&v30, &v20))
    {
      v13 = (*v33)((uint64_t)&v33, (int *)&v20);
      sub_19C17B808(v27);
      sub_19C17B808((char **)v21);
      sub_19C17B808(v29);
      if (v13)
        goto LABEL_15;
      v14 = 2;
      while (1)
      {
        (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
        v15 = *(_QWORD *)(a2 + 24);
        if (!v15)
          break;
        v16 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v15 + 48))(v15, v29);
        (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
        std::chrono::steady_clock::now();
        std::chrono::steady_clock::now();
        LODWORD(v20) = v14;
        sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
        v26 = v16;
        sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
        if (!(v14 % v9))
        {
          v17 = *(_QWORD *)(a2 + 56);
          if (!v17)
            goto LABEL_17;
          if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v17 + 48))(v17, &v20) & 1) != 0)
            goto LABEL_6;
        }
        if ((*v30)((uint64_t)&v30, &v20))
          goto LABEL_6;
        v18 = (*v33)((uint64_t)&v33, (int *)&v20);
        sub_19C17B808(v27);
        sub_19C17B808((char **)v21);
        sub_19C17B808(v29);
        ++v14;
        if (v18)
          goto LABEL_15;
      }
LABEL_16:
      sub_19C1D6A94();
    }
  }
LABEL_6:
  sub_19C17B808(v27);
  sub_19C17B808((char **)v21);
  sub_19C17B808(v29);
LABEL_15:
  sub_19C1D6818(*(_QWORD *)(a1 + 120), a3);
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D218E8;
  return sub_19C17B808((char **)v37);
}

void sub_19C1F0404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char *a37)
{
  char **v37;
  char **v38;
  char **v39;
  uint64_t v40;

  sub_19C17B808(v39);
  sub_19C17B808(v38);
  sub_19C17B808(&a37);
  *(_QWORD *)(v40 - 240) = &unk_1E3D218E8;
  sub_19C17B808(v37);
  _Unwind_Resume(a1);
}

void sub_19C1F0480(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  std::logic_error *exception;
  uint64_t v5;

  v3 = *(_DWORD *)(a1 + 48);
  if (v3 == 1)
  {
    sub_19C1F0528(a1, &v5);
    *a2 = v5;
  }
  else
  {
    if (v3)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1C79A4(exception, "Invalid optimizer in user config.");
      __cxa_throw(exception, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    }
    sub_19C1C76D4(a1, &v5);
    *a2 = v5;
  }
}

void sub_19C1F0514(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C1F0528(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  void **v15;
  void *v16;
  void **v17;
  void *__p;
  char **v19;
  char v20;

  v4 = operator new();
  sub_19C1C2D98((uint64_t)&v14, a1);
  sub_19C1F0690(v4, (uint64_t *)&v14);
  *a2 = v4;
  if (v20)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v19;
      v7 = __p;
      if (v19 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v19 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v16;
  if (v16)
  {
    v9 = v17;
    v10 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v16;
    }
    v17 = v8;
    operator delete(v10);
  }
  v11 = (void **)v14;
  if (v14)
  {
    v12 = v15;
    v13 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v14;
    }
    v15 = v11;
    operator delete(v13);
  }
}

void sub_19C1F0660(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  va_list va;

  va_start(va, a2);
  sub_19C1C2E88((uint64_t)va);
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_19C1F067C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1F0690(uint64_t a1, uint64_t *a2)
{
  char **v4;
  char **v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  int v13;
  int v14;
  char ***v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  char **v38;
  char **v39;
  char **v40;
  void **v41;
  void **v42;
  void *v43;
  void **v44;
  void **v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t **v51;
  uint64_t **v52;
  uint64_t v53;
  uint64_t *v54;
  void *v56;
  void **v57;
  uint64_t v58;
  void *v59;
  void **v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  void *v64;
  void **v65;
  void *v66;
  void **v67;
  void *__p;
  char **v69;
  char v70;

  sub_19C1C2D98((uint64_t)&v64, (uint64_t)a2);
  *(_QWORD *)a1 = &unk_1E3D214F8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_19C1C2D98(a1 + 32, (uint64_t)&v64);
  if (v70)
  {
    v4 = (char **)__p;
    if (__p)
    {
      v5 = v69;
      v6 = __p;
      if (v69 != __p)
      {
        do
          v5 = sub_19C17B808(v5 - 12);
        while (v5 != v4);
        v6 = __p;
      }
      v69 = v4;
      operator delete(v6);
    }
  }
  v7 = (void **)v66;
  if (v66)
  {
    v8 = v67;
    v9 = v66;
    if (v67 != v66)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v66;
    }
    v67 = v7;
    operator delete(v9);
  }
  v10 = (void **)v64;
  if (v64)
  {
    v11 = v65;
    v12 = v64;
    if (v65 != v64)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v64;
    }
    v65 = v10;
    operator delete(v12);
  }
  *(_QWORD *)a1 = &unk_1E3D21768;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  v13 = sub_19C178A44(a2);
  v14 = sub_19C179558((uint64_t)a2);
  *(_DWORD *)(a1 + 176) = v14 + v13;
  sub_19C1F1490(a1 + 184, v14 + v13);
  *(_QWORD *)(a1 + 464) = 0;
  *(_QWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 488) = 0;
  *(_QWORD *)(a1 + 480) = 0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 316) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 444) = 0u;
  *(_QWORD *)(a1 + 528) = 0;
  *(_QWORD *)(a1 + 520) = 0;
  *(_DWORD *)(a1 + 544) = 0;
  *(_QWORD *)(a1 + 536) = 0;
  *(_DWORD *)(a1 + 560) = -1;
  *(_QWORD *)(a1 + 504) = &unk_1E3D21010;
  *(_QWORD *)(a1 + 512) = a1 + 176;
  *(_QWORD *)(a1 + 568) = 0;
  *(_QWORD *)(a1 + 584) = 0;
  sub_19C1C81AC(a1 + 592);
  v15 = (char ***)(a1 + 10696);
  *(_QWORD *)(a1 + 10712) = 0;
  *(_OWORD *)(a1 + 10696) = 0u;
  if ((int)sub_19C179558(a1 + 32) < 1)
    sub_19C1F0F38(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)(a1 + 108), (uint64_t *)&v62);
  else
    sub_19C1F0D8C(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)&v62);
  v16 = v62;
  *(_QWORD *)&v62 = 0;
  v17 = *(_QWORD *)(a1 + 584);
  *(_QWORD *)(a1 + 584) = v16;
  if (v17)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v62;
    *(_QWORD *)&v62 = 0;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v19 = 0;
    v20 = *(_DWORD *)(a1 + 108);
    *(_DWORD *)(a1 + 8184) = v20;
    v21 = 1;
    v22 = v20;
    do
    {
      v23 = 1812433253 * (v22 ^ (v22 >> 30));
      v22 = v23 + v21;
      *(_DWORD *)(a1 + 8188 + 4 * v19) = v19 + v23 + 1;
      ++v21;
      ++v19;
    }
    while (v19 != 623);
    *(_QWORD *)(a1 + 10680) = 0;
    *(_DWORD *)(a1 + 592) = v20;
    v24 = 1;
    v25 = 149;
    v26 = v20;
    do
    {
      v27 = 1812433253 * (v26 ^ (v26 >> 30));
      v26 = v27 + v24;
      *(_DWORD *)(a1 + 4 * v25) = v25 + v27 - 148;
      ++v24;
      ++v25;
    }
    while (v25 != 772);
    v28 = 0;
    *(_QWORD *)(a1 + 3088) = 0;
    *(_DWORD *)(a1 + 3120) = v20;
    v29 = 1;
    v30 = v20;
    do
    {
      v31 = 1812433253 * (v30 ^ (v30 >> 30));
      v30 = v31 + v29;
      *(_DWORD *)(a1 + 3124 + 4 * v28) = v28 + v31 + 1;
      ++v29;
      ++v28;
    }
    while (v28 != 623);
    v32 = 0;
    *(_QWORD *)(a1 + 5616) = 0;
    *(_DWORD *)(a1 + 5640) = v20;
    v33 = 1;
    do
    {
      v34 = 1812433253 * (v20 ^ (v20 >> 30));
      v20 = v34 + v33;
      *(_DWORD *)(a1 + 5644 + 4 * v32) = v32 + v34 + 1;
      ++v33;
      ++v32;
    }
    while (v32 != 623);
    *(_QWORD *)(a1 + 8136) = 0;
    sub_19C23B684();
  }
  v57 = 0;
  v58 = 0;
  v56 = 0;
  sub_19C17AF88(&v56, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 4));
  v59 = 0;
  v60 = 0;
  v61 = 0;
  sub_19C17B16C(&v59, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 56)) >> 3));
  v35 = sub_19C178A44((uint64_t *)(a1 + 32));
  v36 = 5 * (sub_19C179558(a1 + 32) + v35);
  if (*(_BYTE *)(a1 + 144))
  {
    v37 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
    if ((int)v36 <= v37)
      v36 = v37;
    else
      v36 = v36;
  }
  sub_19C17A144((uint64_t *)&v56, a1 + 592, v36, (char **)&v62);
  v38 = *v15;
  if (*v15)
  {
    v39 = *(char ***)(a1 + 10704);
    v40 = *v15;
    if (v39 != v38)
    {
      do
        v39 = sub_19C17B808(v39 - 12);
      while (v39 != v38);
      v40 = *v15;
    }
    *(_QWORD *)(a1 + 10704) = v38;
    operator delete(v40);
    *v15 = 0;
    *(_QWORD *)(a1 + 10704) = 0;
    *(_QWORD *)(a1 + 10712) = 0;
  }
  *(_OWORD *)v15 = v62;
  *(_QWORD *)(a1 + 10712) = v63;
  v63 = 0;
  v62 = 0uLL;
  v41 = (void **)v59;
  if (v59)
  {
    v42 = v60;
    v43 = v59;
    if (v60 != v59)
    {
      do
      {
        if (*((char *)v42 - 17) < 0)
          operator delete(*(v42 - 5));
        v42 -= 5;
      }
      while (v42 != v41);
      v43 = v59;
    }
    v60 = v41;
    operator delete(v43);
  }
  v44 = (void **)v56;
  if (v56)
  {
    v45 = v57;
    v46 = v56;
    if (v57 != v56)
    {
      do
      {
        if (*((char *)v45 - 25) < 0)
          operator delete(*(v45 - 6));
        v45 -= 6;
      }
      while (v45 != v44);
      v46 = v56;
    }
    v57 = v44;
    operator delete(v46);
  }
  if (*(_BYTE *)(a1 + 144))
  {
    v47 = *(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120);
    if (v47)
    {
      v48 = 0;
      v49 = 0;
      v50 = v47 / 96;
      do
      {
        while (1)
        {
          v52 = *(uint64_t ***)(a1 + 10704);
          v53 = *(_QWORD *)(a1 + 10696);
          if (v49 >= 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v52 - v53) >> 5))
            break;
          if (!*(_BYTE *)(a1 + 144))
            goto LABEL_77;
          sub_19C1C9C8C(v53 + v48, *(_QWORD *)(a1 + 120) + v48);
          ++v49;
          v48 += 96;
          if (v50 == v49)
            return a1;
        }
        if (!*(_BYTE *)(a1 + 144))
LABEL_77:
          sub_19C1D1E0C();
        v54 = (uint64_t *)(*(_QWORD *)(a1 + 120) + v48);
        if ((unint64_t)v52 < *(_QWORD *)(a1 + 10712))
          v51 = sub_19C1C1840(v52, v54) + 12;
        else
          v51 = sub_19C1D1CCC((uint64_t ***)(a1 + 10696), v54);
        *(_QWORD *)(a1 + 10704) = v51;
        ++v49;
        v48 += 96;
      }
      while (v50 != v49);
    }
  }
  return a1;
}

void sub_19C1F0CA0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  _QWORD *v3;
  _QWORD *v4;
  std::random_device *v5;
  void **v6;
  void **v8;
  uint64_t v9;
  void *v10;

  sub_19C17AA64(v6);
  sub_19C1C7C7C(v5);
  v8 = (void **)(v1 + 65);
  v9 = v1[73];
  v1[73] = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  *v4 = &unk_1E3D20EF8;
  v10 = *v8;
  if (*v8)
  {
    v1[66] = v10;
    operator delete(v10);
  }
  sub_19C1EC3CC(v3);
  sub_19C1C9D28(v2);
  sub_19C1C7CC8(v1);
  _Unwind_Resume(a1);
}

void sub_19C1F0D8C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v6 = operator new();
  v14 = 0;
  v15 = 0;
  v13 = 0;
  sub_19C17AF88(&v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1F2648(v6, a1, (uint64_t *)&v13);
  *a3 = v6;
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v17;
    v9 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v17 = v7;
    operator delete(v9);
  }
  v10 = (void **)v13;
  if (v13)
  {
    v11 = v14;
    v12 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v13;
    }
    v14 = v10;
    operator delete(v12);
  }
}

void sub_19C1F0EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1F0F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1F0F38(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  void **v9;
  void **v10;
  void *v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  uint64_t v17;
  void *__p;
  void **v19;
  uint64_t v20;

  v8 = operator new();
  v16 = 0;
  v17 = 0;
  v15 = 0;
  sub_19C17AF88(&v15, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1F39B0(v8, a1, (uint64_t *)&v15, *a3);
  *a4 = v8;
  v9 = (void **)__p;
  if (__p)
  {
    v10 = v19;
    v11 = __p;
    if (v19 != __p)
    {
      do
      {
        if (*((char *)v10 - 17) < 0)
          operator delete(*(v10 - 5));
        v10 -= 5;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v19 = v9;
    operator delete(v11);
  }
  v12 = (void **)v15;
  if (v15)
  {
    v13 = v16;
    v14 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v13 - 25) < 0)
          operator delete(*(v13 - 6));
        v13 -= 6;
      }
      while (v13 != v12);
      v14 = v15;
    }
    v16 = v12;
    operator delete(v14);
  }
}

void sub_19C1F1090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1F10AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1F10E8(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_19C1F505C(a1);
  operator delete(v1);
}

uint64_t **sub_19C1F10FC@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  signed int v8;
  char *v10[13];

  v4 = a1 + 8;
  v5 = 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3);
  v6 = a1 + 32;
  v7 = sub_19C178A44((uint64_t *)(a1 + 32));
  v8 = 5 * (sub_19C179558(v6) + v7);
  if (*(_BYTE *)(v4 + 136) && v8 <= (int)(-1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5)))
    v8 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
  if (v5 < v8)
    return sub_19C1C1840(a2, (uint64_t *)(*(_QWORD *)(a1 + 10696)+ 96 * (int)(-991146299 * ((*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3))));
  (*(void (**)(char **__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 584) + 16))(v10, *(_QWORD *)(a1 + 584), v4);
  sub_19C1C1840(a2, (uint64_t *)v10);
  return (uint64_t **)sub_19C17B808(v10);
}

void sub_19C1F1214(uint64_t a1, __int128 **a2, double a3)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  long double v11;
  double v12;
  unint64_t v13;
  void *v14;
  int64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t **v23;
  uint64_t **v24;
  uint64_t **v25;
  double v26;
  double v27;
  double v28;
  void *__p;
  _BYTE *v30;
  int v31;
  uint64_t *v32[12];
  double v33;

  sub_19C1CBD8C(a2, (uint64_t)&__p);
  v6 = sub_19C1F35E8(a1 + 176, (const double **)&__p);
  v8 = sqrt(v7);
  v27 = v8;
  v28 = v6;
  v9 = v6 - (*(double *)(a1 + 552) + *(double *)(a1 + 568));
  v10 = v9 / v8;
  v11 = erfc(v9 / v8 * -0.707106781) * (0.5 * v9);
  v12 = v11 + v8 * 0.39894228 * exp(v10 * v10 * -0.5);
  v26 = v12;
  v13 = *(_QWORD *)(a1 + 160);
  if (v13 >= *(_QWORD *)(a1 + 168))
  {
    v18 = sub_19C1D2BAC((uint64_t *)(a1 + 152), (uint64_t)&__p, &v28, (uint64_t *)&v27, (uint64_t *)&v26);
  }
  else
  {
    *(_QWORD *)v13 = 0;
    *(_QWORD *)(v13 + 8) = 0;
    *(_QWORD *)(v13 + 16) = 0;
    v14 = __p;
    v15 = v30 - (_BYTE *)__p;
    if (v30 != __p)
    {
      if (v15 < 0)
        sub_19C07DA0C();
      v16 = (char *)operator new(v30 - (_BYTE *)__p);
      *(_QWORD *)v13 = v16;
      *(_QWORD *)(v13 + 8) = v16;
      v17 = &v16[8 * (v15 >> 3)];
      *(_QWORD *)(v13 + 16) = v17;
      memcpy(v16, v14, v15);
      *(_QWORD *)(v13 + 8) = v17;
    }
    *(_DWORD *)(v13 + 24) = v31;
    *(double *)(v13 + 32) = v6;
    *(double *)(v13 + 40) = v8;
    *(double *)(v13 + 48) = v12;
    v18 = v13 + 56;
    *(_QWORD *)(a1 + 160) = v13 + 56;
  }
  *(_QWORD *)(a1 + 160) = v18;
  v19 = *(int *)(a1 + 488);
  v20 = v19 + 1;
  *(_DWORD *)(a1 + 488) = v19 + 1;
  v21 = *(_QWORD *)(a1 + 464);
  v22 = (*(_QWORD *)(a1 + 472) - v21) >> 3;
  if (v19 + 1 <= v22)
  {
    if (v19 + 1 < v22)
      *(_QWORD *)(a1 + 472) = v21 + 8 * v19 + 8;
  }
  else
  {
    sub_19C17C9D8(a1 + 464, v19 + 1 - v22);
    v20 = *(int *)(a1 + 488);
    v21 = *(_QWORD *)(a1 + 464);
  }
  *(double *)(v21 + 8 * v20 - 8) = a3;
  sub_19C1F51D4(a1 + 176, (uint64_t)&__p);
  sub_19C1F6384(a1 + 496, a1 + 176);
  sub_19C1F1720(a1 + 504);
  sub_19C1C1840(v32, (uint64_t *)a2);
  v33 = a3;
  v23 = *(uint64_t ***)(a1 + 16);
  if ((unint64_t)v23 >= *(_QWORD *)(a1 + 24))
  {
    v25 = sub_19C1C907C((uint64_t ***)(a1 + 8), (uint64_t *)v32);
  }
  else
  {
    v24 = sub_19C1C1840(v23, (uint64_t *)v32);
    *((double *)v24 + 12) = v33;
    v25 = v24 + 13;
  }
  *(_QWORD *)(a1 + 16) = v25;
  sub_19C17B808((char **)v32);
  if (__p)
  {
    v30 = __p;
    operator delete(__p);
  }
}

void sub_19C1F1444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  sub_19C17B808(&a16);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1F1490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  size_t v5;
  char *v6;
  int v7;
  _QWORD *v8;
  unint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  long double *v15;
  double *v16;
  uint64_t v17;
  long double v18;
  long double v20;

  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_19C27A9D0;
  *(_QWORD *)(a1 + 24) = 0;
  v4 = a2 << 32;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v5 = 8 * (int)a2;
  if ((_DWORD)a2)
  {
    if ((a2 & 0x80000000) != 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * (int)a2);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 40) = &v6[8 * (int)a2];
    bzero(v6, v5);
    *(_QWORD *)(a1 + 32) = &v6[v5];
    *(_DWORD *)(a1 + 48) = a2;
    if (v4)
      goto LABEL_4;
  }
  else
  {
    v6 = 0;
    *(_DWORD *)(a1 + 48) = 0;
    if (v4)
LABEL_4:
      memset_pattern16(v6, &unk_19C277730, v5);
  }
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v7 = a2 + 1;
  if ((_DWORD)a2 == -1)
  {
    v8 = 0;
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 72) = 0;
    *(_DWORD *)(a1 + 80) = v7;
    MEMORY[0] = 0;
    if (!a2)
      return a1;
    goto LABEL_12;
  }
  if (v7 < 0)
    sub_19C07DA0C();
  v8 = operator new(8 * v7);
  bzero(v8, 8 * v7);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = &v8[v7];
  *(_QWORD *)(a1 + 72) = &v8[v7];
  *(_DWORD *)(a1 + 80) = v7;
  *v8 = 0;
  if (a2)
  {
LABEL_12:
    v9 = 0;
    if (a2 == 1)
      goto LABEL_16;
    v9 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v10 = v8 + 1;
    v11 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v12 = (__int128 *)v6;
    do
    {
      v13 = *v12++;
      v20 = log(*((long double *)&v13 + 1));
      *(double *)&v14 = log(*(long double *)&v13);
      *((long double *)&v14 + 1) = v20;
      *v10++ = v14;
      v11 -= 2;
    }
    while (v11);
    if (v9 != a2)
    {
LABEL_16:
      v15 = (long double *)&v8[v9 + 1];
      v16 = (double *)&v6[8 * v9];
      v17 = a2 - v9;
      do
      {
        v18 = *v16++;
        *v15++ = log(v18);
        --v17;
      }
      while (v17);
    }
  }
  return a1;
}

void sub_19C1F166C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1F1688(void *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v4;
    operator delete(v4);
  }
  sub_19C07AF7C(a1);
}

long double sub_19C1F16A4(uint64_t a1, double a2, double a3)
{
  double v4;
  double v5;
  long double v6;

  v4 = a2 - (*(double *)(a1 + 48) + *(double *)(a1 + 64));
  v5 = v4 / a3;
  v6 = erfc(v4 / a3 * -0.707106781) * (0.5 * v4);
  return v6 + a3 * 0.39894228 * exp(v5 * v5 * -0.5);
}

double sub_19C1F1718()
{
  return 0.0;
}

void sub_19C1F1720(uint64_t a1)
{
  _QWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double *v10;
  double *v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  char *v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  __int128 *v19;
  _OWORD *v20;
  unint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const double *v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  double *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  double *v44;
  uint64_t v45;
  unint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  double *v52;
  uint64_t v53;
  __int128 v54;
  double *v55;
  double *v56;
  double v57;
  double *v58;
  double *v59;
  double v60;
  BOOL v61;
  char *v62;
  signed int v63;
  _OWORD *v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  _OWORD *v84;
  unint64_t v85;
  __int128 v86;
  unint64_t v87;
  uint64_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v93;
  uint64_t v94;
  void *__p;
  int v96[2];
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  double *v104;
  uint64_t v105;
  double *v106;
  double *v107;
  double *v108;
  uint64_t v109;
  unsigned int v110;

  v104 = 0;
  v105 = 0;
  v106 = 0;
  v1 = *(_QWORD **)(a1 + 8);
  v101 = 0;
  v102 = 0;
  v100 = 0;
  v3 = (_BYTE *)v1[12];
  v2 = (_BYTE *)v1[13];
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(v2 - v3);
    v6 = &v5[8 * (v4 >> 3)];
    v100 = v5;
    v102 = v6;
    memcpy(v5, v3, v4);
    v101 = v6;
  }
  v7 = v1[15];
  v103 = v7;
  if (!(_DWORD)v7)
  {
    v55 = 0;
    v58 = 0;
    *(_DWORD *)(a1 + 56) = 0;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v90 = (int)v7;
  v91 = v7;
  v13 = 8 * (v7 >> 32);
  v88 = v7 >> 32;
  v89 = v13;
  v87 = (v7 >> 32) & 0xFFFFFFFFFFFFFFFCLL;
  v93 = HIDWORD(v7);
  v94 = 16;
  do
  {
    v14 = *(_QWORD *)(a1 + 8);
    v15 = v100;
    __p = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    if (!(_DWORD)v93)
    {
      v16 = 0;
      v108 = 0;
      v109 = 0;
      v107 = 0;
      v110 = 0;
      goto LABEL_27;
    }
    if (v7 < 0)
      sub_19C07DA0C();
    v16 = operator new(v13);
    bzero(v16, v13);
    if ((unint64_t)v7 >> 33 < 3)
    {
      v17 = 0;
      v18 = v88;
      goto LABEL_17;
    }
    v18 = v88;
    if ((unint64_t)((char *)v16 - &v100[v13 * v12]) < 0x20)
    {
      v17 = 0;
LABEL_17:
      v23 = v18 - v17;
      v24 = 8 * v17;
      v25 = (_QWORD *)v16 + v17;
      v26 = (uint64_t *)&v15[v8 + v24];
      do
      {
        v27 = *v26++;
        *v25++ = v27;
        --v23;
      }
      while (v23);
      goto LABEL_19;
    }
    v19 = (__int128 *)&v100[v94];
    v20 = v16 + 1;
    v21 = v87;
    do
    {
      v22 = *v19;
      *(v20 - 1) = *(v19 - 1);
      *v20 = v22;
      v19 += 2;
      v20 += 2;
      v21 -= 4;
    }
    while (v21);
    v17 = v87;
    if (v88 != v87)
      goto LABEL_17;
LABEL_19:
    v107 = 0;
    v108 = 0;
    v109 = 0;
    v110 = v93;
    sub_19C17C9D8((uint64_t)&v107, v18);
    v28 = v110;
    if ((int)v110 >= 1)
    {
      v29 = 0;
      v30 = v107;
      if (v110 < 4)
        goto LABEL_25;
      if ((unint64_t)((char *)v107 - (char *)v16) < 0x20)
        goto LABEL_25;
      v31 = 0;
      v29 = v110 & 0xFFFFFFFC;
      v32 = (8 * v110) & 0x7FFFFFFE0;
      do
      {
        v33 = v16[v31 / 0x10 + 1];
        v34 = (double *)&v30[v31 / 8];
        *(_OWORD *)v34 = v16[v31 / 0x10];
        *((_OWORD *)v34 + 1) = v33;
        v31 += 32;
      }
      while (v32 != v31);
      if (v29 != v28)
      {
LABEL_25:
        v35 = v28 - v29;
        v36 = v29 << 32;
        do
        {
          *(const double *)((char *)v30 + (v36 >> 29)) = *(const double *)((char *)v16 + (v36 >> 29));
          v36 += 0x100000000;
          --v35;
        }
        while (v35);
      }
    }
LABEL_27:
    v37 = sub_19C1F1EF0(v14, (const double **)&v107);
    v38 = v37;
    if (v11 < v10)
    {
      *v11++ = v37;
      v7 = v91;
      v13 = v89;
      v105 = (uint64_t)v11;
      v39 = v107;
      if (!v107)
        goto LABEL_30;
LABEL_29:
      v108 = v39;
      operator delete(v39);
      goto LABEL_30;
    }
    v40 = v11 - v9;
    v41 = v40 + 1;
    if ((unint64_t)(v40 + 1) >> 61)
      sub_19C07DA0C();
    if (((char *)v10 - (char *)v9) >> 2 > v41)
      v41 = ((char *)v10 - (char *)v9) >> 2;
    if ((unint64_t)((char *)v10 - (char *)v9) >= 0x7FFFFFFFFFFFFFF8)
      v42 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v42 = v41;
    if (v42)
    {
      if (v42 >> 61)
        sub_19C07C7FC();
      v43 = operator new(8 * v42);
      v44 = (double *)&v43[8 * v40];
      *v44 = v38;
      v45 = (uint64_t)(v44 + 1);
      if (v11 != v9)
      {
LABEL_41:
        v46 = (char *)(v11 - 1) - (char *)v9;
        if (v46 < 0x168
          || &v43[(char *)v11 - (char *)v9 - 8 - (v46 & 0xFFFFFFFFFFFFFFF8)] > &v43[(char *)v11 - (char *)v9 - 8]
          || (double *)((char *)v11 - (v46 & 0xFFFFFFFFFFFFFFF8) - 8) > v11 - 1
          || (unint64_t)((char *)v9 - v43) < 0x20)
        {
          v47 = v11;
          v7 = v91;
          v13 = v89;
        }
        else
        {
          v49 = (v46 >> 3) + 1;
          v50 = 8 * (v49 & 0x3FFFFFFFFFFFFFFCLL);
          v47 = &v11[v50 / 0xFFFFFFFFFFFFFFF8];
          v44 = (double *)((char *)v44 - v50);
          v51 = &v43[8 * v40 - 16];
          v52 = v11 - 2;
          v53 = v49 & 0x3FFFFFFFFFFFFFFCLL;
          v7 = v91;
          do
          {
            v54 = *(_OWORD *)v52;
            *(v51 - 1) = *((_OWORD *)v52 - 1);
            *v51 = v54;
            v51 -= 2;
            v52 -= 4;
            v53 -= 4;
          }
          while (v53);
          v13 = v89;
          if (v49 == (v49 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_44:
            v10 = (double *)&v43[8 * v42];
            v104 = v44;
            v105 = v45;
            v106 = v10;
            if (!v9)
              goto LABEL_46;
LABEL_45:
            operator delete(v9);
            goto LABEL_46;
          }
        }
        do
        {
          v48 = *((_QWORD *)v47-- - 1);
          *((_QWORD *)v44-- - 1) = v48;
        }
        while (v47 != v9);
        goto LABEL_44;
      }
    }
    else
    {
      v43 = 0;
      v44 = (double *)(8 * v40);
      *(double *)(8 * v40) = v37;
      v45 = 8 * v40 + 8;
      if (v11 != v9)
        goto LABEL_41;
    }
    v7 = v91;
    v13 = v89;
    v10 = (double *)&v43[8 * v42];
    v104 = v44;
    v105 = v45;
    v106 = v10;
    if (v9)
      goto LABEL_45;
LABEL_46:
    v9 = v44;
    v11 = (double *)v45;
    v105 = v45;
    v39 = v107;
    if (v107)
      goto LABEL_29;
LABEL_30:
    if (v16)
      operator delete(v16);
    ++v12;
    v94 += v13;
    v8 += v13;
  }
  while (v12 != v90);
  v55 = v104;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 120);
  if (v55 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v56 = v55 + 1;
  if (v55 + 1 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v57 = *v55;
  v58 = v55;
  v59 = v55 + 1;
  do
  {
    v60 = *v59++;
    v61 = v57 < v60;
    v57 = fmax(v57, v60);
    if (v61)
      v58 = v56;
    v56 = v59;
  }
  while (v59 != v11);
  v62 = v100;
  v63 = HIDWORD(v103);
  v107 = 0;
  v108 = 0;
  v109 = 0;
  if (!HIDWORD(v103))
  {
LABEL_81:
    v74 = 0;
    LODWORD(v73) = 0;
    v64 = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    __p = 0;
    v98 = 0;
    goto LABEL_82;
  }
LABEL_65:
  if (v63 < 0)
    sub_19C07DA0C();
  v64 = operator new(8 * v63);
  v65 = (v58 - v55) * v63;
  bzero(v64, 8 * v63);
  if (v63 < 0xA || (v66 = &v62[8 * v65], (unint64_t)((char *)v64 - v66) < 0x20))
  {
    v67 = 0;
    goto LABEL_69;
  }
  v67 = v63 & 0xFFFFFFFFFFFFFFFCLL;
  v83 = (__int128 *)(v66 + 16);
  v84 = v64 + 1;
  v85 = v67;
  do
  {
    v86 = *v83;
    *(v84 - 1) = *(v83 - 1);
    *v84 = v86;
    v83 += 2;
    v84 += 2;
    v85 -= 4;
  }
  while (v85);
  if (v67 != v63)
  {
LABEL_69:
    v68 = v63 - v67;
    v69 = 8 * v67;
    v70 = (_QWORD *)v64 + v67;
    v71 = &v62[8 * v65 + v69];
    do
    {
      v72 = *(_QWORD *)v71;
      v71 += 8;
      *v70++ = v72;
      --v68;
    }
    while (v68);
  }
  __p = 0;
  *(_QWORD *)v96 = 0;
  v97 = 0;
  v98 = v63;
  sub_19C17C9D8((uint64_t)&__p, v63);
  v73 = v98;
  v74 = (char *)__p;
  if ((int)v98 >= 1)
  {
    v75 = 0;
    if (v98 < 4)
      goto LABEL_77;
    if ((unint64_t)((_BYTE *)__p - (_BYTE *)v64) < 0x20)
      goto LABEL_77;
    v76 = 0;
    v75 = v98 & 0xFFFFFFFC;
    v77 = (8 * v98) & 0x7FFFFFFE0;
    do
    {
      v78 = v64[v76 / 0x10 + 1];
      v79 = &v74[v76];
      *(_OWORD *)v79 = v64[v76 / 0x10];
      *((_OWORD *)v79 + 1) = v78;
      v76 += 32;
    }
    while (v77 != v76);
    if (v75 != v73)
    {
LABEL_77:
      v80 = v73 - v75;
      v81 = v75 << 32;
      do
      {
        *(_QWORD *)&v74[v81 >> 29] = *(_QWORD *)((char *)v64 + (v81 >> 29));
        v81 += 0x100000000;
        --v80;
      }
      while (v80);
    }
  }
LABEL_82:
  v82 = *(_QWORD *)v58;
  v99 = *(_QWORD *)v58;
  if ((void **)(a1 + 16) != &__p)
  {
    sub_19C11EAD0((_QWORD *)(a1 + 16), v74, *(char **)v96, (uint64_t)(*(_QWORD *)v96 - (_QWORD)v74) >> 3);
    LODWORD(v73) = v98;
    v82 = v99;
    v74 = (char *)__p;
  }
  *(_DWORD *)(a1 + 40) = v73;
  *(_QWORD *)(a1 + 48) = v82;
  if (v74)
  {
    *(_QWORD *)v96 = v74;
    operator delete(v74);
  }
  if (v64)
    operator delete(v64);
  if (v62)
    operator delete(v62);
  if (v55)
  {
    v105 = (uint64_t)v55;
    operator delete(v55);
  }
}

void sub_19C1F1E34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  void *v28;
  void *v29;

  if (__p)
    operator delete(__p);
  if (v28)
    operator delete(v28);
  if (v29)
    operator delete(v29);
  if (a27)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

double sub_19C1F1EF0(uint64_t a1, const double **a2)
{
  double v3;
  double v4;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C1F1FD0(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v3 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v4 = __C;
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v4 + v3;
  }
  else
  {
    __A[0] = 0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)__A, *(int *)(a1 + 312));
    return *(double *)__A;
  }
}

void sub_19C1F1FB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1F1FD0(uint64_t a1@<X0>, const double **a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  signed int v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  double v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  char *v25;
  void *__p;
  char *v28;
  char *v29;
  signed int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = *(_DWORD *)(a1 + 120);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  *(_DWORD *)(a3 + 24) = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  if (v3)
  {
    if (v3 < 0)
      sub_19C07DA0C();
    v5 = v3;
    v6 = (char *)operator new(8 * v3);
    bzero(v6, 8 * v3);
    v7 = 0;
    v8 = 0;
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = &v6[8 * v3];
    *(_QWORD *)(a3 + 16) = &v6[8 * v3];
    *(_DWORD *)(a3 + 24) = v3;
    v25 = v6;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 96);
      v10 = *(_DWORD *)(a1 + 124);
      v31 = 0;
      v32 = 0;
      v33 = 0;
      if (!v10)
      {
        v11 = 0;
        v28 = 0;
        v29 = 0;
        __p = 0;
        v30 = 0;
        goto LABEL_14;
      }
      if (v10 < 0)
        sub_19C07DA0C();
      v11 = operator new(8 * v10);
      bzero(v11, 8 * v10);
      if (v10 >= 8 && (unint64_t)v11 - v9 - 8 * v8 * v10 >= 0x20)
      {
        v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
        v20 = (__int128 *)(v9 + v7 * v10 + 16);
        v21 = v11 + 1;
        v22 = v12;
        do
        {
          v23 = *v20;
          *(v21 - 1) = *(v20 - 1);
          *v21 = v23;
          v20 += 2;
          v21 += 2;
          v22 -= 4;
        }
        while (v22);
        if (v12 == v10)
          goto LABEL_12;
      }
      else
      {
        v12 = 0;
      }
      v13 = v10 - v12;
      v14 = 8 * v12;
      v15 = (_QWORD *)v11 + v12;
      v16 = (uint64_t *)(v9 + v14 + v7 * v10);
      do
      {
        v17 = *v16++;
        *v15++ = v17;
        --v13;
      }
      while (v13);
LABEL_12:
      __p = 0;
      v28 = 0;
      v30 = 0;
      v29 = 0;
      __p = operator new(8 * v10);
      v28 = (char *)__p + 8 * v10;
      v29 = v28;
      v30 = v10;
      memcpy(__p, v11, 8 * v10);
      v6 = v25;
LABEL_14:
      v18 = *(double *)(a1 + 24);
      v19 = sub_19C1F2278(a1 + 8, (uint64_t)&__p, a2);
      *(long double *)&v6[8 * v8] = exp(v19 * -0.5) * v18;
      if (__p)
      {
        v28 = (char *)__p;
        operator delete(__p);
      }
      if (v11)
        operator delete(v11);
      ++v8;
      v7 += 8;
      if (v8 == v5)
        return;
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
}

void sub_19C1F2204(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1F222C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14)
{
  void *v14;

  if (__p)
  {
    operator delete(__p);
    if (!v14)
    {
LABEL_3:
      *(_QWORD *)(a10 + 8) = a11;
      operator delete(a11);
      _Unwind_Resume(a1);
    }
  }
  else if (!v14)
  {
    goto LABEL_3;
  }
  operator delete(v14);
  *(_QWORD *)(a10 + 8) = a11;
  operator delete(a11);
  _Unwind_Resume(a1);
}

double sub_19C1F2278(uint64_t a1, uint64_t a2, const double **a3)
{
  uint64_t v6;
  double *v7;
  double *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  const void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  signed int v16;
  uint64_t v17;
  char *v18;
  double *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  double *v24;
  double v25;
  void *__p[4];
  double *__A[3];
  vDSP_Length v29;
  char *v30;
  char *v31;
  char *v32;
  signed int v33;
  double __C;
  char *v35;
  char *v36;
  signed int v37;
  double *__B;
  double *v39;
  double *v40;
  signed int v41;
  void *v42[3];
  int v43;

  sub_19C1E98BC(*(_DWORD *)(a1 + 48), *(_DWORD *)(a1 + 48), (uint64_t)v42);
  v6 = *(int *)(a1 + 48);
  if ((_DWORD)v6)
  {
    v7 = *(double **)(a1 + 24);
    v8 = (double *)v42[0];
    v9 = 8 * v43 + 8;
    do
    {
      v10 = *v7++;
      *v8 = 1.0 / (v10 * v10);
      v8 = (double *)((char *)v8 + v9);
      --v6;
    }
    while (v6);
  }
  v31 = 0;
  v32 = 0;
  v30 = 0;
  v12 = *(const void **)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v13 = v11 - *(_QWORD *)a2;
  if (v11 == *(_QWORD *)a2)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - *(_QWORD *)a2);
    v15 = &v14[8 * (v13 >> 3)];
    v30 = v14;
    v32 = v15;
    memcpy(v14, v12, v13);
    v31 = v15;
  }
  v16 = *(_DWORD *)(a2 + 24);
  v33 = v16;
  vDSP_vsubD(*a3, 1, (const double *)v14, 1, (double *)v14, 1, v16);
  __C = 0.0;
  v35 = 0;
  v36 = 0;
  v17 = v15 - v14;
  if (v15 != v14)
  {
    if (v17 < 0)
      sub_19C07DA0C();
    v18 = (char *)operator new(v15 - v14);
    *(_QWORD *)&__C = v18;
    v36 = &v18[8 * (v17 >> 3)];
    memcpy(v18, v14, v15 - v14);
    v35 = v36;
    v37 = v16;
    v39 = 0;
    v40 = 0;
    __B = 0;
    if (!v16)
    {
      v41 = 0;
      v35 = v18;
      operator delete(v18);
      if (!v14)
        goto LABEL_23;
LABEL_22:
      v31 = v14;
      operator delete(v14);
      goto LABEL_23;
    }
LABEL_14:
    if (v16 < 0)
      sub_19C07DA0C();
    v19 = (double *)operator new(8 * v16);
    __B = v19;
    v40 = &v19[v16];
    bzero(v19, 8 * v16);
    v39 = v40;
    v41 = v16;
    if (v16 >= 4)
    {
      v21 = 0;
      v20 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = v20;
      do
      {
        v23 = *(_OWORD *)&v18[v21 * 8 + 16];
        v24 = &v19[v21];
        *(_OWORD *)v24 = *(_OWORD *)&v18[v21 * 8];
        *((_OWORD *)v24 + 1) = v23;
        v21 += 4;
        v22 -= 4;
      }
      while (v22);
      if (v20 == v16)
      {
LABEL_21:
        v35 = v18;
        operator delete(v18);
        if (!v14)
          goto LABEL_23;
        goto LABEL_22;
      }
    }
    else
    {
      v20 = 0;
    }
    do
    {
      v19[v20] = *(double *)&v18[8 * v20];
      ++v20;
    }
    while (v16 != v20);
    goto LABEL_21;
  }
  v18 = 0;
  v37 = v16;
  v39 = 0;
  v40 = 0;
  __B = 0;
  if (v16)
    goto LABEL_14;
  v41 = 0;
  if (v14)
    goto LABEL_22;
LABEL_23:
  sub_19C1CE998((uint64_t)&__B, (uint64_t)__p);
  sub_19C1E97B8((uint64_t)__p, (uint64_t)v42, (uint64_t)__A);
  vDSP_mmulD(__A[0], 1, __B, 1, &__C, 1, 1uLL, 1uLL, (int)v29);
  v25 = __C;
  if (__A[0])
  {
    __A[1] = __A[0];
    operator delete(__A[0]);
  }
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (__B)
  {
    v39 = __B;
    operator delete(__B);
  }
  if (v42[0])
  {
    v42[1] = v42[0];
    operator delete(v42[0]);
  }
  return v25;
}

void sub_19C1F2570(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  uint64_t v28;
  void *v30;
  void *v31;
  void *v32;

  if (__p)
  {
    operator delete(__p);
    v30 = a11;
    if (!a11)
    {
LABEL_3:
      v31 = a27;
      if (!a27)
      {
LABEL_8:
        v32 = *(void **)(v28 - 112);
        if (v32)
        {
          *(_QWORD *)(v28 - 104) = v32;
          operator delete(v32);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_7:
      operator delete(v31);
      goto LABEL_8;
    }
  }
  else
  {
    v30 = a11;
    if (!a11)
      goto LABEL_3;
  }
  operator delete(v30);
  v31 = a27;
  if (!a27)
    goto LABEL_8;
  goto LABEL_7;
}

uint64_t sub_19C1F2648(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void **v6;
  void **v7;
  void *v8;
  void **v9;
  void **v10;
  void *v11;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_19C17AF88(&v13, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21558;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v13, (uint64_t)v14, 0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (_BYTE *)v13) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v17, 0xCCCCCCCCCCCCCCCDLL * (((char *)v17 - (_BYTE *)__p) >> 3));
  v6 = (void **)__p;
  if (__p)
  {
    v7 = v17;
    v8 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v7 - 17) < 0)
          operator delete(*(v7 - 5));
        v7 -= 5;
      }
      while (v7 != v6);
      v8 = __p;
    }
    v17 = v6;
    operator delete(v8);
  }
  v9 = (void **)v13;
  if (v13)
  {
    v10 = v14;
    v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 25) < 0)
          operator delete(*(v10 - 6));
        v10 -= 6;
      }
      while (v10 != v9);
      v11 = v13;
    }
    v14 = v9;
    operator delete(v11);
  }
  *(_QWORD *)a1 = &unk_1E3D213D8;
  *(_DWORD *)(a1 + 64) = 5;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_19C1F27E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;

  v11 = v10;
  if (*v11)
  {
    sub_19C2563D4(v9, *v11);
    sub_19C17A75C(&a9);
    _Unwind_Resume(a1);
  }
  sub_19C17A75C(&a9);
  _Unwind_Resume(a1);
}

void sub_19C1F2828(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    sub_19C25623C((uint64_t)&a9, a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_19C1F2844(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;

  *a1 = &unk_1E3D213D8;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  return sub_19C1F2E6C(a1);
}

void sub_19C1F28AC(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;
  _QWORD *v5;

  *a1 = &unk_1E3D213D8;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  v5 = sub_19C1F2E6C(a1);
  operator delete(v5);
}

void sub_19C1F2918(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  double *v15;
  double *v16;
  double *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v29;
  double v30;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD **v33;
  BOOL v34;
  uint64_t *v35;
  char **v36;
  char **v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40[4];
  uint64_t *v41;
  double *__A;
  double *v43;
  void *__p;
  char *v45;
  char *v46[3];
  char *v47[3];
  uint64_t *v48[12];
  char v49[8];
  _QWORD **v50;
  _QWORD *v51[2];
  uint64_t *v52;
  char **v53;
  double __C[2];

  sub_19C1F2F34(a1);
  v6 = *(_QWORD *)(a1 + 72);
  if (v6 == *(_QWORD *)(a1 + 80))
  {
    v39 = a3;
    sub_19C1CBA2C(a2, &v52);
    sub_19C1F31C8(a2, (uint64_t)v49);
    v7 = v50;
    if (v50 != v51)
    {
      do
      {
        v8 = *(_QWORD *)((char *)v7 + 28);
        sub_19C1C1840(v48, &v52[12 * (int)v8]);
        if (SHIDWORD(v8) >= 1)
        {
          v9 = 0;
          v10 = HIDWORD(v8) & ~(v8 >> 63);
          do
          {
            sub_19C1F3304(a1, (uint64_t *)v48, (uint64_t **)&__A);
            sub_19C17A814((char **)v48, (uint64_t)&__A);
            sub_19C098FBC((uint64_t)v47, v47[1]);
            sub_19C098FBC((uint64_t)v46, v46[1]);
            v11 = (char *)__p;
            if (__p)
            {
              v12 = v45;
              v13 = __p;
              if (v45 != __p)
              {
                do
                {
                  v14 = (void *)*((_QWORD *)v12 - 4);
                  if (v14)
                  {
                    *((_QWORD *)v12 - 3) = v14;
                    operator delete(v14);
                  }
                  if (*(v12 - 33) < 0)
                    operator delete(*((void **)v12 - 7));
                  v12 -= 56;
                }
                while (v12 != v11);
                v13 = __p;
              }
              v45 = v11;
              operator delete(v13);
            }
            v15 = __A;
            if (*(double *)&__A != 0.0)
            {
              v16 = v43;
              v17 = __A;
              if (v43 != __A)
              {
                do
                {
                  v18 = (void *)*((_QWORD *)v16 - 4);
                  if (v18)
                  {
                    *((_QWORD *)v16 - 3) = v18;
                    operator delete(v18);
                  }
                  if (*((char *)v16 - 33) < 0)
                    operator delete(*((void **)v16 - 7));
                  v16 -= 7;
                }
                while (v16 != v15);
                v17 = __A;
              }
              v43 = v15;
              operator delete(v17);
            }
            v41 = 0;
            v19 = *(_QWORD *)(a1 + 8);
            sub_19C1CBD8C((__int128 **)v48, (uint64_t)v40);
            v20 = *(_QWORD *)(v19 + 8);
            if (*(_DWORD *)(v20 + 120))
            {
              sub_19C1F1FD0(*(_QWORD *)(v19 + 8), (const double **)v40, (uint64_t)&__A);
              __C[0] = 0.0;
              vDSP_dotprD(__A, 1, *(const double **)(v20 + 256), 1, __C, (int)__p);
              v21 = __C[0];
              __C[0] = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, __C, *(int *)(v20 + 312));
              v22 = __C[0];
              sub_19C1F37BC(v20, (const double **)v40, (uint64_t)&__A);
              v24 = v23;
              v25 = *(double *)(v20 + 16);
              if (*(double *)&__A != 0.0)
              {
                v43 = __A;
                operator delete(__A);
              }
              v26 = v22 + v21;
              v27 = v25 + v24;
            }
            else
            {
              *(double *)&__A = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, (double *)&__A, *(int *)(v20 + 312));
              v26 = *(double *)&__A;
              v27 = sub_19C1F36F0(v20, (const double **)v40);
            }
            v28 = sqrt(v27);
            if (v28 < 0.00000001 || (v29 = *(_DWORD *)(*(_QWORD *)(v19 + 8) + 120), v29 <= 0))
            {
              v30 = (*(double (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            }
            else
            {
              if (*(_DWORD *)(v19 + 56) != v29)
                (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
              (**(void (***)(uint64_t, double, double))v19)(v19, v26, v28);
            }
            v31 = *(uint64_t **)&v30;
            if (v40[0])
            {
              v40[1] = v40[0];
              operator delete(v40[0]);
            }
            v41 = v31;
            sub_19C1CC134((int *)(a1 + 64), (uint64_t *)v48, &v41);
            ++v9;
          }
          while (v10 != v9);
        }
        sub_19C17B808((char **)v48);
        v32 = (_QWORD *)v7[1];
        if (v32)
        {
          do
          {
            v33 = (_QWORD **)v32;
            v32 = (_QWORD *)*v32;
          }
          while (v32);
        }
        else
        {
          do
          {
            v33 = (_QWORD **)v7[2];
            v34 = *v33 == v7;
            v7 = v33;
          }
          while (!v34);
        }
        v7 = v33;
      }
      while (v33 != v51);
    }
    v35 = *(uint64_t **)(a1 + 72);
    sub_19C1C1840((uint64_t **)v39, v35);
    *(_QWORD *)(v39 + 96) = v35[12];
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    sub_19C07C924((uint64_t)&v50, v51[0]);
    v36 = (char **)v52;
    if (v52)
    {
      v37 = v53;
      v38 = v52;
      if (v53 != (char **)v52)
      {
        do
          v37 = sub_19C17B808(v37 - 12);
        while (v37 != v36);
        v38 = v52;
      }
      v53 = v36;
      operator delete(v38);
    }
  }
  else
  {
    sub_19C1C1840((uint64_t **)a3, *(uint64_t **)(a1 + 72));
    *(_QWORD *)(a3 + 96) = *(_QWORD *)(v6 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
  }
}

void sub_19C1F2D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  char **v28;
  uint64_t v29;

  sub_19C17B808(v28);
  sub_19C07C924(a10, *(_QWORD **)(v29 - 184));
  sub_19C17AA64((void **)(v29 - 168));
  _Unwind_Resume(a1);
}

void sub_19C1F2E20(char *a1@<X8>)
{
  a1[23] = 17;
  strcpy(a1, "genetic_optimizer");
}

void sub_19C1F2E44(char *a1@<X8>)
{
  a1[23] = 21;
  strcpy(a1, "acquisition_optimizer");
}

_QWORD *sub_19C1F2E6C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *a1 = &unk_1E3D21558;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 17) < 0)
          operator delete(*(void **)(v3 - 40));
        v3 -= 40;
      }
      while (v3 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  v5 = a1[2];
  if (v5)
  {
    v6 = a1[3];
    v7 = (void *)a1[2];
    if (v6 != v5)
    {
      do
      {
        if (*(char *)(v6 - 25) < 0)
          operator delete(*(void **)(v6 - 48));
        v6 -= 48;
      }
      while (v6 != v5);
      v7 = (void *)a1[2];
    }
    a1[3] = v5;
    operator delete(v7);
  }
  return a1;
}

void sub_19C1F2F34(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  uint64_t *v11;
  uint64_t *v12;
  char **v13;
  uint64_t *v14;
  void *__p[4];
  uint64_t *v16;
  uint64_t *v17[13];
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;

  v18 = 5;
  v20 = 0;
  v21 = 0;
  v19 = 0;
  v3 = *(_QWORD *)(a1 + 72);
  v2 = (uint64_t *)(a1 + 72);
  if (v3 == *(_QWORD *)(a1 + 80))
  {
    v12 = 0;
    *(_DWORD *)(a1 + 64) = 5;
    if ((int *)(a1 + 64) == &v18)
      goto LABEL_18;
    goto LABEL_17;
  }
  do
  {
    sub_19C1C1840(v17, (uint64_t *)v3);
    v17[12] = *(uint64_t **)(v3 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)__p, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    v16 = 0;
    v4 = *(_QWORD *)(a1 + 8);
    sub_19C1CBD8C((__int128 **)v17, (uint64_t)__p);
    v5.n128_f64[0] = sub_19C1F35E8(*(_QWORD *)(v4 + 8), (const double **)__p);
    v7 = sqrt(v6);
    if (v7 < 0.00000001 || (v8 = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 120), v8 <= 0))
    {
      v10 = (*(double (**)(uint64_t, __n128))(*(_QWORD *)v4 + 8))(v4, v5);
    }
    else
    {
      v9 = v5.n128_f64[0];
      if (*(_DWORD *)(v4 + 56) != v8)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      (**(void (***)(uint64_t, double, double))v4)(v4, v9, v7);
    }
    *(double *)&v11 = v10;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    v16 = v11;
    if (*(double *)&v11 > (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8)))
      sub_19C1CC134(&v18, (uint64_t *)v17, &v16);
    sub_19C17B808((char **)v17);
    v3 = *(_QWORD *)(a1 + 72);
  }
  while (v3 != *(_QWORD *)(a1 + 80));
  v12 = v19;
  *(_DWORD *)(a1 + 64) = v18;
  if ((int *)(a1 + 64) != &v18)
  {
LABEL_17:
    sub_19C1CC414(v2, v12, v20, 0x4EC4EC4EC4EC4EC5 * (v20 - v12));
    v12 = v19;
  }
LABEL_18:
  if (v12)
  {
    v13 = (char **)v20;
    v14 = v12;
    if (v20 != v12)
    {
      do
        v13 = sub_19C17B808(v13 - 13);
      while (v13 != (char **)v12);
      v14 = v19;
    }
    v20 = v12;
    operator delete(v14);
  }
}

void sub_19C1F3164(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_19C1CB740(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1F3178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  sub_19C17B808((char **)va);
  sub_19C1CB740(v7 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1F319C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v15;

  if (__p)
    operator delete(__p);
  sub_19C17B808(&a15);
  sub_19C1CB740(v15 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1F31C8(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  int v5;
  void *__p[3];
  _QWORD v7[313];
  std::random_device v8;
  double *v9[3];

  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = a2 + 16;
  *(_QWORD *)(a2 + 24) = 0;
  sub_19C1CCB54(a1, __p);
  sub_19C17A140(v7, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v3 = 50;
  do
  {
    v5 = sub_19C1CCF6C((uint64_t)v9, (uint64_t)v7, v9);
    v4 = sub_19C1CCC40((int *)a2, &v5);
    ++*(_DWORD *)v4;
    --v3;
  }
  while (v3);
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
  std::random_device::~random_device(&v8);
}

void sub_19C1F32A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  _QWORD **v15;

  if (__p)
  {
    operator delete(__p);
    sub_19C07C924(v14, *v15);
    _Unwind_Resume(a1);
  }
  sub_19C07C924(v14, *v15);
  _Unwind_Resume(a1);
}

void sub_19C1F3304(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  void *v6[4];
  void *__p[4];
  void *v8[4];
  _OWORD v9[2];

  sub_19C1C1840(a3, a2);
  sub_19C1CD184((__int128 **)a2, (uint64_t)v8);
  sub_19C1F3490(a1, (uint64_t *)v8, v9);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v6);
  sub_19C1F353C(a1, (uint64_t *)v6, __p);
  sub_19C1CD7E0((uint64_t *)a3, (uint64_t *)v9);
  sub_19C1CD99C((uint64_t)a3, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v6[0])
  {
    v6[1] = v6[0];
    operator delete(v6[0]);
  }
  if (*(_QWORD *)&v9[0])
  {
    *((_QWORD *)&v9[0] + 1) = *(_QWORD *)&v9[0];
    operator delete(*(void **)&v9[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
}

void sub_19C1F33D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  char **v18;
  uint64_t v19;
  void *v21;
  void *v22;

  if (__p)
  {
    operator delete(__p);
    v21 = *(void **)(v19 - 64);
    if (!v21)
    {
LABEL_3:
      v22 = a17;
      if (!a17)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v21 = *(void **)(v19 - 64);
    if (!v21)
      goto LABEL_3;
  }
  *(_QWORD *)(v19 - 56) = v21;
  operator delete(v21);
  v22 = a17;
  if (!a17)
  {
LABEL_4:
    sub_19C17B808(v18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(v22);
  sub_19C17B808(v18);
  _Unwind_Resume(a1);
}

double sub_19C1F3490@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = (uint64_t *)(a1 + 16);
  if (sub_19C178A44((uint64_t *)(a1 + 16)))
  {
    sub_19C178B08(v5, (uint64_t *)v7);
    sub_19C239578(a2, (uint64_t)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1F3528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C1F353C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = a1 + 16;
  if (sub_19C179558(a1 + 16))
  {
    sub_19C17961C(v5, (uint64_t *)v7);
    sub_19C23A200(a2, (uint64_t *)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1F35D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C1F35E8(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C1F1FD0(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v4 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v5 = __C;
    sub_19C1F37BC(a1, a2, (uint64_t)__A);
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v5 + v4;
  }
  else
  {
    v6 = sub_19C1F1EF0(a1, a2);
    sub_19C1F36F0(a1, a2);
  }
  return v6;
}

void sub_19C1F36D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_19C1F36F0(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double v8;
  double v9;
  void *__p[4];

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C1F1FD0(a1, a2, (uint64_t)__p);
    sub_19C1F37BC(a1, a2, (uint64_t)__p);
    v5 = v4;
    v6 = *(double *)(a1 + 16);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    return v6 + v5;
  }
  else
  {
    v8 = *(double *)(a1 + 24);
    v9 = sub_19C1F2278(a1 + 8, (uint64_t)a2, a2);
    return *(double *)(a1 + 16) + exp(v9 * -0.5) * v8;
  }
}

void sub_19C1F37A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1F37BC(uint64_t a1, const double **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  _OWORD *v20;
  unsigned int v21;
  double v22;
  void *__p[3];
  int v24;
  double *__B[3];
  vDSP_Length __N;

  sub_19C1CE734(a1 + 192, (uint64_t)__p);
  v6 = *(unsigned int *)(a1 + 216);
  if ((int)v6 >= 1)
  {
    v7 = 0;
    v8 = *(_DWORD *)(a1 + 220);
    v9 = v24;
    v10 = 1;
    v11 = -1;
    v12 = __p[0];
    do
    {
      if (v8 <= v10)
        v13 = v10;
      else
        v13 = v8;
      v14 = v7 + 1;
      if ((int)v7 + 1 >= v8)
        goto LABEL_3;
      v15 = 0;
      v16 = v13 + v11;
      v17 = (int)v7 * (uint64_t)v9;
      if ((v13 + v11) < 4)
      {
        v18 = v7 + 1;
      }
      else
      {
        v18 = v7 + 1;
        if (v13 - (int)v7 + v10 - 2 >= v10)
        {
          v19 = 0;
          v15 = v16 & 0xFFFFFFFC;
          v18 = v14 + (v16 & 0xFFFFFFFC);
          do
          {
            v20 = &v12[v17 + v10 + v19];
            *v20 = 0uLL;
            v20[1] = 0uLL;
            v19 += 4;
          }
          while ((v16 & 0xFFFFFFFC) != v19);
          if (v16 == v15)
            goto LABEL_3;
        }
      }
      v21 = v13 - v15;
      do
      {
        v12[v17 + v18] = 0;
        v18 = ++v15 + v14;
        --v21;
      }
      while (v10 != v21);
LABEL_3:
      ++v7;
      ++v10;
      --v11;
    }
    while (v7 != v6);
  }
  sub_19C1CE5B4((uint64_t)__p, a3, (uint64_t)__B);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v22 = sub_19C1F2278(a1 + 8, (uint64_t)a2, a2);
  __p[0] = 0;
  vDSP_dotprD(__B[0], 1, __B[0], 1, (double *)__p, (int)__N);
  if (__B[0])
  {
    __B[1] = __B[0];
    operator delete(__B[0]);
  }
  exp(v22 * -0.5);
}

void sub_19C1F3980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1F39B0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  void *v32[4];
  void *v33[4];
  void *v34;
  void **v35;
  uint64_t v36;
  void *__p;
  void **v38;
  uint64_t v39;

  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_19C17AF88(&v34, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v38 = 0;
  v39 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21558;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v34, (uint64_t)v35, 0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (_BYTE *)v34) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v38, 0xCCCCCCCCCCCCCCCDLL * (((char *)v38 - (_BYTE *)__p) >> 3));
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v38;
    v10 = __p;
    if (v38 != __p)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v38 = v8;
    operator delete(v10);
  }
  v11 = (void **)v34;
  if (v34)
  {
    v12 = v35;
    v13 = v34;
    if (v35 != v34)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v34;
    }
    v35 = v11;
    operator delete(v13);
  }
  *(_QWORD *)a1 = &unk_1E3D211F8;
  v14 = sub_19C178A44(a3);
  sub_19C1CF858(a1 + 64, v14);
  sub_19C1C81AC(a1 + 184);
  sub_19C178B08(a3, (uint64_t *)v32);
  sub_19C1D0468(a1 + 64, (uint64_t *)v32);
  sub_19C1D0594(a1 + 64, (uint64_t *)v33);
  if (v33[0])
  {
    v33[1] = v33[0];
    operator delete(v33[0]);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  if ((a4 & 0xFF00000000) != 0)
  {
    v15 = 0;
    *(_DWORD *)(a1 + 7776) = a4;
    v16 = 1;
    v17 = a4;
    do
    {
      v18 = 1812433253 * (v17 ^ (v17 >> 30));
      v17 = v18 + v16;
      *(_DWORD *)(a1 + 7780 + 4 * v15) = v15 + v18 + 1;
      ++v16;
      ++v15;
    }
    while (v15 != 623);
    *(_QWORD *)(a1 + 10272) = 0;
    *(_DWORD *)(a1 + 184) = a4;
    v19 = 1;
    v20 = 47;
    v21 = a4;
    do
    {
      v22 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v22 + v19;
      *(_DWORD *)(a1 + 4 * v20) = v20 + v22 - 46;
      ++v19;
      ++v20;
    }
    while (v20 != 670);
    v23 = 0;
    *(_QWORD *)(a1 + 2680) = 0;
    *(_DWORD *)(a1 + 2712) = a4;
    v24 = 1;
    v25 = a4;
    do
    {
      v26 = 1812433253 * (v25 ^ (v25 >> 30));
      v25 = v26 + v24;
      *(_DWORD *)(a1 + 2716 + 4 * v23) = v23 + v26 + 1;
      ++v24;
      ++v23;
    }
    while (v23 != 623);
    v27 = 0;
    *(_QWORD *)(a1 + 5208) = 0;
    *(_DWORD *)(a1 + 5232) = a4;
    v28 = 1;
    v29 = a4;
    do
    {
      v30 = 1812433253 * (v29 ^ (v29 >> 30));
      v29 = v30 + v28;
      *(_DWORD *)(a1 + 5236 + 4 * v27) = v27 + v30 + 1;
      ++v28;
      ++v27;
    }
    while (v27 != 623);
    *(_QWORD *)(a1 + 7728) = 0;
    sub_19C23B684();
  }
  return a1;
}

void sub_19C1F3CCC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  sub_19C1CF8E8(v2);
  sub_19C1F2E6C(v1);
  _Unwind_Resume(a1);
}

void sub_19C1F3D60(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_19C1F2E6C(v1);
  _Unwind_Resume(a1);
}

void sub_19C1F3D78(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_19C1F4290(a1);
  operator delete(v1);
}

void sub_19C1F3D8C(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  double v6;
  void **v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t **v13;
  uint64_t **i;
  uint64_t **v15;
  char **v16;
  uint64_t **v17;
  char **v18;
  char **v19;
  void *v20;
  double v21;
  double v22;
  BOOL v23;
  char v24;
  __int128 **v25;
  char **v26;
  char *v27;
  void *__p;
  char **v29;
  uint64_t *v30[12];
  _OWORD v31[3];
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[2];
  double v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  __int128 **v43;
  char *v44;
  uint64_t **v45;
  uint64_t **v46;

  v32 = 0u;
  memset(v31, 0, sizeof(v31));
  *(_QWORD *)&v32 = (char *)&v32 + 8;
  v35[0] = 0;
  v35[1] = 0;
  v33 = 0;
  v34 = v35;
  v6 = (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8));
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)v31);
  *(double *)(a3 + 96) = v6;
  sub_19C17B808((char **)v31);
  v38 = 0;
  v39 = 0;
  v37 = 0;
  sub_19C17AF88(&v37, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 4));
  v40 = 0;
  v41 = 0;
  v42 = 0;
  sub_19C17B16C(&v40, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 3));
  sub_19C17A144((uint64_t *)&v37, a1 + 184, 5, (char **)&v43);
  v7 = v40;
  if (v40)
  {
    v8 = v41;
    v9 = v40;
    if (v41 != v40)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v40;
    }
    v41 = v7;
    operator delete(v9);
  }
  v10 = (uint64_t)v37;
  if (v37)
  {
    v11 = v38;
    v12 = v37;
    if ((void *)v38 != v37)
    {
      do
      {
        if (*(char *)(v11 - 25) < 0)
          operator delete(*(void **)(v11 - 48));
        v11 -= 48;
      }
      while (v11 != v10);
      v12 = v37;
    }
    v38 = v10;
    operator delete(v12);
  }
  sub_19C1F4338(a1, v43, (uint64_t)v31);
  sub_19C1C9C8C(a3, (uint64_t)v31);
  *(double *)(a3 + 96) = v36;
  sub_19C17B808((char **)v31);
  sub_19C1F4338(a1, v43 + 12, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1F4338(a1, v43 + 24, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1F4338(a1, v43 + 36, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1F4338(a1, v43 + 48, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1CCA84((uint64_t ***)&__p, a2);
  sub_19C1CCA84(&v45, (uint64_t **)&__p);
  v13 = v45;
  if (v45 != v46)
  {
    for (i = v45 + 13; i != v46; i += 13)
    {
      if (*((double *)v13 + 12) < *((double *)i + 12))
        v13 = i;
    }
  }
  sub_19C1C1840((uint64_t **)v31, (uint64_t *)v13);
  v36 = *((double *)v13 + 12);
  v15 = v45;
  if (v45)
  {
    v16 = (char **)v46;
    v17 = v45;
    if (v46 != v45)
    {
      do
        v16 = sub_19C17B808(v16 - 13);
      while (v16 != (char **)v15);
      v17 = v45;
    }
    v46 = v15;
    operator delete(v17);
  }
  sub_19C1C5D14(v30, (uint64_t)v31);
  sub_19C17B808((char **)v31);
  v18 = (char **)__p;
  if (__p)
  {
    v19 = v29;
    v20 = __p;
    if (v29 != __p)
    {
      do
        v19 = sub_19C17B808(v19 - 13);
      while (v19 != v18);
      v20 = __p;
    }
    v29 = v18;
    operator delete(v20);
  }
  sub_19C1F4338(a1, (__int128 **)v30, (uint64_t)v31);
  v21 = v36;
  v22 = *(double *)(a3 + 96);
  v23 = sub_19C1D16FC((uint64_t *)v31, v30);
  v24 = v21 <= v22 || v23;
  if ((v24 & 1) == 0)
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C17B808((char **)v30);
  v25 = v43;
  if (v43)
  {
    v26 = (char **)v44;
    v27 = (char *)v43;
    if (v44 != (char *)v43)
    {
      do
        v26 = sub_19C17B808(v26 - 12);
      while (v26 != (char **)v25);
      v27 = (char *)v43;
    }
    v44 = (char *)v25;
    operator delete(v27);
  }
}

void sub_19C1F41B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  char **v5;
  uint64_t v6;
  char *v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, char *);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  sub_19C17B808((char **)va1);
  sub_19C17B808((char **)va);
  sub_19C17AA64((void **)(v6 - 112));
  sub_19C17B808(v5);
  _Unwind_Resume(a1);
}

void sub_19C1F4270(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "direct_optimizer");
}

_QWORD *sub_19C1F4290(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = &unk_1E3D211F8;
  std::random_device::~random_device((std::random_device *)(a1 + 10280));
  std::random_device::~random_device((std::random_device *)(a1 + 7736));
  std::random_device::~random_device((std::random_device *)(a1 + 5216));
  std::random_device::~random_device((std::random_device *)(a1 + 2688));
  *(_QWORD *)(a1 + 64) = &unk_1E3D21150;
  sub_19C23AA14(*(_QWORD *)(a1 + 72));
  v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(_QWORD *)(a1 + 136) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 104);
  if (v3)
  {
    *(_QWORD *)(a1 + 112) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 80);
  if (v4)
  {
    *(_QWORD *)(a1 + 88) = v4;
    operator delete(v4);
  }
  return sub_19C1F2E6C((_QWORD *)a1);
}

void sub_19C1F4338(uint64_t a1@<X0>, __int128 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float64x2_t *v9;
  char *v10;
  uint64_t v11;
  float64x2_t *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  int64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  int v25;
  double v26;
  double v27;
  void *v28[3];
  unsigned int v29;
  void *v30;
  char *v31;
  char *v32;
  int v33;
  void *v34;
  void *v35;
  void *__p[12];
  void *v37[4];
  _QWORD v38[2];

  v38[0] = a1;
  v38[1] = a2;
  v6 = a1 + 64;
  sub_19C1CD184(a2, (uint64_t)__p);
  sub_19C1F46BC(v6, (uint64_t)v38, (uint64_t *)__p, (uint64_t)v37);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_19C1CD508((uint64_t)a2, (uint64_t)&v34);
  sub_19C1C1840((uint64_t **)__p, (uint64_t *)a2);
  sub_19C1CD7E0((uint64_t *)__p, (uint64_t *)v37);
  sub_19C1CD99C((uint64_t)__p, (uint64_t *)&v34);
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  v7 = *(_QWORD *)(a1 + 8);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v28);
  v8 = v29;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  if (!v29)
  {
    v33 = 0;
    goto LABEL_15;
  }
  if ((v29 & 0x80000000) != 0)
    sub_19C07DA0C();
  v9 = (float64x2_t *)operator new(8 * (int)v29);
  v30 = v9;
  v32 = (char *)&v9->f64[(int)v8];
  bzero(v9, 8 * (int)v8);
  v31 = (char *)&v9->f64[(int)v8];
  v33 = v8;
  v10 = (char *)v28[0];
  if (v8 < 8)
  {
    v11 = 0;
LABEL_13:
    v20 = v8 - v11;
    v21 = v11 << 32;
    do
    {
      *(double *)((char *)v9->f64 + (v21 >> 29)) = (double)*(int *)&v10[v21 >> 30];
      v21 += 0x100000000;
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
  v11 = v8 & 0xFFFFFFF8;
  v12 = v9 + 2;
  v13 = (char *)v28[0] + 16;
  v14 = v11;
  do
  {
    v15 = *((_OWORD *)v13 - 1);
    v16.i64[0] = (int)v15;
    v16.i64[1] = SDWORD1(v15);
    v17 = vcvtq_f64_s64(v16);
    v16.i64[0] = SDWORD2(v15);
    v16.i64[1] = SHIDWORD(v15);
    v18 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*(_OWORD *)v13;
    v16.i64[1] = (int)HIDWORD(*(_QWORD *)v13);
    v19 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*((_QWORD *)v13 + 1);
    v16.i64[1] = (int)HIDWORD(*(_OWORD *)v13);
    v12[-2] = v17;
    v12[-1] = v18;
    *v12 = v19;
    v12[1] = vcvtq_f64_s64(v16);
    v12 += 4;
    v13 += 32;
    v14 -= 8;
  }
  while (v14);
  if (v11 != v8)
    goto LABEL_13;
LABEL_15:
  sub_19C1CEDDC((uint64_t)v37, (uint64_t)&v30, (uint64_t)&v34);
  v22 = sub_19C1F35E8(*(_QWORD *)(v7 + 8), (const double **)&v34);
  v24 = sqrt(v23);
  if (v24 < 0.00000001 || (v25 = *(_DWORD *)(*(_QWORD *)(v7 + 8) + 120), v25 <= 0))
  {
    v26 = (*(double (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  else
  {
    if (*(_DWORD *)(v7 + 56) != v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    (**(void (***)(uint64_t, double, double))v7)(v7, v22, v24);
  }
  v27 = v26;
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)__p);
  *(double *)(a3 + 96) = v27;
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  if (v30)
  {
    v31 = (char *)v30;
    operator delete(v30);
  }
  if (v28[0])
  {
    v28[1] = v28[0];
    operator delete(v28[0]);
  }
  sub_19C17B808((char **)__p);
  if (v37[0])
  {
    v37[1] = v37[0];
    operator delete(v37[0]);
  }
}

void sub_19C1F45E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v24;
  void *v25;

  if (a13)
  {
    operator delete(a13);
    v24 = __p;
    if (!__p)
    {
LABEL_4:
      sub_19C17B808((char **)&a21);
      v25 = *(void **)(v22 - 128);
      if (v25)
      {
        *(_QWORD *)(v22 - 120) = v25;
        operator delete(v25);
      }
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v24 = __p;
    if (!__p)
      goto LABEL_4;
  }
  operator delete(v24);
  goto LABEL_4;
}

void sub_19C1F46BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1F4C0C;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1F4B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1F4910);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

void sub_19C1F4C0C(uint64_t **a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  void *__p;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v18 = 0;
  v19 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    __p = 0;
    v18 = 0;
    v19 = 0;
    v20 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  __p = v8;
  v18 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v19 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v20 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1F4DDC(a3, (uint64_t)&__p);
    if (__p)
    {
      v18 = (char *)__p;
      operator delete(__p);
    }
  }
  else
  {
    sub_19C1F4DDC(a3, (uint64_t)&__p);
    __break(1u);
  }
}

void sub_19C1F4DA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1F4DC0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

uint64_t sub_19C1F4DDC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  float64x2_t *v5;
  char *v6;
  uint64_t v7;
  float64x2_t *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  int64x2_t v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  int v21;
  double v22;
  double v23;
  void *v25[3];
  unsigned int v26;
  void *v27;
  char *v28;
  char *v29;
  int v30;
  void *__p[4];

  v3 = *(_QWORD *)(*a1 + 8);
  sub_19C1CD508(a1[1], (uint64_t)v25);
  v4 = v26;
  v28 = 0;
  v29 = 0;
  v27 = 0;
  if (!v26)
  {
    v30 = 0;
    goto LABEL_11;
  }
  if ((v26 & 0x80000000) != 0)
    sub_19C07DA0C();
  v5 = (float64x2_t *)operator new(8 * (int)v26);
  v27 = v5;
  v29 = (char *)&v5->f64[(int)v4];
  bzero(v5, 8 * (int)v4);
  v28 = (char *)&v5->f64[(int)v4];
  v30 = v4;
  v6 = (char *)v25[0];
  if (v4 < 8)
  {
    v7 = 0;
LABEL_9:
    v16 = v4 - v7;
    v17 = v7 << 32;
    do
    {
      *(double *)((char *)v5->f64 + (v17 >> 29)) = (double)*(int *)&v6[v17 >> 30];
      v17 += 0x100000000;
      --v16;
    }
    while (v16);
    goto LABEL_11;
  }
  v7 = v4 & 0xFFFFFFF8;
  v8 = v5 + 2;
  v9 = (char *)v25[0] + 16;
  v10 = v7;
  do
  {
    v11 = *((_OWORD *)v9 - 1);
    v12.i64[0] = (int)v11;
    v12.i64[1] = SDWORD1(v11);
    v13 = vcvtq_f64_s64(v12);
    v12.i64[0] = SDWORD2(v11);
    v12.i64[1] = SHIDWORD(v11);
    v14 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*(_OWORD *)v9;
    v12.i64[1] = (int)HIDWORD(*(_QWORD *)v9);
    v15 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*((_QWORD *)v9 + 1);
    v12.i64[1] = (int)HIDWORD(*(_OWORD *)v9);
    v8[-2] = v13;
    v8[-1] = v14;
    *v8 = v15;
    v8[1] = vcvtq_f64_s64(v12);
    v8 += 4;
    v9 += 32;
    v10 -= 8;
  }
  while (v10);
  if (v7 != v4)
    goto LABEL_9;
LABEL_11:
  sub_19C1CEDDC(a2, (uint64_t)&v27, (uint64_t)__p);
  v18 = sub_19C1F35E8(*(_QWORD *)(v3 + 8), (const double **)__p);
  v20 = sqrt(v19);
  if (v20 < 0.00000001 || (v21 = *(_DWORD *)(*(_QWORD *)(v3 + 8) + 120), v21 <= 0))
  {
    v22 = (*(double (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  else
  {
    if (*(_DWORD *)(v3 + 56) != v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    (**(void (***)(uint64_t, double, double))v3)(v3, v18, v20);
  }
  v23 = v22;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v27)
  {
    v28 = (char *)v27;
    operator delete(v27);
  }
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
  return *(_QWORD *)&v23;
}

void sub_19C1F4FDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  void *v19;

  if (__p)
  {
    operator delete(__p);
    v19 = a9;
    if (!a9)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v19 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1F505C(uint64_t a1)
{
  char **v2;
  char **v3;
  char **v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char **v13;
  char **v14;
  void *v15;

  *(_QWORD *)a1 = &unk_1E3D21768;
  v2 = *(char ***)(a1 + 10696);
  if (v2)
  {
    v3 = *(char ***)(a1 + 10704);
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 12);
      while (v3 != v2);
      v4 = *(char ***)(a1 + 10696);
    }
    *(_QWORD *)(a1 + 10704) = v2;
    operator delete(v4);
  }
  std::random_device::~random_device((std::random_device *)(a1 + 10688));
  std::random_device::~random_device((std::random_device *)(a1 + 8144));
  std::random_device::~random_device((std::random_device *)(a1 + 5624));
  std::random_device::~random_device((std::random_device *)(a1 + 3096));
  v5 = *(_QWORD *)(a1 + 584);
  *(_QWORD *)(a1 + 584) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  *(_QWORD *)(a1 + 504) = &unk_1E3D20EF8;
  v6 = *(void **)(a1 + 520);
  if (v6)
  {
    *(_QWORD *)(a1 + 528) = v6;
    operator delete(v6);
  }
  sub_19C1EC3CC((_QWORD *)(a1 + 176));
  v7 = *(_QWORD *)(a1 + 152);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 160);
    v9 = *(void **)(a1 + 152);
    if (v8 != v7)
    {
      v10 = *(_QWORD *)(a1 + 160);
      do
      {
        v12 = *(void **)(v10 - 56);
        v10 -= 56;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v8 - 48) = v11;
          operator delete(v11);
        }
        v8 = v10;
      }
      while (v10 != v7);
      v9 = *(void **)(a1 + 152);
    }
    *(_QWORD *)(a1 + 160) = v7;
    operator delete(v9);
  }
  *(_QWORD *)a1 = &unk_1E3D214F8;
  sub_19C1C2E88(a1 + 32);
  v13 = *(char ***)(a1 + 8);
  if (v13)
  {
    v14 = *(char ***)(a1 + 16);
    v15 = *(void **)(a1 + 8);
    if (v14 != v13)
    {
      do
        v14 = sub_19C17B808(v14 - 13);
      while (v14 != v13);
      v15 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v13;
    operator delete(v15);
  }
  return a1;
}

void sub_19C1F51D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  void *__p[4];

  v5 = (uint64_t *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 96);
  v6 = *(_DWORD *)(a1 + 120);
  v7 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 120) = v6 + 1;
  *(_DWORD *)(a1 + 124) = v7;
  v8 = v7 * (v6 + 1);
  v9 = (*(_QWORD *)(a1 + 104) - v4) >> 3;
  if (v8 <= v9)
  {
    if (v8 < v9)
      *(_QWORD *)(a1 + 104) = v4 + 8 * v8;
  }
  else
  {
    sub_19C17C9D8(a1 + 96, v8 - v9);
    v6 = *(_DWORD *)(a1 + 120) - 1;
  }
  sub_19C1CE998(a2, (uint64_t)__p);
  v10 = *(int *)(a1 + 124);
  v11 = (char *)__p[0];
  if (!(_DWORD)v10)
  {
    if (!__p[0])
      goto LABEL_18;
    goto LABEL_17;
  }
  v12 = (int)v10 * (uint64_t)v6;
  v13 = *v5;
  if (v10 >= 8 && (v14 = 8 * v12 + v13, v14 - (unint64_t)__p[0] >= 0x20))
  {
    v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    v20 = (__int128 *)((char *)__p[0] + 16);
    v21 = (_OWORD *)(v14 + 16);
    v22 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v23 = *v20;
      *(v21 - 1) = *(v20 - 1);
      *v21 = v23;
      v20 += 2;
      v21 += 2;
      v22 -= 4;
    }
    while (v22);
    if (v15 == v10)
      goto LABEL_17;
  }
  else
  {
    v15 = 0;
  }
  v16 = v10 - v15;
  v17 = (_QWORD *)(v13 + 8 * (v15 + v12));
  v18 = &v11[8 * v15];
  do
  {
    v19 = *(_QWORD *)v18;
    v18 += 8;
    *v17++ = v19;
    --v16;
  }
  while (v16);
LABEL_17:
  __p[1] = v11;
  operator delete(v11);
LABEL_18:
  sub_19C1F530C(a1, 1, 1);
}

void sub_19C1F530C(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  signed int v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  char *v32;
  char *v33;
  uint64_t v35;
  void *__p;
  void *v37;
  uint64_t v38;
  unsigned int v39;
  char *__C;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  if (a2)
  {
    v5 = (_QWORD *)(a1 + 128);
    v4 = *(_QWORD *)(a1 + 128);
    v6 = *(_DWORD *)(a1 + 120);
    *(_DWORD *)(a1 + 152) = v6;
    v7 = (*(_QWORD *)(a1 + 136) - v4) >> 3;
    v35 = v6;
    if (v6 <= v7)
    {
      if (v6 < v7)
        *(_QWORD *)(a1 + 136) = v4 + 8 * v6;
    }
    else
    {
      sub_19C17C9D8(a1 + 128, v6 - v7);
      v6 = *(_DWORD *)(a1 + 120);
      v35 = v6;
    }
    if (v6)
    {
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *(_QWORD *)(a1 + 96);
        v11 = *(_DWORD *)(a1 + 124);
        __C = 0;
        v41 = 0;
        v42 = 0;
        if (v11)
          break;
        v12 = 0;
        v37 = 0;
        v38 = 0;
        __p = 0;
        v39 = 0;
LABEL_26:
        __C = 0;
        vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)&__C, *(int *)(a1 + 312));
        *(_QWORD *)(*v5 + 8 * v9) = __C;
        if (__p)
        {
          v37 = __p;
          operator delete(__p);
        }
        if (v12)
          operator delete(v12);
        ++v9;
        v8 += 8;
        if (v9 == v35)
          goto LABEL_34;
      }
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = operator new(8 * v11);
      bzero(v12, 8 * v11);
      if (v11 >= 8 && (unint64_t)v12 - v10 - 8 * v9 * v11 >= 0x20)
      {
        v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
        v28 = (__int128 *)(v10 + v8 * v11 + 16);
        v29 = v12 + 1;
        v30 = v13;
        do
        {
          v31 = *v28;
          *(v29 - 1) = *(v28 - 1);
          *v29 = v31;
          v28 += 2;
          v29 += 2;
          v30 -= 4;
        }
        while (v30);
        if (v13 == v11)
        {
LABEL_16:
          __p = 0;
          v37 = 0;
          v38 = 0;
          v39 = v11;
          sub_19C17C9D8((uint64_t)&__p, v11);
          v19 = v39;
          if ((int)v39 >= 1)
          {
            v20 = 0;
            v21 = (char *)__p;
            if (v39 < 4)
              goto LABEL_22;
            if ((unint64_t)((_BYTE *)__p - (_BYTE *)v12) < 0x20)
              goto LABEL_22;
            v22 = 0;
            v20 = v39 & 0xFFFFFFFC;
            v23 = (8 * v39) & 0x7FFFFFFE0;
            do
            {
              v24 = v12[v22 / 0x10 + 1];
              v25 = &v21[v22];
              *(_OWORD *)v25 = v12[v22 / 0x10];
              *((_OWORD *)v25 + 1) = v24;
              v22 += 32;
            }
            while (v23 != v22);
            if (v20 != v19)
            {
LABEL_22:
              v26 = v19 - v20;
              v27 = v20 << 32;
              do
              {
                *(_QWORD *)&v21[v27 >> 29] = *(_QWORD *)((char *)v12 + (v27 >> 29));
                v27 += 0x100000000;
                --v26;
              }
              while (v26);
            }
          }
          goto LABEL_26;
        }
      }
      else
      {
        v13 = 0;
      }
      v14 = v11 - v13;
      v15 = 8 * v13;
      v16 = (_QWORD *)v12 + v13;
      v17 = (uint64_t *)(v10 + v15 + v8 * v11);
      do
      {
        v18 = *v17++;
        *v16++ = v18;
        --v14;
      }
      while (v14);
      goto LABEL_16;
    }
  }
LABEL_34:
  sub_19C1F5688(a1 + 8, (uint64_t *)(a1 + 96), (uint64_t)&__C);
  if ((char **)(a1 + 160) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 160), __C, v41, (v41 - __C) >> 3);
  v32 = __C;
  *(_QWORD *)(a1 + 184) = v43;
  if (v32)
  {
    v41 = v32;
    operator delete(v32);
  }
  sub_19C1D3978(a1 + 160, (uint64_t)&__C);
  if ((char **)(a1 + 192) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 192), __C, v41, (v41 - __C) >> 3);
  v33 = __C;
  *(_QWORD *)(a1 + 216) = v43;
  if (v33)
  {
    v41 = v33;
    operator delete(v33);
  }
  sub_19C1F5B48(a1);
  if (a3)
    sub_19C1F5D68((int32x2_t *)a1);
}

void sub_19C1F5624(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1F5688(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  size_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  signed int v12;
  char *v13;
  size_t v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  _OWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  __int128 *v33;
  _OWORD *v34;
  unint64_t v35;
  __int128 v36;
  __int128 *v37;
  _OWORD *v38;
  unint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  char *v55;
  signed int v56;
  void *__p;
  char *v58;
  char *v59;
  signed int v60;

  v4 = *((unsigned int *)a2 + 6);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  if (!(_DWORD)v4)
  {
    v7 = 0;
    *(_DWORD *)(a3 + 24) = 0;
    *(_DWORD *)(a3 + 28) = 0;
LABEL_41:
    v41 = (int)v4;
    if ((_DWORD)v4)
      goto LABEL_42;
    return;
  }
  v6 = 8 * (v4 * v4);
  v7 = (char *)operator new(v6);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 16) = &v7[v6];
  bzero(v7, v6);
  *(_QWORD *)(a3 + 8) = &v7[v6];
  *(_DWORD *)(a3 + 24) = v4;
  *(_DWORD *)(a3 + 28) = v4;
  if ((int)v4 <= 0)
    goto LABEL_41;
  v49 = 0;
  v8 = 0;
  v52 = 1;
  v47 = v4;
  v48 = a1;
  do
  {
    v9 = 0;
    v10 = 0;
    v51 = (int)v8 * v4;
    do
    {
      v11 = *a2;
      v12 = *((_DWORD *)a2 + 7);
      __p = 0;
      v58 = 0;
      v59 = 0;
      if (v12)
      {
        if (v12 < 0)
          sub_19C07DA0C();
        v13 = v7;
        v14 = 8 * v12;
        v15 = operator new(v14);
        bzero(v15, v14);
        if (v12 < 8 || (unint64_t)v15 - v11 - 8 * v8 * v12 < 0x20)
        {
          v16 = 0;
          goto LABEL_12;
        }
        v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v33 = (__int128 *)(v11 + v49 * v12 + 16);
        v34 = v15 + 1;
        v35 = v16;
        do
        {
          v36 = *v33;
          *(v34 - 1) = *(v33 - 1);
          *v34 = v36;
          v33 += 2;
          v34 += 2;
          v35 -= 4;
        }
        while (v35);
        if (v16 != v12)
        {
LABEL_12:
          v17 = v12 - v16;
          v18 = 8 * v16;
          v19 = (_QWORD *)v15 + v16;
          v20 = (uint64_t *)(v11 + v18 + v49 * v12);
          do
          {
            v21 = *v20++;
            *v19++ = v21;
            --v17;
          }
          while (v17);
        }
        v53 = 0;
        v54 = 0;
        v56 = 0;
        v55 = 0;
        v53 = operator new(8 * v12);
        v54 = (char *)v53 + v14;
        v55 = (char *)v53 + 8 * v12;
        v56 = v12;
        memcpy(v53, v15, 8 * v12);
        v22 = operator new(8 * v12);
        bzero(v22, 8 * v12);
        if (v12 < 8 || (unint64_t)v22 - v11 - 8 * v10 * v12 < 0x20)
        {
          v23 = 0;
          goto LABEL_17;
        }
        v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v37 = (__int128 *)(v11 + v9 * v12 + 16);
        v38 = v22 + 1;
        v39 = v23;
        do
        {
          v40 = *v37;
          *(v38 - 1) = *(v37 - 1);
          *v38 = v40;
          v37 += 2;
          v38 += 2;
          v39 -= 4;
        }
        while (v39);
        if (v23 != v12)
        {
LABEL_17:
          v24 = v12 - v23;
          v25 = 8 * v23;
          v26 = (_QWORD *)v22 + v23;
          v27 = (uint64_t *)(v11 + v25 + v9 * v12);
          do
          {
            v28 = *v27++;
            *v26++ = v28;
            --v24;
          }
          while (v24);
        }
        __p = 0;
        v58 = 0;
        v60 = 0;
        v59 = 0;
        v29 = (int)v10;
        __p = operator new(8 * v12);
        v58 = (char *)__p + v14;
        v59 = (char *)__p + 8 * v12;
        v60 = v12;
        memcpy(__p, v22, 8 * v12);
        v7 = v13;
        a1 = v48;
        goto LABEL_21;
      }
      v15 = 0;
      v22 = 0;
      v54 = 0;
      v55 = 0;
      v53 = 0;
      v56 = 0;
      v29 = (int)v10;
      __p = 0;
      v58 = 0;
      v60 = 0;
      v59 = 0;
LABEL_21:
      v30 = *(double *)(a1 + 16);
      v31 = sub_19C1F2278(a1, (uint64_t)&v53, (const double **)&__p);
      v32 = exp(v31 * -0.5) * v30;
      if ((_DWORD)v8 == (_DWORD)v10)
        v32 = v32 + *(double *)(a1 + 8) + 1.0e-10;
      *(double *)&v7[8 * v29 + 8 * v51] = v32;
      if (__p)
      {
        v58 = (char *)__p;
        operator delete(__p);
      }
      if (v22)
        operator delete(v22);
      if (v53)
      {
        v54 = (char *)v53;
        operator delete(v53);
      }
      if (v15)
        operator delete(v15);
      ++v10;
      v9 += 8;
    }
    while (v10 != v52);
    ++v8;
    ++v52;
    v49 += 8;
    v4 = v47;
  }
  while (v8 != v47);
  v41 = v47;
LABEL_42:
  if (v41 != 1)
  {
    v42 = 0;
    v43 = 8 * v41;
    v44 = v7;
    do
    {
      if (v42)
      {
        v45 = 0;
        v46 = v44;
        do
        {
          *v46 = *(_QWORD *)&v7[8 * v45++];
          v46 = (_QWORD *)((char *)v46 + v43);
        }
        while (v42 != v45);
      }
      ++v42;
      ++v44;
      v7 += v43;
    }
    while (v42 != v41);
  }
}

void sub_19C1F5AA4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1F5ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  uint64_t v27;
  void *v28;

  if (__p)
  {
    operator delete(__p);
    v27 = a10;
    if (!v25)
    {
LABEL_3:
      v28 = a18;
      if (!a18)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    v27 = a10;
    if (!v25)
      goto LABEL_3;
  }
  operator delete(v25);
  v28 = a18;
  if (!a18)
  {
LABEL_4:
    if (!v23)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v28);
  if (!v23)
  {
LABEL_5:
    *(_QWORD *)(v27 + 8) = v24;
    operator delete(v24);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(v23);
  *(_QWORD *)(v27 + 8) = v24;
  operator delete(v24);
  _Unwind_Resume(a1);
}

void sub_19C1F5B48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _OWORD *v16;
  unsigned int v17;
  void *v18[4];
  void *__p;
  char *v20;
  int v21;
  void *v22[3];
  int v23;

  sub_19C1CE734(a1 + 192, (uint64_t)v22);
  v2 = *(unsigned int *)(a1 + 216);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    v4 = *(_DWORD *)(a1 + 220);
    v5 = v23;
    v6 = 1;
    v7 = -1;
    v8 = v22[0];
    do
    {
      if (v4 <= v6)
        v9 = v6;
      else
        v9 = v4;
      v10 = v3 + 1;
      if ((int)v3 + 1 >= v4)
        goto LABEL_3;
      v11 = 0;
      v12 = v9 + v7;
      v13 = (int)v3 * (uint64_t)v5;
      if ((v9 + v7) < 4)
      {
        v14 = v3 + 1;
      }
      else
      {
        v14 = v3 + 1;
        if (v9 - (int)v3 + v6 - 2 >= v6)
        {
          v15 = 0;
          v11 = v12 & 0xFFFFFFFC;
          v14 = v10 + (v12 & 0xFFFFFFFC);
          do
          {
            v16 = &v8[v13 + v6 + v15];
            *v16 = 0uLL;
            v16[1] = 0uLL;
            v15 += 4;
          }
          while ((v12 & 0xFFFFFFFC) != v15);
          if (v12 == v11)
            goto LABEL_3;
        }
      }
      v17 = v9 - v11;
      do
      {
        v8[v13 + v14] = 0;
        v14 = ++v11 + v10;
        --v17;
      }
      while (v6 != v17);
LABEL_3:
      ++v3;
      ++v6;
      --v7;
    }
    while (v3 != v2);
  }
  sub_19C1F5FCC(a1, (uint64_t)v18);
  sub_19C1CE5B4((uint64_t)v22, (uint64_t)v18, (uint64_t)&__p);
  if ((void **)(a1 + 256) != &__p)
    sub_19C11EAD0((_QWORD *)(a1 + 256), (char *)__p, v20, (v20 - (_BYTE *)__p) >> 3);
  *(_DWORD *)(a1 + 280) = v21;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  sub_19C1CEB00((uint64_t)v22, &__p);
  sub_19C1D43B4((uint64_t)&__p, a1 + 256);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v22[0])
  {
    v22[1] = v22[0];
    operator delete(v22[0]);
  }
}

void sub_19C1F5D04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  if (a9)
    operator delete(a9);
  if (a17)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_19C1F5D68(int32x2_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int32 v14;
  int v15;
  int v16;
  _QWORD *v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  _OWORD *v25;
  unsigned int v26;
  void *__p;
  char *v28;
  int32x2_t v29;

  v2 = a1[15].u32[0];
  sub_19C176BE8(v2, v2, (uint64_t)&__p);
  if ((int)v2 >= 1)
  {
    v3 = v29.i32[1] + 1;
    v4 = __p;
    if ((_DWORD)v2 == 1)
    {
      v5 = 0;
LABEL_7:
      v8 = v2 - v5;
      v9 = v5 << 32;
      do
      {
        v4[(v9 >> 32) * v3] = 0x3FF0000000000000;
        v9 += 0x100000000;
        --v8;
      }
      while (v8);
      goto LABEL_9;
    }
    v6 = 0;
    v5 = v2 & 0xFFFFFFFE;
    v7 = v5;
    do
    {
      v4[(v6 >> 32) * v3] = 0x3FF0000000000000;
      v4[((v6 >> 32) | 1) * v3] = 0x3FF0000000000000;
      v6 += 0x200000000;
      v7 -= 2;
    }
    while (v7);
    if (v5 != v2)
      goto LABEL_7;
  }
LABEL_9:
  if (&a1[28] != (int32x2_t *)&__p)
    sub_19C11EAD0(&a1[28], (char *)__p, v28, (v28 - (_BYTE *)__p) >> 3);
  v10 = (char *)__p;
  a1[31] = v29;
  if (v10)
  {
    v28 = v10;
    operator delete(v10);
  }
  sub_19C1CE734((uint64_t)&a1[24], (uint64_t)&__p);
  v11 = a1[27].u32[0];
  if ((int)v11 >= 1)
  {
    v12 = 0;
    v13 = a1[27].i32[1];
    v14 = v29.i32[1];
    v15 = 1;
    v16 = -1;
    v17 = __p;
    do
    {
      if (v13 <= v15)
        v18 = v15;
      else
        v18 = v13;
      v19 = v12 + 1;
      if ((int)v12 + 1 >= v13)
        goto LABEL_15;
      v20 = 0;
      v21 = v18 + v16;
      v22 = (int)v12 * (uint64_t)v14;
      if ((v18 + v16) < 4)
      {
        v23 = v12 + 1;
      }
      else
      {
        v23 = v12 + 1;
        if (v18 - (int)v12 + v15 - 2 >= v15)
        {
          v24 = 0;
          v20 = v21 & 0xFFFFFFFC;
          v23 = v19 + (v21 & 0xFFFFFFFC);
          do
          {
            v25 = &v17[v22 + v15 + v24];
            *v25 = 0uLL;
            v25[1] = 0uLL;
            v24 += 4;
          }
          while ((v21 & 0xFFFFFFFC) != v24);
          if (v21 == v20)
            goto LABEL_15;
        }
      }
      v26 = v18 - v20;
      do
      {
        v17[v22 + v23] = 0;
        v23 = ++v20 + v19;
        --v26;
      }
      while (v15 != v26);
LABEL_15:
      ++v12;
      ++v15;
      --v16;
    }
    while (v12 != v11);
  }
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
  sub_19C1CEB00((uint64_t)&a1[24], &__p);
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
}

void sub_19C1F5FA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1F5FCC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  signed int v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  char *v28;

  v4 = *(_DWORD *)(a1 + 312);
  v5 = 8 * v4;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * v4);
    bzero(v6, 8 * v4);
    v7 = 0;
    v8 = &v6[v5];
    v9 = *(_QWORD *)(a1 + 288);
    if (v4 < 4)
      goto LABEL_46;
    if ((unint64_t)&v6[-v9] < 0x20)
      goto LABEL_46;
    v10 = 0;
    v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    v11 = v7;
    do
    {
      v12 = *(_OWORD *)(v9 + v10 + 16);
      v13 = &v6[v10];
      *(_OWORD *)v13 = *(_OWORD *)(v9 + v10);
      *((_OWORD *)v13 + 1) = v12;
      v10 += 32;
      v11 -= 4;
    }
    while (v11);
    if (v7 != v4)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v6[8 * v7] = *(_QWORD *)(v9 + 8 * v7);
        ++v7;
      }
      while (v4 != v7);
    }
    v14 = *(int *)(a1 + 152);
    if ((_DWORD)v14)
      goto LABEL_10;
LABEL_19:
    v15 = 0;
    goto LABEL_20;
  }
  v8 = 0;
  v6 = 0;
  v14 = *(int *)(a1 + 152);
  if (!(_DWORD)v14)
    goto LABEL_19;
LABEL_10:
  if ((v14 & 0x80000000) != 0)
    sub_19C07DA0C();
  v15 = (char *)operator new(8 * v14);
  bzero(v15, 8 * v14);
  v16 = 0;
  v17 = *(_QWORD *)(a1 + 128);
  if (v14 < 4)
    goto LABEL_47;
  if ((unint64_t)&v15[-v17] < 0x20)
    goto LABEL_47;
  v18 = 0;
  v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  v19 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v20 = *(_OWORD *)(v17 + v18 + 16);
    v21 = &v15[v18];
    *(_OWORD *)v21 = *(_OWORD *)(v17 + v18);
    *((_OWORD *)v21 + 1) = v20;
    v18 += 32;
    v19 -= 4;
  }
  while (v19);
  if (v16 != v14)
  {
LABEL_47:
    do
    {
      *(_QWORD *)&v15[8 * v16] = *(_QWORD *)(v17 + 8 * v16);
      ++v16;
    }
    while (v14 != v16);
  }
LABEL_20:
  vDSP_vsubD((const double *)v15, 1, (const double *)v6, 1, (double *)v6, 1, v4);
  if (v8 != v6)
  {
    if (v8 - v6 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v8 - v6);
    memcpy(v22, v6, v8 - v6);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    if (!v4)
    {
      *(_DWORD *)(a2 + 24) = 0;
      operator delete(v22);
      if (!v15)
        goto LABEL_35;
LABEL_34:
      operator delete(v15);
      goto LABEL_35;
    }
LABEL_26:
    if (v4 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(8 * v4);
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 16) = &v23[8 * v4];
    bzero(v23, 8 * v4);
    *(_QWORD *)(a2 + 8) = &v23[v5];
    *(_DWORD *)(a2 + 24) = v4;
    if (v4 >= 4)
    {
      v25 = 0;
      v24 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      v26 = v24;
      do
      {
        v27 = *(_OWORD *)&v22[v25 + 16];
        v28 = &v23[v25];
        *(_OWORD *)v28 = *(_OWORD *)&v22[v25];
        *((_OWORD *)v28 + 1) = v27;
        v25 += 32;
        v26 -= 4;
      }
      while (v26);
      if (v24 == v4)
      {
LABEL_33:
        operator delete(v22);
        if (!v15)
          goto LABEL_35;
        goto LABEL_34;
      }
    }
    else
    {
      v24 = 0;
    }
    do
    {
      *(_QWORD *)&v23[8 * v24] = *(_QWORD *)&v22[8 * v24];
      ++v24;
    }
    while (v4 != v24);
    goto LABEL_33;
  }
  v22 = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v4)
    goto LABEL_26;
  *(_DWORD *)(a2 + 24) = 0;
  if (v15)
    goto LABEL_34;
LABEL_35:
  if (v6)
    operator delete(v6);
}

void sub_19C1F62F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  void *v18;
  void *v19;

  if (v19)
  {
    operator delete(v19);
    if (!v18)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v18)
  {
    goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_19C1F6354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a9)
    operator delete(a9);
  sub_19C07AF7C(a1);
}

void sub_19C1F6368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13)
    JUMPOUT(0x19C1F6378);
  JUMPOUT(0x19C1F637CLL);
}

void sub_19C1F6384(uint64_t a1, uint64_t a2)
{
  _BYTE *v3;
  _BYTE *v4;
  int v5;
  unsigned int v6;
  signed int v7;
  int v8;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  unsigned int v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  int64_t v22;
  char *v23;
  char *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double *v29;
  long double *v30;
  unint64_t v31;
  long double v32;
  __int128 *v33;
  unint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  long double v38;
  void *v39;
  char *v40;
  int v41;
  void *v42;
  void *v43;
  char *v44;
  int v45;
  void *v46[4];
  void *__p[4];
  _QWORD v48[2];
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;

  v55 = a2;
  sub_19C1CF858((uint64_t)v48, *(_DWORD *)(a2 + 8) + 1);
  sub_19C17D694((uint64_t)v46, *(_DWORD *)(a2 + 8) + 1);
  v3 = v46[0];
  *(_QWORD *)v46[0] = 0xC01E000000000000;
  v4 = __p[0];
  *(_QWORD *)__p[0] = 0x401E000000000000;
  v5 = *(_DWORD *)(a2 + 8);
  if (v5 >= 1)
  {
    v6 = 0;
    v7 = 1;
    if (v5 < 0xA)
      goto LABEL_7;
    if ((unint64_t)(v4 - v3) < 0x20)
      goto LABEL_7;
    v8 = 0;
    v6 = v5 & 0xFFFFFFFC;
    v7 = v5 & 0xFFFFFFFC | 1;
    __asm
    {
      FMOV            V0.2D, #-10.0
      FMOV            V1.2D, #10.0
    }
    do
    {
      v15 = 8 * v8;
      v16 = &v3[v15 + 8];
      *v16 = _Q0;
      v16[1] = _Q0;
      v17 = &v4[v15 + 8];
      *v17 = _Q1;
      v17[1] = _Q1;
      v8 += 4;
    }
    while (v6 != v8);
    if (v6 != v5)
    {
LABEL_7:
      v18 = v5 - v6;
      do
      {
        v19 = 8 * v7;
        *(_QWORD *)&v3[v19] = 0xC024000000000000;
        *(_QWORD *)&v4[v19] = 0x4024000000000000;
        v7 = v6 + 2;
        ++v6;
        --v18;
      }
      while (v18);
    }
  }
  sub_19C1D0468((uint64_t)v48, (uint64_t *)v46);
  sub_19C1D0594((uint64_t)v48, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v46[0])
  {
    v46[1] = v46[0];
    operator delete(v46[0]);
  }
  v21 = *(_BYTE **)(a2 + 64);
  v20 = *(_BYTE **)(a2 + 72);
  v42 = 0;
  v43 = 0;
  v44 = 0;
  v22 = v20 - v21;
  if (v20 != v21)
  {
    if (v22 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(v20 - v21);
    v24 = &v23[8 * (v22 >> 3)];
    v42 = v23;
    v44 = v24;
    memcpy(v23, v21, v22);
    v43 = v24;
  }
  v45 = *(_DWORD *)(a2 + 88);
  sub_19C1F671C((uint64_t)v48, (uint64_t)&v55, (uint64_t *)&v42, (uint64_t)&v39);
  if ((void **)(a2 + 64) != &v39)
    sub_19C11EAD0((_QWORD *)(a2 + 64), (char *)v39, v40, (v40 - (_BYTE *)v39) >> 3);
  *(_DWORD *)(a2 + 88) = v41;
  v25 = (char *)v39;
  *(long double *)(a2 + 24) = exp(*(double *)v39 + *(double *)v39);
  v26 = *(_QWORD *)(a2 + 8);
  if (v26)
  {
    v27 = *(_QWORD *)(a2 + 32);
    if (v26 < 4 || (unint64_t)(v27 - (_QWORD)v25 - 8) < 0x10)
    {
      v28 = 0;
LABEL_22:
      v29 = (double *)&v25[8 * v28 + 8];
      v30 = (long double *)(v27 + 8 * v28);
      v31 = v26 - v28;
      do
      {
        v32 = *v29++;
        *v30++ = exp(v32);
        --v31;
      }
      while (v31);
      goto LABEL_24;
    }
    v28 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v33 = (__int128 *)(v25 + 8);
    v34 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v35 = *(_OWORD **)(a2 + 32);
    do
    {
      v36 = *v33++;
      v38 = exp(*((long double *)&v36 + 1));
      *(double *)&v37 = exp(*(long double *)&v36);
      *((long double *)&v37 + 1) = v38;
      *v35++ = v37;
      v34 -= 2;
    }
    while (v34);
    if (v26 != v28)
      goto LABEL_22;
  }
LABEL_24:
  sub_19C1F530C(a2, 1, 1);
  if (v39)
  {
    v40 = (char *)v39;
    operator delete(v39);
  }
  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  v48[0] = &unk_1E3D21150;
  sub_19C23AA14(v48[1]);
  if (v53)
  {
    v54 = v53;
    operator delete(v53);
  }
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }
}

void sub_19C1F6694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  if (__p)
  {
    operator delete(__p);
    sub_19C1CF8E8(&a29);
    _Unwind_Resume(a1);
  }
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C1F6700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  sub_19C176E10((uint64_t)&a21);
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C1F671C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1F6C6C;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1F6B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1F6970);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

double sub_19C1F6C6C(uint64_t **a1, uint64_t *a2, int **a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  double v33;
  void *__p;
  void *v35;
  char v36;
  _QWORD v37[3];
  signed int v38;
  char v39;
  void *v40;
  char *v41;
  char *v42;
  int v43;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v41 = 0;
  v42 = 0;
  v40 = 0;
  v43 = 0;
  v33 = 0.0;
  __p = 0;
  v35 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  v40 = v8;
  v41 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v42 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v43 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1F6F60(a3, (uint64_t)&v40, 0, (uint64_t)&v33);
    v17 = v33;
    if (v36)
    {
      v31 = __p;
      if (__p)
      {
        v35 = __p;
        goto LABEL_31;
      }
    }
  }
  else
  {
    LOBYTE(v37[0]) = 0;
    v39 = 0;
    sub_19C1F6F60(a3, (uint64_t)&v40, 1, (uint64_t)&v33);
    v17 = v33;
    sub_19C1D66F8((uint64_t)v37, (uint64_t)&__p);
    if (v36 && __p)
    {
      v35 = __p;
      operator delete(__p);
    }
    v18 = v38;
    if (v38)
    {
      v19 = 0;
      v20 = v37[0];
      v21 = *a2;
      if (v38 < 4)
        goto LABEL_23;
      if ((unint64_t)(v21 - v37[0]) < 0x20)
        goto LABEL_23;
      v19 = v38 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = (__int128 *)(v37[0] + 16);
      v23 = (_OWORD *)(v21 + 16);
      v24 = v19;
      do
      {
        v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 4;
      }
      while (v24);
      if (v19 != v18)
      {
LABEL_23:
        v26 = v18 - v19;
        v27 = 8 * v19;
        v28 = (_QWORD *)(v21 + 8 * v19);
        v29 = (uint64_t *)(v20 + v27);
        do
        {
          v30 = *v29++;
          *v28++ = v30;
          --v26;
        }
        while (v26);
      }
    }
    if (v39)
    {
      v31 = (void *)v37[0];
      if (v37[0])
      {
        v37[1] = v37[0];
LABEL_31:
        operator delete(v31);
      }
    }
  }
  if (v40)
  {
    v41 = (char *)v40;
    operator delete(v40);
  }
  return v17;
}

void sub_19C1F6EE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,void *__p,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1F6F44(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

_QWORD *sub_19C1F6F60@<X0>(int **a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char *v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  double *v11;
  long double *v12;
  unint64_t v13;
  long double v14;
  double v15;
  double v16;
  void *v17;
  int64_t v18;
  char *v19;
  char *v20;
  __int128 *v22;
  unint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  long double v27;
  _BYTE *v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  long double v33;
  char *v34;
  _QWORD v35[3];
  int v36;

  sub_19C1F80F8((uint64_t)&v31, *a1);
  if (v35 != (_QWORD *)a2)
    sub_19C11EAD0(v35, *(char **)a2, *(char **)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  v36 = *(_DWORD *)(a2 + 24);
  v7 = *(char **)a2;
  v33 = exp(*(double *)v7 + *(double *)v7);
  v8 = v32;
  if (v32)
  {
    v9 = v34;
    if (v32 < 4 || (unint64_t)(v34 - v7 - 8) < 0x10)
    {
      v10 = 0;
LABEL_7:
      v11 = (double *)&v7[8 * v10 + 8];
      v12 = (long double *)&v9[8 * v10];
      v13 = v8 - v10;
      do
      {
        v14 = *v11++;
        *v12++ = exp(v14);
        --v13;
      }
      while (v13);
      goto LABEL_9;
    }
    v10 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v22 = (__int128 *)(v7 + 8);
    v23 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v24 = v34;
    do
    {
      v25 = *v22++;
      v27 = exp(*((long double *)&v25 + 1));
      *(double *)&v26 = exp(*(long double *)&v25);
      *((long double *)&v26 + 1) = v27;
      *(_OWORD *)v24 = v26;
      v24 += 16;
      v23 -= 2;
    }
    while (v23);
    if (v8 != v10)
      goto LABEL_7;
  }
LABEL_9:
  sub_19C1F530C((uint64_t)&v31, 0, a3);
  v15 = sub_19C1F71D8((uint64_t)&v31);
  v16 = v15;
  if ((a3 & 1) != 0)
  {
    sub_19C1F7404((uint64_t)&v31, (uint64_t)&v28);
    *(_QWORD *)(a4 + 8) = 0;
    *(double *)a4 = v16;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0;
    v17 = v28;
    v18 = v29 - v28;
    if (v29 != v28)
    {
      if (v18 < 0)
        sub_19C07DA0C();
      v19 = (char *)operator new(v29 - v28);
      *(_QWORD *)(a4 + 8) = v19;
      v20 = &v19[8 * (v18 >> 3)];
      *(_QWORD *)(a4 + 24) = v20;
      memcpy(v19, v17, v18);
      *(_QWORD *)(a4 + 16) = v20;
    }
    *(_DWORD *)(a4 + 32) = v30;
    *(_BYTE *)(a4 + 40) = 1;
    if (v17)
    {
      v29 = v17;
      operator delete(v17);
    }
  }
  else
  {
    *(double *)a4 = v15;
    *(_BYTE *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 40) = 0;
  }
  return sub_19C1EC3CC(&v31);
}

void sub_19C1F7150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1F7164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  void **v19;
  void *v21;
  void *v22;

  v21 = *v19;
  if (*v19)
  {
    *(_QWORD *)(v18 + 16) = v21;
    operator delete(v21);
    v22 = __p;
    if (!__p)
    {
LABEL_3:
      sub_19C1EC3CC(&a18);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v22 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v22);
  sub_19C1EC3CC(&a18);
  _Unwind_Resume(a1);
}

void sub_19C1F71B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1F71C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_19C1F71D8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  double *v8;
  void *__p;
  char *v11;
  char *v12;
  int v13;
  void *__C[3];
  vDSP_Length v15;
  double *__A;
  double *v17;
  uint64_t v18;
  vDSP_Length __N;

  sub_19C1F5FCC(a1, (uint64_t)&__A);
  __C[0] = 0;
  vDSP_dotprD(__A, 1, *(const double **)(a1 + 256), 1, (double *)__C, (int)__N);
  v2 = __C[0];
  if (__A)
  {
    v17 = __A;
    operator delete(__A);
  }
  v3 = *(int *)(a1 + 220);
  if ((int)v3 >= *(_DWORD *)(a1 + 216))
    v4 = *(_DWORD *)(a1 + 216);
  else
    v4 = *(_DWORD *)(a1 + 220);
  __A = 0;
  v17 = 0;
  v18 = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = operator new(8 * v4);
    bzero(v5, 8 * v4);
    v6 = 0;
    v7 = *(_QWORD **)(a1 + 192);
    do
    {
      *((_QWORD *)v5 + v6++) = *v7;
      v7 += v3 + 1;
    }
    while (v4 != v6);
    __p = operator new(8 * v4);
    v11 = (char *)__p + 8 * v4;
    v12 = v11;
    v13 = v4;
    memcpy(__p, v5, 8 * v4);
  }
  else
  {
    v5 = 0;
    v11 = 0;
    v12 = 0;
    __p = 0;
    v13 = 0;
  }
  sub_19C1D650C((uint64_t)&__p, (uint64_t)__C);
  __A = 0;
  vDSP_sveD((const double *)__C[0], 1, (double *)&__A, (int)v15);
  v8 = __A;
  if (__C[0])
  {
    __C[1] = __C[0];
    operator delete(__C[0]);
  }
  if (__p)
  {
    v11 = (char *)__p;
    operator delete(__p);
  }
  if (v5)
    operator delete(v5);
  return (double)*(int *)(a1 + 120) * -0.918938533 - (*(double *)&v8 - *(double *)&v2 * -0.5);
}

void sub_19C1F737C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v20;

  if (__p)
  {
    operator delete(__p);
    v20 = a9;
    if (!a9)
    {
LABEL_3:
      if (!v18)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(v18);
      goto LABEL_8;
    }
  }
  else
  {
    v20 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v20);
  if (!v18)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C1F73E8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1F7404(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  double *v5;
  double *v6;
  _BYTE *v7;
  _BYTE *v8;
  int64_t v9;
  char *v10;
  char *v11;
  void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  vDSP_Length v18;
  int64_t v19;
  char *v20;
  char *v21;
  char *v22;
  unint64_t i;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  int v28;
  char *v29;
  unint64_t j;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  __int128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  const void *v68;
  int64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  double *v73;
  const void *v74;
  int64_t v75;
  char *v76;
  const double *v77;
  int v78;
  int64_t v79;
  char *v80;
  char *v81;
  const double *v82;
  int v83;
  uint64_t v84;
  char *v85;
  int64_t v86;
  char *v87;
  __int128 *v88;
  _OWORD *v89;
  unint64_t v90;
  __int128 v91;
  __int128 *v92;
  _OWORD *v93;
  unint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  vDSP_Length v98;
  void *v101;
  char *v102;
  char *v103;
  int v104;
  void *v105;
  void *v106;
  char *v107;
  int v108;
  void *__p;
  _BYTE *v110;
  _BYTE *v111;
  unint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  unint64_t v116;
  _BYTE *v117;
  char *v118;
  char *v119;
  unint64_t v120;
  double *v121;
  double *v122;
  double *v123;
  unint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  unint64_t v128;

  v121 = 0;
  v122 = 0;
  v123 = 0;
  v3 = *(_BYTE **)(a1 + 224);
  v2 = *(_BYTE **)(a1 + 232);
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (double *)operator new(v2 - v3);
    v6 = &v5[v4 >> 3];
    v121 = v5;
    v123 = v6;
    memcpy(v5, v3, v4);
    v122 = v6;
  }
  v7 = *(_BYTE **)(a1 + 256);
  v124 = *(_QWORD *)(a1 + 248);
  v106 = 0;
  v107 = 0;
  v105 = 0;
  v8 = *(_BYTE **)(a1 + 264);
  v9 = v8 - v7;
  if (v8 != v7)
  {
    if (v9 < 0)
      sub_19C07DA0C();
    v10 = (char *)operator new(v8 - v7);
    v11 = &v10[8 * (v9 >> 3)];
    v105 = v10;
    v107 = v11;
    memcpy(v10, v7, v9);
    v106 = v11;
  }
  v108 = *(_DWORD *)(a1 + 280);
  sub_19C1CE998(a1 + 256, (uint64_t)&v101);
  sub_19C1D65EC((uint64_t)&v105, (uint64_t)&v101, (uint64_t)&__p);
  v113 = 0;
  v114 = 0;
  v115 = 0;
  v12 = __p;
  v13 = v110 - (_BYTE *)__p;
  if (v110 == __p)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v110 - (_BYTE *)__p);
    v15 = &v14[8 * (v13 >> 3)];
    v113 = v14;
    v115 = v15;
    memcpy(v14, v12, v13);
    v114 = v15;
  }
  v16 = v112;
  v116 = v112;
  v17 = HIDWORD(v112);
  v18 = HIDWORD(v112) * (int)v112;
  vDSP_vsubD(v121, 1, (const double *)v14, 1, (double *)v14, 1, v18);
  v117 = 0;
  v118 = 0;
  v119 = 0;
  v19 = v15 - v14;
  if (!v19)
  {
    v20 = 0;
    v120 = v16;
    v126 = 0;
    v127 = 0;
    v125 = 0;
    if ((_DWORD)v18)
      goto LABEL_14;
LABEL_18:
    v22 = 0;
    v21 = 0;
    v128 = __PAIR64__(v17, v16);
    goto LABEL_23;
  }
  if (v19 < 0)
    sub_19C07DA0C();
  v20 = (char *)operator new(v19);
  v117 = v20;
  v119 = &v20[8 * (v19 >> 3)];
  memcpy(v20, v14, v19);
  v118 = &v20[8 * (v19 >> 3)];
  v120 = v16;
  v126 = 0;
  v127 = 0;
  v125 = 0;
  if (!(_DWORD)v18)
    goto LABEL_18;
LABEL_14:
  if ((v18 & 0x80000000) != 0)
    sub_19C07DA0C();
  v21 = (char *)operator new(8 * v18);
  v125 = v21;
  v127 = &v21[8 * v18];
  bzero(v21, 8 * v18);
  v22 = &v21[8 * v18];
  v128 = __PAIR64__(v17, v16);
  if (v18 < 4)
  {
    for (i = 0; i != v18; ++i)
LABEL_22:
      *(_QWORD *)&v21[8 * i] = *(_QWORD *)&v20[8 * i];
    goto LABEL_23;
  }
  v24 = 0;
  i = v18 & 0xFFFFFFFFFFFFFFFCLL;
  v25 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v26 = *(_OWORD *)&v20[v24 + 16];
    v27 = &v21[v24];
    *(_OWORD *)v27 = *(_OWORD *)&v20[v24];
    *((_OWORD *)v27 + 1) = v26;
    v24 += 32;
    v25 -= 4;
  }
  while (v25);
  if (i != v18)
    goto LABEL_22;
LABEL_23:
  sub_19C11EAD0(&v121, v21, v22, (v22 - v21) >> 3);
  v124 = v128;
  if (v21)
  {
    v126 = v21;
    operator delete(v21);
  }
  if (v20)
  {
    v118 = v20;
    operator delete(v20);
  }
  if (v14)
  {
    v114 = v14;
    operator delete(v14);
  }
  if (__p)
  {
    v110 = __p;
    operator delete(__p);
  }
  if (v101)
  {
    v102 = (char *)v101;
    operator delete(v101);
  }
  if (v105)
  {
    v106 = v105;
    operator delete(v105);
  }
  v28 = *(_DWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v98 = v28 + 1;
  if (v28 == -1)
  {
    *(_DWORD *)(a2 + 24) = 0;
    v96 = *(int *)(a1 + 120);
    if (!(_DWORD)v96)
      goto LABEL_125;
    goto LABEL_40;
  }
  if (v28 <= -2)
    sub_19C07DA0C();
  v29 = (char *)operator new(8 * v98);
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = &v29[8 * v98];
  *(_QWORD *)(a2 + 16) = &v29[8 * v28 + 8];
  *(_DWORD *)(a2 + 24) = v28 + 1;
  bzero(v29, 8 * v98);
  v96 = *(int *)(a1 + 120);
  if ((_DWORD)v96)
  {
LABEL_40:
    v97 = 0;
    for (j = 0; j != v96; ++j)
    {
      v31 = 0;
      v32 = 0;
      do
      {
        v33 = *(_QWORD *)(a1 + 96);
        v34 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v34)
        {
          v35 = 0;
          v110 = 0;
          v111 = 0;
          __p = 0;
          LODWORD(v112) = 0;
LABEL_72:
          v52 = 0;
          v102 = 0;
          v103 = 0;
          v101 = 0;
          v104 = 0;
          goto LABEL_76;
        }
        if ((v34 & 0x80000000) != 0)
          sub_19C07DA0C();
        v35 = operator new(8 * (int)v34);
        bzero(v35, 8 * (int)v34);
        if (v34 < 8 || (unint64_t)v35 - v33 - 8 * j * (int)v34 < 0x20)
        {
          v36 = 0;
LABEL_49:
          v37 = (int)v34 - v36;
          v38 = 8 * v36;
          v39 = (_QWORD *)v35 + v36;
          v40 = (uint64_t *)(v33 + v38 + v97 * (int)v34);
          do
          {
            v41 = *v40++;
            *v39++ = v41;
            --v37;
          }
          while (v37);
          goto LABEL_51;
        }
        v36 = (int)v34 & 0xFFFFFFFFFFFFFFFCLL;
        v88 = (__int128 *)(v33 + v97 * (int)v34 + 16);
        v89 = v35 + 1;
        v90 = v36;
        do
        {
          v91 = *v88;
          *(v89 - 1) = *(v88 - 1);
          *v89 = v91;
          v88 += 2;
          v89 += 2;
          v90 -= 4;
        }
        while (v90);
        if (v36 != (int)v34)
          goto LABEL_49;
LABEL_51:
        __p = 0;
        v110 = 0;
        v111 = 0;
        LODWORD(v112) = v34;
        v42 = operator new(8 * (int)v34);
        bzero(v42, 8 * (int)v34);
        __p = v42;
        v110 = (char *)v42 + 8 * (int)v34;
        v111 = v110;
        if ((v34 - 6) >= 0x7FFFFFFB)
        {
          v43 = 0;
LABEL_58:
          v48 = v34 - v43;
          v49 = v43 << 32;
          do
          {
            *(_QWORD *)((char *)v42 + (v49 >> 29)) = *(_QWORD *)((char *)v35 + (v49 >> 29));
            v49 += 0x100000000;
            --v48;
          }
          while (v48);
          goto LABEL_60;
        }
        v43 = v34 & 0xFFFFFFFC;
        v44 = v42 + 1;
        v45 = v35 + 1;
        v46 = v43;
        do
        {
          v47 = *v45;
          *(v44 - 1) = *(v45 - 1);
          *v44 = v47;
          v44 += 2;
          v45 += 2;
          v46 -= 4;
        }
        while (v46);
        if (v43 != v34)
          goto LABEL_58;
LABEL_60:
        v50 = *(_QWORD *)(a1 + 96);
        v51 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v51)
          goto LABEL_72;
        if ((v51 & 0x80000000) != 0)
          sub_19C07DA0C();
        v52 = operator new(8 * (int)v51);
        bzero(v52, 8 * (int)v51);
        if (v51 < 8 || (unint64_t)v52 - v50 - 8 * v32 * (int)v51 < 0x20)
        {
          v53 = 0;
LABEL_65:
          v54 = (int)v51 - v53;
          v55 = 8 * v53;
          v56 = (_QWORD *)v52 + v53;
          v57 = (uint64_t *)(v50 + v55 + v31 * (int)v51);
          do
          {
            v58 = *v57++;
            *v56++ = v58;
            --v54;
          }
          while (v54);
          goto LABEL_67;
        }
        v53 = (int)v51 & 0xFFFFFFFFFFFFFFFCLL;
        v92 = (__int128 *)(v50 + v31 * (int)v51 + 16);
        v93 = v52 + 1;
        v94 = v53;
        do
        {
          v95 = *v92;
          *(v93 - 1) = *(v92 - 1);
          *v93 = v95;
          v92 += 2;
          v93 += 2;
          v94 -= 4;
        }
        while (v94);
        if (v53 != (int)v51)
          goto LABEL_65;
LABEL_67:
        v101 = 0;
        v102 = 0;
        v103 = 0;
        v104 = v51;
        v59 = (char *)operator new(8 * (int)v51);
        bzero(v59, 8 * (int)v51);
        v101 = v59;
        v102 = &v59[8 * (int)v51];
        v103 = v102;
        if ((v51 - 6) >= 0x7FFFFFFB)
        {
          v61 = 0;
LABEL_74:
          v64 = v51 - v61;
          v65 = v61 << 32;
          do
          {
            *(_QWORD *)&v59[v65 >> 29] = *(_QWORD *)((char *)v52 + (v65 >> 29));
            v65 += 0x100000000;
            --v64;
          }
          while (v64);
          goto LABEL_76;
        }
        v60 = 0;
        v61 = v51 & 0xFFFFFFFC;
        do
        {
          v62 = v52[v60 / 0x10 + 1];
          v63 = &v59[v60];
          *(_OWORD *)v63 = v52[v60 / 0x10];
          *((_OWORD *)v63 + 1) = v62;
          v60 += 32;
        }
        while (((8 * v51) & 0x7FFFFFFE0) != v60);
        if (v61 != v51)
          goto LABEL_74;
LABEL_76:
        sub_19C1F8628(a1 + 8, (uint64_t)&__p, (const double **)&v101, (uint64_t)&v117);
        if (v101)
        {
          v102 = (char *)v101;
          operator delete(v101);
        }
        if (v52)
          operator delete(v52);
        if (__p)
        {
          v110 = __p;
          operator delete(__p);
        }
        if (v35)
          operator delete(v35);
        if (j == v32)
        {
          v66 = SHIDWORD(v124);
          v67 = v121;
          v68 = v117;
          v69 = v118 - v117;
          if (v118 == v117)
          {
            v71 = 0;
            v70 = 0;
          }
          else
          {
            if (v69 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v71 = &v70[8 * (v69 >> 3)];
            memcpy(v70, v68, v69);
          }
          v77 = &v67[j + j * v66];
          v78 = v120;
          vDSP_vsmulD((const double *)v70, 1, v77, (double *)v70, 1, (int)v120);
          v79 = v71 - v70;
          if (v79)
          {
            if (v79 < 0)
              sub_19C07DA0C();
            v80 = (char *)operator new(v79);
            v81 = &v80[8 * (v79 >> 3)];
            memcpy(v80, v70, v79);
          }
          else
          {
            v81 = 0;
            v80 = 0;
          }
          __p = (void *)0x3FE0000000000000;
          vDSP_vsmulD((const double *)v80, 1, (const double *)&__p, (double *)v80, 1, v78);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v86 = v81 - v80;
          if (v81 == v80)
          {
            v87 = 0;
          }
          else
          {
            if (v86 < 0)
              sub_19C07DA0C();
            v87 = (char *)operator new(v81 - v80);
            v125 = v87;
            v127 = &v87[8 * (v86 >> 3)];
            memcpy(v87, v80, v86);
            v126 = &v87[8 * (v86 >> 3)];
          }
          LODWORD(v128) = v78;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v87, 1, *(double **)a2, 1, v98);
          if (v87)
            operator delete(v87);
          if (v80)
            operator delete(v80);
          if (v70)
            goto LABEL_114;
        }
        else
        {
          v72 = SHIDWORD(v124);
          v73 = v121;
          v74 = v117;
          v75 = v118 - v117;
          if (v118 == v117)
          {
            v76 = 0;
            v70 = 0;
          }
          else
          {
            if (v75 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v76 = &v70[8 * (v75 >> 3)];
            memcpy(v70, v74, v75);
          }
          v82 = &v73[v32 + j * v72];
          v83 = v120;
          vDSP_vsmulD((const double *)v70, 1, v82, (double *)v70, 1, (int)v120);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v84 = v76 - v70;
          if (v76 == v70)
          {
            v85 = 0;
          }
          else
          {
            if (v84 < 0)
              sub_19C07DA0C();
            v85 = (char *)operator new(v76 - v70);
            v125 = v85;
            v127 = &v85[8 * (v84 >> 3)];
            memcpy(v85, v70, v76 - v70);
            v126 = &v85[8 * (v84 >> 3)];
          }
          LODWORD(v128) = v83;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v85, 1, *(double **)a2, 1, v98);
          if (v85)
            operator delete(v85);
          if (v70)
LABEL_114:
            operator delete(v70);
        }
        if (v117)
        {
          v118 = v117;
          operator delete(v117);
        }
        ++v32;
        v31 += 8;
      }
      while (v32 <= j);
      v97 += 8;
    }
  }
LABEL_125:
  if (v121)
  {
    v122 = v121;
    operator delete(v121);
  }
}

void sub_19C1F7E50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v15;

  v15 = *(void **)a14;
  if (*(_QWORD *)a14)
  {
    *(_QWORD *)(a14 + 8) = v15;
    operator delete(v15);
  }
  sub_19C07AF7C(a1);
}

void sub_19C1F7E74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37)
{
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v42;
  void *v43;
  void *v44;

  if (v39)
    operator delete(v39);
  if (v38)
  {
    *(_QWORD *)(v40 - 176) = v38;
    operator delete(v38);
  }
  if (v37)
  {
    *(_QWORD *)(v40 - 208) = v37;
    operator delete(v37);
  }
  if (__p)
  {
    operator delete(__p);
    v42 = a28;
    if (!a28)
    {
LABEL_9:
      v43 = a32;
      if (!a32)
      {
LABEL_14:
        v44 = *(void **)(v40 - 152);
        if (v44)
        {
          *(_QWORD *)(v40 - 144) = v44;
          operator delete(v44);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_13:
      operator delete(v43);
      goto LABEL_14;
    }
  }
  else
  {
    v42 = a28;
    if (!a28)
      goto LABEL_9;
  }
  operator delete(v42);
  v43 = a32;
  if (!a32)
    goto LABEL_14;
  goto LABEL_13;
}

void sub_19C1F80A8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37)
{
  uint64_t v37;
  void *v38;
  void *v39;

  if (__p)
  {
    operator delete(__p);
    if (!v38)
    {
LABEL_3:
      v39 = a36;
      if (!a36)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v38)
  {
    goto LABEL_3;
  }
  operator delete(v38);
  v39 = a36;
  if (!a36)
  {
LABEL_4:
    if (v37)
      goto LABEL_12;
    goto LABEL_13;
  }
LABEL_8:
  operator delete(v39);
  if (v37)
LABEL_12:
    JUMPOUT(0x19C1F8054);
LABEL_13:
  JUMPOUT(0x19C1F8058);
}

uint64_t sub_19C1F80F8(uint64_t a1, int *a2)
{
  int v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;
  int v16;
  _BYTE *v17;
  _BYTE *v18;
  int64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  int64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  int64_t v31;
  char *v32;
  char *v33;
  _BYTE *v34;
  _BYTE *v35;
  int64_t v36;
  char *v37;
  char *v38;
  _BYTE *v39;
  _BYTE *v40;
  int64_t v41;
  char *v42;
  char *v43;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  sub_19C1F8500(a1 + 8, (uint64_t)(a2 + 2));
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  v6 = (_BYTE *)*((_QWORD *)a2 + 12);
  v5 = (_BYTE *)*((_QWORD *)a2 + 13);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 96) = v8;
    *(_QWORD *)(a1 + 104) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 112) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 104) = v9;
  }
  v10 = *((_QWORD *)a2 + 15);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 120) = v10;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  v12 = (_BYTE *)*((_QWORD *)a2 + 16);
  v11 = (_BYTE *)*((_QWORD *)a2 + 17);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 128) = v14;
    *(_QWORD *)(a1 + 136) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 144) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 136) = v15;
  }
  v16 = a2[38];
  *(_QWORD *)(a1 + 160) = 0;
  *(_DWORD *)(a1 + 152) = v16;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  v18 = (_BYTE *)*((_QWORD *)a2 + 20);
  v17 = (_BYTE *)*((_QWORD *)a2 + 21);
  v19 = v17 - v18;
  if (v17 != v18)
  {
    if (v19 < 0)
      sub_19C07DA0C();
    v20 = (char *)operator new(v17 - v18);
    *(_QWORD *)(a1 + 160) = v20;
    *(_QWORD *)(a1 + 168) = v20;
    v21 = &v20[8 * (v19 >> 3)];
    *(_QWORD *)(a1 + 176) = v21;
    memcpy(v20, v18, v19);
    *(_QWORD *)(a1 + 168) = v21;
  }
  v22 = *((_QWORD *)a2 + 23);
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 184) = v22;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  v24 = (_BYTE *)*((_QWORD *)a2 + 24);
  v23 = (_BYTE *)*((_QWORD *)a2 + 25);
  v25 = v23 - v24;
  if (v23 != v24)
  {
    if (v25 < 0)
      sub_19C07DA0C();
    v26 = (char *)operator new(v23 - v24);
    *(_QWORD *)(a1 + 192) = v26;
    *(_QWORD *)(a1 + 200) = v26;
    v27 = &v26[8 * (v25 >> 3)];
    *(_QWORD *)(a1 + 208) = v27;
    memcpy(v26, v24, v25);
    *(_QWORD *)(a1 + 200) = v27;
  }
  v28 = *((_QWORD *)a2 + 27);
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 216) = v28;
  *(_QWORD *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 240) = 0;
  v30 = (_BYTE *)*((_QWORD *)a2 + 28);
  v29 = (_BYTE *)*((_QWORD *)a2 + 29);
  v31 = v29 - v30;
  if (v29 != v30)
  {
    if (v31 < 0)
      sub_19C07DA0C();
    v32 = (char *)operator new(v29 - v30);
    *(_QWORD *)(a1 + 224) = v32;
    *(_QWORD *)(a1 + 232) = v32;
    v33 = &v32[8 * (v31 >> 3)];
    *(_QWORD *)(a1 + 240) = v33;
    memcpy(v32, v30, v31);
    *(_QWORD *)(a1 + 232) = v33;
  }
  *(_QWORD *)(a1 + 248) = *((_QWORD *)a2 + 31);
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0;
  v35 = (_BYTE *)*((_QWORD *)a2 + 32);
  v34 = (_BYTE *)*((_QWORD *)a2 + 33);
  v36 = v34 - v35;
  if (v34 != v35)
  {
    if (v36 < 0)
      sub_19C07DA0C();
    v37 = (char *)operator new(v34 - v35);
    *(_QWORD *)(a1 + 256) = v37;
    *(_QWORD *)(a1 + 264) = v37;
    v38 = &v37[8 * (v36 >> 3)];
    *(_QWORD *)(a1 + 272) = v38;
    memcpy(v37, v35, v36);
    *(_QWORD *)(a1 + 264) = v38;
  }
  *(_DWORD *)(a1 + 280) = a2[70];
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 288) = 0;
  v40 = (_BYTE *)*((_QWORD *)a2 + 36);
  v39 = (_BYTE *)*((_QWORD *)a2 + 37);
  v41 = v39 - v40;
  if (v39 != v40)
  {
    if (v41 < 0)
      sub_19C07DA0C();
    v42 = (char *)operator new(v39 - v40);
    *(_QWORD *)(a1 + 288) = v42;
    *(_QWORD *)(a1 + 296) = v42;
    v43 = &v42[8 * (v41 >> 3)];
    *(_QWORD *)(a1 + 304) = v43;
    memcpy(v42, v40, v41);
    *(_QWORD *)(a1 + 296) = v43;
  }
  *(_DWORD *)(a1 + 312) = a2[78];
  return a1;
}

void sub_19C1F83D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, _QWORD *a10)
{
  _QWORD *v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  v18 = *v16;
  if (*v16)
  {
    v10[37] = v18;
    operator delete(v18);
    v19 = *a9;
    if (!*a9)
    {
LABEL_3:
      v20 = *v15;
      if (!*v15)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else
  {
    v19 = *a9;
    if (!*a9)
      goto LABEL_3;
  }
  v10[33] = v19;
  operator delete(v19);
  v20 = *v15;
  if (!*v15)
  {
LABEL_4:
    v21 = *v14;
    if (!*v14)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v10[29] = v20;
  operator delete(v20);
  v21 = *v14;
  if (!*v14)
  {
LABEL_5:
    v22 = *v13;
    if (!*v13)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  v10[25] = v21;
  operator delete(v21);
  v22 = *v13;
  if (!*v13)
  {
LABEL_6:
    v23 = *v12;
    if (!*v12)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  v10[21] = v22;
  operator delete(v22);
  v23 = *v12;
  if (!*v12)
  {
LABEL_7:
    v24 = *v11;
    if (!*v11)
      goto LABEL_8;
    goto LABEL_15;
  }
LABEL_14:
  v10[17] = v23;
  operator delete(v23);
  v24 = *v11;
  if (!*v11)
  {
LABEL_8:
    sub_19C1E8600(a10);
    _Unwind_Resume(a1);
  }
LABEL_15:
  v10[13] = v24;
  operator delete(v24);
  sub_19C1E8600(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1F8500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v6 = *(_BYTE **)(a2 + 24);
  v5 = *(_BYTE **)(a2 + 32);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 40) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 32) = v9;
  }
  v10 = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v12 = *(_BYTE **)(a2 + 56);
  v11 = *(_BYTE **)(a2 + 64);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 56) = v14;
    *(_QWORD *)(a1 + 64) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 72) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 64) = v15;
  }
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

void sub_19C1F85F4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void *v5;
  void *v6;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 64) = v5;
    operator delete(v5);
  }
  v6 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C1F8628(uint64_t a1@<X0>, uint64_t a2@<X1>, const double **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  double *v9;
  double *v10;
  int v11;
  int v12;
  uint64_t v13;
  const void *v14;
  int64_t v15;
  char *v16;
  char *v17;
  int v18;
  int64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  signed int v25;
  float64x2_t *v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  _OWORD *f64;
  double v33;
  double v34;
  unint64_t v35;
  unint64_t v36;
  double *v37;
  double *v38;
  unint64_t v39;
  double v40;
  float64x2_t *v41;
  float64x2_t *v42;
  unint64_t v43;
  float64x2_t v44;
  void *v45;
  void *v46;
  char *v47;
  int v48;
  void *__p[3];
  signed int v50;
  float64x2_t *v51;
  float64x2_t *v52;
  char *v53;
  vDSP_Length __N;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_DWORD *)a1;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v51 = 0;
  v52 = 0;
  v53 = 0;
  v12 = v11 + 1;
  if (v11 != -1)
  {
    if (v11 <= -2)
      sub_19C07DA0C();
    v10 = (double *)operator new(8 * v12);
    v8 = (uint64_t)&v10[v11 + 1];
    bzero(v10, 8 * v12);
    v9 = &v10[v12];
  }
  *(_QWORD *)a4 = v10;
  *(_QWORD *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = v8;
  *(_DWORD *)(a4 + 24) = v12;
  v14 = *(const void **)a2;
  v13 = *(_QWORD *)(a2 + 8);
  v15 = v13 - *(_QWORD *)a2;
  if (v13 == *(_QWORD *)a2)
  {
    v17 = 0;
    v16 = 0;
  }
  else
  {
    if (v15 < 0)
      sub_19C07DA0C();
    v16 = (char *)operator new(v13 - *(_QWORD *)a2);
    v17 = &v16[8 * (v15 >> 3)];
    memcpy(v16, v14, v15);
  }
  v18 = *(_DWORD *)(a2 + 24);
  vDSP_vsubD(*a3, 1, (const double *)v16, 1, (double *)v16, 1, v18);
  v19 = v17 - v16;
  if (v17 == v16)
  {
    v21 = 0;
    v20 = 0;
  }
  else
  {
    if (v19 < 0)
      sub_19C07DA0C();
    v20 = (char *)operator new(v17 - v16);
    v21 = &v20[8 * (v19 >> 3)];
    memcpy(v20, v16, v19);
  }
  vDSP_vdivD(*(const double **)(a1 + 24), 1, (const double *)v20, 1, (double *)v20, 1, v18);
  v45 = 0;
  v46 = 0;
  v47 = 0;
  v22 = v21 - v20;
  if (v21 != v20)
  {
    if (v22 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(v21 - v20);
    v24 = &v23[8 * (v22 >> 3)];
    v45 = v23;
    v47 = v24;
    memcpy(v23, v20, v21 - v20);
    v46 = v24;
  }
  v48 = v18;
  sub_19C1EFF00((uint64_t)&v45, (uint64_t)__p);
  v25 = v50;
  v52 = 0;
  v53 = 0;
  v51 = 0;
  if (v50)
  {
    if (v50 < 0)
      sub_19C07DA0C();
    v26 = (float64x2_t *)operator new(8 * v50);
    v51 = v26;
    v53 = (char *)&v26->f64[v25];
    bzero(v26, 8 * v25);
    v27 = 0;
    v52 = (float64x2_t *)((char *)v26 + 8 * v25);
    LODWORD(__N) = v25;
    v28 = __p[0];
    if (v25 < 4)
      goto LABEL_52;
    if ((unint64_t)((char *)v26 - (char *)__p[0]) < 0x20)
      goto LABEL_52;
    v29 = 0;
    v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
    v30 = v27;
    do
    {
      v31 = *(_OWORD *)&v28[v29 / 8 + 2];
      f64 = (_OWORD *)v26[v29 / 0x10].f64;
      *f64 = *(_OWORD *)&v28[v29 / 8];
      f64[1] = v31;
      v29 += 32;
      v30 -= 4;
    }
    while (v30);
    if (v27 != v25)
    {
LABEL_52:
      do
      {
        *(_QWORD *)&v26->f64[v27] = v28[v27];
        ++v27;
      }
      while (v25 != v27);
    }
  }
  else
  {
    v26 = 0;
    LODWORD(__N) = 0;
    v28 = __p[0];
    if (!__p[0])
      goto LABEL_26;
  }
  __p[1] = v28;
  operator delete(v28);
LABEL_26:
  if (v45)
  {
    v46 = v45;
    operator delete(v45);
  }
  if (v20)
    operator delete(v20);
  if (v16)
    operator delete(v16);
  v33 = *(double *)(a1 + 16);
  __p[0] = 0;
  vDSP_sveD(v26->f64, 1, (double *)__p, (int)__N);
  v34 = exp(*(double *)__p * -0.5) * v33;
  *v10 = v34 + v34;
  v35 = *(_QWORD *)a1;
  if (*(_QWORD *)a1)
  {
    if (v35 >= 4 && (unint64_t)((char *)v10 - (char *)v26 + 8) >= 0x20)
    {
      v36 = v35 & 0xFFFFFFFFFFFFFFFCLL;
      v41 = (float64x2_t *)(v10 + 3);
      v42 = v26 + 1;
      v43 = v35 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v44 = vmulq_n_f64(*v42, v34);
        v41[-1] = vmulq_n_f64(v42[-1], v34);
        *v41 = v44;
        v41 += 2;
        v42 += 2;
        v43 -= 4;
      }
      while (v43);
      if (v35 == v36)
        goto LABEL_44;
    }
    else
    {
      v36 = 0;
    }
    v37 = &v10[v36 + 1];
    v38 = &v26->f64[v36];
    v39 = v35 - v36;
    do
    {
      v40 = *v38++;
      *v37++ = v40 * v34;
      --v39;
    }
    while (v39);
LABEL_44:
    v52 = v26;
    operator delete(v26);
    return;
  }
  if (v26)
    goto LABEL_44;
}

void sub_19C1F8A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  void *v26;
  uint64_t v27;
  void *v28;

  if (v28)
    operator delete(v28);
  if (v26)
  {
    *(_QWORD *)(v27 + 8) = v26;
    operator delete(v26);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C1F8AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!a9)
    JUMPOUT(0x19C1F8AB8);
  JUMPOUT(0x19C1F8AACLL);
}

BOOL sub_19C1F8AE0(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v5;
  int v6;
  int v8;
  _BOOL4 v9;
  std::runtime_error *exception;

  if (*(_BYTE *)(a1 + 8))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Early stopping already requested.");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  v3 = *(_DWORD *)(a1 + 12);
  if (v3 == -1)
    return 0;
  v6 = *a2;
  v5 = (uint64_t)(a2 + 2);
  if (v6 == 1 || *(double *)(a1 + 120) < *((double *)a2 + 13) - *(double *)(a1 + 16))
  {
    sub_19C1C9C8C(a1 + 24, v5);
    *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 13);
    *(_DWORD *)(a1 + 128) = 0;
    *(_BYTE *)(a1 + 8) = 0;
    return 0;
  }
  else
  {
    v8 = *(_DWORD *)(a1 + 128);
    *(_DWORD *)(a1 + 128) = v8 + 1;
    v9 = v8 >= v3;
    *(_BYTE *)(a1 + 8) = v9;
    return v9;
  }
}

void sub_19C1F8BC8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char **sub_19C1F8BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  BOOL v18;
  void *v20;
  _BYTE v21[4];
  _BYTE v22[12];
  _OWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  double v26;
  char *v27[2];
  int v28;
  char *v29[12];
  BOOL (**v30)(uint64_t, _DWORD *);
  char v31;
  int v32;
  BOOL (**v33)(uint64_t, int *);
  char v34;
  uint64_t v35;
  int v36;
  uint64_t *v37[13];
  int v38;

  v6 = *(_DWORD *)(a1 + 56);
  v7 = *(_DWORD *)(a1 + 60);
  v8 = *(_QWORD *)(a1 + 64);
  v21[0] = 0;
  *(_DWORD *)v22 = v7;
  *(_QWORD *)&v22[4] = v8;
  memset(v23, 0, sizeof(v23));
  v24 = v25;
  v25[0] = 0;
  v26 = 0.0;
  v27[0] = 0;
  v25[1] = 0;
  v25[2] = &v26;
  v28 = 0;
  v31 = 0;
  v30 = (BOOL (**)(uint64_t, _DWORD *))&unk_1E3D21888;
  v32 = v6;
  v34 = 0;
  v36 = HIDWORD(v8);
  v35 = *(_QWORD *)v22;
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D21918;
  sub_19C1C5D14(v37, (uint64_t)v23);
  v37[12] = (uint64_t *)v27[1];
  v38 = v28;
  v20 = &unk_1E3D21918;
  sub_19C17B808((char **)v23);
  v9 = *(_DWORD *)(a1 + 72);
  (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
  v10 = *(_QWORD *)(a2 + 24);
  if (!v10)
    goto LABEL_16;
  v11 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v10 + 48))(v10, v29);
  (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
  std::chrono::steady_clock::now();
  LODWORD(v20) = 1;
  sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
  v26 = v11;
  sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
  if (1 % v9)
    goto LABEL_5;
  v12 = *(_QWORD *)(a2 + 56);
  if (!v12)
LABEL_17:
    sub_19C1D6A94();
  if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v12 + 48))(v12, &v20) & 1) == 0)
  {
LABEL_5:
    if (!(*v30)((uint64_t)&v30, &v20))
    {
      v13 = (*v33)((uint64_t)&v33, (int *)&v20);
      sub_19C17B808(v27);
      sub_19C17B808((char **)v21);
      sub_19C17B808(v29);
      if (v13)
        goto LABEL_15;
      v14 = 2;
      while (1)
      {
        (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
        v15 = *(_QWORD *)(a2 + 24);
        if (!v15)
          break;
        v16 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v15 + 48))(v15, v29);
        (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
        std::chrono::steady_clock::now();
        std::chrono::steady_clock::now();
        LODWORD(v20) = v14;
        sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
        v26 = v16;
        sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
        if (!(v14 % v9))
        {
          v17 = *(_QWORD *)(a2 + 56);
          if (!v17)
            goto LABEL_17;
          if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v17 + 48))(v17, &v20) & 1) != 0)
            goto LABEL_6;
        }
        if ((*v30)((uint64_t)&v30, &v20))
          goto LABEL_6;
        v18 = (*v33)((uint64_t)&v33, (int *)&v20);
        sub_19C17B808(v27);
        sub_19C17B808((char **)v21);
        sub_19C17B808(v29);
        ++v14;
        if (v18)
          goto LABEL_15;
      }
LABEL_16:
      sub_19C1D6A94();
    }
  }
LABEL_6:
  sub_19C17B808(v27);
  sub_19C17B808((char **)v21);
  sub_19C17B808(v29);
LABEL_15:
  sub_19C1D6818(*(_QWORD *)(a1 + 120), a3);
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D21918;
  return sub_19C17B808((char **)v37);
}

void sub_19C1F8F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char *a37)
{
  char **v37;
  char **v38;
  char **v39;
  uint64_t v40;

  sub_19C17B808(v39);
  sub_19C17B808(v38);
  sub_19C17B808(&a37);
  *(_QWORD *)(v40 - 240) = &unk_1E3D21918;
  sub_19C17B808(v37);
  _Unwind_Resume(a1);
}

void sub_19C1F8F84(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  std::logic_error *exception;
  uint64_t v5;

  v3 = *(_DWORD *)(a1 + 48);
  if (v3 == 1)
  {
    sub_19C1F902C(a1, &v5);
    *a2 = v5;
  }
  else
  {
    if (v3)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1C79A4(exception, "Invalid optimizer in user config.");
      __cxa_throw(exception, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    }
    sub_19C1C76D4(a1, &v5);
    *a2 = v5;
  }
}

void sub_19C1F9018(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C1F902C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  void **v15;
  void *v16;
  void **v17;
  void *__p;
  char **v19;
  char v20;

  v4 = operator new();
  sub_19C1C2D98((uint64_t)&v14, a1);
  sub_19C1F9194(v4, (uint64_t *)&v14);
  *a2 = v4;
  if (v20)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v19;
      v7 = __p;
      if (v19 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v19 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v16;
  if (v16)
  {
    v9 = v17;
    v10 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v16;
    }
    v17 = v8;
    operator delete(v10);
  }
  v11 = (void **)v14;
  if (v14)
  {
    v12 = v15;
    v13 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v14;
    }
    v15 = v11;
    operator delete(v13);
  }
}

void sub_19C1F9164(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  va_list va;

  va_start(va, a2);
  sub_19C1C2E88((uint64_t)va);
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_19C1F9180(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1F9194(uint64_t a1, uint64_t *a2)
{
  char **v4;
  char **v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  int v13;
  int v14;
  char ***v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  char **v38;
  char **v39;
  char **v40;
  void **v41;
  void **v42;
  void *v43;
  void **v44;
  void **v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t **v51;
  uint64_t **v52;
  uint64_t v53;
  uint64_t *v54;
  void *v56;
  void **v57;
  uint64_t v58;
  void *v59;
  void **v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  void *v64;
  void **v65;
  void *v66;
  void **v67;
  void *__p;
  char **v69;
  char v70;

  sub_19C1C2D98((uint64_t)&v64, (uint64_t)a2);
  *(_QWORD *)a1 = &unk_1E3D214F8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_19C1C2D98(a1 + 32, (uint64_t)&v64);
  if (v70)
  {
    v4 = (char **)__p;
    if (__p)
    {
      v5 = v69;
      v6 = __p;
      if (v69 != __p)
      {
        do
          v5 = sub_19C17B808(v5 - 12);
        while (v5 != v4);
        v6 = __p;
      }
      v69 = v4;
      operator delete(v6);
    }
  }
  v7 = (void **)v66;
  if (v66)
  {
    v8 = v67;
    v9 = v66;
    if (v67 != v66)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v66;
    }
    v67 = v7;
    operator delete(v9);
  }
  v10 = (void **)v64;
  if (v64)
  {
    v11 = v65;
    v12 = v64;
    if (v65 != v64)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v64;
    }
    v65 = v10;
    operator delete(v12);
  }
  *(_QWORD *)a1 = &unk_1E3D217C8;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  v13 = sub_19C178A44(a2);
  v14 = sub_19C179558((uint64_t)a2);
  *(_DWORD *)(a1 + 176) = v14 + v13;
  sub_19C1F9FA8(a1 + 184, v14 + v13);
  *(_QWORD *)(a1 + 464) = 0;
  *(_QWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 488) = 0;
  *(_QWORD *)(a1 + 480) = 0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 316) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 444) = 0u;
  *(_QWORD *)(a1 + 528) = 0;
  *(_QWORD *)(a1 + 520) = 0;
  *(_DWORD *)(a1 + 544) = 0;
  *(_QWORD *)(a1 + 536) = 0;
  *(_DWORD *)(a1 + 560) = -1;
  *(_QWORD *)(a1 + 504) = &unk_1E3D21088;
  *(_QWORD *)(a1 + 512) = a1 + 176;
  *(_QWORD *)(a1 + 576) = 0x3FB999999999999ALL;
  *(_QWORD *)(a1 + 584) = 0;
  sub_19C1C81AC(a1 + 592);
  v15 = (char ***)(a1 + 10696);
  *(_QWORD *)(a1 + 10712) = 0;
  *(_OWORD *)(a1 + 10696) = 0u;
  if ((int)sub_19C179558(a1 + 32) < 1)
    sub_19C1F9A48(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)(a1 + 108), (uint64_t *)&v62);
  else
    sub_19C1F989C(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)&v62);
  v16 = v62;
  *(_QWORD *)&v62 = 0;
  v17 = *(_QWORD *)(a1 + 584);
  *(_QWORD *)(a1 + 584) = v16;
  if (v17)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v62;
    *(_QWORD *)&v62 = 0;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v19 = 0;
    v20 = *(_DWORD *)(a1 + 108);
    *(_DWORD *)(a1 + 8184) = v20;
    v21 = 1;
    v22 = v20;
    do
    {
      v23 = 1812433253 * (v22 ^ (v22 >> 30));
      v22 = v23 + v21;
      *(_DWORD *)(a1 + 8188 + 4 * v19) = v19 + v23 + 1;
      ++v21;
      ++v19;
    }
    while (v19 != 623);
    *(_QWORD *)(a1 + 10680) = 0;
    *(_DWORD *)(a1 + 592) = v20;
    v24 = 1;
    v25 = 149;
    v26 = v20;
    do
    {
      v27 = 1812433253 * (v26 ^ (v26 >> 30));
      v26 = v27 + v24;
      *(_DWORD *)(a1 + 4 * v25) = v25 + v27 - 148;
      ++v24;
      ++v25;
    }
    while (v25 != 772);
    v28 = 0;
    *(_QWORD *)(a1 + 3088) = 0;
    *(_DWORD *)(a1 + 3120) = v20;
    v29 = 1;
    v30 = v20;
    do
    {
      v31 = 1812433253 * (v30 ^ (v30 >> 30));
      v30 = v31 + v29;
      *(_DWORD *)(a1 + 3124 + 4 * v28) = v28 + v31 + 1;
      ++v29;
      ++v28;
    }
    while (v28 != 623);
    v32 = 0;
    *(_QWORD *)(a1 + 5616) = 0;
    *(_DWORD *)(a1 + 5640) = v20;
    v33 = 1;
    do
    {
      v34 = 1812433253 * (v20 ^ (v20 >> 30));
      v20 = v34 + v33;
      *(_DWORD *)(a1 + 5644 + 4 * v32) = v32 + v34 + 1;
      ++v33;
      ++v32;
    }
    while (v32 != 623);
    *(_QWORD *)(a1 + 8136) = 0;
    sub_19C23B684();
  }
  v57 = 0;
  v58 = 0;
  v56 = 0;
  sub_19C17AF88(&v56, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 4));
  v59 = 0;
  v60 = 0;
  v61 = 0;
  sub_19C17B16C(&v59, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 56)) >> 3));
  v35 = sub_19C178A44((uint64_t *)(a1 + 32));
  v36 = 5 * (sub_19C179558(a1 + 32) + v35);
  if (*(_BYTE *)(a1 + 144))
  {
    v37 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
    if ((int)v36 <= v37)
      v36 = v37;
    else
      v36 = v36;
  }
  sub_19C17A144((uint64_t *)&v56, a1 + 592, v36, (char **)&v62);
  v38 = *v15;
  if (*v15)
  {
    v39 = *(char ***)(a1 + 10704);
    v40 = *v15;
    if (v39 != v38)
    {
      do
        v39 = sub_19C17B808(v39 - 12);
      while (v39 != v38);
      v40 = *v15;
    }
    *(_QWORD *)(a1 + 10704) = v38;
    operator delete(v40);
    *v15 = 0;
    *(_QWORD *)(a1 + 10704) = 0;
    *(_QWORD *)(a1 + 10712) = 0;
  }
  *(_OWORD *)v15 = v62;
  *(_QWORD *)(a1 + 10712) = v63;
  v63 = 0;
  v62 = 0uLL;
  v41 = (void **)v59;
  if (v59)
  {
    v42 = v60;
    v43 = v59;
    if (v60 != v59)
    {
      do
      {
        if (*((char *)v42 - 17) < 0)
          operator delete(*(v42 - 5));
        v42 -= 5;
      }
      while (v42 != v41);
      v43 = v59;
    }
    v60 = v41;
    operator delete(v43);
  }
  v44 = (void **)v56;
  if (v56)
  {
    v45 = v57;
    v46 = v56;
    if (v57 != v56)
    {
      do
      {
        if (*((char *)v45 - 25) < 0)
          operator delete(*(v45 - 6));
        v45 -= 6;
      }
      while (v45 != v44);
      v46 = v56;
    }
    v57 = v44;
    operator delete(v46);
  }
  if (*(_BYTE *)(a1 + 144))
  {
    v47 = *(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120);
    if (v47)
    {
      v48 = 0;
      v49 = 0;
      v50 = v47 / 96;
      do
      {
        while (1)
        {
          v52 = *(uint64_t ***)(a1 + 10704);
          v53 = *(_QWORD *)(a1 + 10696);
          if (v49 >= 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v52 - v53) >> 5))
            break;
          if (!*(_BYTE *)(a1 + 144))
            goto LABEL_77;
          sub_19C1C9C8C(v53 + v48, *(_QWORD *)(a1 + 120) + v48);
          ++v49;
          v48 += 96;
          if (v50 == v49)
            return a1;
        }
        if (!*(_BYTE *)(a1 + 144))
LABEL_77:
          sub_19C1D1E0C();
        v54 = (uint64_t *)(*(_QWORD *)(a1 + 120) + v48);
        if ((unint64_t)v52 < *(_QWORD *)(a1 + 10712))
          v51 = sub_19C1C1840(v52, v54) + 12;
        else
          v51 = sub_19C1D1CCC((uint64_t ***)(a1 + 10696), v54);
        *(_QWORD *)(a1 + 10704) = v51;
        ++v49;
        v48 += 96;
      }
      while (v50 != v49);
    }
  }
  return a1;
}

void sub_19C1F97B0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  _QWORD *v3;
  _QWORD *v4;
  std::random_device *v5;
  void **v6;
  void **v8;
  uint64_t v9;
  void *v10;

  sub_19C17AA64(v6);
  sub_19C1C7C7C(v5);
  v8 = (void **)(v1 + 65);
  v9 = v1[73];
  v1[73] = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  *v4 = &unk_1E3D20F48;
  v10 = *v8;
  if (*v8)
  {
    v1[66] = v10;
    operator delete(v10);
  }
  sub_19C1EC3CC(v3);
  sub_19C1C9D28(v2);
  sub_19C1C7CC8(v1);
  _Unwind_Resume(a1);
}

void sub_19C1F989C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v6 = operator new();
  v14 = 0;
  v15 = 0;
  v13 = 0;
  sub_19C17AF88(&v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1FB178(v6, a1, (uint64_t *)&v13);
  *a3 = v6;
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v17;
    v9 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v17 = v7;
    operator delete(v9);
  }
  v10 = (void **)v13;
  if (v13)
  {
    v11 = v14;
    v12 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v13;
    }
    v14 = v10;
    operator delete(v12);
  }
}

void sub_19C1F99F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1F9A10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1F9A48(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  void **v9;
  void **v10;
  void *v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  uint64_t v17;
  void *__p;
  void **v19;
  uint64_t v20;

  v8 = operator new();
  v16 = 0;
  v17 = 0;
  v15 = 0;
  sub_19C17AF88(&v15, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C1FC4E0(v8, a1, (uint64_t *)&v15, *a3);
  *a4 = v8;
  v9 = (void **)__p;
  if (__p)
  {
    v10 = v19;
    v11 = __p;
    if (v19 != __p)
    {
      do
      {
        if (*((char *)v10 - 17) < 0)
          operator delete(*(v10 - 5));
        v10 -= 5;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v19 = v9;
    operator delete(v11);
  }
  v12 = (void **)v15;
  if (v15)
  {
    v13 = v16;
    v14 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v13 - 25) < 0)
          operator delete(*(v13 - 6));
        v13 -= 6;
      }
      while (v13 != v12);
      v14 = v15;
    }
    v16 = v12;
    operator delete(v14);
  }
}

void sub_19C1F9BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1F9BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C1F9BF8(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_19C1FDB8C(a1);
  operator delete(v1);
}

uint64_t **sub_19C1F9C0C@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  signed int v8;
  char *v10[13];

  v4 = a1 + 8;
  v5 = 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3);
  v6 = a1 + 32;
  v7 = sub_19C178A44((uint64_t *)(a1 + 32));
  v8 = 5 * (sub_19C179558(v6) + v7);
  if (*(_BYTE *)(v4 + 136) && v8 <= (int)(-1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5)))
    v8 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
  if (v5 < v8)
    return sub_19C1C1840(a2, (uint64_t *)(*(_QWORD *)(a1 + 10696)+ 96 * (int)(-991146299 * ((*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3))));
  (*(void (**)(char **__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 584) + 16))(v10, *(_QWORD *)(a1 + 584), v4);
  sub_19C1C1840(a2, (uint64_t *)v10);
  return (uint64_t **)sub_19C17B808(v10);
}

void sub_19C1F9D24(uint64_t a1, __int128 **a2, double a3)
{
  double v6;
  double v7;
  double v8;
  double v9;
  unint64_t v10;
  void *v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  long double v20;
  long double v21;
  uint64_t **v22;
  uint64_t **v23;
  uint64_t **v24;
  double v25;
  double v26;
  double v27;
  void *__p;
  _BYTE *v29;
  int v30;
  uint64_t *v31[12];
  double v32;

  sub_19C1CBD8C(a2, (uint64_t)&__p);
  v6 = sub_19C1FC118(a1 + 176, (const double **)&__p);
  v8 = sqrt(v7);
  v26 = v8;
  v27 = v6;
  v9 = v6 + *(double *)(a1 + 568) * v8;
  v25 = v9;
  v10 = *(_QWORD *)(a1 + 160);
  if (v10 >= *(_QWORD *)(a1 + 168))
  {
    v15 = sub_19C1D2BAC((uint64_t *)(a1 + 152), (uint64_t)&__p, &v27, (uint64_t *)&v26, (uint64_t *)&v25);
  }
  else
  {
    *(_QWORD *)v10 = 0;
    *(_QWORD *)(v10 + 8) = 0;
    *(_QWORD *)(v10 + 16) = 0;
    v11 = __p;
    v12 = v29 - (_BYTE *)__p;
    if (v29 != __p)
    {
      if (v12 < 0)
        sub_19C07DA0C();
      v13 = (char *)operator new(v29 - (_BYTE *)__p);
      *(_QWORD *)v10 = v13;
      *(_QWORD *)(v10 + 8) = v13;
      v14 = &v13[8 * (v12 >> 3)];
      *(_QWORD *)(v10 + 16) = v14;
      memcpy(v13, v11, v12);
      *(_QWORD *)(v10 + 8) = v14;
    }
    *(_DWORD *)(v10 + 24) = v30;
    *(double *)(v10 + 32) = v6;
    *(double *)(v10 + 40) = v8;
    *(double *)(v10 + 48) = v9;
    v15 = v10 + 56;
    *(_QWORD *)(a1 + 160) = v10 + 56;
  }
  *(_QWORD *)(a1 + 160) = v15;
  v16 = *(int *)(a1 + 488);
  v17 = v16 + 1;
  *(_DWORD *)(a1 + 488) = v16 + 1;
  v18 = *(_QWORD *)(a1 + 464);
  v19 = (*(_QWORD *)(a1 + 472) - v18) >> 3;
  if (v16 + 1 <= v19)
  {
    if (v16 + 1 < v19)
      *(_QWORD *)(a1 + 472) = v18 + 8 * v16 + 8;
  }
  else
  {
    sub_19C17C9D8(a1 + 464, v16 + 1 - v19);
    v17 = *(int *)(a1 + 488);
    v18 = *(_QWORD *)(a1 + 464);
  }
  *(double *)(v18 + 8 * v17 - 8) = a3;
  sub_19C1FDD04(a1 + 176, (uint64_t)&__p);
  sub_19C1FEEB4(a1 + 496, a1 + 176);
  v20 = pow((double)*(int *)(*(_QWORD *)(a1 + 512) + 120), (double)*(int *)(*(_QWORD *)(a1 + 512) + 124) * 0.5 + 2.0);
  v21 = log(v20 * 9.8696044 / (*(double *)(a1 + 576) * 3.0));
  *(double *)(a1 + 568) = sqrt(v21 + v21);
  sub_19C1FA250(a1 + 504);
  sub_19C1C1840(v31, (uint64_t *)a2);
  v32 = a3;
  v22 = *(uint64_t ***)(a1 + 16);
  if ((unint64_t)v22 >= *(_QWORD *)(a1 + 24))
  {
    v24 = sub_19C1C907C((uint64_t ***)(a1 + 8), (uint64_t *)v31);
  }
  else
  {
    v23 = sub_19C1C1840(v22, (uint64_t *)v31);
    *((double *)v23 + 12) = v32;
    v24 = v23 + 13;
  }
  *(_QWORD *)(a1 + 16) = v24;
  sub_19C17B808((char **)v31);
  if (__p)
  {
    v29 = __p;
    operator delete(__p);
  }
}

void sub_19C1F9F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  sub_19C17B808(&a16);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_19C1F9FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  size_t v5;
  char *v6;
  int v7;
  _QWORD *v8;
  unint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  long double *v15;
  double *v16;
  uint64_t v17;
  long double v18;
  long double v20;

  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_19C27A9D0;
  *(_QWORD *)(a1 + 24) = 0;
  v4 = a2 << 32;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v5 = 8 * (int)a2;
  if ((_DWORD)a2)
  {
    if ((a2 & 0x80000000) != 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * (int)a2);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 40) = &v6[8 * (int)a2];
    bzero(v6, v5);
    *(_QWORD *)(a1 + 32) = &v6[v5];
    *(_DWORD *)(a1 + 48) = a2;
    if (v4)
      goto LABEL_4;
  }
  else
  {
    v6 = 0;
    *(_DWORD *)(a1 + 48) = 0;
    if (v4)
LABEL_4:
      memset_pattern16(v6, &unk_19C277730, v5);
  }
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v7 = a2 + 1;
  if ((_DWORD)a2 == -1)
  {
    v8 = 0;
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 72) = 0;
    *(_DWORD *)(a1 + 80) = v7;
    MEMORY[0] = 0;
    if (!a2)
      return a1;
    goto LABEL_12;
  }
  if (v7 < 0)
    sub_19C07DA0C();
  v8 = operator new(8 * v7);
  bzero(v8, 8 * v7);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = &v8[v7];
  *(_QWORD *)(a1 + 72) = &v8[v7];
  *(_DWORD *)(a1 + 80) = v7;
  *v8 = 0;
  if (a2)
  {
LABEL_12:
    v9 = 0;
    if (a2 == 1)
      goto LABEL_16;
    v9 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v10 = v8 + 1;
    v11 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v12 = (__int128 *)v6;
    do
    {
      v13 = *v12++;
      v20 = log(*((long double *)&v13 + 1));
      *(double *)&v14 = log(*(long double *)&v13);
      *((long double *)&v14 + 1) = v20;
      *v10++ = v14;
      v11 -= 2;
    }
    while (v11);
    if (v9 != a2)
    {
LABEL_16:
      v15 = (long double *)&v8[v9 + 1];
      v16 = (double *)&v6[8 * v9];
      v17 = a2 - v9;
      do
      {
        v18 = *v16++;
        *v15++ = log(v18);
        --v17;
      }
      while (v17);
    }
  }
  return a1;
}

void sub_19C1FA184(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1FA1A0(void *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v4;
    operator delete(v4);
  }
  sub_19C07AF7C(a1);
}

double sub_19C1FA1BC(uint64_t a1, double a2, double a3)
{
  return a2 + *(double *)(a1 + 64) * a3;
}

double sub_19C1FA1C8()
{
  return -1.79769313e308;
}

void sub_19C1FA1D4(uint64_t a1)
{
  long double v2;
  long double v3;

  v2 = pow((double)*(int *)(*(_QWORD *)(a1 + 8) + 120), (double)*(int *)(*(_QWORD *)(a1 + 8) + 124) * 0.5 + 2.0);
  v3 = log(v2 * 9.8696044 / (*(double *)(a1 + 72) * 3.0));
  *(double *)(a1 + 64) = sqrt(v3 + v3);
  sub_19C1FA250(a1);
}

double sub_19C1FA248()
{
  return 0.0;
}

void sub_19C1FA250(uint64_t a1)
{
  _QWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double *v10;
  double *v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  char *v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  __int128 *v19;
  _OWORD *v20;
  unint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const double *v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  double *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  double *v44;
  uint64_t v45;
  unint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  double *v52;
  uint64_t v53;
  __int128 v54;
  double *v55;
  double *v56;
  double v57;
  double *v58;
  double *v59;
  double v60;
  BOOL v61;
  char *v62;
  signed int v63;
  _OWORD *v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  _OWORD *v84;
  unint64_t v85;
  __int128 v86;
  unint64_t v87;
  uint64_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v93;
  uint64_t v94;
  void *__p;
  int v96[2];
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  double *v104;
  uint64_t v105;
  double *v106;
  double *v107;
  double *v108;
  uint64_t v109;
  unsigned int v110;

  v104 = 0;
  v105 = 0;
  v106 = 0;
  v1 = *(_QWORD **)(a1 + 8);
  v101 = 0;
  v102 = 0;
  v100 = 0;
  v3 = (_BYTE *)v1[12];
  v2 = (_BYTE *)v1[13];
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(v2 - v3);
    v6 = &v5[8 * (v4 >> 3)];
    v100 = v5;
    v102 = v6;
    memcpy(v5, v3, v4);
    v101 = v6;
  }
  v7 = v1[15];
  v103 = v7;
  if (!(_DWORD)v7)
  {
    v55 = 0;
    v58 = 0;
    *(_DWORD *)(a1 + 56) = 0;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v90 = (int)v7;
  v91 = v7;
  v13 = 8 * (v7 >> 32);
  v88 = v7 >> 32;
  v89 = v13;
  v87 = (v7 >> 32) & 0xFFFFFFFFFFFFFFFCLL;
  v93 = HIDWORD(v7);
  v94 = 16;
  do
  {
    v14 = *(_QWORD *)(a1 + 8);
    v15 = v100;
    __p = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    if (!(_DWORD)v93)
    {
      v16 = 0;
      v108 = 0;
      v109 = 0;
      v107 = 0;
      v110 = 0;
      goto LABEL_27;
    }
    if (v7 < 0)
      sub_19C07DA0C();
    v16 = operator new(v13);
    bzero(v16, v13);
    if ((unint64_t)v7 >> 33 < 3)
    {
      v17 = 0;
      v18 = v88;
      goto LABEL_17;
    }
    v18 = v88;
    if ((unint64_t)((char *)v16 - &v100[v13 * v12]) < 0x20)
    {
      v17 = 0;
LABEL_17:
      v23 = v18 - v17;
      v24 = 8 * v17;
      v25 = (_QWORD *)v16 + v17;
      v26 = (uint64_t *)&v15[v8 + v24];
      do
      {
        v27 = *v26++;
        *v25++ = v27;
        --v23;
      }
      while (v23);
      goto LABEL_19;
    }
    v19 = (__int128 *)&v100[v94];
    v20 = v16 + 1;
    v21 = v87;
    do
    {
      v22 = *v19;
      *(v20 - 1) = *(v19 - 1);
      *v20 = v22;
      v19 += 2;
      v20 += 2;
      v21 -= 4;
    }
    while (v21);
    v17 = v87;
    if (v88 != v87)
      goto LABEL_17;
LABEL_19:
    v107 = 0;
    v108 = 0;
    v109 = 0;
    v110 = v93;
    sub_19C17C9D8((uint64_t)&v107, v18);
    v28 = v110;
    if ((int)v110 >= 1)
    {
      v29 = 0;
      v30 = v107;
      if (v110 < 4)
        goto LABEL_25;
      if ((unint64_t)((char *)v107 - (char *)v16) < 0x20)
        goto LABEL_25;
      v31 = 0;
      v29 = v110 & 0xFFFFFFFC;
      v32 = (8 * v110) & 0x7FFFFFFE0;
      do
      {
        v33 = v16[v31 / 0x10 + 1];
        v34 = (double *)&v30[v31 / 8];
        *(_OWORD *)v34 = v16[v31 / 0x10];
        *((_OWORD *)v34 + 1) = v33;
        v31 += 32;
      }
      while (v32 != v31);
      if (v29 != v28)
      {
LABEL_25:
        v35 = v28 - v29;
        v36 = v29 << 32;
        do
        {
          *(const double *)((char *)v30 + (v36 >> 29)) = *(const double *)((char *)v16 + (v36 >> 29));
          v36 += 0x100000000;
          --v35;
        }
        while (v35);
      }
    }
LABEL_27:
    v37 = sub_19C1FAA20(v14, (const double **)&v107);
    v38 = v37;
    if (v11 < v10)
    {
      *v11++ = v37;
      v7 = v91;
      v13 = v89;
      v105 = (uint64_t)v11;
      v39 = v107;
      if (!v107)
        goto LABEL_30;
LABEL_29:
      v108 = v39;
      operator delete(v39);
      goto LABEL_30;
    }
    v40 = v11 - v9;
    v41 = v40 + 1;
    if ((unint64_t)(v40 + 1) >> 61)
      sub_19C07DA0C();
    if (((char *)v10 - (char *)v9) >> 2 > v41)
      v41 = ((char *)v10 - (char *)v9) >> 2;
    if ((unint64_t)((char *)v10 - (char *)v9) >= 0x7FFFFFFFFFFFFFF8)
      v42 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v42 = v41;
    if (v42)
    {
      if (v42 >> 61)
        sub_19C07C7FC();
      v43 = operator new(8 * v42);
      v44 = (double *)&v43[8 * v40];
      *v44 = v38;
      v45 = (uint64_t)(v44 + 1);
      if (v11 != v9)
      {
LABEL_41:
        v46 = (char *)(v11 - 1) - (char *)v9;
        if (v46 < 0x168
          || &v43[(char *)v11 - (char *)v9 - 8 - (v46 & 0xFFFFFFFFFFFFFFF8)] > &v43[(char *)v11 - (char *)v9 - 8]
          || (double *)((char *)v11 - (v46 & 0xFFFFFFFFFFFFFFF8) - 8) > v11 - 1
          || (unint64_t)((char *)v9 - v43) < 0x20)
        {
          v47 = v11;
          v7 = v91;
          v13 = v89;
        }
        else
        {
          v49 = (v46 >> 3) + 1;
          v50 = 8 * (v49 & 0x3FFFFFFFFFFFFFFCLL);
          v47 = &v11[v50 / 0xFFFFFFFFFFFFFFF8];
          v44 = (double *)((char *)v44 - v50);
          v51 = &v43[8 * v40 - 16];
          v52 = v11 - 2;
          v53 = v49 & 0x3FFFFFFFFFFFFFFCLL;
          v7 = v91;
          do
          {
            v54 = *(_OWORD *)v52;
            *(v51 - 1) = *((_OWORD *)v52 - 1);
            *v51 = v54;
            v51 -= 2;
            v52 -= 4;
            v53 -= 4;
          }
          while (v53);
          v13 = v89;
          if (v49 == (v49 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_44:
            v10 = (double *)&v43[8 * v42];
            v104 = v44;
            v105 = v45;
            v106 = v10;
            if (!v9)
              goto LABEL_46;
LABEL_45:
            operator delete(v9);
            goto LABEL_46;
          }
        }
        do
        {
          v48 = *((_QWORD *)v47-- - 1);
          *((_QWORD *)v44-- - 1) = v48;
        }
        while (v47 != v9);
        goto LABEL_44;
      }
    }
    else
    {
      v43 = 0;
      v44 = (double *)(8 * v40);
      *(double *)(8 * v40) = v37;
      v45 = 8 * v40 + 8;
      if (v11 != v9)
        goto LABEL_41;
    }
    v7 = v91;
    v13 = v89;
    v10 = (double *)&v43[8 * v42];
    v104 = v44;
    v105 = v45;
    v106 = v10;
    if (v9)
      goto LABEL_45;
LABEL_46:
    v9 = v44;
    v11 = (double *)v45;
    v105 = v45;
    v39 = v107;
    if (v107)
      goto LABEL_29;
LABEL_30:
    if (v16)
      operator delete(v16);
    ++v12;
    v94 += v13;
    v8 += v13;
  }
  while (v12 != v90);
  v55 = v104;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 120);
  if (v55 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v56 = v55 + 1;
  if (v55 + 1 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v57 = *v55;
  v58 = v55;
  v59 = v55 + 1;
  do
  {
    v60 = *v59++;
    v61 = v57 < v60;
    v57 = fmax(v57, v60);
    if (v61)
      v58 = v56;
    v56 = v59;
  }
  while (v59 != v11);
  v62 = v100;
  v63 = HIDWORD(v103);
  v107 = 0;
  v108 = 0;
  v109 = 0;
  if (!HIDWORD(v103))
  {
LABEL_81:
    v74 = 0;
    LODWORD(v73) = 0;
    v64 = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    __p = 0;
    v98 = 0;
    goto LABEL_82;
  }
LABEL_65:
  if (v63 < 0)
    sub_19C07DA0C();
  v64 = operator new(8 * v63);
  v65 = (v58 - v55) * v63;
  bzero(v64, 8 * v63);
  if (v63 < 0xA || (v66 = &v62[8 * v65], (unint64_t)((char *)v64 - v66) < 0x20))
  {
    v67 = 0;
    goto LABEL_69;
  }
  v67 = v63 & 0xFFFFFFFFFFFFFFFCLL;
  v83 = (__int128 *)(v66 + 16);
  v84 = v64 + 1;
  v85 = v67;
  do
  {
    v86 = *v83;
    *(v84 - 1) = *(v83 - 1);
    *v84 = v86;
    v83 += 2;
    v84 += 2;
    v85 -= 4;
  }
  while (v85);
  if (v67 != v63)
  {
LABEL_69:
    v68 = v63 - v67;
    v69 = 8 * v67;
    v70 = (_QWORD *)v64 + v67;
    v71 = &v62[8 * v65 + v69];
    do
    {
      v72 = *(_QWORD *)v71;
      v71 += 8;
      *v70++ = v72;
      --v68;
    }
    while (v68);
  }
  __p = 0;
  *(_QWORD *)v96 = 0;
  v97 = 0;
  v98 = v63;
  sub_19C17C9D8((uint64_t)&__p, v63);
  v73 = v98;
  v74 = (char *)__p;
  if ((int)v98 >= 1)
  {
    v75 = 0;
    if (v98 < 4)
      goto LABEL_77;
    if ((unint64_t)((_BYTE *)__p - (_BYTE *)v64) < 0x20)
      goto LABEL_77;
    v76 = 0;
    v75 = v98 & 0xFFFFFFFC;
    v77 = (8 * v98) & 0x7FFFFFFE0;
    do
    {
      v78 = v64[v76 / 0x10 + 1];
      v79 = &v74[v76];
      *(_OWORD *)v79 = v64[v76 / 0x10];
      *((_OWORD *)v79 + 1) = v78;
      v76 += 32;
    }
    while (v77 != v76);
    if (v75 != v73)
    {
LABEL_77:
      v80 = v73 - v75;
      v81 = v75 << 32;
      do
      {
        *(_QWORD *)&v74[v81 >> 29] = *(_QWORD *)((char *)v64 + (v81 >> 29));
        v81 += 0x100000000;
        --v80;
      }
      while (v80);
    }
  }
LABEL_82:
  v82 = *(_QWORD *)v58;
  v99 = *(_QWORD *)v58;
  if ((void **)(a1 + 16) != &__p)
  {
    sub_19C11EAD0((_QWORD *)(a1 + 16), v74, *(char **)v96, (uint64_t)(*(_QWORD *)v96 - (_QWORD)v74) >> 3);
    LODWORD(v73) = v98;
    v82 = v99;
    v74 = (char *)__p;
  }
  *(_DWORD *)(a1 + 40) = v73;
  *(_QWORD *)(a1 + 48) = v82;
  if (v74)
  {
    *(_QWORD *)v96 = v74;
    operator delete(v74);
  }
  if (v64)
    operator delete(v64);
  if (v62)
    operator delete(v62);
  if (v55)
  {
    v105 = (uint64_t)v55;
    operator delete(v55);
  }
}

void sub_19C1FA964(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  void *v28;
  void *v29;

  if (__p)
    operator delete(__p);
  if (v28)
    operator delete(v28);
  if (v29)
    operator delete(v29);
  if (a27)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

double sub_19C1FAA20(uint64_t a1, const double **a2)
{
  double v3;
  double v4;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C1FAB00(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v3 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v4 = __C;
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v4 + v3;
  }
  else
  {
    __A[0] = 0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)__A, *(int *)(a1 + 312));
    return *(double *)__A;
  }
}

void sub_19C1FAAE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1FAB00(uint64_t a1@<X0>, const double **a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  signed int v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  double v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  char *v25;
  void *__p;
  char *v28;
  char *v29;
  signed int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = *(_DWORD *)(a1 + 120);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  *(_DWORD *)(a3 + 24) = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  if (v3)
  {
    if (v3 < 0)
      sub_19C07DA0C();
    v5 = v3;
    v6 = (char *)operator new(8 * v3);
    bzero(v6, 8 * v3);
    v7 = 0;
    v8 = 0;
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = &v6[8 * v3];
    *(_QWORD *)(a3 + 16) = &v6[8 * v3];
    *(_DWORD *)(a3 + 24) = v3;
    v25 = v6;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 96);
      v10 = *(_DWORD *)(a1 + 124);
      v31 = 0;
      v32 = 0;
      v33 = 0;
      if (!v10)
      {
        v11 = 0;
        v28 = 0;
        v29 = 0;
        __p = 0;
        v30 = 0;
        goto LABEL_14;
      }
      if (v10 < 0)
        sub_19C07DA0C();
      v11 = operator new(8 * v10);
      bzero(v11, 8 * v10);
      if (v10 >= 8 && (unint64_t)v11 - v9 - 8 * v8 * v10 >= 0x20)
      {
        v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
        v20 = (__int128 *)(v9 + v7 * v10 + 16);
        v21 = v11 + 1;
        v22 = v12;
        do
        {
          v23 = *v20;
          *(v21 - 1) = *(v20 - 1);
          *v21 = v23;
          v20 += 2;
          v21 += 2;
          v22 -= 4;
        }
        while (v22);
        if (v12 == v10)
          goto LABEL_12;
      }
      else
      {
        v12 = 0;
      }
      v13 = v10 - v12;
      v14 = 8 * v12;
      v15 = (_QWORD *)v11 + v12;
      v16 = (uint64_t *)(v9 + v14 + v7 * v10);
      do
      {
        v17 = *v16++;
        *v15++ = v17;
        --v13;
      }
      while (v13);
LABEL_12:
      __p = 0;
      v28 = 0;
      v30 = 0;
      v29 = 0;
      __p = operator new(8 * v10);
      v28 = (char *)__p + 8 * v10;
      v29 = v28;
      v30 = v10;
      memcpy(__p, v11, 8 * v10);
      v6 = v25;
LABEL_14:
      v18 = *(double *)(a1 + 24);
      v19 = sub_19C1FADA8(a1 + 8, (uint64_t)&__p, a2);
      *(long double *)&v6[8 * v8] = exp(v19 * -0.5) * v18;
      if (__p)
      {
        v28 = (char *)__p;
        operator delete(__p);
      }
      if (v11)
        operator delete(v11);
      ++v8;
      v7 += 8;
      if (v8 == v5)
        return;
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
}

void sub_19C1FAD34(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1FAD5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14)
{
  void *v14;

  if (__p)
  {
    operator delete(__p);
    if (!v14)
    {
LABEL_3:
      *(_QWORD *)(a10 + 8) = a11;
      operator delete(a11);
      _Unwind_Resume(a1);
    }
  }
  else if (!v14)
  {
    goto LABEL_3;
  }
  operator delete(v14);
  *(_QWORD *)(a10 + 8) = a11;
  operator delete(a11);
  _Unwind_Resume(a1);
}

double sub_19C1FADA8(uint64_t a1, uint64_t a2, const double **a3)
{
  uint64_t v6;
  double *v7;
  double *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  const void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  signed int v16;
  uint64_t v17;
  char *v18;
  double *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  double *v24;
  double v25;
  void *__p[4];
  double *__A[3];
  vDSP_Length v29;
  char *v30;
  char *v31;
  char *v32;
  signed int v33;
  double __C;
  char *v35;
  char *v36;
  signed int v37;
  double *__B;
  double *v39;
  double *v40;
  signed int v41;
  void *v42[3];
  int v43;

  sub_19C1E98BC(*(_DWORD *)(a1 + 48), *(_DWORD *)(a1 + 48), (uint64_t)v42);
  v6 = *(int *)(a1 + 48);
  if ((_DWORD)v6)
  {
    v7 = *(double **)(a1 + 24);
    v8 = (double *)v42[0];
    v9 = 8 * v43 + 8;
    do
    {
      v10 = *v7++;
      *v8 = 1.0 / (v10 * v10);
      v8 = (double *)((char *)v8 + v9);
      --v6;
    }
    while (v6);
  }
  v31 = 0;
  v32 = 0;
  v30 = 0;
  v12 = *(const void **)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v13 = v11 - *(_QWORD *)a2;
  if (v11 == *(_QWORD *)a2)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - *(_QWORD *)a2);
    v15 = &v14[8 * (v13 >> 3)];
    v30 = v14;
    v32 = v15;
    memcpy(v14, v12, v13);
    v31 = v15;
  }
  v16 = *(_DWORD *)(a2 + 24);
  v33 = v16;
  vDSP_vsubD(*a3, 1, (const double *)v14, 1, (double *)v14, 1, v16);
  __C = 0.0;
  v35 = 0;
  v36 = 0;
  v17 = v15 - v14;
  if (v15 != v14)
  {
    if (v17 < 0)
      sub_19C07DA0C();
    v18 = (char *)operator new(v15 - v14);
    *(_QWORD *)&__C = v18;
    v36 = &v18[8 * (v17 >> 3)];
    memcpy(v18, v14, v15 - v14);
    v35 = v36;
    v37 = v16;
    v39 = 0;
    v40 = 0;
    __B = 0;
    if (!v16)
    {
      v41 = 0;
      v35 = v18;
      operator delete(v18);
      if (!v14)
        goto LABEL_23;
LABEL_22:
      v31 = v14;
      operator delete(v14);
      goto LABEL_23;
    }
LABEL_14:
    if (v16 < 0)
      sub_19C07DA0C();
    v19 = (double *)operator new(8 * v16);
    __B = v19;
    v40 = &v19[v16];
    bzero(v19, 8 * v16);
    v39 = v40;
    v41 = v16;
    if (v16 >= 4)
    {
      v21 = 0;
      v20 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = v20;
      do
      {
        v23 = *(_OWORD *)&v18[v21 * 8 + 16];
        v24 = &v19[v21];
        *(_OWORD *)v24 = *(_OWORD *)&v18[v21 * 8];
        *((_OWORD *)v24 + 1) = v23;
        v21 += 4;
        v22 -= 4;
      }
      while (v22);
      if (v20 == v16)
      {
LABEL_21:
        v35 = v18;
        operator delete(v18);
        if (!v14)
          goto LABEL_23;
        goto LABEL_22;
      }
    }
    else
    {
      v20 = 0;
    }
    do
    {
      v19[v20] = *(double *)&v18[8 * v20];
      ++v20;
    }
    while (v16 != v20);
    goto LABEL_21;
  }
  v18 = 0;
  v37 = v16;
  v39 = 0;
  v40 = 0;
  __B = 0;
  if (v16)
    goto LABEL_14;
  v41 = 0;
  if (v14)
    goto LABEL_22;
LABEL_23:
  sub_19C1CE998((uint64_t)&__B, (uint64_t)__p);
  sub_19C1E97B8((uint64_t)__p, (uint64_t)v42, (uint64_t)__A);
  vDSP_mmulD(__A[0], 1, __B, 1, &__C, 1, 1uLL, 1uLL, (int)v29);
  v25 = __C;
  if (__A[0])
  {
    __A[1] = __A[0];
    operator delete(__A[0]);
  }
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (__B)
  {
    v39 = __B;
    operator delete(__B);
  }
  if (v42[0])
  {
    v42[1] = v42[0];
    operator delete(v42[0]);
  }
  return v25;
}

void sub_19C1FB0A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  uint64_t v28;
  void *v30;
  void *v31;
  void *v32;

  if (__p)
  {
    operator delete(__p);
    v30 = a11;
    if (!a11)
    {
LABEL_3:
      v31 = a27;
      if (!a27)
      {
LABEL_8:
        v32 = *(void **)(v28 - 112);
        if (v32)
        {
          *(_QWORD *)(v28 - 104) = v32;
          operator delete(v32);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_7:
      operator delete(v31);
      goto LABEL_8;
    }
  }
  else
  {
    v30 = a11;
    if (!a11)
      goto LABEL_3;
  }
  operator delete(v30);
  v31 = a27;
  if (!a27)
    goto LABEL_8;
  goto LABEL_7;
}

uint64_t sub_19C1FB178(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void **v6;
  void **v7;
  void *v8;
  void **v9;
  void **v10;
  void *v11;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_19C17AF88(&v13, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D215E8;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v13, (uint64_t)v14, 0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (_BYTE *)v13) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v17, 0xCCCCCCCCCCCCCCCDLL * (((char *)v17 - (_BYTE *)__p) >> 3));
  v6 = (void **)__p;
  if (__p)
  {
    v7 = v17;
    v8 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v7 - 17) < 0)
          operator delete(*(v7 - 5));
        v7 -= 5;
      }
      while (v7 != v6);
      v8 = __p;
    }
    v17 = v6;
    operator delete(v8);
  }
  v9 = (void **)v13;
  if (v13)
  {
    v10 = v14;
    v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 25) < 0)
          operator delete(*(v10 - 6));
        v10 -= 6;
      }
      while (v10 != v9);
      v11 = v13;
    }
    v14 = v9;
    operator delete(v11);
  }
  *(_QWORD *)a1 = &unk_1E3D21438;
  *(_DWORD *)(a1 + 64) = 5;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_19C1FB318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;

  v11 = v10;
  if (*v11)
  {
    sub_19C2563D4(v9, *v11);
    sub_19C17A75C(&a9);
    _Unwind_Resume(a1);
  }
  sub_19C17A75C(&a9);
  _Unwind_Resume(a1);
}

void sub_19C1FB358(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    sub_19C25623C((uint64_t)&a9, a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_19C1FB374(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;

  *a1 = &unk_1E3D21438;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  return sub_19C1FB99C(a1);
}

void sub_19C1FB3DC(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;
  _QWORD *v5;

  *a1 = &unk_1E3D21438;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  v5 = sub_19C1FB99C(a1);
  operator delete(v5);
}

void sub_19C1FB448(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  double *v15;
  double *v16;
  double *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v29;
  double v30;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD **v33;
  BOOL v34;
  uint64_t *v35;
  char **v36;
  char **v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40[4];
  uint64_t *v41;
  double *__A;
  double *v43;
  void *__p;
  char *v45;
  char *v46[3];
  char *v47[3];
  uint64_t *v48[12];
  char v49[8];
  _QWORD **v50;
  _QWORD *v51[2];
  uint64_t *v52;
  char **v53;
  double __C[2];

  sub_19C1FBA64(a1);
  v6 = *(_QWORD *)(a1 + 72);
  if (v6 == *(_QWORD *)(a1 + 80))
  {
    v39 = a3;
    sub_19C1CBA2C(a2, &v52);
    sub_19C1FBCF8(a2, (uint64_t)v49);
    v7 = v50;
    if (v50 != v51)
    {
      do
      {
        v8 = *(_QWORD *)((char *)v7 + 28);
        sub_19C1C1840(v48, &v52[12 * (int)v8]);
        if (SHIDWORD(v8) >= 1)
        {
          v9 = 0;
          v10 = HIDWORD(v8) & ~(v8 >> 63);
          do
          {
            sub_19C1FBE34(a1, (uint64_t *)v48, (uint64_t **)&__A);
            sub_19C17A814((char **)v48, (uint64_t)&__A);
            sub_19C098FBC((uint64_t)v47, v47[1]);
            sub_19C098FBC((uint64_t)v46, v46[1]);
            v11 = (char *)__p;
            if (__p)
            {
              v12 = v45;
              v13 = __p;
              if (v45 != __p)
              {
                do
                {
                  v14 = (void *)*((_QWORD *)v12 - 4);
                  if (v14)
                  {
                    *((_QWORD *)v12 - 3) = v14;
                    operator delete(v14);
                  }
                  if (*(v12 - 33) < 0)
                    operator delete(*((void **)v12 - 7));
                  v12 -= 56;
                }
                while (v12 != v11);
                v13 = __p;
              }
              v45 = v11;
              operator delete(v13);
            }
            v15 = __A;
            if (*(double *)&__A != 0.0)
            {
              v16 = v43;
              v17 = __A;
              if (v43 != __A)
              {
                do
                {
                  v18 = (void *)*((_QWORD *)v16 - 4);
                  if (v18)
                  {
                    *((_QWORD *)v16 - 3) = v18;
                    operator delete(v18);
                  }
                  if (*((char *)v16 - 33) < 0)
                    operator delete(*((void **)v16 - 7));
                  v16 -= 7;
                }
                while (v16 != v15);
                v17 = __A;
              }
              v43 = v15;
              operator delete(v17);
            }
            v41 = 0;
            v19 = *(_QWORD *)(a1 + 8);
            sub_19C1CBD8C((__int128 **)v48, (uint64_t)v40);
            v20 = *(_QWORD *)(v19 + 8);
            if (*(_DWORD *)(v20 + 120))
            {
              sub_19C1FAB00(*(_QWORD *)(v19 + 8), (const double **)v40, (uint64_t)&__A);
              __C[0] = 0.0;
              vDSP_dotprD(__A, 1, *(const double **)(v20 + 256), 1, __C, (int)__p);
              v21 = __C[0];
              __C[0] = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, __C, *(int *)(v20 + 312));
              v22 = __C[0];
              sub_19C1FC2EC(v20, (const double **)v40, (uint64_t)&__A);
              v24 = v23;
              v25 = *(double *)(v20 + 16);
              if (*(double *)&__A != 0.0)
              {
                v43 = __A;
                operator delete(__A);
              }
              v26 = v22 + v21;
              v27 = v25 + v24;
            }
            else
            {
              *(double *)&__A = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, (double *)&__A, *(int *)(v20 + 312));
              v26 = *(double *)&__A;
              v27 = sub_19C1FC220(v20, (const double **)v40);
            }
            v28 = sqrt(v27);
            if (v28 < 0.00000001 || (v29 = *(_DWORD *)(*(_QWORD *)(v19 + 8) + 120), v29 <= 0))
            {
              v30 = (*(double (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            }
            else
            {
              if (*(_DWORD *)(v19 + 56) != v29)
                (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
              (**(void (***)(uint64_t, double, double))v19)(v19, v26, v28);
            }
            v31 = *(uint64_t **)&v30;
            if (v40[0])
            {
              v40[1] = v40[0];
              operator delete(v40[0]);
            }
            v41 = v31;
            sub_19C1CC134((int *)(a1 + 64), (uint64_t *)v48, &v41);
            ++v9;
          }
          while (v10 != v9);
        }
        sub_19C17B808((char **)v48);
        v32 = (_QWORD *)v7[1];
        if (v32)
        {
          do
          {
            v33 = (_QWORD **)v32;
            v32 = (_QWORD *)*v32;
          }
          while (v32);
        }
        else
        {
          do
          {
            v33 = (_QWORD **)v7[2];
            v34 = *v33 == v7;
            v7 = v33;
          }
          while (!v34);
        }
        v7 = v33;
      }
      while (v33 != v51);
    }
    v35 = *(uint64_t **)(a1 + 72);
    sub_19C1C1840((uint64_t **)v39, v35);
    *(_QWORD *)(v39 + 96) = v35[12];
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    sub_19C07C924((uint64_t)&v50, v51[0]);
    v36 = (char **)v52;
    if (v52)
    {
      v37 = v53;
      v38 = v52;
      if (v53 != (char **)v52)
      {
        do
          v37 = sub_19C17B808(v37 - 12);
        while (v37 != v36);
        v38 = v52;
      }
      v53 = v36;
      operator delete(v38);
    }
  }
  else
  {
    sub_19C1C1840((uint64_t **)a3, *(uint64_t **)(a1 + 72));
    *(_QWORD *)(a3 + 96) = *(_QWORD *)(v6 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
  }
}

void sub_19C1FB8B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  char **v28;
  uint64_t v29;

  sub_19C17B808(v28);
  sub_19C07C924(a10, *(_QWORD **)(v29 - 184));
  sub_19C17AA64((void **)(v29 - 168));
  _Unwind_Resume(a1);
}

void sub_19C1FB950(char *a1@<X8>)
{
  a1[23] = 17;
  strcpy(a1, "genetic_optimizer");
}

void sub_19C1FB974(char *a1@<X8>)
{
  a1[23] = 21;
  strcpy(a1, "acquisition_optimizer");
}

_QWORD *sub_19C1FB99C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *a1 = &unk_1E3D215E8;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 17) < 0)
          operator delete(*(void **)(v3 - 40));
        v3 -= 40;
      }
      while (v3 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  v5 = a1[2];
  if (v5)
  {
    v6 = a1[3];
    v7 = (void *)a1[2];
    if (v6 != v5)
    {
      do
      {
        if (*(char *)(v6 - 25) < 0)
          operator delete(*(void **)(v6 - 48));
        v6 -= 48;
      }
      while (v6 != v5);
      v7 = (void *)a1[2];
    }
    a1[3] = v5;
    operator delete(v7);
  }
  return a1;
}

void sub_19C1FBA64(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  uint64_t *v11;
  uint64_t *v12;
  char **v13;
  uint64_t *v14;
  void *__p[4];
  uint64_t *v16;
  uint64_t *v17[13];
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;

  v18 = 5;
  v20 = 0;
  v21 = 0;
  v19 = 0;
  v3 = *(_QWORD *)(a1 + 72);
  v2 = (uint64_t *)(a1 + 72);
  if (v3 == *(_QWORD *)(a1 + 80))
  {
    v12 = 0;
    *(_DWORD *)(a1 + 64) = 5;
    if ((int *)(a1 + 64) == &v18)
      goto LABEL_18;
    goto LABEL_17;
  }
  do
  {
    sub_19C1C1840(v17, (uint64_t *)v3);
    v17[12] = *(uint64_t **)(v3 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)__p, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    v16 = 0;
    v4 = *(_QWORD *)(a1 + 8);
    sub_19C1CBD8C((__int128 **)v17, (uint64_t)__p);
    v5.n128_f64[0] = sub_19C1FC118(*(_QWORD *)(v4 + 8), (const double **)__p);
    v7 = sqrt(v6);
    if (v7 < 0.00000001 || (v8 = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 120), v8 <= 0))
    {
      v10 = (*(double (**)(uint64_t, __n128))(*(_QWORD *)v4 + 8))(v4, v5);
    }
    else
    {
      v9 = v5.n128_f64[0];
      if (*(_DWORD *)(v4 + 56) != v8)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      (**(void (***)(uint64_t, double, double))v4)(v4, v9, v7);
    }
    *(double *)&v11 = v10;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    v16 = v11;
    if (*(double *)&v11 > (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8)))
      sub_19C1CC134(&v18, (uint64_t *)v17, &v16);
    sub_19C17B808((char **)v17);
    v3 = *(_QWORD *)(a1 + 72);
  }
  while (v3 != *(_QWORD *)(a1 + 80));
  v12 = v19;
  *(_DWORD *)(a1 + 64) = v18;
  if ((int *)(a1 + 64) != &v18)
  {
LABEL_17:
    sub_19C1CC414(v2, v12, v20, 0x4EC4EC4EC4EC4EC5 * (v20 - v12));
    v12 = v19;
  }
LABEL_18:
  if (v12)
  {
    v13 = (char **)v20;
    v14 = v12;
    if (v20 != v12)
    {
      do
        v13 = sub_19C17B808(v13 - 13);
      while (v13 != (char **)v12);
      v14 = v19;
    }
    v20 = v12;
    operator delete(v14);
  }
}

void sub_19C1FBC94(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_19C1CB740(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1FBCA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  sub_19C17B808((char **)va);
  sub_19C1CB740(v7 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1FBCCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v15;

  if (__p)
    operator delete(__p);
  sub_19C17B808(&a15);
  sub_19C1CB740(v15 - 120);
  _Unwind_Resume(a1);
}

void sub_19C1FBCF8(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  int v5;
  void *__p[3];
  _QWORD v7[313];
  std::random_device v8;
  double *v9[3];

  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = a2 + 16;
  *(_QWORD *)(a2 + 24) = 0;
  sub_19C1CCB54(a1, __p);
  sub_19C17A140(v7, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v3 = 50;
  do
  {
    v5 = sub_19C1CCF6C((uint64_t)v9, (uint64_t)v7, v9);
    v4 = sub_19C1CCC40((int *)a2, &v5);
    ++*(_DWORD *)v4;
    --v3;
  }
  while (v3);
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
  std::random_device::~random_device(&v8);
}

void sub_19C1FBDD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  _QWORD **v15;

  if (__p)
  {
    operator delete(__p);
    sub_19C07C924(v14, *v15);
    _Unwind_Resume(a1);
  }
  sub_19C07C924(v14, *v15);
  _Unwind_Resume(a1);
}

void sub_19C1FBE34(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  void *v6[4];
  void *__p[4];
  void *v8[4];
  _OWORD v9[2];

  sub_19C1C1840(a3, a2);
  sub_19C1CD184((__int128 **)a2, (uint64_t)v8);
  sub_19C1FBFC0(a1, (uint64_t *)v8, v9);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v6);
  sub_19C1FC06C(a1, (uint64_t *)v6, __p);
  sub_19C1CD7E0((uint64_t *)a3, (uint64_t *)v9);
  sub_19C1CD99C((uint64_t)a3, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v6[0])
  {
    v6[1] = v6[0];
    operator delete(v6[0]);
  }
  if (*(_QWORD *)&v9[0])
  {
    *((_QWORD *)&v9[0] + 1) = *(_QWORD *)&v9[0];
    operator delete(*(void **)&v9[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
}

void sub_19C1FBF00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  char **v18;
  uint64_t v19;
  void *v21;
  void *v22;

  if (__p)
  {
    operator delete(__p);
    v21 = *(void **)(v19 - 64);
    if (!v21)
    {
LABEL_3:
      v22 = a17;
      if (!a17)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v21 = *(void **)(v19 - 64);
    if (!v21)
      goto LABEL_3;
  }
  *(_QWORD *)(v19 - 56) = v21;
  operator delete(v21);
  v22 = a17;
  if (!a17)
  {
LABEL_4:
    sub_19C17B808(v18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(v22);
  sub_19C17B808(v18);
  _Unwind_Resume(a1);
}

double sub_19C1FBFC0@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = (uint64_t *)(a1 + 16);
  if (sub_19C178A44((uint64_t *)(a1 + 16)))
  {
    sub_19C178B08(v5, (uint64_t *)v7);
    sub_19C239578(a2, (uint64_t)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1FC058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C1FC06C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = a1 + 16;
  if (sub_19C179558(a1 + 16))
  {
    sub_19C17961C(v5, (uint64_t *)v7);
    sub_19C23A200(a2, (uint64_t *)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C1FC104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C1FC118(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C1FAB00(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v4 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v5 = __C;
    sub_19C1FC2EC(a1, a2, (uint64_t)__A);
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v5 + v4;
  }
  else
  {
    v6 = sub_19C1FAA20(a1, a2);
    sub_19C1FC220(a1, a2);
  }
  return v6;
}

void sub_19C1FC200(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_19C1FC220(uint64_t a1, const double **a2)
{
  double v4;
  double v5;
  double v6;
  double v8;
  double v9;
  void *__p[4];

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C1FAB00(a1, a2, (uint64_t)__p);
    sub_19C1FC2EC(a1, a2, (uint64_t)__p);
    v5 = v4;
    v6 = *(double *)(a1 + 16);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    return v6 + v5;
  }
  else
  {
    v8 = *(double *)(a1 + 24);
    v9 = sub_19C1FADA8(a1 + 8, (uint64_t)a2, a2);
    return *(double *)(a1 + 16) + exp(v9 * -0.5) * v8;
  }
}

void sub_19C1FC2D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1FC2EC(uint64_t a1, const double **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  _OWORD *v20;
  unsigned int v21;
  double v22;
  void *__p[3];
  int v24;
  double *__B[3];
  vDSP_Length __N;

  sub_19C1CE734(a1 + 192, (uint64_t)__p);
  v6 = *(unsigned int *)(a1 + 216);
  if ((int)v6 >= 1)
  {
    v7 = 0;
    v8 = *(_DWORD *)(a1 + 220);
    v9 = v24;
    v10 = 1;
    v11 = -1;
    v12 = __p[0];
    do
    {
      if (v8 <= v10)
        v13 = v10;
      else
        v13 = v8;
      v14 = v7 + 1;
      if ((int)v7 + 1 >= v8)
        goto LABEL_3;
      v15 = 0;
      v16 = v13 + v11;
      v17 = (int)v7 * (uint64_t)v9;
      if ((v13 + v11) < 4)
      {
        v18 = v7 + 1;
      }
      else
      {
        v18 = v7 + 1;
        if (v13 - (int)v7 + v10 - 2 >= v10)
        {
          v19 = 0;
          v15 = v16 & 0xFFFFFFFC;
          v18 = v14 + (v16 & 0xFFFFFFFC);
          do
          {
            v20 = &v12[v17 + v10 + v19];
            *v20 = 0uLL;
            v20[1] = 0uLL;
            v19 += 4;
          }
          while ((v16 & 0xFFFFFFFC) != v19);
          if (v16 == v15)
            goto LABEL_3;
        }
      }
      v21 = v13 - v15;
      do
      {
        v12[v17 + v18] = 0;
        v18 = ++v15 + v14;
        --v21;
      }
      while (v10 != v21);
LABEL_3:
      ++v7;
      ++v10;
      --v11;
    }
    while (v7 != v6);
  }
  sub_19C1CE5B4((uint64_t)__p, a3, (uint64_t)__B);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v22 = sub_19C1FADA8(a1 + 8, (uint64_t)a2, a2);
  __p[0] = 0;
  vDSP_dotprD(__B[0], 1, __B[0], 1, (double *)__p, (int)__N);
  if (__B[0])
  {
    __B[1] = __B[0];
    operator delete(__B[0]);
  }
  exp(v22 * -0.5);
}

void sub_19C1FC4B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1FC4E0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  void *v32[4];
  void *v33[4];
  void *v34;
  void **v35;
  uint64_t v36;
  void *__p;
  void **v38;
  uint64_t v39;

  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_19C17AF88(&v34, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v38 = 0;
  v39 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D215E8;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v34, (uint64_t)v35, 0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (_BYTE *)v34) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v38, 0xCCCCCCCCCCCCCCCDLL * (((char *)v38 - (_BYTE *)__p) >> 3));
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v38;
    v10 = __p;
    if (v38 != __p)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v38 = v8;
    operator delete(v10);
  }
  v11 = (void **)v34;
  if (v34)
  {
    v12 = v35;
    v13 = v34;
    if (v35 != v34)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v34;
    }
    v35 = v11;
    operator delete(v13);
  }
  *(_QWORD *)a1 = &unk_1E3D21258;
  v14 = sub_19C178A44(a3);
  sub_19C1CF858(a1 + 64, v14);
  sub_19C1C81AC(a1 + 184);
  sub_19C178B08(a3, (uint64_t *)v32);
  sub_19C1D0468(a1 + 64, (uint64_t *)v32);
  sub_19C1D0594(a1 + 64, (uint64_t *)v33);
  if (v33[0])
  {
    v33[1] = v33[0];
    operator delete(v33[0]);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  if ((a4 & 0xFF00000000) != 0)
  {
    v15 = 0;
    *(_DWORD *)(a1 + 7776) = a4;
    v16 = 1;
    v17 = a4;
    do
    {
      v18 = 1812433253 * (v17 ^ (v17 >> 30));
      v17 = v18 + v16;
      *(_DWORD *)(a1 + 7780 + 4 * v15) = v15 + v18 + 1;
      ++v16;
      ++v15;
    }
    while (v15 != 623);
    *(_QWORD *)(a1 + 10272) = 0;
    *(_DWORD *)(a1 + 184) = a4;
    v19 = 1;
    v20 = 47;
    v21 = a4;
    do
    {
      v22 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v22 + v19;
      *(_DWORD *)(a1 + 4 * v20) = v20 + v22 - 46;
      ++v19;
      ++v20;
    }
    while (v20 != 670);
    v23 = 0;
    *(_QWORD *)(a1 + 2680) = 0;
    *(_DWORD *)(a1 + 2712) = a4;
    v24 = 1;
    v25 = a4;
    do
    {
      v26 = 1812433253 * (v25 ^ (v25 >> 30));
      v25 = v26 + v24;
      *(_DWORD *)(a1 + 2716 + 4 * v23) = v23 + v26 + 1;
      ++v24;
      ++v23;
    }
    while (v23 != 623);
    v27 = 0;
    *(_QWORD *)(a1 + 5208) = 0;
    *(_DWORD *)(a1 + 5232) = a4;
    v28 = 1;
    v29 = a4;
    do
    {
      v30 = 1812433253 * (v29 ^ (v29 >> 30));
      v29 = v30 + v28;
      *(_DWORD *)(a1 + 5236 + 4 * v27) = v27 + v30 + 1;
      ++v28;
      ++v27;
    }
    while (v27 != 623);
    *(_QWORD *)(a1 + 7728) = 0;
    sub_19C23B684();
  }
  return a1;
}

void sub_19C1FC7FC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  sub_19C1CF8E8(v2);
  sub_19C1FB99C(v1);
  _Unwind_Resume(a1);
}

void sub_19C1FC890(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_19C1FB99C(v1);
  _Unwind_Resume(a1);
}

void sub_19C1FC8A8(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_19C1FCDC0(a1);
  operator delete(v1);
}

void sub_19C1FC8BC(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  double v6;
  void **v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t **v13;
  uint64_t **i;
  uint64_t **v15;
  char **v16;
  uint64_t **v17;
  char **v18;
  char **v19;
  void *v20;
  double v21;
  double v22;
  BOOL v23;
  char v24;
  __int128 **v25;
  char **v26;
  char *v27;
  void *__p;
  char **v29;
  uint64_t *v30[12];
  _OWORD v31[3];
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[2];
  double v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  __int128 **v43;
  char *v44;
  uint64_t **v45;
  uint64_t **v46;

  v32 = 0u;
  memset(v31, 0, sizeof(v31));
  *(_QWORD *)&v32 = (char *)&v32 + 8;
  v35[0] = 0;
  v35[1] = 0;
  v33 = 0;
  v34 = v35;
  v6 = (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8));
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)v31);
  *(double *)(a3 + 96) = v6;
  sub_19C17B808((char **)v31);
  v38 = 0;
  v39 = 0;
  v37 = 0;
  sub_19C17AF88(&v37, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 4));
  v40 = 0;
  v41 = 0;
  v42 = 0;
  sub_19C17B16C(&v40, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 3));
  sub_19C17A144((uint64_t *)&v37, a1 + 184, 5, (char **)&v43);
  v7 = v40;
  if (v40)
  {
    v8 = v41;
    v9 = v40;
    if (v41 != v40)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v40;
    }
    v41 = v7;
    operator delete(v9);
  }
  v10 = (uint64_t)v37;
  if (v37)
  {
    v11 = v38;
    v12 = v37;
    if ((void *)v38 != v37)
    {
      do
      {
        if (*(char *)(v11 - 25) < 0)
          operator delete(*(void **)(v11 - 48));
        v11 -= 48;
      }
      while (v11 != v10);
      v12 = v37;
    }
    v38 = v10;
    operator delete(v12);
  }
  sub_19C1FCE68(a1, v43, (uint64_t)v31);
  sub_19C1C9C8C(a3, (uint64_t)v31);
  *(double *)(a3 + 96) = v36;
  sub_19C17B808((char **)v31);
  sub_19C1FCE68(a1, v43 + 12, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1FCE68(a1, v43 + 24, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1FCE68(a1, v43 + 36, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1FCE68(a1, v43 + 48, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1CCA84((uint64_t ***)&__p, a2);
  sub_19C1CCA84(&v45, (uint64_t **)&__p);
  v13 = v45;
  if (v45 != v46)
  {
    for (i = v45 + 13; i != v46; i += 13)
    {
      if (*((double *)v13 + 12) < *((double *)i + 12))
        v13 = i;
    }
  }
  sub_19C1C1840((uint64_t **)v31, (uint64_t *)v13);
  v36 = *((double *)v13 + 12);
  v15 = v45;
  if (v45)
  {
    v16 = (char **)v46;
    v17 = v45;
    if (v46 != v45)
    {
      do
        v16 = sub_19C17B808(v16 - 13);
      while (v16 != (char **)v15);
      v17 = v45;
    }
    v46 = v15;
    operator delete(v17);
  }
  sub_19C1C5D14(v30, (uint64_t)v31);
  sub_19C17B808((char **)v31);
  v18 = (char **)__p;
  if (__p)
  {
    v19 = v29;
    v20 = __p;
    if (v29 != __p)
    {
      do
        v19 = sub_19C17B808(v19 - 13);
      while (v19 != v18);
      v20 = __p;
    }
    v29 = v18;
    operator delete(v20);
  }
  sub_19C1FCE68(a1, (__int128 **)v30, (uint64_t)v31);
  v21 = v36;
  v22 = *(double *)(a3 + 96);
  v23 = sub_19C1D16FC((uint64_t *)v31, v30);
  v24 = v21 <= v22 || v23;
  if ((v24 & 1) == 0)
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C17B808((char **)v30);
  v25 = v43;
  if (v43)
  {
    v26 = (char **)v44;
    v27 = (char *)v43;
    if (v44 != (char *)v43)
    {
      do
        v26 = sub_19C17B808(v26 - 12);
      while (v26 != (char **)v25);
      v27 = (char *)v43;
    }
    v44 = (char *)v25;
    operator delete(v27);
  }
}

void sub_19C1FCCE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  char **v5;
  uint64_t v6;
  char *v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, char *);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  sub_19C17B808((char **)va1);
  sub_19C17B808((char **)va);
  sub_19C17AA64((void **)(v6 - 112));
  sub_19C17B808(v5);
  _Unwind_Resume(a1);
}

void sub_19C1FCDA0(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "direct_optimizer");
}

_QWORD *sub_19C1FCDC0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = &unk_1E3D21258;
  std::random_device::~random_device((std::random_device *)(a1 + 10280));
  std::random_device::~random_device((std::random_device *)(a1 + 7736));
  std::random_device::~random_device((std::random_device *)(a1 + 5216));
  std::random_device::~random_device((std::random_device *)(a1 + 2688));
  *(_QWORD *)(a1 + 64) = &unk_1E3D21150;
  sub_19C23AA14(*(_QWORD *)(a1 + 72));
  v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(_QWORD *)(a1 + 136) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 104);
  if (v3)
  {
    *(_QWORD *)(a1 + 112) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 80);
  if (v4)
  {
    *(_QWORD *)(a1 + 88) = v4;
    operator delete(v4);
  }
  return sub_19C1FB99C((_QWORD *)a1);
}

void sub_19C1FCE68(uint64_t a1@<X0>, __int128 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float64x2_t *v9;
  char *v10;
  uint64_t v11;
  float64x2_t *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  int64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  int v25;
  double v26;
  double v27;
  void *v28[3];
  unsigned int v29;
  void *v30;
  char *v31;
  char *v32;
  int v33;
  void *v34;
  void *v35;
  void *__p[12];
  void *v37[4];
  _QWORD v38[2];

  v38[0] = a1;
  v38[1] = a2;
  v6 = a1 + 64;
  sub_19C1CD184(a2, (uint64_t)__p);
  sub_19C1FD1EC(v6, (uint64_t)v38, (uint64_t *)__p, (uint64_t)v37);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_19C1CD508((uint64_t)a2, (uint64_t)&v34);
  sub_19C1C1840((uint64_t **)__p, (uint64_t *)a2);
  sub_19C1CD7E0((uint64_t *)__p, (uint64_t *)v37);
  sub_19C1CD99C((uint64_t)__p, (uint64_t *)&v34);
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  v7 = *(_QWORD *)(a1 + 8);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v28);
  v8 = v29;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  if (!v29)
  {
    v33 = 0;
    goto LABEL_15;
  }
  if ((v29 & 0x80000000) != 0)
    sub_19C07DA0C();
  v9 = (float64x2_t *)operator new(8 * (int)v29);
  v30 = v9;
  v32 = (char *)&v9->f64[(int)v8];
  bzero(v9, 8 * (int)v8);
  v31 = (char *)&v9->f64[(int)v8];
  v33 = v8;
  v10 = (char *)v28[0];
  if (v8 < 8)
  {
    v11 = 0;
LABEL_13:
    v20 = v8 - v11;
    v21 = v11 << 32;
    do
    {
      *(double *)((char *)v9->f64 + (v21 >> 29)) = (double)*(int *)&v10[v21 >> 30];
      v21 += 0x100000000;
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
  v11 = v8 & 0xFFFFFFF8;
  v12 = v9 + 2;
  v13 = (char *)v28[0] + 16;
  v14 = v11;
  do
  {
    v15 = *((_OWORD *)v13 - 1);
    v16.i64[0] = (int)v15;
    v16.i64[1] = SDWORD1(v15);
    v17 = vcvtq_f64_s64(v16);
    v16.i64[0] = SDWORD2(v15);
    v16.i64[1] = SHIDWORD(v15);
    v18 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*(_OWORD *)v13;
    v16.i64[1] = (int)HIDWORD(*(_QWORD *)v13);
    v19 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*((_QWORD *)v13 + 1);
    v16.i64[1] = (int)HIDWORD(*(_OWORD *)v13);
    v12[-2] = v17;
    v12[-1] = v18;
    *v12 = v19;
    v12[1] = vcvtq_f64_s64(v16);
    v12 += 4;
    v13 += 32;
    v14 -= 8;
  }
  while (v14);
  if (v11 != v8)
    goto LABEL_13;
LABEL_15:
  sub_19C1CEDDC((uint64_t)v37, (uint64_t)&v30, (uint64_t)&v34);
  v22 = sub_19C1FC118(*(_QWORD *)(v7 + 8), (const double **)&v34);
  v24 = sqrt(v23);
  if (v24 < 0.00000001 || (v25 = *(_DWORD *)(*(_QWORD *)(v7 + 8) + 120), v25 <= 0))
  {
    v26 = (*(double (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  else
  {
    if (*(_DWORD *)(v7 + 56) != v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    (**(void (***)(uint64_t, double, double))v7)(v7, v22, v24);
  }
  v27 = v26;
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)__p);
  *(double *)(a3 + 96) = v27;
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  if (v30)
  {
    v31 = (char *)v30;
    operator delete(v30);
  }
  if (v28[0])
  {
    v28[1] = v28[0];
    operator delete(v28[0]);
  }
  sub_19C17B808((char **)__p);
  if (v37[0])
  {
    v37[1] = v37[0];
    operator delete(v37[0]);
  }
}

void sub_19C1FD114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v24;
  void *v25;

  if (a13)
  {
    operator delete(a13);
    v24 = __p;
    if (!__p)
    {
LABEL_4:
      sub_19C17B808((char **)&a21);
      v25 = *(void **)(v22 - 128);
      if (v25)
      {
        *(_QWORD *)(v22 - 120) = v25;
        operator delete(v25);
      }
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v24 = __p;
    if (!__p)
      goto LABEL_4;
  }
  operator delete(v24);
  goto LABEL_4;
}

void sub_19C1FD1EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1FD73C;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1FD634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1FD440);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

void sub_19C1FD73C(uint64_t **a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  void *__p;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v18 = 0;
  v19 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    __p = 0;
    v18 = 0;
    v19 = 0;
    v20 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  __p = v8;
  v18 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v19 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v20 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1FD90C(a3, (uint64_t)&__p);
    if (__p)
    {
      v18 = (char *)__p;
      operator delete(__p);
    }
  }
  else
  {
    sub_19C1FD90C(a3, (uint64_t)&__p);
    __break(1u);
  }
}

void sub_19C1FD8D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1FD8F0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

uint64_t sub_19C1FD90C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  float64x2_t *v5;
  char *v6;
  uint64_t v7;
  float64x2_t *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  int64x2_t v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  int v21;
  double v22;
  double v23;
  void *v25[3];
  unsigned int v26;
  void *v27;
  char *v28;
  char *v29;
  int v30;
  void *__p[4];

  v3 = *(_QWORD *)(*a1 + 8);
  sub_19C1CD508(a1[1], (uint64_t)v25);
  v4 = v26;
  v28 = 0;
  v29 = 0;
  v27 = 0;
  if (!v26)
  {
    v30 = 0;
    goto LABEL_11;
  }
  if ((v26 & 0x80000000) != 0)
    sub_19C07DA0C();
  v5 = (float64x2_t *)operator new(8 * (int)v26);
  v27 = v5;
  v29 = (char *)&v5->f64[(int)v4];
  bzero(v5, 8 * (int)v4);
  v28 = (char *)&v5->f64[(int)v4];
  v30 = v4;
  v6 = (char *)v25[0];
  if (v4 < 8)
  {
    v7 = 0;
LABEL_9:
    v16 = v4 - v7;
    v17 = v7 << 32;
    do
    {
      *(double *)((char *)v5->f64 + (v17 >> 29)) = (double)*(int *)&v6[v17 >> 30];
      v17 += 0x100000000;
      --v16;
    }
    while (v16);
    goto LABEL_11;
  }
  v7 = v4 & 0xFFFFFFF8;
  v8 = v5 + 2;
  v9 = (char *)v25[0] + 16;
  v10 = v7;
  do
  {
    v11 = *((_OWORD *)v9 - 1);
    v12.i64[0] = (int)v11;
    v12.i64[1] = SDWORD1(v11);
    v13 = vcvtq_f64_s64(v12);
    v12.i64[0] = SDWORD2(v11);
    v12.i64[1] = SHIDWORD(v11);
    v14 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*(_OWORD *)v9;
    v12.i64[1] = (int)HIDWORD(*(_QWORD *)v9);
    v15 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*((_QWORD *)v9 + 1);
    v12.i64[1] = (int)HIDWORD(*(_OWORD *)v9);
    v8[-2] = v13;
    v8[-1] = v14;
    *v8 = v15;
    v8[1] = vcvtq_f64_s64(v12);
    v8 += 4;
    v9 += 32;
    v10 -= 8;
  }
  while (v10);
  if (v7 != v4)
    goto LABEL_9;
LABEL_11:
  sub_19C1CEDDC(a2, (uint64_t)&v27, (uint64_t)__p);
  v18 = sub_19C1FC118(*(_QWORD *)(v3 + 8), (const double **)__p);
  v20 = sqrt(v19);
  if (v20 < 0.00000001 || (v21 = *(_DWORD *)(*(_QWORD *)(v3 + 8) + 120), v21 <= 0))
  {
    v22 = (*(double (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  else
  {
    if (*(_DWORD *)(v3 + 56) != v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    (**(void (***)(uint64_t, double, double))v3)(v3, v18, v20);
  }
  v23 = v22;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v27)
  {
    v28 = (char *)v27;
    operator delete(v27);
  }
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
  return *(_QWORD *)&v23;
}

void sub_19C1FDB0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  void *v19;

  if (__p)
  {
    operator delete(__p);
    v19 = a9;
    if (!a9)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v19 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C1FDB8C(uint64_t a1)
{
  char **v2;
  char **v3;
  char **v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char **v13;
  char **v14;
  void *v15;

  *(_QWORD *)a1 = &unk_1E3D217C8;
  v2 = *(char ***)(a1 + 10696);
  if (v2)
  {
    v3 = *(char ***)(a1 + 10704);
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 12);
      while (v3 != v2);
      v4 = *(char ***)(a1 + 10696);
    }
    *(_QWORD *)(a1 + 10704) = v2;
    operator delete(v4);
  }
  std::random_device::~random_device((std::random_device *)(a1 + 10688));
  std::random_device::~random_device((std::random_device *)(a1 + 8144));
  std::random_device::~random_device((std::random_device *)(a1 + 5624));
  std::random_device::~random_device((std::random_device *)(a1 + 3096));
  v5 = *(_QWORD *)(a1 + 584);
  *(_QWORD *)(a1 + 584) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  *(_QWORD *)(a1 + 504) = &unk_1E3D20F48;
  v6 = *(void **)(a1 + 520);
  if (v6)
  {
    *(_QWORD *)(a1 + 528) = v6;
    operator delete(v6);
  }
  sub_19C1EC3CC((_QWORD *)(a1 + 176));
  v7 = *(_QWORD *)(a1 + 152);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 160);
    v9 = *(void **)(a1 + 152);
    if (v8 != v7)
    {
      v10 = *(_QWORD *)(a1 + 160);
      do
      {
        v12 = *(void **)(v10 - 56);
        v10 -= 56;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v8 - 48) = v11;
          operator delete(v11);
        }
        v8 = v10;
      }
      while (v10 != v7);
      v9 = *(void **)(a1 + 152);
    }
    *(_QWORD *)(a1 + 160) = v7;
    operator delete(v9);
  }
  *(_QWORD *)a1 = &unk_1E3D214F8;
  sub_19C1C2E88(a1 + 32);
  v13 = *(char ***)(a1 + 8);
  if (v13)
  {
    v14 = *(char ***)(a1 + 16);
    v15 = *(void **)(a1 + 8);
    if (v14 != v13)
    {
      do
        v14 = sub_19C17B808(v14 - 13);
      while (v14 != v13);
      v15 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v13;
    operator delete(v15);
  }
  return a1;
}

void sub_19C1FDD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  void *__p[4];

  v5 = (uint64_t *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 96);
  v6 = *(_DWORD *)(a1 + 120);
  v7 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 120) = v6 + 1;
  *(_DWORD *)(a1 + 124) = v7;
  v8 = v7 * (v6 + 1);
  v9 = (*(_QWORD *)(a1 + 104) - v4) >> 3;
  if (v8 <= v9)
  {
    if (v8 < v9)
      *(_QWORD *)(a1 + 104) = v4 + 8 * v8;
  }
  else
  {
    sub_19C17C9D8(a1 + 96, v8 - v9);
    v6 = *(_DWORD *)(a1 + 120) - 1;
  }
  sub_19C1CE998(a2, (uint64_t)__p);
  v10 = *(int *)(a1 + 124);
  v11 = (char *)__p[0];
  if (!(_DWORD)v10)
  {
    if (!__p[0])
      goto LABEL_18;
    goto LABEL_17;
  }
  v12 = (int)v10 * (uint64_t)v6;
  v13 = *v5;
  if (v10 >= 8 && (v14 = 8 * v12 + v13, v14 - (unint64_t)__p[0] >= 0x20))
  {
    v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    v20 = (__int128 *)((char *)__p[0] + 16);
    v21 = (_OWORD *)(v14 + 16);
    v22 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v23 = *v20;
      *(v21 - 1) = *(v20 - 1);
      *v21 = v23;
      v20 += 2;
      v21 += 2;
      v22 -= 4;
    }
    while (v22);
    if (v15 == v10)
      goto LABEL_17;
  }
  else
  {
    v15 = 0;
  }
  v16 = v10 - v15;
  v17 = (_QWORD *)(v13 + 8 * (v15 + v12));
  v18 = &v11[8 * v15];
  do
  {
    v19 = *(_QWORD *)v18;
    v18 += 8;
    *v17++ = v19;
    --v16;
  }
  while (v16);
LABEL_17:
  __p[1] = v11;
  operator delete(v11);
LABEL_18:
  sub_19C1FDE3C(a1, 1, 1);
}

void sub_19C1FDE3C(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  signed int v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  char *v32;
  char *v33;
  uint64_t v35;
  void *__p;
  void *v37;
  uint64_t v38;
  unsigned int v39;
  char *__C;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  if (a2)
  {
    v5 = (_QWORD *)(a1 + 128);
    v4 = *(_QWORD *)(a1 + 128);
    v6 = *(_DWORD *)(a1 + 120);
    *(_DWORD *)(a1 + 152) = v6;
    v7 = (*(_QWORD *)(a1 + 136) - v4) >> 3;
    v35 = v6;
    if (v6 <= v7)
    {
      if (v6 < v7)
        *(_QWORD *)(a1 + 136) = v4 + 8 * v6;
    }
    else
    {
      sub_19C17C9D8(a1 + 128, v6 - v7);
      v6 = *(_DWORD *)(a1 + 120);
      v35 = v6;
    }
    if (v6)
    {
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *(_QWORD *)(a1 + 96);
        v11 = *(_DWORD *)(a1 + 124);
        __C = 0;
        v41 = 0;
        v42 = 0;
        if (v11)
          break;
        v12 = 0;
        v37 = 0;
        v38 = 0;
        __p = 0;
        v39 = 0;
LABEL_26:
        __C = 0;
        vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)&__C, *(int *)(a1 + 312));
        *(_QWORD *)(*v5 + 8 * v9) = __C;
        if (__p)
        {
          v37 = __p;
          operator delete(__p);
        }
        if (v12)
          operator delete(v12);
        ++v9;
        v8 += 8;
        if (v9 == v35)
          goto LABEL_34;
      }
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = operator new(8 * v11);
      bzero(v12, 8 * v11);
      if (v11 >= 8 && (unint64_t)v12 - v10 - 8 * v9 * v11 >= 0x20)
      {
        v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
        v28 = (__int128 *)(v10 + v8 * v11 + 16);
        v29 = v12 + 1;
        v30 = v13;
        do
        {
          v31 = *v28;
          *(v29 - 1) = *(v28 - 1);
          *v29 = v31;
          v28 += 2;
          v29 += 2;
          v30 -= 4;
        }
        while (v30);
        if (v13 == v11)
        {
LABEL_16:
          __p = 0;
          v37 = 0;
          v38 = 0;
          v39 = v11;
          sub_19C17C9D8((uint64_t)&__p, v11);
          v19 = v39;
          if ((int)v39 >= 1)
          {
            v20 = 0;
            v21 = (char *)__p;
            if (v39 < 4)
              goto LABEL_22;
            if ((unint64_t)((_BYTE *)__p - (_BYTE *)v12) < 0x20)
              goto LABEL_22;
            v22 = 0;
            v20 = v39 & 0xFFFFFFFC;
            v23 = (8 * v39) & 0x7FFFFFFE0;
            do
            {
              v24 = v12[v22 / 0x10 + 1];
              v25 = &v21[v22];
              *(_OWORD *)v25 = v12[v22 / 0x10];
              *((_OWORD *)v25 + 1) = v24;
              v22 += 32;
            }
            while (v23 != v22);
            if (v20 != v19)
            {
LABEL_22:
              v26 = v19 - v20;
              v27 = v20 << 32;
              do
              {
                *(_QWORD *)&v21[v27 >> 29] = *(_QWORD *)((char *)v12 + (v27 >> 29));
                v27 += 0x100000000;
                --v26;
              }
              while (v26);
            }
          }
          goto LABEL_26;
        }
      }
      else
      {
        v13 = 0;
      }
      v14 = v11 - v13;
      v15 = 8 * v13;
      v16 = (_QWORD *)v12 + v13;
      v17 = (uint64_t *)(v10 + v15 + v8 * v11);
      do
      {
        v18 = *v17++;
        *v16++ = v18;
        --v14;
      }
      while (v14);
      goto LABEL_16;
    }
  }
LABEL_34:
  sub_19C1FE1B8(a1 + 8, (uint64_t *)(a1 + 96), (uint64_t)&__C);
  if ((char **)(a1 + 160) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 160), __C, v41, (v41 - __C) >> 3);
  v32 = __C;
  *(_QWORD *)(a1 + 184) = v43;
  if (v32)
  {
    v41 = v32;
    operator delete(v32);
  }
  sub_19C1D3978(a1 + 160, (uint64_t)&__C);
  if ((char **)(a1 + 192) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 192), __C, v41, (v41 - __C) >> 3);
  v33 = __C;
  *(_QWORD *)(a1 + 216) = v43;
  if (v33)
  {
    v41 = v33;
    operator delete(v33);
  }
  sub_19C1FE678(a1);
  if (a3)
    sub_19C1FE898((int32x2_t *)a1);
}

void sub_19C1FE154(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1FE1B8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  size_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  signed int v12;
  char *v13;
  size_t v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  _OWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  __int128 *v33;
  _OWORD *v34;
  unint64_t v35;
  __int128 v36;
  __int128 *v37;
  _OWORD *v38;
  unint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  char *v55;
  signed int v56;
  void *__p;
  char *v58;
  char *v59;
  signed int v60;

  v4 = *((unsigned int *)a2 + 6);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  if (!(_DWORD)v4)
  {
    v7 = 0;
    *(_DWORD *)(a3 + 24) = 0;
    *(_DWORD *)(a3 + 28) = 0;
LABEL_41:
    v41 = (int)v4;
    if ((_DWORD)v4)
      goto LABEL_42;
    return;
  }
  v6 = 8 * (v4 * v4);
  v7 = (char *)operator new(v6);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 16) = &v7[v6];
  bzero(v7, v6);
  *(_QWORD *)(a3 + 8) = &v7[v6];
  *(_DWORD *)(a3 + 24) = v4;
  *(_DWORD *)(a3 + 28) = v4;
  if ((int)v4 <= 0)
    goto LABEL_41;
  v49 = 0;
  v8 = 0;
  v52 = 1;
  v47 = v4;
  v48 = a1;
  do
  {
    v9 = 0;
    v10 = 0;
    v51 = (int)v8 * v4;
    do
    {
      v11 = *a2;
      v12 = *((_DWORD *)a2 + 7);
      __p = 0;
      v58 = 0;
      v59 = 0;
      if (v12)
      {
        if (v12 < 0)
          sub_19C07DA0C();
        v13 = v7;
        v14 = 8 * v12;
        v15 = operator new(v14);
        bzero(v15, v14);
        if (v12 < 8 || (unint64_t)v15 - v11 - 8 * v8 * v12 < 0x20)
        {
          v16 = 0;
          goto LABEL_12;
        }
        v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v33 = (__int128 *)(v11 + v49 * v12 + 16);
        v34 = v15 + 1;
        v35 = v16;
        do
        {
          v36 = *v33;
          *(v34 - 1) = *(v33 - 1);
          *v34 = v36;
          v33 += 2;
          v34 += 2;
          v35 -= 4;
        }
        while (v35);
        if (v16 != v12)
        {
LABEL_12:
          v17 = v12 - v16;
          v18 = 8 * v16;
          v19 = (_QWORD *)v15 + v16;
          v20 = (uint64_t *)(v11 + v18 + v49 * v12);
          do
          {
            v21 = *v20++;
            *v19++ = v21;
            --v17;
          }
          while (v17);
        }
        v53 = 0;
        v54 = 0;
        v56 = 0;
        v55 = 0;
        v53 = operator new(8 * v12);
        v54 = (char *)v53 + v14;
        v55 = (char *)v53 + 8 * v12;
        v56 = v12;
        memcpy(v53, v15, 8 * v12);
        v22 = operator new(8 * v12);
        bzero(v22, 8 * v12);
        if (v12 < 8 || (unint64_t)v22 - v11 - 8 * v10 * v12 < 0x20)
        {
          v23 = 0;
          goto LABEL_17;
        }
        v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v37 = (__int128 *)(v11 + v9 * v12 + 16);
        v38 = v22 + 1;
        v39 = v23;
        do
        {
          v40 = *v37;
          *(v38 - 1) = *(v37 - 1);
          *v38 = v40;
          v37 += 2;
          v38 += 2;
          v39 -= 4;
        }
        while (v39);
        if (v23 != v12)
        {
LABEL_17:
          v24 = v12 - v23;
          v25 = 8 * v23;
          v26 = (_QWORD *)v22 + v23;
          v27 = (uint64_t *)(v11 + v25 + v9 * v12);
          do
          {
            v28 = *v27++;
            *v26++ = v28;
            --v24;
          }
          while (v24);
        }
        __p = 0;
        v58 = 0;
        v60 = 0;
        v59 = 0;
        v29 = (int)v10;
        __p = operator new(8 * v12);
        v58 = (char *)__p + v14;
        v59 = (char *)__p + 8 * v12;
        v60 = v12;
        memcpy(__p, v22, 8 * v12);
        v7 = v13;
        a1 = v48;
        goto LABEL_21;
      }
      v15 = 0;
      v22 = 0;
      v54 = 0;
      v55 = 0;
      v53 = 0;
      v56 = 0;
      v29 = (int)v10;
      __p = 0;
      v58 = 0;
      v60 = 0;
      v59 = 0;
LABEL_21:
      v30 = *(double *)(a1 + 16);
      v31 = sub_19C1FADA8(a1, (uint64_t)&v53, (const double **)&__p);
      v32 = exp(v31 * -0.5) * v30;
      if ((_DWORD)v8 == (_DWORD)v10)
        v32 = v32 + *(double *)(a1 + 8) + 1.0e-10;
      *(double *)&v7[8 * v29 + 8 * v51] = v32;
      if (__p)
      {
        v58 = (char *)__p;
        operator delete(__p);
      }
      if (v22)
        operator delete(v22);
      if (v53)
      {
        v54 = (char *)v53;
        operator delete(v53);
      }
      if (v15)
        operator delete(v15);
      ++v10;
      v9 += 8;
    }
    while (v10 != v52);
    ++v8;
    ++v52;
    v49 += 8;
    v4 = v47;
  }
  while (v8 != v47);
  v41 = v47;
LABEL_42:
  if (v41 != 1)
  {
    v42 = 0;
    v43 = 8 * v41;
    v44 = v7;
    do
    {
      if (v42)
      {
        v45 = 0;
        v46 = v44;
        do
        {
          *v46 = *(_QWORD *)&v7[8 * v45++];
          v46 = (_QWORD *)((char *)v46 + v43);
        }
        while (v42 != v45);
      }
      ++v42;
      ++v44;
      v7 += v43;
    }
    while (v42 != v41);
  }
}

void sub_19C1FE5D4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1FE5FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  uint64_t v27;
  void *v28;

  if (__p)
  {
    operator delete(__p);
    v27 = a10;
    if (!v25)
    {
LABEL_3:
      v28 = a18;
      if (!a18)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    v27 = a10;
    if (!v25)
      goto LABEL_3;
  }
  operator delete(v25);
  v28 = a18;
  if (!a18)
  {
LABEL_4:
    if (!v23)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v28);
  if (!v23)
  {
LABEL_5:
    *(_QWORD *)(v27 + 8) = v24;
    operator delete(v24);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(v23);
  *(_QWORD *)(v27 + 8) = v24;
  operator delete(v24);
  _Unwind_Resume(a1);
}

void sub_19C1FE678(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _OWORD *v16;
  unsigned int v17;
  void *v18[4];
  void *__p;
  char *v20;
  int v21;
  void *v22[3];
  int v23;

  sub_19C1CE734(a1 + 192, (uint64_t)v22);
  v2 = *(unsigned int *)(a1 + 216);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    v4 = *(_DWORD *)(a1 + 220);
    v5 = v23;
    v6 = 1;
    v7 = -1;
    v8 = v22[0];
    do
    {
      if (v4 <= v6)
        v9 = v6;
      else
        v9 = v4;
      v10 = v3 + 1;
      if ((int)v3 + 1 >= v4)
        goto LABEL_3;
      v11 = 0;
      v12 = v9 + v7;
      v13 = (int)v3 * (uint64_t)v5;
      if ((v9 + v7) < 4)
      {
        v14 = v3 + 1;
      }
      else
      {
        v14 = v3 + 1;
        if (v9 - (int)v3 + v6 - 2 >= v6)
        {
          v15 = 0;
          v11 = v12 & 0xFFFFFFFC;
          v14 = v10 + (v12 & 0xFFFFFFFC);
          do
          {
            v16 = &v8[v13 + v6 + v15];
            *v16 = 0uLL;
            v16[1] = 0uLL;
            v15 += 4;
          }
          while ((v12 & 0xFFFFFFFC) != v15);
          if (v12 == v11)
            goto LABEL_3;
        }
      }
      v17 = v9 - v11;
      do
      {
        v8[v13 + v14] = 0;
        v14 = ++v11 + v10;
        --v17;
      }
      while (v6 != v17);
LABEL_3:
      ++v3;
      ++v6;
      --v7;
    }
    while (v3 != v2);
  }
  sub_19C1FEAFC(a1, (uint64_t)v18);
  sub_19C1CE5B4((uint64_t)v22, (uint64_t)v18, (uint64_t)&__p);
  if ((void **)(a1 + 256) != &__p)
    sub_19C11EAD0((_QWORD *)(a1 + 256), (char *)__p, v20, (v20 - (_BYTE *)__p) >> 3);
  *(_DWORD *)(a1 + 280) = v21;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  sub_19C1CEB00((uint64_t)v22, &__p);
  sub_19C1D43B4((uint64_t)&__p, a1 + 256);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v22[0])
  {
    v22[1] = v22[0];
    operator delete(v22[0]);
  }
}

void sub_19C1FE834(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  if (a9)
    operator delete(a9);
  if (a17)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_19C1FE898(int32x2_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int32 v14;
  int v15;
  int v16;
  _QWORD *v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  _OWORD *v25;
  unsigned int v26;
  void *__p;
  char *v28;
  int32x2_t v29;

  v2 = a1[15].u32[0];
  sub_19C176BE8(v2, v2, (uint64_t)&__p);
  if ((int)v2 >= 1)
  {
    v3 = v29.i32[1] + 1;
    v4 = __p;
    if ((_DWORD)v2 == 1)
    {
      v5 = 0;
LABEL_7:
      v8 = v2 - v5;
      v9 = v5 << 32;
      do
      {
        v4[(v9 >> 32) * v3] = 0x3FF0000000000000;
        v9 += 0x100000000;
        --v8;
      }
      while (v8);
      goto LABEL_9;
    }
    v6 = 0;
    v5 = v2 & 0xFFFFFFFE;
    v7 = v5;
    do
    {
      v4[(v6 >> 32) * v3] = 0x3FF0000000000000;
      v4[((v6 >> 32) | 1) * v3] = 0x3FF0000000000000;
      v6 += 0x200000000;
      v7 -= 2;
    }
    while (v7);
    if (v5 != v2)
      goto LABEL_7;
  }
LABEL_9:
  if (&a1[28] != (int32x2_t *)&__p)
    sub_19C11EAD0(&a1[28], (char *)__p, v28, (v28 - (_BYTE *)__p) >> 3);
  v10 = (char *)__p;
  a1[31] = v29;
  if (v10)
  {
    v28 = v10;
    operator delete(v10);
  }
  sub_19C1CE734((uint64_t)&a1[24], (uint64_t)&__p);
  v11 = a1[27].u32[0];
  if ((int)v11 >= 1)
  {
    v12 = 0;
    v13 = a1[27].i32[1];
    v14 = v29.i32[1];
    v15 = 1;
    v16 = -1;
    v17 = __p;
    do
    {
      if (v13 <= v15)
        v18 = v15;
      else
        v18 = v13;
      v19 = v12 + 1;
      if ((int)v12 + 1 >= v13)
        goto LABEL_15;
      v20 = 0;
      v21 = v18 + v16;
      v22 = (int)v12 * (uint64_t)v14;
      if ((v18 + v16) < 4)
      {
        v23 = v12 + 1;
      }
      else
      {
        v23 = v12 + 1;
        if (v18 - (int)v12 + v15 - 2 >= v15)
        {
          v24 = 0;
          v20 = v21 & 0xFFFFFFFC;
          v23 = v19 + (v21 & 0xFFFFFFFC);
          do
          {
            v25 = &v17[v22 + v15 + v24];
            *v25 = 0uLL;
            v25[1] = 0uLL;
            v24 += 4;
          }
          while ((v21 & 0xFFFFFFFC) != v24);
          if (v21 == v20)
            goto LABEL_15;
        }
      }
      v26 = v18 - v20;
      do
      {
        v17[v22 + v23] = 0;
        v23 = ++v20 + v19;
        --v26;
      }
      while (v15 != v26);
LABEL_15:
      ++v12;
      ++v15;
      --v16;
    }
    while (v12 != v11);
  }
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
  sub_19C1CEB00((uint64_t)&a1[24], &__p);
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
}

void sub_19C1FEAD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1FEAFC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  signed int v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  char *v28;

  v4 = *(_DWORD *)(a1 + 312);
  v5 = 8 * v4;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * v4);
    bzero(v6, 8 * v4);
    v7 = 0;
    v8 = &v6[v5];
    v9 = *(_QWORD *)(a1 + 288);
    if (v4 < 4)
      goto LABEL_46;
    if ((unint64_t)&v6[-v9] < 0x20)
      goto LABEL_46;
    v10 = 0;
    v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    v11 = v7;
    do
    {
      v12 = *(_OWORD *)(v9 + v10 + 16);
      v13 = &v6[v10];
      *(_OWORD *)v13 = *(_OWORD *)(v9 + v10);
      *((_OWORD *)v13 + 1) = v12;
      v10 += 32;
      v11 -= 4;
    }
    while (v11);
    if (v7 != v4)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v6[8 * v7] = *(_QWORD *)(v9 + 8 * v7);
        ++v7;
      }
      while (v4 != v7);
    }
    v14 = *(int *)(a1 + 152);
    if ((_DWORD)v14)
      goto LABEL_10;
LABEL_19:
    v15 = 0;
    goto LABEL_20;
  }
  v8 = 0;
  v6 = 0;
  v14 = *(int *)(a1 + 152);
  if (!(_DWORD)v14)
    goto LABEL_19;
LABEL_10:
  if ((v14 & 0x80000000) != 0)
    sub_19C07DA0C();
  v15 = (char *)operator new(8 * v14);
  bzero(v15, 8 * v14);
  v16 = 0;
  v17 = *(_QWORD *)(a1 + 128);
  if (v14 < 4)
    goto LABEL_47;
  if ((unint64_t)&v15[-v17] < 0x20)
    goto LABEL_47;
  v18 = 0;
  v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  v19 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v20 = *(_OWORD *)(v17 + v18 + 16);
    v21 = &v15[v18];
    *(_OWORD *)v21 = *(_OWORD *)(v17 + v18);
    *((_OWORD *)v21 + 1) = v20;
    v18 += 32;
    v19 -= 4;
  }
  while (v19);
  if (v16 != v14)
  {
LABEL_47:
    do
    {
      *(_QWORD *)&v15[8 * v16] = *(_QWORD *)(v17 + 8 * v16);
      ++v16;
    }
    while (v14 != v16);
  }
LABEL_20:
  vDSP_vsubD((const double *)v15, 1, (const double *)v6, 1, (double *)v6, 1, v4);
  if (v8 != v6)
  {
    if (v8 - v6 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v8 - v6);
    memcpy(v22, v6, v8 - v6);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    if (!v4)
    {
      *(_DWORD *)(a2 + 24) = 0;
      operator delete(v22);
      if (!v15)
        goto LABEL_35;
LABEL_34:
      operator delete(v15);
      goto LABEL_35;
    }
LABEL_26:
    if (v4 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(8 * v4);
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 16) = &v23[8 * v4];
    bzero(v23, 8 * v4);
    *(_QWORD *)(a2 + 8) = &v23[v5];
    *(_DWORD *)(a2 + 24) = v4;
    if (v4 >= 4)
    {
      v25 = 0;
      v24 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      v26 = v24;
      do
      {
        v27 = *(_OWORD *)&v22[v25 + 16];
        v28 = &v23[v25];
        *(_OWORD *)v28 = *(_OWORD *)&v22[v25];
        *((_OWORD *)v28 + 1) = v27;
        v25 += 32;
        v26 -= 4;
      }
      while (v26);
      if (v24 == v4)
      {
LABEL_33:
        operator delete(v22);
        if (!v15)
          goto LABEL_35;
        goto LABEL_34;
      }
    }
    else
    {
      v24 = 0;
    }
    do
    {
      *(_QWORD *)&v23[8 * v24] = *(_QWORD *)&v22[8 * v24];
      ++v24;
    }
    while (v4 != v24);
    goto LABEL_33;
  }
  v22 = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v4)
    goto LABEL_26;
  *(_DWORD *)(a2 + 24) = 0;
  if (v15)
    goto LABEL_34;
LABEL_35:
  if (v6)
    operator delete(v6);
}

void sub_19C1FEE20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  void *v18;
  void *v19;

  if (v19)
  {
    operator delete(v19);
    if (!v18)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v18)
  {
    goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_19C1FEE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a9)
    operator delete(a9);
  sub_19C07AF7C(a1);
}

void sub_19C1FEE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13)
    JUMPOUT(0x19C1FEEA8);
  JUMPOUT(0x19C1FEEACLL);
}

void sub_19C1FEEB4(uint64_t a1, uint64_t a2)
{
  _BYTE *v3;
  _BYTE *v4;
  int v5;
  unsigned int v6;
  signed int v7;
  int v8;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  unsigned int v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  int64_t v22;
  char *v23;
  char *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double *v29;
  long double *v30;
  unint64_t v31;
  long double v32;
  __int128 *v33;
  unint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  long double v38;
  void *v39;
  char *v40;
  int v41;
  void *v42;
  void *v43;
  char *v44;
  int v45;
  void *v46[4];
  void *__p[4];
  _QWORD v48[2];
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;

  v55 = a2;
  sub_19C1CF858((uint64_t)v48, *(_DWORD *)(a2 + 8) + 1);
  sub_19C17D694((uint64_t)v46, *(_DWORD *)(a2 + 8) + 1);
  v3 = v46[0];
  *(_QWORD *)v46[0] = 0xC01E000000000000;
  v4 = __p[0];
  *(_QWORD *)__p[0] = 0x401E000000000000;
  v5 = *(_DWORD *)(a2 + 8);
  if (v5 >= 1)
  {
    v6 = 0;
    v7 = 1;
    if (v5 < 0xA)
      goto LABEL_7;
    if ((unint64_t)(v4 - v3) < 0x20)
      goto LABEL_7;
    v8 = 0;
    v6 = v5 & 0xFFFFFFFC;
    v7 = v5 & 0xFFFFFFFC | 1;
    __asm
    {
      FMOV            V0.2D, #-10.0
      FMOV            V1.2D, #10.0
    }
    do
    {
      v15 = 8 * v8;
      v16 = &v3[v15 + 8];
      *v16 = _Q0;
      v16[1] = _Q0;
      v17 = &v4[v15 + 8];
      *v17 = _Q1;
      v17[1] = _Q1;
      v8 += 4;
    }
    while (v6 != v8);
    if (v6 != v5)
    {
LABEL_7:
      v18 = v5 - v6;
      do
      {
        v19 = 8 * v7;
        *(_QWORD *)&v3[v19] = 0xC024000000000000;
        *(_QWORD *)&v4[v19] = 0x4024000000000000;
        v7 = v6 + 2;
        ++v6;
        --v18;
      }
      while (v18);
    }
  }
  sub_19C1D0468((uint64_t)v48, (uint64_t *)v46);
  sub_19C1D0594((uint64_t)v48, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v46[0])
  {
    v46[1] = v46[0];
    operator delete(v46[0]);
  }
  v21 = *(_BYTE **)(a2 + 64);
  v20 = *(_BYTE **)(a2 + 72);
  v42 = 0;
  v43 = 0;
  v44 = 0;
  v22 = v20 - v21;
  if (v20 != v21)
  {
    if (v22 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(v20 - v21);
    v24 = &v23[8 * (v22 >> 3)];
    v42 = v23;
    v44 = v24;
    memcpy(v23, v21, v22);
    v43 = v24;
  }
  v45 = *(_DWORD *)(a2 + 88);
  sub_19C1FF24C((uint64_t)v48, (uint64_t)&v55, (uint64_t *)&v42, (uint64_t)&v39);
  if ((void **)(a2 + 64) != &v39)
    sub_19C11EAD0((_QWORD *)(a2 + 64), (char *)v39, v40, (v40 - (_BYTE *)v39) >> 3);
  *(_DWORD *)(a2 + 88) = v41;
  v25 = (char *)v39;
  *(long double *)(a2 + 24) = exp(*(double *)v39 + *(double *)v39);
  v26 = *(_QWORD *)(a2 + 8);
  if (v26)
  {
    v27 = *(_QWORD *)(a2 + 32);
    if (v26 < 4 || (unint64_t)(v27 - (_QWORD)v25 - 8) < 0x10)
    {
      v28 = 0;
LABEL_22:
      v29 = (double *)&v25[8 * v28 + 8];
      v30 = (long double *)(v27 + 8 * v28);
      v31 = v26 - v28;
      do
      {
        v32 = *v29++;
        *v30++ = exp(v32);
        --v31;
      }
      while (v31);
      goto LABEL_24;
    }
    v28 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v33 = (__int128 *)(v25 + 8);
    v34 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v35 = *(_OWORD **)(a2 + 32);
    do
    {
      v36 = *v33++;
      v38 = exp(*((long double *)&v36 + 1));
      *(double *)&v37 = exp(*(long double *)&v36);
      *((long double *)&v37 + 1) = v38;
      *v35++ = v37;
      v34 -= 2;
    }
    while (v34);
    if (v26 != v28)
      goto LABEL_22;
  }
LABEL_24:
  sub_19C1FDE3C(a2, 1, 1);
  if (v39)
  {
    v40 = (char *)v39;
    operator delete(v39);
  }
  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  v48[0] = &unk_1E3D21150;
  sub_19C23AA14(v48[1]);
  if (v53)
  {
    v54 = v53;
    operator delete(v53);
  }
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }
}

void sub_19C1FF1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  if (__p)
  {
    operator delete(__p);
    sub_19C1CF8E8(&a29);
    _Unwind_Resume(a1);
  }
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C1FF230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  sub_19C176E10((uint64_t)&a21);
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C1FF24C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C1FF79C;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C1FF694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C1FF4A0);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

double sub_19C1FF79C(uint64_t **a1, uint64_t *a2, int **a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  double v33;
  void *__p;
  void *v35;
  char v36;
  _QWORD v37[3];
  signed int v38;
  char v39;
  void *v40;
  char *v41;
  char *v42;
  int v43;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v41 = 0;
  v42 = 0;
  v40 = 0;
  v43 = 0;
  v33 = 0.0;
  __p = 0;
  v35 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  v40 = v8;
  v41 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v42 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v43 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C1FFA90(a3, (uint64_t)&v40, 0, (uint64_t)&v33);
    v17 = v33;
    if (v36)
    {
      v31 = __p;
      if (__p)
      {
        v35 = __p;
        goto LABEL_31;
      }
    }
  }
  else
  {
    LOBYTE(v37[0]) = 0;
    v39 = 0;
    sub_19C1FFA90(a3, (uint64_t)&v40, 1, (uint64_t)&v33);
    v17 = v33;
    sub_19C1D66F8((uint64_t)v37, (uint64_t)&__p);
    if (v36 && __p)
    {
      v35 = __p;
      operator delete(__p);
    }
    v18 = v38;
    if (v38)
    {
      v19 = 0;
      v20 = v37[0];
      v21 = *a2;
      if (v38 < 4)
        goto LABEL_23;
      if ((unint64_t)(v21 - v37[0]) < 0x20)
        goto LABEL_23;
      v19 = v38 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = (__int128 *)(v37[0] + 16);
      v23 = (_OWORD *)(v21 + 16);
      v24 = v19;
      do
      {
        v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 4;
      }
      while (v24);
      if (v19 != v18)
      {
LABEL_23:
        v26 = v18 - v19;
        v27 = 8 * v19;
        v28 = (_QWORD *)(v21 + 8 * v19);
        v29 = (uint64_t *)(v20 + v27);
        do
        {
          v30 = *v29++;
          *v28++ = v30;
          --v26;
        }
        while (v26);
      }
    }
    if (v39)
    {
      v31 = (void *)v37[0];
      if (v37[0])
      {
        v37[1] = v37[0];
LABEL_31:
        operator delete(v31);
      }
    }
  }
  if (v40)
  {
    v41 = (char *)v40;
    operator delete(v40);
  }
  return v17;
}

void sub_19C1FFA18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,void *__p,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C1FFA74(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

_QWORD *sub_19C1FFA90@<X0>(int **a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char *v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  double *v11;
  long double *v12;
  unint64_t v13;
  long double v14;
  double v15;
  double v16;
  void *v17;
  int64_t v18;
  char *v19;
  char *v20;
  __int128 *v22;
  unint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  long double v27;
  _BYTE *v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  long double v33;
  char *v34;
  _QWORD v35[3];
  int v36;

  sub_19C200C28((uint64_t)&v31, *a1);
  if (v35 != (_QWORD *)a2)
    sub_19C11EAD0(v35, *(char **)a2, *(char **)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  v36 = *(_DWORD *)(a2 + 24);
  v7 = *(char **)a2;
  v33 = exp(*(double *)v7 + *(double *)v7);
  v8 = v32;
  if (v32)
  {
    v9 = v34;
    if (v32 < 4 || (unint64_t)(v34 - v7 - 8) < 0x10)
    {
      v10 = 0;
LABEL_7:
      v11 = (double *)&v7[8 * v10 + 8];
      v12 = (long double *)&v9[8 * v10];
      v13 = v8 - v10;
      do
      {
        v14 = *v11++;
        *v12++ = exp(v14);
        --v13;
      }
      while (v13);
      goto LABEL_9;
    }
    v10 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v22 = (__int128 *)(v7 + 8);
    v23 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v24 = v34;
    do
    {
      v25 = *v22++;
      v27 = exp(*((long double *)&v25 + 1));
      *(double *)&v26 = exp(*(long double *)&v25);
      *((long double *)&v26 + 1) = v27;
      *(_OWORD *)v24 = v26;
      v24 += 16;
      v23 -= 2;
    }
    while (v23);
    if (v8 != v10)
      goto LABEL_7;
  }
LABEL_9:
  sub_19C1FDE3C((uint64_t)&v31, 0, a3);
  v15 = sub_19C1FFD08((uint64_t)&v31);
  v16 = v15;
  if ((a3 & 1) != 0)
  {
    sub_19C1FFF34((uint64_t)&v31, (uint64_t)&v28);
    *(_QWORD *)(a4 + 8) = 0;
    *(double *)a4 = v16;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0;
    v17 = v28;
    v18 = v29 - v28;
    if (v29 != v28)
    {
      if (v18 < 0)
        sub_19C07DA0C();
      v19 = (char *)operator new(v29 - v28);
      *(_QWORD *)(a4 + 8) = v19;
      v20 = &v19[8 * (v18 >> 3)];
      *(_QWORD *)(a4 + 24) = v20;
      memcpy(v19, v17, v18);
      *(_QWORD *)(a4 + 16) = v20;
    }
    *(_DWORD *)(a4 + 32) = v30;
    *(_BYTE *)(a4 + 40) = 1;
    if (v17)
    {
      v29 = v17;
      operator delete(v17);
    }
  }
  else
  {
    *(double *)a4 = v15;
    *(_BYTE *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 40) = 0;
  }
  return sub_19C1EC3CC(&v31);
}

void sub_19C1FFC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1FFC94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  void **v19;
  void *v21;
  void *v22;

  v21 = *v19;
  if (*v19)
  {
    *(_QWORD *)(v18 + 16) = v21;
    operator delete(v21);
    v22 = __p;
    if (!__p)
    {
LABEL_3:
      sub_19C1EC3CC(&a18);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v22 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v22);
  sub_19C1EC3CC(&a18);
  _Unwind_Resume(a1);
}

void sub_19C1FFCE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C1FFCF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_19C1FFD08(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  double *v8;
  void *__p;
  char *v11;
  char *v12;
  int v13;
  void *__C[3];
  vDSP_Length v15;
  double *__A;
  double *v17;
  uint64_t v18;
  vDSP_Length __N;

  sub_19C1FEAFC(a1, (uint64_t)&__A);
  __C[0] = 0;
  vDSP_dotprD(__A, 1, *(const double **)(a1 + 256), 1, (double *)__C, (int)__N);
  v2 = __C[0];
  if (__A)
  {
    v17 = __A;
    operator delete(__A);
  }
  v3 = *(int *)(a1 + 220);
  if ((int)v3 >= *(_DWORD *)(a1 + 216))
    v4 = *(_DWORD *)(a1 + 216);
  else
    v4 = *(_DWORD *)(a1 + 220);
  __A = 0;
  v17 = 0;
  v18 = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = operator new(8 * v4);
    bzero(v5, 8 * v4);
    v6 = 0;
    v7 = *(_QWORD **)(a1 + 192);
    do
    {
      *((_QWORD *)v5 + v6++) = *v7;
      v7 += v3 + 1;
    }
    while (v4 != v6);
    __p = operator new(8 * v4);
    v11 = (char *)__p + 8 * v4;
    v12 = v11;
    v13 = v4;
    memcpy(__p, v5, 8 * v4);
  }
  else
  {
    v5 = 0;
    v11 = 0;
    v12 = 0;
    __p = 0;
    v13 = 0;
  }
  sub_19C1D650C((uint64_t)&__p, (uint64_t)__C);
  __A = 0;
  vDSP_sveD((const double *)__C[0], 1, (double *)&__A, (int)v15);
  v8 = __A;
  if (__C[0])
  {
    __C[1] = __C[0];
    operator delete(__C[0]);
  }
  if (__p)
  {
    v11 = (char *)__p;
    operator delete(__p);
  }
  if (v5)
    operator delete(v5);
  return (double)*(int *)(a1 + 120) * -0.918938533 - (*(double *)&v8 - *(double *)&v2 * -0.5);
}

void sub_19C1FFEAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v20;

  if (__p)
  {
    operator delete(__p);
    v20 = a9;
    if (!a9)
    {
LABEL_3:
      if (!v18)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(v18);
      goto LABEL_8;
    }
  }
  else
  {
    v20 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v20);
  if (!v18)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C1FFF18(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C1FFF34(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  double *v5;
  double *v6;
  _BYTE *v7;
  _BYTE *v8;
  int64_t v9;
  char *v10;
  char *v11;
  void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  vDSP_Length v18;
  int64_t v19;
  char *v20;
  char *v21;
  char *v22;
  unint64_t i;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  int v28;
  char *v29;
  unint64_t j;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  __int128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  const void *v68;
  int64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  double *v73;
  const void *v74;
  int64_t v75;
  char *v76;
  const double *v77;
  int v78;
  int64_t v79;
  char *v80;
  char *v81;
  const double *v82;
  int v83;
  uint64_t v84;
  char *v85;
  int64_t v86;
  char *v87;
  __int128 *v88;
  _OWORD *v89;
  unint64_t v90;
  __int128 v91;
  __int128 *v92;
  _OWORD *v93;
  unint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  vDSP_Length v98;
  void *v101;
  char *v102;
  char *v103;
  int v104;
  void *v105;
  void *v106;
  char *v107;
  int v108;
  void *__p;
  _BYTE *v110;
  _BYTE *v111;
  unint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  unint64_t v116;
  _BYTE *v117;
  char *v118;
  char *v119;
  unint64_t v120;
  double *v121;
  double *v122;
  double *v123;
  unint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  unint64_t v128;

  v121 = 0;
  v122 = 0;
  v123 = 0;
  v3 = *(_BYTE **)(a1 + 224);
  v2 = *(_BYTE **)(a1 + 232);
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (double *)operator new(v2 - v3);
    v6 = &v5[v4 >> 3];
    v121 = v5;
    v123 = v6;
    memcpy(v5, v3, v4);
    v122 = v6;
  }
  v7 = *(_BYTE **)(a1 + 256);
  v124 = *(_QWORD *)(a1 + 248);
  v106 = 0;
  v107 = 0;
  v105 = 0;
  v8 = *(_BYTE **)(a1 + 264);
  v9 = v8 - v7;
  if (v8 != v7)
  {
    if (v9 < 0)
      sub_19C07DA0C();
    v10 = (char *)operator new(v8 - v7);
    v11 = &v10[8 * (v9 >> 3)];
    v105 = v10;
    v107 = v11;
    memcpy(v10, v7, v9);
    v106 = v11;
  }
  v108 = *(_DWORD *)(a1 + 280);
  sub_19C1CE998(a1 + 256, (uint64_t)&v101);
  sub_19C1D65EC((uint64_t)&v105, (uint64_t)&v101, (uint64_t)&__p);
  v113 = 0;
  v114 = 0;
  v115 = 0;
  v12 = __p;
  v13 = v110 - (_BYTE *)__p;
  if (v110 == __p)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v110 - (_BYTE *)__p);
    v15 = &v14[8 * (v13 >> 3)];
    v113 = v14;
    v115 = v15;
    memcpy(v14, v12, v13);
    v114 = v15;
  }
  v16 = v112;
  v116 = v112;
  v17 = HIDWORD(v112);
  v18 = HIDWORD(v112) * (int)v112;
  vDSP_vsubD(v121, 1, (const double *)v14, 1, (double *)v14, 1, v18);
  v117 = 0;
  v118 = 0;
  v119 = 0;
  v19 = v15 - v14;
  if (!v19)
  {
    v20 = 0;
    v120 = v16;
    v126 = 0;
    v127 = 0;
    v125 = 0;
    if ((_DWORD)v18)
      goto LABEL_14;
LABEL_18:
    v22 = 0;
    v21 = 0;
    v128 = __PAIR64__(v17, v16);
    goto LABEL_23;
  }
  if (v19 < 0)
    sub_19C07DA0C();
  v20 = (char *)operator new(v19);
  v117 = v20;
  v119 = &v20[8 * (v19 >> 3)];
  memcpy(v20, v14, v19);
  v118 = &v20[8 * (v19 >> 3)];
  v120 = v16;
  v126 = 0;
  v127 = 0;
  v125 = 0;
  if (!(_DWORD)v18)
    goto LABEL_18;
LABEL_14:
  if ((v18 & 0x80000000) != 0)
    sub_19C07DA0C();
  v21 = (char *)operator new(8 * v18);
  v125 = v21;
  v127 = &v21[8 * v18];
  bzero(v21, 8 * v18);
  v22 = &v21[8 * v18];
  v128 = __PAIR64__(v17, v16);
  if (v18 < 4)
  {
    for (i = 0; i != v18; ++i)
LABEL_22:
      *(_QWORD *)&v21[8 * i] = *(_QWORD *)&v20[8 * i];
    goto LABEL_23;
  }
  v24 = 0;
  i = v18 & 0xFFFFFFFFFFFFFFFCLL;
  v25 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v26 = *(_OWORD *)&v20[v24 + 16];
    v27 = &v21[v24];
    *(_OWORD *)v27 = *(_OWORD *)&v20[v24];
    *((_OWORD *)v27 + 1) = v26;
    v24 += 32;
    v25 -= 4;
  }
  while (v25);
  if (i != v18)
    goto LABEL_22;
LABEL_23:
  sub_19C11EAD0(&v121, v21, v22, (v22 - v21) >> 3);
  v124 = v128;
  if (v21)
  {
    v126 = v21;
    operator delete(v21);
  }
  if (v20)
  {
    v118 = v20;
    operator delete(v20);
  }
  if (v14)
  {
    v114 = v14;
    operator delete(v14);
  }
  if (__p)
  {
    v110 = __p;
    operator delete(__p);
  }
  if (v101)
  {
    v102 = (char *)v101;
    operator delete(v101);
  }
  if (v105)
  {
    v106 = v105;
    operator delete(v105);
  }
  v28 = *(_DWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v98 = v28 + 1;
  if (v28 == -1)
  {
    *(_DWORD *)(a2 + 24) = 0;
    v96 = *(int *)(a1 + 120);
    if (!(_DWORD)v96)
      goto LABEL_125;
    goto LABEL_40;
  }
  if (v28 <= -2)
    sub_19C07DA0C();
  v29 = (char *)operator new(8 * v98);
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = &v29[8 * v98];
  *(_QWORD *)(a2 + 16) = &v29[8 * v28 + 8];
  *(_DWORD *)(a2 + 24) = v28 + 1;
  bzero(v29, 8 * v98);
  v96 = *(int *)(a1 + 120);
  if ((_DWORD)v96)
  {
LABEL_40:
    v97 = 0;
    for (j = 0; j != v96; ++j)
    {
      v31 = 0;
      v32 = 0;
      do
      {
        v33 = *(_QWORD *)(a1 + 96);
        v34 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v34)
        {
          v35 = 0;
          v110 = 0;
          v111 = 0;
          __p = 0;
          LODWORD(v112) = 0;
LABEL_72:
          v52 = 0;
          v102 = 0;
          v103 = 0;
          v101 = 0;
          v104 = 0;
          goto LABEL_76;
        }
        if ((v34 & 0x80000000) != 0)
          sub_19C07DA0C();
        v35 = operator new(8 * (int)v34);
        bzero(v35, 8 * (int)v34);
        if (v34 < 8 || (unint64_t)v35 - v33 - 8 * j * (int)v34 < 0x20)
        {
          v36 = 0;
LABEL_49:
          v37 = (int)v34 - v36;
          v38 = 8 * v36;
          v39 = (_QWORD *)v35 + v36;
          v40 = (uint64_t *)(v33 + v38 + v97 * (int)v34);
          do
          {
            v41 = *v40++;
            *v39++ = v41;
            --v37;
          }
          while (v37);
          goto LABEL_51;
        }
        v36 = (int)v34 & 0xFFFFFFFFFFFFFFFCLL;
        v88 = (__int128 *)(v33 + v97 * (int)v34 + 16);
        v89 = v35 + 1;
        v90 = v36;
        do
        {
          v91 = *v88;
          *(v89 - 1) = *(v88 - 1);
          *v89 = v91;
          v88 += 2;
          v89 += 2;
          v90 -= 4;
        }
        while (v90);
        if (v36 != (int)v34)
          goto LABEL_49;
LABEL_51:
        __p = 0;
        v110 = 0;
        v111 = 0;
        LODWORD(v112) = v34;
        v42 = operator new(8 * (int)v34);
        bzero(v42, 8 * (int)v34);
        __p = v42;
        v110 = (char *)v42 + 8 * (int)v34;
        v111 = v110;
        if ((v34 - 6) >= 0x7FFFFFFB)
        {
          v43 = 0;
LABEL_58:
          v48 = v34 - v43;
          v49 = v43 << 32;
          do
          {
            *(_QWORD *)((char *)v42 + (v49 >> 29)) = *(_QWORD *)((char *)v35 + (v49 >> 29));
            v49 += 0x100000000;
            --v48;
          }
          while (v48);
          goto LABEL_60;
        }
        v43 = v34 & 0xFFFFFFFC;
        v44 = v42 + 1;
        v45 = v35 + 1;
        v46 = v43;
        do
        {
          v47 = *v45;
          *(v44 - 1) = *(v45 - 1);
          *v44 = v47;
          v44 += 2;
          v45 += 2;
          v46 -= 4;
        }
        while (v46);
        if (v43 != v34)
          goto LABEL_58;
LABEL_60:
        v50 = *(_QWORD *)(a1 + 96);
        v51 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v51)
          goto LABEL_72;
        if ((v51 & 0x80000000) != 0)
          sub_19C07DA0C();
        v52 = operator new(8 * (int)v51);
        bzero(v52, 8 * (int)v51);
        if (v51 < 8 || (unint64_t)v52 - v50 - 8 * v32 * (int)v51 < 0x20)
        {
          v53 = 0;
LABEL_65:
          v54 = (int)v51 - v53;
          v55 = 8 * v53;
          v56 = (_QWORD *)v52 + v53;
          v57 = (uint64_t *)(v50 + v55 + v31 * (int)v51);
          do
          {
            v58 = *v57++;
            *v56++ = v58;
            --v54;
          }
          while (v54);
          goto LABEL_67;
        }
        v53 = (int)v51 & 0xFFFFFFFFFFFFFFFCLL;
        v92 = (__int128 *)(v50 + v31 * (int)v51 + 16);
        v93 = v52 + 1;
        v94 = v53;
        do
        {
          v95 = *v92;
          *(v93 - 1) = *(v92 - 1);
          *v93 = v95;
          v92 += 2;
          v93 += 2;
          v94 -= 4;
        }
        while (v94);
        if (v53 != (int)v51)
          goto LABEL_65;
LABEL_67:
        v101 = 0;
        v102 = 0;
        v103 = 0;
        v104 = v51;
        v59 = (char *)operator new(8 * (int)v51);
        bzero(v59, 8 * (int)v51);
        v101 = v59;
        v102 = &v59[8 * (int)v51];
        v103 = v102;
        if ((v51 - 6) >= 0x7FFFFFFB)
        {
          v61 = 0;
LABEL_74:
          v64 = v51 - v61;
          v65 = v61 << 32;
          do
          {
            *(_QWORD *)&v59[v65 >> 29] = *(_QWORD *)((char *)v52 + (v65 >> 29));
            v65 += 0x100000000;
            --v64;
          }
          while (v64);
          goto LABEL_76;
        }
        v60 = 0;
        v61 = v51 & 0xFFFFFFFC;
        do
        {
          v62 = v52[v60 / 0x10 + 1];
          v63 = &v59[v60];
          *(_OWORD *)v63 = v52[v60 / 0x10];
          *((_OWORD *)v63 + 1) = v62;
          v60 += 32;
        }
        while (((8 * v51) & 0x7FFFFFFE0) != v60);
        if (v61 != v51)
          goto LABEL_74;
LABEL_76:
        sub_19C201158(a1 + 8, (uint64_t)&__p, (const double **)&v101, (uint64_t)&v117);
        if (v101)
        {
          v102 = (char *)v101;
          operator delete(v101);
        }
        if (v52)
          operator delete(v52);
        if (__p)
        {
          v110 = __p;
          operator delete(__p);
        }
        if (v35)
          operator delete(v35);
        if (j == v32)
        {
          v66 = SHIDWORD(v124);
          v67 = v121;
          v68 = v117;
          v69 = v118 - v117;
          if (v118 == v117)
          {
            v71 = 0;
            v70 = 0;
          }
          else
          {
            if (v69 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v71 = &v70[8 * (v69 >> 3)];
            memcpy(v70, v68, v69);
          }
          v77 = &v67[j + j * v66];
          v78 = v120;
          vDSP_vsmulD((const double *)v70, 1, v77, (double *)v70, 1, (int)v120);
          v79 = v71 - v70;
          if (v79)
          {
            if (v79 < 0)
              sub_19C07DA0C();
            v80 = (char *)operator new(v79);
            v81 = &v80[8 * (v79 >> 3)];
            memcpy(v80, v70, v79);
          }
          else
          {
            v81 = 0;
            v80 = 0;
          }
          __p = (void *)0x3FE0000000000000;
          vDSP_vsmulD((const double *)v80, 1, (const double *)&__p, (double *)v80, 1, v78);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v86 = v81 - v80;
          if (v81 == v80)
          {
            v87 = 0;
          }
          else
          {
            if (v86 < 0)
              sub_19C07DA0C();
            v87 = (char *)operator new(v81 - v80);
            v125 = v87;
            v127 = &v87[8 * (v86 >> 3)];
            memcpy(v87, v80, v86);
            v126 = &v87[8 * (v86 >> 3)];
          }
          LODWORD(v128) = v78;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v87, 1, *(double **)a2, 1, v98);
          if (v87)
            operator delete(v87);
          if (v80)
            operator delete(v80);
          if (v70)
            goto LABEL_114;
        }
        else
        {
          v72 = SHIDWORD(v124);
          v73 = v121;
          v74 = v117;
          v75 = v118 - v117;
          if (v118 == v117)
          {
            v76 = 0;
            v70 = 0;
          }
          else
          {
            if (v75 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v76 = &v70[8 * (v75 >> 3)];
            memcpy(v70, v74, v75);
          }
          v82 = &v73[v32 + j * v72];
          v83 = v120;
          vDSP_vsmulD((const double *)v70, 1, v82, (double *)v70, 1, (int)v120);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v84 = v76 - v70;
          if (v76 == v70)
          {
            v85 = 0;
          }
          else
          {
            if (v84 < 0)
              sub_19C07DA0C();
            v85 = (char *)operator new(v76 - v70);
            v125 = v85;
            v127 = &v85[8 * (v84 >> 3)];
            memcpy(v85, v70, v76 - v70);
            v126 = &v85[8 * (v84 >> 3)];
          }
          LODWORD(v128) = v83;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v85, 1, *(double **)a2, 1, v98);
          if (v85)
            operator delete(v85);
          if (v70)
LABEL_114:
            operator delete(v70);
        }
        if (v117)
        {
          v118 = v117;
          operator delete(v117);
        }
        ++v32;
        v31 += 8;
      }
      while (v32 <= j);
      v97 += 8;
    }
  }
LABEL_125:
  if (v121)
  {
    v122 = v121;
    operator delete(v121);
  }
}

void sub_19C200980(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v15;

  v15 = *(void **)a14;
  if (*(_QWORD *)a14)
  {
    *(_QWORD *)(a14 + 8) = v15;
    operator delete(v15);
  }
  sub_19C07AF7C(a1);
}

void sub_19C2009A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37)
{
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v42;
  void *v43;
  void *v44;

  if (v39)
    operator delete(v39);
  if (v38)
  {
    *(_QWORD *)(v40 - 176) = v38;
    operator delete(v38);
  }
  if (v37)
  {
    *(_QWORD *)(v40 - 208) = v37;
    operator delete(v37);
  }
  if (__p)
  {
    operator delete(__p);
    v42 = a28;
    if (!a28)
    {
LABEL_9:
      v43 = a32;
      if (!a32)
      {
LABEL_14:
        v44 = *(void **)(v40 - 152);
        if (v44)
        {
          *(_QWORD *)(v40 - 144) = v44;
          operator delete(v44);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_13:
      operator delete(v43);
      goto LABEL_14;
    }
  }
  else
  {
    v42 = a28;
    if (!a28)
      goto LABEL_9;
  }
  operator delete(v42);
  v43 = a32;
  if (!a32)
    goto LABEL_14;
  goto LABEL_13;
}

void sub_19C200BD8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37)
{
  uint64_t v37;
  void *v38;
  void *v39;

  if (__p)
  {
    operator delete(__p);
    if (!v38)
    {
LABEL_3:
      v39 = a36;
      if (!a36)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v38)
  {
    goto LABEL_3;
  }
  operator delete(v38);
  v39 = a36;
  if (!a36)
  {
LABEL_4:
    if (v37)
      goto LABEL_12;
    goto LABEL_13;
  }
LABEL_8:
  operator delete(v39);
  if (v37)
LABEL_12:
    JUMPOUT(0x19C200B84);
LABEL_13:
  JUMPOUT(0x19C200B88);
}

uint64_t sub_19C200C28(uint64_t a1, int *a2)
{
  int v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;
  int v16;
  _BYTE *v17;
  _BYTE *v18;
  int64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  int64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  int64_t v31;
  char *v32;
  char *v33;
  _BYTE *v34;
  _BYTE *v35;
  int64_t v36;
  char *v37;
  char *v38;
  _BYTE *v39;
  _BYTE *v40;
  int64_t v41;
  char *v42;
  char *v43;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  sub_19C201030(a1 + 8, (uint64_t)(a2 + 2));
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  v6 = (_BYTE *)*((_QWORD *)a2 + 12);
  v5 = (_BYTE *)*((_QWORD *)a2 + 13);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 96) = v8;
    *(_QWORD *)(a1 + 104) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 112) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 104) = v9;
  }
  v10 = *((_QWORD *)a2 + 15);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 120) = v10;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  v12 = (_BYTE *)*((_QWORD *)a2 + 16);
  v11 = (_BYTE *)*((_QWORD *)a2 + 17);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 128) = v14;
    *(_QWORD *)(a1 + 136) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 144) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 136) = v15;
  }
  v16 = a2[38];
  *(_QWORD *)(a1 + 160) = 0;
  *(_DWORD *)(a1 + 152) = v16;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  v18 = (_BYTE *)*((_QWORD *)a2 + 20);
  v17 = (_BYTE *)*((_QWORD *)a2 + 21);
  v19 = v17 - v18;
  if (v17 != v18)
  {
    if (v19 < 0)
      sub_19C07DA0C();
    v20 = (char *)operator new(v17 - v18);
    *(_QWORD *)(a1 + 160) = v20;
    *(_QWORD *)(a1 + 168) = v20;
    v21 = &v20[8 * (v19 >> 3)];
    *(_QWORD *)(a1 + 176) = v21;
    memcpy(v20, v18, v19);
    *(_QWORD *)(a1 + 168) = v21;
  }
  v22 = *((_QWORD *)a2 + 23);
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 184) = v22;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  v24 = (_BYTE *)*((_QWORD *)a2 + 24);
  v23 = (_BYTE *)*((_QWORD *)a2 + 25);
  v25 = v23 - v24;
  if (v23 != v24)
  {
    if (v25 < 0)
      sub_19C07DA0C();
    v26 = (char *)operator new(v23 - v24);
    *(_QWORD *)(a1 + 192) = v26;
    *(_QWORD *)(a1 + 200) = v26;
    v27 = &v26[8 * (v25 >> 3)];
    *(_QWORD *)(a1 + 208) = v27;
    memcpy(v26, v24, v25);
    *(_QWORD *)(a1 + 200) = v27;
  }
  v28 = *((_QWORD *)a2 + 27);
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 216) = v28;
  *(_QWORD *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 240) = 0;
  v30 = (_BYTE *)*((_QWORD *)a2 + 28);
  v29 = (_BYTE *)*((_QWORD *)a2 + 29);
  v31 = v29 - v30;
  if (v29 != v30)
  {
    if (v31 < 0)
      sub_19C07DA0C();
    v32 = (char *)operator new(v29 - v30);
    *(_QWORD *)(a1 + 224) = v32;
    *(_QWORD *)(a1 + 232) = v32;
    v33 = &v32[8 * (v31 >> 3)];
    *(_QWORD *)(a1 + 240) = v33;
    memcpy(v32, v30, v31);
    *(_QWORD *)(a1 + 232) = v33;
  }
  *(_QWORD *)(a1 + 248) = *((_QWORD *)a2 + 31);
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0;
  v35 = (_BYTE *)*((_QWORD *)a2 + 32);
  v34 = (_BYTE *)*((_QWORD *)a2 + 33);
  v36 = v34 - v35;
  if (v34 != v35)
  {
    if (v36 < 0)
      sub_19C07DA0C();
    v37 = (char *)operator new(v34 - v35);
    *(_QWORD *)(a1 + 256) = v37;
    *(_QWORD *)(a1 + 264) = v37;
    v38 = &v37[8 * (v36 >> 3)];
    *(_QWORD *)(a1 + 272) = v38;
    memcpy(v37, v35, v36);
    *(_QWORD *)(a1 + 264) = v38;
  }
  *(_DWORD *)(a1 + 280) = a2[70];
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 288) = 0;
  v40 = (_BYTE *)*((_QWORD *)a2 + 36);
  v39 = (_BYTE *)*((_QWORD *)a2 + 37);
  v41 = v39 - v40;
  if (v39 != v40)
  {
    if (v41 < 0)
      sub_19C07DA0C();
    v42 = (char *)operator new(v39 - v40);
    *(_QWORD *)(a1 + 288) = v42;
    *(_QWORD *)(a1 + 296) = v42;
    v43 = &v42[8 * (v41 >> 3)];
    *(_QWORD *)(a1 + 304) = v43;
    memcpy(v42, v40, v41);
    *(_QWORD *)(a1 + 296) = v43;
  }
  *(_DWORD *)(a1 + 312) = a2[78];
  return a1;
}

void sub_19C200F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, _QWORD *a10)
{
  _QWORD *v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  v18 = *v16;
  if (*v16)
  {
    v10[37] = v18;
    operator delete(v18);
    v19 = *a9;
    if (!*a9)
    {
LABEL_3:
      v20 = *v15;
      if (!*v15)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else
  {
    v19 = *a9;
    if (!*a9)
      goto LABEL_3;
  }
  v10[33] = v19;
  operator delete(v19);
  v20 = *v15;
  if (!*v15)
  {
LABEL_4:
    v21 = *v14;
    if (!*v14)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v10[29] = v20;
  operator delete(v20);
  v21 = *v14;
  if (!*v14)
  {
LABEL_5:
    v22 = *v13;
    if (!*v13)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  v10[25] = v21;
  operator delete(v21);
  v22 = *v13;
  if (!*v13)
  {
LABEL_6:
    v23 = *v12;
    if (!*v12)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  v10[21] = v22;
  operator delete(v22);
  v23 = *v12;
  if (!*v12)
  {
LABEL_7:
    v24 = *v11;
    if (!*v11)
      goto LABEL_8;
    goto LABEL_15;
  }
LABEL_14:
  v10[17] = v23;
  operator delete(v23);
  v24 = *v11;
  if (!*v11)
  {
LABEL_8:
    sub_19C1E8600(a10);
    _Unwind_Resume(a1);
  }
LABEL_15:
  v10[13] = v24;
  operator delete(v24);
  sub_19C1E8600(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_19C201030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v6 = *(_BYTE **)(a2 + 24);
  v5 = *(_BYTE **)(a2 + 32);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 40) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 32) = v9;
  }
  v10 = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v12 = *(_BYTE **)(a2 + 56);
  v11 = *(_BYTE **)(a2 + 64);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 56) = v14;
    *(_QWORD *)(a1 + 64) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 72) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 64) = v15;
  }
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

void sub_19C201124(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void *v5;
  void *v6;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 64) = v5;
    operator delete(v5);
  }
  v6 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C201158(uint64_t a1@<X0>, uint64_t a2@<X1>, const double **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  double *v9;
  double *v10;
  int v11;
  int v12;
  uint64_t v13;
  const void *v14;
  int64_t v15;
  char *v16;
  char *v17;
  int v18;
  int64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  signed int v25;
  float64x2_t *v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  _OWORD *f64;
  double v33;
  double v34;
  unint64_t v35;
  unint64_t v36;
  double *v37;
  double *v38;
  unint64_t v39;
  double v40;
  float64x2_t *v41;
  float64x2_t *v42;
  unint64_t v43;
  float64x2_t v44;
  void *v45;
  void *v46;
  char *v47;
  int v48;
  void *__p[3];
  signed int v50;
  float64x2_t *v51;
  float64x2_t *v52;
  char *v53;
  vDSP_Length __N;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_DWORD *)a1;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v51 = 0;
  v52 = 0;
  v53 = 0;
  v12 = v11 + 1;
  if (v11 != -1)
  {
    if (v11 <= -2)
      sub_19C07DA0C();
    v10 = (double *)operator new(8 * v12);
    v8 = (uint64_t)&v10[v11 + 1];
    bzero(v10, 8 * v12);
    v9 = &v10[v12];
  }
  *(_QWORD *)a4 = v10;
  *(_QWORD *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = v8;
  *(_DWORD *)(a4 + 24) = v12;
  v14 = *(const void **)a2;
  v13 = *(_QWORD *)(a2 + 8);
  v15 = v13 - *(_QWORD *)a2;
  if (v13 == *(_QWORD *)a2)
  {
    v17 = 0;
    v16 = 0;
  }
  else
  {
    if (v15 < 0)
      sub_19C07DA0C();
    v16 = (char *)operator new(v13 - *(_QWORD *)a2);
    v17 = &v16[8 * (v15 >> 3)];
    memcpy(v16, v14, v15);
  }
  v18 = *(_DWORD *)(a2 + 24);
  vDSP_vsubD(*a3, 1, (const double *)v16, 1, (double *)v16, 1, v18);
  v19 = v17 - v16;
  if (v17 == v16)
  {
    v21 = 0;
    v20 = 0;
  }
  else
  {
    if (v19 < 0)
      sub_19C07DA0C();
    v20 = (char *)operator new(v17 - v16);
    v21 = &v20[8 * (v19 >> 3)];
    memcpy(v20, v16, v19);
  }
  vDSP_vdivD(*(const double **)(a1 + 24), 1, (const double *)v20, 1, (double *)v20, 1, v18);
  v45 = 0;
  v46 = 0;
  v47 = 0;
  v22 = v21 - v20;
  if (v21 != v20)
  {
    if (v22 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(v21 - v20);
    v24 = &v23[8 * (v22 >> 3)];
    v45 = v23;
    v47 = v24;
    memcpy(v23, v20, v21 - v20);
    v46 = v24;
  }
  v48 = v18;
  sub_19C1EFF00((uint64_t)&v45, (uint64_t)__p);
  v25 = v50;
  v52 = 0;
  v53 = 0;
  v51 = 0;
  if (v50)
  {
    if (v50 < 0)
      sub_19C07DA0C();
    v26 = (float64x2_t *)operator new(8 * v50);
    v51 = v26;
    v53 = (char *)&v26->f64[v25];
    bzero(v26, 8 * v25);
    v27 = 0;
    v52 = (float64x2_t *)((char *)v26 + 8 * v25);
    LODWORD(__N) = v25;
    v28 = __p[0];
    if (v25 < 4)
      goto LABEL_52;
    if ((unint64_t)((char *)v26 - (char *)__p[0]) < 0x20)
      goto LABEL_52;
    v29 = 0;
    v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
    v30 = v27;
    do
    {
      v31 = *(_OWORD *)&v28[v29 / 8 + 2];
      f64 = (_OWORD *)v26[v29 / 0x10].f64;
      *f64 = *(_OWORD *)&v28[v29 / 8];
      f64[1] = v31;
      v29 += 32;
      v30 -= 4;
    }
    while (v30);
    if (v27 != v25)
    {
LABEL_52:
      do
      {
        *(_QWORD *)&v26->f64[v27] = v28[v27];
        ++v27;
      }
      while (v25 != v27);
    }
  }
  else
  {
    v26 = 0;
    LODWORD(__N) = 0;
    v28 = __p[0];
    if (!__p[0])
      goto LABEL_26;
  }
  __p[1] = v28;
  operator delete(v28);
LABEL_26:
  if (v45)
  {
    v46 = v45;
    operator delete(v45);
  }
  if (v20)
    operator delete(v20);
  if (v16)
    operator delete(v16);
  v33 = *(double *)(a1 + 16);
  __p[0] = 0;
  vDSP_sveD(v26->f64, 1, (double *)__p, (int)__N);
  v34 = exp(*(double *)__p * -0.5) * v33;
  *v10 = v34 + v34;
  v35 = *(_QWORD *)a1;
  if (*(_QWORD *)a1)
  {
    if (v35 >= 4 && (unint64_t)((char *)v10 - (char *)v26 + 8) >= 0x20)
    {
      v36 = v35 & 0xFFFFFFFFFFFFFFFCLL;
      v41 = (float64x2_t *)(v10 + 3);
      v42 = v26 + 1;
      v43 = v35 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v44 = vmulq_n_f64(*v42, v34);
        v41[-1] = vmulq_n_f64(v42[-1], v34);
        *v41 = v44;
        v41 += 2;
        v42 += 2;
        v43 -= 4;
      }
      while (v43);
      if (v35 == v36)
        goto LABEL_44;
    }
    else
    {
      v36 = 0;
    }
    v37 = &v10[v36 + 1];
    v38 = &v26->f64[v36];
    v39 = v35 - v36;
    do
    {
      v40 = *v38++;
      *v37++ = v40 * v34;
      --v39;
    }
    while (v39);
LABEL_44:
    v52 = v26;
    operator delete(v26);
    return;
  }
  if (v26)
    goto LABEL_44;
}

void sub_19C201558(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  void *v26;
  uint64_t v27;
  void *v28;

  if (v28)
    operator delete(v28);
  if (v26)
  {
    *(_QWORD *)(v27 + 8) = v26;
    operator delete(v26);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C201600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!a9)
    JUMPOUT(0x19C2015E8);
  JUMPOUT(0x19C2015DCLL);
}

BOOL sub_19C201610(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v5;
  int v6;
  int v8;
  _BOOL4 v9;
  std::runtime_error *exception;

  if (*(_BYTE *)(a1 + 8))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Early stopping already requested.");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  v3 = *(_DWORD *)(a1 + 12);
  if (v3 == -1)
    return 0;
  v6 = *a2;
  v5 = (uint64_t)(a2 + 2);
  if (v6 == 1 || *(double *)(a1 + 120) < *((double *)a2 + 13) - *(double *)(a1 + 16))
  {
    sub_19C1C9C8C(a1 + 24, v5);
    *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 13);
    *(_DWORD *)(a1 + 128) = 0;
    *(_BYTE *)(a1 + 8) = 0;
    return 0;
  }
  else
  {
    v8 = *(_DWORD *)(a1 + 128);
    *(_DWORD *)(a1 + 128) = v8 + 1;
    v9 = v8 >= v3;
    *(_BYTE *)(a1 + 8) = v9;
    return v9;
  }
}

void sub_19C2016F8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C20170C(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  char **v22;
  void *v23;
  void **v24;
  void **v25;
  void *v26;
  void **v27;
  void **v28;
  void *v29;
  void *v30;
  void **v31;
  void *v32;
  void **v33;
  void *__p;
  char **v35;
  char v36;
  void *v37;
  void **v38;
  void *v39;
  void **v40;
  void *v41;
  char **v42;
  char v43;
  uint64_t v44;
  _BYTE v45[24];
  _BYTE *v46;
  _BYTE v47[24];
  _BYTE *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  sub_19C1C2D98((uint64_t)&v30, a1);
  sub_19C1C2D98((uint64_t)&v37, (uint64_t)&v30);
  sub_19C2026F0((uint64_t)&v37, &v44);
  if (v36)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v35;
      v7 = __p;
      if (v35 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v35 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v32;
  if (v32)
  {
    v9 = v33;
    v10 = v32;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v32;
    }
    v33 = v8;
    operator delete(v10);
  }
  v11 = (void **)v30;
  if (v30)
  {
    v12 = v31;
    v13 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v30;
    }
    v31 = v11;
    operator delete(v13);
  }
  v14 = a2[3];
  if (!v14)
    goto LABEL_26;
  if ((_QWORD *)v14 != a2)
  {
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
LABEL_26:
    v46 = (_BYTE *)v14;
    goto LABEL_28;
  }
  v46 = v45;
  (*(void (**)(_QWORD *, _BYTE *))(*a2 + 24))(a2, v45);
LABEL_28:
  v15 = v47;
  v16 = a2[7];
  if (!v16)
  {
LABEL_31:
    v48 = (_BYTE *)v16;
    goto LABEL_33;
  }
  if ((_QWORD *)v16 != a2 + 4)
  {
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
    goto LABEL_31;
  }
  v48 = v47;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v16 + 24))(v16, v47);
LABEL_33:
  sub_19C202348((uint64_t)&v37, (uint64_t)v45, a3);
  if (v48 == v47)
  {
    v17 = 4;
  }
  else
  {
    if (!v48)
      goto LABEL_38;
    v17 = 5;
    v15 = v48;
  }
  (*(void (**)(_QWORD *))(*v15 + 8 * v17))(v15);
LABEL_38:
  v18 = v46;
  if (v46 == v45)
  {
    v19 = 4;
    v18 = v45;
  }
  else
  {
    if (!v46)
      goto LABEL_43;
    v19 = 5;
  }
  (*(void (**)(void))(*v18 + 8 * v19))();
LABEL_43:
  v20 = v44;
  v44 = 0;
  if (v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
  if (v43)
  {
    v21 = (char **)v41;
    if (v41)
    {
      v22 = v42;
      v23 = v41;
      if (v42 != v41)
      {
        do
          v22 = sub_19C17B808(v22 - 12);
        while (v22 != v21);
        v23 = v41;
      }
      v42 = v21;
      operator delete(v23);
    }
  }
  v24 = (void **)v39;
  if (v39)
  {
    v25 = v40;
    v26 = v39;
    if (v40 != v39)
    {
      do
      {
        if (*((char *)v25 - 17) < 0)
          operator delete(*(v25 - 5));
        v25 -= 5;
      }
      while (v25 != v24);
      v26 = v39;
    }
    v40 = v24;
    operator delete(v26);
  }
  v27 = (void **)v37;
  if (v37)
  {
    v28 = v38;
    v29 = v37;
    if (v38 != v37)
    {
      do
      {
        if (*((char *)v28 - 25) < 0)
          operator delete(*(v28 - 6));
        v28 -= 6;
      }
      while (v28 != v27);
      v29 = v37;
    }
    v38 = v27;
    operator delete(v29);
  }
}

void sub_19C201A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = *(_QWORD **)(v39 - 96);
  if (v41 == (_QWORD *)(v39 - 120))
  {
    v42 = 4;
    v41 = (_QWORD *)(v39 - 120);
  }
  else
  {
    if (!v41)
    {
      v43 = a39;
      a39 = 0;
      if (v43)
        goto LABEL_8;
      goto LABEL_5;
    }
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
  v43 = a39;
  a39 = 0;
  if (v43)
  {
LABEL_8:
    (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
    sub_19C1C2E88((uint64_t)&a24);
    _Unwind_Resume(a1);
  }
LABEL_5:
  sub_19C1C2E88((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_19C201AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  sub_19C1C2E88((uint64_t)&a24);
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C201B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C201B20(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  char **v22;
  void *v23;
  void **v24;
  void **v25;
  void *v26;
  void **v27;
  void **v28;
  void *v29;
  void *v30;
  void **v31;
  void *v32;
  void **v33;
  void *__p;
  char **v35;
  char v36;
  void *v37;
  void **v38;
  void *v39;
  void **v40;
  void *v41;
  char **v42;
  char v43;
  uint64_t v44;
  _BYTE v45[24];
  _BYTE *v46;
  _BYTE v47[24];
  _BYTE *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  sub_19C1C2D98((uint64_t)&v30, a1);
  sub_19C1C2D98((uint64_t)&v37, (uint64_t)&v30);
  sub_19C20B1C4((uint64_t)&v37, &v44);
  if (v36)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v35;
      v7 = __p;
      if (v35 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v35 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v32;
  if (v32)
  {
    v9 = v33;
    v10 = v32;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v32;
    }
    v33 = v8;
    operator delete(v10);
  }
  v11 = (void **)v30;
  if (v30)
  {
    v12 = v31;
    v13 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v30;
    }
    v31 = v11;
    operator delete(v13);
  }
  v14 = a2[3];
  if (!v14)
    goto LABEL_26;
  if ((_QWORD *)v14 != a2)
  {
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
LABEL_26:
    v46 = (_BYTE *)v14;
    goto LABEL_28;
  }
  v46 = v45;
  (*(void (**)(_QWORD *, _BYTE *))(*a2 + 24))(a2, v45);
LABEL_28:
  v15 = v47;
  v16 = a2[7];
  if (!v16)
  {
LABEL_31:
    v48 = (_BYTE *)v16;
    goto LABEL_33;
  }
  if ((_QWORD *)v16 != a2 + 4)
  {
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
    goto LABEL_31;
  }
  v48 = v47;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v16 + 24))(v16, v47);
LABEL_33:
  sub_19C20AE1C((uint64_t)&v37, (uint64_t)v45, a3);
  if (v48 == v47)
  {
    v17 = 4;
  }
  else
  {
    if (!v48)
      goto LABEL_38;
    v17 = 5;
    v15 = v48;
  }
  (*(void (**)(_QWORD *))(*v15 + 8 * v17))(v15);
LABEL_38:
  v18 = v46;
  if (v46 == v45)
  {
    v19 = 4;
    v18 = v45;
  }
  else
  {
    if (!v46)
      goto LABEL_43;
    v19 = 5;
  }
  (*(void (**)(void))(*v18 + 8 * v19))();
LABEL_43:
  v20 = v44;
  v44 = 0;
  if (v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
  if (v43)
  {
    v21 = (char **)v41;
    if (v41)
    {
      v22 = v42;
      v23 = v41;
      if (v42 != v41)
      {
        do
          v22 = sub_19C17B808(v22 - 12);
        while (v22 != v21);
        v23 = v41;
      }
      v42 = v21;
      operator delete(v23);
    }
  }
  v24 = (void **)v39;
  if (v39)
  {
    v25 = v40;
    v26 = v39;
    if (v40 != v39)
    {
      do
      {
        if (*((char *)v25 - 17) < 0)
          operator delete(*(v25 - 5));
        v25 -= 5;
      }
      while (v25 != v24);
      v26 = v39;
    }
    v40 = v24;
    operator delete(v26);
  }
  v27 = (void **)v37;
  if (v37)
  {
    v28 = v38;
    v29 = v37;
    if (v38 != v37)
    {
      do
      {
        if (*((char *)v28 - 25) < 0)
          operator delete(*(v28 - 6));
        v28 -= 6;
      }
      while (v28 != v27);
      v29 = v37;
    }
    v38 = v27;
    operator delete(v29);
  }
}

void sub_19C201E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = *(_QWORD **)(v39 - 96);
  if (v41 == (_QWORD *)(v39 - 120))
  {
    v42 = 4;
    v41 = (_QWORD *)(v39 - 120);
  }
  else
  {
    if (!v41)
    {
      v43 = a39;
      a39 = 0;
      if (v43)
        goto LABEL_8;
      goto LABEL_5;
    }
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
  v43 = a39;
  a39 = 0;
  if (v43)
  {
LABEL_8:
    (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
    sub_19C1C2E88((uint64_t)&a24);
    _Unwind_Resume(a1);
  }
LABEL_5:
  sub_19C1C2E88((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_19C201F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  sub_19C1C2E88((uint64_t)&a24);
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C201F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C201F34(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  char **v22;
  void *v23;
  void **v24;
  void **v25;
  void *v26;
  void **v27;
  void **v28;
  void *v29;
  void *v30;
  void **v31;
  void *v32;
  void **v33;
  void *__p;
  char **v35;
  char v36;
  void *v37;
  void **v38;
  void *v39;
  void **v40;
  void *v41;
  char **v42;
  char v43;
  uint64_t v44;
  _BYTE v45[24];
  _BYTE *v46;
  _BYTE v47[24];
  _BYTE *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  sub_19C1C2D98((uint64_t)&v30, a1);
  sub_19C1C2D98((uint64_t)&v37, (uint64_t)&v30);
  sub_19C213D10((uint64_t)&v37, &v44);
  if (v36)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v35;
      v7 = __p;
      if (v35 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v35 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v32;
  if (v32)
  {
    v9 = v33;
    v10 = v32;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v32;
    }
    v33 = v8;
    operator delete(v10);
  }
  v11 = (void **)v30;
  if (v30)
  {
    v12 = v31;
    v13 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v30;
    }
    v31 = v11;
    operator delete(v13);
  }
  v14 = a2[3];
  if (!v14)
    goto LABEL_26;
  if ((_QWORD *)v14 != a2)
  {
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
LABEL_26:
    v46 = (_BYTE *)v14;
    goto LABEL_28;
  }
  v46 = v45;
  (*(void (**)(_QWORD *, _BYTE *))(*a2 + 24))(a2, v45);
LABEL_28:
  v15 = v47;
  v16 = a2[7];
  if (!v16)
  {
LABEL_31:
    v48 = (_BYTE *)v16;
    goto LABEL_33;
  }
  if ((_QWORD *)v16 != a2 + 4)
  {
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
    goto LABEL_31;
  }
  v48 = v47;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v16 + 24))(v16, v47);
LABEL_33:
  sub_19C213968((uint64_t)&v37, (uint64_t)v45, a3);
  if (v48 == v47)
  {
    v17 = 4;
  }
  else
  {
    if (!v48)
      goto LABEL_38;
    v17 = 5;
    v15 = v48;
  }
  (*(void (**)(_QWORD *))(*v15 + 8 * v17))(v15);
LABEL_38:
  v18 = v46;
  if (v46 == v45)
  {
    v19 = 4;
    v18 = v45;
  }
  else
  {
    if (!v46)
      goto LABEL_43;
    v19 = 5;
  }
  (*(void (**)(void))(*v18 + 8 * v19))();
LABEL_43:
  v20 = v44;
  v44 = 0;
  if (v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
  if (v43)
  {
    v21 = (char **)v41;
    if (v41)
    {
      v22 = v42;
      v23 = v41;
      if (v42 != v41)
      {
        do
          v22 = sub_19C17B808(v22 - 12);
        while (v22 != v21);
        v23 = v41;
      }
      v42 = v21;
      operator delete(v23);
    }
  }
  v24 = (void **)v39;
  if (v39)
  {
    v25 = v40;
    v26 = v39;
    if (v40 != v39)
    {
      do
      {
        if (*((char *)v25 - 17) < 0)
          operator delete(*(v25 - 5));
        v25 -= 5;
      }
      while (v25 != v24);
      v26 = v39;
    }
    v40 = v24;
    operator delete(v26);
  }
  v27 = (void **)v37;
  if (v37)
  {
    v28 = v38;
    v29 = v37;
    if (v38 != v37)
    {
      do
      {
        if (*((char *)v28 - 25) < 0)
          operator delete(*(v28 - 6));
        v28 -= 6;
      }
      while (v28 != v27);
      v29 = v37;
    }
    v38 = v27;
    operator delete(v29);
  }
}

void sub_19C20226C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = *(_QWORD **)(v39 - 96);
  if (v41 == (_QWORD *)(v39 - 120))
  {
    v42 = 4;
    v41 = (_QWORD *)(v39 - 120);
  }
  else
  {
    if (!v41)
    {
      v43 = a39;
      a39 = 0;
      if (v43)
        goto LABEL_8;
      goto LABEL_5;
    }
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
  v43 = a39;
  a39 = 0;
  if (v43)
  {
LABEL_8:
    (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
    sub_19C1C2E88((uint64_t)&a24);
    _Unwind_Resume(a1);
  }
LABEL_5:
  sub_19C1C2E88((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_19C202314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  sub_19C1C2E88((uint64_t)&a24);
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19C202330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C1C2E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char **sub_19C202348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  BOOL v18;
  void *v20;
  _BYTE v21[4];
  _BYTE v22[12];
  _OWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  double v26;
  char *v27[2];
  int v28;
  char *v29[12];
  BOOL (**v30)(uint64_t, _DWORD *);
  char v31;
  int v32;
  BOOL (**v33)(uint64_t, int *);
  char v34;
  uint64_t v35;
  int v36;
  uint64_t *v37[13];
  int v38;

  v6 = *(_DWORD *)(a1 + 56);
  v7 = *(_DWORD *)(a1 + 60);
  v8 = *(_QWORD *)(a1 + 64);
  v21[0] = 0;
  *(_DWORD *)v22 = v7;
  *(_QWORD *)&v22[4] = v8;
  memset(v23, 0, sizeof(v23));
  v24 = v25;
  v25[0] = 0;
  v26 = 0.0;
  v27[0] = 0;
  v25[1] = 0;
  v25[2] = &v26;
  v28 = 0;
  v31 = 0;
  v30 = (BOOL (**)(uint64_t, _DWORD *))&unk_1E3D21888;
  v32 = v6;
  v34 = 0;
  v36 = HIDWORD(v8);
  v35 = *(_QWORD *)v22;
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D21948;
  sub_19C1C5D14(v37, (uint64_t)v23);
  v37[12] = (uint64_t *)v27[1];
  v38 = v28;
  v20 = &unk_1E3D21948;
  sub_19C17B808((char **)v23);
  v9 = *(_DWORD *)(a1 + 72);
  (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
  v10 = *(_QWORD *)(a2 + 24);
  if (!v10)
    goto LABEL_16;
  v11 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v10 + 48))(v10, v29);
  (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
  std::chrono::steady_clock::now();
  LODWORD(v20) = 1;
  sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
  v26 = v11;
  sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
  if (1 % v9)
    goto LABEL_5;
  v12 = *(_QWORD *)(a2 + 56);
  if (!v12)
LABEL_17:
    sub_19C1D6A94();
  if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v12 + 48))(v12, &v20) & 1) == 0)
  {
LABEL_5:
    if (!(*v30)((uint64_t)&v30, &v20))
    {
      v13 = (*v33)((uint64_t)&v33, (int *)&v20);
      sub_19C17B808(v27);
      sub_19C17B808((char **)v21);
      sub_19C17B808(v29);
      if (v13)
        goto LABEL_15;
      v14 = 2;
      while (1)
      {
        (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
        v15 = *(_QWORD *)(a2 + 24);
        if (!v15)
          break;
        v16 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v15 + 48))(v15, v29);
        (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
        std::chrono::steady_clock::now();
        std::chrono::steady_clock::now();
        LODWORD(v20) = v14;
        sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
        v26 = v16;
        sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
        if (!(v14 % v9))
        {
          v17 = *(_QWORD *)(a2 + 56);
          if (!v17)
            goto LABEL_17;
          if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v17 + 48))(v17, &v20) & 1) != 0)
            goto LABEL_6;
        }
        if ((*v30)((uint64_t)&v30, &v20))
          goto LABEL_6;
        v18 = (*v33)((uint64_t)&v33, (int *)&v20);
        sub_19C17B808(v27);
        sub_19C17B808((char **)v21);
        sub_19C17B808(v29);
        ++v14;
        if (v18)
          goto LABEL_15;
      }
LABEL_16:
      sub_19C1D6A94();
    }
  }
LABEL_6:
  sub_19C17B808(v27);
  sub_19C17B808((char **)v21);
  sub_19C17B808(v29);
LABEL_15:
  sub_19C1D6818(*(_QWORD *)(a1 + 120), a3);
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D21948;
  return sub_19C17B808((char **)v37);
}

void sub_19C202674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char *a37)
{
  char **v37;
  char **v38;
  char **v39;
  uint64_t v40;

  sub_19C17B808(v39);
  sub_19C17B808(v38);
  sub_19C17B808(&a37);
  *(_QWORD *)(v40 - 240) = &unk_1E3D21948;
  sub_19C17B808(v37);
  _Unwind_Resume(a1);
}

void sub_19C2026F0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  std::logic_error *exception;
  uint64_t v5;

  v3 = *(_DWORD *)(a1 + 48);
  if (v3 == 1)
  {
    sub_19C202798(a1, &v5);
    *a2 = v5;
  }
  else
  {
    if (v3)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1C79A4(exception, "Invalid optimizer in user config.");
      __cxa_throw(exception, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    }
    sub_19C1C76D4(a1, &v5);
    *a2 = v5;
  }
}

void sub_19C202784(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C202798(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  void **v15;
  void *v16;
  void **v17;
  void *__p;
  char **v19;
  char v20;

  v4 = operator new();
  sub_19C1C2D98((uint64_t)&v14, a1);
  sub_19C202900(v4, (uint64_t *)&v14);
  *a2 = v4;
  if (v20)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v19;
      v7 = __p;
      if (v19 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v19 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v16;
  if (v16)
  {
    v9 = v17;
    v10 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v16;
    }
    v17 = v8;
    operator delete(v10);
  }
  v11 = (void **)v14;
  if (v14)
  {
    v12 = v15;
    v13 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v14;
    }
    v15 = v11;
    operator delete(v13);
  }
}

void sub_19C2028D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  va_list va;

  va_start(va, a2);
  sub_19C1C2E88((uint64_t)va);
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_19C2028EC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C202900(uint64_t a1, uint64_t *a2)
{
  char **v4;
  char **v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  int v13;
  int v14;
  char ***v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  char **v38;
  char **v39;
  char **v40;
  void **v41;
  void **v42;
  void *v43;
  void **v44;
  void **v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t **v51;
  uint64_t **v52;
  uint64_t v53;
  uint64_t *v54;
  void *v56;
  void **v57;
  uint64_t v58;
  void *v59;
  void **v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  void *v64;
  void **v65;
  void *v66;
  void **v67;
  void *__p;
  char **v69;
  char v70;

  sub_19C1C2D98((uint64_t)&v64, (uint64_t)a2);
  *(_QWORD *)a1 = &unk_1E3D214F8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_19C1C2D98(a1 + 32, (uint64_t)&v64);
  if (v70)
  {
    v4 = (char **)__p;
    if (__p)
    {
      v5 = v69;
      v6 = __p;
      if (v69 != __p)
      {
        do
          v5 = sub_19C17B808(v5 - 12);
        while (v5 != v4);
        v6 = __p;
      }
      v69 = v4;
      operator delete(v6);
    }
  }
  v7 = (void **)v66;
  if (v66)
  {
    v8 = v67;
    v9 = v66;
    if (v67 != v66)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v66;
    }
    v67 = v7;
    operator delete(v9);
  }
  v10 = (void **)v64;
  if (v64)
  {
    v11 = v65;
    v12 = v64;
    if (v65 != v64)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v64;
    }
    v65 = v10;
    operator delete(v12);
  }
  *(_QWORD *)a1 = &unk_1E3D21828;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  v13 = sub_19C178A44(a2);
  v14 = sub_19C179558((uint64_t)a2);
  *(_DWORD *)(a1 + 176) = v14 + v13;
  sub_19C2036C8(a1 + 184, v14 + v13);
  *(_QWORD *)(a1 + 464) = 0;
  *(_QWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 488) = 0;
  *(_QWORD *)(a1 + 480) = 0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 316) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 444) = 0u;
  *(_QWORD *)(a1 + 528) = 0;
  *(_QWORD *)(a1 + 520) = 0;
  *(_DWORD *)(a1 + 544) = 0;
  *(_DWORD *)(a1 + 560) = -1;
  *(_QWORD *)(a1 + 536) = 0;
  *(_QWORD *)(a1 + 504) = &unk_1E3D21128;
  *(_QWORD *)(a1 + 512) = a1 + 176;
  *(_QWORD *)(a1 + 568) = 0;
  sub_19C1C81AC(a1 + 576);
  v15 = (char ***)(a1 + 10680);
  *(_QWORD *)(a1 + 10696) = 0;
  *(_OWORD *)(a1 + 10680) = 0u;
  if ((int)sub_19C179558(a1 + 32) < 1)
    sub_19C2031A4(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)(a1 + 108), (uint64_t *)&v62);
  else
    sub_19C202FF8(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)&v62);
  v16 = v62;
  *(_QWORD *)&v62 = 0;
  v17 = *(_QWORD *)(a1 + 568);
  *(_QWORD *)(a1 + 568) = v16;
  if (v17)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v62;
    *(_QWORD *)&v62 = 0;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v19 = 0;
    v20 = *(_DWORD *)(a1 + 108);
    *(_DWORD *)(a1 + 8168) = v20;
    v21 = 1;
    v22 = v20;
    do
    {
      v23 = 1812433253 * (v22 ^ (v22 >> 30));
      v22 = v23 + v21;
      *(_DWORD *)(a1 + 8172 + 4 * v19) = v19 + v23 + 1;
      ++v21;
      ++v19;
    }
    while (v19 != 623);
    *(_QWORD *)(a1 + 10664) = 0;
    *(_DWORD *)(a1 + 576) = v20;
    v24 = 1;
    v25 = 145;
    v26 = v20;
    do
    {
      v27 = 1812433253 * (v26 ^ (v26 >> 30));
      v26 = v27 + v24;
      *(_DWORD *)(a1 + 4 * v25) = v25 + v27 - 144;
      ++v24;
      ++v25;
    }
    while (v25 != 768);
    v28 = 0;
    *(_QWORD *)(a1 + 3072) = 0;
    *(_DWORD *)(a1 + 3104) = v20;
    v29 = 1;
    v30 = v20;
    do
    {
      v31 = 1812433253 * (v30 ^ (v30 >> 30));
      v30 = v31 + v29;
      *(_DWORD *)(a1 + 3108 + 4 * v28) = v28 + v31 + 1;
      ++v29;
      ++v28;
    }
    while (v28 != 623);
    v32 = 0;
    *(_QWORD *)(a1 + 5600) = 0;
    *(_DWORD *)(a1 + 5624) = v20;
    v33 = 1;
    do
    {
      v34 = 1812433253 * (v20 ^ (v20 >> 30));
      v20 = v34 + v33;
      *(_DWORD *)(a1 + 5628 + 4 * v32) = v32 + v34 + 1;
      ++v33;
      ++v32;
    }
    while (v32 != 623);
    *(_QWORD *)(a1 + 8120) = 0;
    sub_19C23B684();
  }
  v57 = 0;
  v58 = 0;
  v56 = 0;
  sub_19C17AF88(&v56, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 4));
  v59 = 0;
  v60 = 0;
  v61 = 0;
  sub_19C17B16C(&v59, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 56)) >> 3));
  v35 = sub_19C178A44((uint64_t *)(a1 + 32));
  v36 = 5 * (sub_19C179558(a1 + 32) + v35);
  if (*(_BYTE *)(a1 + 144))
  {
    v37 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
    if ((int)v36 <= v37)
      v36 = v37;
    else
      v36 = v36;
  }
  sub_19C17A144((uint64_t *)&v56, a1 + 576, v36, (char **)&v62);
  v38 = *v15;
  if (*v15)
  {
    v39 = *(char ***)(a1 + 10688);
    v40 = *v15;
    if (v39 != v38)
    {
      do
        v39 = sub_19C17B808(v39 - 12);
      while (v39 != v38);
      v40 = *v15;
    }
    *(_QWORD *)(a1 + 10688) = v38;
    operator delete(v40);
    *v15 = 0;
    *(_QWORD *)(a1 + 10688) = 0;
    *(_QWORD *)(a1 + 10696) = 0;
  }
  *(_OWORD *)v15 = v62;
  *(_QWORD *)(a1 + 10696) = v63;
  v63 = 0;
  v62 = 0uLL;
  v41 = (void **)v59;
  if (v59)
  {
    v42 = v60;
    v43 = v59;
    if (v60 != v59)
    {
      do
      {
        if (*((char *)v42 - 17) < 0)
          operator delete(*(v42 - 5));
        v42 -= 5;
      }
      while (v42 != v41);
      v43 = v59;
    }
    v60 = v41;
    operator delete(v43);
  }
  v44 = (void **)v56;
  if (v56)
  {
    v45 = v57;
    v46 = v56;
    if (v57 != v56)
    {
      do
      {
        if (*((char *)v45 - 25) < 0)
          operator delete(*(v45 - 6));
        v45 -= 6;
      }
      while (v45 != v44);
      v46 = v56;
    }
    v57 = v44;
    operator delete(v46);
  }
  if (*(_BYTE *)(a1 + 144))
  {
    v47 = *(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120);
    if (v47)
    {
      v48 = 0;
      v49 = 0;
      v50 = v47 / 96;
      do
      {
        while (1)
        {
          v52 = *(uint64_t ***)(a1 + 10688);
          v53 = *(_QWORD *)(a1 + 10680);
          if (v49 >= 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v52 - v53) >> 5))
            break;
          if (!*(_BYTE *)(a1 + 144))
            goto LABEL_77;
          sub_19C1C9C8C(v53 + v48, *(_QWORD *)(a1 + 120) + v48);
          ++v49;
          v48 += 96;
          if (v50 == v49)
            return a1;
        }
        if (!*(_BYTE *)(a1 + 144))
LABEL_77:
          sub_19C1D1E0C();
        v54 = (uint64_t *)(*(_QWORD *)(a1 + 120) + v48);
        if ((unint64_t)v52 < *(_QWORD *)(a1 + 10696))
          v51 = sub_19C1C1840(v52, v54) + 12;
        else
          v51 = sub_19C1D1CCC((uint64_t ***)(a1 + 10680), v54);
        *(_QWORD *)(a1 + 10688) = v51;
        ++v49;
        v48 += 96;
      }
      while (v50 != v49);
    }
  }
  return a1;
}

void sub_19C202F0C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  _QWORD *v3;
  _QWORD *v4;
  std::random_device *v5;
  void **v6;
  void **v8;
  uint64_t v9;
  void *v10;

  sub_19C17AA64(v6);
  sub_19C1C7C7C(v5);
  v8 = (void **)(v1 + 65);
  v9 = v1[71];
  v1[71] = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  *v4 = &unk_1E3D20F98;
  v10 = *v8;
  if (*v8)
  {
    v1[66] = v10;
    operator delete(v10);
  }
  sub_19C1EC3CC(v3);
  sub_19C1C9D28(v2);
  sub_19C1C7CC8(v1);
  _Unwind_Resume(a1);
}

void sub_19C202FF8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v6 = operator new();
  v14 = 0;
  v15 = 0;
  v13 = 0;
  sub_19C17AF88(&v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C2048C4(v6, a1, (uint64_t *)&v13);
  *a3 = v6;
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v17;
    v9 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v17 = v7;
    operator delete(v9);
  }
  v10 = (void **)v13;
  if (v13)
  {
    v11 = v14;
    v12 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v13;
    }
    v14 = v10;
    operator delete(v12);
  }
}

void sub_19C203150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C20316C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C2031A4(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  void **v9;
  void **v10;
  void *v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  uint64_t v17;
  void *__p;
  void **v19;
  uint64_t v20;

  v8 = operator new();
  v16 = 0;
  v17 = 0;
  v15 = 0;
  sub_19C17AF88(&v15, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C205C48(v8, a1, (uint64_t *)&v15, *a3);
  *a4 = v8;
  v9 = (void **)__p;
  if (__p)
  {
    v10 = v19;
    v11 = __p;
    if (v19 != __p)
    {
      do
      {
        if (*((char *)v10 - 17) < 0)
          operator delete(*(v10 - 5));
        v10 -= 5;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v19 = v9;
    operator delete(v11);
  }
  v12 = (void **)v15;
  if (v15)
  {
    v13 = v16;
    v14 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v13 - 25) < 0)
          operator delete(*(v13 - 6));
        v13 -= 6;
      }
      while (v13 != v12);
      v14 = v15;
    }
    v16 = v12;
    operator delete(v14);
  }
}

void sub_19C2032FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C203318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C203354(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_19C2072F4(a1);
  operator delete(v1);
}

uint64_t **sub_19C203368@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  signed int v8;
  char *v10[13];

  v4 = a1 + 8;
  v5 = 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3);
  v6 = a1 + 32;
  v7 = sub_19C178A44((uint64_t *)(a1 + 32));
  v8 = 5 * (sub_19C179558(v6) + v7);
  if (*(_BYTE *)(v4 + 136) && v8 <= (int)(-1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5)))
    v8 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
  if (v5 < v8)
    return sub_19C1C1840(a2, (uint64_t *)(*(_QWORD *)(a1 + 10680)+ 96 * (int)(-991146299 * ((*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3))));
  (*(void (**)(char **__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 568) + 16))(v10, *(_QWORD *)(a1 + 568), v4);
  sub_19C1C1840(a2, (uint64_t *)v10);
  return (uint64_t **)sub_19C17B808(v10);
}

void sub_19C203480(uint64_t a1, __int128 **a2, double a3)
{
  double v6;
  double v7;
  double v8;
  double v9;
  unint64_t v10;
  void *v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t **v20;
  uint64_t **v21;
  uint64_t **v22;
  double v23;
  double v24;
  double v25;
  void *__p;
  _BYTE *v27;
  int v28;
  uint64_t *v29[12];
  double v30;

  sub_19C1CBD8C(a2, (uint64_t)&__p);
  v6 = sub_19C205864(a1 + 176, (uint64_t)&__p);
  v8 = sqrt(v7);
  v24 = v8;
  v25 = v6;
  v9 = erfc((v6 - *(double *)(a1 + 552)) * -0.707106781 / v8) * 0.5;
  v23 = v9;
  v10 = *(_QWORD *)(a1 + 160);
  if (v10 >= *(_QWORD *)(a1 + 168))
  {
    v15 = sub_19C1D2BAC((uint64_t *)(a1 + 152), (uint64_t)&__p, &v25, (uint64_t *)&v24, (uint64_t *)&v23);
  }
  else
  {
    *(_QWORD *)v10 = 0;
    *(_QWORD *)(v10 + 8) = 0;
    *(_QWORD *)(v10 + 16) = 0;
    v11 = __p;
    v12 = v27 - (_BYTE *)__p;
    if (v27 != __p)
    {
      if (v12 < 0)
        sub_19C07DA0C();
      v13 = (char *)operator new(v27 - (_BYTE *)__p);
      *(_QWORD *)v10 = v13;
      *(_QWORD *)(v10 + 8) = v13;
      v14 = &v13[8 * (v12 >> 3)];
      *(_QWORD *)(v10 + 16) = v14;
      memcpy(v13, v11, v12);
      *(_QWORD *)(v10 + 8) = v14;
    }
    *(_DWORD *)(v10 + 24) = v28;
    *(double *)(v10 + 32) = v6;
    *(double *)(v10 + 40) = v8;
    *(double *)(v10 + 48) = v9;
    v15 = v10 + 56;
    *(_QWORD *)(a1 + 160) = v10 + 56;
  }
  *(_QWORD *)(a1 + 160) = v15;
  v16 = *(int *)(a1 + 488);
  v17 = v16 + 1;
  *(_DWORD *)(a1 + 488) = v16 + 1;
  v18 = *(_QWORD *)(a1 + 464);
  v19 = (*(_QWORD *)(a1 + 472) - v18) >> 3;
  if (v16 + 1 <= v19)
  {
    if (v16 + 1 < v19)
      *(_QWORD *)(a1 + 472) = v18 + 8 * v16 + 8;
  }
  else
  {
    sub_19C17C9D8(a1 + 464, v16 + 1 - v19);
    v17 = *(int *)(a1 + 488);
    v18 = *(_QWORD *)(a1 + 464);
  }
  *(double *)(v18 + 8 * v17 - 8) = a3;
  sub_19C20746C(a1 + 176, (uint64_t)&__p);
  sub_19C208628(a1 + 496, a1 + 176);
  sub_19C203918(a1 + 504);
  sub_19C1C1840(v29, (uint64_t *)a2);
  v30 = a3;
  v20 = *(uint64_t ***)(a1 + 16);
  if ((unint64_t)v20 >= *(_QWORD *)(a1 + 24))
  {
    v22 = sub_19C1C907C((uint64_t ***)(a1 + 8), (uint64_t *)v29);
  }
  else
  {
    v21 = sub_19C1C1840(v20, (uint64_t *)v29);
    *((double *)v21 + 12) = v30;
    v22 = v21 + 13;
  }
  *(_QWORD *)(a1 + 16) = v22;
  sub_19C17B808((char **)v29);
  if (__p)
  {
    v27 = __p;
    operator delete(__p);
  }
}

void sub_19C20367C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  sub_19C17B808(&a16);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_19C2036C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  size_t v5;
  char *v6;
  int v7;
  _QWORD *v8;
  unint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  long double *v15;
  double *v16;
  uint64_t v17;
  long double v18;
  long double v20;

  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_19C27A9D0;
  *(_QWORD *)(a1 + 24) = 0;
  v4 = a2 << 32;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v5 = 8 * (int)a2;
  if ((_DWORD)a2)
  {
    if ((a2 & 0x80000000) != 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * (int)a2);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 40) = &v6[8 * (int)a2];
    bzero(v6, v5);
    *(_QWORD *)(a1 + 32) = &v6[v5];
    *(_DWORD *)(a1 + 48) = a2;
    if (v4)
      goto LABEL_4;
  }
  else
  {
    v6 = 0;
    *(_DWORD *)(a1 + 48) = 0;
    if (v4)
LABEL_4:
      memset_pattern16(v6, &unk_19C277730, v5);
  }
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v7 = a2 + 1;
  if ((_DWORD)a2 == -1)
  {
    v8 = 0;
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 72) = 0;
    *(_DWORD *)(a1 + 80) = v7;
    MEMORY[0] = 0;
    if (!a2)
      return a1;
    goto LABEL_12;
  }
  if (v7 < 0)
    sub_19C07DA0C();
  v8 = operator new(8 * v7);
  bzero(v8, 8 * v7);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = &v8[v7];
  *(_QWORD *)(a1 + 72) = &v8[v7];
  *(_DWORD *)(a1 + 80) = v7;
  *v8 = 0;
  if (a2)
  {
LABEL_12:
    v9 = 0;
    if (a2 == 1)
      goto LABEL_16;
    v9 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v10 = v8 + 1;
    v11 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v12 = (__int128 *)v6;
    do
    {
      v13 = *v12++;
      v20 = log(*((long double *)&v13 + 1));
      *(double *)&v14 = log(*(long double *)&v13);
      *((long double *)&v14 + 1) = v20;
      *v10++ = v14;
      v11 -= 2;
    }
    while (v11);
    if (v9 != a2)
    {
LABEL_16:
      v15 = (long double *)&v8[v9 + 1];
      v16 = (double *)&v6[8 * v9];
      v17 = a2 - v9;
      do
      {
        v18 = *v16++;
        *v15++ = log(v18);
        --v17;
      }
      while (v17);
    }
  }
  return a1;
}

void sub_19C2038A4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C2038C0(void *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v4;
    operator delete(v4);
  }
  sub_19C07AF7C(a1);
}

long double sub_19C2038DC(uint64_t a1, double a2, double a3)
{
  return erfc((a2 - *(double *)(a1 + 48)) * -0.707106781 / a3) * 0.5;
}

double sub_19C203910()
{
  return 0.0;
}

void sub_19C203918(uint64_t a1)
{
  _QWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double *v10;
  double *v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  char *v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  __int128 *v19;
  _OWORD *v20;
  unint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  double *v44;
  uint64_t v45;
  unint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  double *v52;
  uint64_t v53;
  __int128 v54;
  double *v55;
  double *v56;
  double v57;
  double *v58;
  double *v59;
  double v60;
  BOOL v61;
  char *v62;
  signed int v63;
  _OWORD *v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  _OWORD *v84;
  unint64_t v85;
  __int128 v86;
  unint64_t v87;
  uint64_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v93;
  uint64_t v94;
  void *__p;
  int v96[2];
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  double *v104;
  uint64_t v105;
  double *v106;
  _BYTE *v107;
  void *v108;
  uint64_t v109;
  unsigned int v110;

  v104 = 0;
  v105 = 0;
  v106 = 0;
  v1 = *(_QWORD **)(a1 + 8);
  v101 = 0;
  v102 = 0;
  v100 = 0;
  v3 = (_BYTE *)v1[12];
  v2 = (_BYTE *)v1[13];
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(v2 - v3);
    v6 = &v5[8 * (v4 >> 3)];
    v100 = v5;
    v102 = v6;
    memcpy(v5, v3, v4);
    v101 = v6;
  }
  v7 = v1[15];
  v103 = v7;
  if (!(_DWORD)v7)
  {
    v55 = 0;
    v58 = 0;
    *(_DWORD *)(a1 + 56) = 0;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v90 = (int)v7;
  v91 = v7;
  v13 = 8 * (v7 >> 32);
  v88 = v7 >> 32;
  v89 = v13;
  v87 = (v7 >> 32) & 0xFFFFFFFFFFFFFFFCLL;
  v93 = HIDWORD(v7);
  v94 = 16;
  do
  {
    v14 = *(_QWORD *)(a1 + 8);
    v15 = v100;
    __p = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    if (!(_DWORD)v93)
    {
      v16 = 0;
      v108 = 0;
      v109 = 0;
      v107 = 0;
      v110 = 0;
      goto LABEL_27;
    }
    if (v7 < 0)
      sub_19C07DA0C();
    v16 = operator new(v13);
    bzero(v16, v13);
    if ((unint64_t)v7 >> 33 < 3)
    {
      v17 = 0;
      v18 = v88;
      goto LABEL_17;
    }
    v18 = v88;
    if ((unint64_t)((char *)v16 - &v100[v13 * v12]) < 0x20)
    {
      v17 = 0;
LABEL_17:
      v23 = v18 - v17;
      v24 = 8 * v17;
      v25 = (_QWORD *)v16 + v17;
      v26 = (uint64_t *)&v15[v8 + v24];
      do
      {
        v27 = *v26++;
        *v25++ = v27;
        --v23;
      }
      while (v23);
      goto LABEL_19;
    }
    v19 = (__int128 *)&v100[v94];
    v20 = v16 + 1;
    v21 = v87;
    do
    {
      v22 = *v19;
      *(v20 - 1) = *(v19 - 1);
      *v20 = v22;
      v19 += 2;
      v20 += 2;
      v21 -= 4;
    }
    while (v21);
    v17 = v87;
    if (v88 != v87)
      goto LABEL_17;
LABEL_19:
    v107 = 0;
    v108 = 0;
    v109 = 0;
    v110 = v93;
    sub_19C17C9D8((uint64_t)&v107, v18);
    v28 = v110;
    if ((int)v110 >= 1)
    {
      v29 = 0;
      v30 = v107;
      if (v110 < 4)
        goto LABEL_25;
      if ((unint64_t)(v107 - (_BYTE *)v16) < 0x20)
        goto LABEL_25;
      v31 = 0;
      v29 = v110 & 0xFFFFFFFC;
      v32 = (8 * v110) & 0x7FFFFFFE0;
      do
      {
        v33 = v16[v31 / 0x10 + 1];
        v34 = &v30[v31];
        *v34 = v16[v31 / 0x10];
        v34[1] = v33;
        v31 += 32;
      }
      while (v32 != v31);
      if (v29 != v28)
      {
LABEL_25:
        v35 = v28 - v29;
        v36 = v29 << 32;
        do
        {
          *(_QWORD *)&v30[v36 >> 29] = *(_QWORD *)((char *)v16 + (v36 >> 29));
          v36 += 0x100000000;
          --v35;
        }
        while (v35);
      }
    }
LABEL_27:
    v37 = sub_19C2040E8(v14, (uint64_t)&v107);
    v38 = v37;
    if (v11 < v10)
    {
      *v11++ = v37;
      v7 = v91;
      v13 = v89;
      v105 = (uint64_t)v11;
      v39 = v107;
      if (!v107)
        goto LABEL_30;
LABEL_29:
      v108 = v39;
      operator delete(v39);
      goto LABEL_30;
    }
    v40 = v11 - v9;
    v41 = v40 + 1;
    if ((unint64_t)(v40 + 1) >> 61)
      sub_19C07DA0C();
    if (((char *)v10 - (char *)v9) >> 2 > v41)
      v41 = ((char *)v10 - (char *)v9) >> 2;
    if ((unint64_t)((char *)v10 - (char *)v9) >= 0x7FFFFFFFFFFFFFF8)
      v42 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v42 = v41;
    if (v42)
    {
      if (v42 >> 61)
        sub_19C07C7FC();
      v43 = operator new(8 * v42);
      v44 = (double *)&v43[8 * v40];
      *v44 = v38;
      v45 = (uint64_t)(v44 + 1);
      if (v11 != v9)
      {
LABEL_41:
        v46 = (char *)(v11 - 1) - (char *)v9;
        if (v46 < 0x168
          || &v43[(char *)v11 - (char *)v9 - 8 - (v46 & 0xFFFFFFFFFFFFFFF8)] > &v43[(char *)v11 - (char *)v9 - 8]
          || (double *)((char *)v11 - (v46 & 0xFFFFFFFFFFFFFFF8) - 8) > v11 - 1
          || (unint64_t)((char *)v9 - v43) < 0x20)
        {
          v47 = v11;
          v7 = v91;
          v13 = v89;
        }
        else
        {
          v49 = (v46 >> 3) + 1;
          v50 = 8 * (v49 & 0x3FFFFFFFFFFFFFFCLL);
          v47 = &v11[v50 / 0xFFFFFFFFFFFFFFF8];
          v44 = (double *)((char *)v44 - v50);
          v51 = &v43[8 * v40 - 16];
          v52 = v11 - 2;
          v53 = v49 & 0x3FFFFFFFFFFFFFFCLL;
          v7 = v91;
          do
          {
            v54 = *(_OWORD *)v52;
            *(v51 - 1) = *((_OWORD *)v52 - 1);
            *v51 = v54;
            v51 -= 2;
            v52 -= 4;
            v53 -= 4;
          }
          while (v53);
          v13 = v89;
          if (v49 == (v49 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_44:
            v10 = (double *)&v43[8 * v42];
            v104 = v44;
            v105 = v45;
            v106 = v10;
            if (!v9)
              goto LABEL_46;
LABEL_45:
            operator delete(v9);
            goto LABEL_46;
          }
        }
        do
        {
          v48 = *((_QWORD *)v47-- - 1);
          *((_QWORD *)v44-- - 1) = v48;
        }
        while (v47 != v9);
        goto LABEL_44;
      }
    }
    else
    {
      v43 = 0;
      v44 = (double *)(8 * v40);
      *(double *)(8 * v40) = v37;
      v45 = 8 * v40 + 8;
      if (v11 != v9)
        goto LABEL_41;
    }
    v7 = v91;
    v13 = v89;
    v10 = (double *)&v43[8 * v42];
    v104 = v44;
    v105 = v45;
    v106 = v10;
    if (v9)
      goto LABEL_45;
LABEL_46:
    v9 = v44;
    v11 = (double *)v45;
    v105 = v45;
    v39 = v107;
    if (v107)
      goto LABEL_29;
LABEL_30:
    if (v16)
      operator delete(v16);
    ++v12;
    v94 += v13;
    v8 += v13;
  }
  while (v12 != v90);
  v55 = v104;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 120);
  if (v55 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v56 = v55 + 1;
  if (v55 + 1 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v57 = *v55;
  v58 = v55;
  v59 = v55 + 1;
  do
  {
    v60 = *v59++;
    v61 = v57 < v60;
    v57 = fmax(v57, v60);
    if (v61)
      v58 = v56;
    v56 = v59;
  }
  while (v59 != v11);
  v62 = v100;
  v63 = HIDWORD(v103);
  v107 = 0;
  v108 = 0;
  v109 = 0;
  if (!HIDWORD(v103))
  {
LABEL_81:
    v74 = 0;
    LODWORD(v73) = 0;
    v64 = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    __p = 0;
    v98 = 0;
    goto LABEL_82;
  }
LABEL_65:
  if (v63 < 0)
    sub_19C07DA0C();
  v64 = operator new(8 * v63);
  v65 = (v58 - v55) * v63;
  bzero(v64, 8 * v63);
  if (v63 < 0xA || (v66 = &v62[8 * v65], (unint64_t)((char *)v64 - v66) < 0x20))
  {
    v67 = 0;
    goto LABEL_69;
  }
  v67 = v63 & 0xFFFFFFFFFFFFFFFCLL;
  v83 = (__int128 *)(v66 + 16);
  v84 = v64 + 1;
  v85 = v67;
  do
  {
    v86 = *v83;
    *(v84 - 1) = *(v83 - 1);
    *v84 = v86;
    v83 += 2;
    v84 += 2;
    v85 -= 4;
  }
  while (v85);
  if (v67 != v63)
  {
LABEL_69:
    v68 = v63 - v67;
    v69 = 8 * v67;
    v70 = (_QWORD *)v64 + v67;
    v71 = &v62[8 * v65 + v69];
    do
    {
      v72 = *(_QWORD *)v71;
      v71 += 8;
      *v70++ = v72;
      --v68;
    }
    while (v68);
  }
  __p = 0;
  *(_QWORD *)v96 = 0;
  v97 = 0;
  v98 = v63;
  sub_19C17C9D8((uint64_t)&__p, v63);
  v73 = v98;
  v74 = (char *)__p;
  if ((int)v98 >= 1)
  {
    v75 = 0;
    if (v98 < 4)
      goto LABEL_77;
    if ((unint64_t)((_BYTE *)__p - (_BYTE *)v64) < 0x20)
      goto LABEL_77;
    v76 = 0;
    v75 = v98 & 0xFFFFFFFC;
    v77 = (8 * v98) & 0x7FFFFFFE0;
    do
    {
      v78 = v64[v76 / 0x10 + 1];
      v79 = &v74[v76];
      *(_OWORD *)v79 = v64[v76 / 0x10];
      *((_OWORD *)v79 + 1) = v78;
      v76 += 32;
    }
    while (v77 != v76);
    if (v75 != v73)
    {
LABEL_77:
      v80 = v73 - v75;
      v81 = v75 << 32;
      do
      {
        *(_QWORD *)&v74[v81 >> 29] = *(_QWORD *)((char *)v64 + (v81 >> 29));
        v81 += 0x100000000;
        --v80;
      }
      while (v80);
    }
  }
LABEL_82:
  v82 = *(_QWORD *)v58;
  v99 = *(_QWORD *)v58;
  if ((void **)(a1 + 16) != &__p)
  {
    sub_19C11EAD0((_QWORD *)(a1 + 16), v74, *(char **)v96, (uint64_t)(*(_QWORD *)v96 - (_QWORD)v74) >> 3);
    LODWORD(v73) = v98;
    v82 = v99;
    v74 = (char *)__p;
  }
  *(_DWORD *)(a1 + 40) = v73;
  *(_QWORD *)(a1 + 48) = v82;
  if (v74)
  {
    *(_QWORD *)v96 = v74;
    operator delete(v74);
  }
  if (v64)
    operator delete(v64);
  if (v62)
    operator delete(v62);
  if (v55)
  {
    v105 = (uint64_t)v55;
    operator delete(v55);
  }
}

void sub_19C20402C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  void *v28;
  void *v29;

  if (__p)
    operator delete(__p);
  if (v28)
    operator delete(v28);
  if (v29)
    operator delete(v29);
  if (a27)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

double sub_19C2040E8(uint64_t a1, uint64_t a2)
{
  double v3;
  double v4;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C2041C8(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v3 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v4 = __C;
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v4 + v3;
  }
  else
  {
    __A[0] = 0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)__A, *(int *)(a1 + 312));
    return *(double *)__A;
  }
}

void sub_19C2041AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C2041C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  signed int v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  __int128 *v21;
  _OWORD *v22;
  unint64_t v23;
  __int128 v24;
  char *v26;
  void *__p;
  char *v29;
  char *v30;
  signed int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = *(_DWORD *)(a1 + 120);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  *(_DWORD *)(a3 + 24) = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  if (v3)
  {
    if (v3 < 0)
      sub_19C07DA0C();
    v5 = v3;
    v6 = (char *)operator new(8 * v3);
    bzero(v6, 8 * v3);
    v7 = 0;
    v8 = 0;
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = &v6[8 * v3];
    *(_QWORD *)(a3 + 16) = &v6[8 * v3];
    *(_DWORD *)(a3 + 24) = v3;
    v26 = v6;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 96);
      v10 = *(_DWORD *)(a1 + 124);
      v32 = 0;
      v33 = 0;
      v34 = 0;
      if (!v10)
      {
        v11 = 0;
        v29 = 0;
        v30 = 0;
        __p = 0;
        v31 = 0;
        goto LABEL_14;
      }
      if (v10 < 0)
        sub_19C07DA0C();
      v11 = operator new(8 * v10);
      bzero(v11, 8 * v10);
      if (v10 >= 8 && (unint64_t)v11 - v9 - 8 * v8 * v10 >= 0x20)
      {
        v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
        v21 = (__int128 *)(v9 + v7 * v10 + 16);
        v22 = v11 + 1;
        v23 = v12;
        do
        {
          v24 = *v21;
          *(v22 - 1) = *(v21 - 1);
          *v22 = v24;
          v21 += 2;
          v22 += 2;
          v23 -= 4;
        }
        while (v23);
        if (v12 == v10)
          goto LABEL_12;
      }
      else
      {
        v12 = 0;
      }
      v13 = v10 - v12;
      v14 = 8 * v12;
      v15 = (_QWORD *)v11 + v12;
      v16 = (uint64_t *)(v9 + v14 + v7 * v10);
      do
      {
        v17 = *v16++;
        *v15++ = v17;
        --v13;
      }
      while (v13);
LABEL_12:
      __p = 0;
      v29 = 0;
      v31 = 0;
      v30 = 0;
      __p = operator new(8 * v10);
      v29 = (char *)__p + 8 * v10;
      v30 = v29;
      v31 = v10;
      memcpy(__p, v11, 8 * v10);
      v6 = v26;
LABEL_14:
      v18 = sub_19C204484(a1 + 8, (uint64_t)&__p, a2);
      v19 = *(double *)(a1 + 24);
      *(long double *)&v6[8 * v8] = (v18 + 1.0 + v20) * (exp(-v18) * v19);
      if (__p)
      {
        v29 = (char *)__p;
        operator delete(__p);
      }
      if (v11)
        operator delete(v11);
      ++v8;
      v7 += 8;
      if (v8 == v5)
        return;
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
}

void sub_19C204410(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C204438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14)
{
  void *v14;

  if (__p)
  {
    operator delete(__p);
    if (!v14)
    {
LABEL_3:
      *(_QWORD *)(a10 + 8) = a11;
      operator delete(a11);
      _Unwind_Resume(a1);
    }
  }
  else if (!v14)
  {
    goto LABEL_3;
  }
  operator delete(v14);
  *(_QWORD *)(a10 + 8) = a11;
  operator delete(a11);
  _Unwind_Resume(a1);
}

double sub_19C204484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  const void *v7;
  int64_t v8;
  char *v9;
  char *v10;
  int v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  const void *v16;
  int64_t v17;
  char *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  size_t v24;
  void *v25;
  double v26;
  double v27;

  v7 = *(const void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = v6 - *(_QWORD *)a2;
  if (v6 == *(_QWORD *)a2)
  {
    v10 = 0;
    v9 = 0;
  }
  else
  {
    if (v8 < 0)
      sub_19C07DA0C();
    v9 = (char *)operator new(v6 - *(_QWORD *)a2);
    v10 = &v9[8 * (v8 >> 3)];
    memcpy(v9, v7, v8);
  }
  v11 = *(_DWORD *)(a2 + 24);
  vDSP_vdivD(*(const double **)(a1 + 24), 1, (const double *)v9, 1, (double *)v9, 1, v11);
  v12 = v10 - v9;
  if (v12)
  {
    if (v12 < 0)
      sub_19C07DA0C();
    v13 = (char *)operator new(v12);
    v14 = &v13[8 * (v12 >> 3)];
    memcpy(v13, v9, v12);
    if (v9)
      goto LABEL_8;
  }
  else
  {
    v14 = 0;
    v13 = 0;
    if (v9)
LABEL_8:
      operator delete(v9);
  }
  v16 = *(const void **)a3;
  v15 = *(_QWORD *)(a3 + 8);
  v17 = v15 - *(_QWORD *)a3;
  if (v15 == *(_QWORD *)a3)
  {
    v19 = 0;
    v18 = 0;
  }
  else
  {
    if (v17 < 0)
      sub_19C07DA0C();
    v18 = (char *)operator new(v15 - *(_QWORD *)a3);
    v19 = &v18[8 * (v17 >> 3)];
    memcpy(v18, v16, v17);
  }
  vDSP_vdivD(*(const double **)(a1 + 24), 1, (const double *)v18, 1, (double *)v18, 1, *(int *)(a3 + 24));
  if (v19 == v18)
  {
    v20 = 0;
    if (v18)
LABEL_18:
      operator delete(v18);
  }
  else
  {
    if (v19 - v18 < 0)
      sub_19C07DA0C();
    v20 = operator new(v19 - v18);
    memcpy(v20, v18, v19 - v18);
    if (v18)
      goto LABEL_18;
  }
  v21 = v14 - v13;
  if (v14 == v13)
  {
    v23 = 0;
    v22 = 0;
  }
  else
  {
    if (v21 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v14 - v13);
    v23 = &v22[8 * (v21 >> 3)];
    memcpy(v22, v13, v14 - v13);
  }
  vDSP_vsubD((const double *)v20, 1, (const double *)v22, 1, (double *)v22, 1, v11);
  v24 = v23 - v22;
  if (v23 == v22)
  {
    v25 = 0;
  }
  else
  {
    if ((v24 & 0x8000000000000000) != 0)
      sub_19C07DA0C();
    v25 = operator new(v23 - v22);
    memcpy(v25, v22, v24);
  }
  cblas_dnrm2_NEWLAPACK();
  v27 = v26;
  if (v25)
    operator delete(v25);
  if (v22)
    operator delete(v22);
  if (v20)
    operator delete(v20);
  if (v13)
    operator delete(v13);
  return v27 * 2.23606798;
}

void sub_19C2047D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  if (v25)
    operator delete(v25);
  if (v26)
    operator delete(v26);
  if (v24)
    operator delete(v24);
  if (v23)
    operator delete(v23);
  _Unwind_Resume(exception_object);
}

void sub_19C2048B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  if (a26)
    JUMPOUT(0x19C2048A4);
  JUMPOUT(0x19C2048A8);
}

uint64_t sub_19C2048C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void **v6;
  void **v7;
  void *v8;
  void **v9;
  void **v10;
  void *v11;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_19C17AF88(&v13, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D216A8;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v13, (uint64_t)v14, 0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (_BYTE *)v13) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v17, 0xCCCCCCCCCCCCCCCDLL * (((char *)v17 - (_BYTE *)__p) >> 3));
  v6 = (void **)__p;
  if (__p)
  {
    v7 = v17;
    v8 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v7 - 17) < 0)
          operator delete(*(v7 - 5));
        v7 -= 5;
      }
      while (v7 != v6);
      v8 = __p;
    }
    v17 = v6;
    operator delete(v8);
  }
  v9 = (void **)v13;
  if (v13)
  {
    v10 = v14;
    v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 25) < 0)
          operator delete(*(v10 - 6));
        v10 -= 6;
      }
      while (v10 != v9);
      v11 = v13;
    }
    v14 = v9;
    operator delete(v11);
  }
  *(_QWORD *)a1 = &unk_1E3D21498;
  *(_DWORD *)(a1 + 64) = 5;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_19C204A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;

  v11 = v10;
  if (*v11)
  {
    sub_19C2563D4(v9, *v11);
    sub_19C17A75C(&a9);
    _Unwind_Resume(a1);
  }
  sub_19C17A75C(&a9);
  _Unwind_Resume(a1);
}

void sub_19C204AA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    sub_19C25623C((uint64_t)&a9, a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_19C204AC0(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;

  *a1 = &unk_1E3D21498;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  return sub_19C2050E8(a1);
}

void sub_19C204B28(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;
  _QWORD *v5;

  *a1 = &unk_1E3D21498;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  v5 = sub_19C2050E8(a1);
  operator delete(v5);
}

void sub_19C204B94(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  double *v15;
  double *v16;
  double *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v29;
  double v30;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD **v33;
  BOOL v34;
  uint64_t *v35;
  char **v36;
  char **v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40[4];
  uint64_t *v41;
  double *__A;
  double *v43;
  void *__p;
  char *v45;
  char *v46[3];
  char *v47[3];
  uint64_t *v48[12];
  char v49[8];
  _QWORD **v50;
  _QWORD *v51[2];
  uint64_t *v52;
  char **v53;
  double __C[2];

  sub_19C2051B0(a1);
  v6 = *(_QWORD *)(a1 + 72);
  if (v6 == *(_QWORD *)(a1 + 80))
  {
    v39 = a3;
    sub_19C1CBA2C(a2, &v52);
    sub_19C205444(a2, (uint64_t)v49);
    v7 = v50;
    if (v50 != v51)
    {
      do
      {
        v8 = *(_QWORD *)((char *)v7 + 28);
        sub_19C1C1840(v48, &v52[12 * (int)v8]);
        if (SHIDWORD(v8) >= 1)
        {
          v9 = 0;
          v10 = HIDWORD(v8) & ~(v8 >> 63);
          do
          {
            sub_19C205580(a1, (uint64_t *)v48, (uint64_t **)&__A);
            sub_19C17A814((char **)v48, (uint64_t)&__A);
            sub_19C098FBC((uint64_t)v47, v47[1]);
            sub_19C098FBC((uint64_t)v46, v46[1]);
            v11 = (char *)__p;
            if (__p)
            {
              v12 = v45;
              v13 = __p;
              if (v45 != __p)
              {
                do
                {
                  v14 = (void *)*((_QWORD *)v12 - 4);
                  if (v14)
                  {
                    *((_QWORD *)v12 - 3) = v14;
                    operator delete(v14);
                  }
                  if (*(v12 - 33) < 0)
                    operator delete(*((void **)v12 - 7));
                  v12 -= 56;
                }
                while (v12 != v11);
                v13 = __p;
              }
              v45 = v11;
              operator delete(v13);
            }
            v15 = __A;
            if (*(double *)&__A != 0.0)
            {
              v16 = v43;
              v17 = __A;
              if (v43 != __A)
              {
                do
                {
                  v18 = (void *)*((_QWORD *)v16 - 4);
                  if (v18)
                  {
                    *((_QWORD *)v16 - 3) = v18;
                    operator delete(v18);
                  }
                  if (*((char *)v16 - 33) < 0)
                    operator delete(*((void **)v16 - 7));
                  v16 -= 7;
                }
                while (v16 != v15);
                v17 = __A;
              }
              v43 = v15;
              operator delete(v17);
            }
            v41 = 0;
            v19 = *(_QWORD *)(a1 + 8);
            sub_19C1CBD8C((__int128 **)v48, (uint64_t)v40);
            v20 = *(_QWORD *)(v19 + 8);
            if (*(_DWORD *)(v20 + 120))
            {
              sub_19C2041C8(*(_QWORD *)(v19 + 8), (uint64_t)v40, (uint64_t)&__A);
              __C[0] = 0.0;
              vDSP_dotprD(__A, 1, *(const double **)(v20 + 256), 1, __C, (int)__p);
              v21 = __C[0];
              __C[0] = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, __C, *(int *)(v20 + 312));
              v22 = __C[0];
              sub_19C205A44(v20, (uint64_t)v40, (uint64_t)&__A);
              v24 = v23;
              v25 = *(double *)(v20 + 16);
              if (*(double *)&__A != 0.0)
              {
                v43 = __A;
                operator delete(__A);
              }
              v26 = v22 + v21;
              v27 = v25 + v24;
            }
            else
            {
              *(double *)&__A = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, (double *)&__A, *(int *)(v20 + 312));
              v26 = *(double *)&__A;
              v27 = sub_19C20596C(v20, (uint64_t)v40);
            }
            v28 = sqrt(v27);
            if (v28 < 0.00000001 || (v29 = *(_DWORD *)(*(_QWORD *)(v19 + 8) + 120), v29 <= 0))
            {
              v30 = (*(double (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            }
            else
            {
              if (*(_DWORD *)(v19 + 56) != v29)
                (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
              (**(void (***)(uint64_t, double, double))v19)(v19, v26, v28);
            }
            v31 = *(uint64_t **)&v30;
            if (v40[0])
            {
              v40[1] = v40[0];
              operator delete(v40[0]);
            }
            v41 = v31;
            sub_19C1CC134((int *)(a1 + 64), (uint64_t *)v48, &v41);
            ++v9;
          }
          while (v10 != v9);
        }
        sub_19C17B808((char **)v48);
        v32 = (_QWORD *)v7[1];
        if (v32)
        {
          do
          {
            v33 = (_QWORD **)v32;
            v32 = (_QWORD *)*v32;
          }
          while (v32);
        }
        else
        {
          do
          {
            v33 = (_QWORD **)v7[2];
            v34 = *v33 == v7;
            v7 = v33;
          }
          while (!v34);
        }
        v7 = v33;
      }
      while (v33 != v51);
    }
    v35 = *(uint64_t **)(a1 + 72);
    sub_19C1C1840((uint64_t **)v39, v35);
    *(_QWORD *)(v39 + 96) = v35[12];
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    sub_19C07C924((uint64_t)&v50, v51[0]);
    v36 = (char **)v52;
    if (v52)
    {
      v37 = v53;
      v38 = v52;
      if (v53 != (char **)v52)
      {
        do
          v37 = sub_19C17B808(v37 - 12);
        while (v37 != v36);
        v38 = v52;
      }
      v53 = v36;
      operator delete(v38);
    }
  }
  else
  {
    sub_19C1C1840((uint64_t **)a3, *(uint64_t **)(a1 + 72));
    *(_QWORD *)(a3 + 96) = *(_QWORD *)(v6 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
  }
}

void sub_19C205004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  char **v28;
  uint64_t v29;

  sub_19C17B808(v28);
  sub_19C07C924(a10, *(_QWORD **)(v29 - 184));
  sub_19C17AA64((void **)(v29 - 168));
  _Unwind_Resume(a1);
}

void sub_19C20509C(char *a1@<X8>)
{
  a1[23] = 17;
  strcpy(a1, "genetic_optimizer");
}

void sub_19C2050C0(char *a1@<X8>)
{
  a1[23] = 21;
  strcpy(a1, "acquisition_optimizer");
}

_QWORD *sub_19C2050E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *a1 = &unk_1E3D216A8;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 17) < 0)
          operator delete(*(void **)(v3 - 40));
        v3 -= 40;
      }
      while (v3 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  v5 = a1[2];
  if (v5)
  {
    v6 = a1[3];
    v7 = (void *)a1[2];
    if (v6 != v5)
    {
      do
      {
        if (*(char *)(v6 - 25) < 0)
          operator delete(*(void **)(v6 - 48));
        v6 -= 48;
      }
      while (v6 != v5);
      v7 = (void *)a1[2];
    }
    a1[3] = v5;
    operator delete(v7);
  }
  return a1;
}

void sub_19C2051B0(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  uint64_t *v11;
  uint64_t *v12;
  char **v13;
  uint64_t *v14;
  void *__p[4];
  uint64_t *v16;
  uint64_t *v17[13];
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;

  v18 = 5;
  v20 = 0;
  v21 = 0;
  v19 = 0;
  v3 = *(_QWORD *)(a1 + 72);
  v2 = (uint64_t *)(a1 + 72);
  if (v3 == *(_QWORD *)(a1 + 80))
  {
    v12 = 0;
    *(_DWORD *)(a1 + 64) = 5;
    if ((int *)(a1 + 64) == &v18)
      goto LABEL_18;
    goto LABEL_17;
  }
  do
  {
    sub_19C1C1840(v17, (uint64_t *)v3);
    v17[12] = *(uint64_t **)(v3 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)__p, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    v16 = 0;
    v4 = *(_QWORD *)(a1 + 8);
    sub_19C1CBD8C((__int128 **)v17, (uint64_t)__p);
    v5.n128_f64[0] = sub_19C205864(*(_QWORD *)(v4 + 8), (uint64_t)__p);
    v7 = sqrt(v6);
    if (v7 < 0.00000001 || (v8 = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 120), v8 <= 0))
    {
      v10 = (*(double (**)(uint64_t, __n128))(*(_QWORD *)v4 + 8))(v4, v5);
    }
    else
    {
      v9 = v5.n128_f64[0];
      if (*(_DWORD *)(v4 + 56) != v8)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      (**(void (***)(uint64_t, double, double))v4)(v4, v9, v7);
    }
    *(double *)&v11 = v10;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    v16 = v11;
    if (*(double *)&v11 > (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8)))
      sub_19C1CC134(&v18, (uint64_t *)v17, &v16);
    sub_19C17B808((char **)v17);
    v3 = *(_QWORD *)(a1 + 72);
  }
  while (v3 != *(_QWORD *)(a1 + 80));
  v12 = v19;
  *(_DWORD *)(a1 + 64) = v18;
  if ((int *)(a1 + 64) != &v18)
  {
LABEL_17:
    sub_19C1CC414(v2, v12, v20, 0x4EC4EC4EC4EC4EC5 * (v20 - v12));
    v12 = v19;
  }
LABEL_18:
  if (v12)
  {
    v13 = (char **)v20;
    v14 = v12;
    if (v20 != v12)
    {
      do
        v13 = sub_19C17B808(v13 - 13);
      while (v13 != (char **)v12);
      v14 = v19;
    }
    v20 = v12;
    operator delete(v14);
  }
}

void sub_19C2053E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_19C1CB740(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_19C2053F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  sub_19C17B808((char **)va);
  sub_19C1CB740(v7 - 120);
  _Unwind_Resume(a1);
}

void sub_19C205418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v15;

  if (__p)
    operator delete(__p);
  sub_19C17B808(&a15);
  sub_19C1CB740(v15 - 120);
  _Unwind_Resume(a1);
}

void sub_19C205444(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  int v5;
  void *__p[3];
  _QWORD v7[313];
  std::random_device v8;
  double *v9[3];

  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = a2 + 16;
  *(_QWORD *)(a2 + 24) = 0;
  sub_19C1CCB54(a1, __p);
  sub_19C17A140(v7, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v3 = 50;
  do
  {
    v5 = sub_19C1CCF6C((uint64_t)v9, (uint64_t)v7, v9);
    v4 = sub_19C1CCC40((int *)a2, &v5);
    ++*(_DWORD *)v4;
    --v3;
  }
  while (v3);
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
  std::random_device::~random_device(&v8);
}

void sub_19C205520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  _QWORD **v15;

  if (__p)
  {
    operator delete(__p);
    sub_19C07C924(v14, *v15);
    _Unwind_Resume(a1);
  }
  sub_19C07C924(v14, *v15);
  _Unwind_Resume(a1);
}

void sub_19C205580(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  void *v6[4];
  void *__p[4];
  void *v8[4];
  _OWORD v9[2];

  sub_19C1C1840(a3, a2);
  sub_19C1CD184((__int128 **)a2, (uint64_t)v8);
  sub_19C20570C(a1, (uint64_t *)v8, v9);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v6);
  sub_19C2057B8(a1, (uint64_t *)v6, __p);
  sub_19C1CD7E0((uint64_t *)a3, (uint64_t *)v9);
  sub_19C1CD99C((uint64_t)a3, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v6[0])
  {
    v6[1] = v6[0];
    operator delete(v6[0]);
  }
  if (*(_QWORD *)&v9[0])
  {
    *((_QWORD *)&v9[0] + 1) = *(_QWORD *)&v9[0];
    operator delete(*(void **)&v9[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
}

void sub_19C20564C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  char **v18;
  uint64_t v19;
  void *v21;
  void *v22;

  if (__p)
  {
    operator delete(__p);
    v21 = *(void **)(v19 - 64);
    if (!v21)
    {
LABEL_3:
      v22 = a17;
      if (!a17)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v21 = *(void **)(v19 - 64);
    if (!v21)
      goto LABEL_3;
  }
  *(_QWORD *)(v19 - 56) = v21;
  operator delete(v21);
  v22 = a17;
  if (!a17)
  {
LABEL_4:
    sub_19C17B808(v18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(v22);
  sub_19C17B808(v18);
  _Unwind_Resume(a1);
}

double sub_19C20570C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = (uint64_t *)(a1 + 16);
  if (sub_19C178A44((uint64_t *)(a1 + 16)))
  {
    sub_19C178B08(v5, (uint64_t *)v7);
    sub_19C239578(a2, (uint64_t)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C2057A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C2057B8@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = a1 + 16;
  if (sub_19C179558(a1 + 16))
  {
    sub_19C17961C(v5, (uint64_t *)v7);
    sub_19C23A200(a2, (uint64_t *)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C205850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C205864(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;
  double v6;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C2041C8(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v4 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v5 = __C;
    sub_19C205A44(a1, a2, (uint64_t)__A);
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v5 + v4;
  }
  else
  {
    v6 = sub_19C2040E8(a1, a2);
    sub_19C20596C(a1, a2);
  }
  return v6;
}

void sub_19C20594C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_19C20596C(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;
  double v6;
  double v8;
  double v9;
  double v10;
  void *__p[4];

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C2041C8(a1, a2, (uint64_t)__p);
    sub_19C205A44(a1, a2, (uint64_t)__p);
    v5 = v4;
    v6 = *(double *)(a1 + 16);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    return v6 + v5;
  }
  else
  {
    v8 = sub_19C204484(a1 + 8, a2, a2);
    v9 = *(double *)(a1 + 24);
    return *(double *)(a1 + 16) + exp(-v8) * v9 * (v8 + 1.0 + v10);
  }
}

void sub_19C205A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C205A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  _OWORD *v20;
  unsigned int v21;
  double v22;
  void *__p[3];
  int v24;
  double *__B[3];
  vDSP_Length __N;

  sub_19C1CE734(a1 + 192, (uint64_t)__p);
  v6 = *(unsigned int *)(a1 + 216);
  if ((int)v6 >= 1)
  {
    v7 = 0;
    v8 = *(_DWORD *)(a1 + 220);
    v9 = v24;
    v10 = 1;
    v11 = -1;
    v12 = __p[0];
    do
    {
      if (v8 <= v10)
        v13 = v10;
      else
        v13 = v8;
      v14 = v7 + 1;
      if ((int)v7 + 1 >= v8)
        goto LABEL_3;
      v15 = 0;
      v16 = v13 + v11;
      v17 = (int)v7 * (uint64_t)v9;
      if ((v13 + v11) < 4)
      {
        v18 = v7 + 1;
      }
      else
      {
        v18 = v7 + 1;
        if (v13 - (int)v7 + v10 - 2 >= v10)
        {
          v19 = 0;
          v15 = v16 & 0xFFFFFFFC;
          v18 = v14 + (v16 & 0xFFFFFFFC);
          do
          {
            v20 = &v12[v17 + v10 + v19];
            *v20 = 0uLL;
            v20[1] = 0uLL;
            v19 += 4;
          }
          while ((v16 & 0xFFFFFFFC) != v19);
          if (v16 == v15)
            goto LABEL_3;
        }
      }
      v21 = v13 - v15;
      do
      {
        v12[v17 + v18] = 0;
        v18 = ++v15 + v14;
        --v21;
      }
      while (v10 != v21);
LABEL_3:
      ++v7;
      ++v10;
      --v11;
    }
    while (v7 != v6);
  }
  sub_19C1CE5B4((uint64_t)__p, a3, (uint64_t)__B);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v22 = sub_19C204484(a1 + 8, a2, a2);
  __p[0] = 0;
  vDSP_dotprD(__B[0], 1, __B[0], 1, (double *)__p, (int)__N);
  if (__B[0])
  {
    __B[1] = __B[0];
    operator delete(__B[0]);
  }
  exp(-v22);
}

void sub_19C205C18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C205C48(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  void *v32[4];
  void *v33[4];
  void *v34;
  void **v35;
  uint64_t v36;
  void *__p;
  void **v38;
  uint64_t v39;

  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_19C17AF88(&v34, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v38 = 0;
  v39 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D216A8;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v34, (uint64_t)v35, 0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (_BYTE *)v34) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v38, 0xCCCCCCCCCCCCCCCDLL * (((char *)v38 - (_BYTE *)__p) >> 3));
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v38;
    v10 = __p;
    if (v38 != __p)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v38 = v8;
    operator delete(v10);
  }
  v11 = (void **)v34;
  if (v34)
  {
    v12 = v35;
    v13 = v34;
    if (v35 != v34)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v34;
    }
    v35 = v11;
    operator delete(v13);
  }
  *(_QWORD *)a1 = &unk_1E3D212B8;
  v14 = sub_19C178A44(a3);
  sub_19C1CF858(a1 + 64, v14);
  sub_19C1C81AC(a1 + 184);
  sub_19C178B08(a3, (uint64_t *)v32);
  sub_19C1D0468(a1 + 64, (uint64_t *)v32);
  sub_19C1D0594(a1 + 64, (uint64_t *)v33);
  if (v33[0])
  {
    v33[1] = v33[0];
    operator delete(v33[0]);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  if ((a4 & 0xFF00000000) != 0)
  {
    v15 = 0;
    *(_DWORD *)(a1 + 7776) = a4;
    v16 = 1;
    v17 = a4;
    do
    {
      v18 = 1812433253 * (v17 ^ (v17 >> 30));
      v17 = v18 + v16;
      *(_DWORD *)(a1 + 7780 + 4 * v15) = v15 + v18 + 1;
      ++v16;
      ++v15;
    }
    while (v15 != 623);
    *(_QWORD *)(a1 + 10272) = 0;
    *(_DWORD *)(a1 + 184) = a4;
    v19 = 1;
    v20 = 47;
    v21 = a4;
    do
    {
      v22 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v22 + v19;
      *(_DWORD *)(a1 + 4 * v20) = v20 + v22 - 46;
      ++v19;
      ++v20;
    }
    while (v20 != 670);
    v23 = 0;
    *(_QWORD *)(a1 + 2680) = 0;
    *(_DWORD *)(a1 + 2712) = a4;
    v24 = 1;
    v25 = a4;
    do
    {
      v26 = 1812433253 * (v25 ^ (v25 >> 30));
      v25 = v26 + v24;
      *(_DWORD *)(a1 + 2716 + 4 * v23) = v23 + v26 + 1;
      ++v24;
      ++v23;
    }
    while (v23 != 623);
    v27 = 0;
    *(_QWORD *)(a1 + 5208) = 0;
    *(_DWORD *)(a1 + 5232) = a4;
    v28 = 1;
    v29 = a4;
    do
    {
      v30 = 1812433253 * (v29 ^ (v29 >> 30));
      v29 = v30 + v28;
      *(_DWORD *)(a1 + 5236 + 4 * v27) = v27 + v30 + 1;
      ++v28;
      ++v27;
    }
    while (v27 != 623);
    *(_QWORD *)(a1 + 7728) = 0;
    sub_19C23B684();
  }
  return a1;
}

void sub_19C205F64(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  sub_19C1CF8E8(v2);
  sub_19C2050E8(v1);
  _Unwind_Resume(a1);
}

void sub_19C205FF8(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_19C2050E8(v1);
  _Unwind_Resume(a1);
}

void sub_19C206010(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_19C206528(a1);
  operator delete(v1);
}

void sub_19C206024(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  double v6;
  void **v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t **v13;
  uint64_t **i;
  uint64_t **v15;
  char **v16;
  uint64_t **v17;
  char **v18;
  char **v19;
  void *v20;
  double v21;
  double v22;
  BOOL v23;
  char v24;
  __int128 **v25;
  char **v26;
  char *v27;
  void *__p;
  char **v29;
  uint64_t *v30[12];
  _OWORD v31[3];
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[2];
  double v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  __int128 **v43;
  char *v44;
  uint64_t **v45;
  uint64_t **v46;

  v32 = 0u;
  memset(v31, 0, sizeof(v31));
  *(_QWORD *)&v32 = (char *)&v32 + 8;
  v35[0] = 0;
  v35[1] = 0;
  v33 = 0;
  v34 = v35;
  v6 = (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8));
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)v31);
  *(double *)(a3 + 96) = v6;
  sub_19C17B808((char **)v31);
  v38 = 0;
  v39 = 0;
  v37 = 0;
  sub_19C17AF88(&v37, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 4));
  v40 = 0;
  v41 = 0;
  v42 = 0;
  sub_19C17B16C(&v40, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 3));
  sub_19C17A144((uint64_t *)&v37, a1 + 184, 5, (char **)&v43);
  v7 = v40;
  if (v40)
  {
    v8 = v41;
    v9 = v40;
    if (v41 != v40)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v40;
    }
    v41 = v7;
    operator delete(v9);
  }
  v10 = (uint64_t)v37;
  if (v37)
  {
    v11 = v38;
    v12 = v37;
    if ((void *)v38 != v37)
    {
      do
      {
        if (*(char *)(v11 - 25) < 0)
          operator delete(*(void **)(v11 - 48));
        v11 -= 48;
      }
      while (v11 != v10);
      v12 = v37;
    }
    v38 = v10;
    operator delete(v12);
  }
  sub_19C2065D0(a1, v43, (uint64_t)v31);
  sub_19C1C9C8C(a3, (uint64_t)v31);
  *(double *)(a3 + 96) = v36;
  sub_19C17B808((char **)v31);
  sub_19C2065D0(a1, v43 + 12, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C2065D0(a1, v43 + 24, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C2065D0(a1, v43 + 36, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C2065D0(a1, v43 + 48, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1CCA84((uint64_t ***)&__p, a2);
  sub_19C1CCA84(&v45, (uint64_t **)&__p);
  v13 = v45;
  if (v45 != v46)
  {
    for (i = v45 + 13; i != v46; i += 13)
    {
      if (*((double *)v13 + 12) < *((double *)i + 12))
        v13 = i;
    }
  }
  sub_19C1C1840((uint64_t **)v31, (uint64_t *)v13);
  v36 = *((double *)v13 + 12);
  v15 = v45;
  if (v45)
  {
    v16 = (char **)v46;
    v17 = v45;
    if (v46 != v45)
    {
      do
        v16 = sub_19C17B808(v16 - 13);
      while (v16 != (char **)v15);
      v17 = v45;
    }
    v46 = v15;
    operator delete(v17);
  }
  sub_19C1C5D14(v30, (uint64_t)v31);
  sub_19C17B808((char **)v31);
  v18 = (char **)__p;
  if (__p)
  {
    v19 = v29;
    v20 = __p;
    if (v29 != __p)
    {
      do
        v19 = sub_19C17B808(v19 - 13);
      while (v19 != v18);
      v20 = __p;
    }
    v29 = v18;
    operator delete(v20);
  }
  sub_19C2065D0(a1, (__int128 **)v30, (uint64_t)v31);
  v21 = v36;
  v22 = *(double *)(a3 + 96);
  v23 = sub_19C1D16FC((uint64_t *)v31, v30);
  v24 = v21 <= v22 || v23;
  if ((v24 & 1) == 0)
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C17B808((char **)v30);
  v25 = v43;
  if (v43)
  {
    v26 = (char **)v44;
    v27 = (char *)v43;
    if (v44 != (char *)v43)
    {
      do
        v26 = sub_19C17B808(v26 - 12);
      while (v26 != (char **)v25);
      v27 = (char *)v43;
    }
    v44 = (char *)v25;
    operator delete(v27);
  }
}

void sub_19C206450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  char **v5;
  uint64_t v6;
  char *v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, char *);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  sub_19C17B808((char **)va1);
  sub_19C17B808((char **)va);
  sub_19C17AA64((void **)(v6 - 112));
  sub_19C17B808(v5);
  _Unwind_Resume(a1);
}

void sub_19C206508(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "direct_optimizer");
}

_QWORD *sub_19C206528(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = &unk_1E3D212B8;
  std::random_device::~random_device((std::random_device *)(a1 + 10280));
  std::random_device::~random_device((std::random_device *)(a1 + 7736));
  std::random_device::~random_device((std::random_device *)(a1 + 5216));
  std::random_device::~random_device((std::random_device *)(a1 + 2688));
  *(_QWORD *)(a1 + 64) = &unk_1E3D21150;
  sub_19C23AA14(*(_QWORD *)(a1 + 72));
  v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(_QWORD *)(a1 + 136) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 104);
  if (v3)
  {
    *(_QWORD *)(a1 + 112) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 80);
  if (v4)
  {
    *(_QWORD *)(a1 + 88) = v4;
    operator delete(v4);
  }
  return sub_19C2050E8((_QWORD *)a1);
}

void sub_19C2065D0(uint64_t a1@<X0>, __int128 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float64x2_t *v9;
  char *v10;
  uint64_t v11;
  float64x2_t *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  int64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  int v25;
  double v26;
  double v27;
  void *v28[3];
  unsigned int v29;
  void *v30;
  char *v31;
  char *v32;
  int v33;
  void *v34;
  void *v35;
  void *__p[12];
  void *v37[4];
  _QWORD v38[2];

  v38[0] = a1;
  v38[1] = a2;
  v6 = a1 + 64;
  sub_19C1CD184(a2, (uint64_t)__p);
  sub_19C206954(v6, (uint64_t)v38, (uint64_t *)__p, (uint64_t)v37);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_19C1CD508((uint64_t)a2, (uint64_t)&v34);
  sub_19C1C1840((uint64_t **)__p, (uint64_t *)a2);
  sub_19C1CD7E0((uint64_t *)__p, (uint64_t *)v37);
  sub_19C1CD99C((uint64_t)__p, (uint64_t *)&v34);
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  v7 = *(_QWORD *)(a1 + 8);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v28);
  v8 = v29;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  if (!v29)
  {
    v33 = 0;
    goto LABEL_15;
  }
  if ((v29 & 0x80000000) != 0)
    sub_19C07DA0C();
  v9 = (float64x2_t *)operator new(8 * (int)v29);
  v30 = v9;
  v32 = (char *)&v9->f64[(int)v8];
  bzero(v9, 8 * (int)v8);
  v31 = (char *)&v9->f64[(int)v8];
  v33 = v8;
  v10 = (char *)v28[0];
  if (v8 < 8)
  {
    v11 = 0;
LABEL_13:
    v20 = v8 - v11;
    v21 = v11 << 32;
    do
    {
      *(double *)((char *)v9->f64 + (v21 >> 29)) = (double)*(int *)&v10[v21 >> 30];
      v21 += 0x100000000;
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
  v11 = v8 & 0xFFFFFFF8;
  v12 = v9 + 2;
  v13 = (char *)v28[0] + 16;
  v14 = v11;
  do
  {
    v15 = *((_OWORD *)v13 - 1);
    v16.i64[0] = (int)v15;
    v16.i64[1] = SDWORD1(v15);
    v17 = vcvtq_f64_s64(v16);
    v16.i64[0] = SDWORD2(v15);
    v16.i64[1] = SHIDWORD(v15);
    v18 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*(_OWORD *)v13;
    v16.i64[1] = (int)HIDWORD(*(_QWORD *)v13);
    v19 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*((_QWORD *)v13 + 1);
    v16.i64[1] = (int)HIDWORD(*(_OWORD *)v13);
    v12[-2] = v17;
    v12[-1] = v18;
    *v12 = v19;
    v12[1] = vcvtq_f64_s64(v16);
    v12 += 4;
    v13 += 32;
    v14 -= 8;
  }
  while (v14);
  if (v11 != v8)
    goto LABEL_13;
LABEL_15:
  sub_19C1CEDDC((uint64_t)v37, (uint64_t)&v30, (uint64_t)&v34);
  v22 = sub_19C205864(*(_QWORD *)(v7 + 8), (uint64_t)&v34);
  v24 = sqrt(v23);
  if (v24 < 0.00000001 || (v25 = *(_DWORD *)(*(_QWORD *)(v7 + 8) + 120), v25 <= 0))
  {
    v26 = (*(double (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  else
  {
    if (*(_DWORD *)(v7 + 56) != v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    (**(void (***)(uint64_t, double, double))v7)(v7, v22, v24);
  }
  v27 = v26;
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)__p);
  *(double *)(a3 + 96) = v27;
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  if (v30)
  {
    v31 = (char *)v30;
    operator delete(v30);
  }
  if (v28[0])
  {
    v28[1] = v28[0];
    operator delete(v28[0]);
  }
  sub_19C17B808((char **)__p);
  if (v37[0])
  {
    v37[1] = v37[0];
    operator delete(v37[0]);
  }
}

void sub_19C20687C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v24;
  void *v25;

  if (a13)
  {
    operator delete(a13);
    v24 = __p;
    if (!__p)
    {
LABEL_4:
      sub_19C17B808((char **)&a21);
      v25 = *(void **)(v22 - 128);
      if (v25)
      {
        *(_QWORD *)(v22 - 120) = v25;
        operator delete(v25);
      }
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v24 = __p;
    if (!__p)
      goto LABEL_4;
  }
  operator delete(v24);
  goto LABEL_4;
}

void sub_19C206954(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C206EA4;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C206D9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C206BA8);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

void sub_19C206EA4(uint64_t **a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  void *__p;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v18 = 0;
  v19 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    __p = 0;
    v18 = 0;
    v19 = 0;
    v20 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  __p = v8;
  v18 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v19 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v20 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C207074(a3, (uint64_t)&__p);
    if (__p)
    {
      v18 = (char *)__p;
      operator delete(__p);
    }
  }
  else
  {
    sub_19C207074(a3, (uint64_t)&__p);
    __break(1u);
  }
}

void sub_19C207038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C207058(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

uint64_t sub_19C207074(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  float64x2_t *v5;
  char *v6;
  uint64_t v7;
  float64x2_t *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  int64x2_t v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  int v21;
  double v22;
  double v23;
  void *v25[3];
  unsigned int v26;
  void *v27;
  char *v28;
  char *v29;
  int v30;
  void *__p[4];

  v3 = *(_QWORD *)(*a1 + 8);
  sub_19C1CD508(a1[1], (uint64_t)v25);
  v4 = v26;
  v28 = 0;
  v29 = 0;
  v27 = 0;
  if (!v26)
  {
    v30 = 0;
    goto LABEL_11;
  }
  if ((v26 & 0x80000000) != 0)
    sub_19C07DA0C();
  v5 = (float64x2_t *)operator new(8 * (int)v26);
  v27 = v5;
  v29 = (char *)&v5->f64[(int)v4];
  bzero(v5, 8 * (int)v4);
  v28 = (char *)&v5->f64[(int)v4];
  v30 = v4;
  v6 = (char *)v25[0];
  if (v4 < 8)
  {
    v7 = 0;
LABEL_9:
    v16 = v4 - v7;
    v17 = v7 << 32;
    do
    {
      *(double *)((char *)v5->f64 + (v17 >> 29)) = (double)*(int *)&v6[v17 >> 30];
      v17 += 0x100000000;
      --v16;
    }
    while (v16);
    goto LABEL_11;
  }
  v7 = v4 & 0xFFFFFFF8;
  v8 = v5 + 2;
  v9 = (char *)v25[0] + 16;
  v10 = v7;
  do
  {
    v11 = *((_OWORD *)v9 - 1);
    v12.i64[0] = (int)v11;
    v12.i64[1] = SDWORD1(v11);
    v13 = vcvtq_f64_s64(v12);
    v12.i64[0] = SDWORD2(v11);
    v12.i64[1] = SHIDWORD(v11);
    v14 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*(_OWORD *)v9;
    v12.i64[1] = (int)HIDWORD(*(_QWORD *)v9);
    v15 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*((_QWORD *)v9 + 1);
    v12.i64[1] = (int)HIDWORD(*(_OWORD *)v9);
    v8[-2] = v13;
    v8[-1] = v14;
    *v8 = v15;
    v8[1] = vcvtq_f64_s64(v12);
    v8 += 4;
    v9 += 32;
    v10 -= 8;
  }
  while (v10);
  if (v7 != v4)
    goto LABEL_9;
LABEL_11:
  sub_19C1CEDDC(a2, (uint64_t)&v27, (uint64_t)__p);
  v18 = sub_19C205864(*(_QWORD *)(v3 + 8), (uint64_t)__p);
  v20 = sqrt(v19);
  if (v20 < 0.00000001 || (v21 = *(_DWORD *)(*(_QWORD *)(v3 + 8) + 120), v21 <= 0))
  {
    v22 = (*(double (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  else
  {
    if (*(_DWORD *)(v3 + 56) != v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    (**(void (***)(uint64_t, double, double))v3)(v3, v18, v20);
  }
  v23 = v22;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v27)
  {
    v28 = (char *)v27;
    operator delete(v27);
  }
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
  return *(_QWORD *)&v23;
}

void sub_19C207274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  void *v19;

  if (__p)
  {
    operator delete(__p);
    v19 = a9;
    if (!a9)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v19 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C2072F4(uint64_t a1)
{
  char **v2;
  char **v3;
  char **v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char **v13;
  char **v14;
  void *v15;

  *(_QWORD *)a1 = &unk_1E3D21828;
  v2 = *(char ***)(a1 + 10680);
  if (v2)
  {
    v3 = *(char ***)(a1 + 10688);
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 12);
      while (v3 != v2);
      v4 = *(char ***)(a1 + 10680);
    }
    *(_QWORD *)(a1 + 10688) = v2;
    operator delete(v4);
  }
  std::random_device::~random_device((std::random_device *)(a1 + 10672));
  std::random_device::~random_device((std::random_device *)(a1 + 8128));
  std::random_device::~random_device((std::random_device *)(a1 + 5608));
  std::random_device::~random_device((std::random_device *)(a1 + 3080));
  v5 = *(_QWORD *)(a1 + 568);
  *(_QWORD *)(a1 + 568) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  *(_QWORD *)(a1 + 504) = &unk_1E3D20F98;
  v6 = *(void **)(a1 + 520);
  if (v6)
  {
    *(_QWORD *)(a1 + 528) = v6;
    operator delete(v6);
  }
  sub_19C1EC3CC((_QWORD *)(a1 + 176));
  v7 = *(_QWORD *)(a1 + 152);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 160);
    v9 = *(void **)(a1 + 152);
    if (v8 != v7)
    {
      v10 = *(_QWORD *)(a1 + 160);
      do
      {
        v12 = *(void **)(v10 - 56);
        v10 -= 56;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v8 - 48) = v11;
          operator delete(v11);
        }
        v8 = v10;
      }
      while (v10 != v7);
      v9 = *(void **)(a1 + 152);
    }
    *(_QWORD *)(a1 + 160) = v7;
    operator delete(v9);
  }
  *(_QWORD *)a1 = &unk_1E3D214F8;
  sub_19C1C2E88(a1 + 32);
  v13 = *(char ***)(a1 + 8);
  if (v13)
  {
    v14 = *(char ***)(a1 + 16);
    v15 = *(void **)(a1 + 8);
    if (v14 != v13)
    {
      do
        v14 = sub_19C17B808(v14 - 13);
      while (v14 != v13);
      v15 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v13;
    operator delete(v15);
  }
  return a1;
}

void sub_19C20746C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  void *__p[4];

  v5 = (uint64_t *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 96);
  v6 = *(_DWORD *)(a1 + 120);
  v7 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 120) = v6 + 1;
  *(_DWORD *)(a1 + 124) = v7;
  v8 = v7 * (v6 + 1);
  v9 = (*(_QWORD *)(a1 + 104) - v4) >> 3;
  if (v8 <= v9)
  {
    if (v8 < v9)
      *(_QWORD *)(a1 + 104) = v4 + 8 * v8;
  }
  else
  {
    sub_19C17C9D8(a1 + 96, v8 - v9);
    v6 = *(_DWORD *)(a1 + 120) - 1;
  }
  sub_19C1CE998(a2, (uint64_t)__p);
  v10 = *(int *)(a1 + 124);
  v11 = (char *)__p[0];
  if (!(_DWORD)v10)
  {
    if (!__p[0])
      goto LABEL_18;
    goto LABEL_17;
  }
  v12 = (int)v10 * (uint64_t)v6;
  v13 = *v5;
  if (v10 >= 8 && (v14 = 8 * v12 + v13, v14 - (unint64_t)__p[0] >= 0x20))
  {
    v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    v20 = (__int128 *)((char *)__p[0] + 16);
    v21 = (_OWORD *)(v14 + 16);
    v22 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v23 = *v20;
      *(v21 - 1) = *(v20 - 1);
      *v21 = v23;
      v20 += 2;
      v21 += 2;
      v22 -= 4;
    }
    while (v22);
    if (v15 == v10)
      goto LABEL_17;
  }
  else
  {
    v15 = 0;
  }
  v16 = v10 - v15;
  v17 = (_QWORD *)(v13 + 8 * (v15 + v12));
  v18 = &v11[8 * v15];
  do
  {
    v19 = *(_QWORD *)v18;
    v18 += 8;
    *v17++ = v19;
    --v16;
  }
  while (v16);
LABEL_17:
  __p[1] = v11;
  operator delete(v11);
LABEL_18:
  sub_19C2075A4(a1, 1, 1);
}

void sub_19C2075A4(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  signed int v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  char *v32;
  char *v33;
  uint64_t v35;
  void *__p;
  void *v37;
  uint64_t v38;
  unsigned int v39;
  char *__C;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  if (a2)
  {
    v5 = (_QWORD *)(a1 + 128);
    v4 = *(_QWORD *)(a1 + 128);
    v6 = *(_DWORD *)(a1 + 120);
    *(_DWORD *)(a1 + 152) = v6;
    v7 = (*(_QWORD *)(a1 + 136) - v4) >> 3;
    v35 = v6;
    if (v6 <= v7)
    {
      if (v6 < v7)
        *(_QWORD *)(a1 + 136) = v4 + 8 * v6;
    }
    else
    {
      sub_19C17C9D8(a1 + 128, v6 - v7);
      v6 = *(_DWORD *)(a1 + 120);
      v35 = v6;
    }
    if (v6)
    {
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *(_QWORD *)(a1 + 96);
        v11 = *(_DWORD *)(a1 + 124);
        __C = 0;
        v41 = 0;
        v42 = 0;
        if (v11)
          break;
        v12 = 0;
        v37 = 0;
        v38 = 0;
        __p = 0;
        v39 = 0;
LABEL_26:
        __C = 0;
        vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)&__C, *(int *)(a1 + 312));
        *(_QWORD *)(*v5 + 8 * v9) = __C;
        if (__p)
        {
          v37 = __p;
          operator delete(__p);
        }
        if (v12)
          operator delete(v12);
        ++v9;
        v8 += 8;
        if (v9 == v35)
          goto LABEL_34;
      }
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = operator new(8 * v11);
      bzero(v12, 8 * v11);
      if (v11 >= 8 && (unint64_t)v12 - v10 - 8 * v9 * v11 >= 0x20)
      {
        v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
        v28 = (__int128 *)(v10 + v8 * v11 + 16);
        v29 = v12 + 1;
        v30 = v13;
        do
        {
          v31 = *v28;
          *(v29 - 1) = *(v28 - 1);
          *v29 = v31;
          v28 += 2;
          v29 += 2;
          v30 -= 4;
        }
        while (v30);
        if (v13 == v11)
        {
LABEL_16:
          __p = 0;
          v37 = 0;
          v38 = 0;
          v39 = v11;
          sub_19C17C9D8((uint64_t)&__p, v11);
          v19 = v39;
          if ((int)v39 >= 1)
          {
            v20 = 0;
            v21 = (char *)__p;
            if (v39 < 4)
              goto LABEL_22;
            if ((unint64_t)((_BYTE *)__p - (_BYTE *)v12) < 0x20)
              goto LABEL_22;
            v22 = 0;
            v20 = v39 & 0xFFFFFFFC;
            v23 = (8 * v39) & 0x7FFFFFFE0;
            do
            {
              v24 = v12[v22 / 0x10 + 1];
              v25 = &v21[v22];
              *(_OWORD *)v25 = v12[v22 / 0x10];
              *((_OWORD *)v25 + 1) = v24;
              v22 += 32;
            }
            while (v23 != v22);
            if (v20 != v19)
            {
LABEL_22:
              v26 = v19 - v20;
              v27 = v20 << 32;
              do
              {
                *(_QWORD *)&v21[v27 >> 29] = *(_QWORD *)((char *)v12 + (v27 >> 29));
                v27 += 0x100000000;
                --v26;
              }
              while (v26);
            }
          }
          goto LABEL_26;
        }
      }
      else
      {
        v13 = 0;
      }
      v14 = v11 - v13;
      v15 = 8 * v13;
      v16 = (_QWORD *)v12 + v13;
      v17 = (uint64_t *)(v10 + v15 + v8 * v11);
      do
      {
        v18 = *v17++;
        *v16++ = v18;
        --v14;
      }
      while (v14);
      goto LABEL_16;
    }
  }
LABEL_34:
  sub_19C207920(a1 + 8, (uint64_t *)(a1 + 96), (uint64_t)&__C);
  if ((char **)(a1 + 160) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 160), __C, v41, (v41 - __C) >> 3);
  v32 = __C;
  *(_QWORD *)(a1 + 184) = v43;
  if (v32)
  {
    v41 = v32;
    operator delete(v32);
  }
  sub_19C1D3978(a1 + 160, (uint64_t)&__C);
  if ((char **)(a1 + 192) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 192), __C, v41, (v41 - __C) >> 3);
  v33 = __C;
  *(_QWORD *)(a1 + 216) = v43;
  if (v33)
  {
    v41 = v33;
    operator delete(v33);
  }
  sub_19C207DEC(a1);
  if (a3)
    sub_19C20800C((int32x2_t *)a1);
}

void sub_19C2078BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C207920(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  size_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  signed int v12;
  char *v13;
  size_t v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  _OWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  __int128 *v34;
  _OWORD *v35;
  unint64_t v36;
  __int128 v37;
  __int128 *v38;
  _OWORD *v39;
  unint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  char *v58;
  signed int v59;
  void *__p;
  char *v61;
  char *v62;
  signed int v63;

  v4 = *((unsigned int *)a2 + 6);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  if (!(_DWORD)v4)
  {
    v7 = 0;
    *(_DWORD *)(a3 + 24) = 0;
    *(_DWORD *)(a3 + 28) = 0;
LABEL_41:
    v42 = (int)v4;
    if ((_DWORD)v4)
      goto LABEL_42;
    return;
  }
  v6 = 8 * (v4 * v4);
  v7 = (char *)operator new(v6);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 16) = &v7[v6];
  bzero(v7, v6);
  *(_QWORD *)(a3 + 8) = &v7[v6];
  *(_DWORD *)(a3 + 24) = v4;
  *(_DWORD *)(a3 + 28) = v4;
  if ((int)v4 <= 0)
    goto LABEL_41;
  v52 = 0;
  v8 = 0;
  v55 = 1;
  v48 = v4;
  v50 = a1;
  do
  {
    v9 = 0;
    v10 = 0;
    v49 = 8 * v8;
    v54 = (int)v8 * v4;
    v51 = v8;
    do
    {
      v11 = *a2;
      v12 = *((_DWORD *)a2 + 7);
      __p = 0;
      v61 = 0;
      v62 = 0;
      if (v12)
      {
        if (v12 < 0)
          sub_19C07DA0C();
        v13 = v7;
        v14 = 8 * v12;
        v15 = operator new(v14);
        bzero(v15, v14);
        if (v12 < 8 || (unint64_t)v15 - v11 - v49 * v12 < 0x20)
        {
          v16 = 0;
          goto LABEL_12;
        }
        v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v34 = (__int128 *)(v11 + v52 * v12 + 16);
        v35 = v15 + 1;
        v36 = v16;
        do
        {
          v37 = *v34;
          *(v35 - 1) = *(v34 - 1);
          *v35 = v37;
          v34 += 2;
          v35 += 2;
          v36 -= 4;
        }
        while (v36);
        if (v16 != v12)
        {
LABEL_12:
          v17 = v12 - v16;
          v18 = 8 * v16;
          v19 = (_QWORD *)v15 + v16;
          v20 = (uint64_t *)(v11 + v18 + v52 * v12);
          do
          {
            v21 = *v20++;
            *v19++ = v21;
            --v17;
          }
          while (v17);
        }
        v56 = 0;
        v57 = 0;
        v59 = 0;
        v58 = 0;
        v56 = operator new(8 * v12);
        v57 = (char *)v56 + v14;
        v58 = (char *)v56 + 8 * v12;
        v59 = v12;
        memcpy(v56, v15, 8 * v12);
        v22 = operator new(8 * v12);
        bzero(v22, 8 * v12);
        if (v12 < 8 || (unint64_t)v22 - v11 - 8 * v10 * v12 < 0x20)
        {
          v23 = 0;
          goto LABEL_17;
        }
        v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v38 = (__int128 *)(v11 + v9 * v12 + 16);
        v39 = v22 + 1;
        v40 = v23;
        do
        {
          v41 = *v38;
          *(v39 - 1) = *(v38 - 1);
          *v39 = v41;
          v38 += 2;
          v39 += 2;
          v40 -= 4;
        }
        while (v40);
        if (v23 != v12)
        {
LABEL_17:
          v24 = v12 - v23;
          v25 = 8 * v23;
          v26 = (_QWORD *)v22 + v23;
          v27 = (uint64_t *)(v11 + v25 + v9 * v12);
          do
          {
            v28 = *v27++;
            *v26++ = v28;
            --v24;
          }
          while (v24);
        }
        __p = 0;
        v61 = 0;
        v63 = 0;
        v62 = 0;
        v29 = (int)v10;
        __p = operator new(8 * v12);
        v61 = (char *)__p + v14;
        v62 = (char *)__p + 8 * v12;
        v63 = v12;
        memcpy(__p, v22, 8 * v12);
        v7 = v13;
        a1 = v50;
        v8 = v51;
        goto LABEL_21;
      }
      v15 = 0;
      v22 = 0;
      v57 = 0;
      v58 = 0;
      v56 = 0;
      v59 = 0;
      v29 = (int)v10;
      __p = 0;
      v61 = 0;
      v63 = 0;
      v62 = 0;
LABEL_21:
      v30 = sub_19C204484(a1, (uint64_t)&v56, (uint64_t)&__p);
      v31 = *(double *)(a1 + 16);
      v33 = (v30 + 1.0 + v32) * (exp(-v30) * v31);
      if ((_DWORD)v8 == (_DWORD)v10)
        v33 = v33 + *(double *)(a1 + 8) + 1.0e-10;
      *(double *)&v7[8 * v29 + 8 * v54] = v33;
      if (__p)
      {
        v61 = (char *)__p;
        operator delete(__p);
      }
      if (v22)
        operator delete(v22);
      if (v56)
      {
        v57 = (char *)v56;
        operator delete(v56);
      }
      if (v15)
        operator delete(v15);
      ++v10;
      v9 += 8;
    }
    while (v10 != v55);
    ++v8;
    ++v55;
    v52 += 8;
    v4 = v48;
  }
  while (v8 != v48);
  v42 = v48;
LABEL_42:
  if (v42 != 1)
  {
    v43 = 0;
    v44 = 8 * v42;
    v45 = v7;
    do
    {
      if (v43)
      {
        v46 = 0;
        v47 = v45;
        do
        {
          *v47 = *(_QWORD *)&v7[8 * v46++];
          v47 = (_QWORD *)((char *)v47 + v44);
        }
        while (v43 != v46);
      }
      ++v43;
      ++v45;
      v7 += v44;
    }
    while (v43 != v42);
  }
}

void sub_19C207D50(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C207D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v28;

  if (__p)
  {
    operator delete(__p);
    if (!v25)
    {
LABEL_3:
      v28 = a18;
      if (!a18)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v25)
  {
    goto LABEL_3;
  }
  operator delete(v25);
  v28 = a18;
  if (!a18)
  {
LABEL_4:
    if (!v23)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v28);
  if (!v23)
  {
LABEL_5:
    *(_QWORD *)(v26 + 8) = v24;
    operator delete(v24);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(v23);
  *(_QWORD *)(v26 + 8) = v24;
  operator delete(v24);
  _Unwind_Resume(a1);
}

void sub_19C207DEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _OWORD *v16;
  unsigned int v17;
  void *v18[4];
  void *__p;
  char *v20;
  int v21;
  void *v22[3];
  int v23;

  sub_19C1CE734(a1 + 192, (uint64_t)v22);
  v2 = *(unsigned int *)(a1 + 216);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    v4 = *(_DWORD *)(a1 + 220);
    v5 = v23;
    v6 = 1;
    v7 = -1;
    v8 = v22[0];
    do
    {
      if (v4 <= v6)
        v9 = v6;
      else
        v9 = v4;
      v10 = v3 + 1;
      if ((int)v3 + 1 >= v4)
        goto LABEL_3;
      v11 = 0;
      v12 = v9 + v7;
      v13 = (int)v3 * (uint64_t)v5;
      if ((v9 + v7) < 4)
      {
        v14 = v3 + 1;
      }
      else
      {
        v14 = v3 + 1;
        if (v9 - (int)v3 + v6 - 2 >= v6)
        {
          v15 = 0;
          v11 = v12 & 0xFFFFFFFC;
          v14 = v10 + (v12 & 0xFFFFFFFC);
          do
          {
            v16 = &v8[v13 + v6 + v15];
            *v16 = 0uLL;
            v16[1] = 0uLL;
            v15 += 4;
          }
          while ((v12 & 0xFFFFFFFC) != v15);
          if (v12 == v11)
            goto LABEL_3;
        }
      }
      v17 = v9 - v11;
      do
      {
        v8[v13 + v14] = 0;
        v14 = ++v11 + v10;
        --v17;
      }
      while (v6 != v17);
LABEL_3:
      ++v3;
      ++v6;
      --v7;
    }
    while (v3 != v2);
  }
  sub_19C208270(a1, (uint64_t)v18);
  sub_19C1CE5B4((uint64_t)v22, (uint64_t)v18, (uint64_t)&__p);
  if ((void **)(a1 + 256) != &__p)
    sub_19C11EAD0((_QWORD *)(a1 + 256), (char *)__p, v20, (v20 - (_BYTE *)__p) >> 3);
  *(_DWORD *)(a1 + 280) = v21;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  sub_19C1CEB00((uint64_t)v22, &__p);
  sub_19C1D43B4((uint64_t)&__p, a1 + 256);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v22[0])
  {
    v22[1] = v22[0];
    operator delete(v22[0]);
  }
}

void sub_19C207FA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  if (a9)
    operator delete(a9);
  if (a17)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_19C20800C(int32x2_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int32 v14;
  int v15;
  int v16;
  _QWORD *v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  _OWORD *v25;
  unsigned int v26;
  void *__p;
  char *v28;
  int32x2_t v29;

  v2 = a1[15].u32[0];
  sub_19C176BE8(v2, v2, (uint64_t)&__p);
  if ((int)v2 >= 1)
  {
    v3 = v29.i32[1] + 1;
    v4 = __p;
    if ((_DWORD)v2 == 1)
    {
      v5 = 0;
LABEL_7:
      v8 = v2 - v5;
      v9 = v5 << 32;
      do
      {
        v4[(v9 >> 32) * v3] = 0x3FF0000000000000;
        v9 += 0x100000000;
        --v8;
      }
      while (v8);
      goto LABEL_9;
    }
    v6 = 0;
    v5 = v2 & 0xFFFFFFFE;
    v7 = v5;
    do
    {
      v4[(v6 >> 32) * v3] = 0x3FF0000000000000;
      v4[((v6 >> 32) | 1) * v3] = 0x3FF0000000000000;
      v6 += 0x200000000;
      v7 -= 2;
    }
    while (v7);
    if (v5 != v2)
      goto LABEL_7;
  }
LABEL_9:
  if (&a1[28] != (int32x2_t *)&__p)
    sub_19C11EAD0(&a1[28], (char *)__p, v28, (v28 - (_BYTE *)__p) >> 3);
  v10 = (char *)__p;
  a1[31] = v29;
  if (v10)
  {
    v28 = v10;
    operator delete(v10);
  }
  sub_19C1CE734((uint64_t)&a1[24], (uint64_t)&__p);
  v11 = a1[27].u32[0];
  if ((int)v11 >= 1)
  {
    v12 = 0;
    v13 = a1[27].i32[1];
    v14 = v29.i32[1];
    v15 = 1;
    v16 = -1;
    v17 = __p;
    do
    {
      if (v13 <= v15)
        v18 = v15;
      else
        v18 = v13;
      v19 = v12 + 1;
      if ((int)v12 + 1 >= v13)
        goto LABEL_15;
      v20 = 0;
      v21 = v18 + v16;
      v22 = (int)v12 * (uint64_t)v14;
      if ((v18 + v16) < 4)
      {
        v23 = v12 + 1;
      }
      else
      {
        v23 = v12 + 1;
        if (v18 - (int)v12 + v15 - 2 >= v15)
        {
          v24 = 0;
          v20 = v21 & 0xFFFFFFFC;
          v23 = v19 + (v21 & 0xFFFFFFFC);
          do
          {
            v25 = &v17[v22 + v15 + v24];
            *v25 = 0uLL;
            v25[1] = 0uLL;
            v24 += 4;
          }
          while ((v21 & 0xFFFFFFFC) != v24);
          if (v21 == v20)
            goto LABEL_15;
        }
      }
      v26 = v18 - v20;
      do
      {
        v17[v22 + v23] = 0;
        v23 = ++v20 + v19;
        --v26;
      }
      while (v15 != v26);
LABEL_15:
      ++v12;
      ++v15;
      --v16;
    }
    while (v12 != v11);
  }
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
  sub_19C1CEB00((uint64_t)&a1[24], &__p);
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
}

void sub_19C20824C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C208270(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  signed int v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  char *v28;

  v4 = *(_DWORD *)(a1 + 312);
  v5 = 8 * v4;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * v4);
    bzero(v6, 8 * v4);
    v7 = 0;
    v8 = &v6[v5];
    v9 = *(_QWORD *)(a1 + 288);
    if (v4 < 4)
      goto LABEL_46;
    if ((unint64_t)&v6[-v9] < 0x20)
      goto LABEL_46;
    v10 = 0;
    v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    v11 = v7;
    do
    {
      v12 = *(_OWORD *)(v9 + v10 + 16);
      v13 = &v6[v10];
      *(_OWORD *)v13 = *(_OWORD *)(v9 + v10);
      *((_OWORD *)v13 + 1) = v12;
      v10 += 32;
      v11 -= 4;
    }
    while (v11);
    if (v7 != v4)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v6[8 * v7] = *(_QWORD *)(v9 + 8 * v7);
        ++v7;
      }
      while (v4 != v7);
    }
    v14 = *(int *)(a1 + 152);
    if ((_DWORD)v14)
      goto LABEL_10;
LABEL_19:
    v15 = 0;
    goto LABEL_20;
  }
  v8 = 0;
  v6 = 0;
  v14 = *(int *)(a1 + 152);
  if (!(_DWORD)v14)
    goto LABEL_19;
LABEL_10:
  if ((v14 & 0x80000000) != 0)
    sub_19C07DA0C();
  v15 = (char *)operator new(8 * v14);
  bzero(v15, 8 * v14);
  v16 = 0;
  v17 = *(_QWORD *)(a1 + 128);
  if (v14 < 4)
    goto LABEL_47;
  if ((unint64_t)&v15[-v17] < 0x20)
    goto LABEL_47;
  v18 = 0;
  v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  v19 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v20 = *(_OWORD *)(v17 + v18 + 16);
    v21 = &v15[v18];
    *(_OWORD *)v21 = *(_OWORD *)(v17 + v18);
    *((_OWORD *)v21 + 1) = v20;
    v18 += 32;
    v19 -= 4;
  }
  while (v19);
  if (v16 != v14)
  {
LABEL_47:
    do
    {
      *(_QWORD *)&v15[8 * v16] = *(_QWORD *)(v17 + 8 * v16);
      ++v16;
    }
    while (v14 != v16);
  }
LABEL_20:
  vDSP_vsubD((const double *)v15, 1, (const double *)v6, 1, (double *)v6, 1, v4);
  if (v8 != v6)
  {
    if (v8 - v6 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v8 - v6);
    memcpy(v22, v6, v8 - v6);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    if (!v4)
    {
      *(_DWORD *)(a2 + 24) = 0;
      operator delete(v22);
      if (!v15)
        goto LABEL_35;
LABEL_34:
      operator delete(v15);
      goto LABEL_35;
    }
LABEL_26:
    if (v4 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(8 * v4);
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 16) = &v23[8 * v4];
    bzero(v23, 8 * v4);
    *(_QWORD *)(a2 + 8) = &v23[v5];
    *(_DWORD *)(a2 + 24) = v4;
    if (v4 >= 4)
    {
      v25 = 0;
      v24 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      v26 = v24;
      do
      {
        v27 = *(_OWORD *)&v22[v25 + 16];
        v28 = &v23[v25];
        *(_OWORD *)v28 = *(_OWORD *)&v22[v25];
        *((_OWORD *)v28 + 1) = v27;
        v25 += 32;
        v26 -= 4;
      }
      while (v26);
      if (v24 == v4)
      {
LABEL_33:
        operator delete(v22);
        if (!v15)
          goto LABEL_35;
        goto LABEL_34;
      }
    }
    else
    {
      v24 = 0;
    }
    do
    {
      *(_QWORD *)&v23[8 * v24] = *(_QWORD *)&v22[8 * v24];
      ++v24;
    }
    while (v4 != v24);
    goto LABEL_33;
  }
  v22 = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v4)
    goto LABEL_26;
  *(_DWORD *)(a2 + 24) = 0;
  if (v15)
    goto LABEL_34;
LABEL_35:
  if (v6)
    operator delete(v6);
}

void sub_19C208594(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  void *v18;
  void *v19;

  if (v19)
  {
    operator delete(v19);
    if (!v18)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v18)
  {
    goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_19C2085F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a9)
    operator delete(a9);
  sub_19C07AF7C(a1);
}

void sub_19C20860C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13)
    JUMPOUT(0x19C20861CLL);
  JUMPOUT(0x19C208620);
}

void sub_19C208628(uint64_t a1, uint64_t a2)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _BYTE *v20;
  _BYTE *v21;
  int64_t v22;
  char *v23;
  char *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double *v29;
  long double *v30;
  unint64_t v31;
  long double v32;
  __int128 *v33;
  unint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  long double v38;
  void *v39;
  char *v40;
  int v41;
  void *v42;
  void *v43;
  char *v44;
  int v45;
  void *v46[4];
  void *__p[4];
  _QWORD v48[2];
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;

  v55 = a2;
  sub_19C1CF858((uint64_t)v48, *(_DWORD *)(a2 + 8) + 1);
  sub_19C17D694((uint64_t)v46, *(_DWORD *)(a2 + 8) + 1);
  v3 = (char *)v46[0];
  *(_QWORD *)v46[0] = 0xC01E000000000000;
  v4 = (char *)__p[0];
  *(_QWORD *)__p[0] = 0x401E000000000000;
  v5 = *(unsigned int *)(a2 + 56);
  if ((int)v5 >= 1)
  {
    v6 = 0;
    v7 = 1;
    if (v5 < 6)
      goto LABEL_7;
    if ((unint64_t)(v4 - v3) < 0x20)
      goto LABEL_7;
    v6 = v5 & 0x7FFFFFFC;
    v7 = v5 & 0xFFFFFFFC | 1;
    v8 = v4 + 24;
    v9 = v3 + 24;
    __asm
    {
      FMOV            V0.2D, #-10.0
      FMOV            V1.2D, #10.0
    }
    v16 = v5 & 0xFFFFFFFC;
    do
    {
      *(v9 - 1) = _Q0;
      *v9 = _Q0;
      *(v8 - 1) = _Q1;
      *v8 = _Q1;
      v8 += 2;
      v9 += 2;
      v16 -= 4;
    }
    while (v16);
    if (v6 != v5)
    {
LABEL_7:
      v17 = v5 - v6;
      v18 = &v4[8 * v7];
      v19 = &v3[8 * v7];
      do
      {
        *(_QWORD *)v19 = 0xC024000000000000;
        v19 += 8;
        *(_QWORD *)v18 = 0x4024000000000000;
        v18 += 8;
        --v17;
      }
      while (v17);
    }
  }
  sub_19C1D0468((uint64_t)v48, (uint64_t *)v46);
  sub_19C1D0594((uint64_t)v48, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v46[0])
  {
    v46[1] = v46[0];
    operator delete(v46[0]);
  }
  v21 = *(_BYTE **)(a2 + 64);
  v20 = *(_BYTE **)(a2 + 72);
  v42 = 0;
  v43 = 0;
  v44 = 0;
  v22 = v20 - v21;
  if (v20 != v21)
  {
    if (v22 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(v20 - v21);
    v24 = &v23[8 * (v22 >> 3)];
    v42 = v23;
    v44 = v24;
    memcpy(v23, v21, v22);
    v43 = v24;
  }
  v45 = *(_DWORD *)(a2 + 88);
  sub_19C2089B8((uint64_t)v48, (uint64_t)&v55, (uint64_t *)&v42, (uint64_t)&v39);
  if ((void **)(a2 + 64) != &v39)
    sub_19C11EAD0((_QWORD *)(a2 + 64), (char *)v39, v40, (v40 - (_BYTE *)v39) >> 3);
  *(_DWORD *)(a2 + 88) = v41;
  v25 = (char *)v39;
  *(long double *)(a2 + 24) = exp(*(double *)v39 + *(double *)v39);
  v26 = *(_QWORD *)(a2 + 8);
  if (v26)
  {
    v27 = *(_QWORD *)(a2 + 32);
    if (v26 < 4 || (unint64_t)(v27 - (_QWORD)v25 - 8) < 0x10)
    {
      v28 = 0;
LABEL_22:
      v29 = (double *)&v25[8 * v28 + 8];
      v30 = (long double *)(v27 + 8 * v28);
      v31 = v26 - v28;
      do
      {
        v32 = *v29++;
        *v30++ = exp(v32);
        --v31;
      }
      while (v31);
      goto LABEL_24;
    }
    v28 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v33 = (__int128 *)(v25 + 8);
    v34 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v35 = *(_OWORD **)(a2 + 32);
    do
    {
      v36 = *v33++;
      v38 = exp(*((long double *)&v36 + 1));
      *(double *)&v37 = exp(*(long double *)&v36);
      *((long double *)&v37 + 1) = v38;
      *v35++ = v37;
      v34 -= 2;
    }
    while (v34);
    if (v26 != v28)
      goto LABEL_22;
  }
LABEL_24:
  sub_19C2075A4(a2, 1, 1);
  if (v39)
  {
    v40 = (char *)v39;
    operator delete(v39);
  }
  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  v48[0] = &unk_1E3D21150;
  sub_19C23AA14(v48[1]);
  if (v53)
  {
    v54 = v53;
    operator delete(v53);
  }
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }
}

void sub_19C208930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  if (__p)
  {
    operator delete(__p);
    sub_19C1CF8E8(&a29);
    _Unwind_Resume(a1);
  }
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C20899C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  sub_19C176E10((uint64_t)&a21);
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C2089B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C208F08;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C208E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C208C0CLL);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

double sub_19C208F08(uint64_t **a1, uint64_t *a2, int **a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  double v33;
  void *__p;
  void *v35;
  char v36;
  _QWORD v37[3];
  signed int v38;
  char v39;
  void *v40;
  char *v41;
  char *v42;
  int v43;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v41 = 0;
  v42 = 0;
  v40 = 0;
  v43 = 0;
  v33 = 0.0;
  __p = 0;
  v35 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  v40 = v8;
  v41 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v42 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v43 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C2091FC(a3, (uint64_t)&v40, 0, (uint64_t)&v33);
    v17 = v33;
    if (v36)
    {
      v31 = __p;
      if (__p)
      {
        v35 = __p;
        goto LABEL_31;
      }
    }
  }
  else
  {
    LOBYTE(v37[0]) = 0;
    v39 = 0;
    sub_19C2091FC(a3, (uint64_t)&v40, 1, (uint64_t)&v33);
    v17 = v33;
    sub_19C1D66F8((uint64_t)v37, (uint64_t)&__p);
    if (v36 && __p)
    {
      v35 = __p;
      operator delete(__p);
    }
    v18 = v38;
    if (v38)
    {
      v19 = 0;
      v20 = v37[0];
      v21 = *a2;
      if (v38 < 4)
        goto LABEL_23;
      if ((unint64_t)(v21 - v37[0]) < 0x20)
        goto LABEL_23;
      v19 = v38 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = (__int128 *)(v37[0] + 16);
      v23 = (_OWORD *)(v21 + 16);
      v24 = v19;
      do
      {
        v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 4;
      }
      while (v24);
      if (v19 != v18)
      {
LABEL_23:
        v26 = v18 - v19;
        v27 = 8 * v19;
        v28 = (_QWORD *)(v21 + 8 * v19);
        v29 = (uint64_t *)(v20 + v27);
        do
        {
          v30 = *v29++;
          *v28++ = v30;
          --v26;
        }
        while (v26);
      }
    }
    if (v39)
    {
      v31 = (void *)v37[0];
      if (v37[0])
      {
        v37[1] = v37[0];
LABEL_31:
        operator delete(v31);
      }
    }
  }
  if (v40)
  {
    v41 = (char *)v40;
    operator delete(v40);
  }
  return v17;
}

void sub_19C209184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,void *__p,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C2091E0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

_QWORD *sub_19C2091FC@<X0>(int **a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char *v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  double *v11;
  long double *v12;
  unint64_t v13;
  long double v14;
  double v15;
  double v16;
  void *v17;
  int64_t v18;
  char *v19;
  char *v20;
  __int128 *v22;
  unint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  long double v27;
  _BYTE *v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  long double v33;
  char *v34;
  _QWORD v35[3];
  int v36;

  sub_19C20A394((uint64_t)&v31, *a1);
  if (v35 != (_QWORD *)a2)
    sub_19C11EAD0(v35, *(char **)a2, *(char **)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  v36 = *(_DWORD *)(a2 + 24);
  v7 = *(char **)a2;
  v33 = exp(*(double *)v7 + *(double *)v7);
  v8 = v32;
  if (v32)
  {
    v9 = v34;
    if (v32 < 4 || (unint64_t)(v34 - v7 - 8) < 0x10)
    {
      v10 = 0;
LABEL_7:
      v11 = (double *)&v7[8 * v10 + 8];
      v12 = (long double *)&v9[8 * v10];
      v13 = v8 - v10;
      do
      {
        v14 = *v11++;
        *v12++ = exp(v14);
        --v13;
      }
      while (v13);
      goto LABEL_9;
    }
    v10 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v22 = (__int128 *)(v7 + 8);
    v23 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v24 = v34;
    do
    {
      v25 = *v22++;
      v27 = exp(*((long double *)&v25 + 1));
      *(double *)&v26 = exp(*(long double *)&v25);
      *((long double *)&v26 + 1) = v27;
      *(_OWORD *)v24 = v26;
      v24 += 16;
      v23 -= 2;
    }
    while (v23);
    if (v8 != v10)
      goto LABEL_7;
  }
LABEL_9:
  sub_19C2075A4((uint64_t)&v31, 0, a3);
  v15 = sub_19C209474((uint64_t)&v31);
  v16 = v15;
  if ((a3 & 1) != 0)
  {
    sub_19C2096A0((uint64_t)&v31, (uint64_t)&v28);
    *(_QWORD *)(a4 + 8) = 0;
    *(double *)a4 = v16;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0;
    v17 = v28;
    v18 = v29 - v28;
    if (v29 != v28)
    {
      if (v18 < 0)
        sub_19C07DA0C();
      v19 = (char *)operator new(v29 - v28);
      *(_QWORD *)(a4 + 8) = v19;
      v20 = &v19[8 * (v18 >> 3)];
      *(_QWORD *)(a4 + 24) = v20;
      memcpy(v19, v17, v18);
      *(_QWORD *)(a4 + 16) = v20;
    }
    *(_DWORD *)(a4 + 32) = v30;
    *(_BYTE *)(a4 + 40) = 1;
    if (v17)
    {
      v29 = v17;
      operator delete(v17);
    }
  }
  else
  {
    *(double *)a4 = v15;
    *(_BYTE *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 40) = 0;
  }
  return sub_19C1EC3CC(&v31);
}

void sub_19C2093EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C209400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  void **v19;
  void *v21;
  void *v22;

  v21 = *v19;
  if (*v19)
  {
    *(_QWORD *)(v18 + 16) = v21;
    operator delete(v21);
    v22 = __p;
    if (!__p)
    {
LABEL_3:
      sub_19C1EC3CC(&a18);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v22 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v22);
  sub_19C1EC3CC(&a18);
  _Unwind_Resume(a1);
}

void sub_19C20944C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C209460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_19C209474(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  double *v8;
  void *__p;
  char *v11;
  char *v12;
  int v13;
  void *__C[3];
  vDSP_Length v15;
  double *__A;
  double *v17;
  uint64_t v18;
  vDSP_Length __N;

  sub_19C208270(a1, (uint64_t)&__A);
  __C[0] = 0;
  vDSP_dotprD(__A, 1, *(const double **)(a1 + 256), 1, (double *)__C, (int)__N);
  v2 = __C[0];
  if (__A)
  {
    v17 = __A;
    operator delete(__A);
  }
  v3 = *(int *)(a1 + 220);
  if ((int)v3 >= *(_DWORD *)(a1 + 216))
    v4 = *(_DWORD *)(a1 + 216);
  else
    v4 = *(_DWORD *)(a1 + 220);
  __A = 0;
  v17 = 0;
  v18 = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = operator new(8 * v4);
    bzero(v5, 8 * v4);
    v6 = 0;
    v7 = *(_QWORD **)(a1 + 192);
    do
    {
      *((_QWORD *)v5 + v6++) = *v7;
      v7 += v3 + 1;
    }
    while (v4 != v6);
    __p = operator new(8 * v4);
    v11 = (char *)__p + 8 * v4;
    v12 = v11;
    v13 = v4;
    memcpy(__p, v5, 8 * v4);
  }
  else
  {
    v5 = 0;
    v11 = 0;
    v12 = 0;
    __p = 0;
    v13 = 0;
  }
  sub_19C1D650C((uint64_t)&__p, (uint64_t)__C);
  __A = 0;
  vDSP_sveD((const double *)__C[0], 1, (double *)&__A, (int)v15);
  v8 = __A;
  if (__C[0])
  {
    __C[1] = __C[0];
    operator delete(__C[0]);
  }
  if (__p)
  {
    v11 = (char *)__p;
    operator delete(__p);
  }
  if (v5)
    operator delete(v5);
  return (double)*(int *)(a1 + 120) * -0.918938533 - (*(double *)&v8 - *(double *)&v2 * -0.5);
}

void sub_19C209618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v20;

  if (__p)
  {
    operator delete(__p);
    v20 = a9;
    if (!a9)
    {
LABEL_3:
      if (!v18)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(v18);
      goto LABEL_8;
    }
  }
  else
  {
    v20 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v20);
  if (!v18)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C209684(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C2096A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  double *v5;
  double *v6;
  _BYTE *v7;
  _BYTE *v8;
  int64_t v9;
  char *v10;
  char *v11;
  void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  vDSP_Length v18;
  int64_t v19;
  char *v20;
  char *v21;
  char *v22;
  unint64_t i;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  int v28;
  char *v29;
  unint64_t j;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  __int128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  const void *v68;
  int64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  double *v73;
  const void *v74;
  int64_t v75;
  char *v76;
  const double *v77;
  int v78;
  int64_t v79;
  char *v80;
  char *v81;
  const double *v82;
  int v83;
  uint64_t v84;
  char *v85;
  int64_t v86;
  char *v87;
  __int128 *v88;
  _OWORD *v89;
  unint64_t v90;
  __int128 v91;
  __int128 *v92;
  _OWORD *v93;
  unint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  vDSP_Length v98;
  void *v101;
  char *v102;
  char *v103;
  int v104;
  void *v105;
  void *v106;
  char *v107;
  int v108;
  void *__p;
  _BYTE *v110;
  _BYTE *v111;
  unint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  unint64_t v116;
  _BYTE *v117;
  char *v118;
  char *v119;
  unint64_t v120;
  double *v121;
  double *v122;
  double *v123;
  unint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  unint64_t v128;

  v121 = 0;
  v122 = 0;
  v123 = 0;
  v3 = *(_BYTE **)(a1 + 224);
  v2 = *(_BYTE **)(a1 + 232);
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (double *)operator new(v2 - v3);
    v6 = &v5[v4 >> 3];
    v121 = v5;
    v123 = v6;
    memcpy(v5, v3, v4);
    v122 = v6;
  }
  v7 = *(_BYTE **)(a1 + 256);
  v124 = *(_QWORD *)(a1 + 248);
  v106 = 0;
  v107 = 0;
  v105 = 0;
  v8 = *(_BYTE **)(a1 + 264);
  v9 = v8 - v7;
  if (v8 != v7)
  {
    if (v9 < 0)
      sub_19C07DA0C();
    v10 = (char *)operator new(v8 - v7);
    v11 = &v10[8 * (v9 >> 3)];
    v105 = v10;
    v107 = v11;
    memcpy(v10, v7, v9);
    v106 = v11;
  }
  v108 = *(_DWORD *)(a1 + 280);
  sub_19C1CE998(a1 + 256, (uint64_t)&v101);
  sub_19C1D65EC((uint64_t)&v105, (uint64_t)&v101, (uint64_t)&__p);
  v113 = 0;
  v114 = 0;
  v115 = 0;
  v12 = __p;
  v13 = v110 - (_BYTE *)__p;
  if (v110 == __p)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v110 - (_BYTE *)__p);
    v15 = &v14[8 * (v13 >> 3)];
    v113 = v14;
    v115 = v15;
    memcpy(v14, v12, v13);
    v114 = v15;
  }
  v16 = v112;
  v116 = v112;
  v17 = HIDWORD(v112);
  v18 = HIDWORD(v112) * (int)v112;
  vDSP_vsubD(v121, 1, (const double *)v14, 1, (double *)v14, 1, v18);
  v117 = 0;
  v118 = 0;
  v119 = 0;
  v19 = v15 - v14;
  if (!v19)
  {
    v20 = 0;
    v120 = v16;
    v126 = 0;
    v127 = 0;
    v125 = 0;
    if ((_DWORD)v18)
      goto LABEL_14;
LABEL_18:
    v22 = 0;
    v21 = 0;
    v128 = __PAIR64__(v17, v16);
    goto LABEL_23;
  }
  if (v19 < 0)
    sub_19C07DA0C();
  v20 = (char *)operator new(v19);
  v117 = v20;
  v119 = &v20[8 * (v19 >> 3)];
  memcpy(v20, v14, v19);
  v118 = &v20[8 * (v19 >> 3)];
  v120 = v16;
  v126 = 0;
  v127 = 0;
  v125 = 0;
  if (!(_DWORD)v18)
    goto LABEL_18;
LABEL_14:
  if ((v18 & 0x80000000) != 0)
    sub_19C07DA0C();
  v21 = (char *)operator new(8 * v18);
  v125 = v21;
  v127 = &v21[8 * v18];
  bzero(v21, 8 * v18);
  v22 = &v21[8 * v18];
  v128 = __PAIR64__(v17, v16);
  if (v18 < 4)
  {
    for (i = 0; i != v18; ++i)
LABEL_22:
      *(_QWORD *)&v21[8 * i] = *(_QWORD *)&v20[8 * i];
    goto LABEL_23;
  }
  v24 = 0;
  i = v18 & 0xFFFFFFFFFFFFFFFCLL;
  v25 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v26 = *(_OWORD *)&v20[v24 + 16];
    v27 = &v21[v24];
    *(_OWORD *)v27 = *(_OWORD *)&v20[v24];
    *((_OWORD *)v27 + 1) = v26;
    v24 += 32;
    v25 -= 4;
  }
  while (v25);
  if (i != v18)
    goto LABEL_22;
LABEL_23:
  sub_19C11EAD0(&v121, v21, v22, (v22 - v21) >> 3);
  v124 = v128;
  if (v21)
  {
    v126 = v21;
    operator delete(v21);
  }
  if (v20)
  {
    v118 = v20;
    operator delete(v20);
  }
  if (v14)
  {
    v114 = v14;
    operator delete(v14);
  }
  if (__p)
  {
    v110 = __p;
    operator delete(__p);
  }
  if (v101)
  {
    v102 = (char *)v101;
    operator delete(v101);
  }
  if (v105)
  {
    v106 = v105;
    operator delete(v105);
  }
  v28 = *(_DWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v98 = v28 + 1;
  if (v28 == -1)
  {
    *(_DWORD *)(a2 + 24) = 0;
    v96 = *(int *)(a1 + 120);
    if (!(_DWORD)v96)
      goto LABEL_125;
    goto LABEL_40;
  }
  if (v28 <= -2)
    sub_19C07DA0C();
  v29 = (char *)operator new(8 * v98);
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = &v29[8 * v98];
  *(_QWORD *)(a2 + 16) = &v29[8 * v28 + 8];
  *(_DWORD *)(a2 + 24) = v28 + 1;
  bzero(v29, 8 * v98);
  v96 = *(int *)(a1 + 120);
  if ((_DWORD)v96)
  {
LABEL_40:
    v97 = 0;
    for (j = 0; j != v96; ++j)
    {
      v31 = 0;
      v32 = 0;
      do
      {
        v33 = *(_QWORD *)(a1 + 96);
        v34 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v34)
        {
          v35 = 0;
          v110 = 0;
          v111 = 0;
          __p = 0;
          LODWORD(v112) = 0;
LABEL_72:
          v52 = 0;
          v102 = 0;
          v103 = 0;
          v101 = 0;
          v104 = 0;
          goto LABEL_76;
        }
        if ((v34 & 0x80000000) != 0)
          sub_19C07DA0C();
        v35 = operator new(8 * (int)v34);
        bzero(v35, 8 * (int)v34);
        if (v34 < 8 || (unint64_t)v35 - v33 - 8 * j * (int)v34 < 0x20)
        {
          v36 = 0;
LABEL_49:
          v37 = (int)v34 - v36;
          v38 = 8 * v36;
          v39 = (_QWORD *)v35 + v36;
          v40 = (uint64_t *)(v33 + v38 + v97 * (int)v34);
          do
          {
            v41 = *v40++;
            *v39++ = v41;
            --v37;
          }
          while (v37);
          goto LABEL_51;
        }
        v36 = (int)v34 & 0xFFFFFFFFFFFFFFFCLL;
        v88 = (__int128 *)(v33 + v97 * (int)v34 + 16);
        v89 = v35 + 1;
        v90 = v36;
        do
        {
          v91 = *v88;
          *(v89 - 1) = *(v88 - 1);
          *v89 = v91;
          v88 += 2;
          v89 += 2;
          v90 -= 4;
        }
        while (v90);
        if (v36 != (int)v34)
          goto LABEL_49;
LABEL_51:
        __p = 0;
        v110 = 0;
        v111 = 0;
        LODWORD(v112) = v34;
        v42 = operator new(8 * (int)v34);
        bzero(v42, 8 * (int)v34);
        __p = v42;
        v110 = (char *)v42 + 8 * (int)v34;
        v111 = v110;
        if ((v34 - 6) >= 0x7FFFFFFB)
        {
          v43 = 0;
LABEL_58:
          v48 = v34 - v43;
          v49 = v43 << 32;
          do
          {
            *(_QWORD *)((char *)v42 + (v49 >> 29)) = *(_QWORD *)((char *)v35 + (v49 >> 29));
            v49 += 0x100000000;
            --v48;
          }
          while (v48);
          goto LABEL_60;
        }
        v43 = v34 & 0xFFFFFFFC;
        v44 = v42 + 1;
        v45 = v35 + 1;
        v46 = v43;
        do
        {
          v47 = *v45;
          *(v44 - 1) = *(v45 - 1);
          *v44 = v47;
          v44 += 2;
          v45 += 2;
          v46 -= 4;
        }
        while (v46);
        if (v43 != v34)
          goto LABEL_58;
LABEL_60:
        v50 = *(_QWORD *)(a1 + 96);
        v51 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v51)
          goto LABEL_72;
        if ((v51 & 0x80000000) != 0)
          sub_19C07DA0C();
        v52 = operator new(8 * (int)v51);
        bzero(v52, 8 * (int)v51);
        if (v51 < 8 || (unint64_t)v52 - v50 - 8 * v32 * (int)v51 < 0x20)
        {
          v53 = 0;
LABEL_65:
          v54 = (int)v51 - v53;
          v55 = 8 * v53;
          v56 = (_QWORD *)v52 + v53;
          v57 = (uint64_t *)(v50 + v55 + v31 * (int)v51);
          do
          {
            v58 = *v57++;
            *v56++ = v58;
            --v54;
          }
          while (v54);
          goto LABEL_67;
        }
        v53 = (int)v51 & 0xFFFFFFFFFFFFFFFCLL;
        v92 = (__int128 *)(v50 + v31 * (int)v51 + 16);
        v93 = v52 + 1;
        v94 = v53;
        do
        {
          v95 = *v92;
          *(v93 - 1) = *(v92 - 1);
          *v93 = v95;
          v92 += 2;
          v93 += 2;
          v94 -= 4;
        }
        while (v94);
        if (v53 != (int)v51)
          goto LABEL_65;
LABEL_67:
        v101 = 0;
        v102 = 0;
        v103 = 0;
        v104 = v51;
        v59 = (char *)operator new(8 * (int)v51);
        bzero(v59, 8 * (int)v51);
        v101 = v59;
        v102 = &v59[8 * (int)v51];
        v103 = v102;
        if ((v51 - 6) >= 0x7FFFFFFB)
        {
          v61 = 0;
LABEL_74:
          v64 = v51 - v61;
          v65 = v61 << 32;
          do
          {
            *(_QWORD *)&v59[v65 >> 29] = *(_QWORD *)((char *)v52 + (v65 >> 29));
            v65 += 0x100000000;
            --v64;
          }
          while (v64);
          goto LABEL_76;
        }
        v60 = 0;
        v61 = v51 & 0xFFFFFFFC;
        do
        {
          v62 = v52[v60 / 0x10 + 1];
          v63 = &v59[v60];
          *(_OWORD *)v63 = v52[v60 / 0x10];
          *((_OWORD *)v63 + 1) = v62;
          v60 += 32;
        }
        while (((8 * v51) & 0x7FFFFFFE0) != v60);
        if (v61 != v51)
          goto LABEL_74;
LABEL_76:
        sub_19C20A8C4(a1 + 8, (uint64_t)&__p, (const double **)&v101, (uint64_t)&v117);
        if (v101)
        {
          v102 = (char *)v101;
          operator delete(v101);
        }
        if (v52)
          operator delete(v52);
        if (__p)
        {
          v110 = __p;
          operator delete(__p);
        }
        if (v35)
          operator delete(v35);
        if (j == v32)
        {
          v66 = SHIDWORD(v124);
          v67 = v121;
          v68 = v117;
          v69 = v118 - v117;
          if (v118 == v117)
          {
            v71 = 0;
            v70 = 0;
          }
          else
          {
            if (v69 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v71 = &v70[8 * (v69 >> 3)];
            memcpy(v70, v68, v69);
          }
          v77 = &v67[j + j * v66];
          v78 = v120;
          vDSP_vsmulD((const double *)v70, 1, v77, (double *)v70, 1, (int)v120);
          v79 = v71 - v70;
          if (v79)
          {
            if (v79 < 0)
              sub_19C07DA0C();
            v80 = (char *)operator new(v79);
            v81 = &v80[8 * (v79 >> 3)];
            memcpy(v80, v70, v79);
          }
          else
          {
            v81 = 0;
            v80 = 0;
          }
          __p = (void *)0x3FE0000000000000;
          vDSP_vsmulD((const double *)v80, 1, (const double *)&__p, (double *)v80, 1, v78);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v86 = v81 - v80;
          if (v81 == v80)
          {
            v87 = 0;
          }
          else
          {
            if (v86 < 0)
              sub_19C07DA0C();
            v87 = (char *)operator new(v81 - v80);
            v125 = v87;
            v127 = &v87[8 * (v86 >> 3)];
            memcpy(v87, v80, v86);
            v126 = &v87[8 * (v86 >> 3)];
          }
          LODWORD(v128) = v78;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v87, 1, *(double **)a2, 1, v98);
          if (v87)
            operator delete(v87);
          if (v80)
            operator delete(v80);
          if (v70)
            goto LABEL_114;
        }
        else
        {
          v72 = SHIDWORD(v124);
          v73 = v121;
          v74 = v117;
          v75 = v118 - v117;
          if (v118 == v117)
          {
            v76 = 0;
            v70 = 0;
          }
          else
          {
            if (v75 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v76 = &v70[8 * (v75 >> 3)];
            memcpy(v70, v74, v75);
          }
          v82 = &v73[v32 + j * v72];
          v83 = v120;
          vDSP_vsmulD((const double *)v70, 1, v82, (double *)v70, 1, (int)v120);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v84 = v76 - v70;
          if (v76 == v70)
          {
            v85 = 0;
          }
          else
          {
            if (v84 < 0)
              sub_19C07DA0C();
            v85 = (char *)operator new(v76 - v70);
            v125 = v85;
            v127 = &v85[8 * (v84 >> 3)];
            memcpy(v85, v70, v76 - v70);
            v126 = &v85[8 * (v84 >> 3)];
          }
          LODWORD(v128) = v83;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v85, 1, *(double **)a2, 1, v98);
          if (v85)
            operator delete(v85);
          if (v70)
LABEL_114:
            operator delete(v70);
        }
        if (v117)
        {
          v118 = v117;
          operator delete(v117);
        }
        ++v32;
        v31 += 8;
      }
      while (v32 <= j);
      v97 += 8;
    }
  }
LABEL_125:
  if (v121)
  {
    v122 = v121;
    operator delete(v121);
  }
}

void sub_19C20A0EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v15;

  v15 = *(void **)a14;
  if (*(_QWORD *)a14)
  {
    *(_QWORD *)(a14 + 8) = v15;
    operator delete(v15);
  }
  sub_19C07AF7C(a1);
}

void sub_19C20A110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37)
{
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v42;
  void *v43;
  void *v44;

  if (v39)
    operator delete(v39);
  if (v38)
  {
    *(_QWORD *)(v40 - 176) = v38;
    operator delete(v38);
  }
  if (v37)
  {
    *(_QWORD *)(v40 - 208) = v37;
    operator delete(v37);
  }
  if (__p)
  {
    operator delete(__p);
    v42 = a28;
    if (!a28)
    {
LABEL_9:
      v43 = a32;
      if (!a32)
      {
LABEL_14:
        v44 = *(void **)(v40 - 152);
        if (v44)
        {
          *(_QWORD *)(v40 - 144) = v44;
          operator delete(v44);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_13:
      operator delete(v43);
      goto LABEL_14;
    }
  }
  else
  {
    v42 = a28;
    if (!a28)
      goto LABEL_9;
  }
  operator delete(v42);
  v43 = a32;
  if (!a32)
    goto LABEL_14;
  goto LABEL_13;
}

void sub_19C20A344(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37)
{
  uint64_t v37;
  void *v38;
  void *v39;

  if (__p)
  {
    operator delete(__p);
    if (!v38)
    {
LABEL_3:
      v39 = a36;
      if (!a36)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v38)
  {
    goto LABEL_3;
  }
  operator delete(v38);
  v39 = a36;
  if (!a36)
  {
LABEL_4:
    if (v37)
      goto LABEL_12;
    goto LABEL_13;
  }
LABEL_8:
  operator delete(v39);
  if (v37)
LABEL_12:
    JUMPOUT(0x19C20A2F0);
LABEL_13:
  JUMPOUT(0x19C20A2F4);
}

uint64_t sub_19C20A394(uint64_t a1, int *a2)
{
  int v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;
  int v16;
  _BYTE *v17;
  _BYTE *v18;
  int64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  int64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  int64_t v31;
  char *v32;
  char *v33;
  _BYTE *v34;
  _BYTE *v35;
  int64_t v36;
  char *v37;
  char *v38;
  _BYTE *v39;
  _BYTE *v40;
  int64_t v41;
  char *v42;
  char *v43;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  sub_19C20A79C(a1 + 8, (uint64_t)(a2 + 2));
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  v6 = (_BYTE *)*((_QWORD *)a2 + 12);
  v5 = (_BYTE *)*((_QWORD *)a2 + 13);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 96) = v8;
    *(_QWORD *)(a1 + 104) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 112) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 104) = v9;
  }
  v10 = *((_QWORD *)a2 + 15);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 120) = v10;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  v12 = (_BYTE *)*((_QWORD *)a2 + 16);
  v11 = (_BYTE *)*((_QWORD *)a2 + 17);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 128) = v14;
    *(_QWORD *)(a1 + 136) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 144) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 136) = v15;
  }
  v16 = a2[38];
  *(_QWORD *)(a1 + 160) = 0;
  *(_DWORD *)(a1 + 152) = v16;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  v18 = (_BYTE *)*((_QWORD *)a2 + 20);
  v17 = (_BYTE *)*((_QWORD *)a2 + 21);
  v19 = v17 - v18;
  if (v17 != v18)
  {
    if (v19 < 0)
      sub_19C07DA0C();
    v20 = (char *)operator new(v17 - v18);
    *(_QWORD *)(a1 + 160) = v20;
    *(_QWORD *)(a1 + 168) = v20;
    v21 = &v20[8 * (v19 >> 3)];
    *(_QWORD *)(a1 + 176) = v21;
    memcpy(v20, v18, v19);
    *(_QWORD *)(a1 + 168) = v21;
  }
  v22 = *((_QWORD *)a2 + 23);
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 184) = v22;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  v24 = (_BYTE *)*((_QWORD *)a2 + 24);
  v23 = (_BYTE *)*((_QWORD *)a2 + 25);
  v25 = v23 - v24;
  if (v23 != v24)
  {
    if (v25 < 0)
      sub_19C07DA0C();
    v26 = (char *)operator new(v23 - v24);
    *(_QWORD *)(a1 + 192) = v26;
    *(_QWORD *)(a1 + 200) = v26;
    v27 = &v26[8 * (v25 >> 3)];
    *(_QWORD *)(a1 + 208) = v27;
    memcpy(v26, v24, v25);
    *(_QWORD *)(a1 + 200) = v27;
  }
  v28 = *((_QWORD *)a2 + 27);
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 216) = v28;
  *(_QWORD *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 240) = 0;
  v30 = (_BYTE *)*((_QWORD *)a2 + 28);
  v29 = (_BYTE *)*((_QWORD *)a2 + 29);
  v31 = v29 - v30;
  if (v29 != v30)
  {
    if (v31 < 0)
      sub_19C07DA0C();
    v32 = (char *)operator new(v29 - v30);
    *(_QWORD *)(a1 + 224) = v32;
    *(_QWORD *)(a1 + 232) = v32;
    v33 = &v32[8 * (v31 >> 3)];
    *(_QWORD *)(a1 + 240) = v33;
    memcpy(v32, v30, v31);
    *(_QWORD *)(a1 + 232) = v33;
  }
  *(_QWORD *)(a1 + 248) = *((_QWORD *)a2 + 31);
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0;
  v35 = (_BYTE *)*((_QWORD *)a2 + 32);
  v34 = (_BYTE *)*((_QWORD *)a2 + 33);
  v36 = v34 - v35;
  if (v34 != v35)
  {
    if (v36 < 0)
      sub_19C07DA0C();
    v37 = (char *)operator new(v34 - v35);
    *(_QWORD *)(a1 + 256) = v37;
    *(_QWORD *)(a1 + 264) = v37;
    v38 = &v37[8 * (v36 >> 3)];
    *(_QWORD *)(a1 + 272) = v38;
    memcpy(v37, v35, v36);
    *(_QWORD *)(a1 + 264) = v38;
  }
  *(_DWORD *)(a1 + 280) = a2[70];
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 288) = 0;
  v40 = (_BYTE *)*((_QWORD *)a2 + 36);
  v39 = (_BYTE *)*((_QWORD *)a2 + 37);
  v41 = v39 - v40;
  if (v39 != v40)
  {
    if (v41 < 0)
      sub_19C07DA0C();
    v42 = (char *)operator new(v39 - v40);
    *(_QWORD *)(a1 + 288) = v42;
    *(_QWORD *)(a1 + 296) = v42;
    v43 = &v42[8 * (v41 >> 3)];
    *(_QWORD *)(a1 + 304) = v43;
    memcpy(v42, v40, v41);
    *(_QWORD *)(a1 + 296) = v43;
  }
  *(_DWORD *)(a1 + 312) = a2[78];
  return a1;
}

void sub_19C20A66C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, _QWORD *a10)
{
  _QWORD *v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  v18 = *v16;
  if (*v16)
  {
    v10[37] = v18;
    operator delete(v18);
    v19 = *a9;
    if (!*a9)
    {
LABEL_3:
      v20 = *v15;
      if (!*v15)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else
  {
    v19 = *a9;
    if (!*a9)
      goto LABEL_3;
  }
  v10[33] = v19;
  operator delete(v19);
  v20 = *v15;
  if (!*v15)
  {
LABEL_4:
    v21 = *v14;
    if (!*v14)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v10[29] = v20;
  operator delete(v20);
  v21 = *v14;
  if (!*v14)
  {
LABEL_5:
    v22 = *v13;
    if (!*v13)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  v10[25] = v21;
  operator delete(v21);
  v22 = *v13;
  if (!*v13)
  {
LABEL_6:
    v23 = *v12;
    if (!*v12)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  v10[21] = v22;
  operator delete(v22);
  v23 = *v12;
  if (!*v12)
  {
LABEL_7:
    v24 = *v11;
    if (!*v11)
      goto LABEL_8;
    goto LABEL_15;
  }
LABEL_14:
  v10[17] = v23;
  operator delete(v23);
  v24 = *v11;
  if (!*v11)
  {
LABEL_8:
    sub_19C1E8600(a10);
    _Unwind_Resume(a1);
  }
LABEL_15:
  v10[13] = v24;
  operator delete(v24);
  sub_19C1E8600(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_19C20A79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v6 = *(_BYTE **)(a2 + 24);
  v5 = *(_BYTE **)(a2 + 32);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 40) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 32) = v9;
  }
  v10 = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v12 = *(_BYTE **)(a2 + 56);
  v11 = *(_BYTE **)(a2 + 64);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 56) = v14;
    *(_QWORD *)(a1 + 64) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 72) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 64) = v15;
  }
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

void sub_19C20A890(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void *v5;
  void *v6;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 64) = v5;
    operator delete(v5);
  }
  v6 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C20A8C4(uint64_t a1@<X0>, uint64_t a2@<X1>, const double **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  double *v9;
  double *v10;
  int v11;
  int v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  const void *v19;
  int64_t v20;
  char *v21;
  char *v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  signed int v27;
  float64x2_t *v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v33;
  _OWORD *f64;
  uint64_t v35;
  float64x2_t *v36;
  double v37;
  unint64_t v38;
  double *v39;
  double *v40;
  double *v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  float64x2_t *v46;
  float64x2_t *v47;
  float64x2_t *v48;
  unint64_t v49;
  float64x2_t v50;
  void *v51;
  void *v52;
  char *v53;
  int v54;
  void *__p[3];
  signed int v56;
  float64x2_t *v57;
  float64x2_t *v58;
  char *v59;
  signed int v60;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_DWORD *)a1;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v57 = 0;
  v58 = 0;
  v59 = 0;
  v12 = v11 + 1;
  if (v11 != -1)
  {
    if (v11 <= -2)
      sub_19C07DA0C();
    v10 = (double *)operator new(8 * v12);
    v8 = (uint64_t)&v10[v11 + 1];
    bzero(v10, 8 * v12);
    v9 = &v10[v12];
  }
  *(_QWORD *)a4 = v10;
  *(_QWORD *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = v8;
  *(_DWORD *)(a4 + 24) = v12;
  v13 = sub_19C204484(a1, a2, (uint64_t)a3);
  v15 = v14;
  v16 = exp(-v13);
  v17 = v13 + 1.0;
  *v10 = v16 * *(double *)(a1 + 16) * (v17 + v15 + v17 + v15);
  v19 = *(const void **)a2;
  v18 = *(_QWORD *)(a2 + 8);
  v20 = v18 - *(_QWORD *)a2;
  if (v18 == *(_QWORD *)a2)
  {
    v22 = 0;
    v21 = 0;
  }
  else
  {
    if (v20 < 0)
      sub_19C07DA0C();
    v21 = (char *)operator new(v18 - *(_QWORD *)a2);
    v22 = &v21[8 * (v20 >> 3)];
    memcpy(v21, v19, v20);
  }
  v23 = *(_DWORD *)(a2 + 24);
  vDSP_vsubD(*a3, 1, (const double *)v21, 1, (double *)v21, 1, v23);
  v51 = 0;
  v52 = 0;
  v53 = 0;
  v24 = v22 - v21;
  if (v22 != v21)
  {
    if (v24 < 0)
      sub_19C07DA0C();
    v25 = (char *)operator new(v22 - v21);
    v26 = &v25[8 * (v24 >> 3)];
    v51 = v25;
    v53 = v26;
    memcpy(v25, v21, v22 - v21);
    v52 = v26;
  }
  v54 = v23;
  sub_19C1EFF00((uint64_t)&v51, (uint64_t)__p);
  v27 = v56;
  v58 = 0;
  v59 = 0;
  v57 = 0;
  if (v56)
  {
    if (v56 < 0)
      sub_19C07DA0C();
    v28 = (float64x2_t *)operator new(8 * v56);
    v57 = v28;
    v59 = (char *)&v28->f64[v27];
    bzero(v28, 8 * v27);
    v29 = 0;
    v58 = (float64x2_t *)((char *)v28 + 8 * v27);
    v60 = v27;
    v30 = __p[0];
    if (v27 < 4)
      goto LABEL_46;
    if ((unint64_t)((char *)v28 - (char *)__p[0]) < 0x20)
      goto LABEL_46;
    v31 = 0;
    v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    v32 = v29;
    do
    {
      v33 = *(_OWORD *)&v30[v31 / 8 + 2];
      f64 = (_OWORD *)v28[v31 / 0x10].f64;
      *f64 = *(_OWORD *)&v30[v31 / 8];
      f64[1] = v33;
      v31 += 32;
      v32 -= 4;
    }
    while (v32);
    if (v29 != v27)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v28->f64[v29] = v30[v29];
        ++v29;
      }
      while (v27 != v29);
    }
  }
  else
  {
    v28 = 0;
    v60 = 0;
    v30 = __p[0];
    if (!__p[0])
      goto LABEL_22;
  }
  __p[1] = v30;
  operator delete(v30);
LABEL_22:
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v21)
    operator delete(v21);
  v35 = *(int *)(a1 + 48);
  if ((_DWORD)v35)
  {
    v36 = *(float64x2_t **)(a1 + 24);
    v37 = v16 * 1.66666667 * (v17 * *(double *)(a1 + 16));
    if (v35 >= 6)
    {
      v38 = 0;
      if ((unint64_t)((char *)(v10 + 1) - (char *)v36) >= 0x20
        && (unint64_t)((char *)(v10 + 1) - (char *)v28) >= 0x20)
      {
        v38 = v35 & 0xFFFFFFFFFFFFFFFCLL;
        v46 = (float64x2_t *)(v10 + 3);
        v47 = v36 + 1;
        v48 = v28 + 1;
        v49 = v35 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          v50 = vdivq_f64(vmulq_n_f64(*v48, v37), vmulq_f64(*v47, *v47));
          v46[-1] = vdivq_f64(vmulq_n_f64(v48[-1], v37), vmulq_f64(v47[-1], v47[-1]));
          *v46 = v50;
          v46 += 2;
          v47 += 2;
          v48 += 2;
          v49 -= 4;
        }
        while (v49);
        if (v38 == v35)
          goto LABEL_39;
      }
    }
    else
    {
      v38 = 0;
    }
    v39 = &v10[v38 + 1];
    v40 = &v28->f64[v38];
    v41 = &v36->f64[v38];
    v42 = v35 - v38;
    do
    {
      v43 = *v41++;
      v44 = v43;
      v45 = *v40++;
      *v39++ = v37 * v45 / (v44 * v44);
      --v42;
    }
    while (v42);
LABEL_39:
    v58 = v28;
    operator delete(v28);
    return;
  }
  if (v28)
    goto LABEL_39;
}

void sub_19C20ACA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22)
{
  void *v22;
  void *v23;
  uint64_t v24;

  if (__p)
    operator delete(__p);
  if (v23)
    operator delete(v23);
  *(_QWORD *)(v24 + 8) = v22;
  operator delete(v22);
  _Unwind_Resume(a1);
}

void sub_19C20AD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!a9)
    JUMPOUT(0x19C20ACFCLL);
  JUMPOUT(0x19C20ACF0);
}

BOOL sub_19C20AD20(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v5;
  int v6;
  int v8;
  _BOOL4 v9;
  std::runtime_error *exception;

  if (*(_BYTE *)(a1 + 8))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Early stopping already requested.");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  v3 = *(_DWORD *)(a1 + 12);
  if (v3 == -1)
    return 0;
  v6 = *a2;
  v5 = (uint64_t)(a2 + 2);
  if (v6 == 1 || *(double *)(a1 + 120) < *((double *)a2 + 13) - *(double *)(a1 + 16))
  {
    sub_19C1C9C8C(a1 + 24, v5);
    *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 13);
    *(_DWORD *)(a1 + 128) = 0;
    *(_BYTE *)(a1 + 8) = 0;
    return 0;
  }
  else
  {
    v8 = *(_DWORD *)(a1 + 128);
    *(_DWORD *)(a1 + 128) = v8 + 1;
    v9 = v8 >= v3;
    *(_BYTE *)(a1 + 8) = v9;
    return v9;
  }
}

void sub_19C20AE08(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char **sub_19C20AE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  BOOL v18;
  void *v20;
  _BYTE v21[4];
  _BYTE v22[12];
  _OWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  double v26;
  char *v27[2];
  int v28;
  char *v29[12];
  BOOL (**v30)(uint64_t, _DWORD *);
  char v31;
  int v32;
  BOOL (**v33)(uint64_t, int *);
  char v34;
  uint64_t v35;
  int v36;
  uint64_t *v37[13];
  int v38;

  v6 = *(_DWORD *)(a1 + 56);
  v7 = *(_DWORD *)(a1 + 60);
  v8 = *(_QWORD *)(a1 + 64);
  v21[0] = 0;
  *(_DWORD *)v22 = v7;
  *(_QWORD *)&v22[4] = v8;
  memset(v23, 0, sizeof(v23));
  v24 = v25;
  v25[0] = 0;
  v26 = 0.0;
  v27[0] = 0;
  v25[1] = 0;
  v25[2] = &v26;
  v28 = 0;
  v31 = 0;
  v30 = (BOOL (**)(uint64_t, _DWORD *))&unk_1E3D21888;
  v32 = v6;
  v34 = 0;
  v36 = HIDWORD(v8);
  v35 = *(_QWORD *)v22;
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D21930;
  sub_19C1C5D14(v37, (uint64_t)v23);
  v37[12] = (uint64_t *)v27[1];
  v38 = v28;
  v20 = &unk_1E3D21930;
  sub_19C17B808((char **)v23);
  v9 = *(_DWORD *)(a1 + 72);
  (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
  v10 = *(_QWORD *)(a2 + 24);
  if (!v10)
    goto LABEL_16;
  v11 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v10 + 48))(v10, v29);
  (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
  std::chrono::steady_clock::now();
  LODWORD(v20) = 1;
  sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
  v26 = v11;
  sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
  if (1 % v9)
    goto LABEL_5;
  v12 = *(_QWORD *)(a2 + 56);
  if (!v12)
LABEL_17:
    sub_19C1D6A94();
  if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v12 + 48))(v12, &v20) & 1) == 0)
  {
LABEL_5:
    if (!(*v30)((uint64_t)&v30, &v20))
    {
      v13 = (*v33)((uint64_t)&v33, (int *)&v20);
      sub_19C17B808(v27);
      sub_19C17B808((char **)v21);
      sub_19C17B808(v29);
      if (v13)
        goto LABEL_15;
      v14 = 2;
      while (1)
      {
        (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
        v15 = *(_QWORD *)(a2 + 24);
        if (!v15)
          break;
        v16 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v15 + 48))(v15, v29);
        (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
        std::chrono::steady_clock::now();
        std::chrono::steady_clock::now();
        LODWORD(v20) = v14;
        sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
        v26 = v16;
        sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
        if (!(v14 % v9))
        {
          v17 = *(_QWORD *)(a2 + 56);
          if (!v17)
            goto LABEL_17;
          if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v17 + 48))(v17, &v20) & 1) != 0)
            goto LABEL_6;
        }
        if ((*v30)((uint64_t)&v30, &v20))
          goto LABEL_6;
        v18 = (*v33)((uint64_t)&v33, (int *)&v20);
        sub_19C17B808(v27);
        sub_19C17B808((char **)v21);
        sub_19C17B808(v29);
        ++v14;
        if (v18)
          goto LABEL_15;
      }
LABEL_16:
      sub_19C1D6A94();
    }
  }
LABEL_6:
  sub_19C17B808(v27);
  sub_19C17B808((char **)v21);
  sub_19C17B808(v29);
LABEL_15:
  sub_19C1D6818(*(_QWORD *)(a1 + 120), a3);
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D21930;
  return sub_19C17B808((char **)v37);
}

void sub_19C20B148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char *a37)
{
  char **v37;
  char **v38;
  char **v39;
  uint64_t v40;

  sub_19C17B808(v39);
  sub_19C17B808(v38);
  sub_19C17B808(&a37);
  *(_QWORD *)(v40 - 240) = &unk_1E3D21930;
  sub_19C17B808(v37);
  _Unwind_Resume(a1);
}

void sub_19C20B1C4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  std::logic_error *exception;
  uint64_t v5;

  v3 = *(_DWORD *)(a1 + 48);
  if (v3 == 1)
  {
    sub_19C20B26C(a1, &v5);
    *a2 = v5;
  }
  else
  {
    if (v3)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1C79A4(exception, "Invalid optimizer in user config.");
      __cxa_throw(exception, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    }
    sub_19C1C76D4(a1, &v5);
    *a2 = v5;
  }
}

void sub_19C20B258(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C20B26C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  void **v15;
  void *v16;
  void **v17;
  void *__p;
  char **v19;
  char v20;

  v4 = operator new();
  sub_19C1C2D98((uint64_t)&v14, a1);
  sub_19C20B3D4(v4, (uint64_t *)&v14);
  *a2 = v4;
  if (v20)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v19;
      v7 = __p;
      if (v19 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v19 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v16;
  if (v16)
  {
    v9 = v17;
    v10 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v16;
    }
    v17 = v8;
    operator delete(v10);
  }
  v11 = (void **)v14;
  if (v14)
  {
    v12 = v15;
    v13 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v14;
    }
    v15 = v11;
    operator delete(v13);
  }
}

void sub_19C20B3A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  va_list va;

  va_start(va, a2);
  sub_19C1C2E88((uint64_t)va);
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_19C20B3C0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C20B3D4(uint64_t a1, uint64_t *a2)
{
  char **v4;
  char **v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  int v13;
  int v14;
  char ***v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  char **v38;
  char **v39;
  char **v40;
  void **v41;
  void **v42;
  void *v43;
  void **v44;
  void **v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t **v51;
  uint64_t **v52;
  uint64_t v53;
  uint64_t *v54;
  void *v56;
  void **v57;
  uint64_t v58;
  void *v59;
  void **v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  void *v64;
  void **v65;
  void *v66;
  void **v67;
  void *__p;
  char **v69;
  char v70;

  sub_19C1C2D98((uint64_t)&v64, (uint64_t)a2);
  *(_QWORD *)a1 = &unk_1E3D214F8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_19C1C2D98(a1 + 32, (uint64_t)&v64);
  if (v70)
  {
    v4 = (char **)__p;
    if (__p)
    {
      v5 = v69;
      v6 = __p;
      if (v69 != __p)
      {
        do
          v5 = sub_19C17B808(v5 - 12);
        while (v5 != v4);
        v6 = __p;
      }
      v69 = v4;
      operator delete(v6);
    }
  }
  v7 = (void **)v66;
  if (v66)
  {
    v8 = v67;
    v9 = v66;
    if (v67 != v66)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v66;
    }
    v67 = v7;
    operator delete(v9);
  }
  v10 = (void **)v64;
  if (v64)
  {
    v11 = v65;
    v12 = v64;
    if (v65 != v64)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v64;
    }
    v65 = v10;
    operator delete(v12);
  }
  *(_QWORD *)a1 = &unk_1E3D217F8;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  v13 = sub_19C178A44(a2);
  v14 = sub_19C179558((uint64_t)a2);
  *(_DWORD *)(a1 + 176) = v14 + v13;
  sub_19C20C1D4(a1 + 184, v14 + v13);
  *(_QWORD *)(a1 + 464) = 0;
  *(_QWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 488) = 0;
  *(_QWORD *)(a1 + 480) = 0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 316) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 444) = 0u;
  *(_QWORD *)(a1 + 528) = 0;
  *(_QWORD *)(a1 + 520) = 0;
  *(_DWORD *)(a1 + 544) = 0;
  *(_QWORD *)(a1 + 536) = 0;
  *(_DWORD *)(a1 + 560) = -1;
  *(_QWORD *)(a1 + 504) = &unk_1E3D21038;
  *(_QWORD *)(a1 + 512) = a1 + 176;
  *(_QWORD *)(a1 + 568) = 0;
  *(_QWORD *)(a1 + 584) = 0;
  sub_19C1C81AC(a1 + 592);
  v15 = (char ***)(a1 + 10696);
  *(_QWORD *)(a1 + 10712) = 0;
  *(_OWORD *)(a1 + 10696) = 0u;
  if ((int)sub_19C179558(a1 + 32) < 1)
    sub_19C20BC7C(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)(a1 + 108), (uint64_t *)&v62);
  else
    sub_19C20BAD0(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)&v62);
  v16 = v62;
  *(_QWORD *)&v62 = 0;
  v17 = *(_QWORD *)(a1 + 584);
  *(_QWORD *)(a1 + 584) = v16;
  if (v17)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v62;
    *(_QWORD *)&v62 = 0;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v19 = 0;
    v20 = *(_DWORD *)(a1 + 108);
    *(_DWORD *)(a1 + 8184) = v20;
    v21 = 1;
    v22 = v20;
    do
    {
      v23 = 1812433253 * (v22 ^ (v22 >> 30));
      v22 = v23 + v21;
      *(_DWORD *)(a1 + 8188 + 4 * v19) = v19 + v23 + 1;
      ++v21;
      ++v19;
    }
    while (v19 != 623);
    *(_QWORD *)(a1 + 10680) = 0;
    *(_DWORD *)(a1 + 592) = v20;
    v24 = 1;
    v25 = 149;
    v26 = v20;
    do
    {
      v27 = 1812433253 * (v26 ^ (v26 >> 30));
      v26 = v27 + v24;
      *(_DWORD *)(a1 + 4 * v25) = v25 + v27 - 148;
      ++v24;
      ++v25;
    }
    while (v25 != 772);
    v28 = 0;
    *(_QWORD *)(a1 + 3088) = 0;
    *(_DWORD *)(a1 + 3120) = v20;
    v29 = 1;
    v30 = v20;
    do
    {
      v31 = 1812433253 * (v30 ^ (v30 >> 30));
      v30 = v31 + v29;
      *(_DWORD *)(a1 + 3124 + 4 * v28) = v28 + v31 + 1;
      ++v29;
      ++v28;
    }
    while (v28 != 623);
    v32 = 0;
    *(_QWORD *)(a1 + 5616) = 0;
    *(_DWORD *)(a1 + 5640) = v20;
    v33 = 1;
    do
    {
      v34 = 1812433253 * (v20 ^ (v20 >> 30));
      v20 = v34 + v33;
      *(_DWORD *)(a1 + 5644 + 4 * v32) = v32 + v34 + 1;
      ++v33;
      ++v32;
    }
    while (v32 != 623);
    *(_QWORD *)(a1 + 8136) = 0;
    sub_19C23B684();
  }
  v57 = 0;
  v58 = 0;
  v56 = 0;
  sub_19C17AF88(&v56, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 4));
  v59 = 0;
  v60 = 0;
  v61 = 0;
  sub_19C17B16C(&v59, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 56)) >> 3));
  v35 = sub_19C178A44((uint64_t *)(a1 + 32));
  v36 = 5 * (sub_19C179558(a1 + 32) + v35);
  if (*(_BYTE *)(a1 + 144))
  {
    v37 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
    if ((int)v36 <= v37)
      v36 = v37;
    else
      v36 = v36;
  }
  sub_19C17A144((uint64_t *)&v56, a1 + 592, v36, (char **)&v62);
  v38 = *v15;
  if (*v15)
  {
    v39 = *(char ***)(a1 + 10704);
    v40 = *v15;
    if (v39 != v38)
    {
      do
        v39 = sub_19C17B808(v39 - 12);
      while (v39 != v38);
      v40 = *v15;
    }
    *(_QWORD *)(a1 + 10704) = v38;
    operator delete(v40);
    *v15 = 0;
    *(_QWORD *)(a1 + 10704) = 0;
    *(_QWORD *)(a1 + 10712) = 0;
  }
  *(_OWORD *)v15 = v62;
  *(_QWORD *)(a1 + 10712) = v63;
  v63 = 0;
  v62 = 0uLL;
  v41 = (void **)v59;
  if (v59)
  {
    v42 = v60;
    v43 = v59;
    if (v60 != v59)
    {
      do
      {
        if (*((char *)v42 - 17) < 0)
          operator delete(*(v42 - 5));
        v42 -= 5;
      }
      while (v42 != v41);
      v43 = v59;
    }
    v60 = v41;
    operator delete(v43);
  }
  v44 = (void **)v56;
  if (v56)
  {
    v45 = v57;
    v46 = v56;
    if (v57 != v56)
    {
      do
      {
        if (*((char *)v45 - 25) < 0)
          operator delete(*(v45 - 6));
        v45 -= 6;
      }
      while (v45 != v44);
      v46 = v56;
    }
    v57 = v44;
    operator delete(v46);
  }
  if (*(_BYTE *)(a1 + 144))
  {
    v47 = *(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120);
    if (v47)
    {
      v48 = 0;
      v49 = 0;
      v50 = v47 / 96;
      do
      {
        while (1)
        {
          v52 = *(uint64_t ***)(a1 + 10704);
          v53 = *(_QWORD *)(a1 + 10696);
          if (v49 >= 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v52 - v53) >> 5))
            break;
          if (!*(_BYTE *)(a1 + 144))
            goto LABEL_77;
          sub_19C1C9C8C(v53 + v48, *(_QWORD *)(a1 + 120) + v48);
          ++v49;
          v48 += 96;
          if (v50 == v49)
            return a1;
        }
        if (!*(_BYTE *)(a1 + 144))
LABEL_77:
          sub_19C1D1E0C();
        v54 = (uint64_t *)(*(_QWORD *)(a1 + 120) + v48);
        if ((unint64_t)v52 < *(_QWORD *)(a1 + 10712))
          v51 = sub_19C1C1840(v52, v54) + 12;
        else
          v51 = sub_19C1D1CCC((uint64_t ***)(a1 + 10696), v54);
        *(_QWORD *)(a1 + 10704) = v51;
        ++v49;
        v48 += 96;
      }
      while (v50 != v49);
    }
  }
  return a1;
}

void sub_19C20B9E4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  _QWORD *v3;
  _QWORD *v4;
  std::random_device *v5;
  void **v6;
  void **v8;
  uint64_t v9;
  void *v10;

  sub_19C17AA64(v6);
  sub_19C1C7C7C(v5);
  v8 = (void **)(v1 + 65);
  v9 = v1[73];
  v1[73] = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  *v4 = &unk_1E3D20F70;
  v10 = *v8;
  if (*v8)
  {
    v1[66] = v10;
    operator delete(v10);
  }
  sub_19C1EC3CC(v3);
  sub_19C1C9D28(v2);
  sub_19C1C7CC8(v1);
  _Unwind_Resume(a1);
}

void sub_19C20BAD0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v6 = operator new();
  v14 = 0;
  v15 = 0;
  v13 = 0;
  sub_19C17AF88(&v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C20D410(v6, a1, (uint64_t *)&v13);
  *a3 = v6;
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v17;
    v9 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v17 = v7;
    operator delete(v9);
  }
  v10 = (void **)v13;
  if (v13)
  {
    v11 = v14;
    v12 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v13;
    }
    v14 = v10;
    operator delete(v12);
  }
}

void sub_19C20BC28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C20BC44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C20BC7C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  void **v9;
  void **v10;
  void *v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  uint64_t v17;
  void *__p;
  void **v19;
  uint64_t v20;

  v8 = operator new();
  v16 = 0;
  v17 = 0;
  v15 = 0;
  sub_19C17AF88(&v15, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C20E794(v8, a1, (uint64_t *)&v15, *a3);
  *a4 = v8;
  v9 = (void **)__p;
  if (__p)
  {
    v10 = v19;
    v11 = __p;
    if (v19 != __p)
    {
      do
      {
        if (*((char *)v10 - 17) < 0)
          operator delete(*(v10 - 5));
        v10 -= 5;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v19 = v9;
    operator delete(v11);
  }
  v12 = (void **)v15;
  if (v15)
  {
    v13 = v16;
    v14 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v13 - 25) < 0)
          operator delete(*(v13 - 6));
        v13 -= 6;
      }
      while (v13 != v12);
      v14 = v15;
    }
    v16 = v12;
    operator delete(v14);
  }
}

void sub_19C20BDD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C20BDF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C20BE2C(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_19C20FE40(a1);
  operator delete(v1);
}

uint64_t **sub_19C20BE40@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  signed int v8;
  char *v10[13];

  v4 = a1 + 8;
  v5 = 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3);
  v6 = a1 + 32;
  v7 = sub_19C178A44((uint64_t *)(a1 + 32));
  v8 = 5 * (sub_19C179558(v6) + v7);
  if (*(_BYTE *)(v4 + 136) && v8 <= (int)(-1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5)))
    v8 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
  if (v5 < v8)
    return sub_19C1C1840(a2, (uint64_t *)(*(_QWORD *)(a1 + 10696)+ 96 * (int)(-991146299 * ((*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3))));
  (*(void (**)(char **__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 584) + 16))(v10, *(_QWORD *)(a1 + 584), v4);
  sub_19C1C1840(a2, (uint64_t *)v10);
  return (uint64_t **)sub_19C17B808(v10);
}

void sub_19C20BF58(uint64_t a1, __int128 **a2, double a3)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  long double v11;
  double v12;
  unint64_t v13;
  void *v14;
  int64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t **v23;
  uint64_t **v24;
  uint64_t **v25;
  double v26;
  double v27;
  double v28;
  void *__p;
  _BYTE *v30;
  int v31;
  uint64_t *v32[12];
  double v33;

  sub_19C1CBD8C(a2, (uint64_t)&__p);
  v6 = sub_19C20E3B0(a1 + 176, (uint64_t)&__p);
  v8 = sqrt(v7);
  v27 = v8;
  v28 = v6;
  v9 = v6 - (*(double *)(a1 + 552) + *(double *)(a1 + 568));
  v10 = v9 / v8;
  v11 = erfc(v9 / v8 * -0.707106781) * (0.5 * v9);
  v12 = v11 + v8 * 0.39894228 * exp(v10 * v10 * -0.5);
  v26 = v12;
  v13 = *(_QWORD *)(a1 + 160);
  if (v13 >= *(_QWORD *)(a1 + 168))
  {
    v18 = sub_19C1D2BAC((uint64_t *)(a1 + 152), (uint64_t)&__p, &v28, (uint64_t *)&v27, (uint64_t *)&v26);
  }
  else
  {
    *(_QWORD *)v13 = 0;
    *(_QWORD *)(v13 + 8) = 0;
    *(_QWORD *)(v13 + 16) = 0;
    v14 = __p;
    v15 = v30 - (_BYTE *)__p;
    if (v30 != __p)
    {
      if (v15 < 0)
        sub_19C07DA0C();
      v16 = (char *)operator new(v30 - (_BYTE *)__p);
      *(_QWORD *)v13 = v16;
      *(_QWORD *)(v13 + 8) = v16;
      v17 = &v16[8 * (v15 >> 3)];
      *(_QWORD *)(v13 + 16) = v17;
      memcpy(v16, v14, v15);
      *(_QWORD *)(v13 + 8) = v17;
    }
    *(_DWORD *)(v13 + 24) = v31;
    *(double *)(v13 + 32) = v6;
    *(double *)(v13 + 40) = v8;
    *(double *)(v13 + 48) = v12;
    v18 = v13 + 56;
    *(_QWORD *)(a1 + 160) = v13 + 56;
  }
  *(_QWORD *)(a1 + 160) = v18;
  v19 = *(int *)(a1 + 488);
  v20 = v19 + 1;
  *(_DWORD *)(a1 + 488) = v19 + 1;
  v21 = *(_QWORD *)(a1 + 464);
  v22 = (*(_QWORD *)(a1 + 472) - v21) >> 3;
  if (v19 + 1 <= v22)
  {
    if (v19 + 1 < v22)
      *(_QWORD *)(a1 + 472) = v21 + 8 * v19 + 8;
  }
  else
  {
    sub_19C17C9D8(a1 + 464, v19 + 1 - v22);
    v20 = *(int *)(a1 + 488);
    v21 = *(_QWORD *)(a1 + 464);
  }
  *(double *)(v21 + 8 * v20 - 8) = a3;
  sub_19C20FFB8(a1 + 176, (uint64_t)&__p);
  sub_19C211174(a1 + 496, a1 + 176);
  sub_19C20C464(a1 + 504);
  sub_19C1C1840(v32, (uint64_t *)a2);
  v33 = a3;
  v23 = *(uint64_t ***)(a1 + 16);
  if ((unint64_t)v23 >= *(_QWORD *)(a1 + 24))
  {
    v25 = sub_19C1C907C((uint64_t ***)(a1 + 8), (uint64_t *)v32);
  }
  else
  {
    v24 = sub_19C1C1840(v23, (uint64_t *)v32);
    *((double *)v24 + 12) = v33;
    v25 = v24 + 13;
  }
  *(_QWORD *)(a1 + 16) = v25;
  sub_19C17B808((char **)v32);
  if (__p)
  {
    v30 = __p;
    operator delete(__p);
  }
}

void sub_19C20C188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  sub_19C17B808(&a16);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_19C20C1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  size_t v5;
  char *v6;
  int v7;
  _QWORD *v8;
  unint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  long double *v15;
  double *v16;
  uint64_t v17;
  long double v18;
  long double v20;

  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_19C27A9D0;
  *(_QWORD *)(a1 + 24) = 0;
  v4 = a2 << 32;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v5 = 8 * (int)a2;
  if ((_DWORD)a2)
  {
    if ((a2 & 0x80000000) != 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * (int)a2);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 40) = &v6[8 * (int)a2];
    bzero(v6, v5);
    *(_QWORD *)(a1 + 32) = &v6[v5];
    *(_DWORD *)(a1 + 48) = a2;
    if (v4)
      goto LABEL_4;
  }
  else
  {
    v6 = 0;
    *(_DWORD *)(a1 + 48) = 0;
    if (v4)
LABEL_4:
      memset_pattern16(v6, &unk_19C277730, v5);
  }
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v7 = a2 + 1;
  if ((_DWORD)a2 == -1)
  {
    v8 = 0;
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 72) = 0;
    *(_DWORD *)(a1 + 80) = v7;
    MEMORY[0] = 0;
    if (!a2)
      return a1;
    goto LABEL_12;
  }
  if (v7 < 0)
    sub_19C07DA0C();
  v8 = operator new(8 * v7);
  bzero(v8, 8 * v7);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = &v8[v7];
  *(_QWORD *)(a1 + 72) = &v8[v7];
  *(_DWORD *)(a1 + 80) = v7;
  *v8 = 0;
  if (a2)
  {
LABEL_12:
    v9 = 0;
    if (a2 == 1)
      goto LABEL_16;
    v9 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v10 = v8 + 1;
    v11 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v12 = (__int128 *)v6;
    do
    {
      v13 = *v12++;
      v20 = log(*((long double *)&v13 + 1));
      *(double *)&v14 = log(*(long double *)&v13);
      *((long double *)&v14 + 1) = v20;
      *v10++ = v14;
      v11 -= 2;
    }
    while (v11);
    if (v9 != a2)
    {
LABEL_16:
      v15 = (long double *)&v8[v9 + 1];
      v16 = (double *)&v6[8 * v9];
      v17 = a2 - v9;
      do
      {
        v18 = *v16++;
        *v15++ = log(v18);
        --v17;
      }
      while (v17);
    }
  }
  return a1;
}

void sub_19C20C3B0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C20C3CC(void *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v4;
    operator delete(v4);
  }
  sub_19C07AF7C(a1);
}

long double sub_19C20C3E8(uint64_t a1, double a2, double a3)
{
  double v4;
  double v5;
  long double v6;

  v4 = a2 - (*(double *)(a1 + 48) + *(double *)(a1 + 64));
  v5 = v4 / a3;
  v6 = erfc(v4 / a3 * -0.707106781) * (0.5 * v4);
  return v6 + a3 * 0.39894228 * exp(v5 * v5 * -0.5);
}

double sub_19C20C45C()
{
  return 0.0;
}

void sub_19C20C464(uint64_t a1)
{
  _QWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double *v10;
  double *v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  char *v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  __int128 *v19;
  _OWORD *v20;
  unint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  double *v44;
  uint64_t v45;
  unint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  double *v52;
  uint64_t v53;
  __int128 v54;
  double *v55;
  double *v56;
  double v57;
  double *v58;
  double *v59;
  double v60;
  BOOL v61;
  char *v62;
  signed int v63;
  _OWORD *v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  _OWORD *v84;
  unint64_t v85;
  __int128 v86;
  unint64_t v87;
  uint64_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v93;
  uint64_t v94;
  void *__p;
  int v96[2];
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  double *v104;
  uint64_t v105;
  double *v106;
  _BYTE *v107;
  void *v108;
  uint64_t v109;
  unsigned int v110;

  v104 = 0;
  v105 = 0;
  v106 = 0;
  v1 = *(_QWORD **)(a1 + 8);
  v101 = 0;
  v102 = 0;
  v100 = 0;
  v3 = (_BYTE *)v1[12];
  v2 = (_BYTE *)v1[13];
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(v2 - v3);
    v6 = &v5[8 * (v4 >> 3)];
    v100 = v5;
    v102 = v6;
    memcpy(v5, v3, v4);
    v101 = v6;
  }
  v7 = v1[15];
  v103 = v7;
  if (!(_DWORD)v7)
  {
    v55 = 0;
    v58 = 0;
    *(_DWORD *)(a1 + 56) = 0;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v90 = (int)v7;
  v91 = v7;
  v13 = 8 * (v7 >> 32);
  v88 = v7 >> 32;
  v89 = v13;
  v87 = (v7 >> 32) & 0xFFFFFFFFFFFFFFFCLL;
  v93 = HIDWORD(v7);
  v94 = 16;
  do
  {
    v14 = *(_QWORD *)(a1 + 8);
    v15 = v100;
    __p = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    if (!(_DWORD)v93)
    {
      v16 = 0;
      v108 = 0;
      v109 = 0;
      v107 = 0;
      v110 = 0;
      goto LABEL_27;
    }
    if (v7 < 0)
      sub_19C07DA0C();
    v16 = operator new(v13);
    bzero(v16, v13);
    if ((unint64_t)v7 >> 33 < 3)
    {
      v17 = 0;
      v18 = v88;
      goto LABEL_17;
    }
    v18 = v88;
    if ((unint64_t)((char *)v16 - &v100[v13 * v12]) < 0x20)
    {
      v17 = 0;
LABEL_17:
      v23 = v18 - v17;
      v24 = 8 * v17;
      v25 = (_QWORD *)v16 + v17;
      v26 = (uint64_t *)&v15[v8 + v24];
      do
      {
        v27 = *v26++;
        *v25++ = v27;
        --v23;
      }
      while (v23);
      goto LABEL_19;
    }
    v19 = (__int128 *)&v100[v94];
    v20 = v16 + 1;
    v21 = v87;
    do
    {
      v22 = *v19;
      *(v20 - 1) = *(v19 - 1);
      *v20 = v22;
      v19 += 2;
      v20 += 2;
      v21 -= 4;
    }
    while (v21);
    v17 = v87;
    if (v88 != v87)
      goto LABEL_17;
LABEL_19:
    v107 = 0;
    v108 = 0;
    v109 = 0;
    v110 = v93;
    sub_19C17C9D8((uint64_t)&v107, v18);
    v28 = v110;
    if ((int)v110 >= 1)
    {
      v29 = 0;
      v30 = v107;
      if (v110 < 4)
        goto LABEL_25;
      if ((unint64_t)(v107 - (_BYTE *)v16) < 0x20)
        goto LABEL_25;
      v31 = 0;
      v29 = v110 & 0xFFFFFFFC;
      v32 = (8 * v110) & 0x7FFFFFFE0;
      do
      {
        v33 = v16[v31 / 0x10 + 1];
        v34 = &v30[v31];
        *v34 = v16[v31 / 0x10];
        v34[1] = v33;
        v31 += 32;
      }
      while (v32 != v31);
      if (v29 != v28)
      {
LABEL_25:
        v35 = v28 - v29;
        v36 = v29 << 32;
        do
        {
          *(_QWORD *)&v30[v36 >> 29] = *(_QWORD *)((char *)v16 + (v36 >> 29));
          v36 += 0x100000000;
          --v35;
        }
        while (v35);
      }
    }
LABEL_27:
    v37 = sub_19C20CC34(v14, (uint64_t)&v107);
    v38 = v37;
    if (v11 < v10)
    {
      *v11++ = v37;
      v7 = v91;
      v13 = v89;
      v105 = (uint64_t)v11;
      v39 = v107;
      if (!v107)
        goto LABEL_30;
LABEL_29:
      v108 = v39;
      operator delete(v39);
      goto LABEL_30;
    }
    v40 = v11 - v9;
    v41 = v40 + 1;
    if ((unint64_t)(v40 + 1) >> 61)
      sub_19C07DA0C();
    if (((char *)v10 - (char *)v9) >> 2 > v41)
      v41 = ((char *)v10 - (char *)v9) >> 2;
    if ((unint64_t)((char *)v10 - (char *)v9) >= 0x7FFFFFFFFFFFFFF8)
      v42 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v42 = v41;
    if (v42)
    {
      if (v42 >> 61)
        sub_19C07C7FC();
      v43 = operator new(8 * v42);
      v44 = (double *)&v43[8 * v40];
      *v44 = v38;
      v45 = (uint64_t)(v44 + 1);
      if (v11 != v9)
      {
LABEL_41:
        v46 = (char *)(v11 - 1) - (char *)v9;
        if (v46 < 0x168
          || &v43[(char *)v11 - (char *)v9 - 8 - (v46 & 0xFFFFFFFFFFFFFFF8)] > &v43[(char *)v11 - (char *)v9 - 8]
          || (double *)((char *)v11 - (v46 & 0xFFFFFFFFFFFFFFF8) - 8) > v11 - 1
          || (unint64_t)((char *)v9 - v43) < 0x20)
        {
          v47 = v11;
          v7 = v91;
          v13 = v89;
        }
        else
        {
          v49 = (v46 >> 3) + 1;
          v50 = 8 * (v49 & 0x3FFFFFFFFFFFFFFCLL);
          v47 = &v11[v50 / 0xFFFFFFFFFFFFFFF8];
          v44 = (double *)((char *)v44 - v50);
          v51 = &v43[8 * v40 - 16];
          v52 = v11 - 2;
          v53 = v49 & 0x3FFFFFFFFFFFFFFCLL;
          v7 = v91;
          do
          {
            v54 = *(_OWORD *)v52;
            *(v51 - 1) = *((_OWORD *)v52 - 1);
            *v51 = v54;
            v51 -= 2;
            v52 -= 4;
            v53 -= 4;
          }
          while (v53);
          v13 = v89;
          if (v49 == (v49 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_44:
            v10 = (double *)&v43[8 * v42];
            v104 = v44;
            v105 = v45;
            v106 = v10;
            if (!v9)
              goto LABEL_46;
LABEL_45:
            operator delete(v9);
            goto LABEL_46;
          }
        }
        do
        {
          v48 = *((_QWORD *)v47-- - 1);
          *((_QWORD *)v44-- - 1) = v48;
        }
        while (v47 != v9);
        goto LABEL_44;
      }
    }
    else
    {
      v43 = 0;
      v44 = (double *)(8 * v40);
      *(double *)(8 * v40) = v37;
      v45 = 8 * v40 + 8;
      if (v11 != v9)
        goto LABEL_41;
    }
    v7 = v91;
    v13 = v89;
    v10 = (double *)&v43[8 * v42];
    v104 = v44;
    v105 = v45;
    v106 = v10;
    if (v9)
      goto LABEL_45;
LABEL_46:
    v9 = v44;
    v11 = (double *)v45;
    v105 = v45;
    v39 = v107;
    if (v107)
      goto LABEL_29;
LABEL_30:
    if (v16)
      operator delete(v16);
    ++v12;
    v94 += v13;
    v8 += v13;
  }
  while (v12 != v90);
  v55 = v104;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 120);
  if (v55 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v56 = v55 + 1;
  if (v55 + 1 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v57 = *v55;
  v58 = v55;
  v59 = v55 + 1;
  do
  {
    v60 = *v59++;
    v61 = v57 < v60;
    v57 = fmax(v57, v60);
    if (v61)
      v58 = v56;
    v56 = v59;
  }
  while (v59 != v11);
  v62 = v100;
  v63 = HIDWORD(v103);
  v107 = 0;
  v108 = 0;
  v109 = 0;
  if (!HIDWORD(v103))
  {
LABEL_81:
    v74 = 0;
    LODWORD(v73) = 0;
    v64 = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    __p = 0;
    v98 = 0;
    goto LABEL_82;
  }
LABEL_65:
  if (v63 < 0)
    sub_19C07DA0C();
  v64 = operator new(8 * v63);
  v65 = (v58 - v55) * v63;
  bzero(v64, 8 * v63);
  if (v63 < 0xA || (v66 = &v62[8 * v65], (unint64_t)((char *)v64 - v66) < 0x20))
  {
    v67 = 0;
    goto LABEL_69;
  }
  v67 = v63 & 0xFFFFFFFFFFFFFFFCLL;
  v83 = (__int128 *)(v66 + 16);
  v84 = v64 + 1;
  v85 = v67;
  do
  {
    v86 = *v83;
    *(v84 - 1) = *(v83 - 1);
    *v84 = v86;
    v83 += 2;
    v84 += 2;
    v85 -= 4;
  }
  while (v85);
  if (v67 != v63)
  {
LABEL_69:
    v68 = v63 - v67;
    v69 = 8 * v67;
    v70 = (_QWORD *)v64 + v67;
    v71 = &v62[8 * v65 + v69];
    do
    {
      v72 = *(_QWORD *)v71;
      v71 += 8;
      *v70++ = v72;
      --v68;
    }
    while (v68);
  }
  __p = 0;
  *(_QWORD *)v96 = 0;
  v97 = 0;
  v98 = v63;
  sub_19C17C9D8((uint64_t)&__p, v63);
  v73 = v98;
  v74 = (char *)__p;
  if ((int)v98 >= 1)
  {
    v75 = 0;
    if (v98 < 4)
      goto LABEL_77;
    if ((unint64_t)((_BYTE *)__p - (_BYTE *)v64) < 0x20)
      goto LABEL_77;
    v76 = 0;
    v75 = v98 & 0xFFFFFFFC;
    v77 = (8 * v98) & 0x7FFFFFFE0;
    do
    {
      v78 = v64[v76 / 0x10 + 1];
      v79 = &v74[v76];
      *(_OWORD *)v79 = v64[v76 / 0x10];
      *((_OWORD *)v79 + 1) = v78;
      v76 += 32;
    }
    while (v77 != v76);
    if (v75 != v73)
    {
LABEL_77:
      v80 = v73 - v75;
      v81 = v75 << 32;
      do
      {
        *(_QWORD *)&v74[v81 >> 29] = *(_QWORD *)((char *)v64 + (v81 >> 29));
        v81 += 0x100000000;
        --v80;
      }
      while (v80);
    }
  }
LABEL_82:
  v82 = *(_QWORD *)v58;
  v99 = *(_QWORD *)v58;
  if ((void **)(a1 + 16) != &__p)
  {
    sub_19C11EAD0((_QWORD *)(a1 + 16), v74, *(char **)v96, (uint64_t)(*(_QWORD *)v96 - (_QWORD)v74) >> 3);
    LODWORD(v73) = v98;
    v82 = v99;
    v74 = (char *)__p;
  }
  *(_DWORD *)(a1 + 40) = v73;
  *(_QWORD *)(a1 + 48) = v82;
  if (v74)
  {
    *(_QWORD *)v96 = v74;
    operator delete(v74);
  }
  if (v64)
    operator delete(v64);
  if (v62)
    operator delete(v62);
  if (v55)
  {
    v105 = (uint64_t)v55;
    operator delete(v55);
  }
}

void sub_19C20CB78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  void *v28;
  void *v29;

  if (__p)
    operator delete(__p);
  if (v28)
    operator delete(v28);
  if (v29)
    operator delete(v29);
  if (a27)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

double sub_19C20CC34(uint64_t a1, uint64_t a2)
{
  double v3;
  double v4;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C20CD14(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v3 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v4 = __C;
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v4 + v3;
  }
  else
  {
    __A[0] = 0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)__A, *(int *)(a1 + 312));
    return *(double *)__A;
  }
}

void sub_19C20CCF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C20CD14(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  signed int v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  __int128 *v21;
  _OWORD *v22;
  unint64_t v23;
  __int128 v24;
  char *v26;
  void *__p;
  char *v29;
  char *v30;
  signed int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = *(_DWORD *)(a1 + 120);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  *(_DWORD *)(a3 + 24) = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  if (v3)
  {
    if (v3 < 0)
      sub_19C07DA0C();
    v5 = v3;
    v6 = (char *)operator new(8 * v3);
    bzero(v6, 8 * v3);
    v7 = 0;
    v8 = 0;
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = &v6[8 * v3];
    *(_QWORD *)(a3 + 16) = &v6[8 * v3];
    *(_DWORD *)(a3 + 24) = v3;
    v26 = v6;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 96);
      v10 = *(_DWORD *)(a1 + 124);
      v32 = 0;
      v33 = 0;
      v34 = 0;
      if (!v10)
      {
        v11 = 0;
        v29 = 0;
        v30 = 0;
        __p = 0;
        v31 = 0;
        goto LABEL_14;
      }
      if (v10 < 0)
        sub_19C07DA0C();
      v11 = operator new(8 * v10);
      bzero(v11, 8 * v10);
      if (v10 >= 8 && (unint64_t)v11 - v9 - 8 * v8 * v10 >= 0x20)
      {
        v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
        v21 = (__int128 *)(v9 + v7 * v10 + 16);
        v22 = v11 + 1;
        v23 = v12;
        do
        {
          v24 = *v21;
          *(v22 - 1) = *(v21 - 1);
          *v22 = v24;
          v21 += 2;
          v22 += 2;
          v23 -= 4;
        }
        while (v23);
        if (v12 == v10)
          goto LABEL_12;
      }
      else
      {
        v12 = 0;
      }
      v13 = v10 - v12;
      v14 = 8 * v12;
      v15 = (_QWORD *)v11 + v12;
      v16 = (uint64_t *)(v9 + v14 + v7 * v10);
      do
      {
        v17 = *v16++;
        *v15++ = v17;
        --v13;
      }
      while (v13);
LABEL_12:
      __p = 0;
      v29 = 0;
      v31 = 0;
      v30 = 0;
      __p = operator new(8 * v10);
      v29 = (char *)__p + 8 * v10;
      v30 = v29;
      v31 = v10;
      memcpy(__p, v11, 8 * v10);
      v6 = v26;
LABEL_14:
      v18 = sub_19C20CFD0(a1 + 8, (uint64_t)&__p, a2);
      v19 = *(double *)(a1 + 24);
      *(long double *)&v6[8 * v8] = (v18 + 1.0 + v20) * (exp(-v18) * v19);
      if (__p)
      {
        v29 = (char *)__p;
        operator delete(__p);
      }
      if (v11)
        operator delete(v11);
      ++v8;
      v7 += 8;
      if (v8 == v5)
        return;
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
}

void sub_19C20CF5C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C20CF84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14)
{
  void *v14;

  if (__p)
  {
    operator delete(__p);
    if (!v14)
    {
LABEL_3:
      *(_QWORD *)(a10 + 8) = a11;
      operator delete(a11);
      _Unwind_Resume(a1);
    }
  }
  else if (!v14)
  {
    goto LABEL_3;
  }
  operator delete(v14);
  *(_QWORD *)(a10 + 8) = a11;
  operator delete(a11);
  _Unwind_Resume(a1);
}

double sub_19C20CFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  const void *v7;
  int64_t v8;
  char *v9;
  char *v10;
  int v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  const void *v16;
  int64_t v17;
  char *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  size_t v24;
  void *v25;
  double v26;
  double v27;

  v7 = *(const void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = v6 - *(_QWORD *)a2;
  if (v6 == *(_QWORD *)a2)
  {
    v10 = 0;
    v9 = 0;
  }
  else
  {
    if (v8 < 0)
      sub_19C07DA0C();
    v9 = (char *)operator new(v6 - *(_QWORD *)a2);
    v10 = &v9[8 * (v8 >> 3)];
    memcpy(v9, v7, v8);
  }
  v11 = *(_DWORD *)(a2 + 24);
  vDSP_vdivD(*(const double **)(a1 + 24), 1, (const double *)v9, 1, (double *)v9, 1, v11);
  v12 = v10 - v9;
  if (v12)
  {
    if (v12 < 0)
      sub_19C07DA0C();
    v13 = (char *)operator new(v12);
    v14 = &v13[8 * (v12 >> 3)];
    memcpy(v13, v9, v12);
    if (v9)
      goto LABEL_8;
  }
  else
  {
    v14 = 0;
    v13 = 0;
    if (v9)
LABEL_8:
      operator delete(v9);
  }
  v16 = *(const void **)a3;
  v15 = *(_QWORD *)(a3 + 8);
  v17 = v15 - *(_QWORD *)a3;
  if (v15 == *(_QWORD *)a3)
  {
    v19 = 0;
    v18 = 0;
  }
  else
  {
    if (v17 < 0)
      sub_19C07DA0C();
    v18 = (char *)operator new(v15 - *(_QWORD *)a3);
    v19 = &v18[8 * (v17 >> 3)];
    memcpy(v18, v16, v17);
  }
  vDSP_vdivD(*(const double **)(a1 + 24), 1, (const double *)v18, 1, (double *)v18, 1, *(int *)(a3 + 24));
  if (v19 == v18)
  {
    v20 = 0;
    if (v18)
LABEL_18:
      operator delete(v18);
  }
  else
  {
    if (v19 - v18 < 0)
      sub_19C07DA0C();
    v20 = operator new(v19 - v18);
    memcpy(v20, v18, v19 - v18);
    if (v18)
      goto LABEL_18;
  }
  v21 = v14 - v13;
  if (v14 == v13)
  {
    v23 = 0;
    v22 = 0;
  }
  else
  {
    if (v21 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v14 - v13);
    v23 = &v22[8 * (v21 >> 3)];
    memcpy(v22, v13, v14 - v13);
  }
  vDSP_vsubD((const double *)v20, 1, (const double *)v22, 1, (double *)v22, 1, v11);
  v24 = v23 - v22;
  if (v23 == v22)
  {
    v25 = 0;
  }
  else
  {
    if ((v24 & 0x8000000000000000) != 0)
      sub_19C07DA0C();
    v25 = operator new(v23 - v22);
    memcpy(v25, v22, v24);
  }
  cblas_dnrm2_NEWLAPACK();
  v27 = v26;
  if (v25)
    operator delete(v25);
  if (v22)
    operator delete(v22);
  if (v20)
    operator delete(v20);
  if (v13)
    operator delete(v13);
  return v27 * 2.23606798;
}

void sub_19C20D320(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  if (v25)
    operator delete(v25);
  if (v26)
    operator delete(v26);
  if (v24)
    operator delete(v24);
  if (v23)
    operator delete(v23);
  _Unwind_Resume(exception_object);
}

void sub_19C20D3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  if (a26)
    JUMPOUT(0x19C20D3F0);
  JUMPOUT(0x19C20D3F4);
}

uint64_t sub_19C20D410(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void **v6;
  void **v7;
  void *v8;
  void **v9;
  void **v10;
  void *v11;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_19C17AF88(&v13, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21588;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v13, (uint64_t)v14, 0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (_BYTE *)v13) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v17, 0xCCCCCCCCCCCCCCCDLL * (((char *)v17 - (_BYTE *)__p) >> 3));
  v6 = (void **)__p;
  if (__p)
  {
    v7 = v17;
    v8 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v7 - 17) < 0)
          operator delete(*(v7 - 5));
        v7 -= 5;
      }
      while (v7 != v6);
      v8 = __p;
    }
    v17 = v6;
    operator delete(v8);
  }
  v9 = (void **)v13;
  if (v13)
  {
    v10 = v14;
    v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 25) < 0)
          operator delete(*(v10 - 6));
        v10 -= 6;
      }
      while (v10 != v9);
      v11 = v13;
    }
    v14 = v9;
    operator delete(v11);
  }
  *(_QWORD *)a1 = &unk_1E3D21468;
  *(_DWORD *)(a1 + 64) = 5;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_19C20D5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;

  v11 = v10;
  if (*v11)
  {
    sub_19C2563D4(v9, *v11);
    sub_19C17A75C(&a9);
    _Unwind_Resume(a1);
  }
  sub_19C17A75C(&a9);
  _Unwind_Resume(a1);
}

void sub_19C20D5F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    sub_19C25623C((uint64_t)&a9, a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_19C20D60C(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;

  *a1 = &unk_1E3D21468;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  return sub_19C20DC34(a1);
}

void sub_19C20D674(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;
  _QWORD *v5;

  *a1 = &unk_1E3D21468;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  v5 = sub_19C20DC34(a1);
  operator delete(v5);
}

void sub_19C20D6E0(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  double *v15;
  double *v16;
  double *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v29;
  double v30;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD **v33;
  BOOL v34;
  uint64_t *v35;
  char **v36;
  char **v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40[4];
  uint64_t *v41;
  double *__A;
  double *v43;
  void *__p;
  char *v45;
  char *v46[3];
  char *v47[3];
  uint64_t *v48[12];
  char v49[8];
  _QWORD **v50;
  _QWORD *v51[2];
  uint64_t *v52;
  char **v53;
  double __C[2];

  sub_19C20DCFC(a1);
  v6 = *(_QWORD *)(a1 + 72);
  if (v6 == *(_QWORD *)(a1 + 80))
  {
    v39 = a3;
    sub_19C1CBA2C(a2, &v52);
    sub_19C20DF90(a2, (uint64_t)v49);
    v7 = v50;
    if (v50 != v51)
    {
      do
      {
        v8 = *(_QWORD *)((char *)v7 + 28);
        sub_19C1C1840(v48, &v52[12 * (int)v8]);
        if (SHIDWORD(v8) >= 1)
        {
          v9 = 0;
          v10 = HIDWORD(v8) & ~(v8 >> 63);
          do
          {
            sub_19C20E0CC(a1, (uint64_t *)v48, (uint64_t **)&__A);
            sub_19C17A814((char **)v48, (uint64_t)&__A);
            sub_19C098FBC((uint64_t)v47, v47[1]);
            sub_19C098FBC((uint64_t)v46, v46[1]);
            v11 = (char *)__p;
            if (__p)
            {
              v12 = v45;
              v13 = __p;
              if (v45 != __p)
              {
                do
                {
                  v14 = (void *)*((_QWORD *)v12 - 4);
                  if (v14)
                  {
                    *((_QWORD *)v12 - 3) = v14;
                    operator delete(v14);
                  }
                  if (*(v12 - 33) < 0)
                    operator delete(*((void **)v12 - 7));
                  v12 -= 56;
                }
                while (v12 != v11);
                v13 = __p;
              }
              v45 = v11;
              operator delete(v13);
            }
            v15 = __A;
            if (*(double *)&__A != 0.0)
            {
              v16 = v43;
              v17 = __A;
              if (v43 != __A)
              {
                do
                {
                  v18 = (void *)*((_QWORD *)v16 - 4);
                  if (v18)
                  {
                    *((_QWORD *)v16 - 3) = v18;
                    operator delete(v18);
                  }
                  if (*((char *)v16 - 33) < 0)
                    operator delete(*((void **)v16 - 7));
                  v16 -= 7;
                }
                while (v16 != v15);
                v17 = __A;
              }
              v43 = v15;
              operator delete(v17);
            }
            v41 = 0;
            v19 = *(_QWORD *)(a1 + 8);
            sub_19C1CBD8C((__int128 **)v48, (uint64_t)v40);
            v20 = *(_QWORD *)(v19 + 8);
            if (*(_DWORD *)(v20 + 120))
            {
              sub_19C20CD14(*(_QWORD *)(v19 + 8), (uint64_t)v40, (uint64_t)&__A);
              __C[0] = 0.0;
              vDSP_dotprD(__A, 1, *(const double **)(v20 + 256), 1, __C, (int)__p);
              v21 = __C[0];
              __C[0] = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, __C, *(int *)(v20 + 312));
              v22 = __C[0];
              sub_19C20E590(v20, (uint64_t)v40, (uint64_t)&__A);
              v24 = v23;
              v25 = *(double *)(v20 + 16);
              if (*(double *)&__A != 0.0)
              {
                v43 = __A;
                operator delete(__A);
              }
              v26 = v22 + v21;
              v27 = v25 + v24;
            }
            else
            {
              *(double *)&__A = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, (double *)&__A, *(int *)(v20 + 312));
              v26 = *(double *)&__A;
              v27 = sub_19C20E4B8(v20, (uint64_t)v40);
            }
            v28 = sqrt(v27);
            if (v28 < 0.00000001 || (v29 = *(_DWORD *)(*(_QWORD *)(v19 + 8) + 120), v29 <= 0))
            {
              v30 = (*(double (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            }
            else
            {
              if (*(_DWORD *)(v19 + 56) != v29)
                (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
              (**(void (***)(uint64_t, double, double))v19)(v19, v26, v28);
            }
            v31 = *(uint64_t **)&v30;
            if (v40[0])
            {
              v40[1] = v40[0];
              operator delete(v40[0]);
            }
            v41 = v31;
            sub_19C1CC134((int *)(a1 + 64), (uint64_t *)v48, &v41);
            ++v9;
          }
          while (v10 != v9);
        }
        sub_19C17B808((char **)v48);
        v32 = (_QWORD *)v7[1];
        if (v32)
        {
          do
          {
            v33 = (_QWORD **)v32;
            v32 = (_QWORD *)*v32;
          }
          while (v32);
        }
        else
        {
          do
          {
            v33 = (_QWORD **)v7[2];
            v34 = *v33 == v7;
            v7 = v33;
          }
          while (!v34);
        }
        v7 = v33;
      }
      while (v33 != v51);
    }
    v35 = *(uint64_t **)(a1 + 72);
    sub_19C1C1840((uint64_t **)v39, v35);
    *(_QWORD *)(v39 + 96) = v35[12];
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    sub_19C07C924((uint64_t)&v50, v51[0]);
    v36 = (char **)v52;
    if (v52)
    {
      v37 = v53;
      v38 = v52;
      if (v53 != (char **)v52)
      {
        do
          v37 = sub_19C17B808(v37 - 12);
        while (v37 != v36);
        v38 = v52;
      }
      v53 = v36;
      operator delete(v38);
    }
  }
  else
  {
    sub_19C1C1840((uint64_t **)a3, *(uint64_t **)(a1 + 72));
    *(_QWORD *)(a3 + 96) = *(_QWORD *)(v6 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
  }
}

void sub_19C20DB50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  char **v28;
  uint64_t v29;

  sub_19C17B808(v28);
  sub_19C07C924(a10, *(_QWORD **)(v29 - 184));
  sub_19C17AA64((void **)(v29 - 168));
  _Unwind_Resume(a1);
}

void sub_19C20DBE8(char *a1@<X8>)
{
  a1[23] = 17;
  strcpy(a1, "genetic_optimizer");
}

void sub_19C20DC0C(char *a1@<X8>)
{
  a1[23] = 21;
  strcpy(a1, "acquisition_optimizer");
}

_QWORD *sub_19C20DC34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *a1 = &unk_1E3D21588;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 17) < 0)
          operator delete(*(void **)(v3 - 40));
        v3 -= 40;
      }
      while (v3 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  v5 = a1[2];
  if (v5)
  {
    v6 = a1[3];
    v7 = (void *)a1[2];
    if (v6 != v5)
    {
      do
      {
        if (*(char *)(v6 - 25) < 0)
          operator delete(*(void **)(v6 - 48));
        v6 -= 48;
      }
      while (v6 != v5);
      v7 = (void *)a1[2];
    }
    a1[3] = v5;
    operator delete(v7);
  }
  return a1;
}

void sub_19C20DCFC(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  uint64_t *v11;
  uint64_t *v12;
  char **v13;
  uint64_t *v14;
  void *__p[4];
  uint64_t *v16;
  uint64_t *v17[13];
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;

  v18 = 5;
  v20 = 0;
  v21 = 0;
  v19 = 0;
  v3 = *(_QWORD *)(a1 + 72);
  v2 = (uint64_t *)(a1 + 72);
  if (v3 == *(_QWORD *)(a1 + 80))
  {
    v12 = 0;
    *(_DWORD *)(a1 + 64) = 5;
    if ((int *)(a1 + 64) == &v18)
      goto LABEL_18;
    goto LABEL_17;
  }
  do
  {
    sub_19C1C1840(v17, (uint64_t *)v3);
    v17[12] = *(uint64_t **)(v3 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)__p, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    v16 = 0;
    v4 = *(_QWORD *)(a1 + 8);
    sub_19C1CBD8C((__int128 **)v17, (uint64_t)__p);
    v5.n128_f64[0] = sub_19C20E3B0(*(_QWORD *)(v4 + 8), (uint64_t)__p);
    v7 = sqrt(v6);
    if (v7 < 0.00000001 || (v8 = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 120), v8 <= 0))
    {
      v10 = (*(double (**)(uint64_t, __n128))(*(_QWORD *)v4 + 8))(v4, v5);
    }
    else
    {
      v9 = v5.n128_f64[0];
      if (*(_DWORD *)(v4 + 56) != v8)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      (**(void (***)(uint64_t, double, double))v4)(v4, v9, v7);
    }
    *(double *)&v11 = v10;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    v16 = v11;
    if (*(double *)&v11 > (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8)))
      sub_19C1CC134(&v18, (uint64_t *)v17, &v16);
    sub_19C17B808((char **)v17);
    v3 = *(_QWORD *)(a1 + 72);
  }
  while (v3 != *(_QWORD *)(a1 + 80));
  v12 = v19;
  *(_DWORD *)(a1 + 64) = v18;
  if ((int *)(a1 + 64) != &v18)
  {
LABEL_17:
    sub_19C1CC414(v2, v12, v20, 0x4EC4EC4EC4EC4EC5 * (v20 - v12));
    v12 = v19;
  }
LABEL_18:
  if (v12)
  {
    v13 = (char **)v20;
    v14 = v12;
    if (v20 != v12)
    {
      do
        v13 = sub_19C17B808(v13 - 13);
      while (v13 != (char **)v12);
      v14 = v19;
    }
    v20 = v12;
    operator delete(v14);
  }
}

void sub_19C20DF2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_19C1CB740(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_19C20DF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  sub_19C17B808((char **)va);
  sub_19C1CB740(v7 - 120);
  _Unwind_Resume(a1);
}

void sub_19C20DF64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v15;

  if (__p)
    operator delete(__p);
  sub_19C17B808(&a15);
  sub_19C1CB740(v15 - 120);
  _Unwind_Resume(a1);
}

void sub_19C20DF90(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  int v5;
  void *__p[3];
  _QWORD v7[313];
  std::random_device v8;
  double *v9[3];

  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = a2 + 16;
  *(_QWORD *)(a2 + 24) = 0;
  sub_19C1CCB54(a1, __p);
  sub_19C17A140(v7, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v3 = 50;
  do
  {
    v5 = sub_19C1CCF6C((uint64_t)v9, (uint64_t)v7, v9);
    v4 = sub_19C1CCC40((int *)a2, &v5);
    ++*(_DWORD *)v4;
    --v3;
  }
  while (v3);
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
  std::random_device::~random_device(&v8);
}

void sub_19C20E06C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  _QWORD **v15;

  if (__p)
  {
    operator delete(__p);
    sub_19C07C924(v14, *v15);
    _Unwind_Resume(a1);
  }
  sub_19C07C924(v14, *v15);
  _Unwind_Resume(a1);
}

void sub_19C20E0CC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  void *v6[4];
  void *__p[4];
  void *v8[4];
  _OWORD v9[2];

  sub_19C1C1840(a3, a2);
  sub_19C1CD184((__int128 **)a2, (uint64_t)v8);
  sub_19C20E258(a1, (uint64_t *)v8, v9);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v6);
  sub_19C20E304(a1, (uint64_t *)v6, __p);
  sub_19C1CD7E0((uint64_t *)a3, (uint64_t *)v9);
  sub_19C1CD99C((uint64_t)a3, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v6[0])
  {
    v6[1] = v6[0];
    operator delete(v6[0]);
  }
  if (*(_QWORD *)&v9[0])
  {
    *((_QWORD *)&v9[0] + 1) = *(_QWORD *)&v9[0];
    operator delete(*(void **)&v9[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
}

void sub_19C20E198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  char **v18;
  uint64_t v19;
  void *v21;
  void *v22;

  if (__p)
  {
    operator delete(__p);
    v21 = *(void **)(v19 - 64);
    if (!v21)
    {
LABEL_3:
      v22 = a17;
      if (!a17)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v21 = *(void **)(v19 - 64);
    if (!v21)
      goto LABEL_3;
  }
  *(_QWORD *)(v19 - 56) = v21;
  operator delete(v21);
  v22 = a17;
  if (!a17)
  {
LABEL_4:
    sub_19C17B808(v18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(v22);
  sub_19C17B808(v18);
  _Unwind_Resume(a1);
}

double sub_19C20E258@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = (uint64_t *)(a1 + 16);
  if (sub_19C178A44((uint64_t *)(a1 + 16)))
  {
    sub_19C178B08(v5, (uint64_t *)v7);
    sub_19C239578(a2, (uint64_t)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C20E2F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C20E304@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = a1 + 16;
  if (sub_19C179558(a1 + 16))
  {
    sub_19C17961C(v5, (uint64_t *)v7);
    sub_19C23A200(a2, (uint64_t *)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C20E39C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C20E3B0(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;
  double v6;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C20CD14(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v4 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v5 = __C;
    sub_19C20E590(a1, a2, (uint64_t)__A);
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v5 + v4;
  }
  else
  {
    v6 = sub_19C20CC34(a1, a2);
    sub_19C20E4B8(a1, a2);
  }
  return v6;
}

void sub_19C20E498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_19C20E4B8(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;
  double v6;
  double v8;
  double v9;
  double v10;
  void *__p[4];

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C20CD14(a1, a2, (uint64_t)__p);
    sub_19C20E590(a1, a2, (uint64_t)__p);
    v5 = v4;
    v6 = *(double *)(a1 + 16);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    return v6 + v5;
  }
  else
  {
    v8 = sub_19C20CFD0(a1 + 8, a2, a2);
    v9 = *(double *)(a1 + 24);
    return *(double *)(a1 + 16) + exp(-v8) * v9 * (v8 + 1.0 + v10);
  }
}

void sub_19C20E574(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C20E590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  _OWORD *v20;
  unsigned int v21;
  double v22;
  void *__p[3];
  int v24;
  double *__B[3];
  vDSP_Length __N;

  sub_19C1CE734(a1 + 192, (uint64_t)__p);
  v6 = *(unsigned int *)(a1 + 216);
  if ((int)v6 >= 1)
  {
    v7 = 0;
    v8 = *(_DWORD *)(a1 + 220);
    v9 = v24;
    v10 = 1;
    v11 = -1;
    v12 = __p[0];
    do
    {
      if (v8 <= v10)
        v13 = v10;
      else
        v13 = v8;
      v14 = v7 + 1;
      if ((int)v7 + 1 >= v8)
        goto LABEL_3;
      v15 = 0;
      v16 = v13 + v11;
      v17 = (int)v7 * (uint64_t)v9;
      if ((v13 + v11) < 4)
      {
        v18 = v7 + 1;
      }
      else
      {
        v18 = v7 + 1;
        if (v13 - (int)v7 + v10 - 2 >= v10)
        {
          v19 = 0;
          v15 = v16 & 0xFFFFFFFC;
          v18 = v14 + (v16 & 0xFFFFFFFC);
          do
          {
            v20 = &v12[v17 + v10 + v19];
            *v20 = 0uLL;
            v20[1] = 0uLL;
            v19 += 4;
          }
          while ((v16 & 0xFFFFFFFC) != v19);
          if (v16 == v15)
            goto LABEL_3;
        }
      }
      v21 = v13 - v15;
      do
      {
        v12[v17 + v18] = 0;
        v18 = ++v15 + v14;
        --v21;
      }
      while (v10 != v21);
LABEL_3:
      ++v7;
      ++v10;
      --v11;
    }
    while (v7 != v6);
  }
  sub_19C1CE5B4((uint64_t)__p, a3, (uint64_t)__B);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v22 = sub_19C20CFD0(a1 + 8, a2, a2);
  __p[0] = 0;
  vDSP_dotprD(__B[0], 1, __B[0], 1, (double *)__p, (int)__N);
  if (__B[0])
  {
    __B[1] = __B[0];
    operator delete(__B[0]);
  }
  exp(-v22);
}

void sub_19C20E764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C20E794(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  void *v32[4];
  void *v33[4];
  void *v34;
  void **v35;
  uint64_t v36;
  void *__p;
  void **v38;
  uint64_t v39;

  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_19C17AF88(&v34, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v38 = 0;
  v39 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21588;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v34, (uint64_t)v35, 0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (_BYTE *)v34) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v38, 0xCCCCCCCCCCCCCCCDLL * (((char *)v38 - (_BYTE *)__p) >> 3));
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v38;
    v10 = __p;
    if (v38 != __p)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v38 = v8;
    operator delete(v10);
  }
  v11 = (void **)v34;
  if (v34)
  {
    v12 = v35;
    v13 = v34;
    if (v35 != v34)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v34;
    }
    v35 = v11;
    operator delete(v13);
  }
  *(_QWORD *)a1 = &unk_1E3D21288;
  v14 = sub_19C178A44(a3);
  sub_19C1CF858(a1 + 64, v14);
  sub_19C1C81AC(a1 + 184);
  sub_19C178B08(a3, (uint64_t *)v32);
  sub_19C1D0468(a1 + 64, (uint64_t *)v32);
  sub_19C1D0594(a1 + 64, (uint64_t *)v33);
  if (v33[0])
  {
    v33[1] = v33[0];
    operator delete(v33[0]);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  if ((a4 & 0xFF00000000) != 0)
  {
    v15 = 0;
    *(_DWORD *)(a1 + 7776) = a4;
    v16 = 1;
    v17 = a4;
    do
    {
      v18 = 1812433253 * (v17 ^ (v17 >> 30));
      v17 = v18 + v16;
      *(_DWORD *)(a1 + 7780 + 4 * v15) = v15 + v18 + 1;
      ++v16;
      ++v15;
    }
    while (v15 != 623);
    *(_QWORD *)(a1 + 10272) = 0;
    *(_DWORD *)(a1 + 184) = a4;
    v19 = 1;
    v20 = 47;
    v21 = a4;
    do
    {
      v22 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v22 + v19;
      *(_DWORD *)(a1 + 4 * v20) = v20 + v22 - 46;
      ++v19;
      ++v20;
    }
    while (v20 != 670);
    v23 = 0;
    *(_QWORD *)(a1 + 2680) = 0;
    *(_DWORD *)(a1 + 2712) = a4;
    v24 = 1;
    v25 = a4;
    do
    {
      v26 = 1812433253 * (v25 ^ (v25 >> 30));
      v25 = v26 + v24;
      *(_DWORD *)(a1 + 2716 + 4 * v23) = v23 + v26 + 1;
      ++v24;
      ++v23;
    }
    while (v23 != 623);
    v27 = 0;
    *(_QWORD *)(a1 + 5208) = 0;
    *(_DWORD *)(a1 + 5232) = a4;
    v28 = 1;
    v29 = a4;
    do
    {
      v30 = 1812433253 * (v29 ^ (v29 >> 30));
      v29 = v30 + v28;
      *(_DWORD *)(a1 + 5236 + 4 * v27) = v27 + v30 + 1;
      ++v28;
      ++v27;
    }
    while (v27 != 623);
    *(_QWORD *)(a1 + 7728) = 0;
    sub_19C23B684();
  }
  return a1;
}

void sub_19C20EAB0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  sub_19C1CF8E8(v2);
  sub_19C20DC34(v1);
  _Unwind_Resume(a1);
}

void sub_19C20EB44(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_19C20DC34(v1);
  _Unwind_Resume(a1);
}

void sub_19C20EB5C(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_19C20F074(a1);
  operator delete(v1);
}

void sub_19C20EB70(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  double v6;
  void **v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t **v13;
  uint64_t **i;
  uint64_t **v15;
  char **v16;
  uint64_t **v17;
  char **v18;
  char **v19;
  void *v20;
  double v21;
  double v22;
  BOOL v23;
  char v24;
  __int128 **v25;
  char **v26;
  char *v27;
  void *__p;
  char **v29;
  uint64_t *v30[12];
  _OWORD v31[3];
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[2];
  double v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  __int128 **v43;
  char *v44;
  uint64_t **v45;
  uint64_t **v46;

  v32 = 0u;
  memset(v31, 0, sizeof(v31));
  *(_QWORD *)&v32 = (char *)&v32 + 8;
  v35[0] = 0;
  v35[1] = 0;
  v33 = 0;
  v34 = v35;
  v6 = (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8));
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)v31);
  *(double *)(a3 + 96) = v6;
  sub_19C17B808((char **)v31);
  v38 = 0;
  v39 = 0;
  v37 = 0;
  sub_19C17AF88(&v37, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 4));
  v40 = 0;
  v41 = 0;
  v42 = 0;
  sub_19C17B16C(&v40, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 3));
  sub_19C17A144((uint64_t *)&v37, a1 + 184, 5, (char **)&v43);
  v7 = v40;
  if (v40)
  {
    v8 = v41;
    v9 = v40;
    if (v41 != v40)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v40;
    }
    v41 = v7;
    operator delete(v9);
  }
  v10 = (uint64_t)v37;
  if (v37)
  {
    v11 = v38;
    v12 = v37;
    if ((void *)v38 != v37)
    {
      do
      {
        if (*(char *)(v11 - 25) < 0)
          operator delete(*(void **)(v11 - 48));
        v11 -= 48;
      }
      while (v11 != v10);
      v12 = v37;
    }
    v38 = v10;
    operator delete(v12);
  }
  sub_19C20F11C(a1, v43, (uint64_t)v31);
  sub_19C1C9C8C(a3, (uint64_t)v31);
  *(double *)(a3 + 96) = v36;
  sub_19C17B808((char **)v31);
  sub_19C20F11C(a1, v43 + 12, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C20F11C(a1, v43 + 24, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C20F11C(a1, v43 + 36, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C20F11C(a1, v43 + 48, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1CCA84((uint64_t ***)&__p, a2);
  sub_19C1CCA84(&v45, (uint64_t **)&__p);
  v13 = v45;
  if (v45 != v46)
  {
    for (i = v45 + 13; i != v46; i += 13)
    {
      if (*((double *)v13 + 12) < *((double *)i + 12))
        v13 = i;
    }
  }
  sub_19C1C1840((uint64_t **)v31, (uint64_t *)v13);
  v36 = *((double *)v13 + 12);
  v15 = v45;
  if (v45)
  {
    v16 = (char **)v46;
    v17 = v45;
    if (v46 != v45)
    {
      do
        v16 = sub_19C17B808(v16 - 13);
      while (v16 != (char **)v15);
      v17 = v45;
    }
    v46 = v15;
    operator delete(v17);
  }
  sub_19C1C5D14(v30, (uint64_t)v31);
  sub_19C17B808((char **)v31);
  v18 = (char **)__p;
  if (__p)
  {
    v19 = v29;
    v20 = __p;
    if (v29 != __p)
    {
      do
        v19 = sub_19C17B808(v19 - 13);
      while (v19 != v18);
      v20 = __p;
    }
    v29 = v18;
    operator delete(v20);
  }
  sub_19C20F11C(a1, (__int128 **)v30, (uint64_t)v31);
  v21 = v36;
  v22 = *(double *)(a3 + 96);
  v23 = sub_19C1D16FC((uint64_t *)v31, v30);
  v24 = v21 <= v22 || v23;
  if ((v24 & 1) == 0)
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C17B808((char **)v30);
  v25 = v43;
  if (v43)
  {
    v26 = (char **)v44;
    v27 = (char *)v43;
    if (v44 != (char *)v43)
    {
      do
        v26 = sub_19C17B808(v26 - 12);
      while (v26 != (char **)v25);
      v27 = (char *)v43;
    }
    v44 = (char *)v25;
    operator delete(v27);
  }
}

void sub_19C20EF9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  char **v5;
  uint64_t v6;
  char *v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, char *);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  sub_19C17B808((char **)va1);
  sub_19C17B808((char **)va);
  sub_19C17AA64((void **)(v6 - 112));
  sub_19C17B808(v5);
  _Unwind_Resume(a1);
}

void sub_19C20F054(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "direct_optimizer");
}

_QWORD *sub_19C20F074(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = &unk_1E3D21288;
  std::random_device::~random_device((std::random_device *)(a1 + 10280));
  std::random_device::~random_device((std::random_device *)(a1 + 7736));
  std::random_device::~random_device((std::random_device *)(a1 + 5216));
  std::random_device::~random_device((std::random_device *)(a1 + 2688));
  *(_QWORD *)(a1 + 64) = &unk_1E3D21150;
  sub_19C23AA14(*(_QWORD *)(a1 + 72));
  v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(_QWORD *)(a1 + 136) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 104);
  if (v3)
  {
    *(_QWORD *)(a1 + 112) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 80);
  if (v4)
  {
    *(_QWORD *)(a1 + 88) = v4;
    operator delete(v4);
  }
  return sub_19C20DC34((_QWORD *)a1);
}

void sub_19C20F11C(uint64_t a1@<X0>, __int128 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float64x2_t *v9;
  char *v10;
  uint64_t v11;
  float64x2_t *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  int64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  int v25;
  double v26;
  double v27;
  void *v28[3];
  unsigned int v29;
  void *v30;
  char *v31;
  char *v32;
  int v33;
  void *v34;
  void *v35;
  void *__p[12];
  void *v37[4];
  _QWORD v38[2];

  v38[0] = a1;
  v38[1] = a2;
  v6 = a1 + 64;
  sub_19C1CD184(a2, (uint64_t)__p);
  sub_19C20F4A0(v6, (uint64_t)v38, (uint64_t *)__p, (uint64_t)v37);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_19C1CD508((uint64_t)a2, (uint64_t)&v34);
  sub_19C1C1840((uint64_t **)__p, (uint64_t *)a2);
  sub_19C1CD7E0((uint64_t *)__p, (uint64_t *)v37);
  sub_19C1CD99C((uint64_t)__p, (uint64_t *)&v34);
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  v7 = *(_QWORD *)(a1 + 8);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v28);
  v8 = v29;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  if (!v29)
  {
    v33 = 0;
    goto LABEL_15;
  }
  if ((v29 & 0x80000000) != 0)
    sub_19C07DA0C();
  v9 = (float64x2_t *)operator new(8 * (int)v29);
  v30 = v9;
  v32 = (char *)&v9->f64[(int)v8];
  bzero(v9, 8 * (int)v8);
  v31 = (char *)&v9->f64[(int)v8];
  v33 = v8;
  v10 = (char *)v28[0];
  if (v8 < 8)
  {
    v11 = 0;
LABEL_13:
    v20 = v8 - v11;
    v21 = v11 << 32;
    do
    {
      *(double *)((char *)v9->f64 + (v21 >> 29)) = (double)*(int *)&v10[v21 >> 30];
      v21 += 0x100000000;
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
  v11 = v8 & 0xFFFFFFF8;
  v12 = v9 + 2;
  v13 = (char *)v28[0] + 16;
  v14 = v11;
  do
  {
    v15 = *((_OWORD *)v13 - 1);
    v16.i64[0] = (int)v15;
    v16.i64[1] = SDWORD1(v15);
    v17 = vcvtq_f64_s64(v16);
    v16.i64[0] = SDWORD2(v15);
    v16.i64[1] = SHIDWORD(v15);
    v18 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*(_OWORD *)v13;
    v16.i64[1] = (int)HIDWORD(*(_QWORD *)v13);
    v19 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*((_QWORD *)v13 + 1);
    v16.i64[1] = (int)HIDWORD(*(_OWORD *)v13);
    v12[-2] = v17;
    v12[-1] = v18;
    *v12 = v19;
    v12[1] = vcvtq_f64_s64(v16);
    v12 += 4;
    v13 += 32;
    v14 -= 8;
  }
  while (v14);
  if (v11 != v8)
    goto LABEL_13;
LABEL_15:
  sub_19C1CEDDC((uint64_t)v37, (uint64_t)&v30, (uint64_t)&v34);
  v22 = sub_19C20E3B0(*(_QWORD *)(v7 + 8), (uint64_t)&v34);
  v24 = sqrt(v23);
  if (v24 < 0.00000001 || (v25 = *(_DWORD *)(*(_QWORD *)(v7 + 8) + 120), v25 <= 0))
  {
    v26 = (*(double (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  else
  {
    if (*(_DWORD *)(v7 + 56) != v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    (**(void (***)(uint64_t, double, double))v7)(v7, v22, v24);
  }
  v27 = v26;
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)__p);
  *(double *)(a3 + 96) = v27;
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  if (v30)
  {
    v31 = (char *)v30;
    operator delete(v30);
  }
  if (v28[0])
  {
    v28[1] = v28[0];
    operator delete(v28[0]);
  }
  sub_19C17B808((char **)__p);
  if (v37[0])
  {
    v37[1] = v37[0];
    operator delete(v37[0]);
  }
}

void sub_19C20F3C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v24;
  void *v25;

  if (a13)
  {
    operator delete(a13);
    v24 = __p;
    if (!__p)
    {
LABEL_4:
      sub_19C17B808((char **)&a21);
      v25 = *(void **)(v22 - 128);
      if (v25)
      {
        *(_QWORD *)(v22 - 120) = v25;
        operator delete(v25);
      }
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v24 = __p;
    if (!__p)
      goto LABEL_4;
  }
  operator delete(v24);
  goto LABEL_4;
}

void sub_19C20F4A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C20F9F0;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C20F8E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C20F6F4);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

void sub_19C20F9F0(uint64_t **a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  void *__p;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v18 = 0;
  v19 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    __p = 0;
    v18 = 0;
    v19 = 0;
    v20 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  __p = v8;
  v18 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v19 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v20 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C20FBC0(a3, (uint64_t)&__p);
    if (__p)
    {
      v18 = (char *)__p;
      operator delete(__p);
    }
  }
  else
  {
    sub_19C20FBC0(a3, (uint64_t)&__p);
    __break(1u);
  }
}

void sub_19C20FB84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C20FBA4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

uint64_t sub_19C20FBC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  float64x2_t *v5;
  char *v6;
  uint64_t v7;
  float64x2_t *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  int64x2_t v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  int v21;
  double v22;
  double v23;
  void *v25[3];
  unsigned int v26;
  void *v27;
  char *v28;
  char *v29;
  int v30;
  void *__p[4];

  v3 = *(_QWORD *)(*a1 + 8);
  sub_19C1CD508(a1[1], (uint64_t)v25);
  v4 = v26;
  v28 = 0;
  v29 = 0;
  v27 = 0;
  if (!v26)
  {
    v30 = 0;
    goto LABEL_11;
  }
  if ((v26 & 0x80000000) != 0)
    sub_19C07DA0C();
  v5 = (float64x2_t *)operator new(8 * (int)v26);
  v27 = v5;
  v29 = (char *)&v5->f64[(int)v4];
  bzero(v5, 8 * (int)v4);
  v28 = (char *)&v5->f64[(int)v4];
  v30 = v4;
  v6 = (char *)v25[0];
  if (v4 < 8)
  {
    v7 = 0;
LABEL_9:
    v16 = v4 - v7;
    v17 = v7 << 32;
    do
    {
      *(double *)((char *)v5->f64 + (v17 >> 29)) = (double)*(int *)&v6[v17 >> 30];
      v17 += 0x100000000;
      --v16;
    }
    while (v16);
    goto LABEL_11;
  }
  v7 = v4 & 0xFFFFFFF8;
  v8 = v5 + 2;
  v9 = (char *)v25[0] + 16;
  v10 = v7;
  do
  {
    v11 = *((_OWORD *)v9 - 1);
    v12.i64[0] = (int)v11;
    v12.i64[1] = SDWORD1(v11);
    v13 = vcvtq_f64_s64(v12);
    v12.i64[0] = SDWORD2(v11);
    v12.i64[1] = SHIDWORD(v11);
    v14 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*(_OWORD *)v9;
    v12.i64[1] = (int)HIDWORD(*(_QWORD *)v9);
    v15 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*((_QWORD *)v9 + 1);
    v12.i64[1] = (int)HIDWORD(*(_OWORD *)v9);
    v8[-2] = v13;
    v8[-1] = v14;
    *v8 = v15;
    v8[1] = vcvtq_f64_s64(v12);
    v8 += 4;
    v9 += 32;
    v10 -= 8;
  }
  while (v10);
  if (v7 != v4)
    goto LABEL_9;
LABEL_11:
  sub_19C1CEDDC(a2, (uint64_t)&v27, (uint64_t)__p);
  v18 = sub_19C20E3B0(*(_QWORD *)(v3 + 8), (uint64_t)__p);
  v20 = sqrt(v19);
  if (v20 < 0.00000001 || (v21 = *(_DWORD *)(*(_QWORD *)(v3 + 8) + 120), v21 <= 0))
  {
    v22 = (*(double (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  else
  {
    if (*(_DWORD *)(v3 + 56) != v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    (**(void (***)(uint64_t, double, double))v3)(v3, v18, v20);
  }
  v23 = v22;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v27)
  {
    v28 = (char *)v27;
    operator delete(v27);
  }
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
  return *(_QWORD *)&v23;
}

void sub_19C20FDC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  void *v19;

  if (__p)
  {
    operator delete(__p);
    v19 = a9;
    if (!a9)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v19 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C20FE40(uint64_t a1)
{
  char **v2;
  char **v3;
  char **v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char **v13;
  char **v14;
  void *v15;

  *(_QWORD *)a1 = &unk_1E3D217F8;
  v2 = *(char ***)(a1 + 10696);
  if (v2)
  {
    v3 = *(char ***)(a1 + 10704);
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 12);
      while (v3 != v2);
      v4 = *(char ***)(a1 + 10696);
    }
    *(_QWORD *)(a1 + 10704) = v2;
    operator delete(v4);
  }
  std::random_device::~random_device((std::random_device *)(a1 + 10688));
  std::random_device::~random_device((std::random_device *)(a1 + 8144));
  std::random_device::~random_device((std::random_device *)(a1 + 5624));
  std::random_device::~random_device((std::random_device *)(a1 + 3096));
  v5 = *(_QWORD *)(a1 + 584);
  *(_QWORD *)(a1 + 584) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  *(_QWORD *)(a1 + 504) = &unk_1E3D20F70;
  v6 = *(void **)(a1 + 520);
  if (v6)
  {
    *(_QWORD *)(a1 + 528) = v6;
    operator delete(v6);
  }
  sub_19C1EC3CC((_QWORD *)(a1 + 176));
  v7 = *(_QWORD *)(a1 + 152);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 160);
    v9 = *(void **)(a1 + 152);
    if (v8 != v7)
    {
      v10 = *(_QWORD *)(a1 + 160);
      do
      {
        v12 = *(void **)(v10 - 56);
        v10 -= 56;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v8 - 48) = v11;
          operator delete(v11);
        }
        v8 = v10;
      }
      while (v10 != v7);
      v9 = *(void **)(a1 + 152);
    }
    *(_QWORD *)(a1 + 160) = v7;
    operator delete(v9);
  }
  *(_QWORD *)a1 = &unk_1E3D214F8;
  sub_19C1C2E88(a1 + 32);
  v13 = *(char ***)(a1 + 8);
  if (v13)
  {
    v14 = *(char ***)(a1 + 16);
    v15 = *(void **)(a1 + 8);
    if (v14 != v13)
    {
      do
        v14 = sub_19C17B808(v14 - 13);
      while (v14 != v13);
      v15 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v13;
    operator delete(v15);
  }
  return a1;
}

void sub_19C20FFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  void *__p[4];

  v5 = (uint64_t *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 96);
  v6 = *(_DWORD *)(a1 + 120);
  v7 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 120) = v6 + 1;
  *(_DWORD *)(a1 + 124) = v7;
  v8 = v7 * (v6 + 1);
  v9 = (*(_QWORD *)(a1 + 104) - v4) >> 3;
  if (v8 <= v9)
  {
    if (v8 < v9)
      *(_QWORD *)(a1 + 104) = v4 + 8 * v8;
  }
  else
  {
    sub_19C17C9D8(a1 + 96, v8 - v9);
    v6 = *(_DWORD *)(a1 + 120) - 1;
  }
  sub_19C1CE998(a2, (uint64_t)__p);
  v10 = *(int *)(a1 + 124);
  v11 = (char *)__p[0];
  if (!(_DWORD)v10)
  {
    if (!__p[0])
      goto LABEL_18;
    goto LABEL_17;
  }
  v12 = (int)v10 * (uint64_t)v6;
  v13 = *v5;
  if (v10 >= 8 && (v14 = 8 * v12 + v13, v14 - (unint64_t)__p[0] >= 0x20))
  {
    v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    v20 = (__int128 *)((char *)__p[0] + 16);
    v21 = (_OWORD *)(v14 + 16);
    v22 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v23 = *v20;
      *(v21 - 1) = *(v20 - 1);
      *v21 = v23;
      v20 += 2;
      v21 += 2;
      v22 -= 4;
    }
    while (v22);
    if (v15 == v10)
      goto LABEL_17;
  }
  else
  {
    v15 = 0;
  }
  v16 = v10 - v15;
  v17 = (_QWORD *)(v13 + 8 * (v15 + v12));
  v18 = &v11[8 * v15];
  do
  {
    v19 = *(_QWORD *)v18;
    v18 += 8;
    *v17++ = v19;
    --v16;
  }
  while (v16);
LABEL_17:
  __p[1] = v11;
  operator delete(v11);
LABEL_18:
  sub_19C2100F0(a1, 1, 1);
}

void sub_19C2100F0(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  signed int v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  char *v32;
  char *v33;
  uint64_t v35;
  void *__p;
  void *v37;
  uint64_t v38;
  unsigned int v39;
  char *__C;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  if (a2)
  {
    v5 = (_QWORD *)(a1 + 128);
    v4 = *(_QWORD *)(a1 + 128);
    v6 = *(_DWORD *)(a1 + 120);
    *(_DWORD *)(a1 + 152) = v6;
    v7 = (*(_QWORD *)(a1 + 136) - v4) >> 3;
    v35 = v6;
    if (v6 <= v7)
    {
      if (v6 < v7)
        *(_QWORD *)(a1 + 136) = v4 + 8 * v6;
    }
    else
    {
      sub_19C17C9D8(a1 + 128, v6 - v7);
      v6 = *(_DWORD *)(a1 + 120);
      v35 = v6;
    }
    if (v6)
    {
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *(_QWORD *)(a1 + 96);
        v11 = *(_DWORD *)(a1 + 124);
        __C = 0;
        v41 = 0;
        v42 = 0;
        if (v11)
          break;
        v12 = 0;
        v37 = 0;
        v38 = 0;
        __p = 0;
        v39 = 0;
LABEL_26:
        __C = 0;
        vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)&__C, *(int *)(a1 + 312));
        *(_QWORD *)(*v5 + 8 * v9) = __C;
        if (__p)
        {
          v37 = __p;
          operator delete(__p);
        }
        if (v12)
          operator delete(v12);
        ++v9;
        v8 += 8;
        if (v9 == v35)
          goto LABEL_34;
      }
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = operator new(8 * v11);
      bzero(v12, 8 * v11);
      if (v11 >= 8 && (unint64_t)v12 - v10 - 8 * v9 * v11 >= 0x20)
      {
        v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
        v28 = (__int128 *)(v10 + v8 * v11 + 16);
        v29 = v12 + 1;
        v30 = v13;
        do
        {
          v31 = *v28;
          *(v29 - 1) = *(v28 - 1);
          *v29 = v31;
          v28 += 2;
          v29 += 2;
          v30 -= 4;
        }
        while (v30);
        if (v13 == v11)
        {
LABEL_16:
          __p = 0;
          v37 = 0;
          v38 = 0;
          v39 = v11;
          sub_19C17C9D8((uint64_t)&__p, v11);
          v19 = v39;
          if ((int)v39 >= 1)
          {
            v20 = 0;
            v21 = (char *)__p;
            if (v39 < 4)
              goto LABEL_22;
            if ((unint64_t)((_BYTE *)__p - (_BYTE *)v12) < 0x20)
              goto LABEL_22;
            v22 = 0;
            v20 = v39 & 0xFFFFFFFC;
            v23 = (8 * v39) & 0x7FFFFFFE0;
            do
            {
              v24 = v12[v22 / 0x10 + 1];
              v25 = &v21[v22];
              *(_OWORD *)v25 = v12[v22 / 0x10];
              *((_OWORD *)v25 + 1) = v24;
              v22 += 32;
            }
            while (v23 != v22);
            if (v20 != v19)
            {
LABEL_22:
              v26 = v19 - v20;
              v27 = v20 << 32;
              do
              {
                *(_QWORD *)&v21[v27 >> 29] = *(_QWORD *)((char *)v12 + (v27 >> 29));
                v27 += 0x100000000;
                --v26;
              }
              while (v26);
            }
          }
          goto LABEL_26;
        }
      }
      else
      {
        v13 = 0;
      }
      v14 = v11 - v13;
      v15 = 8 * v13;
      v16 = (_QWORD *)v12 + v13;
      v17 = (uint64_t *)(v10 + v15 + v8 * v11);
      do
      {
        v18 = *v17++;
        *v16++ = v18;
        --v14;
      }
      while (v14);
      goto LABEL_16;
    }
  }
LABEL_34:
  sub_19C21046C(a1 + 8, (uint64_t *)(a1 + 96), (uint64_t)&__C);
  if ((char **)(a1 + 160) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 160), __C, v41, (v41 - __C) >> 3);
  v32 = __C;
  *(_QWORD *)(a1 + 184) = v43;
  if (v32)
  {
    v41 = v32;
    operator delete(v32);
  }
  sub_19C1D3978(a1 + 160, (uint64_t)&__C);
  if ((char **)(a1 + 192) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 192), __C, v41, (v41 - __C) >> 3);
  v33 = __C;
  *(_QWORD *)(a1 + 216) = v43;
  if (v33)
  {
    v41 = v33;
    operator delete(v33);
  }
  sub_19C210938(a1);
  if (a3)
    sub_19C210B58((int32x2_t *)a1);
}

void sub_19C210408(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C21046C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  size_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  signed int v12;
  char *v13;
  size_t v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  _OWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  __int128 *v34;
  _OWORD *v35;
  unint64_t v36;
  __int128 v37;
  __int128 *v38;
  _OWORD *v39;
  unint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  char *v58;
  signed int v59;
  void *__p;
  char *v61;
  char *v62;
  signed int v63;

  v4 = *((unsigned int *)a2 + 6);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  if (!(_DWORD)v4)
  {
    v7 = 0;
    *(_DWORD *)(a3 + 24) = 0;
    *(_DWORD *)(a3 + 28) = 0;
LABEL_41:
    v42 = (int)v4;
    if ((_DWORD)v4)
      goto LABEL_42;
    return;
  }
  v6 = 8 * (v4 * v4);
  v7 = (char *)operator new(v6);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 16) = &v7[v6];
  bzero(v7, v6);
  *(_QWORD *)(a3 + 8) = &v7[v6];
  *(_DWORD *)(a3 + 24) = v4;
  *(_DWORD *)(a3 + 28) = v4;
  if ((int)v4 <= 0)
    goto LABEL_41;
  v52 = 0;
  v8 = 0;
  v55 = 1;
  v48 = v4;
  v50 = a1;
  do
  {
    v9 = 0;
    v10 = 0;
    v49 = 8 * v8;
    v54 = (int)v8 * v4;
    v51 = v8;
    do
    {
      v11 = *a2;
      v12 = *((_DWORD *)a2 + 7);
      __p = 0;
      v61 = 0;
      v62 = 0;
      if (v12)
      {
        if (v12 < 0)
          sub_19C07DA0C();
        v13 = v7;
        v14 = 8 * v12;
        v15 = operator new(v14);
        bzero(v15, v14);
        if (v12 < 8 || (unint64_t)v15 - v11 - v49 * v12 < 0x20)
        {
          v16 = 0;
          goto LABEL_12;
        }
        v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v34 = (__int128 *)(v11 + v52 * v12 + 16);
        v35 = v15 + 1;
        v36 = v16;
        do
        {
          v37 = *v34;
          *(v35 - 1) = *(v34 - 1);
          *v35 = v37;
          v34 += 2;
          v35 += 2;
          v36 -= 4;
        }
        while (v36);
        if (v16 != v12)
        {
LABEL_12:
          v17 = v12 - v16;
          v18 = 8 * v16;
          v19 = (_QWORD *)v15 + v16;
          v20 = (uint64_t *)(v11 + v18 + v52 * v12);
          do
          {
            v21 = *v20++;
            *v19++ = v21;
            --v17;
          }
          while (v17);
        }
        v56 = 0;
        v57 = 0;
        v59 = 0;
        v58 = 0;
        v56 = operator new(8 * v12);
        v57 = (char *)v56 + v14;
        v58 = (char *)v56 + 8 * v12;
        v59 = v12;
        memcpy(v56, v15, 8 * v12);
        v22 = operator new(8 * v12);
        bzero(v22, 8 * v12);
        if (v12 < 8 || (unint64_t)v22 - v11 - 8 * v10 * v12 < 0x20)
        {
          v23 = 0;
          goto LABEL_17;
        }
        v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v38 = (__int128 *)(v11 + v9 * v12 + 16);
        v39 = v22 + 1;
        v40 = v23;
        do
        {
          v41 = *v38;
          *(v39 - 1) = *(v38 - 1);
          *v39 = v41;
          v38 += 2;
          v39 += 2;
          v40 -= 4;
        }
        while (v40);
        if (v23 != v12)
        {
LABEL_17:
          v24 = v12 - v23;
          v25 = 8 * v23;
          v26 = (_QWORD *)v22 + v23;
          v27 = (uint64_t *)(v11 + v25 + v9 * v12);
          do
          {
            v28 = *v27++;
            *v26++ = v28;
            --v24;
          }
          while (v24);
        }
        __p = 0;
        v61 = 0;
        v63 = 0;
        v62 = 0;
        v29 = (int)v10;
        __p = operator new(8 * v12);
        v61 = (char *)__p + v14;
        v62 = (char *)__p + 8 * v12;
        v63 = v12;
        memcpy(__p, v22, 8 * v12);
        v7 = v13;
        a1 = v50;
        v8 = v51;
        goto LABEL_21;
      }
      v15 = 0;
      v22 = 0;
      v57 = 0;
      v58 = 0;
      v56 = 0;
      v59 = 0;
      v29 = (int)v10;
      __p = 0;
      v61 = 0;
      v63 = 0;
      v62 = 0;
LABEL_21:
      v30 = sub_19C20CFD0(a1, (uint64_t)&v56, (uint64_t)&__p);
      v31 = *(double *)(a1 + 16);
      v33 = (v30 + 1.0 + v32) * (exp(-v30) * v31);
      if ((_DWORD)v8 == (_DWORD)v10)
        v33 = v33 + *(double *)(a1 + 8) + 1.0e-10;
      *(double *)&v7[8 * v29 + 8 * v54] = v33;
      if (__p)
      {
        v61 = (char *)__p;
        operator delete(__p);
      }
      if (v22)
        operator delete(v22);
      if (v56)
      {
        v57 = (char *)v56;
        operator delete(v56);
      }
      if (v15)
        operator delete(v15);
      ++v10;
      v9 += 8;
    }
    while (v10 != v55);
    ++v8;
    ++v55;
    v52 += 8;
    v4 = v48;
  }
  while (v8 != v48);
  v42 = v48;
LABEL_42:
  if (v42 != 1)
  {
    v43 = 0;
    v44 = 8 * v42;
    v45 = v7;
    do
    {
      if (v43)
      {
        v46 = 0;
        v47 = v45;
        do
        {
          *v47 = *(_QWORD *)&v7[8 * v46++];
          v47 = (_QWORD *)((char *)v47 + v44);
        }
        while (v43 != v46);
      }
      ++v43;
      ++v45;
      v7 += v44;
    }
    while (v43 != v42);
  }
}

void sub_19C21089C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C2108C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v28;

  if (__p)
  {
    operator delete(__p);
    if (!v25)
    {
LABEL_3:
      v28 = a18;
      if (!a18)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v25)
  {
    goto LABEL_3;
  }
  operator delete(v25);
  v28 = a18;
  if (!a18)
  {
LABEL_4:
    if (!v23)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v28);
  if (!v23)
  {
LABEL_5:
    *(_QWORD *)(v26 + 8) = v24;
    operator delete(v24);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(v23);
  *(_QWORD *)(v26 + 8) = v24;
  operator delete(v24);
  _Unwind_Resume(a1);
}

void sub_19C210938(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _OWORD *v16;
  unsigned int v17;
  void *v18[4];
  void *__p;
  char *v20;
  int v21;
  void *v22[3];
  int v23;

  sub_19C1CE734(a1 + 192, (uint64_t)v22);
  v2 = *(unsigned int *)(a1 + 216);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    v4 = *(_DWORD *)(a1 + 220);
    v5 = v23;
    v6 = 1;
    v7 = -1;
    v8 = v22[0];
    do
    {
      if (v4 <= v6)
        v9 = v6;
      else
        v9 = v4;
      v10 = v3 + 1;
      if ((int)v3 + 1 >= v4)
        goto LABEL_3;
      v11 = 0;
      v12 = v9 + v7;
      v13 = (int)v3 * (uint64_t)v5;
      if ((v9 + v7) < 4)
      {
        v14 = v3 + 1;
      }
      else
      {
        v14 = v3 + 1;
        if (v9 - (int)v3 + v6 - 2 >= v6)
        {
          v15 = 0;
          v11 = v12 & 0xFFFFFFFC;
          v14 = v10 + (v12 & 0xFFFFFFFC);
          do
          {
            v16 = &v8[v13 + v6 + v15];
            *v16 = 0uLL;
            v16[1] = 0uLL;
            v15 += 4;
          }
          while ((v12 & 0xFFFFFFFC) != v15);
          if (v12 == v11)
            goto LABEL_3;
        }
      }
      v17 = v9 - v11;
      do
      {
        v8[v13 + v14] = 0;
        v14 = ++v11 + v10;
        --v17;
      }
      while (v6 != v17);
LABEL_3:
      ++v3;
      ++v6;
      --v7;
    }
    while (v3 != v2);
  }
  sub_19C210DBC(a1, (uint64_t)v18);
  sub_19C1CE5B4((uint64_t)v22, (uint64_t)v18, (uint64_t)&__p);
  if ((void **)(a1 + 256) != &__p)
    sub_19C11EAD0((_QWORD *)(a1 + 256), (char *)__p, v20, (v20 - (_BYTE *)__p) >> 3);
  *(_DWORD *)(a1 + 280) = v21;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  sub_19C1CEB00((uint64_t)v22, &__p);
  sub_19C1D43B4((uint64_t)&__p, a1 + 256);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v22[0])
  {
    v22[1] = v22[0];
    operator delete(v22[0]);
  }
}

void sub_19C210AF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  if (a9)
    operator delete(a9);
  if (a17)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_19C210B58(int32x2_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int32 v14;
  int v15;
  int v16;
  _QWORD *v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  _OWORD *v25;
  unsigned int v26;
  void *__p;
  char *v28;
  int32x2_t v29;

  v2 = a1[15].u32[0];
  sub_19C176BE8(v2, v2, (uint64_t)&__p);
  if ((int)v2 >= 1)
  {
    v3 = v29.i32[1] + 1;
    v4 = __p;
    if ((_DWORD)v2 == 1)
    {
      v5 = 0;
LABEL_7:
      v8 = v2 - v5;
      v9 = v5 << 32;
      do
      {
        v4[(v9 >> 32) * v3] = 0x3FF0000000000000;
        v9 += 0x100000000;
        --v8;
      }
      while (v8);
      goto LABEL_9;
    }
    v6 = 0;
    v5 = v2 & 0xFFFFFFFE;
    v7 = v5;
    do
    {
      v4[(v6 >> 32) * v3] = 0x3FF0000000000000;
      v4[((v6 >> 32) | 1) * v3] = 0x3FF0000000000000;
      v6 += 0x200000000;
      v7 -= 2;
    }
    while (v7);
    if (v5 != v2)
      goto LABEL_7;
  }
LABEL_9:
  if (&a1[28] != (int32x2_t *)&__p)
    sub_19C11EAD0(&a1[28], (char *)__p, v28, (v28 - (_BYTE *)__p) >> 3);
  v10 = (char *)__p;
  a1[31] = v29;
  if (v10)
  {
    v28 = v10;
    operator delete(v10);
  }
  sub_19C1CE734((uint64_t)&a1[24], (uint64_t)&__p);
  v11 = a1[27].u32[0];
  if ((int)v11 >= 1)
  {
    v12 = 0;
    v13 = a1[27].i32[1];
    v14 = v29.i32[1];
    v15 = 1;
    v16 = -1;
    v17 = __p;
    do
    {
      if (v13 <= v15)
        v18 = v15;
      else
        v18 = v13;
      v19 = v12 + 1;
      if ((int)v12 + 1 >= v13)
        goto LABEL_15;
      v20 = 0;
      v21 = v18 + v16;
      v22 = (int)v12 * (uint64_t)v14;
      if ((v18 + v16) < 4)
      {
        v23 = v12 + 1;
      }
      else
      {
        v23 = v12 + 1;
        if (v18 - (int)v12 + v15 - 2 >= v15)
        {
          v24 = 0;
          v20 = v21 & 0xFFFFFFFC;
          v23 = v19 + (v21 & 0xFFFFFFFC);
          do
          {
            v25 = &v17[v22 + v15 + v24];
            *v25 = 0uLL;
            v25[1] = 0uLL;
            v24 += 4;
          }
          while ((v21 & 0xFFFFFFFC) != v24);
          if (v21 == v20)
            goto LABEL_15;
        }
      }
      v26 = v18 - v20;
      do
      {
        v17[v22 + v23] = 0;
        v23 = ++v20 + v19;
        --v26;
      }
      while (v15 != v26);
LABEL_15:
      ++v12;
      ++v15;
      --v16;
    }
    while (v12 != v11);
  }
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
  sub_19C1CEB00((uint64_t)&a1[24], &__p);
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
}

void sub_19C210D98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C210DBC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  signed int v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  char *v28;

  v4 = *(_DWORD *)(a1 + 312);
  v5 = 8 * v4;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * v4);
    bzero(v6, 8 * v4);
    v7 = 0;
    v8 = &v6[v5];
    v9 = *(_QWORD *)(a1 + 288);
    if (v4 < 4)
      goto LABEL_46;
    if ((unint64_t)&v6[-v9] < 0x20)
      goto LABEL_46;
    v10 = 0;
    v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    v11 = v7;
    do
    {
      v12 = *(_OWORD *)(v9 + v10 + 16);
      v13 = &v6[v10];
      *(_OWORD *)v13 = *(_OWORD *)(v9 + v10);
      *((_OWORD *)v13 + 1) = v12;
      v10 += 32;
      v11 -= 4;
    }
    while (v11);
    if (v7 != v4)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v6[8 * v7] = *(_QWORD *)(v9 + 8 * v7);
        ++v7;
      }
      while (v4 != v7);
    }
    v14 = *(int *)(a1 + 152);
    if ((_DWORD)v14)
      goto LABEL_10;
LABEL_19:
    v15 = 0;
    goto LABEL_20;
  }
  v8 = 0;
  v6 = 0;
  v14 = *(int *)(a1 + 152);
  if (!(_DWORD)v14)
    goto LABEL_19;
LABEL_10:
  if ((v14 & 0x80000000) != 0)
    sub_19C07DA0C();
  v15 = (char *)operator new(8 * v14);
  bzero(v15, 8 * v14);
  v16 = 0;
  v17 = *(_QWORD *)(a1 + 128);
  if (v14 < 4)
    goto LABEL_47;
  if ((unint64_t)&v15[-v17] < 0x20)
    goto LABEL_47;
  v18 = 0;
  v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  v19 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v20 = *(_OWORD *)(v17 + v18 + 16);
    v21 = &v15[v18];
    *(_OWORD *)v21 = *(_OWORD *)(v17 + v18);
    *((_OWORD *)v21 + 1) = v20;
    v18 += 32;
    v19 -= 4;
  }
  while (v19);
  if (v16 != v14)
  {
LABEL_47:
    do
    {
      *(_QWORD *)&v15[8 * v16] = *(_QWORD *)(v17 + 8 * v16);
      ++v16;
    }
    while (v14 != v16);
  }
LABEL_20:
  vDSP_vsubD((const double *)v15, 1, (const double *)v6, 1, (double *)v6, 1, v4);
  if (v8 != v6)
  {
    if (v8 - v6 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v8 - v6);
    memcpy(v22, v6, v8 - v6);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    if (!v4)
    {
      *(_DWORD *)(a2 + 24) = 0;
      operator delete(v22);
      if (!v15)
        goto LABEL_35;
LABEL_34:
      operator delete(v15);
      goto LABEL_35;
    }
LABEL_26:
    if (v4 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(8 * v4);
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 16) = &v23[8 * v4];
    bzero(v23, 8 * v4);
    *(_QWORD *)(a2 + 8) = &v23[v5];
    *(_DWORD *)(a2 + 24) = v4;
    if (v4 >= 4)
    {
      v25 = 0;
      v24 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      v26 = v24;
      do
      {
        v27 = *(_OWORD *)&v22[v25 + 16];
        v28 = &v23[v25];
        *(_OWORD *)v28 = *(_OWORD *)&v22[v25];
        *((_OWORD *)v28 + 1) = v27;
        v25 += 32;
        v26 -= 4;
      }
      while (v26);
      if (v24 == v4)
      {
LABEL_33:
        operator delete(v22);
        if (!v15)
          goto LABEL_35;
        goto LABEL_34;
      }
    }
    else
    {
      v24 = 0;
    }
    do
    {
      *(_QWORD *)&v23[8 * v24] = *(_QWORD *)&v22[8 * v24];
      ++v24;
    }
    while (v4 != v24);
    goto LABEL_33;
  }
  v22 = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v4)
    goto LABEL_26;
  *(_DWORD *)(a2 + 24) = 0;
  if (v15)
    goto LABEL_34;
LABEL_35:
  if (v6)
    operator delete(v6);
}

void sub_19C2110E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  void *v18;
  void *v19;

  if (v19)
  {
    operator delete(v19);
    if (!v18)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v18)
  {
    goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_19C211144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a9)
    operator delete(a9);
  sub_19C07AF7C(a1);
}

void sub_19C211158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13)
    JUMPOUT(0x19C211168);
  JUMPOUT(0x19C21116CLL);
}

void sub_19C211174(uint64_t a1, uint64_t a2)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _BYTE *v20;
  _BYTE *v21;
  int64_t v22;
  char *v23;
  char *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double *v29;
  long double *v30;
  unint64_t v31;
  long double v32;
  __int128 *v33;
  unint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  long double v38;
  void *v39;
  char *v40;
  int v41;
  void *v42;
  void *v43;
  char *v44;
  int v45;
  void *v46[4];
  void *__p[4];
  _QWORD v48[2];
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;

  v55 = a2;
  sub_19C1CF858((uint64_t)v48, *(_DWORD *)(a2 + 8) + 1);
  sub_19C17D694((uint64_t)v46, *(_DWORD *)(a2 + 8) + 1);
  v3 = (char *)v46[0];
  *(_QWORD *)v46[0] = 0xC01E000000000000;
  v4 = (char *)__p[0];
  *(_QWORD *)__p[0] = 0x401E000000000000;
  v5 = *(unsigned int *)(a2 + 56);
  if ((int)v5 >= 1)
  {
    v6 = 0;
    v7 = 1;
    if (v5 < 6)
      goto LABEL_7;
    if ((unint64_t)(v4 - v3) < 0x20)
      goto LABEL_7;
    v6 = v5 & 0x7FFFFFFC;
    v7 = v5 & 0xFFFFFFFC | 1;
    v8 = v4 + 24;
    v9 = v3 + 24;
    __asm
    {
      FMOV            V0.2D, #-10.0
      FMOV            V1.2D, #10.0
    }
    v16 = v5 & 0xFFFFFFFC;
    do
    {
      *(v9 - 1) = _Q0;
      *v9 = _Q0;
      *(v8 - 1) = _Q1;
      *v8 = _Q1;
      v8 += 2;
      v9 += 2;
      v16 -= 4;
    }
    while (v16);
    if (v6 != v5)
    {
LABEL_7:
      v17 = v5 - v6;
      v18 = &v4[8 * v7];
      v19 = &v3[8 * v7];
      do
      {
        *(_QWORD *)v19 = 0xC024000000000000;
        v19 += 8;
        *(_QWORD *)v18 = 0x4024000000000000;
        v18 += 8;
        --v17;
      }
      while (v17);
    }
  }
  sub_19C1D0468((uint64_t)v48, (uint64_t *)v46);
  sub_19C1D0594((uint64_t)v48, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v46[0])
  {
    v46[1] = v46[0];
    operator delete(v46[0]);
  }
  v21 = *(_BYTE **)(a2 + 64);
  v20 = *(_BYTE **)(a2 + 72);
  v42 = 0;
  v43 = 0;
  v44 = 0;
  v22 = v20 - v21;
  if (v20 != v21)
  {
    if (v22 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(v20 - v21);
    v24 = &v23[8 * (v22 >> 3)];
    v42 = v23;
    v44 = v24;
    memcpy(v23, v21, v22);
    v43 = v24;
  }
  v45 = *(_DWORD *)(a2 + 88);
  sub_19C211504((uint64_t)v48, (uint64_t)&v55, (uint64_t *)&v42, (uint64_t)&v39);
  if ((void **)(a2 + 64) != &v39)
    sub_19C11EAD0((_QWORD *)(a2 + 64), (char *)v39, v40, (v40 - (_BYTE *)v39) >> 3);
  *(_DWORD *)(a2 + 88) = v41;
  v25 = (char *)v39;
  *(long double *)(a2 + 24) = exp(*(double *)v39 + *(double *)v39);
  v26 = *(_QWORD *)(a2 + 8);
  if (v26)
  {
    v27 = *(_QWORD *)(a2 + 32);
    if (v26 < 4 || (unint64_t)(v27 - (_QWORD)v25 - 8) < 0x10)
    {
      v28 = 0;
LABEL_22:
      v29 = (double *)&v25[8 * v28 + 8];
      v30 = (long double *)(v27 + 8 * v28);
      v31 = v26 - v28;
      do
      {
        v32 = *v29++;
        *v30++ = exp(v32);
        --v31;
      }
      while (v31);
      goto LABEL_24;
    }
    v28 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v33 = (__int128 *)(v25 + 8);
    v34 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v35 = *(_OWORD **)(a2 + 32);
    do
    {
      v36 = *v33++;
      v38 = exp(*((long double *)&v36 + 1));
      *(double *)&v37 = exp(*(long double *)&v36);
      *((long double *)&v37 + 1) = v38;
      *v35++ = v37;
      v34 -= 2;
    }
    while (v34);
    if (v26 != v28)
      goto LABEL_22;
  }
LABEL_24:
  sub_19C2100F0(a2, 1, 1);
  if (v39)
  {
    v40 = (char *)v39;
    operator delete(v39);
  }
  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  v48[0] = &unk_1E3D21150;
  sub_19C23AA14(v48[1]);
  if (v53)
  {
    v54 = v53;
    operator delete(v53);
  }
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }
}

void sub_19C21147C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  if (__p)
  {
    operator delete(__p);
    sub_19C1CF8E8(&a29);
    _Unwind_Resume(a1);
  }
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C2114E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  sub_19C176E10((uint64_t)&a21);
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C211504(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C211A54;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C21194C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C211758);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

double sub_19C211A54(uint64_t **a1, uint64_t *a2, int **a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  double v33;
  void *__p;
  void *v35;
  char v36;
  _QWORD v37[3];
  signed int v38;
  char v39;
  void *v40;
  char *v41;
  char *v42;
  int v43;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v41 = 0;
  v42 = 0;
  v40 = 0;
  v43 = 0;
  v33 = 0.0;
  __p = 0;
  v35 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  v40 = v8;
  v41 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v42 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v43 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C211D48(a3, (uint64_t)&v40, 0, (uint64_t)&v33);
    v17 = v33;
    if (v36)
    {
      v31 = __p;
      if (__p)
      {
        v35 = __p;
        goto LABEL_31;
      }
    }
  }
  else
  {
    LOBYTE(v37[0]) = 0;
    v39 = 0;
    sub_19C211D48(a3, (uint64_t)&v40, 1, (uint64_t)&v33);
    v17 = v33;
    sub_19C1D66F8((uint64_t)v37, (uint64_t)&__p);
    if (v36 && __p)
    {
      v35 = __p;
      operator delete(__p);
    }
    v18 = v38;
    if (v38)
    {
      v19 = 0;
      v20 = v37[0];
      v21 = *a2;
      if (v38 < 4)
        goto LABEL_23;
      if ((unint64_t)(v21 - v37[0]) < 0x20)
        goto LABEL_23;
      v19 = v38 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = (__int128 *)(v37[0] + 16);
      v23 = (_OWORD *)(v21 + 16);
      v24 = v19;
      do
      {
        v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 4;
      }
      while (v24);
      if (v19 != v18)
      {
LABEL_23:
        v26 = v18 - v19;
        v27 = 8 * v19;
        v28 = (_QWORD *)(v21 + 8 * v19);
        v29 = (uint64_t *)(v20 + v27);
        do
        {
          v30 = *v29++;
          *v28++ = v30;
          --v26;
        }
        while (v26);
      }
    }
    if (v39)
    {
      v31 = (void *)v37[0];
      if (v37[0])
      {
        v37[1] = v37[0];
LABEL_31:
        operator delete(v31);
      }
    }
  }
  if (v40)
  {
    v41 = (char *)v40;
    operator delete(v40);
  }
  return v17;
}

void sub_19C211CD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,void *__p,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C211D2C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

_QWORD *sub_19C211D48@<X0>(int **a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char *v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  double *v11;
  long double *v12;
  unint64_t v13;
  long double v14;
  double v15;
  double v16;
  void *v17;
  int64_t v18;
  char *v19;
  char *v20;
  __int128 *v22;
  unint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  long double v27;
  _BYTE *v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  long double v33;
  char *v34;
  _QWORD v35[3];
  int v36;

  sub_19C212EE0((uint64_t)&v31, *a1);
  if (v35 != (_QWORD *)a2)
    sub_19C11EAD0(v35, *(char **)a2, *(char **)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  v36 = *(_DWORD *)(a2 + 24);
  v7 = *(char **)a2;
  v33 = exp(*(double *)v7 + *(double *)v7);
  v8 = v32;
  if (v32)
  {
    v9 = v34;
    if (v32 < 4 || (unint64_t)(v34 - v7 - 8) < 0x10)
    {
      v10 = 0;
LABEL_7:
      v11 = (double *)&v7[8 * v10 + 8];
      v12 = (long double *)&v9[8 * v10];
      v13 = v8 - v10;
      do
      {
        v14 = *v11++;
        *v12++ = exp(v14);
        --v13;
      }
      while (v13);
      goto LABEL_9;
    }
    v10 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v22 = (__int128 *)(v7 + 8);
    v23 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v24 = v34;
    do
    {
      v25 = *v22++;
      v27 = exp(*((long double *)&v25 + 1));
      *(double *)&v26 = exp(*(long double *)&v25);
      *((long double *)&v26 + 1) = v27;
      *(_OWORD *)v24 = v26;
      v24 += 16;
      v23 -= 2;
    }
    while (v23);
    if (v8 != v10)
      goto LABEL_7;
  }
LABEL_9:
  sub_19C2100F0((uint64_t)&v31, 0, a3);
  v15 = sub_19C211FC0((uint64_t)&v31);
  v16 = v15;
  if ((a3 & 1) != 0)
  {
    sub_19C2121EC((uint64_t)&v31, (uint64_t)&v28);
    *(_QWORD *)(a4 + 8) = 0;
    *(double *)a4 = v16;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0;
    v17 = v28;
    v18 = v29 - v28;
    if (v29 != v28)
    {
      if (v18 < 0)
        sub_19C07DA0C();
      v19 = (char *)operator new(v29 - v28);
      *(_QWORD *)(a4 + 8) = v19;
      v20 = &v19[8 * (v18 >> 3)];
      *(_QWORD *)(a4 + 24) = v20;
      memcpy(v19, v17, v18);
      *(_QWORD *)(a4 + 16) = v20;
    }
    *(_DWORD *)(a4 + 32) = v30;
    *(_BYTE *)(a4 + 40) = 1;
    if (v17)
    {
      v29 = v17;
      operator delete(v17);
    }
  }
  else
  {
    *(double *)a4 = v15;
    *(_BYTE *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 40) = 0;
  }
  return sub_19C1EC3CC(&v31);
}

void sub_19C211F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C211F4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  void **v19;
  void *v21;
  void *v22;

  v21 = *v19;
  if (*v19)
  {
    *(_QWORD *)(v18 + 16) = v21;
    operator delete(v21);
    v22 = __p;
    if (!__p)
    {
LABEL_3:
      sub_19C1EC3CC(&a18);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v22 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v22);
  sub_19C1EC3CC(&a18);
  _Unwind_Resume(a1);
}

void sub_19C211F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C211FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_19C211FC0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  double *v8;
  void *__p;
  char *v11;
  char *v12;
  int v13;
  void *__C[3];
  vDSP_Length v15;
  double *__A;
  double *v17;
  uint64_t v18;
  vDSP_Length __N;

  sub_19C210DBC(a1, (uint64_t)&__A);
  __C[0] = 0;
  vDSP_dotprD(__A, 1, *(const double **)(a1 + 256), 1, (double *)__C, (int)__N);
  v2 = __C[0];
  if (__A)
  {
    v17 = __A;
    operator delete(__A);
  }
  v3 = *(int *)(a1 + 220);
  if ((int)v3 >= *(_DWORD *)(a1 + 216))
    v4 = *(_DWORD *)(a1 + 216);
  else
    v4 = *(_DWORD *)(a1 + 220);
  __A = 0;
  v17 = 0;
  v18 = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = operator new(8 * v4);
    bzero(v5, 8 * v4);
    v6 = 0;
    v7 = *(_QWORD **)(a1 + 192);
    do
    {
      *((_QWORD *)v5 + v6++) = *v7;
      v7 += v3 + 1;
    }
    while (v4 != v6);
    __p = operator new(8 * v4);
    v11 = (char *)__p + 8 * v4;
    v12 = v11;
    v13 = v4;
    memcpy(__p, v5, 8 * v4);
  }
  else
  {
    v5 = 0;
    v11 = 0;
    v12 = 0;
    __p = 0;
    v13 = 0;
  }
  sub_19C1D650C((uint64_t)&__p, (uint64_t)__C);
  __A = 0;
  vDSP_sveD((const double *)__C[0], 1, (double *)&__A, (int)v15);
  v8 = __A;
  if (__C[0])
  {
    __C[1] = __C[0];
    operator delete(__C[0]);
  }
  if (__p)
  {
    v11 = (char *)__p;
    operator delete(__p);
  }
  if (v5)
    operator delete(v5);
  return (double)*(int *)(a1 + 120) * -0.918938533 - (*(double *)&v8 - *(double *)&v2 * -0.5);
}

void sub_19C212164(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v20;

  if (__p)
  {
    operator delete(__p);
    v20 = a9;
    if (!a9)
    {
LABEL_3:
      if (!v18)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(v18);
      goto LABEL_8;
    }
  }
  else
  {
    v20 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v20);
  if (!v18)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C2121D0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C2121EC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  double *v5;
  double *v6;
  _BYTE *v7;
  _BYTE *v8;
  int64_t v9;
  char *v10;
  char *v11;
  void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  vDSP_Length v18;
  int64_t v19;
  char *v20;
  char *v21;
  char *v22;
  unint64_t i;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  int v28;
  char *v29;
  unint64_t j;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  __int128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  const void *v68;
  int64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  double *v73;
  const void *v74;
  int64_t v75;
  char *v76;
  const double *v77;
  int v78;
  int64_t v79;
  char *v80;
  char *v81;
  const double *v82;
  int v83;
  uint64_t v84;
  char *v85;
  int64_t v86;
  char *v87;
  __int128 *v88;
  _OWORD *v89;
  unint64_t v90;
  __int128 v91;
  __int128 *v92;
  _OWORD *v93;
  unint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  vDSP_Length v98;
  void *v101;
  char *v102;
  char *v103;
  int v104;
  void *v105;
  void *v106;
  char *v107;
  int v108;
  void *__p;
  _BYTE *v110;
  _BYTE *v111;
  unint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  unint64_t v116;
  _BYTE *v117;
  char *v118;
  char *v119;
  unint64_t v120;
  double *v121;
  double *v122;
  double *v123;
  unint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  unint64_t v128;

  v121 = 0;
  v122 = 0;
  v123 = 0;
  v3 = *(_BYTE **)(a1 + 224);
  v2 = *(_BYTE **)(a1 + 232);
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (double *)operator new(v2 - v3);
    v6 = &v5[v4 >> 3];
    v121 = v5;
    v123 = v6;
    memcpy(v5, v3, v4);
    v122 = v6;
  }
  v7 = *(_BYTE **)(a1 + 256);
  v124 = *(_QWORD *)(a1 + 248);
  v106 = 0;
  v107 = 0;
  v105 = 0;
  v8 = *(_BYTE **)(a1 + 264);
  v9 = v8 - v7;
  if (v8 != v7)
  {
    if (v9 < 0)
      sub_19C07DA0C();
    v10 = (char *)operator new(v8 - v7);
    v11 = &v10[8 * (v9 >> 3)];
    v105 = v10;
    v107 = v11;
    memcpy(v10, v7, v9);
    v106 = v11;
  }
  v108 = *(_DWORD *)(a1 + 280);
  sub_19C1CE998(a1 + 256, (uint64_t)&v101);
  sub_19C1D65EC((uint64_t)&v105, (uint64_t)&v101, (uint64_t)&__p);
  v113 = 0;
  v114 = 0;
  v115 = 0;
  v12 = __p;
  v13 = v110 - (_BYTE *)__p;
  if (v110 == __p)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v110 - (_BYTE *)__p);
    v15 = &v14[8 * (v13 >> 3)];
    v113 = v14;
    v115 = v15;
    memcpy(v14, v12, v13);
    v114 = v15;
  }
  v16 = v112;
  v116 = v112;
  v17 = HIDWORD(v112);
  v18 = HIDWORD(v112) * (int)v112;
  vDSP_vsubD(v121, 1, (const double *)v14, 1, (double *)v14, 1, v18);
  v117 = 0;
  v118 = 0;
  v119 = 0;
  v19 = v15 - v14;
  if (!v19)
  {
    v20 = 0;
    v120 = v16;
    v126 = 0;
    v127 = 0;
    v125 = 0;
    if ((_DWORD)v18)
      goto LABEL_14;
LABEL_18:
    v22 = 0;
    v21 = 0;
    v128 = __PAIR64__(v17, v16);
    goto LABEL_23;
  }
  if (v19 < 0)
    sub_19C07DA0C();
  v20 = (char *)operator new(v19);
  v117 = v20;
  v119 = &v20[8 * (v19 >> 3)];
  memcpy(v20, v14, v19);
  v118 = &v20[8 * (v19 >> 3)];
  v120 = v16;
  v126 = 0;
  v127 = 0;
  v125 = 0;
  if (!(_DWORD)v18)
    goto LABEL_18;
LABEL_14:
  if ((v18 & 0x80000000) != 0)
    sub_19C07DA0C();
  v21 = (char *)operator new(8 * v18);
  v125 = v21;
  v127 = &v21[8 * v18];
  bzero(v21, 8 * v18);
  v22 = &v21[8 * v18];
  v128 = __PAIR64__(v17, v16);
  if (v18 < 4)
  {
    for (i = 0; i != v18; ++i)
LABEL_22:
      *(_QWORD *)&v21[8 * i] = *(_QWORD *)&v20[8 * i];
    goto LABEL_23;
  }
  v24 = 0;
  i = v18 & 0xFFFFFFFFFFFFFFFCLL;
  v25 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v26 = *(_OWORD *)&v20[v24 + 16];
    v27 = &v21[v24];
    *(_OWORD *)v27 = *(_OWORD *)&v20[v24];
    *((_OWORD *)v27 + 1) = v26;
    v24 += 32;
    v25 -= 4;
  }
  while (v25);
  if (i != v18)
    goto LABEL_22;
LABEL_23:
  sub_19C11EAD0(&v121, v21, v22, (v22 - v21) >> 3);
  v124 = v128;
  if (v21)
  {
    v126 = v21;
    operator delete(v21);
  }
  if (v20)
  {
    v118 = v20;
    operator delete(v20);
  }
  if (v14)
  {
    v114 = v14;
    operator delete(v14);
  }
  if (__p)
  {
    v110 = __p;
    operator delete(__p);
  }
  if (v101)
  {
    v102 = (char *)v101;
    operator delete(v101);
  }
  if (v105)
  {
    v106 = v105;
    operator delete(v105);
  }
  v28 = *(_DWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v98 = v28 + 1;
  if (v28 == -1)
  {
    *(_DWORD *)(a2 + 24) = 0;
    v96 = *(int *)(a1 + 120);
    if (!(_DWORD)v96)
      goto LABEL_125;
    goto LABEL_40;
  }
  if (v28 <= -2)
    sub_19C07DA0C();
  v29 = (char *)operator new(8 * v98);
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = &v29[8 * v98];
  *(_QWORD *)(a2 + 16) = &v29[8 * v28 + 8];
  *(_DWORD *)(a2 + 24) = v28 + 1;
  bzero(v29, 8 * v98);
  v96 = *(int *)(a1 + 120);
  if ((_DWORD)v96)
  {
LABEL_40:
    v97 = 0;
    for (j = 0; j != v96; ++j)
    {
      v31 = 0;
      v32 = 0;
      do
      {
        v33 = *(_QWORD *)(a1 + 96);
        v34 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v34)
        {
          v35 = 0;
          v110 = 0;
          v111 = 0;
          __p = 0;
          LODWORD(v112) = 0;
LABEL_72:
          v52 = 0;
          v102 = 0;
          v103 = 0;
          v101 = 0;
          v104 = 0;
          goto LABEL_76;
        }
        if ((v34 & 0x80000000) != 0)
          sub_19C07DA0C();
        v35 = operator new(8 * (int)v34);
        bzero(v35, 8 * (int)v34);
        if (v34 < 8 || (unint64_t)v35 - v33 - 8 * j * (int)v34 < 0x20)
        {
          v36 = 0;
LABEL_49:
          v37 = (int)v34 - v36;
          v38 = 8 * v36;
          v39 = (_QWORD *)v35 + v36;
          v40 = (uint64_t *)(v33 + v38 + v97 * (int)v34);
          do
          {
            v41 = *v40++;
            *v39++ = v41;
            --v37;
          }
          while (v37);
          goto LABEL_51;
        }
        v36 = (int)v34 & 0xFFFFFFFFFFFFFFFCLL;
        v88 = (__int128 *)(v33 + v97 * (int)v34 + 16);
        v89 = v35 + 1;
        v90 = v36;
        do
        {
          v91 = *v88;
          *(v89 - 1) = *(v88 - 1);
          *v89 = v91;
          v88 += 2;
          v89 += 2;
          v90 -= 4;
        }
        while (v90);
        if (v36 != (int)v34)
          goto LABEL_49;
LABEL_51:
        __p = 0;
        v110 = 0;
        v111 = 0;
        LODWORD(v112) = v34;
        v42 = operator new(8 * (int)v34);
        bzero(v42, 8 * (int)v34);
        __p = v42;
        v110 = (char *)v42 + 8 * (int)v34;
        v111 = v110;
        if ((v34 - 6) >= 0x7FFFFFFB)
        {
          v43 = 0;
LABEL_58:
          v48 = v34 - v43;
          v49 = v43 << 32;
          do
          {
            *(_QWORD *)((char *)v42 + (v49 >> 29)) = *(_QWORD *)((char *)v35 + (v49 >> 29));
            v49 += 0x100000000;
            --v48;
          }
          while (v48);
          goto LABEL_60;
        }
        v43 = v34 & 0xFFFFFFFC;
        v44 = v42 + 1;
        v45 = v35 + 1;
        v46 = v43;
        do
        {
          v47 = *v45;
          *(v44 - 1) = *(v45 - 1);
          *v44 = v47;
          v44 += 2;
          v45 += 2;
          v46 -= 4;
        }
        while (v46);
        if (v43 != v34)
          goto LABEL_58;
LABEL_60:
        v50 = *(_QWORD *)(a1 + 96);
        v51 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v51)
          goto LABEL_72;
        if ((v51 & 0x80000000) != 0)
          sub_19C07DA0C();
        v52 = operator new(8 * (int)v51);
        bzero(v52, 8 * (int)v51);
        if (v51 < 8 || (unint64_t)v52 - v50 - 8 * v32 * (int)v51 < 0x20)
        {
          v53 = 0;
LABEL_65:
          v54 = (int)v51 - v53;
          v55 = 8 * v53;
          v56 = (_QWORD *)v52 + v53;
          v57 = (uint64_t *)(v50 + v55 + v31 * (int)v51);
          do
          {
            v58 = *v57++;
            *v56++ = v58;
            --v54;
          }
          while (v54);
          goto LABEL_67;
        }
        v53 = (int)v51 & 0xFFFFFFFFFFFFFFFCLL;
        v92 = (__int128 *)(v50 + v31 * (int)v51 + 16);
        v93 = v52 + 1;
        v94 = v53;
        do
        {
          v95 = *v92;
          *(v93 - 1) = *(v92 - 1);
          *v93 = v95;
          v92 += 2;
          v93 += 2;
          v94 -= 4;
        }
        while (v94);
        if (v53 != (int)v51)
          goto LABEL_65;
LABEL_67:
        v101 = 0;
        v102 = 0;
        v103 = 0;
        v104 = v51;
        v59 = (char *)operator new(8 * (int)v51);
        bzero(v59, 8 * (int)v51);
        v101 = v59;
        v102 = &v59[8 * (int)v51];
        v103 = v102;
        if ((v51 - 6) >= 0x7FFFFFFB)
        {
          v61 = 0;
LABEL_74:
          v64 = v51 - v61;
          v65 = v61 << 32;
          do
          {
            *(_QWORD *)&v59[v65 >> 29] = *(_QWORD *)((char *)v52 + (v65 >> 29));
            v65 += 0x100000000;
            --v64;
          }
          while (v64);
          goto LABEL_76;
        }
        v60 = 0;
        v61 = v51 & 0xFFFFFFFC;
        do
        {
          v62 = v52[v60 / 0x10 + 1];
          v63 = &v59[v60];
          *(_OWORD *)v63 = v52[v60 / 0x10];
          *((_OWORD *)v63 + 1) = v62;
          v60 += 32;
        }
        while (((8 * v51) & 0x7FFFFFFE0) != v60);
        if (v61 != v51)
          goto LABEL_74;
LABEL_76:
        sub_19C213410(a1 + 8, (uint64_t)&__p, (const double **)&v101, (uint64_t)&v117);
        if (v101)
        {
          v102 = (char *)v101;
          operator delete(v101);
        }
        if (v52)
          operator delete(v52);
        if (__p)
        {
          v110 = __p;
          operator delete(__p);
        }
        if (v35)
          operator delete(v35);
        if (j == v32)
        {
          v66 = SHIDWORD(v124);
          v67 = v121;
          v68 = v117;
          v69 = v118 - v117;
          if (v118 == v117)
          {
            v71 = 0;
            v70 = 0;
          }
          else
          {
            if (v69 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v71 = &v70[8 * (v69 >> 3)];
            memcpy(v70, v68, v69);
          }
          v77 = &v67[j + j * v66];
          v78 = v120;
          vDSP_vsmulD((const double *)v70, 1, v77, (double *)v70, 1, (int)v120);
          v79 = v71 - v70;
          if (v79)
          {
            if (v79 < 0)
              sub_19C07DA0C();
            v80 = (char *)operator new(v79);
            v81 = &v80[8 * (v79 >> 3)];
            memcpy(v80, v70, v79);
          }
          else
          {
            v81 = 0;
            v80 = 0;
          }
          __p = (void *)0x3FE0000000000000;
          vDSP_vsmulD((const double *)v80, 1, (const double *)&__p, (double *)v80, 1, v78);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v86 = v81 - v80;
          if (v81 == v80)
          {
            v87 = 0;
          }
          else
          {
            if (v86 < 0)
              sub_19C07DA0C();
            v87 = (char *)operator new(v81 - v80);
            v125 = v87;
            v127 = &v87[8 * (v86 >> 3)];
            memcpy(v87, v80, v86);
            v126 = &v87[8 * (v86 >> 3)];
          }
          LODWORD(v128) = v78;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v87, 1, *(double **)a2, 1, v98);
          if (v87)
            operator delete(v87);
          if (v80)
            operator delete(v80);
          if (v70)
            goto LABEL_114;
        }
        else
        {
          v72 = SHIDWORD(v124);
          v73 = v121;
          v74 = v117;
          v75 = v118 - v117;
          if (v118 == v117)
          {
            v76 = 0;
            v70 = 0;
          }
          else
          {
            if (v75 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v76 = &v70[8 * (v75 >> 3)];
            memcpy(v70, v74, v75);
          }
          v82 = &v73[v32 + j * v72];
          v83 = v120;
          vDSP_vsmulD((const double *)v70, 1, v82, (double *)v70, 1, (int)v120);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v84 = v76 - v70;
          if (v76 == v70)
          {
            v85 = 0;
          }
          else
          {
            if (v84 < 0)
              sub_19C07DA0C();
            v85 = (char *)operator new(v76 - v70);
            v125 = v85;
            v127 = &v85[8 * (v84 >> 3)];
            memcpy(v85, v70, v76 - v70);
            v126 = &v85[8 * (v84 >> 3)];
          }
          LODWORD(v128) = v83;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v85, 1, *(double **)a2, 1, v98);
          if (v85)
            operator delete(v85);
          if (v70)
LABEL_114:
            operator delete(v70);
        }
        if (v117)
        {
          v118 = v117;
          operator delete(v117);
        }
        ++v32;
        v31 += 8;
      }
      while (v32 <= j);
      v97 += 8;
    }
  }
LABEL_125:
  if (v121)
  {
    v122 = v121;
    operator delete(v121);
  }
}

void sub_19C212C38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v15;

  v15 = *(void **)a14;
  if (*(_QWORD *)a14)
  {
    *(_QWORD *)(a14 + 8) = v15;
    operator delete(v15);
  }
  sub_19C07AF7C(a1);
}

void sub_19C212C5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37)
{
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v42;
  void *v43;
  void *v44;

  if (v39)
    operator delete(v39);
  if (v38)
  {
    *(_QWORD *)(v40 - 176) = v38;
    operator delete(v38);
  }
  if (v37)
  {
    *(_QWORD *)(v40 - 208) = v37;
    operator delete(v37);
  }
  if (__p)
  {
    operator delete(__p);
    v42 = a28;
    if (!a28)
    {
LABEL_9:
      v43 = a32;
      if (!a32)
      {
LABEL_14:
        v44 = *(void **)(v40 - 152);
        if (v44)
        {
          *(_QWORD *)(v40 - 144) = v44;
          operator delete(v44);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_13:
      operator delete(v43);
      goto LABEL_14;
    }
  }
  else
  {
    v42 = a28;
    if (!a28)
      goto LABEL_9;
  }
  operator delete(v42);
  v43 = a32;
  if (!a32)
    goto LABEL_14;
  goto LABEL_13;
}

void sub_19C212E90(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37)
{
  uint64_t v37;
  void *v38;
  void *v39;

  if (__p)
  {
    operator delete(__p);
    if (!v38)
    {
LABEL_3:
      v39 = a36;
      if (!a36)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v38)
  {
    goto LABEL_3;
  }
  operator delete(v38);
  v39 = a36;
  if (!a36)
  {
LABEL_4:
    if (v37)
      goto LABEL_12;
    goto LABEL_13;
  }
LABEL_8:
  operator delete(v39);
  if (v37)
LABEL_12:
    JUMPOUT(0x19C212E3CLL);
LABEL_13:
  JUMPOUT(0x19C212E40);
}

uint64_t sub_19C212EE0(uint64_t a1, int *a2)
{
  int v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;
  int v16;
  _BYTE *v17;
  _BYTE *v18;
  int64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  int64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  int64_t v31;
  char *v32;
  char *v33;
  _BYTE *v34;
  _BYTE *v35;
  int64_t v36;
  char *v37;
  char *v38;
  _BYTE *v39;
  _BYTE *v40;
  int64_t v41;
  char *v42;
  char *v43;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  sub_19C2132E8(a1 + 8, (uint64_t)(a2 + 2));
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  v6 = (_BYTE *)*((_QWORD *)a2 + 12);
  v5 = (_BYTE *)*((_QWORD *)a2 + 13);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 96) = v8;
    *(_QWORD *)(a1 + 104) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 112) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 104) = v9;
  }
  v10 = *((_QWORD *)a2 + 15);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 120) = v10;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  v12 = (_BYTE *)*((_QWORD *)a2 + 16);
  v11 = (_BYTE *)*((_QWORD *)a2 + 17);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 128) = v14;
    *(_QWORD *)(a1 + 136) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 144) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 136) = v15;
  }
  v16 = a2[38];
  *(_QWORD *)(a1 + 160) = 0;
  *(_DWORD *)(a1 + 152) = v16;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  v18 = (_BYTE *)*((_QWORD *)a2 + 20);
  v17 = (_BYTE *)*((_QWORD *)a2 + 21);
  v19 = v17 - v18;
  if (v17 != v18)
  {
    if (v19 < 0)
      sub_19C07DA0C();
    v20 = (char *)operator new(v17 - v18);
    *(_QWORD *)(a1 + 160) = v20;
    *(_QWORD *)(a1 + 168) = v20;
    v21 = &v20[8 * (v19 >> 3)];
    *(_QWORD *)(a1 + 176) = v21;
    memcpy(v20, v18, v19);
    *(_QWORD *)(a1 + 168) = v21;
  }
  v22 = *((_QWORD *)a2 + 23);
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 184) = v22;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  v24 = (_BYTE *)*((_QWORD *)a2 + 24);
  v23 = (_BYTE *)*((_QWORD *)a2 + 25);
  v25 = v23 - v24;
  if (v23 != v24)
  {
    if (v25 < 0)
      sub_19C07DA0C();
    v26 = (char *)operator new(v23 - v24);
    *(_QWORD *)(a1 + 192) = v26;
    *(_QWORD *)(a1 + 200) = v26;
    v27 = &v26[8 * (v25 >> 3)];
    *(_QWORD *)(a1 + 208) = v27;
    memcpy(v26, v24, v25);
    *(_QWORD *)(a1 + 200) = v27;
  }
  v28 = *((_QWORD *)a2 + 27);
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 216) = v28;
  *(_QWORD *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 240) = 0;
  v30 = (_BYTE *)*((_QWORD *)a2 + 28);
  v29 = (_BYTE *)*((_QWORD *)a2 + 29);
  v31 = v29 - v30;
  if (v29 != v30)
  {
    if (v31 < 0)
      sub_19C07DA0C();
    v32 = (char *)operator new(v29 - v30);
    *(_QWORD *)(a1 + 224) = v32;
    *(_QWORD *)(a1 + 232) = v32;
    v33 = &v32[8 * (v31 >> 3)];
    *(_QWORD *)(a1 + 240) = v33;
    memcpy(v32, v30, v31);
    *(_QWORD *)(a1 + 232) = v33;
  }
  *(_QWORD *)(a1 + 248) = *((_QWORD *)a2 + 31);
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0;
  v35 = (_BYTE *)*((_QWORD *)a2 + 32);
  v34 = (_BYTE *)*((_QWORD *)a2 + 33);
  v36 = v34 - v35;
  if (v34 != v35)
  {
    if (v36 < 0)
      sub_19C07DA0C();
    v37 = (char *)operator new(v34 - v35);
    *(_QWORD *)(a1 + 256) = v37;
    *(_QWORD *)(a1 + 264) = v37;
    v38 = &v37[8 * (v36 >> 3)];
    *(_QWORD *)(a1 + 272) = v38;
    memcpy(v37, v35, v36);
    *(_QWORD *)(a1 + 264) = v38;
  }
  *(_DWORD *)(a1 + 280) = a2[70];
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 288) = 0;
  v40 = (_BYTE *)*((_QWORD *)a2 + 36);
  v39 = (_BYTE *)*((_QWORD *)a2 + 37);
  v41 = v39 - v40;
  if (v39 != v40)
  {
    if (v41 < 0)
      sub_19C07DA0C();
    v42 = (char *)operator new(v39 - v40);
    *(_QWORD *)(a1 + 288) = v42;
    *(_QWORD *)(a1 + 296) = v42;
    v43 = &v42[8 * (v41 >> 3)];
    *(_QWORD *)(a1 + 304) = v43;
    memcpy(v42, v40, v41);
    *(_QWORD *)(a1 + 296) = v43;
  }
  *(_DWORD *)(a1 + 312) = a2[78];
  return a1;
}

void sub_19C2131B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, _QWORD *a10)
{
  _QWORD *v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  v18 = *v16;
  if (*v16)
  {
    v10[37] = v18;
    operator delete(v18);
    v19 = *a9;
    if (!*a9)
    {
LABEL_3:
      v20 = *v15;
      if (!*v15)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else
  {
    v19 = *a9;
    if (!*a9)
      goto LABEL_3;
  }
  v10[33] = v19;
  operator delete(v19);
  v20 = *v15;
  if (!*v15)
  {
LABEL_4:
    v21 = *v14;
    if (!*v14)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v10[29] = v20;
  operator delete(v20);
  v21 = *v14;
  if (!*v14)
  {
LABEL_5:
    v22 = *v13;
    if (!*v13)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  v10[25] = v21;
  operator delete(v21);
  v22 = *v13;
  if (!*v13)
  {
LABEL_6:
    v23 = *v12;
    if (!*v12)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  v10[21] = v22;
  operator delete(v22);
  v23 = *v12;
  if (!*v12)
  {
LABEL_7:
    v24 = *v11;
    if (!*v11)
      goto LABEL_8;
    goto LABEL_15;
  }
LABEL_14:
  v10[17] = v23;
  operator delete(v23);
  v24 = *v11;
  if (!*v11)
  {
LABEL_8:
    sub_19C1E8600(a10);
    _Unwind_Resume(a1);
  }
LABEL_15:
  v10[13] = v24;
  operator delete(v24);
  sub_19C1E8600(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_19C2132E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v6 = *(_BYTE **)(a2 + 24);
  v5 = *(_BYTE **)(a2 + 32);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 40) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 32) = v9;
  }
  v10 = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v12 = *(_BYTE **)(a2 + 56);
  v11 = *(_BYTE **)(a2 + 64);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 56) = v14;
    *(_QWORD *)(a1 + 64) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 72) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 64) = v15;
  }
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

void sub_19C2133DC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void *v5;
  void *v6;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 64) = v5;
    operator delete(v5);
  }
  v6 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C213410(uint64_t a1@<X0>, uint64_t a2@<X1>, const double **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  double *v9;
  double *v10;
  int v11;
  int v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  const void *v19;
  int64_t v20;
  char *v21;
  char *v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  signed int v27;
  float64x2_t *v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v33;
  _OWORD *f64;
  uint64_t v35;
  float64x2_t *v36;
  double v37;
  unint64_t v38;
  double *v39;
  double *v40;
  double *v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  float64x2_t *v46;
  float64x2_t *v47;
  float64x2_t *v48;
  unint64_t v49;
  float64x2_t v50;
  void *v51;
  void *v52;
  char *v53;
  int v54;
  void *__p[3];
  signed int v56;
  float64x2_t *v57;
  float64x2_t *v58;
  char *v59;
  signed int v60;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_DWORD *)a1;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v57 = 0;
  v58 = 0;
  v59 = 0;
  v12 = v11 + 1;
  if (v11 != -1)
  {
    if (v11 <= -2)
      sub_19C07DA0C();
    v10 = (double *)operator new(8 * v12);
    v8 = (uint64_t)&v10[v11 + 1];
    bzero(v10, 8 * v12);
    v9 = &v10[v12];
  }
  *(_QWORD *)a4 = v10;
  *(_QWORD *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = v8;
  *(_DWORD *)(a4 + 24) = v12;
  v13 = sub_19C20CFD0(a1, a2, (uint64_t)a3);
  v15 = v14;
  v16 = exp(-v13);
  v17 = v13 + 1.0;
  *v10 = v16 * *(double *)(a1 + 16) * (v17 + v15 + v17 + v15);
  v19 = *(const void **)a2;
  v18 = *(_QWORD *)(a2 + 8);
  v20 = v18 - *(_QWORD *)a2;
  if (v18 == *(_QWORD *)a2)
  {
    v22 = 0;
    v21 = 0;
  }
  else
  {
    if (v20 < 0)
      sub_19C07DA0C();
    v21 = (char *)operator new(v18 - *(_QWORD *)a2);
    v22 = &v21[8 * (v20 >> 3)];
    memcpy(v21, v19, v20);
  }
  v23 = *(_DWORD *)(a2 + 24);
  vDSP_vsubD(*a3, 1, (const double *)v21, 1, (double *)v21, 1, v23);
  v51 = 0;
  v52 = 0;
  v53 = 0;
  v24 = v22 - v21;
  if (v22 != v21)
  {
    if (v24 < 0)
      sub_19C07DA0C();
    v25 = (char *)operator new(v22 - v21);
    v26 = &v25[8 * (v24 >> 3)];
    v51 = v25;
    v53 = v26;
    memcpy(v25, v21, v22 - v21);
    v52 = v26;
  }
  v54 = v23;
  sub_19C1EFF00((uint64_t)&v51, (uint64_t)__p);
  v27 = v56;
  v58 = 0;
  v59 = 0;
  v57 = 0;
  if (v56)
  {
    if (v56 < 0)
      sub_19C07DA0C();
    v28 = (float64x2_t *)operator new(8 * v56);
    v57 = v28;
    v59 = (char *)&v28->f64[v27];
    bzero(v28, 8 * v27);
    v29 = 0;
    v58 = (float64x2_t *)((char *)v28 + 8 * v27);
    v60 = v27;
    v30 = __p[0];
    if (v27 < 4)
      goto LABEL_46;
    if ((unint64_t)((char *)v28 - (char *)__p[0]) < 0x20)
      goto LABEL_46;
    v31 = 0;
    v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    v32 = v29;
    do
    {
      v33 = *(_OWORD *)&v30[v31 / 8 + 2];
      f64 = (_OWORD *)v28[v31 / 0x10].f64;
      *f64 = *(_OWORD *)&v30[v31 / 8];
      f64[1] = v33;
      v31 += 32;
      v32 -= 4;
    }
    while (v32);
    if (v29 != v27)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v28->f64[v29] = v30[v29];
        ++v29;
      }
      while (v27 != v29);
    }
  }
  else
  {
    v28 = 0;
    v60 = 0;
    v30 = __p[0];
    if (!__p[0])
      goto LABEL_22;
  }
  __p[1] = v30;
  operator delete(v30);
LABEL_22:
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v21)
    operator delete(v21);
  v35 = *(int *)(a1 + 48);
  if ((_DWORD)v35)
  {
    v36 = *(float64x2_t **)(a1 + 24);
    v37 = v16 * 1.66666667 * (v17 * *(double *)(a1 + 16));
    if (v35 >= 6)
    {
      v38 = 0;
      if ((unint64_t)((char *)(v10 + 1) - (char *)v36) >= 0x20
        && (unint64_t)((char *)(v10 + 1) - (char *)v28) >= 0x20)
      {
        v38 = v35 & 0xFFFFFFFFFFFFFFFCLL;
        v46 = (float64x2_t *)(v10 + 3);
        v47 = v36 + 1;
        v48 = v28 + 1;
        v49 = v35 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          v50 = vdivq_f64(vmulq_n_f64(*v48, v37), vmulq_f64(*v47, *v47));
          v46[-1] = vdivq_f64(vmulq_n_f64(v48[-1], v37), vmulq_f64(v47[-1], v47[-1]));
          *v46 = v50;
          v46 += 2;
          v47 += 2;
          v48 += 2;
          v49 -= 4;
        }
        while (v49);
        if (v38 == v35)
          goto LABEL_39;
      }
    }
    else
    {
      v38 = 0;
    }
    v39 = &v10[v38 + 1];
    v40 = &v28->f64[v38];
    v41 = &v36->f64[v38];
    v42 = v35 - v38;
    do
    {
      v43 = *v41++;
      v44 = v43;
      v45 = *v40++;
      *v39++ = v37 * v45 / (v44 * v44);
      --v42;
    }
    while (v42);
LABEL_39:
    v58 = v28;
    operator delete(v28);
    return;
  }
  if (v28)
    goto LABEL_39;
}

void sub_19C2137EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22)
{
  void *v22;
  void *v23;
  uint64_t v24;

  if (__p)
    operator delete(__p);
  if (v23)
    operator delete(v23);
  *(_QWORD *)(v24 + 8) = v22;
  operator delete(v22);
  _Unwind_Resume(a1);
}

void sub_19C21385C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!a9)
    JUMPOUT(0x19C213848);
  JUMPOUT(0x19C21383CLL);
}

BOOL sub_19C21386C(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v5;
  int v6;
  int v8;
  _BOOL4 v9;
  std::runtime_error *exception;

  if (*(_BYTE *)(a1 + 8))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Early stopping already requested.");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  v3 = *(_DWORD *)(a1 + 12);
  if (v3 == -1)
    return 0;
  v6 = *a2;
  v5 = (uint64_t)(a2 + 2);
  if (v6 == 1 || *(double *)(a1 + 120) < *((double *)a2 + 13) - *(double *)(a1 + 16))
  {
    sub_19C1C9C8C(a1 + 24, v5);
    *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 13);
    *(_DWORD *)(a1 + 128) = 0;
    *(_BYTE *)(a1 + 8) = 0;
    return 0;
  }
  else
  {
    v8 = *(_DWORD *)(a1 + 128);
    *(_DWORD *)(a1 + 128) = v8 + 1;
    v9 = v8 >= v3;
    *(_BYTE *)(a1 + 8) = v9;
    return v9;
  }
}

void sub_19C213954(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char **sub_19C213968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  BOOL v18;
  void *v20;
  _BYTE v21[4];
  _BYTE v22[12];
  _OWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  double v26;
  char *v27[2];
  int v28;
  char *v29[12];
  BOOL (**v30)(uint64_t, _DWORD *);
  char v31;
  int v32;
  BOOL (**v33)(uint64_t, int *);
  char v34;
  uint64_t v35;
  int v36;
  uint64_t *v37[13];
  int v38;

  v6 = *(_DWORD *)(a1 + 56);
  v7 = *(_DWORD *)(a1 + 60);
  v8 = *(_QWORD *)(a1 + 64);
  v21[0] = 0;
  *(_DWORD *)v22 = v7;
  *(_QWORD *)&v22[4] = v8;
  memset(v23, 0, sizeof(v23));
  v24 = v25;
  v25[0] = 0;
  v26 = 0.0;
  v27[0] = 0;
  v25[1] = 0;
  v25[2] = &v26;
  v28 = 0;
  v31 = 0;
  v30 = (BOOL (**)(uint64_t, _DWORD *))&unk_1E3D21888;
  v32 = v6;
  v34 = 0;
  v36 = HIDWORD(v8);
  v35 = *(_QWORD *)v22;
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D21960;
  sub_19C1C5D14(v37, (uint64_t)v23);
  v37[12] = (uint64_t *)v27[1];
  v38 = v28;
  v20 = &unk_1E3D21960;
  sub_19C17B808((char **)v23);
  v9 = *(_DWORD *)(a1 + 72);
  (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
  v10 = *(_QWORD *)(a2 + 24);
  if (!v10)
    goto LABEL_16;
  v11 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v10 + 48))(v10, v29);
  (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
  std::chrono::steady_clock::now();
  LODWORD(v20) = 1;
  sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
  v26 = v11;
  sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
  if (1 % v9)
    goto LABEL_5;
  v12 = *(_QWORD *)(a2 + 56);
  if (!v12)
LABEL_17:
    sub_19C1D6A94();
  if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v12 + 48))(v12, &v20) & 1) == 0)
  {
LABEL_5:
    if (!(*v30)((uint64_t)&v30, &v20))
    {
      v13 = (*v33)((uint64_t)&v33, (int *)&v20);
      sub_19C17B808(v27);
      sub_19C17B808((char **)v21);
      sub_19C17B808(v29);
      if (v13)
        goto LABEL_15;
      v14 = 2;
      while (1)
      {
        (*(void (**)(char **__return_ptr))(**(_QWORD **)(a1 + 120) + 16))(v29);
        v15 = *(_QWORD *)(a2 + 24);
        if (!v15)
          break;
        v16 = (*(double (**)(uint64_t, char **))(*(_QWORD *)v15 + 48))(v15, v29);
        (*(void (**)(_QWORD, char **))(**(_QWORD **)(a1 + 120) + 24))(*(_QWORD *)(a1 + 120), v29);
        std::chrono::steady_clock::now();
        std::chrono::steady_clock::now();
        LODWORD(v20) = v14;
        sub_19C1C1840((uint64_t **)v21, (uint64_t *)v29);
        v26 = v16;
        sub_19C1D6818(*(_QWORD *)(a1 + 120), (uint64_t)v27);
        if (!(v14 % v9))
        {
          v17 = *(_QWORD *)(a2 + 56);
          if (!v17)
            goto LABEL_17;
          if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v17 + 48))(v17, &v20) & 1) != 0)
            goto LABEL_6;
        }
        if ((*v30)((uint64_t)&v30, &v20))
          goto LABEL_6;
        v18 = (*v33)((uint64_t)&v33, (int *)&v20);
        sub_19C17B808(v27);
        sub_19C17B808((char **)v21);
        sub_19C17B808(v29);
        ++v14;
        if (v18)
          goto LABEL_15;
      }
LABEL_16:
      sub_19C1D6A94();
    }
  }
LABEL_6:
  sub_19C17B808(v27);
  sub_19C17B808((char **)v21);
  sub_19C17B808(v29);
LABEL_15:
  sub_19C1D6818(*(_QWORD *)(a1 + 120), a3);
  v33 = (BOOL (**)(uint64_t, int *))&unk_1E3D21960;
  return sub_19C17B808((char **)v37);
}

void sub_19C213C94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char *a37)
{
  char **v37;
  char **v38;
  char **v39;
  uint64_t v40;

  sub_19C17B808(v39);
  sub_19C17B808(v38);
  sub_19C17B808(&a37);
  *(_QWORD *)(v40 - 240) = &unk_1E3D21960;
  sub_19C17B808(v37);
  _Unwind_Resume(a1);
}

void sub_19C213D10(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  std::logic_error *exception;
  uint64_t v5;

  v3 = *(_DWORD *)(a1 + 48);
  if (v3 == 1)
  {
    sub_19C213DB8(a1, &v5);
    *a2 = v5;
  }
  else
  {
    if (v3)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_19C1C79A4(exception, "Invalid optimizer in user config.");
      __cxa_throw(exception, (struct type_info *)off_1E3D1C4D0, MEMORY[0x1E0DE4360]);
    }
    sub_19C1C76D4(a1, &v5);
    *a2 = v5;
  }
}

void sub_19C213DA4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_19C213DB8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char **v5;
  char **v6;
  void *v7;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  void **v15;
  void *v16;
  void **v17;
  void *__p;
  char **v19;
  char v20;

  v4 = operator new();
  sub_19C1C2D98((uint64_t)&v14, a1);
  sub_19C213F20(v4, (uint64_t *)&v14);
  *a2 = v4;
  if (v20)
  {
    v5 = (char **)__p;
    if (__p)
    {
      v6 = v19;
      v7 = __p;
      if (v19 != __p)
      {
        do
          v6 = sub_19C17B808(v6 - 12);
        while (v6 != v5);
        v7 = __p;
      }
      v19 = v5;
      operator delete(v7);
    }
  }
  v8 = (void **)v16;
  if (v16)
  {
    v9 = v17;
    v10 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = v16;
    }
    v17 = v8;
    operator delete(v10);
  }
  v11 = (void **)v14;
  if (v14)
  {
    v12 = v15;
    v13 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v14;
    }
    v15 = v11;
    operator delete(v13);
  }
}

void sub_19C213EF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  va_list va;

  va_start(va, a2);
  sub_19C1C2E88((uint64_t)va);
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_19C213F0C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C213F20(uint64_t a1, uint64_t *a2)
{
  char **v4;
  char **v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  int v13;
  int v14;
  char ***v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  char **v38;
  char **v39;
  char **v40;
  void **v41;
  void **v42;
  void *v43;
  void **v44;
  void **v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t **v51;
  uint64_t **v52;
  uint64_t v53;
  uint64_t *v54;
  void *v56;
  void **v57;
  uint64_t v58;
  void *v59;
  void **v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  void *v64;
  void **v65;
  void *v66;
  void **v67;
  void *__p;
  char **v69;
  char v70;

  sub_19C1C2D98((uint64_t)&v64, (uint64_t)a2);
  *(_QWORD *)a1 = &unk_1E3D214F8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_19C1C2D98(a1 + 32, (uint64_t)&v64);
  if (v70)
  {
    v4 = (char **)__p;
    if (__p)
    {
      v5 = v69;
      v6 = __p;
      if (v69 != __p)
      {
        do
          v5 = sub_19C17B808(v5 - 12);
        while (v5 != v4);
        v6 = __p;
      }
      v69 = v4;
      operator delete(v6);
    }
  }
  v7 = (void **)v66;
  if (v66)
  {
    v8 = v67;
    v9 = v66;
    if (v67 != v66)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v66;
    }
    v67 = v7;
    operator delete(v9);
  }
  v10 = (void **)v64;
  if (v64)
  {
    v11 = v65;
    v12 = v64;
    if (v65 != v64)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v64;
    }
    v65 = v10;
    operator delete(v12);
  }
  *(_QWORD *)a1 = &unk_1E3D21858;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  v13 = sub_19C178A44(a2);
  v14 = sub_19C179558((uint64_t)a2);
  *(_DWORD *)(a1 + 176) = v14 + v13;
  sub_19C214D34(a1 + 184, v14 + v13);
  *(_QWORD *)(a1 + 464) = 0;
  *(_QWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 488) = 0;
  *(_QWORD *)(a1 + 480) = 0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 316) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 444) = 0u;
  *(_QWORD *)(a1 + 528) = 0;
  *(_QWORD *)(a1 + 520) = 0;
  *(_DWORD *)(a1 + 544) = 0;
  *(_QWORD *)(a1 + 536) = 0;
  *(_DWORD *)(a1 + 560) = -1;
  *(_QWORD *)(a1 + 504) = &unk_1E3D210B0;
  *(_QWORD *)(a1 + 512) = a1 + 176;
  *(_QWORD *)(a1 + 576) = 0x3FB999999999999ALL;
  *(_QWORD *)(a1 + 584) = 0;
  sub_19C1C81AC(a1 + 592);
  v15 = (char ***)(a1 + 10696);
  *(_QWORD *)(a1 + 10712) = 0;
  *(_OWORD *)(a1 + 10696) = 0u;
  if ((int)sub_19C179558(a1 + 32) < 1)
    sub_19C2147D4(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)(a1 + 108), (uint64_t *)&v62);
  else
    sub_19C214628(a1 + 504, (uint64_t *)(a1 + 32), (uint64_t *)&v62);
  v16 = v62;
  *(_QWORD *)&v62 = 0;
  v17 = *(_QWORD *)(a1 + 584);
  *(_QWORD *)(a1 + 584) = v16;
  if (v17)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v62;
    *(_QWORD *)&v62 = 0;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v19 = 0;
    v20 = *(_DWORD *)(a1 + 108);
    *(_DWORD *)(a1 + 8184) = v20;
    v21 = 1;
    v22 = v20;
    do
    {
      v23 = 1812433253 * (v22 ^ (v22 >> 30));
      v22 = v23 + v21;
      *(_DWORD *)(a1 + 8188 + 4 * v19) = v19 + v23 + 1;
      ++v21;
      ++v19;
    }
    while (v19 != 623);
    *(_QWORD *)(a1 + 10680) = 0;
    *(_DWORD *)(a1 + 592) = v20;
    v24 = 1;
    v25 = 149;
    v26 = v20;
    do
    {
      v27 = 1812433253 * (v26 ^ (v26 >> 30));
      v26 = v27 + v24;
      *(_DWORD *)(a1 + 4 * v25) = v25 + v27 - 148;
      ++v24;
      ++v25;
    }
    while (v25 != 772);
    v28 = 0;
    *(_QWORD *)(a1 + 3088) = 0;
    *(_DWORD *)(a1 + 3120) = v20;
    v29 = 1;
    v30 = v20;
    do
    {
      v31 = 1812433253 * (v30 ^ (v30 >> 30));
      v30 = v31 + v29;
      *(_DWORD *)(a1 + 3124 + 4 * v28) = v28 + v31 + 1;
      ++v29;
      ++v28;
    }
    while (v28 != 623);
    v32 = 0;
    *(_QWORD *)(a1 + 5616) = 0;
    *(_DWORD *)(a1 + 5640) = v20;
    v33 = 1;
    do
    {
      v34 = 1812433253 * (v20 ^ (v20 >> 30));
      v20 = v34 + v33;
      *(_DWORD *)(a1 + 5644 + 4 * v32) = v32 + v34 + 1;
      ++v33;
      ++v32;
    }
    while (v32 != 623);
    *(_QWORD *)(a1 + 8136) = 0;
    sub_19C23B684();
  }
  v57 = 0;
  v58 = 0;
  v56 = 0;
  sub_19C17AF88(&v56, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 4));
  v59 = 0;
  v60 = 0;
  v61 = 0;
  sub_19C17B16C(&v59, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 56)) >> 3));
  v35 = sub_19C178A44((uint64_t *)(a1 + 32));
  v36 = 5 * (sub_19C179558(a1 + 32) + v35);
  if (*(_BYTE *)(a1 + 144))
  {
    v37 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
    if ((int)v36 <= v37)
      v36 = v37;
    else
      v36 = v36;
  }
  sub_19C17A144((uint64_t *)&v56, a1 + 592, v36, (char **)&v62);
  v38 = *v15;
  if (*v15)
  {
    v39 = *(char ***)(a1 + 10704);
    v40 = *v15;
    if (v39 != v38)
    {
      do
        v39 = sub_19C17B808(v39 - 12);
      while (v39 != v38);
      v40 = *v15;
    }
    *(_QWORD *)(a1 + 10704) = v38;
    operator delete(v40);
    *v15 = 0;
    *(_QWORD *)(a1 + 10704) = 0;
    *(_QWORD *)(a1 + 10712) = 0;
  }
  *(_OWORD *)v15 = v62;
  *(_QWORD *)(a1 + 10712) = v63;
  v63 = 0;
  v62 = 0uLL;
  v41 = (void **)v59;
  if (v59)
  {
    v42 = v60;
    v43 = v59;
    if (v60 != v59)
    {
      do
      {
        if (*((char *)v42 - 17) < 0)
          operator delete(*(v42 - 5));
        v42 -= 5;
      }
      while (v42 != v41);
      v43 = v59;
    }
    v60 = v41;
    operator delete(v43);
  }
  v44 = (void **)v56;
  if (v56)
  {
    v45 = v57;
    v46 = v56;
    if (v57 != v56)
    {
      do
      {
        if (*((char *)v45 - 25) < 0)
          operator delete(*(v45 - 6));
        v45 -= 6;
      }
      while (v45 != v44);
      v46 = v56;
    }
    v57 = v44;
    operator delete(v46);
  }
  if (*(_BYTE *)(a1 + 144))
  {
    v47 = *(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120);
    if (v47)
    {
      v48 = 0;
      v49 = 0;
      v50 = v47 / 96;
      do
      {
        while (1)
        {
          v52 = *(uint64_t ***)(a1 + 10704);
          v53 = *(_QWORD *)(a1 + 10696);
          if (v49 >= 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v52 - v53) >> 5))
            break;
          if (!*(_BYTE *)(a1 + 144))
            goto LABEL_77;
          sub_19C1C9C8C(v53 + v48, *(_QWORD *)(a1 + 120) + v48);
          ++v49;
          v48 += 96;
          if (v50 == v49)
            return a1;
        }
        if (!*(_BYTE *)(a1 + 144))
LABEL_77:
          sub_19C1D1E0C();
        v54 = (uint64_t *)(*(_QWORD *)(a1 + 120) + v48);
        if ((unint64_t)v52 < *(_QWORD *)(a1 + 10712))
          v51 = sub_19C1C1840(v52, v54) + 12;
        else
          v51 = sub_19C1D1CCC((uint64_t ***)(a1 + 10696), v54);
        *(_QWORD *)(a1 + 10704) = v51;
        ++v49;
        v48 += 96;
      }
      while (v50 != v49);
    }
  }
  return a1;
}

void sub_19C21453C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  _QWORD *v3;
  _QWORD *v4;
  std::random_device *v5;
  void **v6;
  void **v8;
  uint64_t v9;
  void *v10;

  sub_19C17AA64(v6);
  sub_19C1C7C7C(v5);
  v8 = (void **)(v1 + 65);
  v9 = v1[73];
  v1[73] = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  *v4 = &unk_1E3D20FC0;
  v10 = *v8;
  if (*v8)
  {
    v1[66] = v10;
    operator delete(v10);
  }
  sub_19C1EC3CC(v3);
  sub_19C1C9D28(v2);
  sub_19C1C7CC8(v1);
  _Unwind_Resume(a1);
}

void sub_19C214628(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  void **v10;
  void **v11;
  void *v12;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v6 = operator new();
  v14 = 0;
  v15 = 0;
  v13 = 0;
  sub_19C17AF88(&v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C215F88(v6, a1, (uint64_t *)&v13);
  *a3 = v6;
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v17;
    v9 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v17 = v7;
    operator delete(v9);
  }
  v10 = (void **)v13;
  if (v13)
  {
    v11 = v14;
    v12 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v11 - 25) < 0)
          operator delete(*(v11 - 6));
        v11 -= 6;
      }
      while (v11 != v10);
      v12 = v13;
    }
    v14 = v10;
    operator delete(v12);
  }
}

void sub_19C214780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C21479C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C2147D4(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  void **v9;
  void **v10;
  void *v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  uint64_t v17;
  void *__p;
  void **v19;
  uint64_t v20;

  v8 = operator new();
  v16 = 0;
  v17 = 0;
  v15 = 0;
  sub_19C17AF88(&v15, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_19C17B16C(&__p, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 3));
  sub_19C21730C(v8, a1, (uint64_t *)&v15, *a3);
  *a4 = v8;
  v9 = (void **)__p;
  if (__p)
  {
    v10 = v19;
    v11 = __p;
    if (v19 != __p)
    {
      do
      {
        if (*((char *)v10 - 17) < 0)
          operator delete(*(v10 - 5));
        v10 -= 5;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v19 = v9;
    operator delete(v11);
  }
  v12 = (void **)v15;
  if (v15)
  {
    v13 = v16;
    v14 = v15;
    if (v16 != v15)
    {
      do
      {
        if (*((char *)v13 - 25) < 0)
          operator delete(*(v13 - 6));
        v13 -= 6;
      }
      while (v13 != v12);
      v14 = v15;
    }
    v16 = v12;
    operator delete(v14);
  }
}

void sub_19C21492C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_19C17A75C(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C214948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a9)
  {
    sub_19C25623C((uint64_t)&a9, a9);
    operator delete(v9);
    _Unwind_Resume(a1);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_19C214984(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_19C2189B8(a1);
  operator delete(v1);
}

uint64_t **sub_19C214998@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  signed int v8;
  char *v10[13];

  v4 = a1 + 8;
  v5 = 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3);
  v6 = a1 + 32;
  v7 = sub_19C178A44((uint64_t *)(a1 + 32));
  v8 = 5 * (sub_19C179558(v6) + v7);
  if (*(_BYTE *)(v4 + 136) && v8 <= (int)(-1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5)))
    v8 = -1431655765 * ((*(_QWORD *)(a1 + 128) - *(_QWORD *)(a1 + 120)) >> 5);
  if (v5 < v8)
    return sub_19C1C1840(a2, (uint64_t *)(*(_QWORD *)(a1 + 10696)+ 96 * (int)(-991146299 * ((*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3))));
  (*(void (**)(char **__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 584) + 16))(v10, *(_QWORD *)(a1 + 584), v4);
  sub_19C1C1840(a2, (uint64_t *)v10);
  return (uint64_t **)sub_19C17B808(v10);
}

void sub_19C214AB0(uint64_t a1, __int128 **a2, double a3)
{
  double v6;
  double v7;
  double v8;
  double v9;
  unint64_t v10;
  void *v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  long double v20;
  long double v21;
  uint64_t **v22;
  uint64_t **v23;
  uint64_t **v24;
  double v25;
  double v26;
  double v27;
  void *__p;
  _BYTE *v29;
  int v30;
  uint64_t *v31[12];
  double v32;

  sub_19C1CBD8C(a2, (uint64_t)&__p);
  v6 = sub_19C216F28(a1 + 176, (uint64_t)&__p);
  v8 = sqrt(v7);
  v26 = v8;
  v27 = v6;
  v9 = v6 + *(double *)(a1 + 568) * v8;
  v25 = v9;
  v10 = *(_QWORD *)(a1 + 160);
  if (v10 >= *(_QWORD *)(a1 + 168))
  {
    v15 = sub_19C1D2BAC((uint64_t *)(a1 + 152), (uint64_t)&__p, &v27, (uint64_t *)&v26, (uint64_t *)&v25);
  }
  else
  {
    *(_QWORD *)v10 = 0;
    *(_QWORD *)(v10 + 8) = 0;
    *(_QWORD *)(v10 + 16) = 0;
    v11 = __p;
    v12 = v29 - (_BYTE *)__p;
    if (v29 != __p)
    {
      if (v12 < 0)
        sub_19C07DA0C();
      v13 = (char *)operator new(v29 - (_BYTE *)__p);
      *(_QWORD *)v10 = v13;
      *(_QWORD *)(v10 + 8) = v13;
      v14 = &v13[8 * (v12 >> 3)];
      *(_QWORD *)(v10 + 16) = v14;
      memcpy(v13, v11, v12);
      *(_QWORD *)(v10 + 8) = v14;
    }
    *(_DWORD *)(v10 + 24) = v30;
    *(double *)(v10 + 32) = v6;
    *(double *)(v10 + 40) = v8;
    *(double *)(v10 + 48) = v9;
    v15 = v10 + 56;
    *(_QWORD *)(a1 + 160) = v10 + 56;
  }
  *(_QWORD *)(a1 + 160) = v15;
  v16 = *(int *)(a1 + 488);
  v17 = v16 + 1;
  *(_DWORD *)(a1 + 488) = v16 + 1;
  v18 = *(_QWORD *)(a1 + 464);
  v19 = (*(_QWORD *)(a1 + 472) - v18) >> 3;
  if (v16 + 1 <= v19)
  {
    if (v16 + 1 < v19)
      *(_QWORD *)(a1 + 472) = v18 + 8 * v16 + 8;
  }
  else
  {
    sub_19C17C9D8(a1 + 464, v16 + 1 - v19);
    v17 = *(int *)(a1 + 488);
    v18 = *(_QWORD *)(a1 + 464);
  }
  *(double *)(v18 + 8 * v17 - 8) = a3;
  sub_19C218B30(a1 + 176, (uint64_t)&__p);
  sub_19C219CEC(a1 + 496, a1 + 176);
  v20 = pow((double)*(int *)(*(_QWORD *)(a1 + 512) + 120), (double)*(int *)(*(_QWORD *)(a1 + 512) + 124) * 0.5 + 2.0);
  v21 = log(v20 * 9.8696044 / (*(double *)(a1 + 576) * 3.0));
  *(double *)(a1 + 568) = sqrt(v21 + v21);
  sub_19C214FDC(a1 + 504);
  sub_19C1C1840(v31, (uint64_t *)a2);
  v32 = a3;
  v22 = *(uint64_t ***)(a1 + 16);
  if ((unint64_t)v22 >= *(_QWORD *)(a1 + 24))
  {
    v24 = sub_19C1C907C((uint64_t ***)(a1 + 8), (uint64_t *)v31);
  }
  else
  {
    v23 = sub_19C1C1840(v22, (uint64_t *)v31);
    *((double *)v23 + 12) = v32;
    v24 = v23 + 13;
  }
  *(_QWORD *)(a1 + 16) = v24;
  sub_19C17B808((char **)v31);
  if (__p)
  {
    v29 = __p;
    operator delete(__p);
  }
}

void sub_19C214CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  sub_19C17B808(&a16);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_19C214D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  size_t v5;
  char *v6;
  int v7;
  _QWORD *v8;
  unint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  long double *v15;
  double *v16;
  uint64_t v17;
  long double v18;
  long double v20;

  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_19C27A9D0;
  *(_QWORD *)(a1 + 24) = 0;
  v4 = a2 << 32;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v5 = 8 * (int)a2;
  if ((_DWORD)a2)
  {
    if ((a2 & 0x80000000) != 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * (int)a2);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 40) = &v6[8 * (int)a2];
    bzero(v6, v5);
    *(_QWORD *)(a1 + 32) = &v6[v5];
    *(_DWORD *)(a1 + 48) = a2;
    if (v4)
      goto LABEL_4;
  }
  else
  {
    v6 = 0;
    *(_DWORD *)(a1 + 48) = 0;
    if (v4)
LABEL_4:
      memset_pattern16(v6, &unk_19C277730, v5);
  }
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v7 = a2 + 1;
  if ((_DWORD)a2 == -1)
  {
    v8 = 0;
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 72) = 0;
    *(_DWORD *)(a1 + 80) = v7;
    MEMORY[0] = 0;
    if (!a2)
      return a1;
    goto LABEL_12;
  }
  if (v7 < 0)
    sub_19C07DA0C();
  v8 = operator new(8 * v7);
  bzero(v8, 8 * v7);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = &v8[v7];
  *(_QWORD *)(a1 + 72) = &v8[v7];
  *(_DWORD *)(a1 + 80) = v7;
  *v8 = 0;
  if (a2)
  {
LABEL_12:
    v9 = 0;
    if (a2 == 1)
      goto LABEL_16;
    v9 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v10 = v8 + 1;
    v11 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v12 = (__int128 *)v6;
    do
    {
      v13 = *v12++;
      v20 = log(*((long double *)&v13 + 1));
      *(double *)&v14 = log(*(long double *)&v13);
      *((long double *)&v14 + 1) = v20;
      *v10++ = v14;
      v11 -= 2;
    }
    while (v11);
    if (v9 != a2)
    {
LABEL_16:
      v15 = (long double *)&v8[v9 + 1];
      v16 = (double *)&v6[8 * v9];
      v17 = a2 - v9;
      do
      {
        v18 = *v16++;
        *v15++ = log(v18);
        --v17;
      }
      while (v17);
    }
  }
  return a1;
}

void sub_19C214F10(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C214F2C(void *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v4;
    operator delete(v4);
  }
  sub_19C07AF7C(a1);
}

double sub_19C214F48(uint64_t a1, double a2, double a3)
{
  return a2 + *(double *)(a1 + 64) * a3;
}

double sub_19C214F54()
{
  return -1.79769313e308;
}

void sub_19C214F60(uint64_t a1)
{
  long double v2;
  long double v3;

  v2 = pow((double)*(int *)(*(_QWORD *)(a1 + 8) + 120), (double)*(int *)(*(_QWORD *)(a1 + 8) + 124) * 0.5 + 2.0);
  v3 = log(v2 * 9.8696044 / (*(double *)(a1 + 72) * 3.0));
  *(double *)(a1 + 64) = sqrt(v3 + v3);
  sub_19C214FDC(a1);
}

double sub_19C214FD4()
{
  return 0.0;
}

void sub_19C214FDC(uint64_t a1)
{
  _QWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double *v10;
  double *v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  char *v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  __int128 *v19;
  _OWORD *v20;
  unint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  double *v44;
  uint64_t v45;
  unint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  double *v52;
  uint64_t v53;
  __int128 v54;
  double *v55;
  double *v56;
  double v57;
  double *v58;
  double *v59;
  double v60;
  BOOL v61;
  char *v62;
  signed int v63;
  _OWORD *v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  _OWORD *v84;
  unint64_t v85;
  __int128 v86;
  unint64_t v87;
  uint64_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v93;
  uint64_t v94;
  void *__p;
  int v96[2];
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  double *v104;
  uint64_t v105;
  double *v106;
  _BYTE *v107;
  void *v108;
  uint64_t v109;
  unsigned int v110;

  v104 = 0;
  v105 = 0;
  v106 = 0;
  v1 = *(_QWORD **)(a1 + 8);
  v101 = 0;
  v102 = 0;
  v100 = 0;
  v3 = (_BYTE *)v1[12];
  v2 = (_BYTE *)v1[13];
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (char *)operator new(v2 - v3);
    v6 = &v5[8 * (v4 >> 3)];
    v100 = v5;
    v102 = v6;
    memcpy(v5, v3, v4);
    v101 = v6;
  }
  v7 = v1[15];
  v103 = v7;
  if (!(_DWORD)v7)
  {
    v55 = 0;
    v58 = 0;
    *(_DWORD *)(a1 + 56) = 0;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v90 = (int)v7;
  v91 = v7;
  v13 = 8 * (v7 >> 32);
  v88 = v7 >> 32;
  v89 = v13;
  v87 = (v7 >> 32) & 0xFFFFFFFFFFFFFFFCLL;
  v93 = HIDWORD(v7);
  v94 = 16;
  do
  {
    v14 = *(_QWORD *)(a1 + 8);
    v15 = v100;
    __p = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    if (!(_DWORD)v93)
    {
      v16 = 0;
      v108 = 0;
      v109 = 0;
      v107 = 0;
      v110 = 0;
      goto LABEL_27;
    }
    if (v7 < 0)
      sub_19C07DA0C();
    v16 = operator new(v13);
    bzero(v16, v13);
    if ((unint64_t)v7 >> 33 < 3)
    {
      v17 = 0;
      v18 = v88;
      goto LABEL_17;
    }
    v18 = v88;
    if ((unint64_t)((char *)v16 - &v100[v13 * v12]) < 0x20)
    {
      v17 = 0;
LABEL_17:
      v23 = v18 - v17;
      v24 = 8 * v17;
      v25 = (_QWORD *)v16 + v17;
      v26 = (uint64_t *)&v15[v8 + v24];
      do
      {
        v27 = *v26++;
        *v25++ = v27;
        --v23;
      }
      while (v23);
      goto LABEL_19;
    }
    v19 = (__int128 *)&v100[v94];
    v20 = v16 + 1;
    v21 = v87;
    do
    {
      v22 = *v19;
      *(v20 - 1) = *(v19 - 1);
      *v20 = v22;
      v19 += 2;
      v20 += 2;
      v21 -= 4;
    }
    while (v21);
    v17 = v87;
    if (v88 != v87)
      goto LABEL_17;
LABEL_19:
    v107 = 0;
    v108 = 0;
    v109 = 0;
    v110 = v93;
    sub_19C17C9D8((uint64_t)&v107, v18);
    v28 = v110;
    if ((int)v110 >= 1)
    {
      v29 = 0;
      v30 = v107;
      if (v110 < 4)
        goto LABEL_25;
      if ((unint64_t)(v107 - (_BYTE *)v16) < 0x20)
        goto LABEL_25;
      v31 = 0;
      v29 = v110 & 0xFFFFFFFC;
      v32 = (8 * v110) & 0x7FFFFFFE0;
      do
      {
        v33 = v16[v31 / 0x10 + 1];
        v34 = &v30[v31];
        *v34 = v16[v31 / 0x10];
        v34[1] = v33;
        v31 += 32;
      }
      while (v32 != v31);
      if (v29 != v28)
      {
LABEL_25:
        v35 = v28 - v29;
        v36 = v29 << 32;
        do
        {
          *(_QWORD *)&v30[v36 >> 29] = *(_QWORD *)((char *)v16 + (v36 >> 29));
          v36 += 0x100000000;
          --v35;
        }
        while (v35);
      }
    }
LABEL_27:
    v37 = sub_19C2157AC(v14, (uint64_t)&v107);
    v38 = v37;
    if (v11 < v10)
    {
      *v11++ = v37;
      v7 = v91;
      v13 = v89;
      v105 = (uint64_t)v11;
      v39 = v107;
      if (!v107)
        goto LABEL_30;
LABEL_29:
      v108 = v39;
      operator delete(v39);
      goto LABEL_30;
    }
    v40 = v11 - v9;
    v41 = v40 + 1;
    if ((unint64_t)(v40 + 1) >> 61)
      sub_19C07DA0C();
    if (((char *)v10 - (char *)v9) >> 2 > v41)
      v41 = ((char *)v10 - (char *)v9) >> 2;
    if ((unint64_t)((char *)v10 - (char *)v9) >= 0x7FFFFFFFFFFFFFF8)
      v42 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v42 = v41;
    if (v42)
    {
      if (v42 >> 61)
        sub_19C07C7FC();
      v43 = operator new(8 * v42);
      v44 = (double *)&v43[8 * v40];
      *v44 = v38;
      v45 = (uint64_t)(v44 + 1);
      if (v11 != v9)
      {
LABEL_41:
        v46 = (char *)(v11 - 1) - (char *)v9;
        if (v46 < 0x168
          || &v43[(char *)v11 - (char *)v9 - 8 - (v46 & 0xFFFFFFFFFFFFFFF8)] > &v43[(char *)v11 - (char *)v9 - 8]
          || (double *)((char *)v11 - (v46 & 0xFFFFFFFFFFFFFFF8) - 8) > v11 - 1
          || (unint64_t)((char *)v9 - v43) < 0x20)
        {
          v47 = v11;
          v7 = v91;
          v13 = v89;
        }
        else
        {
          v49 = (v46 >> 3) + 1;
          v50 = 8 * (v49 & 0x3FFFFFFFFFFFFFFCLL);
          v47 = &v11[v50 / 0xFFFFFFFFFFFFFFF8];
          v44 = (double *)((char *)v44 - v50);
          v51 = &v43[8 * v40 - 16];
          v52 = v11 - 2;
          v53 = v49 & 0x3FFFFFFFFFFFFFFCLL;
          v7 = v91;
          do
          {
            v54 = *(_OWORD *)v52;
            *(v51 - 1) = *((_OWORD *)v52 - 1);
            *v51 = v54;
            v51 -= 2;
            v52 -= 4;
            v53 -= 4;
          }
          while (v53);
          v13 = v89;
          if (v49 == (v49 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_44:
            v10 = (double *)&v43[8 * v42];
            v104 = v44;
            v105 = v45;
            v106 = v10;
            if (!v9)
              goto LABEL_46;
LABEL_45:
            operator delete(v9);
            goto LABEL_46;
          }
        }
        do
        {
          v48 = *((_QWORD *)v47-- - 1);
          *((_QWORD *)v44-- - 1) = v48;
        }
        while (v47 != v9);
        goto LABEL_44;
      }
    }
    else
    {
      v43 = 0;
      v44 = (double *)(8 * v40);
      *(double *)(8 * v40) = v37;
      v45 = 8 * v40 + 8;
      if (v11 != v9)
        goto LABEL_41;
    }
    v7 = v91;
    v13 = v89;
    v10 = (double *)&v43[8 * v42];
    v104 = v44;
    v105 = v45;
    v106 = v10;
    if (v9)
      goto LABEL_45;
LABEL_46:
    v9 = v44;
    v11 = (double *)v45;
    v105 = v45;
    v39 = v107;
    if (v107)
      goto LABEL_29;
LABEL_30:
    if (v16)
      operator delete(v16);
    ++v12;
    v94 += v13;
    v8 += v13;
  }
  while (v12 != v90);
  v55 = v104;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 120);
  if (v55 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v56 = v55 + 1;
  if (v55 + 1 == v11)
  {
    v58 = v55;
    v62 = v100;
    v63 = HIDWORD(v103);
    v107 = 0;
    v108 = 0;
    v109 = 0;
    if (HIDWORD(v103))
      goto LABEL_65;
    goto LABEL_81;
  }
  v57 = *v55;
  v58 = v55;
  v59 = v55 + 1;
  do
  {
    v60 = *v59++;
    v61 = v57 < v60;
    v57 = fmax(v57, v60);
    if (v61)
      v58 = v56;
    v56 = v59;
  }
  while (v59 != v11);
  v62 = v100;
  v63 = HIDWORD(v103);
  v107 = 0;
  v108 = 0;
  v109 = 0;
  if (!HIDWORD(v103))
  {
LABEL_81:
    v74 = 0;
    LODWORD(v73) = 0;
    v64 = 0;
    *(_QWORD *)v96 = 0;
    v97 = 0;
    __p = 0;
    v98 = 0;
    goto LABEL_82;
  }
LABEL_65:
  if (v63 < 0)
    sub_19C07DA0C();
  v64 = operator new(8 * v63);
  v65 = (v58 - v55) * v63;
  bzero(v64, 8 * v63);
  if (v63 < 0xA || (v66 = &v62[8 * v65], (unint64_t)((char *)v64 - v66) < 0x20))
  {
    v67 = 0;
    goto LABEL_69;
  }
  v67 = v63 & 0xFFFFFFFFFFFFFFFCLL;
  v83 = (__int128 *)(v66 + 16);
  v84 = v64 + 1;
  v85 = v67;
  do
  {
    v86 = *v83;
    *(v84 - 1) = *(v83 - 1);
    *v84 = v86;
    v83 += 2;
    v84 += 2;
    v85 -= 4;
  }
  while (v85);
  if (v67 != v63)
  {
LABEL_69:
    v68 = v63 - v67;
    v69 = 8 * v67;
    v70 = (_QWORD *)v64 + v67;
    v71 = &v62[8 * v65 + v69];
    do
    {
      v72 = *(_QWORD *)v71;
      v71 += 8;
      *v70++ = v72;
      --v68;
    }
    while (v68);
  }
  __p = 0;
  *(_QWORD *)v96 = 0;
  v97 = 0;
  v98 = v63;
  sub_19C17C9D8((uint64_t)&__p, v63);
  v73 = v98;
  v74 = (char *)__p;
  if ((int)v98 >= 1)
  {
    v75 = 0;
    if (v98 < 4)
      goto LABEL_77;
    if ((unint64_t)((_BYTE *)__p - (_BYTE *)v64) < 0x20)
      goto LABEL_77;
    v76 = 0;
    v75 = v98 & 0xFFFFFFFC;
    v77 = (8 * v98) & 0x7FFFFFFE0;
    do
    {
      v78 = v64[v76 / 0x10 + 1];
      v79 = &v74[v76];
      *(_OWORD *)v79 = v64[v76 / 0x10];
      *((_OWORD *)v79 + 1) = v78;
      v76 += 32;
    }
    while (v77 != v76);
    if (v75 != v73)
    {
LABEL_77:
      v80 = v73 - v75;
      v81 = v75 << 32;
      do
      {
        *(_QWORD *)&v74[v81 >> 29] = *(_QWORD *)((char *)v64 + (v81 >> 29));
        v81 += 0x100000000;
        --v80;
      }
      while (v80);
    }
  }
LABEL_82:
  v82 = *(_QWORD *)v58;
  v99 = *(_QWORD *)v58;
  if ((void **)(a1 + 16) != &__p)
  {
    sub_19C11EAD0((_QWORD *)(a1 + 16), v74, *(char **)v96, (uint64_t)(*(_QWORD *)v96 - (_QWORD)v74) >> 3);
    LODWORD(v73) = v98;
    v82 = v99;
    v74 = (char *)__p;
  }
  *(_DWORD *)(a1 + 40) = v73;
  *(_QWORD *)(a1 + 48) = v82;
  if (v74)
  {
    *(_QWORD *)v96 = v74;
    operator delete(v74);
  }
  if (v64)
    operator delete(v64);
  if (v62)
    operator delete(v62);
  if (v55)
  {
    v105 = (uint64_t)v55;
    operator delete(v55);
  }
}

void sub_19C2156F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  void *v28;
  void *v29;

  if (__p)
    operator delete(__p);
  if (v28)
    operator delete(v28);
  if (v29)
    operator delete(v29);
  if (a27)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

double sub_19C2157AC(uint64_t a1, uint64_t a2)
{
  double v3;
  double v4;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C21588C(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v3 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v4 = __C;
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v4 + v3;
  }
  else
  {
    __A[0] = 0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)__A, *(int *)(a1 + 312));
    return *(double *)__A;
  }
}

void sub_19C215870(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C21588C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  signed int v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  __int128 *v21;
  _OWORD *v22;
  unint64_t v23;
  __int128 v24;
  char *v26;
  void *__p;
  char *v29;
  char *v30;
  signed int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = *(_DWORD *)(a1 + 120);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  *(_DWORD *)(a3 + 24) = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  if (v3)
  {
    if (v3 < 0)
      sub_19C07DA0C();
    v5 = v3;
    v6 = (char *)operator new(8 * v3);
    bzero(v6, 8 * v3);
    v7 = 0;
    v8 = 0;
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = &v6[8 * v3];
    *(_QWORD *)(a3 + 16) = &v6[8 * v3];
    *(_DWORD *)(a3 + 24) = v3;
    v26 = v6;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 96);
      v10 = *(_DWORD *)(a1 + 124);
      v32 = 0;
      v33 = 0;
      v34 = 0;
      if (!v10)
      {
        v11 = 0;
        v29 = 0;
        v30 = 0;
        __p = 0;
        v31 = 0;
        goto LABEL_14;
      }
      if (v10 < 0)
        sub_19C07DA0C();
      v11 = operator new(8 * v10);
      bzero(v11, 8 * v10);
      if (v10 >= 8 && (unint64_t)v11 - v9 - 8 * v8 * v10 >= 0x20)
      {
        v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
        v21 = (__int128 *)(v9 + v7 * v10 + 16);
        v22 = v11 + 1;
        v23 = v12;
        do
        {
          v24 = *v21;
          *(v22 - 1) = *(v21 - 1);
          *v22 = v24;
          v21 += 2;
          v22 += 2;
          v23 -= 4;
        }
        while (v23);
        if (v12 == v10)
          goto LABEL_12;
      }
      else
      {
        v12 = 0;
      }
      v13 = v10 - v12;
      v14 = 8 * v12;
      v15 = (_QWORD *)v11 + v12;
      v16 = (uint64_t *)(v9 + v14 + v7 * v10);
      do
      {
        v17 = *v16++;
        *v15++ = v17;
        --v13;
      }
      while (v13);
LABEL_12:
      __p = 0;
      v29 = 0;
      v31 = 0;
      v30 = 0;
      __p = operator new(8 * v10);
      v29 = (char *)__p + 8 * v10;
      v30 = v29;
      v31 = v10;
      memcpy(__p, v11, 8 * v10);
      v6 = v26;
LABEL_14:
      v18 = sub_19C215B48(a1 + 8, (uint64_t)&__p, a2);
      v19 = *(double *)(a1 + 24);
      *(long double *)&v6[8 * v8] = (v18 + 1.0 + v20) * (exp(-v18) * v19);
      if (__p)
      {
        v29 = (char *)__p;
        operator delete(__p);
      }
      if (v11)
        operator delete(v11);
      ++v8;
      v7 += 8;
      if (v8 == v5)
        return;
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
}

void sub_19C215AD4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C215AFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14)
{
  void *v14;

  if (__p)
  {
    operator delete(__p);
    if (!v14)
    {
LABEL_3:
      *(_QWORD *)(a10 + 8) = a11;
      operator delete(a11);
      _Unwind_Resume(a1);
    }
  }
  else if (!v14)
  {
    goto LABEL_3;
  }
  operator delete(v14);
  *(_QWORD *)(a10 + 8) = a11;
  operator delete(a11);
  _Unwind_Resume(a1);
}

double sub_19C215B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  const void *v7;
  int64_t v8;
  char *v9;
  char *v10;
  int v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  const void *v16;
  int64_t v17;
  char *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  size_t v24;
  void *v25;
  double v26;
  double v27;

  v7 = *(const void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = v6 - *(_QWORD *)a2;
  if (v6 == *(_QWORD *)a2)
  {
    v10 = 0;
    v9 = 0;
  }
  else
  {
    if (v8 < 0)
      sub_19C07DA0C();
    v9 = (char *)operator new(v6 - *(_QWORD *)a2);
    v10 = &v9[8 * (v8 >> 3)];
    memcpy(v9, v7, v8);
  }
  v11 = *(_DWORD *)(a2 + 24);
  vDSP_vdivD(*(const double **)(a1 + 24), 1, (const double *)v9, 1, (double *)v9, 1, v11);
  v12 = v10 - v9;
  if (v12)
  {
    if (v12 < 0)
      sub_19C07DA0C();
    v13 = (char *)operator new(v12);
    v14 = &v13[8 * (v12 >> 3)];
    memcpy(v13, v9, v12);
    if (v9)
      goto LABEL_8;
  }
  else
  {
    v14 = 0;
    v13 = 0;
    if (v9)
LABEL_8:
      operator delete(v9);
  }
  v16 = *(const void **)a3;
  v15 = *(_QWORD *)(a3 + 8);
  v17 = v15 - *(_QWORD *)a3;
  if (v15 == *(_QWORD *)a3)
  {
    v19 = 0;
    v18 = 0;
  }
  else
  {
    if (v17 < 0)
      sub_19C07DA0C();
    v18 = (char *)operator new(v15 - *(_QWORD *)a3);
    v19 = &v18[8 * (v17 >> 3)];
    memcpy(v18, v16, v17);
  }
  vDSP_vdivD(*(const double **)(a1 + 24), 1, (const double *)v18, 1, (double *)v18, 1, *(int *)(a3 + 24));
  if (v19 == v18)
  {
    v20 = 0;
    if (v18)
LABEL_18:
      operator delete(v18);
  }
  else
  {
    if (v19 - v18 < 0)
      sub_19C07DA0C();
    v20 = operator new(v19 - v18);
    memcpy(v20, v18, v19 - v18);
    if (v18)
      goto LABEL_18;
  }
  v21 = v14 - v13;
  if (v14 == v13)
  {
    v23 = 0;
    v22 = 0;
  }
  else
  {
    if (v21 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v14 - v13);
    v23 = &v22[8 * (v21 >> 3)];
    memcpy(v22, v13, v14 - v13);
  }
  vDSP_vsubD((const double *)v20, 1, (const double *)v22, 1, (double *)v22, 1, v11);
  v24 = v23 - v22;
  if (v23 == v22)
  {
    v25 = 0;
  }
  else
  {
    if ((v24 & 0x8000000000000000) != 0)
      sub_19C07DA0C();
    v25 = operator new(v23 - v22);
    memcpy(v25, v22, v24);
  }
  cblas_dnrm2_NEWLAPACK();
  v27 = v26;
  if (v25)
    operator delete(v25);
  if (v22)
    operator delete(v22);
  if (v20)
    operator delete(v20);
  if (v13)
    operator delete(v13);
  return v27 * 2.23606798;
}

void sub_19C215E98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  if (v25)
    operator delete(v25);
  if (v26)
    operator delete(v26);
  if (v24)
    operator delete(v24);
  if (v23)
    operator delete(v23);
  _Unwind_Resume(exception_object);
}

void sub_19C215F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  if (a26)
    JUMPOUT(0x19C215F68);
  JUMPOUT(0x19C215F6CLL);
}

uint64_t sub_19C215F88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void **v6;
  void **v7;
  void *v8;
  void **v9;
  void **v10;
  void *v11;
  void *v13;
  void **v14;
  uint64_t v15;
  void *__p;
  void **v17;
  uint64_t v18;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_19C17AF88(&v13, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21618;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v13, (uint64_t)v14, 0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (_BYTE *)v13) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v17, 0xCCCCCCCCCCCCCCCDLL * (((char *)v17 - (_BYTE *)__p) >> 3));
  v6 = (void **)__p;
  if (__p)
  {
    v7 = v17;
    v8 = __p;
    if (v17 != __p)
    {
      do
      {
        if (*((char *)v7 - 17) < 0)
          operator delete(*(v7 - 5));
        v7 -= 5;
      }
      while (v7 != v6);
      v8 = __p;
    }
    v17 = v6;
    operator delete(v8);
  }
  v9 = (void **)v13;
  if (v13)
  {
    v10 = v14;
    v11 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v10 - 25) < 0)
          operator delete(*(v10 - 6));
        v10 -= 6;
      }
      while (v10 != v9);
      v11 = v13;
    }
    v14 = v9;
    operator delete(v11);
  }
  *(_QWORD *)a1 = &unk_1E3D214C8;
  *(_DWORD *)(a1 + 64) = 5;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_19C216128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;

  v11 = v10;
  if (*v11)
  {
    sub_19C2563D4(v9, *v11);
    sub_19C17A75C(&a9);
    _Unwind_Resume(a1);
  }
  sub_19C17A75C(&a9);
  _Unwind_Resume(a1);
}

void sub_19C216168(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    sub_19C25623C((uint64_t)&a9, a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_19C216184(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;

  *a1 = &unk_1E3D214C8;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  return sub_19C2167AC(a1);
}

void sub_19C2161EC(_QWORD *a1)
{
  char **v2;
  char **v3;
  char **v4;
  _QWORD *v5;

  *a1 = &unk_1E3D214C8;
  v2 = (char **)a1[9];
  if (v2)
  {
    v3 = (char **)a1[10];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 13);
      while (v3 != v2);
      v4 = (char **)a1[9];
    }
    a1[10] = v2;
    operator delete(v4);
  }
  v5 = sub_19C2167AC(a1);
  operator delete(v5);
}

void sub_19C216258(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  double *v15;
  double *v16;
  double *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v29;
  double v30;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD **v33;
  BOOL v34;
  uint64_t *v35;
  char **v36;
  char **v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40[4];
  uint64_t *v41;
  double *__A;
  double *v43;
  void *__p;
  char *v45;
  char *v46[3];
  char *v47[3];
  uint64_t *v48[12];
  char v49[8];
  _QWORD **v50;
  _QWORD *v51[2];
  uint64_t *v52;
  char **v53;
  double __C[2];

  sub_19C216874(a1);
  v6 = *(_QWORD *)(a1 + 72);
  if (v6 == *(_QWORD *)(a1 + 80))
  {
    v39 = a3;
    sub_19C1CBA2C(a2, &v52);
    sub_19C216B08(a2, (uint64_t)v49);
    v7 = v50;
    if (v50 != v51)
    {
      do
      {
        v8 = *(_QWORD *)((char *)v7 + 28);
        sub_19C1C1840(v48, &v52[12 * (int)v8]);
        if (SHIDWORD(v8) >= 1)
        {
          v9 = 0;
          v10 = HIDWORD(v8) & ~(v8 >> 63);
          do
          {
            sub_19C216C44(a1, (uint64_t *)v48, (uint64_t **)&__A);
            sub_19C17A814((char **)v48, (uint64_t)&__A);
            sub_19C098FBC((uint64_t)v47, v47[1]);
            sub_19C098FBC((uint64_t)v46, v46[1]);
            v11 = (char *)__p;
            if (__p)
            {
              v12 = v45;
              v13 = __p;
              if (v45 != __p)
              {
                do
                {
                  v14 = (void *)*((_QWORD *)v12 - 4);
                  if (v14)
                  {
                    *((_QWORD *)v12 - 3) = v14;
                    operator delete(v14);
                  }
                  if (*(v12 - 33) < 0)
                    operator delete(*((void **)v12 - 7));
                  v12 -= 56;
                }
                while (v12 != v11);
                v13 = __p;
              }
              v45 = v11;
              operator delete(v13);
            }
            v15 = __A;
            if (*(double *)&__A != 0.0)
            {
              v16 = v43;
              v17 = __A;
              if (v43 != __A)
              {
                do
                {
                  v18 = (void *)*((_QWORD *)v16 - 4);
                  if (v18)
                  {
                    *((_QWORD *)v16 - 3) = v18;
                    operator delete(v18);
                  }
                  if (*((char *)v16 - 33) < 0)
                    operator delete(*((void **)v16 - 7));
                  v16 -= 7;
                }
                while (v16 != v15);
                v17 = __A;
              }
              v43 = v15;
              operator delete(v17);
            }
            v41 = 0;
            v19 = *(_QWORD *)(a1 + 8);
            sub_19C1CBD8C((__int128 **)v48, (uint64_t)v40);
            v20 = *(_QWORD *)(v19 + 8);
            if (*(_DWORD *)(v20 + 120))
            {
              sub_19C21588C(*(_QWORD *)(v19 + 8), (uint64_t)v40, (uint64_t)&__A);
              __C[0] = 0.0;
              vDSP_dotprD(__A, 1, *(const double **)(v20 + 256), 1, __C, (int)__p);
              v21 = __C[0];
              __C[0] = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, __C, *(int *)(v20 + 312));
              v22 = __C[0];
              sub_19C217108(v20, (uint64_t)v40, (uint64_t)&__A);
              v24 = v23;
              v25 = *(double *)(v20 + 16);
              if (*(double *)&__A != 0.0)
              {
                v43 = __A;
                operator delete(__A);
              }
              v26 = v22 + v21;
              v27 = v25 + v24;
            }
            else
            {
              *(double *)&__A = 0.0;
              vDSP_meanvD(*(const double **)(v20 + 288), 1, (double *)&__A, *(int *)(v20 + 312));
              v26 = *(double *)&__A;
              v27 = sub_19C217030(v20, (uint64_t)v40);
            }
            v28 = sqrt(v27);
            if (v28 < 0.00000001 || (v29 = *(_DWORD *)(*(_QWORD *)(v19 + 8) + 120), v29 <= 0))
            {
              v30 = (*(double (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            }
            else
            {
              if (*(_DWORD *)(v19 + 56) != v29)
                (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
              (**(void (***)(uint64_t, double, double))v19)(v19, v26, v28);
            }
            v31 = *(uint64_t **)&v30;
            if (v40[0])
            {
              v40[1] = v40[0];
              operator delete(v40[0]);
            }
            v41 = v31;
            sub_19C1CC134((int *)(a1 + 64), (uint64_t *)v48, &v41);
            ++v9;
          }
          while (v10 != v9);
        }
        sub_19C17B808((char **)v48);
        v32 = (_QWORD *)v7[1];
        if (v32)
        {
          do
          {
            v33 = (_QWORD **)v32;
            v32 = (_QWORD *)*v32;
          }
          while (v32);
        }
        else
        {
          do
          {
            v33 = (_QWORD **)v7[2];
            v34 = *v33 == v7;
            v7 = v33;
          }
          while (!v34);
        }
        v7 = v33;
      }
      while (v33 != v51);
    }
    v35 = *(uint64_t **)(a1 + 72);
    sub_19C1C1840((uint64_t **)v39, v35);
    *(_QWORD *)(v39 + 96) = v35[12];
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    sub_19C07C924((uint64_t)&v50, v51[0]);
    v36 = (char **)v52;
    if (v52)
    {
      v37 = v53;
      v38 = v52;
      if (v53 != (char **)v52)
      {
        do
          v37 = sub_19C17B808(v37 - 12);
        while (v37 != v36);
        v38 = v52;
      }
      v53 = v36;
      operator delete(v38);
    }
  }
  else
  {
    sub_19C1C1840((uint64_t **)a3, *(uint64_t **)(a1 + 72));
    *(_QWORD *)(a3 + 96) = *(_QWORD *)(v6 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)v48, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
  }
}

void sub_19C2166C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  char **v28;
  uint64_t v29;

  sub_19C17B808(v28);
  sub_19C07C924(a10, *(_QWORD **)(v29 - 184));
  sub_19C17AA64((void **)(v29 - 168));
  _Unwind_Resume(a1);
}

void sub_19C216760(char *a1@<X8>)
{
  a1[23] = 17;
  strcpy(a1, "genetic_optimizer");
}

void sub_19C216784(char *a1@<X8>)
{
  a1[23] = 21;
  strcpy(a1, "acquisition_optimizer");
}

_QWORD *sub_19C2167AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *a1 = &unk_1E3D21618;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 17) < 0)
          operator delete(*(void **)(v3 - 40));
        v3 -= 40;
      }
      while (v3 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  v5 = a1[2];
  if (v5)
  {
    v6 = a1[3];
    v7 = (void *)a1[2];
    if (v6 != v5)
    {
      do
      {
        if (*(char *)(v6 - 25) < 0)
          operator delete(*(void **)(v6 - 48));
        v6 -= 48;
      }
      while (v6 != v5);
      v7 = (void *)a1[2];
    }
    a1[3] = v5;
    operator delete(v7);
  }
  return a1;
}

void sub_19C216874(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  uint64_t *v11;
  uint64_t *v12;
  char **v13;
  uint64_t *v14;
  void *__p[4];
  uint64_t *v16;
  uint64_t *v17[13];
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;

  v18 = 5;
  v20 = 0;
  v21 = 0;
  v19 = 0;
  v3 = *(_QWORD *)(a1 + 72);
  v2 = (uint64_t *)(a1 + 72);
  if (v3 == *(_QWORD *)(a1 + 80))
  {
    v12 = 0;
    *(_DWORD *)(a1 + 64) = 5;
    if ((int *)(a1 + 64) == &v18)
      goto LABEL_18;
    goto LABEL_17;
  }
  do
  {
    sub_19C1C1840(v17, (uint64_t *)v3);
    v17[12] = *(uint64_t **)(v3 + 96);
    sub_19C1CC660(*(char ***)(a1 + 72), *(_QWORD *)(a1 + 80), (uint64_t)__p, 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(_QWORD *)(a1 + 80) - *(_QWORD *)(a1 + 72)) >> 3));
    *(_QWORD *)(a1 + 80) = sub_19C17B808((char **)(*(_QWORD *)(a1 + 80) - 104));
    v16 = 0;
    v4 = *(_QWORD *)(a1 + 8);
    sub_19C1CBD8C((__int128 **)v17, (uint64_t)__p);
    v5.n128_f64[0] = sub_19C216F28(*(_QWORD *)(v4 + 8), (uint64_t)__p);
    v7 = sqrt(v6);
    if (v7 < 0.00000001 || (v8 = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 120), v8 <= 0))
    {
      v10 = (*(double (**)(uint64_t, __n128))(*(_QWORD *)v4 + 8))(v4, v5);
    }
    else
    {
      v9 = v5.n128_f64[0];
      if (*(_DWORD *)(v4 + 56) != v8)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      (**(void (***)(uint64_t, double, double))v4)(v4, v9, v7);
    }
    *(double *)&v11 = v10;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    v16 = v11;
    if (*(double *)&v11 > (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8)))
      sub_19C1CC134(&v18, (uint64_t *)v17, &v16);
    sub_19C17B808((char **)v17);
    v3 = *(_QWORD *)(a1 + 72);
  }
  while (v3 != *(_QWORD *)(a1 + 80));
  v12 = v19;
  *(_DWORD *)(a1 + 64) = v18;
  if ((int *)(a1 + 64) != &v18)
  {
LABEL_17:
    sub_19C1CC414(v2, v12, v20, 0x4EC4EC4EC4EC4EC5 * (v20 - v12));
    v12 = v19;
  }
LABEL_18:
  if (v12)
  {
    v13 = (char **)v20;
    v14 = v12;
    if (v20 != v12)
    {
      do
        v13 = sub_19C17B808(v13 - 13);
      while (v13 != (char **)v12);
      v14 = v19;
    }
    v20 = v12;
    operator delete(v14);
  }
}

void sub_19C216AA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_19C1CB740(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_19C216AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  sub_19C17B808((char **)va);
  sub_19C1CB740(v7 - 120);
  _Unwind_Resume(a1);
}

void sub_19C216ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v15;

  if (__p)
    operator delete(__p);
  sub_19C17B808(&a15);
  sub_19C1CB740(v15 - 120);
  _Unwind_Resume(a1);
}

void sub_19C216B08(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  int v5;
  void *__p[3];
  _QWORD v7[313];
  std::random_device v8;
  double *v9[3];

  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = a2 + 16;
  *(_QWORD *)(a2 + 24) = 0;
  sub_19C1CCB54(a1, __p);
  sub_19C17A140(v7, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v3 = 50;
  do
  {
    v5 = sub_19C1CCF6C((uint64_t)v9, (uint64_t)v7, v9);
    v4 = sub_19C1CCC40((int *)a2, &v5);
    ++*(_DWORD *)v4;
    --v3;
  }
  while (v3);
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
  std::random_device::~random_device(&v8);
}

void sub_19C216BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  _QWORD **v15;

  if (__p)
  {
    operator delete(__p);
    sub_19C07C924(v14, *v15);
    _Unwind_Resume(a1);
  }
  sub_19C07C924(v14, *v15);
  _Unwind_Resume(a1);
}

void sub_19C216C44(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  void *v6[4];
  void *__p[4];
  void *v8[4];
  _OWORD v9[2];

  sub_19C1C1840(a3, a2);
  sub_19C1CD184((__int128 **)a2, (uint64_t)v8);
  sub_19C216DD0(a1, (uint64_t *)v8, v9);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v6);
  sub_19C216E7C(a1, (uint64_t *)v6, __p);
  sub_19C1CD7E0((uint64_t *)a3, (uint64_t *)v9);
  sub_19C1CD99C((uint64_t)a3, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v6[0])
  {
    v6[1] = v6[0];
    operator delete(v6[0]);
  }
  if (*(_QWORD *)&v9[0])
  {
    *((_QWORD *)&v9[0] + 1) = *(_QWORD *)&v9[0];
    operator delete(*(void **)&v9[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
}

void sub_19C216D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  char **v18;
  uint64_t v19;
  void *v21;
  void *v22;

  if (__p)
  {
    operator delete(__p);
    v21 = *(void **)(v19 - 64);
    if (!v21)
    {
LABEL_3:
      v22 = a17;
      if (!a17)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v21 = *(void **)(v19 - 64);
    if (!v21)
      goto LABEL_3;
  }
  *(_QWORD *)(v19 - 56) = v21;
  operator delete(v21);
  v22 = a17;
  if (!a17)
  {
LABEL_4:
    sub_19C17B808(v18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(v22);
  sub_19C17B808(v18);
  _Unwind_Resume(a1);
}

double sub_19C216DD0@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = (uint64_t *)(a1 + 16);
  if (sub_19C178A44((uint64_t *)(a1 + 16)))
  {
    sub_19C178B08(v5, (uint64_t *)v7);
    sub_19C239578(a2, (uint64_t)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C216E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C216E7C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  double result;
  void *v7[4];
  void *__p;
  void *v9;

  v5 = a1 + 16;
  if (sub_19C179558(a1 + 16))
  {
    sub_19C17961C(v5, (uint64_t *)v7);
    sub_19C23A200(a2, (uint64_t *)v7, (uint64_t)a3);
    if (__p)
    {
      v9 = __p;
      operator delete(__p);
    }
    if (v7[0])
    {
      v7[1] = v7[0];
      operator delete(v7[0]);
    }
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_19C216F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C176E10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_19C216F28(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;
  double v6;
  double *__A[3];
  vDSP_Length __N;
  double __C;

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C21588C(a1, a2, (uint64_t)__A);
    __C = 0.0;
    vDSP_dotprD(__A[0], 1, *(const double **)(a1 + 256), 1, &__C, (int)__N);
    v4 = __C;
    __C = 0.0;
    vDSP_meanvD(*(const double **)(a1 + 288), 1, &__C, *(int *)(a1 + 312));
    v5 = __C;
    sub_19C217108(a1, a2, (uint64_t)__A);
    if (__A[0])
    {
      __A[1] = __A[0];
      operator delete(__A[0]);
    }
    return v5 + v4;
  }
  else
  {
    v6 = sub_19C2157AC(a1, a2);
    sub_19C217030(a1, a2);
  }
  return v6;
}

void sub_19C217010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_19C217030(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;
  double v6;
  double v8;
  double v9;
  double v10;
  void *__p[4];

  if (*(_DWORD *)(a1 + 120))
  {
    sub_19C21588C(a1, a2, (uint64_t)__p);
    sub_19C217108(a1, a2, (uint64_t)__p);
    v5 = v4;
    v6 = *(double *)(a1 + 16);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    return v6 + v5;
  }
  else
  {
    v8 = sub_19C215B48(a1 + 8, a2, a2);
    v9 = *(double *)(a1 + 24);
    return *(double *)(a1 + 16) + exp(-v8) * v9 * (v8 + 1.0 + v10);
  }
}

void sub_19C2170EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C217108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  _OWORD *v20;
  unsigned int v21;
  double v22;
  void *__p[3];
  int v24;
  double *__B[3];
  vDSP_Length __N;

  sub_19C1CE734(a1 + 192, (uint64_t)__p);
  v6 = *(unsigned int *)(a1 + 216);
  if ((int)v6 >= 1)
  {
    v7 = 0;
    v8 = *(_DWORD *)(a1 + 220);
    v9 = v24;
    v10 = 1;
    v11 = -1;
    v12 = __p[0];
    do
    {
      if (v8 <= v10)
        v13 = v10;
      else
        v13 = v8;
      v14 = v7 + 1;
      if ((int)v7 + 1 >= v8)
        goto LABEL_3;
      v15 = 0;
      v16 = v13 + v11;
      v17 = (int)v7 * (uint64_t)v9;
      if ((v13 + v11) < 4)
      {
        v18 = v7 + 1;
      }
      else
      {
        v18 = v7 + 1;
        if (v13 - (int)v7 + v10 - 2 >= v10)
        {
          v19 = 0;
          v15 = v16 & 0xFFFFFFFC;
          v18 = v14 + (v16 & 0xFFFFFFFC);
          do
          {
            v20 = &v12[v17 + v10 + v19];
            *v20 = 0uLL;
            v20[1] = 0uLL;
            v19 += 4;
          }
          while ((v16 & 0xFFFFFFFC) != v19);
          if (v16 == v15)
            goto LABEL_3;
        }
      }
      v21 = v13 - v15;
      do
      {
        v12[v17 + v18] = 0;
        v18 = ++v15 + v14;
        --v21;
      }
      while (v10 != v21);
LABEL_3:
      ++v7;
      ++v10;
      --v11;
    }
    while (v7 != v6);
  }
  sub_19C1CE5B4((uint64_t)__p, a3, (uint64_t)__B);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v22 = sub_19C215B48(a1 + 8, a2, a2);
  __p[0] = 0;
  vDSP_dotprD(__B[0], 1, __B[0], 1, (double *)__p, (int)__N);
  if (__B[0])
  {
    __B[1] = __B[0];
    operator delete(__B[0]);
  }
  exp(-v22);
}

void sub_19C2172DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C21730C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void **v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  void *v32[4];
  void *v33[4];
  void *v34;
  void **v35;
  uint64_t v36;
  void *__p;
  void **v38;
  uint64_t v39;

  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_19C17AF88(&v34, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
  __p = 0;
  v38 = 0;
  v39 = 0;
  sub_19C17B16C(&__p, a3[3], a3[4], 0xCCCCCCCCCCCCCCCDLL * ((a3[4] - a3[3]) >> 3));
  *(_QWORD *)a1 = &unk_1E3D21618;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  sub_19C17AF88((_QWORD *)(a1 + 16), (uint64_t)v34, (uint64_t)v35, 0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (_BYTE *)v34) >> 4));
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_19C17B16C((_QWORD *)(a1 + 40), (uint64_t)__p, (uint64_t)v38, 0xCCCCCCCCCCCCCCCDLL * (((char *)v38 - (_BYTE *)__p) >> 3));
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v38;
    v10 = __p;
    if (v38 != __p)
    {
      do
      {
        if (*((char *)v9 - 17) < 0)
          operator delete(*(v9 - 5));
        v9 -= 5;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v38 = v8;
    operator delete(v10);
  }
  v11 = (void **)v34;
  if (v34)
  {
    v12 = v35;
    v13 = v34;
    if (v35 != v34)
    {
      do
      {
        if (*((char *)v12 - 25) < 0)
          operator delete(*(v12 - 6));
        v12 -= 6;
      }
      while (v12 != v11);
      v13 = v34;
    }
    v35 = v11;
    operator delete(v13);
  }
  *(_QWORD *)a1 = &unk_1E3D212E8;
  v14 = sub_19C178A44(a3);
  sub_19C1CF858(a1 + 64, v14);
  sub_19C1C81AC(a1 + 184);
  sub_19C178B08(a3, (uint64_t *)v32);
  sub_19C1D0468(a1 + 64, (uint64_t *)v32);
  sub_19C1D0594(a1 + 64, (uint64_t *)v33);
  if (v33[0])
  {
    v33[1] = v33[0];
    operator delete(v33[0]);
  }
  if (v32[0])
  {
    v32[1] = v32[0];
    operator delete(v32[0]);
  }
  if ((a4 & 0xFF00000000) != 0)
  {
    v15 = 0;
    *(_DWORD *)(a1 + 7776) = a4;
    v16 = 1;
    v17 = a4;
    do
    {
      v18 = 1812433253 * (v17 ^ (v17 >> 30));
      v17 = v18 + v16;
      *(_DWORD *)(a1 + 7780 + 4 * v15) = v15 + v18 + 1;
      ++v16;
      ++v15;
    }
    while (v15 != 623);
    *(_QWORD *)(a1 + 10272) = 0;
    *(_DWORD *)(a1 + 184) = a4;
    v19 = 1;
    v20 = 47;
    v21 = a4;
    do
    {
      v22 = 1812433253 * (v21 ^ (v21 >> 30));
      v21 = v22 + v19;
      *(_DWORD *)(a1 + 4 * v20) = v20 + v22 - 46;
      ++v19;
      ++v20;
    }
    while (v20 != 670);
    v23 = 0;
    *(_QWORD *)(a1 + 2680) = 0;
    *(_DWORD *)(a1 + 2712) = a4;
    v24 = 1;
    v25 = a4;
    do
    {
      v26 = 1812433253 * (v25 ^ (v25 >> 30));
      v25 = v26 + v24;
      *(_DWORD *)(a1 + 2716 + 4 * v23) = v23 + v26 + 1;
      ++v24;
      ++v23;
    }
    while (v23 != 623);
    v27 = 0;
    *(_QWORD *)(a1 + 5208) = 0;
    *(_DWORD *)(a1 + 5232) = a4;
    v28 = 1;
    v29 = a4;
    do
    {
      v30 = 1812433253 * (v29 ^ (v29 >> 30));
      v29 = v30 + v28;
      *(_DWORD *)(a1 + 5236 + 4 * v27) = v27 + v30 + 1;
      ++v28;
      ++v27;
    }
    while (v27 != 623);
    *(_QWORD *)(a1 + 7728) = 0;
    sub_19C23B684();
  }
  return a1;
}

void sub_19C217628(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  sub_19C1CF8E8(v2);
  sub_19C2167AC(v1);
  _Unwind_Resume(a1);
}

void sub_19C2176BC(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_19C2167AC(v1);
  _Unwind_Resume(a1);
}

void sub_19C2176D4(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_19C217BEC(a1);
  operator delete(v1);
}

void sub_19C2176E8(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  double v6;
  void **v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t **v13;
  uint64_t **i;
  uint64_t **v15;
  char **v16;
  uint64_t **v17;
  char **v18;
  char **v19;
  void *v20;
  double v21;
  double v22;
  BOOL v23;
  char v24;
  __int128 **v25;
  char **v26;
  char *v27;
  void *__p;
  char **v29;
  uint64_t *v30[12];
  _OWORD v31[3];
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[2];
  double v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  __int128 **v43;
  char *v44;
  uint64_t **v45;
  uint64_t **v46;

  v32 = 0u;
  memset(v31, 0, sizeof(v31));
  *(_QWORD *)&v32 = (char *)&v32 + 8;
  v35[0] = 0;
  v35[1] = 0;
  v33 = 0;
  v34 = v35;
  v6 = (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8));
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)v31);
  *(double *)(a3 + 96) = v6;
  sub_19C17B808((char **)v31);
  v38 = 0;
  v39 = 0;
  v37 = 0;
  sub_19C17AF88(&v37, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 4));
  v40 = 0;
  v41 = 0;
  v42 = 0;
  sub_19C17B16C(&v40, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 3));
  sub_19C17A144((uint64_t *)&v37, a1 + 184, 5, (char **)&v43);
  v7 = v40;
  if (v40)
  {
    v8 = v41;
    v9 = v40;
    if (v41 != v40)
    {
      do
      {
        if (*((char *)v8 - 17) < 0)
          operator delete(*(v8 - 5));
        v8 -= 5;
      }
      while (v8 != v7);
      v9 = v40;
    }
    v41 = v7;
    operator delete(v9);
  }
  v10 = (uint64_t)v37;
  if (v37)
  {
    v11 = v38;
    v12 = v37;
    if ((void *)v38 != v37)
    {
      do
      {
        if (*(char *)(v11 - 25) < 0)
          operator delete(*(void **)(v11 - 48));
        v11 -= 48;
      }
      while (v11 != v10);
      v12 = v37;
    }
    v38 = v10;
    operator delete(v12);
  }
  sub_19C217C94(a1, v43, (uint64_t)v31);
  sub_19C1C9C8C(a3, (uint64_t)v31);
  *(double *)(a3 + 96) = v36;
  sub_19C17B808((char **)v31);
  sub_19C217C94(a1, v43 + 12, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C217C94(a1, v43 + 24, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C217C94(a1, v43 + 36, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C217C94(a1, v43 + 48, (uint64_t)v31);
  if (v36 > *(double *)(a3 + 96))
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C1CCA84((uint64_t ***)&__p, a2);
  sub_19C1CCA84(&v45, (uint64_t **)&__p);
  v13 = v45;
  if (v45 != v46)
  {
    for (i = v45 + 13; i != v46; i += 13)
    {
      if (*((double *)v13 + 12) < *((double *)i + 12))
        v13 = i;
    }
  }
  sub_19C1C1840((uint64_t **)v31, (uint64_t *)v13);
  v36 = *((double *)v13 + 12);
  v15 = v45;
  if (v45)
  {
    v16 = (char **)v46;
    v17 = v45;
    if (v46 != v45)
    {
      do
        v16 = sub_19C17B808(v16 - 13);
      while (v16 != (char **)v15);
      v17 = v45;
    }
    v46 = v15;
    operator delete(v17);
  }
  sub_19C1C5D14(v30, (uint64_t)v31);
  sub_19C17B808((char **)v31);
  v18 = (char **)__p;
  if (__p)
  {
    v19 = v29;
    v20 = __p;
    if (v29 != __p)
    {
      do
        v19 = sub_19C17B808(v19 - 13);
      while (v19 != v18);
      v20 = __p;
    }
    v29 = v18;
    operator delete(v20);
  }
  sub_19C217C94(a1, (__int128 **)v30, (uint64_t)v31);
  v21 = v36;
  v22 = *(double *)(a3 + 96);
  v23 = sub_19C1D16FC((uint64_t *)v31, v30);
  v24 = v21 <= v22 || v23;
  if ((v24 & 1) == 0)
  {
    sub_19C1C9C8C(a3, (uint64_t)v31);
    *(double *)(a3 + 96) = v36;
  }
  sub_19C17B808((char **)v31);
  sub_19C17B808((char **)v30);
  v25 = v43;
  if (v43)
  {
    v26 = (char **)v44;
    v27 = (char *)v43;
    if (v44 != (char *)v43)
    {
      do
        v26 = sub_19C17B808(v26 - 12);
      while (v26 != (char **)v25);
      v27 = (char *)v43;
    }
    v44 = (char *)v25;
    operator delete(v27);
  }
}

void sub_19C217B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  char **v5;
  uint64_t v6;
  char *v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, char *);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  sub_19C17B808((char **)va1);
  sub_19C17B808((char **)va);
  sub_19C17AA64((void **)(v6 - 112));
  sub_19C17B808(v5);
  _Unwind_Resume(a1);
}

void sub_19C217BCC(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "direct_optimizer");
}

_QWORD *sub_19C217BEC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = &unk_1E3D212E8;
  std::random_device::~random_device((std::random_device *)(a1 + 10280));
  std::random_device::~random_device((std::random_device *)(a1 + 7736));
  std::random_device::~random_device((std::random_device *)(a1 + 5216));
  std::random_device::~random_device((std::random_device *)(a1 + 2688));
  *(_QWORD *)(a1 + 64) = &unk_1E3D21150;
  sub_19C23AA14(*(_QWORD *)(a1 + 72));
  v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(_QWORD *)(a1 + 136) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 104);
  if (v3)
  {
    *(_QWORD *)(a1 + 112) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 80);
  if (v4)
  {
    *(_QWORD *)(a1 + 88) = v4;
    operator delete(v4);
  }
  return sub_19C2167AC((_QWORD *)a1);
}

void sub_19C217C94(uint64_t a1@<X0>, __int128 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float64x2_t *v9;
  char *v10;
  uint64_t v11;
  float64x2_t *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  int64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  int v25;
  double v26;
  double v27;
  void *v28[3];
  unsigned int v29;
  void *v30;
  char *v31;
  char *v32;
  int v33;
  void *v34;
  void *v35;
  void *__p[12];
  void *v37[4];
  _QWORD v38[2];

  v38[0] = a1;
  v38[1] = a2;
  v6 = a1 + 64;
  sub_19C1CD184(a2, (uint64_t)__p);
  sub_19C218018(v6, (uint64_t)v38, (uint64_t *)__p, (uint64_t)v37);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_19C1CD508((uint64_t)a2, (uint64_t)&v34);
  sub_19C1C1840((uint64_t **)__p, (uint64_t *)a2);
  sub_19C1CD7E0((uint64_t *)__p, (uint64_t *)v37);
  sub_19C1CD99C((uint64_t)__p, (uint64_t *)&v34);
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  v7 = *(_QWORD *)(a1 + 8);
  sub_19C1CD508((uint64_t)a2, (uint64_t)v28);
  v8 = v29;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  if (!v29)
  {
    v33 = 0;
    goto LABEL_15;
  }
  if ((v29 & 0x80000000) != 0)
    sub_19C07DA0C();
  v9 = (float64x2_t *)operator new(8 * (int)v29);
  v30 = v9;
  v32 = (char *)&v9->f64[(int)v8];
  bzero(v9, 8 * (int)v8);
  v31 = (char *)&v9->f64[(int)v8];
  v33 = v8;
  v10 = (char *)v28[0];
  if (v8 < 8)
  {
    v11 = 0;
LABEL_13:
    v20 = v8 - v11;
    v21 = v11 << 32;
    do
    {
      *(double *)((char *)v9->f64 + (v21 >> 29)) = (double)*(int *)&v10[v21 >> 30];
      v21 += 0x100000000;
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
  v11 = v8 & 0xFFFFFFF8;
  v12 = v9 + 2;
  v13 = (char *)v28[0] + 16;
  v14 = v11;
  do
  {
    v15 = *((_OWORD *)v13 - 1);
    v16.i64[0] = (int)v15;
    v16.i64[1] = SDWORD1(v15);
    v17 = vcvtq_f64_s64(v16);
    v16.i64[0] = SDWORD2(v15);
    v16.i64[1] = SHIDWORD(v15);
    v18 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*(_OWORD *)v13;
    v16.i64[1] = (int)HIDWORD(*(_QWORD *)v13);
    v19 = vcvtq_f64_s64(v16);
    v16.i64[0] = (int)*((_QWORD *)v13 + 1);
    v16.i64[1] = (int)HIDWORD(*(_OWORD *)v13);
    v12[-2] = v17;
    v12[-1] = v18;
    *v12 = v19;
    v12[1] = vcvtq_f64_s64(v16);
    v12 += 4;
    v13 += 32;
    v14 -= 8;
  }
  while (v14);
  if (v11 != v8)
    goto LABEL_13;
LABEL_15:
  sub_19C1CEDDC((uint64_t)v37, (uint64_t)&v30, (uint64_t)&v34);
  v22 = sub_19C216F28(*(_QWORD *)(v7 + 8), (uint64_t)&v34);
  v24 = sqrt(v23);
  if (v24 < 0.00000001 || (v25 = *(_DWORD *)(*(_QWORD *)(v7 + 8) + 120), v25 <= 0))
  {
    v26 = (*(double (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  else
  {
    if (*(_DWORD *)(v7 + 56) != v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    (**(void (***)(uint64_t, double, double))v7)(v7, v22, v24);
  }
  v27 = v26;
  sub_19C1C1840((uint64_t **)a3, (uint64_t *)__p);
  *(double *)(a3 + 96) = v27;
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  if (v30)
  {
    v31 = (char *)v30;
    operator delete(v30);
  }
  if (v28[0])
  {
    v28[1] = v28[0];
    operator delete(v28[0]);
  }
  sub_19C17B808((char **)__p);
  if (v37[0])
  {
    v37[1] = v37[0];
    operator delete(v37[0]);
  }
}

void sub_19C217F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v24;
  void *v25;

  if (a13)
  {
    operator delete(a13);
    v24 = __p;
    if (!__p)
    {
LABEL_4:
      sub_19C17B808((char **)&a21);
      v25 = *(void **)(v22 - 128);
      if (v25)
      {
        *(_QWORD *)(v22 - 120) = v25;
        operator delete(v25);
      }
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v24 = __p;
    if (!__p)
      goto LABEL_4;
  }
  operator delete(v24);
  goto LABEL_4;
}

void sub_19C218018(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C218568;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C218460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C21826CLL);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

void sub_19C218568(uint64_t **a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  void *__p;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v18 = 0;
  v19 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    __p = 0;
    v18 = 0;
    v19 = 0;
    v20 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  __p = v8;
  v18 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v19 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v20 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C218738(a3, (uint64_t)&__p);
    if (__p)
    {
      v18 = (char *)__p;
      operator delete(__p);
    }
  }
  else
  {
    sub_19C218738(a3, (uint64_t)&__p);
    __break(1u);
  }
}

void sub_19C2186FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C21871C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

uint64_t sub_19C218738(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  float64x2_t *v5;
  char *v6;
  uint64_t v7;
  float64x2_t *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  int64x2_t v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  int v21;
  double v22;
  double v23;
  void *v25[3];
  unsigned int v26;
  void *v27;
  char *v28;
  char *v29;
  int v30;
  void *__p[4];

  v3 = *(_QWORD *)(*a1 + 8);
  sub_19C1CD508(a1[1], (uint64_t)v25);
  v4 = v26;
  v28 = 0;
  v29 = 0;
  v27 = 0;
  if (!v26)
  {
    v30 = 0;
    goto LABEL_11;
  }
  if ((v26 & 0x80000000) != 0)
    sub_19C07DA0C();
  v5 = (float64x2_t *)operator new(8 * (int)v26);
  v27 = v5;
  v29 = (char *)&v5->f64[(int)v4];
  bzero(v5, 8 * (int)v4);
  v28 = (char *)&v5->f64[(int)v4];
  v30 = v4;
  v6 = (char *)v25[0];
  if (v4 < 8)
  {
    v7 = 0;
LABEL_9:
    v16 = v4 - v7;
    v17 = v7 << 32;
    do
    {
      *(double *)((char *)v5->f64 + (v17 >> 29)) = (double)*(int *)&v6[v17 >> 30];
      v17 += 0x100000000;
      --v16;
    }
    while (v16);
    goto LABEL_11;
  }
  v7 = v4 & 0xFFFFFFF8;
  v8 = v5 + 2;
  v9 = (char *)v25[0] + 16;
  v10 = v7;
  do
  {
    v11 = *((_OWORD *)v9 - 1);
    v12.i64[0] = (int)v11;
    v12.i64[1] = SDWORD1(v11);
    v13 = vcvtq_f64_s64(v12);
    v12.i64[0] = SDWORD2(v11);
    v12.i64[1] = SHIDWORD(v11);
    v14 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*(_OWORD *)v9;
    v12.i64[1] = (int)HIDWORD(*(_QWORD *)v9);
    v15 = vcvtq_f64_s64(v12);
    v12.i64[0] = (int)*((_QWORD *)v9 + 1);
    v12.i64[1] = (int)HIDWORD(*(_OWORD *)v9);
    v8[-2] = v13;
    v8[-1] = v14;
    *v8 = v15;
    v8[1] = vcvtq_f64_s64(v12);
    v8 += 4;
    v9 += 32;
    v10 -= 8;
  }
  while (v10);
  if (v7 != v4)
    goto LABEL_9;
LABEL_11:
  sub_19C1CEDDC(a2, (uint64_t)&v27, (uint64_t)__p);
  v18 = sub_19C216F28(*(_QWORD *)(v3 + 8), (uint64_t)__p);
  v20 = sqrt(v19);
  if (v20 < 0.00000001 || (v21 = *(_DWORD *)(*(_QWORD *)(v3 + 8) + 120), v21 <= 0))
  {
    v22 = (*(double (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  else
  {
    if (*(_DWORD *)(v3 + 56) != v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    (**(void (***)(uint64_t, double, double))v3)(v3, v18, v20);
  }
  v23 = v22;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v27)
  {
    v28 = (char *)v27;
    operator delete(v27);
  }
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
  return *(_QWORD *)&v23;
}

void sub_19C218938(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  void *v19;

  if (__p)
  {
    operator delete(__p);
    v19 = a9;
    if (!a9)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v19 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C2189B8(uint64_t a1)
{
  char **v2;
  char **v3;
  char **v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char **v13;
  char **v14;
  void *v15;

  *(_QWORD *)a1 = &unk_1E3D21858;
  v2 = *(char ***)(a1 + 10696);
  if (v2)
  {
    v3 = *(char ***)(a1 + 10704);
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_19C17B808(v3 - 12);
      while (v3 != v2);
      v4 = *(char ***)(a1 + 10696);
    }
    *(_QWORD *)(a1 + 10704) = v2;
    operator delete(v4);
  }
  std::random_device::~random_device((std::random_device *)(a1 + 10688));
  std::random_device::~random_device((std::random_device *)(a1 + 8144));
  std::random_device::~random_device((std::random_device *)(a1 + 5624));
  std::random_device::~random_device((std::random_device *)(a1 + 3096));
  v5 = *(_QWORD *)(a1 + 584);
  *(_QWORD *)(a1 + 584) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  *(_QWORD *)(a1 + 504) = &unk_1E3D20FC0;
  v6 = *(void **)(a1 + 520);
  if (v6)
  {
    *(_QWORD *)(a1 + 528) = v6;
    operator delete(v6);
  }
  sub_19C1EC3CC((_QWORD *)(a1 + 176));
  v7 = *(_QWORD *)(a1 + 152);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 160);
    v9 = *(void **)(a1 + 152);
    if (v8 != v7)
    {
      v10 = *(_QWORD *)(a1 + 160);
      do
      {
        v12 = *(void **)(v10 - 56);
        v10 -= 56;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v8 - 48) = v11;
          operator delete(v11);
        }
        v8 = v10;
      }
      while (v10 != v7);
      v9 = *(void **)(a1 + 152);
    }
    *(_QWORD *)(a1 + 160) = v7;
    operator delete(v9);
  }
  *(_QWORD *)a1 = &unk_1E3D214F8;
  sub_19C1C2E88(a1 + 32);
  v13 = *(char ***)(a1 + 8);
  if (v13)
  {
    v14 = *(char ***)(a1 + 16);
    v15 = *(void **)(a1 + 8);
    if (v14 != v13)
    {
      do
        v14 = sub_19C17B808(v14 - 13);
      while (v14 != v13);
      v15 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v13;
    operator delete(v15);
  }
  return a1;
}

void sub_19C218B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  void *__p[4];

  v5 = (uint64_t *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 96);
  v6 = *(_DWORD *)(a1 + 120);
  v7 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 120) = v6 + 1;
  *(_DWORD *)(a1 + 124) = v7;
  v8 = v7 * (v6 + 1);
  v9 = (*(_QWORD *)(a1 + 104) - v4) >> 3;
  if (v8 <= v9)
  {
    if (v8 < v9)
      *(_QWORD *)(a1 + 104) = v4 + 8 * v8;
  }
  else
  {
    sub_19C17C9D8(a1 + 96, v8 - v9);
    v6 = *(_DWORD *)(a1 + 120) - 1;
  }
  sub_19C1CE998(a2, (uint64_t)__p);
  v10 = *(int *)(a1 + 124);
  v11 = (char *)__p[0];
  if (!(_DWORD)v10)
  {
    if (!__p[0])
      goto LABEL_18;
    goto LABEL_17;
  }
  v12 = (int)v10 * (uint64_t)v6;
  v13 = *v5;
  if (v10 >= 8 && (v14 = 8 * v12 + v13, v14 - (unint64_t)__p[0] >= 0x20))
  {
    v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    v20 = (__int128 *)((char *)__p[0] + 16);
    v21 = (_OWORD *)(v14 + 16);
    v22 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v23 = *v20;
      *(v21 - 1) = *(v20 - 1);
      *v21 = v23;
      v20 += 2;
      v21 += 2;
      v22 -= 4;
    }
    while (v22);
    if (v15 == v10)
      goto LABEL_17;
  }
  else
  {
    v15 = 0;
  }
  v16 = v10 - v15;
  v17 = (_QWORD *)(v13 + 8 * (v15 + v12));
  v18 = &v11[8 * v15];
  do
  {
    v19 = *(_QWORD *)v18;
    v18 += 8;
    *v17++ = v19;
    --v16;
  }
  while (v16);
LABEL_17:
  __p[1] = v11;
  operator delete(v11);
LABEL_18:
  sub_19C218C68(a1, 1, 1);
}

void sub_19C218C68(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  signed int v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  char *v32;
  char *v33;
  uint64_t v35;
  void *__p;
  void *v37;
  uint64_t v38;
  unsigned int v39;
  char *__C;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  if (a2)
  {
    v5 = (_QWORD *)(a1 + 128);
    v4 = *(_QWORD *)(a1 + 128);
    v6 = *(_DWORD *)(a1 + 120);
    *(_DWORD *)(a1 + 152) = v6;
    v7 = (*(_QWORD *)(a1 + 136) - v4) >> 3;
    v35 = v6;
    if (v6 <= v7)
    {
      if (v6 < v7)
        *(_QWORD *)(a1 + 136) = v4 + 8 * v6;
    }
    else
    {
      sub_19C17C9D8(a1 + 128, v6 - v7);
      v6 = *(_DWORD *)(a1 + 120);
      v35 = v6;
    }
    if (v6)
    {
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *(_QWORD *)(a1 + 96);
        v11 = *(_DWORD *)(a1 + 124);
        __C = 0;
        v41 = 0;
        v42 = 0;
        if (v11)
          break;
        v12 = 0;
        v37 = 0;
        v38 = 0;
        __p = 0;
        v39 = 0;
LABEL_26:
        __C = 0;
        vDSP_meanvD(*(const double **)(a1 + 288), 1, (double *)&__C, *(int *)(a1 + 312));
        *(_QWORD *)(*v5 + 8 * v9) = __C;
        if (__p)
        {
          v37 = __p;
          operator delete(__p);
        }
        if (v12)
          operator delete(v12);
        ++v9;
        v8 += 8;
        if (v9 == v35)
          goto LABEL_34;
      }
      if (v11 < 0)
        sub_19C07DA0C();
      v12 = operator new(8 * v11);
      bzero(v12, 8 * v11);
      if (v11 >= 8 && (unint64_t)v12 - v10 - 8 * v9 * v11 >= 0x20)
      {
        v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
        v28 = (__int128 *)(v10 + v8 * v11 + 16);
        v29 = v12 + 1;
        v30 = v13;
        do
        {
          v31 = *v28;
          *(v29 - 1) = *(v28 - 1);
          *v29 = v31;
          v28 += 2;
          v29 += 2;
          v30 -= 4;
        }
        while (v30);
        if (v13 == v11)
        {
LABEL_16:
          __p = 0;
          v37 = 0;
          v38 = 0;
          v39 = v11;
          sub_19C17C9D8((uint64_t)&__p, v11);
          v19 = v39;
          if ((int)v39 >= 1)
          {
            v20 = 0;
            v21 = (char *)__p;
            if (v39 < 4)
              goto LABEL_22;
            if ((unint64_t)((_BYTE *)__p - (_BYTE *)v12) < 0x20)
              goto LABEL_22;
            v22 = 0;
            v20 = v39 & 0xFFFFFFFC;
            v23 = (8 * v39) & 0x7FFFFFFE0;
            do
            {
              v24 = v12[v22 / 0x10 + 1];
              v25 = &v21[v22];
              *(_OWORD *)v25 = v12[v22 / 0x10];
              *((_OWORD *)v25 + 1) = v24;
              v22 += 32;
            }
            while (v23 != v22);
            if (v20 != v19)
            {
LABEL_22:
              v26 = v19 - v20;
              v27 = v20 << 32;
              do
              {
                *(_QWORD *)&v21[v27 >> 29] = *(_QWORD *)((char *)v12 + (v27 >> 29));
                v27 += 0x100000000;
                --v26;
              }
              while (v26);
            }
          }
          goto LABEL_26;
        }
      }
      else
      {
        v13 = 0;
      }
      v14 = v11 - v13;
      v15 = 8 * v13;
      v16 = (_QWORD *)v12 + v13;
      v17 = (uint64_t *)(v10 + v15 + v8 * v11);
      do
      {
        v18 = *v17++;
        *v16++ = v18;
        --v14;
      }
      while (v14);
      goto LABEL_16;
    }
  }
LABEL_34:
  sub_19C218FE4(a1 + 8, (uint64_t *)(a1 + 96), (uint64_t)&__C);
  if ((char **)(a1 + 160) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 160), __C, v41, (v41 - __C) >> 3);
  v32 = __C;
  *(_QWORD *)(a1 + 184) = v43;
  if (v32)
  {
    v41 = v32;
    operator delete(v32);
  }
  sub_19C1D3978(a1 + 160, (uint64_t)&__C);
  if ((char **)(a1 + 192) != &__C)
    sub_19C11EAD0((_QWORD *)(a1 + 192), __C, v41, (v41 - __C) >> 3);
  v33 = __C;
  *(_QWORD *)(a1 + 216) = v43;
  if (v33)
  {
    v41 = v33;
    operator delete(v33);
  }
  sub_19C2194B0(a1);
  if (a3)
    sub_19C2196D0((int32x2_t *)a1);
}

void sub_19C218F80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C218FE4(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  size_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  signed int v12;
  char *v13;
  size_t v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  _OWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  __int128 *v34;
  _OWORD *v35;
  unint64_t v36;
  __int128 v37;
  __int128 *v38;
  _OWORD *v39;
  unint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  char *v58;
  signed int v59;
  void *__p;
  char *v61;
  char *v62;
  signed int v63;

  v4 = *((unsigned int *)a2 + 6);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  if (!(_DWORD)v4)
  {
    v7 = 0;
    *(_DWORD *)(a3 + 24) = 0;
    *(_DWORD *)(a3 + 28) = 0;
LABEL_41:
    v42 = (int)v4;
    if ((_DWORD)v4)
      goto LABEL_42;
    return;
  }
  v6 = 8 * (v4 * v4);
  v7 = (char *)operator new(v6);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 16) = &v7[v6];
  bzero(v7, v6);
  *(_QWORD *)(a3 + 8) = &v7[v6];
  *(_DWORD *)(a3 + 24) = v4;
  *(_DWORD *)(a3 + 28) = v4;
  if ((int)v4 <= 0)
    goto LABEL_41;
  v52 = 0;
  v8 = 0;
  v55 = 1;
  v48 = v4;
  v50 = a1;
  do
  {
    v9 = 0;
    v10 = 0;
    v49 = 8 * v8;
    v54 = (int)v8 * v4;
    v51 = v8;
    do
    {
      v11 = *a2;
      v12 = *((_DWORD *)a2 + 7);
      __p = 0;
      v61 = 0;
      v62 = 0;
      if (v12)
      {
        if (v12 < 0)
          sub_19C07DA0C();
        v13 = v7;
        v14 = 8 * v12;
        v15 = operator new(v14);
        bzero(v15, v14);
        if (v12 < 8 || (unint64_t)v15 - v11 - v49 * v12 < 0x20)
        {
          v16 = 0;
          goto LABEL_12;
        }
        v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v34 = (__int128 *)(v11 + v52 * v12 + 16);
        v35 = v15 + 1;
        v36 = v16;
        do
        {
          v37 = *v34;
          *(v35 - 1) = *(v34 - 1);
          *v35 = v37;
          v34 += 2;
          v35 += 2;
          v36 -= 4;
        }
        while (v36);
        if (v16 != v12)
        {
LABEL_12:
          v17 = v12 - v16;
          v18 = 8 * v16;
          v19 = (_QWORD *)v15 + v16;
          v20 = (uint64_t *)(v11 + v18 + v52 * v12);
          do
          {
            v21 = *v20++;
            *v19++ = v21;
            --v17;
          }
          while (v17);
        }
        v56 = 0;
        v57 = 0;
        v59 = 0;
        v58 = 0;
        v56 = operator new(8 * v12);
        v57 = (char *)v56 + v14;
        v58 = (char *)v56 + 8 * v12;
        v59 = v12;
        memcpy(v56, v15, 8 * v12);
        v22 = operator new(8 * v12);
        bzero(v22, 8 * v12);
        if (v12 < 8 || (unint64_t)v22 - v11 - 8 * v10 * v12 < 0x20)
        {
          v23 = 0;
          goto LABEL_17;
        }
        v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v38 = (__int128 *)(v11 + v9 * v12 + 16);
        v39 = v22 + 1;
        v40 = v23;
        do
        {
          v41 = *v38;
          *(v39 - 1) = *(v38 - 1);
          *v39 = v41;
          v38 += 2;
          v39 += 2;
          v40 -= 4;
        }
        while (v40);
        if (v23 != v12)
        {
LABEL_17:
          v24 = v12 - v23;
          v25 = 8 * v23;
          v26 = (_QWORD *)v22 + v23;
          v27 = (uint64_t *)(v11 + v25 + v9 * v12);
          do
          {
            v28 = *v27++;
            *v26++ = v28;
            --v24;
          }
          while (v24);
        }
        __p = 0;
        v61 = 0;
        v63 = 0;
        v62 = 0;
        v29 = (int)v10;
        __p = operator new(8 * v12);
        v61 = (char *)__p + v14;
        v62 = (char *)__p + 8 * v12;
        v63 = v12;
        memcpy(__p, v22, 8 * v12);
        v7 = v13;
        a1 = v50;
        v8 = v51;
        goto LABEL_21;
      }
      v15 = 0;
      v22 = 0;
      v57 = 0;
      v58 = 0;
      v56 = 0;
      v59 = 0;
      v29 = (int)v10;
      __p = 0;
      v61 = 0;
      v63 = 0;
      v62 = 0;
LABEL_21:
      v30 = sub_19C215B48(a1, (uint64_t)&v56, (uint64_t)&__p);
      v31 = *(double *)(a1 + 16);
      v33 = (v30 + 1.0 + v32) * (exp(-v30) * v31);
      if ((_DWORD)v8 == (_DWORD)v10)
        v33 = v33 + *(double *)(a1 + 8) + 1.0e-10;
      *(double *)&v7[8 * v29 + 8 * v54] = v33;
      if (__p)
      {
        v61 = (char *)__p;
        operator delete(__p);
      }
      if (v22)
        operator delete(v22);
      if (v56)
      {
        v57 = (char *)v56;
        operator delete(v56);
      }
      if (v15)
        operator delete(v15);
      ++v10;
      v9 += 8;
    }
    while (v10 != v55);
    ++v8;
    ++v55;
    v52 += 8;
    v4 = v48;
  }
  while (v8 != v48);
  v42 = v48;
LABEL_42:
  if (v42 != 1)
  {
    v43 = 0;
    v44 = 8 * v42;
    v45 = v7;
    do
    {
      if (v43)
      {
        v46 = 0;
        v47 = v45;
        do
        {
          *v47 = *(_QWORD *)&v7[8 * v46++];
          v47 = (_QWORD *)((char *)v47 + v44);
        }
        while (v43 != v46);
      }
      ++v43;
      ++v45;
      v7 += v44;
    }
    while (v43 != v42);
  }
}

void sub_19C219414(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C21943C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v28;

  if (__p)
  {
    operator delete(__p);
    if (!v25)
    {
LABEL_3:
      v28 = a18;
      if (!a18)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v25)
  {
    goto LABEL_3;
  }
  operator delete(v25);
  v28 = a18;
  if (!a18)
  {
LABEL_4:
    if (!v23)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v28);
  if (!v23)
  {
LABEL_5:
    *(_QWORD *)(v26 + 8) = v24;
    operator delete(v24);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(v23);
  *(_QWORD *)(v26 + 8) = v24;
  operator delete(v24);
  _Unwind_Resume(a1);
}

void sub_19C2194B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _OWORD *v16;
  unsigned int v17;
  void *v18[4];
  void *__p;
  char *v20;
  int v21;
  void *v22[3];
  int v23;

  sub_19C1CE734(a1 + 192, (uint64_t)v22);
  v2 = *(unsigned int *)(a1 + 216);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    v4 = *(_DWORD *)(a1 + 220);
    v5 = v23;
    v6 = 1;
    v7 = -1;
    v8 = v22[0];
    do
    {
      if (v4 <= v6)
        v9 = v6;
      else
        v9 = v4;
      v10 = v3 + 1;
      if ((int)v3 + 1 >= v4)
        goto LABEL_3;
      v11 = 0;
      v12 = v9 + v7;
      v13 = (int)v3 * (uint64_t)v5;
      if ((v9 + v7) < 4)
      {
        v14 = v3 + 1;
      }
      else
      {
        v14 = v3 + 1;
        if (v9 - (int)v3 + v6 - 2 >= v6)
        {
          v15 = 0;
          v11 = v12 & 0xFFFFFFFC;
          v14 = v10 + (v12 & 0xFFFFFFFC);
          do
          {
            v16 = &v8[v13 + v6 + v15];
            *v16 = 0uLL;
            v16[1] = 0uLL;
            v15 += 4;
          }
          while ((v12 & 0xFFFFFFFC) != v15);
          if (v12 == v11)
            goto LABEL_3;
        }
      }
      v17 = v9 - v11;
      do
      {
        v8[v13 + v14] = 0;
        v14 = ++v11 + v10;
        --v17;
      }
      while (v6 != v17);
LABEL_3:
      ++v3;
      ++v6;
      --v7;
    }
    while (v3 != v2);
  }
  sub_19C219934(a1, (uint64_t)v18);
  sub_19C1CE5B4((uint64_t)v22, (uint64_t)v18, (uint64_t)&__p);
  if ((void **)(a1 + 256) != &__p)
    sub_19C11EAD0((_QWORD *)(a1 + 256), (char *)__p, v20, (v20 - (_BYTE *)__p) >> 3);
  *(_DWORD *)(a1 + 280) = v21;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  sub_19C1CEB00((uint64_t)v22, &__p);
  sub_19C1D43B4((uint64_t)&__p, a1 + 256);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
  if (v22[0])
  {
    v22[1] = v22[0];
    operator delete(v22[0]);
  }
}

void sub_19C21966C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  if (a9)
    operator delete(a9);
  if (a17)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_19C2196D0(int32x2_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int32 v14;
  int v15;
  int v16;
  _QWORD *v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  _OWORD *v25;
  unsigned int v26;
  void *__p;
  char *v28;
  int32x2_t v29;

  v2 = a1[15].u32[0];
  sub_19C176BE8(v2, v2, (uint64_t)&__p);
  if ((int)v2 >= 1)
  {
    v3 = v29.i32[1] + 1;
    v4 = __p;
    if ((_DWORD)v2 == 1)
    {
      v5 = 0;
LABEL_7:
      v8 = v2 - v5;
      v9 = v5 << 32;
      do
      {
        v4[(v9 >> 32) * v3] = 0x3FF0000000000000;
        v9 += 0x100000000;
        --v8;
      }
      while (v8);
      goto LABEL_9;
    }
    v6 = 0;
    v5 = v2 & 0xFFFFFFFE;
    v7 = v5;
    do
    {
      v4[(v6 >> 32) * v3] = 0x3FF0000000000000;
      v4[((v6 >> 32) | 1) * v3] = 0x3FF0000000000000;
      v6 += 0x200000000;
      v7 -= 2;
    }
    while (v7);
    if (v5 != v2)
      goto LABEL_7;
  }
LABEL_9:
  if (&a1[28] != (int32x2_t *)&__p)
    sub_19C11EAD0(&a1[28], (char *)__p, v28, (v28 - (_BYTE *)__p) >> 3);
  v10 = (char *)__p;
  a1[31] = v29;
  if (v10)
  {
    v28 = v10;
    operator delete(v10);
  }
  sub_19C1CE734((uint64_t)&a1[24], (uint64_t)&__p);
  v11 = a1[27].u32[0];
  if ((int)v11 >= 1)
  {
    v12 = 0;
    v13 = a1[27].i32[1];
    v14 = v29.i32[1];
    v15 = 1;
    v16 = -1;
    v17 = __p;
    do
    {
      if (v13 <= v15)
        v18 = v15;
      else
        v18 = v13;
      v19 = v12 + 1;
      if ((int)v12 + 1 >= v13)
        goto LABEL_15;
      v20 = 0;
      v21 = v18 + v16;
      v22 = (int)v12 * (uint64_t)v14;
      if ((v18 + v16) < 4)
      {
        v23 = v12 + 1;
      }
      else
      {
        v23 = v12 + 1;
        if (v18 - (int)v12 + v15 - 2 >= v15)
        {
          v24 = 0;
          v20 = v21 & 0xFFFFFFFC;
          v23 = v19 + (v21 & 0xFFFFFFFC);
          do
          {
            v25 = &v17[v22 + v15 + v24];
            *v25 = 0uLL;
            v25[1] = 0uLL;
            v24 += 4;
          }
          while ((v21 & 0xFFFFFFFC) != v24);
          if (v21 == v20)
            goto LABEL_15;
        }
      }
      v26 = v18 - v20;
      do
      {
        v17[v22 + v23] = 0;
        v23 = ++v20 + v19;
        --v26;
      }
      while (v15 != v26);
LABEL_15:
      ++v12;
      ++v15;
      --v16;
    }
    while (v12 != v11);
  }
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
  sub_19C1CEB00((uint64_t)&a1[24], &__p);
  sub_19C1D44C8((uint64_t)&__p, a1 + 28);
  if (__p)
  {
    v28 = (char *)__p;
    operator delete(__p);
  }
}

void sub_19C219910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C219934(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  signed int v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  char *v28;

  v4 = *(_DWORD *)(a1 + 312);
  v5 = 8 * v4;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v6 = (char *)operator new(8 * v4);
    bzero(v6, 8 * v4);
    v7 = 0;
    v8 = &v6[v5];
    v9 = *(_QWORD *)(a1 + 288);
    if (v4 < 4)
      goto LABEL_46;
    if ((unint64_t)&v6[-v9] < 0x20)
      goto LABEL_46;
    v10 = 0;
    v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    v11 = v7;
    do
    {
      v12 = *(_OWORD *)(v9 + v10 + 16);
      v13 = &v6[v10];
      *(_OWORD *)v13 = *(_OWORD *)(v9 + v10);
      *((_OWORD *)v13 + 1) = v12;
      v10 += 32;
      v11 -= 4;
    }
    while (v11);
    if (v7 != v4)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v6[8 * v7] = *(_QWORD *)(v9 + 8 * v7);
        ++v7;
      }
      while (v4 != v7);
    }
    v14 = *(int *)(a1 + 152);
    if ((_DWORD)v14)
      goto LABEL_10;
LABEL_19:
    v15 = 0;
    goto LABEL_20;
  }
  v8 = 0;
  v6 = 0;
  v14 = *(int *)(a1 + 152);
  if (!(_DWORD)v14)
    goto LABEL_19;
LABEL_10:
  if ((v14 & 0x80000000) != 0)
    sub_19C07DA0C();
  v15 = (char *)operator new(8 * v14);
  bzero(v15, 8 * v14);
  v16 = 0;
  v17 = *(_QWORD *)(a1 + 128);
  if (v14 < 4)
    goto LABEL_47;
  if ((unint64_t)&v15[-v17] < 0x20)
    goto LABEL_47;
  v18 = 0;
  v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  v19 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v20 = *(_OWORD *)(v17 + v18 + 16);
    v21 = &v15[v18];
    *(_OWORD *)v21 = *(_OWORD *)(v17 + v18);
    *((_OWORD *)v21 + 1) = v20;
    v18 += 32;
    v19 -= 4;
  }
  while (v19);
  if (v16 != v14)
  {
LABEL_47:
    do
    {
      *(_QWORD *)&v15[8 * v16] = *(_QWORD *)(v17 + 8 * v16);
      ++v16;
    }
    while (v14 != v16);
  }
LABEL_20:
  vDSP_vsubD((const double *)v15, 1, (const double *)v6, 1, (double *)v6, 1, v4);
  if (v8 != v6)
  {
    if (v8 - v6 < 0)
      sub_19C07DA0C();
    v22 = (char *)operator new(v8 - v6);
    memcpy(v22, v6, v8 - v6);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    if (!v4)
    {
      *(_DWORD *)(a2 + 24) = 0;
      operator delete(v22);
      if (!v15)
        goto LABEL_35;
LABEL_34:
      operator delete(v15);
      goto LABEL_35;
    }
LABEL_26:
    if (v4 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(8 * v4);
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 16) = &v23[8 * v4];
    bzero(v23, 8 * v4);
    *(_QWORD *)(a2 + 8) = &v23[v5];
    *(_DWORD *)(a2 + 24) = v4;
    if (v4 >= 4)
    {
      v25 = 0;
      v24 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      v26 = v24;
      do
      {
        v27 = *(_OWORD *)&v22[v25 + 16];
        v28 = &v23[v25];
        *(_OWORD *)v28 = *(_OWORD *)&v22[v25];
        *((_OWORD *)v28 + 1) = v27;
        v25 += 32;
        v26 -= 4;
      }
      while (v26);
      if (v24 == v4)
      {
LABEL_33:
        operator delete(v22);
        if (!v15)
          goto LABEL_35;
        goto LABEL_34;
      }
    }
    else
    {
      v24 = 0;
    }
    do
    {
      *(_QWORD *)&v23[8 * v24] = *(_QWORD *)&v22[8 * v24];
      ++v24;
    }
    while (v4 != v24);
    goto LABEL_33;
  }
  v22 = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v4)
    goto LABEL_26;
  *(_DWORD *)(a2 + 24) = 0;
  if (v15)
    goto LABEL_34;
LABEL_35:
  if (v6)
    operator delete(v6);
}

void sub_19C219C58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  void *v18;
  void *v19;

  if (v19)
  {
    operator delete(v19);
    if (!v18)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v18)
  {
    goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_19C219CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a9)
    operator delete(a9);
  sub_19C07AF7C(a1);
}

void sub_19C219CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13)
    JUMPOUT(0x19C219CE0);
  JUMPOUT(0x19C219CE4);
}

void sub_19C219CEC(uint64_t a1, uint64_t a2)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _BYTE *v20;
  _BYTE *v21;
  int64_t v22;
  char *v23;
  char *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double *v29;
  long double *v30;
  unint64_t v31;
  long double v32;
  __int128 *v33;
  unint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  long double v38;
  void *v39;
  char *v40;
  int v41;
  void *v42;
  void *v43;
  char *v44;
  int v45;
  void *v46[4];
  void *__p[4];
  _QWORD v48[2];
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;

  v55 = a2;
  sub_19C1CF858((uint64_t)v48, *(_DWORD *)(a2 + 8) + 1);
  sub_19C17D694((uint64_t)v46, *(_DWORD *)(a2 + 8) + 1);
  v3 = (char *)v46[0];
  *(_QWORD *)v46[0] = 0xC01E000000000000;
  v4 = (char *)__p[0];
  *(_QWORD *)__p[0] = 0x401E000000000000;
  v5 = *(unsigned int *)(a2 + 56);
  if ((int)v5 >= 1)
  {
    v6 = 0;
    v7 = 1;
    if (v5 < 6)
      goto LABEL_7;
    if ((unint64_t)(v4 - v3) < 0x20)
      goto LABEL_7;
    v6 = v5 & 0x7FFFFFFC;
    v7 = v5 & 0xFFFFFFFC | 1;
    v8 = v4 + 24;
    v9 = v3 + 24;
    __asm
    {
      FMOV            V0.2D, #-10.0
      FMOV            V1.2D, #10.0
    }
    v16 = v5 & 0xFFFFFFFC;
    do
    {
      *(v9 - 1) = _Q0;
      *v9 = _Q0;
      *(v8 - 1) = _Q1;
      *v8 = _Q1;
      v8 += 2;
      v9 += 2;
      v16 -= 4;
    }
    while (v16);
    if (v6 != v5)
    {
LABEL_7:
      v17 = v5 - v6;
      v18 = &v4[8 * v7];
      v19 = &v3[8 * v7];
      do
      {
        *(_QWORD *)v19 = 0xC024000000000000;
        v19 += 8;
        *(_QWORD *)v18 = 0x4024000000000000;
        v18 += 8;
        --v17;
      }
      while (v17);
    }
  }
  sub_19C1D0468((uint64_t)v48, (uint64_t *)v46);
  sub_19C1D0594((uint64_t)v48, (uint64_t *)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v46[0])
  {
    v46[1] = v46[0];
    operator delete(v46[0]);
  }
  v21 = *(_BYTE **)(a2 + 64);
  v20 = *(_BYTE **)(a2 + 72);
  v42 = 0;
  v43 = 0;
  v44 = 0;
  v22 = v20 - v21;
  if (v20 != v21)
  {
    if (v22 < 0)
      sub_19C07DA0C();
    v23 = (char *)operator new(v20 - v21);
    v24 = &v23[8 * (v22 >> 3)];
    v42 = v23;
    v44 = v24;
    memcpy(v23, v21, v22);
    v43 = v24;
  }
  v45 = *(_DWORD *)(a2 + 88);
  sub_19C21A07C((uint64_t)v48, (uint64_t)&v55, (uint64_t *)&v42, (uint64_t)&v39);
  if ((void **)(a2 + 64) != &v39)
    sub_19C11EAD0((_QWORD *)(a2 + 64), (char *)v39, v40, (v40 - (_BYTE *)v39) >> 3);
  *(_DWORD *)(a2 + 88) = v41;
  v25 = (char *)v39;
  *(long double *)(a2 + 24) = exp(*(double *)v39 + *(double *)v39);
  v26 = *(_QWORD *)(a2 + 8);
  if (v26)
  {
    v27 = *(_QWORD *)(a2 + 32);
    if (v26 < 4 || (unint64_t)(v27 - (_QWORD)v25 - 8) < 0x10)
    {
      v28 = 0;
LABEL_22:
      v29 = (double *)&v25[8 * v28 + 8];
      v30 = (long double *)(v27 + 8 * v28);
      v31 = v26 - v28;
      do
      {
        v32 = *v29++;
        *v30++ = exp(v32);
        --v31;
      }
      while (v31);
      goto LABEL_24;
    }
    v28 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v33 = (__int128 *)(v25 + 8);
    v34 = v26 & 0xFFFFFFFFFFFFFFFELL;
    v35 = *(_OWORD **)(a2 + 32);
    do
    {
      v36 = *v33++;
      v38 = exp(*((long double *)&v36 + 1));
      *(double *)&v37 = exp(*(long double *)&v36);
      *((long double *)&v37 + 1) = v38;
      *v35++ = v37;
      v34 -= 2;
    }
    while (v34);
    if (v26 != v28)
      goto LABEL_22;
  }
LABEL_24:
  sub_19C218C68(a2, 1, 1);
  if (v39)
  {
    v40 = (char *)v39;
    operator delete(v39);
  }
  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  v48[0] = &unk_1E3D21150;
  sub_19C23AA14(v48[1]);
  if (v53)
  {
    v54 = v53;
    operator delete(v53);
  }
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }
}

void sub_19C219FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  if (__p)
  {
    operator delete(__p);
    sub_19C1CF8E8(&a29);
    _Unwind_Resume(a1);
  }
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C21A060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  sub_19C176E10((uint64_t)&a21);
  sub_19C1CF8E8(&a29);
  _Unwind_Resume(a1);
}

void sub_19C21A07C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  char *v15;
  char *v16;
  void *v17;
  unsigned int v18;
  size_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  float64x2_t *v24;
  unint64_t v25;
  float64x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  _OWORD *f64;
  uint64_t v32;
  float64x2_t *v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v48;
  std::logic_error *exception;
  void (__cdecl *v50)(std::runtime_error *__hidden);
  struct type_info *v51;
  void *v52;
  float64x2_t *v53;
  char *v54;
  float64x2_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (!*(_BYTE *)(a1 + 112))
    (**(void (***)(uint64_t, _QWORD))a1)(a1, *((unsigned int *)a3 + 6));
  v8 = operator new();
  v10 = (uint64_t *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v8 = a1 + 8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = sub_19C21A5CC;
  *(_OWORD *)(v8 + 40) = 0u;
  v11 = sub_19C23B2E0(v9, (uint64_t)sub_19C1D1354, v8);
  sub_19C1D01DC((uint64_t *)(a1 + 8), v11);
  v12 = *(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16);
  if (sub_19C23B664(*(_QWORD *)(a1 + 8)) != v12 >> 3)
  {
    v13 = sub_19C23B664(*v10);
    if (v13)
    {
      v14 = 8 * v13;
      v15 = (char *)operator new(v14);
      v16 = &v15[v14];
      bzero(v15, v14);
      v17 = *(void **)(a1 + 16);
      if (!v17)
        goto LABEL_7;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = *(void **)(a1 + 16);
      if (!v17)
      {
LABEL_7:
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = v16;
        v18 = sub_19C23B664(*(_QWORD *)(a1 + 8));
        if (v18)
        {
          v19 = 8 * v18;
          v20 = (char *)operator new(v19);
          v21 = &v20[v19];
          bzero(v20, v19);
          v22 = *(void **)(a1 + 40);
          if (!v22)
          {
LABEL_10:
            *(_QWORD *)(a1 + 40) = v20;
            *(_QWORD *)(a1 + 48) = v21;
            *(_QWORD *)(a1 + 56) = v21;
            goto LABEL_11;
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
          v22 = *(void **)(a1 + 40);
          if (!v22)
            goto LABEL_10;
        }
        *(_QWORD *)(a1 + 48) = v22;
        operator delete(v22);
        goto LABEL_10;
      }
    }
    *(_QWORD *)(a1 + 24) = v17;
    operator delete(v17);
    goto LABEL_7;
  }
LABEL_11:
  v23 = *((int *)a3 + 6);
  v54 = 0;
  v55 = 0;
  v53 = 0;
  if ((_DWORD)v23)
  {
    if ((v23 & 0x80000000) != 0)
      sub_19C07DA0C();
    v24 = (float64x2_t *)operator new(8 * v23);
    v53 = v24;
    v55 = (float64x2_t *)((char *)v24 + 8 * v23);
    bzero(v24, 8 * v23);
    v25 = 0;
    v26 = v55;
    v54 = (char *)v55;
    v27 = *a3;
    if (v23 < 4)
      goto LABEL_56;
    if ((unint64_t)v24 - v27 < 0x20)
      goto LABEL_56;
    v28 = 0;
    v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    v29 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v30 = *(_OWORD *)(v27 + v28 * 16 + 16);
      f64 = (_OWORD *)v24[v28].f64;
      *f64 = *(_OWORD *)(v27 + v28 * 16);
      f64[1] = v30;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    if (v25 != v23)
    {
LABEL_56:
      do
      {
        v24->f64[v25] = *(float64_t *)(v27 + 8 * v25);
        ++v25;
      }
      while (v23 != v25);
    }
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v52 = 0;
    v32 = *v10;
    if (!*v10)
      goto LABEL_24;
  }
  if (sub_19C23B664(v32) != ((char *)v26 - (char *)v24) >> 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "dimension mismatch");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
    v50 = (void (__cdecl *)(std::runtime_error *__hidden))MEMORY[0x1E0DE4360];
    v51 = (struct type_info *)off_1E3D1C4D0;
LABEL_53:
    __cxa_throw(exception, v51, (void (*)(void *))v50);
  }
  v32 = *v10;
LABEL_24:
  *(_DWORD *)(a1 + 104) = -5;
  if (v24 == v26)
    v33 = 0;
  else
    v33 = v24;
  v34 = sub_19C2510F4(v32, v33, &v52);
  *(_DWORD *)(a1 + 88) = v34;
  *(_QWORD *)(a1 + 96) = v52;
  if (v34 == -5)
  {
    sub_19C1D01DC((uint64_t *)(a1 + 8), *(_DWORD *)(a1 + 104));
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error((std::runtime_error *)exception, "nlopt forced stop");
    exception->__vftable = (std::logic_error_vtbl *)&unk_1E3D219A0;
    v50 = std::runtime_error::~runtime_error;
    v51 = (struct type_info *)&unk_1E3D1D810;
    goto LABEL_53;
  }
  sub_19C1D01DC((uint64_t *)(a1 + 8), v34);
  v35 = (char *)v53;
  v36 = v54;
  v37 = v54 - (char *)v53;
  v38 = (unint64_t)(v54 - (char *)v53) >> 3;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  if ((_DWORD)v38)
  {
    if ((v38 & 0x80000000) != 0)
      sub_19C07DA0C();
    v39 = operator new(v37 << 29 >> 29);
    bzero(v39, v37 << 29 >> 29);
    *(_QWORD *)a4 = v39;
    *(_QWORD *)(a4 + 8) = (char *)v39 + (v37 << 29 >> 29);
    *(_QWORD *)(a4 + 16) = (char *)v39 + 8 * (int)(v37 >> 3);
    *(_DWORD *)(a4 + 24) = v38;
    if (v35 == v36)
      goto LABEL_46;
  }
  else
  {
    v39 = 0;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_DWORD *)(a4 + 24) = 0;
    if (v35 == v36)
      goto LABEL_46;
  }
  v40 = 0;
  if ((unint64_t)(v37 - 8) < 0x18)
  {
    v41 = v35;
  }
  else
  {
    v41 = v35;
    if ((unint64_t)((char *)v39 - v35) >= 0x20)
    {
      v42 = ((unint64_t)(v37 - 8) >> 3) + 1;
      v40 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      v41 = &v35[8 * (v42 & 0x3FFFFFFFFFFFFFFCLL)];
      v43 = v39 + 1;
      v44 = (__int128 *)(v35 + 16);
      v45 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v46 = *v44;
        *(v43 - 1) = *(v44 - 1);
        *v43 = v46;
        v43 += 2;
        v44 += 2;
        v45 -= 4;
      }
      while (v45);
      if (v42 == v40)
        goto LABEL_46;
    }
  }
  v47 = (_QWORD *)v39 + v40;
  do
  {
    v48 = *(_QWORD *)v41;
    v41 += 8;
    *v47++ = v48;
  }
  while (v41 != v36);
LABEL_46:
  if (v35)
    operator delete(v35);
}

void sub_19C21A4C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  void *v15;
  void *v18;
  void *v19;

  __cxa_free_exception(v15);
  if (a2 != 3)
  {
    if (a2 == 2)
    {
      v19 = __cxa_begin_catch(a1);
      (*(void (**)(void *))(*(_QWORD *)v19 + 16))(v19);
      sub_19C1CE998(v14, (uint64_t)&a13);
      if (a13)
      {
        a14 = (uint64_t)a13;
        operator delete(a13);
      }
      __cxa_end_catch();
LABEL_13:
      JUMPOUT(0x19C21A2D0);
    }
    if (a2 != 1)
    {
      if (__p)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  v18 = __cxa_begin_catch(a1);
  (*(void (**)(void *))(*(_QWORD *)v18 + 16))(v18);
  __cxa_end_catch();
  goto LABEL_13;
}

double sub_19C21A5CC(uint64_t **a1, uint64_t *a2, int **a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  double v33;
  void *__p;
  void *v35;
  char v36;
  _QWORD v37[3];
  signed int v38;
  char v39;
  void *v40;
  char *v41;
  char *v42;
  int v43;

  v6 = *a1;
  v5 = a1[1];
  v7 = (char *)v5 - (char *)*a1;
  v41 = 0;
  v42 = 0;
  v40 = 0;
  v43 = 0;
  v33 = 0.0;
  __p = 0;
  v35 = 0;
  if (!(v7 >> 3))
  {
    v8 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = v7 >> 3;
    if (v6 == v5)
      goto LABEL_13;
    goto LABEL_6;
  }
  if (((v7 >> 3) & 0x80000000) != 0)
    sub_19C07DA0C();
  v8 = operator new((uint64_t)(v7 << 29) >> 29);
  bzero(v8, (uint64_t)(v7 << 29) >> 29);
  v40 = v8;
  v41 = (char *)v8 + ((uint64_t)(v7 << 29) >> 29);
  v42 = (char *)v8 + 8 * (int)((uint64_t)v7 >> 3);
  v43 = v7 >> 3;
  if (v6 != v5)
  {
LABEL_6:
    v9 = 0;
    if (v7 - 8 < 0x18)
      goto LABEL_11;
    if ((unint64_t)((char *)v8 - (char *)v6) < 0x20)
      goto LABEL_11;
    v10 = ((v7 - 8) >> 3) + 1;
    v9 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    v11 = v8 + 1;
    v12 = (__int128 *)(v6 + 2);
    v13 = v10 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v14 = *v12;
      *(v11 - 1) = *(v12 - 1);
      *v11 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    v6 += v10 & 0x3FFFFFFFFFFFFFFCLL;
    if (v10 != v9)
    {
LABEL_11:
      v15 = (_QWORD *)v8 + v9;
      do
      {
        v16 = *v6++;
        *v15++ = v16;
      }
      while (v6 != v5);
    }
  }
LABEL_13:
  if (*a2 == a2[1])
  {
    sub_19C21A8C0(a3, (uint64_t)&v40, 0, (uint64_t)&v33);
    v17 = v33;
    if (v36)
    {
      v31 = __p;
      if (__p)
      {
        v35 = __p;
        goto LABEL_31;
      }
    }
  }
  else
  {
    LOBYTE(v37[0]) = 0;
    v39 = 0;
    sub_19C21A8C0(a3, (uint64_t)&v40, 1, (uint64_t)&v33);
    v17 = v33;
    sub_19C1D66F8((uint64_t)v37, (uint64_t)&__p);
    if (v36 && __p)
    {
      v35 = __p;
      operator delete(__p);
    }
    v18 = v38;
    if (v38)
    {
      v19 = 0;
      v20 = v37[0];
      v21 = *a2;
      if (v38 < 4)
        goto LABEL_23;
      if ((unint64_t)(v21 - v37[0]) < 0x20)
        goto LABEL_23;
      v19 = v38 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = (__int128 *)(v37[0] + 16);
      v23 = (_OWORD *)(v21 + 16);
      v24 = v19;
      do
      {
        v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 4;
      }
      while (v24);
      if (v19 != v18)
      {
LABEL_23:
        v26 = v18 - v19;
        v27 = 8 * v19;
        v28 = (_QWORD *)(v21 + 8 * v19);
        v29 = (uint64_t *)(v20 + v27);
        do
        {
          v30 = *v29++;
          *v28++ = v30;
          --v26;
        }
        while (v26);
      }
    }
    if (v39)
    {
      v31 = (void *)v37[0];
      if (v37[0])
      {
        v37[1] = v37[0];
LABEL_31:
        operator delete(v31);
      }
    }
  }
  if (v40)
  {
    v41 = (char *)v40;
    operator delete(v40);
  }
  return v17;
}

void sub_19C21A848(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,void *__p,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_19C21A8A4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

_QWORD *sub_19C21A8C0@<X0>(int **a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char *v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  double *v11;
  long double *v12;
  unint64_t v13;
  long double v14;
  double v15;
  double v16;
  void *v17;
  int64_t v18;
  char *v19;
  char *v20;
  __int128 *v22;
  unint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  long double v27;
  _BYTE *v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  long double v33;
  char *v34;
  _QWORD v35[3];
  int v36;

  sub_19C21BA58((uint64_t)&v31, *a1);
  if (v35 != (_QWORD *)a2)
    sub_19C11EAD0(v35, *(char **)a2, *(char **)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  v36 = *(_DWORD *)(a2 + 24);
  v7 = *(char **)a2;
  v33 = exp(*(double *)v7 + *(double *)v7);
  v8 = v32;
  if (v32)
  {
    v9 = v34;
    if (v32 < 4 || (unint64_t)(v34 - v7 - 8) < 0x10)
    {
      v10 = 0;
LABEL_7:
      v11 = (double *)&v7[8 * v10 + 8];
      v12 = (long double *)&v9[8 * v10];
      v13 = v8 - v10;
      do
      {
        v14 = *v11++;
        *v12++ = exp(v14);
        --v13;
      }
      while (v13);
      goto LABEL_9;
    }
    v10 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v22 = (__int128 *)(v7 + 8);
    v23 = v32 & 0xFFFFFFFFFFFFFFFELL;
    v24 = v34;
    do
    {
      v25 = *v22++;
      v27 = exp(*((long double *)&v25 + 1));
      *(double *)&v26 = exp(*(long double *)&v25);
      *((long double *)&v26 + 1) = v27;
      *(_OWORD *)v24 = v26;
      v24 += 16;
      v23 -= 2;
    }
    while (v23);
    if (v8 != v10)
      goto LABEL_7;
  }
LABEL_9:
  sub_19C218C68((uint64_t)&v31, 0, a3);
  v15 = sub_19C21AB38((uint64_t)&v31);
  v16 = v15;
  if ((a3 & 1) != 0)
  {
    sub_19C21AD64((uint64_t)&v31, (uint64_t)&v28);
    *(_QWORD *)(a4 + 8) = 0;
    *(double *)a4 = v16;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0;
    v17 = v28;
    v18 = v29 - v28;
    if (v29 != v28)
    {
      if (v18 < 0)
        sub_19C07DA0C();
      v19 = (char *)operator new(v29 - v28);
      *(_QWORD *)(a4 + 8) = v19;
      v20 = &v19[8 * (v18 >> 3)];
      *(_QWORD *)(a4 + 24) = v20;
      memcpy(v19, v17, v18);
      *(_QWORD *)(a4 + 16) = v20;
    }
    *(_DWORD *)(a4 + 32) = v30;
    *(_BYTE *)(a4 + 40) = 1;
    if (v17)
    {
      v29 = v17;
      operator delete(v17);
    }
  }
  else
  {
    *(double *)a4 = v15;
    *(_BYTE *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 40) = 0;
  }
  return sub_19C1EC3CC(&v31);
}

void sub_19C21AAB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C21AAC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  void **v19;
  void *v21;
  void *v22;

  v21 = *v19;
  if (*v19)
  {
    *(_QWORD *)(v18 + 16) = v21;
    operator delete(v21);
    v22 = __p;
    if (!__p)
    {
LABEL_3:
      sub_19C1EC3CC(&a18);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v22 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v22);
  sub_19C1EC3CC(&a18);
  _Unwind_Resume(a1);
}

void sub_19C21AB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_19C21AB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_19C1EC3CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_19C21AB38(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  double *v8;
  void *__p;
  char *v11;
  char *v12;
  int v13;
  void *__C[3];
  vDSP_Length v15;
  double *__A;
  double *v17;
  uint64_t v18;
  vDSP_Length __N;

  sub_19C219934(a1, (uint64_t)&__A);
  __C[0] = 0;
  vDSP_dotprD(__A, 1, *(const double **)(a1 + 256), 1, (double *)__C, (int)__N);
  v2 = __C[0];
  if (__A)
  {
    v17 = __A;
    operator delete(__A);
  }
  v3 = *(int *)(a1 + 220);
  if ((int)v3 >= *(_DWORD *)(a1 + 216))
    v4 = *(_DWORD *)(a1 + 216);
  else
    v4 = *(_DWORD *)(a1 + 220);
  __A = 0;
  v17 = 0;
  v18 = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = operator new(8 * v4);
    bzero(v5, 8 * v4);
    v6 = 0;
    v7 = *(_QWORD **)(a1 + 192);
    do
    {
      *((_QWORD *)v5 + v6++) = *v7;
      v7 += v3 + 1;
    }
    while (v4 != v6);
    __p = operator new(8 * v4);
    v11 = (char *)__p + 8 * v4;
    v12 = v11;
    v13 = v4;
    memcpy(__p, v5, 8 * v4);
  }
  else
  {
    v5 = 0;
    v11 = 0;
    v12 = 0;
    __p = 0;
    v13 = 0;
  }
  sub_19C1D650C((uint64_t)&__p, (uint64_t)__C);
  __A = 0;
  vDSP_sveD((const double *)__C[0], 1, (double *)&__A, (int)v15);
  v8 = __A;
  if (__C[0])
  {
    __C[1] = __C[0];
    operator delete(__C[0]);
  }
  if (__p)
  {
    v11 = (char *)__p;
    operator delete(__p);
  }
  if (v5)
    operator delete(v5);
  return (double)*(int *)(a1 + 120) * -0.918938533 - (*(double *)&v8 - *(double *)&v2 * -0.5);
}

void sub_19C21ACDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v20;

  if (__p)
  {
    operator delete(__p);
    v20 = a9;
    if (!a9)
    {
LABEL_3:
      if (!v18)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(v18);
      goto LABEL_8;
    }
  }
  else
  {
    v20 = a9;
    if (!a9)
      goto LABEL_3;
  }
  operator delete(v20);
  if (!v18)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_19C21AD48(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  sub_19C07AF7C(a1);
}

void sub_19C21AD64(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  int64_t v4;
  double *v5;
  double *v6;
  _BYTE *v7;
  _BYTE *v8;
  int64_t v9;
  char *v10;
  char *v11;
  void *v12;
  int64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  vDSP_Length v18;
  int64_t v19;
  char *v20;
  char *v21;
  char *v22;
  unint64_t i;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  int v28;
  char *v29;
  unint64_t j;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  __int128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  const void *v68;
  int64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  double *v73;
  const void *v74;
  int64_t v75;
  char *v76;
  const double *v77;
  int v78;
  int64_t v79;
  char *v80;
  char *v81;
  const double *v82;
  int v83;
  uint64_t v84;
  char *v85;
  int64_t v86;
  char *v87;
  __int128 *v88;
  _OWORD *v89;
  unint64_t v90;
  __int128 v91;
  __int128 *v92;
  _OWORD *v93;
  unint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  vDSP_Length v98;
  void *v101;
  char *v102;
  char *v103;
  int v104;
  void *v105;
  void *v106;
  char *v107;
  int v108;
  void *__p;
  _BYTE *v110;
  _BYTE *v111;
  unint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  unint64_t v116;
  _BYTE *v117;
  char *v118;
  char *v119;
  unint64_t v120;
  double *v121;
  double *v122;
  double *v123;
  unint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  unint64_t v128;

  v121 = 0;
  v122 = 0;
  v123 = 0;
  v3 = *(_BYTE **)(a1 + 224);
  v2 = *(_BYTE **)(a1 + 232);
  v4 = v2 - v3;
  if (v2 != v3)
  {
    if (v4 < 0)
      sub_19C07DA0C();
    v5 = (double *)operator new(v2 - v3);
    v6 = &v5[v4 >> 3];
    v121 = v5;
    v123 = v6;
    memcpy(v5, v3, v4);
    v122 = v6;
  }
  v7 = *(_BYTE **)(a1 + 256);
  v124 = *(_QWORD *)(a1 + 248);
  v106 = 0;
  v107 = 0;
  v105 = 0;
  v8 = *(_BYTE **)(a1 + 264);
  v9 = v8 - v7;
  if (v8 != v7)
  {
    if (v9 < 0)
      sub_19C07DA0C();
    v10 = (char *)operator new(v8 - v7);
    v11 = &v10[8 * (v9 >> 3)];
    v105 = v10;
    v107 = v11;
    memcpy(v10, v7, v9);
    v106 = v11;
  }
  v108 = *(_DWORD *)(a1 + 280);
  sub_19C1CE998(a1 + 256, (uint64_t)&v101);
  sub_19C1D65EC((uint64_t)&v105, (uint64_t)&v101, (uint64_t)&__p);
  v113 = 0;
  v114 = 0;
  v115 = 0;
  v12 = __p;
  v13 = v110 - (_BYTE *)__p;
  if (v110 == __p)
  {
    v15 = 0;
    v14 = 0;
  }
  else
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v110 - (_BYTE *)__p);
    v15 = &v14[8 * (v13 >> 3)];
    v113 = v14;
    v115 = v15;
    memcpy(v14, v12, v13);
    v114 = v15;
  }
  v16 = v112;
  v116 = v112;
  v17 = HIDWORD(v112);
  v18 = HIDWORD(v112) * (int)v112;
  vDSP_vsubD(v121, 1, (const double *)v14, 1, (double *)v14, 1, v18);
  v117 = 0;
  v118 = 0;
  v119 = 0;
  v19 = v15 - v14;
  if (!v19)
  {
    v20 = 0;
    v120 = v16;
    v126 = 0;
    v127 = 0;
    v125 = 0;
    if ((_DWORD)v18)
      goto LABEL_14;
LABEL_18:
    v22 = 0;
    v21 = 0;
    v128 = __PAIR64__(v17, v16);
    goto LABEL_23;
  }
  if (v19 < 0)
    sub_19C07DA0C();
  v20 = (char *)operator new(v19);
  v117 = v20;
  v119 = &v20[8 * (v19 >> 3)];
  memcpy(v20, v14, v19);
  v118 = &v20[8 * (v19 >> 3)];
  v120 = v16;
  v126 = 0;
  v127 = 0;
  v125 = 0;
  if (!(_DWORD)v18)
    goto LABEL_18;
LABEL_14:
  if ((v18 & 0x80000000) != 0)
    sub_19C07DA0C();
  v21 = (char *)operator new(8 * v18);
  v125 = v21;
  v127 = &v21[8 * v18];
  bzero(v21, 8 * v18);
  v22 = &v21[8 * v18];
  v128 = __PAIR64__(v17, v16);
  if (v18 < 4)
  {
    for (i = 0; i != v18; ++i)
LABEL_22:
      *(_QWORD *)&v21[8 * i] = *(_QWORD *)&v20[8 * i];
    goto LABEL_23;
  }
  v24 = 0;
  i = v18 & 0xFFFFFFFFFFFFFFFCLL;
  v25 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v26 = *(_OWORD *)&v20[v24 + 16];
    v27 = &v21[v24];
    *(_OWORD *)v27 = *(_OWORD *)&v20[v24];
    *((_OWORD *)v27 + 1) = v26;
    v24 += 32;
    v25 -= 4;
  }
  while (v25);
  if (i != v18)
    goto LABEL_22;
LABEL_23:
  sub_19C11EAD0(&v121, v21, v22, (v22 - v21) >> 3);
  v124 = v128;
  if (v21)
  {
    v126 = v21;
    operator delete(v21);
  }
  if (v20)
  {
    v118 = v20;
    operator delete(v20);
  }
  if (v14)
  {
    v114 = v14;
    operator delete(v14);
  }
  if (__p)
  {
    v110 = __p;
    operator delete(__p);
  }
  if (v101)
  {
    v102 = (char *)v101;
    operator delete(v101);
  }
  if (v105)
  {
    v106 = v105;
    operator delete(v105);
  }
  v28 = *(_DWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v98 = v28 + 1;
  if (v28 == -1)
  {
    *(_DWORD *)(a2 + 24) = 0;
    v96 = *(int *)(a1 + 120);
    if (!(_DWORD)v96)
      goto LABEL_125;
    goto LABEL_40;
  }
  if (v28 <= -2)
    sub_19C07DA0C();
  v29 = (char *)operator new(8 * v98);
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = &v29[8 * v98];
  *(_QWORD *)(a2 + 16) = &v29[8 * v28 + 8];
  *(_DWORD *)(a2 + 24) = v28 + 1;
  bzero(v29, 8 * v98);
  v96 = *(int *)(a1 + 120);
  if ((_DWORD)v96)
  {
LABEL_40:
    v97 = 0;
    for (j = 0; j != v96; ++j)
    {
      v31 = 0;
      v32 = 0;
      do
      {
        v33 = *(_QWORD *)(a1 + 96);
        v34 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v34)
        {
          v35 = 0;
          v110 = 0;
          v111 = 0;
          __p = 0;
          LODWORD(v112) = 0;
LABEL_72:
          v52 = 0;
          v102 = 0;
          v103 = 0;
          v101 = 0;
          v104 = 0;
          goto LABEL_76;
        }
        if ((v34 & 0x80000000) != 0)
          sub_19C07DA0C();
        v35 = operator new(8 * (int)v34);
        bzero(v35, 8 * (int)v34);
        if (v34 < 8 || (unint64_t)v35 - v33 - 8 * j * (int)v34 < 0x20)
        {
          v36 = 0;
LABEL_49:
          v37 = (int)v34 - v36;
          v38 = 8 * v36;
          v39 = (_QWORD *)v35 + v36;
          v40 = (uint64_t *)(v33 + v38 + v97 * (int)v34);
          do
          {
            v41 = *v40++;
            *v39++ = v41;
            --v37;
          }
          while (v37);
          goto LABEL_51;
        }
        v36 = (int)v34 & 0xFFFFFFFFFFFFFFFCLL;
        v88 = (__int128 *)(v33 + v97 * (int)v34 + 16);
        v89 = v35 + 1;
        v90 = v36;
        do
        {
          v91 = *v88;
          *(v89 - 1) = *(v88 - 1);
          *v89 = v91;
          v88 += 2;
          v89 += 2;
          v90 -= 4;
        }
        while (v90);
        if (v36 != (int)v34)
          goto LABEL_49;
LABEL_51:
        __p = 0;
        v110 = 0;
        v111 = 0;
        LODWORD(v112) = v34;
        v42 = operator new(8 * (int)v34);
        bzero(v42, 8 * (int)v34);
        __p = v42;
        v110 = (char *)v42 + 8 * (int)v34;
        v111 = v110;
        if ((v34 - 6) >= 0x7FFFFFFB)
        {
          v43 = 0;
LABEL_58:
          v48 = v34 - v43;
          v49 = v43 << 32;
          do
          {
            *(_QWORD *)((char *)v42 + (v49 >> 29)) = *(_QWORD *)((char *)v35 + (v49 >> 29));
            v49 += 0x100000000;
            --v48;
          }
          while (v48);
          goto LABEL_60;
        }
        v43 = v34 & 0xFFFFFFFC;
        v44 = v42 + 1;
        v45 = v35 + 1;
        v46 = v43;
        do
        {
          v47 = *v45;
          *(v44 - 1) = *(v45 - 1);
          *v44 = v47;
          v44 += 2;
          v45 += 2;
          v46 -= 4;
        }
        while (v46);
        if (v43 != v34)
          goto LABEL_58;
LABEL_60:
        v50 = *(_QWORD *)(a1 + 96);
        v51 = *(unsigned int *)(a1 + 124);
        v125 = 0;
        v126 = 0;
        v127 = 0;
        if (!(_DWORD)v51)
          goto LABEL_72;
        if ((v51 & 0x80000000) != 0)
          sub_19C07DA0C();
        v52 = operator new(8 * (int)v51);
        bzero(v52, 8 * (int)v51);
        if (v51 < 8 || (unint64_t)v52 - v50 - 8 * v32 * (int)v51 < 0x20)
        {
          v53 = 0;
LABEL_65:
          v54 = (int)v51 - v53;
          v55 = 8 * v53;
          v56 = (_QWORD *)v52 + v53;
          v57 = (uint64_t *)(v50 + v55 + v31 * (int)v51);
          do
          {
            v58 = *v57++;
            *v56++ = v58;
            --v54;
          }
          while (v54);
          goto LABEL_67;
        }
        v53 = (int)v51 & 0xFFFFFFFFFFFFFFFCLL;
        v92 = (__int128 *)(v50 + v31 * (int)v51 + 16);
        v93 = v52 + 1;
        v94 = v53;
        do
        {
          v95 = *v92;
          *(v93 - 1) = *(v92 - 1);
          *v93 = v95;
          v92 += 2;
          v93 += 2;
          v94 -= 4;
        }
        while (v94);
        if (v53 != (int)v51)
          goto LABEL_65;
LABEL_67:
        v101 = 0;
        v102 = 0;
        v103 = 0;
        v104 = v51;
        v59 = (char *)operator new(8 * (int)v51);
        bzero(v59, 8 * (int)v51);
        v101 = v59;
        v102 = &v59[8 * (int)v51];
        v103 = v102;
        if ((v51 - 6) >= 0x7FFFFFFB)
        {
          v61 = 0;
LABEL_74:
          v64 = v51 - v61;
          v65 = v61 << 32;
          do
          {
            *(_QWORD *)&v59[v65 >> 29] = *(_QWORD *)((char *)v52 + (v65 >> 29));
            v65 += 0x100000000;
            --v64;
          }
          while (v64);
          goto LABEL_76;
        }
        v60 = 0;
        v61 = v51 & 0xFFFFFFFC;
        do
        {
          v62 = v52[v60 / 0x10 + 1];
          v63 = &v59[v60];
          *(_OWORD *)v63 = v52[v60 / 0x10];
          *((_OWORD *)v63 + 1) = v62;
          v60 += 32;
        }
        while (((8 * v51) & 0x7FFFFFFE0) != v60);
        if (v61 != v51)
          goto LABEL_74;
LABEL_76:
        sub_19C21BF88(a1 + 8, (uint64_t)&__p, (const double **)&v101, (uint64_t)&v117);
        if (v101)
        {
          v102 = (char *)v101;
          operator delete(v101);
        }
        if (v52)
          operator delete(v52);
        if (__p)
        {
          v110 = __p;
          operator delete(__p);
        }
        if (v35)
          operator delete(v35);
        if (j == v32)
        {
          v66 = SHIDWORD(v124);
          v67 = v121;
          v68 = v117;
          v69 = v118 - v117;
          if (v118 == v117)
          {
            v71 = 0;
            v70 = 0;
          }
          else
          {
            if (v69 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v71 = &v70[8 * (v69 >> 3)];
            memcpy(v70, v68, v69);
          }
          v77 = &v67[j + j * v66];
          v78 = v120;
          vDSP_vsmulD((const double *)v70, 1, v77, (double *)v70, 1, (int)v120);
          v79 = v71 - v70;
          if (v79)
          {
            if (v79 < 0)
              sub_19C07DA0C();
            v80 = (char *)operator new(v79);
            v81 = &v80[8 * (v79 >> 3)];
            memcpy(v80, v70, v79);
          }
          else
          {
            v81 = 0;
            v80 = 0;
          }
          __p = (void *)0x3FE0000000000000;
          vDSP_vsmulD((const double *)v80, 1, (const double *)&__p, (double *)v80, 1, v78);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v86 = v81 - v80;
          if (v81 == v80)
          {
            v87 = 0;
          }
          else
          {
            if (v86 < 0)
              sub_19C07DA0C();
            v87 = (char *)operator new(v81 - v80);
            v125 = v87;
            v127 = &v87[8 * (v86 >> 3)];
            memcpy(v87, v80, v86);
            v126 = &v87[8 * (v86 >> 3)];
          }
          LODWORD(v128) = v78;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v87, 1, *(double **)a2, 1, v98);
          if (v87)
            operator delete(v87);
          if (v80)
            operator delete(v80);
          if (v70)
            goto LABEL_114;
        }
        else
        {
          v72 = SHIDWORD(v124);
          v73 = v121;
          v74 = v117;
          v75 = v118 - v117;
          if (v118 == v117)
          {
            v76 = 0;
            v70 = 0;
          }
          else
          {
            if (v75 < 0)
              sub_19C07DA0C();
            v70 = (char *)operator new(v118 - v117);
            v76 = &v70[8 * (v75 >> 3)];
            memcpy(v70, v74, v75);
          }
          v82 = &v73[v32 + j * v72];
          v83 = v120;
          vDSP_vsmulD((const double *)v70, 1, v82, (double *)v70, 1, (int)v120);
          v125 = 0;
          v126 = 0;
          v127 = 0;
          v84 = v76 - v70;
          if (v76 == v70)
          {
            v85 = 0;
          }
          else
          {
            if (v84 < 0)
              sub_19C07DA0C();
            v85 = (char *)operator new(v76 - v70);
            v125 = v85;
            v127 = &v85[8 * (v84 >> 3)];
            memcpy(v85, v70, v76 - v70);
            v126 = &v85[8 * (v84 >> 3)];
          }
          LODWORD(v128) = v83;
          vDSP_vaddD(*(const double **)a2, 1, (const double *)v85, 1, *(double **)a2, 1, v98);
          if (v85)
            operator delete(v85);
          if (v70)
LABEL_114:
            operator delete(v70);
        }
        if (v117)
        {
          v118 = v117;
          operator delete(v117);
        }
        ++v32;
        v31 += 8;
      }
      while (v32 <= j);
      v97 += 8;
    }
  }
LABEL_125:
  if (v121)
  {
    v122 = v121;
    operator delete(v121);
  }
}

void sub_19C21B7B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v15;

  v15 = *(void **)a14;
  if (*(_QWORD *)a14)
  {
    *(_QWORD *)(a14 + 8) = v15;
    operator delete(v15);
  }
  sub_19C07AF7C(a1);
}

void sub_19C21B7D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37)
{
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v42;
  void *v43;
  void *v44;

  if (v39)
    operator delete(v39);
  if (v38)
  {
    *(_QWORD *)(v40 - 176) = v38;
    operator delete(v38);
  }
  if (v37)
  {
    *(_QWORD *)(v40 - 208) = v37;
    operator delete(v37);
  }
  if (__p)
  {
    operator delete(__p);
    v42 = a28;
    if (!a28)
    {
LABEL_9:
      v43 = a32;
      if (!a32)
      {
LABEL_14:
        v44 = *(void **)(v40 - 152);
        if (v44)
        {
          *(_QWORD *)(v40 - 144) = v44;
          operator delete(v44);
        }
        _Unwind_Resume(exception_object);
      }
LABEL_13:
      operator delete(v43);
      goto LABEL_14;
    }
  }
  else
  {
    v42 = a28;
    if (!a28)
      goto LABEL_9;
  }
  operator delete(v42);
  v43 = a32;
  if (!a32)
    goto LABEL_14;
  goto LABEL_13;
}

void sub_19C21BA08(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37)
{
  uint64_t v37;
  void *v38;
  void *v39;

  if (__p)
  {
    operator delete(__p);
    if (!v38)
    {
LABEL_3:
      v39 = a36;
      if (!a36)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (!v38)
  {
    goto LABEL_3;
  }
  operator delete(v38);
  v39 = a36;
  if (!a36)
  {
LABEL_4:
    if (v37)
      goto LABEL_12;
    goto LABEL_13;
  }
LABEL_8:
  operator delete(v39);
  if (v37)
LABEL_12:
    JUMPOUT(0x19C21B9B4);
LABEL_13:
  JUMPOUT(0x19C21B9B8);
}

uint64_t sub_19C21BA58(uint64_t a1, int *a2)
{
  int v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;
  int v16;
  _BYTE *v17;
  _BYTE *v18;
  int64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  int64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  int64_t v31;
  char *v32;
  char *v33;
  _BYTE *v34;
  _BYTE *v35;
  int64_t v36;
  char *v37;
  char *v38;
  _BYTE *v39;
  _BYTE *v40;
  int64_t v41;
  char *v42;
  char *v43;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  sub_19C21BE60(a1 + 8, (uint64_t)(a2 + 2));
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  v6 = (_BYTE *)*((_QWORD *)a2 + 12);
  v5 = (_BYTE *)*((_QWORD *)a2 + 13);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 96) = v8;
    *(_QWORD *)(a1 + 104) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 112) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 104) = v9;
  }
  v10 = *((_QWORD *)a2 + 15);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 120) = v10;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  v12 = (_BYTE *)*((_QWORD *)a2 + 16);
  v11 = (_BYTE *)*((_QWORD *)a2 + 17);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 128) = v14;
    *(_QWORD *)(a1 + 136) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 144) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 136) = v15;
  }
  v16 = a2[38];
  *(_QWORD *)(a1 + 160) = 0;
  *(_DWORD *)(a1 + 152) = v16;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  v18 = (_BYTE *)*((_QWORD *)a2 + 20);
  v17 = (_BYTE *)*((_QWORD *)a2 + 21);
  v19 = v17 - v18;
  if (v17 != v18)
  {
    if (v19 < 0)
      sub_19C07DA0C();
    v20 = (char *)operator new(v17 - v18);
    *(_QWORD *)(a1 + 160) = v20;
    *(_QWORD *)(a1 + 168) = v20;
    v21 = &v20[8 * (v19 >> 3)];
    *(_QWORD *)(a1 + 176) = v21;
    memcpy(v20, v18, v19);
    *(_QWORD *)(a1 + 168) = v21;
  }
  v22 = *((_QWORD *)a2 + 23);
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 184) = v22;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  v24 = (_BYTE *)*((_QWORD *)a2 + 24);
  v23 = (_BYTE *)*((_QWORD *)a2 + 25);
  v25 = v23 - v24;
  if (v23 != v24)
  {
    if (v25 < 0)
      sub_19C07DA0C();
    v26 = (char *)operator new(v23 - v24);
    *(_QWORD *)(a1 + 192) = v26;
    *(_QWORD *)(a1 + 200) = v26;
    v27 = &v26[8 * (v25 >> 3)];
    *(_QWORD *)(a1 + 208) = v27;
    memcpy(v26, v24, v25);
    *(_QWORD *)(a1 + 200) = v27;
  }
  v28 = *((_QWORD *)a2 + 27);
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 216) = v28;
  *(_QWORD *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 240) = 0;
  v30 = (_BYTE *)*((_QWORD *)a2 + 28);
  v29 = (_BYTE *)*((_QWORD *)a2 + 29);
  v31 = v29 - v30;
  if (v29 != v30)
  {
    if (v31 < 0)
      sub_19C07DA0C();
    v32 = (char *)operator new(v29 - v30);
    *(_QWORD *)(a1 + 224) = v32;
    *(_QWORD *)(a1 + 232) = v32;
    v33 = &v32[8 * (v31 >> 3)];
    *(_QWORD *)(a1 + 240) = v33;
    memcpy(v32, v30, v31);
    *(_QWORD *)(a1 + 232) = v33;
  }
  *(_QWORD *)(a1 + 248) = *((_QWORD *)a2 + 31);
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0;
  v35 = (_BYTE *)*((_QWORD *)a2 + 32);
  v34 = (_BYTE *)*((_QWORD *)a2 + 33);
  v36 = v34 - v35;
  if (v34 != v35)
  {
    if (v36 < 0)
      sub_19C07DA0C();
    v37 = (char *)operator new(v34 - v35);
    *(_QWORD *)(a1 + 256) = v37;
    *(_QWORD *)(a1 + 264) = v37;
    v38 = &v37[8 * (v36 >> 3)];
    *(_QWORD *)(a1 + 272) = v38;
    memcpy(v37, v35, v36);
    *(_QWORD *)(a1 + 264) = v38;
  }
  *(_DWORD *)(a1 + 280) = a2[70];
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 288) = 0;
  v40 = (_BYTE *)*((_QWORD *)a2 + 36);
  v39 = (_BYTE *)*((_QWORD *)a2 + 37);
  v41 = v39 - v40;
  if (v39 != v40)
  {
    if (v41 < 0)
      sub_19C07DA0C();
    v42 = (char *)operator new(v39 - v40);
    *(_QWORD *)(a1 + 288) = v42;
    *(_QWORD *)(a1 + 296) = v42;
    v43 = &v42[8 * (v41 >> 3)];
    *(_QWORD *)(a1 + 304) = v43;
    memcpy(v42, v40, v41);
    *(_QWORD *)(a1 + 296) = v43;
  }
  *(_DWORD *)(a1 + 312) = a2[78];
  return a1;
}

void sub_19C21BD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, _QWORD *a10)
{
  _QWORD *v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  v18 = *v16;
  if (*v16)
  {
    v10[37] = v18;
    operator delete(v18);
    v19 = *a9;
    if (!*a9)
    {
LABEL_3:
      v20 = *v15;
      if (!*v15)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else
  {
    v19 = *a9;
    if (!*a9)
      goto LABEL_3;
  }
  v10[33] = v19;
  operator delete(v19);
  v20 = *v15;
  if (!*v15)
  {
LABEL_4:
    v21 = *v14;
    if (!*v14)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v10[29] = v20;
  operator delete(v20);
  v21 = *v14;
  if (!*v14)
  {
LABEL_5:
    v22 = *v13;
    if (!*v13)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  v10[25] = v21;
  operator delete(v21);
  v22 = *v13;
  if (!*v13)
  {
LABEL_6:
    v23 = *v12;
    if (!*v12)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  v10[21] = v22;
  operator delete(v22);
  v23 = *v12;
  if (!*v12)
  {
LABEL_7:
    v24 = *v11;
    if (!*v11)
      goto LABEL_8;
    goto LABEL_15;
  }
LABEL_14:
  v10[17] = v23;
  operator delete(v23);
  v24 = *v11;
  if (!*v11)
  {
LABEL_8:
    sub_19C1E8600(a10);
    _Unwind_Resume(a1);
  }
LABEL_15:
  v10[13] = v24;
  operator delete(v24);
  sub_19C1E8600(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_19C21BE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v6 = *(_BYTE **)(a2 + 24);
  v5 = *(_BYTE **)(a2 + 32);
  v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0)
      sub_19C07DA0C();
    v8 = (char *)operator new(v5 - v6);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v8;
    v9 = &v8[8 * (v7 >> 3)];
    *(_QWORD *)(a1 + 40) = v9;
    memcpy(v8, v6, v7);
    *(_QWORD *)(a1 + 32) = v9;
  }
  v10 = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  v12 = *(_BYTE **)(a2 + 56);
  v11 = *(_BYTE **)(a2 + 64);
  v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0)
      sub_19C07DA0C();
    v14 = (char *)operator new(v11 - v12);
    *(_QWORD *)(a1 + 56) = v14;
    *(_QWORD *)(a1 + 64) = v14;
    v15 = &v14[8 * (v13 >> 3)];
    *(_QWORD *)(a1 + 72) = v15;
    memcpy(v14, v12, v13);
    *(_QWORD *)(a1 + 64) = v15;
  }
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

void sub_19C21BF54(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void *v5;
  void *v6;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 64) = v5;
    operator delete(v5);
  }
  v6 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 32) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C21BF88(uint64_t a1@<X0>, uint64_t a2@<X1>, const double **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  double *v9;
  double *v10;
  int v11;
  int v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  const void *v19;
  int64_t v20;
  char *v21;
  char *v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  signed int v27;
  float64x2_t *v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v33;
  _OWORD *f64;
  uint64_t v35;
  float64x2_t *v36;
  double v37;
  unint64_t v38;
  double *v39;
  double *v40;
  double *v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  float64x2_t *v46;
  float64x2_t *v47;
  float64x2_t *v48;
  unint64_t v49;
  float64x2_t v50;
  void *v51;
  void *v52;
  char *v53;
  int v54;
  void *__p[3];
  signed int v56;
  float64x2_t *v57;
  float64x2_t *v58;
  char *v59;
  signed int v60;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_DWORD *)a1;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  *(_DWORD *)(a4 + 24) = 0;
  v57 = 0;
  v58 = 0;
  v59 = 0;
  v12 = v11 + 1;
  if (v11 != -1)
  {
    if (v11 <= -2)
      sub_19C07DA0C();
    v10 = (double *)operator new(8 * v12);
    v8 = (uint64_t)&v10[v11 + 1];
    bzero(v10, 8 * v12);
    v9 = &v10[v12];
  }
  *(_QWORD *)a4 = v10;
  *(_QWORD *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = v8;
  *(_DWORD *)(a4 + 24) = v12;
  v13 = sub_19C215B48(a1, a2, (uint64_t)a3);
  v15 = v14;
  v16 = exp(-v13);
  v17 = v13 + 1.0;
  *v10 = v16 * *(double *)(a1 + 16) * (v17 + v15 + v17 + v15);
  v19 = *(const void **)a2;
  v18 = *(_QWORD *)(a2 + 8);
  v20 = v18 - *(_QWORD *)a2;
  if (v18 == *(_QWORD *)a2)
  {
    v22 = 0;
    v21 = 0;
  }
  else
  {
    if (v20 < 0)
      sub_19C07DA0C();
    v21 = (char *)operator new(v18 - *(_QWORD *)a2);
    v22 = &v21[8 * (v20 >> 3)];
    memcpy(v21, v19, v20);
  }
  v23 = *(_DWORD *)(a2 + 24);
  vDSP_vsubD(*a3, 1, (const double *)v21, 1, (double *)v21, 1, v23);
  v51 = 0;
  v52 = 0;
  v53 = 0;
  v24 = v22 - v21;
  if (v22 != v21)
  {
    if (v24 < 0)
      sub_19C07DA0C();
    v25 = (char *)operator new(v22 - v21);
    v26 = &v25[8 * (v24 >> 3)];
    v51 = v25;
    v53 = v26;
    memcpy(v25, v21, v22 - v21);
    v52 = v26;
  }
  v54 = v23;
  sub_19C1EFF00((uint64_t)&v51, (uint64_t)__p);
  v27 = v56;
  v58 = 0;
  v59 = 0;
  v57 = 0;
  if (v56)
  {
    if (v56 < 0)
      sub_19C07DA0C();
    v28 = (float64x2_t *)operator new(8 * v56);
    v57 = v28;
    v59 = (char *)&v28->f64[v27];
    bzero(v28, 8 * v27);
    v29 = 0;
    v58 = (float64x2_t *)((char *)v28 + 8 * v27);
    v60 = v27;
    v30 = __p[0];
    if (v27 < 4)
      goto LABEL_46;
    if ((unint64_t)((char *)v28 - (char *)__p[0]) < 0x20)
      goto LABEL_46;
    v31 = 0;
    v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    v32 = v29;
    do
    {
      v33 = *(_OWORD *)&v30[v31 / 8 + 2];
      f64 = (_OWORD *)v28[v31 / 0x10].f64;
      *f64 = *(_OWORD *)&v30[v31 / 8];
      f64[1] = v33;
      v31 += 32;
      v32 -= 4;
    }
    while (v32);
    if (v29 != v27)
    {
LABEL_46:
      do
      {
        *(_QWORD *)&v28->f64[v29] = v30[v29];
        ++v29;
      }
      while (v27 != v29);
    }
  }
  else
  {
    v28 = 0;
    v60 = 0;
    v30 = __p[0];
    if (!__p[0])
      goto LABEL_22;
  }
  __p[1] = v30;
  operator delete(v30);
LABEL_22:
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v21)
    operator delete(v21);
  v35 = *(int *)(a1 + 48);
  if ((_DWORD)v35)
  {
    v36 = *(float64x2_t **)(a1 + 24);
    v37 = v16 * 1.66666667 * (v17 * *(double *)(a1 + 16));
    if (v35 >= 6)
    {
      v38 = 0;
      if ((unint64_t)((char *)(v10 + 1) - (char *)v36) >= 0x20
        && (unint64_t)((char *)(v10 + 1) - (char *)v28) >= 0x20)
      {
        v38 = v35 & 0xFFFFFFFFFFFFFFFCLL;
        v46 = (float64x2_t *)(v10 + 3);
        v47 = v36 + 1;
        v48 = v28 + 1;
        v49 = v35 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          v50 = vdivq_f64(vmulq_n_f64(*v48, v37), vmulq_f64(*v47, *v47));
          v46[-1] = vdivq_f64(vmulq_n_f64(v48[-1], v37), vmulq_f64(v47[-1], v47[-1]));
          *v46 = v50;
          v46 += 2;
          v47 += 2;
          v48 += 2;
          v49 -= 4;
        }
        while (v49);
        if (v38 == v35)
          goto LABEL_39;
      }
    }
    else
    {
      v38 = 0;
    }
    v39 = &v10[v38 + 1];
    v40 = &v28->f64[v38];
    v41 = &v36->f64[v38];
    v42 = v35 - v38;
    do
    {
      v43 = *v41++;
      v44 = v43;
      v45 = *v40++;
      *v39++ = v37 * v45 / (v44 * v44);
      --v42;
    }
    while (v42);
LABEL_39:
    v58 = v28;
    operator delete(v28);
    return;
  }
  if (v28)
    goto LABEL_39;
}

void sub_19C21C364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22)
{
  void *v22;
  void *v23;
  uint64_t v24;

  if (__p)
    operator delete(__p);
  if (v23)
    operator delete(v23);
  *(_QWORD *)(v24 + 8) = v22;
  operator delete(v22);
  _Unwind_Resume(a1);
}

void sub_19C21C3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!a9)
    JUMPOUT(0x19C21C3C0);
  JUMPOUT(0x19C21C3B4);
}

BOOL sub_19C21C3E4(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v5;
  int v6;
  int v8;
  _BOOL4 v9;
  std::runtime_error *exception;

  if (*(_BYTE *)(a1 + 8))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Early stopping already requested.");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  v3 = *(_DWORD *)(a1 + 12);
  if (v3 == -1)
    return 0;
  v6 = *a2;
  v5 = (uint64_t)(a2 + 2);
  if (v6 == 1 || *(double *)(a1 + 120) < *((double *)a2 + 13) - *(double *)(a1 + 16))
  {
    sub_19C1C9C8C(a1 + 24, v5);
    *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 13);
    *(_DWORD *)(a1 + 128) = 0;
    *(_BYTE *)(a1 + 8) = 0;
    return 0;
  }
  else
  {
    v8 = *(_DWORD *)(a1 + 128);
    *(_DWORD *)(a1 + 128) = v8 + 1;
    v9 = v8 >= v3;
    *(_BYTE *)(a1 + 8) = v9;
    return v9;
  }
}

void sub_19C21C4CC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19C21C4E0(uint64_t a1)
{

  return a1;
}

void sub_19C21C508(id *a1)
{

  operator delete(a1);
}

_QWORD *sub_19C21C530(uint64_t a1)
{
  _QWORD *v2;

  v2 = operator new(0x18uLL);
  *v2 = &unk_1E3D24D88;
  v2[1] = MEMORY[0x1A1AD22D4](*(_QWORD *)(a1 + 8));
  *((_DWORD *)v2 + 4) = *(_DWORD *)(a1 + 16);
  return v2;
}

uint64_t sub_19C21C580(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)a2 = &unk_1E3D24D88;
  result = MEMORY[0x1A1AD22D4](*(_QWORD *)(a1 + 8));
  *(_QWORD *)(a2 + 8) = result;
  *(_DWORD *)(a2 + 16) = *(_DWORD *)(a1 + 16);
  return result;
}

void sub_19C21C5C4(uint64_t a1)
{

}

void sub_19C21C5CC(id *a1)
{

  operator delete(a1);
}

uint64_t sub_19C21C5F4(uint64_t a1, uint64_t *a2)
{
  return sub_19C21C684((uint64_t *)(a1 + 8), a2);
}

uint64_t sub_19C21C5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 == 0x800000019C27A87BLL)
    return a1 + 8;
  if (((v3 & 0x800000019C27A87BLL & 0x8000000000000000) != 0) == __OFSUB__(v3, 0x800000019C27A87BLL))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000019C27A87BLL & 0x7FFFFFFFFFFFFFFFLL)))
    return a1 + 8;
  return 0;
}

void *sub_19C21C678()
{
  return &unk_1E3D1CF80;
}

uint64_t sub_19C21C684(uint64_t *a1, uint64_t *a2)
{
  __n128 v4;
  uint64_t v5;
  CFDictionaryRef v6;
  uint64_t *v8[12];
  CFDictionaryRef v9;
  int v10;
  uint64_t *v11[13];
  uint64_t *v12[12];
  double v13;

  v10 = *(_DWORD *)a2;
  sub_19C1C1840(v11, a2 + 1);
  v11[12] = (uint64_t *)a2[13];
  sub_19C1C1840(v12, a2 + 14);
  v13 = *((double *)a2 + 26);
  sub_19C1C1840(v8, (uint64_t *)v12);
  sub_19C1BC1DC((uint64_t)v8, &v9);
  sub_19C17B808((char **)v8);
  v4.n128_f64[0] = v13;
  if (*((_DWORD *)a1 + 2) == 1)
    v4.n128_f64[0] = -v13;
  v5 = *a1;
  v6 = v9;
  (*(void (**)(__n128))(v5 + 16))(v4);
  if (v6)
    CFRelease(v6);
  sub_19C17B808((char **)v12);
  sub_19C17B808((char **)v11);
  return 0;
}

void sub_19C21C778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  char **v15;
  char **v16;
  va_list va;

  va_start(va, a15);
  sub_19C094494((const void **)va);
  sub_19C17B808(v16);
  sub_19C17B808(v15);
  _Unwind_Resume(a1);
}

void sub_19C21C79C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  char **v3;
  char **v4;
  va_list va;

  va_start(va, a3);
  sub_19C17B808((char **)va);
  sub_19C17B808(v4);
  sub_19C17B808(v3);
  _Unwind_Resume(a1);
}

_QWORD *sub_19C21C7C0(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[4];

  v6[3] = *MEMORY[0x1E0C80C00];
  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_19C21C954(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_19C07AF7C(a1);
}

_DWORD *sub_19C21C968(uint64_t a1)
{
  _DWORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &unk_1E3D24DE0;
  result[2] = *(_DWORD *)(a1 + 8);
  return result;
}

uint64_t sub_19C21C9A4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &unk_1E3D24DE0;
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 8);
  return result;
}

uint64_t sub_19C21C9C8(uint64_t a1, uint64_t a2)
{
  uint64_t **v4;
  double v5;
  uint64_t *v7[12];
  double v8;
  uint64_t *v9;
  double v10;

  sub_19C1C1840(v7, (uint64_t *)(a2 + 8));
  v8 = *(double *)(a2 + 104);
  v4 = sub_19C1C1840(&v9, (uint64_t *)(a2 + 112));
  v5 = *(double *)(a2 + 208);
  v10 = v5;
  if (*(_DWORD *)(a1 + 8) == 1)
  {
    v8 = -v8;
    v10 = -v5;
  }
  sub_19C17B808((char **)v4);
  sub_19C17B808((char **)v7);
  return 0;
}

uint64_t sub_19C21CA64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 == 0x800000019C27A902)
    return a1 + 8;
  if (((v3 & 0x800000019C27A902 & 0x8000000000000000) != 0) == __OFSUB__(v3, 0x800000019C27A902))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000019C27A902 & 0x7FFFFFFFFFFFFFFFLL)))
    return a1 + 8;
  return 0;
}

void *sub_19C21CAE0()
{
  return &unk_1E3D1D800;
}

void sub_19C21CAEC(const __CFDictionary *a1@<X0>, const UInt8 *a2@<X1>, void **a3@<X2>, uint64_t a4@<X8>)
{
  const __CFString *v6;
  const __CFString *v7;
  CFTypeID TypeID;
  void *__p[2];
  char v10;
  char v11;

  v6 = (const __CFString *)sub_19C1C3D64(a1, a2);
  if (v6)
  {
    v7 = v6;
    TypeID = CFStringGetTypeID();
    if (TypeID == CFGetTypeID(v7))
    {
      a3 = __p;
      sub_19C09BCAC(v7, __p);
      v11 = 1;
      if (v10 < 0)
      {
        sub_19C07C6E8((_BYTE *)a4, __p[0], (unint64_t)__p[1]);
        goto LABEL_8;
      }
      goto LABEL_6;
    }
  }
  LOBYTE(__p[0]) = 0;
  v11 = 0;
  if ((*((char *)a3 + 23) & 0x80000000) == 0)
  {
LABEL_6:
    *(_OWORD *)a4 = *(_OWORD *)a3;
    *(_QWORD *)(a4 + 16) = a3[2];
    goto LABEL_8;
  }
  sub_19C07C6E8((_BYTE *)a4, *a3, (unint64_t)a3[1]);
LABEL_8:
  if (v11)
  {
    if (v10 < 0)
      operator delete(__p[0]);
  }
}

uint64_t sub_19C21CBC0(uint64_t a1)
{

  return a1;
}

void sub_19C21CBE8(id *a1)
{

  operator delete(a1);
}

_QWORD *sub_19C21CC10(uint64_t a1)
{
  _QWORD *v2;

  v2 = operator new(0x18uLL);
  *v2 = &unk_1E3D24D30;
  v2[1] = MEMORY[0x1A1AD22D4](*(_QWORD *)(a1 + 8));
  *((_DWORD *)v2 + 4) = *(_DWORD *)(a1 + 16);
  return v2;
}

uint64_t sub_19C21CC60(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)a2 = &unk_1E3D24D30;
  result = MEMORY[0x1A1AD22D4](*(_QWORD *)(a1 + 8));
  *(_QWORD *)(a2 + 8) = result;
  *(_DWORD *)(a2 + 16) = *(_DWORD *)(a1 + 16);
  return result;
}

void sub_19C21CCA4(uint64_t a1)
{

}

void sub_19C21CCAC(id *a1)
{

  operator delete(a1);
}

void sub_19C21CCD4(uint64_t a1, uint64_t *a2)
{
  sub_19C21CD64(a1 + 8, a2);
}

uint64_t sub_19C21CCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 == 0x800000019C27A9ABLL)
    return a1 + 8;
  if (((v3 & 0x800000019C27A9ABLL & 0x8000000000000000) != 0) == __OFSUB__(v3, 0x800000019C27A9ABLL))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000019C27A9ABLL & 0x7FFFFFFFFFFFFFFFLL)))
    return a1 + 8;
  return 0;
}

void *sub_19C21CD58()
{
  return &unk_1E3D1CF70;
}

void sub_19C21CD64(uint64_t a1, uint64_t *a2)
{
  CFDictionaryRef v3;
  uint64_t *v4[12];
  CFDictionaryRef v5;

  sub_19C1C1840(v4, a2);
  sub_19C1BC1DC((uint64_t)v4, &v5);
  sub_19C17B808((char **)v4);
  v3 = v5;
  (*(void (**)(void))(*(_QWORD *)a1 + 16))();
  if (v3)
    CFRelease(v3);
}

void sub_19C21CDE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_19C094494((const void **)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_19C21CDF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_19C17B808((char **)va);
  _Unwind_Resume(a1);
}

void sub_19C21CE0C(uint64_t a1@<X0>, CFDictionaryRef *a2@<X8>)
{
  char *v3;
  const void *v4;
  CFTypeRef v5;
  CFTypeRef v6;
  _QWORD v7[2];
  CFTypeRef cf;
  CFTypeRef v9;
  CFTypeRef v10;
  CFTypeRef v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = (char *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  sub_19C21CF74((CFStringRef *)&v9, v3);
  v4 = (const void *)*MEMORY[0x1E0C9AFE0];
  if (*MEMORY[0x1E0C9AFE0])
    CFRetain((CFTypeRef)*MEMORY[0x1E0C9AFE0]);
  sub_19C09827C(&cf, v4);
  v5 = cf;
  if (cf)
    CFRetain(cf);
  v10 = v5;
  v6 = v9;
  if (v9)
    CFRetain(v9);
  v11 = v6;
  v7[0] = &v10;
  v7[1] = 1;
  *a2 = sub_19C098328((uint64_t)v7);
  if (v11)
    CFRelease(v11);
  if (v10)
    CFRelease(v10);
  if (cf)
    CFRelease(cf);
  if (v9)
    CFRelease(v9);
}

void sub_19C21CF08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, int a13, __int16 a14, char a15, char a16, int a17, __int16 a18, char a19, char a20)
{
  if (a2)
    sub_19C07AF7C(exception_object);
  _Unwind_Resume(exception_object);
}

CFStringRef *sub_19C21CF74(CFStringRef *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void **p_dst;
  uint64_t v7;
  uint64_t v8;
  const UInt8 *v9;
  CFIndex v10;
  CFStringRef v11;
  std::runtime_error *exception;
  void **__dst;
  CFIndex v15;
  int64_t v16;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_19C07C774();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    p_dst = (void **)operator new(v7 + 1);
    v15 = v5;
    v16 = v8 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v16) = v4;
  p_dst = (void **)&__dst;
  if (v4)
LABEL_8:
    memcpy(p_dst, __s, v5);
  *((_BYTE *)p_dst + v5) = 0;
  if (v16 >= 0)
    v9 = (const UInt8 *)&__dst;
  else
    v9 = (const UInt8 *)__dst;
  if (v16 >= 0)
    v10 = HIBYTE(v16);
  else
    v10 = v15;
  v11 = CFStringCreateWithBytes(0, v9, v10, 0x8000100u, 0);
  *a1 = v11;
  if (!v11)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Could not construct");
    __cxa_throw(exception, MEMORY[0x1E0DE4E80], (void (*)(void *))MEMORY[0x1E0DE4338]);
  }
  if (SHIBYTE(v16) < 0)
    operator delete(__dst);
  return a1;
}

void sub_19C21D0A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  CFTypeRef *v15;

  if (*v15)
    CFRelease(*v15);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C21D0EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_19C21D104()
{
  uint64_t v0;

  operator delete(*(void **)(v0 - 48));
}

void sub_19C21D10C(void *__p)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = v1;
  operator delete(__p);
}

void sub_19C21D120()
{
  uint64_t v0;

  operator delete(*(void **)(v0 - 48));
}

void sub_19C21D128(void *__p)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = v1;
  operator delete(__p);
}

void sub_19C21D13C(void *__p)
{
  operator delete(__p);
}

void sub_19C21D148()
{
  uint64_t v0;

  operator delete(*(void **)(v0 - 56));
}

void sub_19C21D150(void *__p)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 24) = __p;
  operator delete(__p);
}

void sub_19C21D158(void *__p)
{
  operator delete(__p);
}

uint64_t sub_19C21D16C(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_19C21D184()
{
  void **v0;

  operator delete(*v0);
}

void sub_19C21D18C(void *__p)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = __p;
  operator delete(__p);
}

void sub_19C21D304(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_19C21D318(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_19C21D330(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_19C21D42C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_19C21D43C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_19C21D45C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_19C21D920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_19C21D9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;

  if (v12)
    operator delete(v12);

  _Unwind_Resume(a1);
}

void sub_19C21DB8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_19C21DBA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_19C21DBB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_19C21DBC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_19C21DBD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_19C21DBEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_19C21DCE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_19C21DCFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_19C21DD0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_19C21DD20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_19C21DDF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_19C21DE1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_19C21DF38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_19C21E048(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_19C21E05C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_19C21E06C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_19C21E1AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_19C21E34C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_19C21E460(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_19C21E474(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_19C21E524(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_19C21E540(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_19C21E550(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_19C21E560(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_19C21E570(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_19C21E7D0(uint64_t a1, unsigned int a2)
{
  char *v4;
  uint64_t v5;
  int v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int32 *v22;
  uint64_t v23;
  float *v24;
  float *v25;
  uint64_t v26;
  float v27;
  float v28;
  float v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  BOOL v35;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t *v39;
  float32x4_t *v40;
  uint64_t v41;
  float32x4_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  float32x4_t *v48;
  uint64_t v49;
  float32x4_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v54;
  float32x4_t *v55;
  float32x4_t v56;
  float v57;
  float32x4_t v58;
  float32x4_t v59;
  uint64_t v60;
  uint64_t v61;
  float32x4_t *v62;
  const float *v63;
  BOOL v64;
  float32x4_t v65;
  uint64_t v66;
  float32x4_t *v67;
  float32x4_t v68;
  uint64_t v69;
  float *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  float32x4_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  float v86;
  uint64_t v87;
  float v88;
  float32x4_t v89;
  float32x4_t v90;
  float32x4_t v91;

  bzero(**(void ***)(a1 + 40), 4 * (int)(*(_DWORD *)(a1 + 20) * a2));
  if (a2)
  {
    if ((a2 & 0x80000000) != 0)
      sub_19C07DA0C();
    v4 = (char *)operator new(4 * (int)a2);
    bzero(v4, 4 * (int)a2);
    v5 = *(unsigned int *)(a1 + 20);
    v6 = *(_DWORD *)(a1 + 20);
    v84 = *(_QWORD *)(a1 + 56);
    v77 = v5;
    __asm { FMOV            V0.4S, #1.0 }
    v75 = _Q0;
    v73 = v6;
    v74 = 0;
    v72 = a2;
    v81 = 4 * (int)v5;
    v82 = 0;
    while (1)
    {
      if (v6 >= 1)
      {
        v11 = 0;
        v12 = 0;
        v13 = *(unsigned int *)(a1 + 16);
        v14 = (int)v13;
        v15 = **(_QWORD **)(a1 + 48);
        v83 = v82 * (int)v13;
        v80 = 4 * v13;
        v79 = 4 * v83 + 4 * v13;
        v16 = 4 * (int)v13;
        v87 = v13;
        v78 = v13 & 0xFFFFFFF8;
        v76 = v74 * (int)v13;
        v17 = 16;
        v85 = v16;
        do
        {
          v18 = v82 * (int)v5 + v12;
          if ((int)v14 >= 1)
          {
            v19 = **(_QWORD **)(a1 + 24);
            v20 = **(_QWORD **)(a1 + 32);
            v21 = **(_QWORD **)(a1 + 40);
            v22 = (__int32 *)(v21 + 4 * v18);
            _Q0.i32[0] = *v22;
            if (v14 >= 8)
            {
              v23 = 0;
              v33 = v21 + v81 * v82 + 4 * v12 + 4;
              v35 = (unint64_t)v22 < v20 + v80 + v16 * v12 && v20 + v16 * v12 < v33;
              if ((v19 + 4 * v83 >= v33 || (unint64_t)v22 >= v19 + v79) && !v35)
              {
                v37 = 0uLL;
                v38 = (float32x4_t)*v22;
                v39 = (float32x4_t *)(v19 + v76 + 16);
                v40 = (float32x4_t *)(v20 + v17);
                v41 = v78;
                do
                {
                  v38 = vmlaq_f32(v38, v40[-1], v39[-1]);
                  v37 = vmlaq_f32(v37, *v40, *v39);
                  v39 += 2;
                  v40 += 2;
                  v41 -= 8;
                }
                while (v41);
                v42 = vaddq_f32(v37, v38);
                _Q0 = vpaddq_f32(v42, v42);
                _Q0.f32[0] = vaddv_f32(*(float32x2_t *)_Q0.f32);
                *v22 = _Q0.i32[0];
                v23 = v78;
                if (v78 == v87)
                  goto LABEL_14;
              }
            }
            else
            {
              v23 = 0;
            }
            v24 = (float *)(v20 + 4 * (v23 + v11));
            v25 = (float *)(v19 + 4 * (v83 + v23));
            v26 = v87 - v23;
            do
            {
              v27 = *v25++;
              v28 = v27;
              v29 = *v24++;
              _Q0.f32[0] = _Q0.f32[0] + (float)(v29 * v28);
              *v22 = _Q0.i32[0];
              --v26;
            }
            while (v26);
          }
LABEL_14:
          if (v15)
            *(float *)(**(_QWORD **)(a1 + 40) + 4 * v18) = *(float *)(**(_QWORD **)(a1 + 40) + 4 * v18)
                                                         + *(float *)(v15 + 4 * v12);
          switch(v84)
          {
            case 1:
              v43 = *(uint64_t **)(a1 + 40);
              v44 = *v43;
              v45 = 4 * v18;
              _Q0.f32[0] = expf(-*(float *)(*v43 + 4 * v18));
              v16 = v85;
              _Q0.f32[0] = 1.0 / (float)(_Q0.f32[0] + 1.0);
              goto LABEL_36;
            case 2:
              v46 = *(uint64_t **)(a1 + 40);
              v44 = *v46;
              v45 = 4 * v18;
              _Q0.f32[0] = tanhf(*(float *)(*v46 + 4 * v18));
              v16 = v85;
LABEL_36:
              *(_DWORD *)(v44 + v45) = _Q0.i32[0];
              break;
            case 4:
            case 7:
              v30 = *(uint64_t **)(a1 + 40);
              v31 = *v30;
              v32 = 4 * v18;
              _Q0.f32[0] = expf(*(float *)(*v30 + 4 * v18));
              v16 = v85;
              *(_DWORD *)(v31 + v32) = _Q0.i32[0];
              *(float *)&v4[4 * v82] = *(float *)&v4[4 * v82] + _Q0.f32[0];
              break;
            case 5:
              *(float *)(**(_QWORD **)(a1 + 40) + 4 * v18) = fmaxf(*(float *)(**(_QWORD **)(a1 + 40) + 4 * v18), 0.0);
              break;
            default:
              break;
          }
          ++v12;
          v17 += v16;
          v11 += v14;
        }
        while (v12 != v5);
      }
      v6 = v5;
      v47 = 4 * (int)v5;
      if ((v84 == 4 || v84 == 7) && (int)v5 >= 1)
        break;
LABEL_4:
      v74 += 4;
      if (++v82 == v72)
      {
        operator delete(v4);
        return;
      }
    }
    v48 = **(float32x4_t ***)(a1 + 40);
    if (v84 == 7)
    {
      v49 = 0;
      v50 = **(float32x4_t ***)(a1 + 40);
      while (1)
      {
        if (v73 >= 4)
        {
          v52 = &v4[4 * v49];
          if ((char *)v48 + v47 * v49 >= v52 + 4 || v52 >= (char *)v48 + v77 * 4 + v47 * v49)
          {
            _Q0.i32[0] = *(_DWORD *)&v4[4 * v49];
            LODWORD(v86) = vdivq_f32(v75, _Q0).u32[0];
            v54 = v5 & 0xFFFFFFFC;
            v55 = v50;
            do
            {
              v91 = vmulq_n_f32(*v55, v86);
              v88 = logf(v91.f32[1]);
              v56.f32[0] = logf(v91.f32[0]);
              v56.f32[1] = v88;
              v89 = v56;
              v57 = logf(v91.f32[2]);
              v58 = v89;
              v58.f32[2] = v57;
              v90 = v58;
              _Q0.f32[0] = logf(v91.f32[3]);
              v59 = v90;
              v59.i32[3] = _Q0.i32[0];
              *v55++ = v59;
              v54 -= 4;
            }
            while (v54);
            v51 = v5 & 0xFFFFFFFC;
            if (v51 == v5)
              goto LABEL_42;
          }
          else
          {
            v51 = 0;
          }
        }
        else
        {
          v51 = 0;
        }
        do
        {
          v50->f32[v51] = logf(v50->f32[v51] / *(float *)&v4[4 * v49]);
          ++v51;
        }
        while (v5 != v51);
LABEL_42:
        ++v49;
        v47 = 4 * (int)v5;
        v50 = (float32x4_t *)((char *)v50 + v81);
        if (v49 == v72)
          goto LABEL_4;
      }
    }
    v60 = 0;
    v61 = 0;
    v62 = v48 + 1;
    while (1)
    {
      if (v5 >= 8
        && ((v63 = (const float *)&v4[4 * v61], (char *)v48 + v81 * v61 < (char *)(v63 + 1))
          ? (v64 = v63 >= (const float *)((char *)&v48->f32[v77] + v81 * v61))
          : (v64 = 1),
            v64))
      {
        v65 = vld1q_dup_f32(v63);
        _Q0 = vdivq_f32(v75, v65);
        v66 = v5 & 0xFFFFFFF8;
        v67 = v62;
        do
        {
          v68 = vmulq_f32(*v67, _Q0);
          v67[-1] = vmulq_f32(v67[-1], _Q0);
          *v67 = v68;
          v67 += 2;
          v66 -= 8;
        }
        while (v66);
        v69 = v5 & 0xFFFFFFF8;
        if (v69 == v5)
          goto LABEL_56;
      }
      else
      {
        v69 = 0;
      }
      v70 = &v48->f32[v69 + v60];
      v71 = v5 - v69;
      do
      {
        *v70 = *v70 / *(float *)&v4[4 * v61];
        ++v70;
        --v71;
      }
      while (v71);
LABEL_56:
      ++v61;
      v62 = (float32x4_t *)((char *)v62 + v81);
      v60 += (int)v5;
      if (v61 == v72)
        goto LABEL_4;
    }
  }
}

void sub_19C21EDB4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 - 128);
  if (v3)
  {
    *(_QWORD *)(v1 - 120) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_19C21EDD0(uint64_t a1, unsigned int a2)
{
  char *v4;
  float32x4_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float *v18;
  float v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  float v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  float v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  BOOL v41;
  BOOL v42;
  uint64_t v43;
  float32x4_t v44;
  int8x8_t *v45;
  int8x8_t *v46;
  uint64_t v47;
  int8x8_t v48;
  int16x8_t v49;
  int8x8_t v50;
  int16x8_t v51;
  float32x4_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  float v56;
  uint64_t *v57;
  float32x4_t v58;
  float32x4_t v59;
  int8x16_t *v60;
  int8x16_t *v61;
  uint64_t v62;
  float32x4_t v63;
  float32x4_t v64;
  int8x16_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int8x16_t v68;
  int16x8_t v69;
  int16x8_t v70;
  float32x4_t v71;
  uint64_t v72;
  float32x4_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  const char *v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  float32x4_t *v84;
  float32x4_t v85;
  float v86;
  float32x4_t v87;
  float v88;
  float32x4_t v89;
  float32x4_t v90;
  float v91;
  float32x4_t v92;
  float v93;
  int16x4_t v94;
  uint64_t v95;
  float32x4_t *v96;
  float32x4_t v97;
  float v98;
  float32x4_t v99;
  float v100;
  float32x4_t v101;
  float32x4_t v102;
  float v103;
  float32x4_t v104;
  float v105;
  float32x4_t v106;
  float32x4_t v107;
  float v108;
  float32x4_t v109;
  float v110;
  float32x4_t v111;
  float32x4_t v112;
  float v113;
  float32x4_t v114;
  float v115;
  uint64_t v116;
  float32x4_t *v117;
  const char *v118;
  uint64_t v119;
  uint64_t v121;
  float32x4_t v122;
  uint64_t v123;
  uint64_t v124;
  float32x4_t *v125;
  float32x4_t v126;
  int16x4_t v127;
  float32x4_t v128;
  uint64_t v129;
  float32x4_t *v130;
  float32x4_t v131;
  float32x4_t v132;
  float32x4_t v133;
  uint64_t v134;
  uint64_t v135;
  float32x4_t v136;
  uint64_t v137;
  float32x4_t v138;
  float32x4_t v139;
  float32x4_t v140;
  float32x4_t v141;
  float32x4_t v142;
  float32x4_t v143;
  float32x4_t v144;
  float32x4_t v145;
  float32x4_t v146;
  float32x4_t v147;
  float32x4_t v148;
  float32x4_t v149;
  float32x4_t v150;
  float32x4_t v151;
  float32x4_t v152;
  float32x4_t v153;
  float32x4_t v154;
  float32x4_t v155;
  float v156;
  float32x4_t v157;
  float32x4_t v158;
  float32x4_t v159;
  float v160;
  float32x4_t v161;
  float32x4_t v162;
  float32x4_t v163;
  char *v164;

  bzero(**(void ***)(a1 + 40), *(int *)(a1 + 20) * (uint64_t)(int)a2);
  if (a2)
  {
    if ((a2 & 0x80000000) != 0)
      sub_19C07DA0C();
    v4 = (char *)operator new((int)a2);
    v164 = v4;
    bzero(v4, (int)a2);
    v6 = 0;
    v7 = a2;
    v8 = *(_DWORD *)(a1 + 20);
    __asm { FMOV            V0.4S, #1.0 }
    v136 = _Q0;
    v137 = a2;
    while (1)
    {
      if ((int)v8 >= 1)
      {
        v12 = 0;
        while (1)
        {
          v13 = v12 + v8 * v6;
          v14 = *(unsigned int *)(a1 + 16);
          if ((int)v14 >= 1)
            break;
LABEL_14:
          v27 = **(_QWORD **)(a1 + 48);
          if (v27)
          {
            v28 = *(float *)(v27 + 4 * v12);
            v29 = **(_QWORD **)(a1 + 40);
            v30 = 4 * v13;
            v5.i32[0] = *(_DWORD *)(v29 + v30);
            *(float *)(v29 + v30) = v5.f32[0] + v28;
          }
          switch(*(_QWORD *)(a1 + 56))
          {
            case 1:
              v53 = *(uint64_t **)(a1 + 40);
              v54 = *v53;
              v55 = 4 * v13;
              v56 = 1.0 / (float)(expf(-*(float *)(*v53 + v55)) + 1.0);
              goto LABEL_38;
            case 2:
              v57 = *(uint64_t **)(a1 + 40);
              v54 = *v57;
              v55 = 4 * v13;
              v56 = tanhf(*(float *)(*v57 + v55));
LABEL_38:
              *(float *)(v54 + v55) = v56;
              break;
            case 4:
            case 7:
              v31 = *(uint64_t **)(a1 + 40);
              v32 = *v31;
              v33 = 4 * v13;
              v34 = expf(*(float *)(*v31 + v33));
              *(float *)(v32 + v33) = v34;
              v5.i8[0] = v4[v6];
              v5.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v5.f32)).u64[0];
              v5.f32[0] = (float)v5.i32[0];
              v4[v6] = (int)(float)(v34 + v5.f32[0]);
              v8 = *(_DWORD *)(a1 + 20);
              break;
            case 5:
              *(float *)(**(_QWORD **)(a1 + 40) + 4 * v13) = fmaxf(*(float *)(**(_QWORD **)(a1 + 40) + 4 * v13), 0.0);
              break;
            default:
              break;
          }
          if (++v12 >= (int)v8)
            goto LABEL_44;
        }
        v15 = **(_QWORD **)(a1 + 24);
        v16 = **(_QWORD **)(a1 + 32);
        v17 = **(_QWORD **)(a1 + 40);
        v18 = (float *)(v17 + 4 * v13);
        v19 = *v18;
        if (v14 >= 8)
        {
          v20 = 0;
          v35 = (int)v14 * (int)v6;
          v36 = (int)v14 * (int)v12;
          v37 = v17 + 4 * v13 + 4;
          v38 = v15 + v35;
          v39 = v15 + v35 + v14;
          v41 = (unint64_t)v18 < v16 + v36 + v14 && v16 + v36 < v37;
          v42 = v38 >= v37 || (unint64_t)v18 >= v39;
          if (v42 && !v41)
          {
            if (v14 >= 0x10)
            {
              v20 = v14 & 0x7FFFFFF0;
              v58 = 0uLL;
              v59 = (float32x4_t)*(unsigned int *)v18;
              v60 = (int8x16_t *)(v15 + (int)v6 * (int)v14);
              v61 = (int8x16_t *)(v16 + (int)v14 * (int)v12);
              v62 = v14 & 0xFFFFFFF0;
              v63 = 0uLL;
              v64 = 0uLL;
              do
              {
                v65 = *v60++;
                v66 = vmovl_s8(*(int8x8_t *)v65.i8);
                v67 = vmovl_high_s8(v65);
                v68 = *v61++;
                v69 = vmovl_s8(*(int8x8_t *)v68.i8);
                v70 = vmovl_high_s8(v68);
                v64 = vaddq_f32(v64, vcvtq_f32_s32(vmull_high_s16(v70, v67)));
                v63 = vaddq_f32(v63, vcvtq_f32_s32(vmull_s16(*(int16x4_t *)v70.i8, *(int16x4_t *)v67.i8)));
                v58 = vaddq_f32(v58, vcvtq_f32_s32(vmull_high_s16(v69, v66)));
                v59 = vaddq_f32(v59, vcvtq_f32_s32(vmull_s16(*(int16x4_t *)v69.i8, *(int16x4_t *)v66.i8)));
                v62 -= 16;
              }
              while (v62);
              v5 = vaddq_f32(v58, v64);
              v71 = vaddq_f32(vaddq_f32(v59, v63), v5);
              v19 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v71, v71));
              *v18 = v19;
              if (v20 == v14)
                goto LABEL_14;
              if ((v14 & 8) == 0)
                goto LABEL_12;
            }
            else
            {
              v20 = 0;
            }
            v43 = v20;
            v20 = v14 & 0xFFFFFFF8;
            v5 = 0uLL;
            v44 = (float32x4_t)LODWORD(v19);
            v45 = (int8x8_t *)(v15 + v43 + (int)v6 * (int)v14);
            v46 = (int8x8_t *)(v16 + v43 + (int)v14 * (int)v12);
            v47 = v43 - v20;
            do
            {
              v48 = *v45++;
              v49 = vmovl_s8(v48);
              v50 = *v46++;
              v51 = vmovl_s8(v50);
              v5 = vaddq_f32(v5, vcvtq_f32_s32(vmull_high_s16(v51, v49)));
              v44 = vaddq_f32(v44, vcvtq_f32_s32(vmull_s16(*(int16x4_t *)v51.i8, *(int16x4_t *)v49.i8)));
              v47 += 8;
            }
            while (v47);
            v52 = vaddq_f32(v44, v5);
            v19 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v52, v52));
            *v18 = v19;
            if (v20 == v14)
              goto LABEL_14;
          }
        }
        else
        {
          v20 = 0;
        }
LABEL_12:
        v21 = (char *)(v16 + v20 + (int)v14 * (int)v12);
        v22 = (char *)(v15 + v20 + (int)v6 * (int)v14);
        v23 = v14 - v20;
        do
        {
          v25 = *v22++;
          v24 = v25;
          v26 = *v21++;
          v5.f32[0] = (float)(v26 * v24);
          v19 = v19 + v5.f32[0];
          *v18 = v19;
          --v23;
        }
        while (v23);
        goto LABEL_14;
      }
LABEL_44:
      v72 = *(_QWORD *)(a1 + 56);
      if (v72 == 4 || v72 == 7)
      {
        v4 = v164;
        if ((int)v8 >= 1)
          break;
      }
LABEL_4:
      if (++v6 == v7)
      {
        if (v164)
          operator delete(v164);
        return;
      }
    }
    v74 = **(float32x4_t ***)(a1 + 40);
    v75 = 4 * v8;
    v76 = v8 & 0xFFFFFFF8;
    if (v72 == 7)
    {
      v77 = 0;
      v134 = -v76;
      v135 = **(_QWORD **)(a1 + 40);
      while (1)
      {
        v78 = &v4[v77];
        if (v8 >= 8)
        {
          if (v135 + v75 * v77 >= (unint64_t)(v78 + 1) || (unint64_t)v78 >= v135 + v75 + v75 * v77)
          {
            if (v8 < 0x10)
            {
              v81 = 0;
LABEL_62:
              v142 = vdivq_f32(v136, vcvtq_f32_s32(vmovl_s16(vshr_n_s16(vshl_n_s16(vdup_n_s16(*(unsigned __int8 *)v78), 8uLL), 8uLL))));
              v82 = 4 * v81;
              v83 = v134 + v81;
              do
              {
                v84 = (float32x4_t *)((char *)v74 + v82);
                v144 = vmulq_f32(*(float32x4_t *)((char *)v74 + v82 + 16), v142);
                v151 = vmulq_f32(*(float32x4_t *)((char *)v74 + v82), v142);
                v156 = logf(v144.f32[1]);
                v85.f32[0] = logf(v144.f32[0]);
                v85.f32[1] = v156;
                v157 = v85;
                v86 = logf(v144.f32[2]);
                v87 = v157;
                v87.f32[2] = v86;
                v158 = v87;
                v88 = logf(v144.f32[3]);
                v89 = v158;
                v89.f32[3] = v88;
                v159 = v89;
                v144.i32[0] = logf(v151.f32[1]);
                v90.f32[0] = logf(v151.f32[0]);
                v90.i32[1] = v144.i32[0];
                v145 = v90;
                v91 = logf(v151.f32[2]);
                v92 = v145;
                v92.f32[2] = v91;
                v146 = v92;
                v93 = logf(v151.f32[3]);
                v5 = v146;
                v5.f32[3] = v93;
                *v84 = v5;
                v84[1] = v159;
                v82 += 32;
                v83 += 8;
              }
              while (v83);
              v79 = v8 & 0xFFFFFFF8;
              v4 = v164;
              if (v79 == v8)
                goto LABEL_52;
              goto LABEL_65;
            }
            v94 = (int16x4_t)vld1_dup_s8(v78);
            v138 = vdivq_f32(v136, vcvtq_f32_s32(vmovl_s16(vshr_n_s16(vshl_n_s16(v94, 8uLL), 8uLL))));
            v95 = v8 & 0xFFFFFFF0;
            v96 = v74;
            do
            {
              v139 = vmulq_f32(v96[1], v138);
              v143 = vmulq_f32(*v96, v138);
              v147 = vmulq_f32(v96[2], v138);
              v152 = vmulq_f32(v96[3], v138);
              v160 = logf(v152.f32[1]);
              v97.f32[0] = logf(v152.f32[0]);
              v97.f32[1] = v160;
              v161 = v97;
              v98 = logf(v152.f32[2]);
              v99 = v161;
              v99.f32[2] = v98;
              v162 = v99;
              v100 = logf(v152.f32[3]);
              v101 = v162;
              v101.f32[3] = v100;
              v163 = v101;
              v152.i32[0] = logf(v147.f32[1]);
              v102.f32[0] = logf(v147.f32[0]);
              v102.i32[1] = v152.i32[0];
              v153 = v102;
              v103 = logf(v147.f32[2]);
              v104 = v153;
              v104.f32[2] = v103;
              v154 = v104;
              v105 = logf(v147.f32[3]);
              v106 = v154;
              v106.f32[3] = v105;
              v155 = v106;
              v147.i32[0] = logf(v139.f32[1]);
              v107.f32[0] = logf(v139.f32[0]);
              v107.i32[1] = v147.i32[0];
              v148 = v107;
              v108 = logf(v139.f32[2]);
              v109 = v148;
              v109.f32[2] = v108;
              v149 = v109;
              v110 = logf(v139.f32[3]);
              v111 = v149;
              v111.f32[3] = v110;
              v150 = v111;
              v139.i32[0] = logf(v143.f32[1]);
              v112.f32[0] = logf(v143.f32[0]);
              v112.i32[1] = v139.i32[0];
              v140 = v112;
              v113 = logf(v143.f32[2]);
              v114 = v140;
              v114.f32[2] = v113;
              v141 = v114;
              v115 = logf(v143.f32[3]);
              v5 = v141;
              v5.f32[3] = v115;
              *v96 = v5;
              v96[1] = v150;
              v5.i64[0] = v155.i64[0];
              v96[2] = v155;
              v96[3] = v163;
              v96 += 4;
              v95 -= 16;
            }
            while (v95);
            v4 = v164;
            if ((v8 & 0xFFFFFFF0) == (unint64_t)v8)
              goto LABEL_52;
            v79 = v8 & 0xFFFFFFF0;
            v81 = v79;
            if ((v8 & 8) != 0)
              goto LABEL_62;
          }
          else
          {
            v79 = 0;
          }
        }
        else
        {
          v79 = 0;
        }
        do
        {
LABEL_65:
          v5.i8[0] = *v78;
          v74->f32[v79] = logf(v74->f32[v79]/ (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v5.f32)).i32[0]);
          ++v79;
        }
        while (v8 != v79);
LABEL_52:
        ++v77;
        v7 = v137;
        v75 = 4 * v8;
        v74 = (float32x4_t *)((char *)v74 + v75);
        if (v77 == v137)
          goto LABEL_4;
      }
    }
    v116 = 0;
    v117 = **(float32x4_t ***)(a1 + 40);
    while (1)
    {
      v118 = &v164[v116];
      if (v8 >= 8)
      {
        if ((char *)v74 + v75 * v116 >= v118 + 1 || v118 >= (const char *)v74 + v75 + v75 * v116)
        {
          if (v8 < 0x10)
          {
            v121 = 0;
LABEL_83:
            v122 = vdivq_f32(v136, vcvtq_f32_s32(vmovl_s16(vshr_n_s16(vshl_n_s16(vdup_n_s16(*(unsigned __int8 *)v118), 8uLL), 8uLL))));
            v123 = 4 * v121;
            v124 = v121 - v76;
            do
            {
              v125 = (float32x4_t *)((char *)v117 + v123);
              v126 = vmulq_f32(*(float32x4_t *)((char *)v117 + v123 + 16), v122);
              v5 = vmulq_f32(*(float32x4_t *)((char *)v117 + v123), v122);
              *v125 = v5;
              v125[1] = v126;
              v123 += 32;
              v124 += 8;
            }
            while (v124);
            v119 = v8 & 0xFFFFFFF8;
            if (v76 == v8)
              goto LABEL_73;
            goto LABEL_86;
          }
          v127 = (int16x4_t)vld1_dup_s8(v118);
          v128 = vdivq_f32(v136, vcvtq_f32_s32(vmovl_s16(vshr_n_s16(vshl_n_s16(v127, 8uLL), 8uLL))));
          v129 = v8 & 0xFFFFFFF0;
          v130 = v117;
          do
          {
            v131 = vmulq_f32(v130[3], v128);
            v132 = vmulq_f32(v130[2], v128);
            v133 = vmulq_f32(v130[1], v128);
            v5 = vmulq_f32(*v130, v128);
            *v130 = v5;
            v130[1] = v133;
            v130[2] = v132;
            v130[3] = v131;
            v130 += 4;
            v129 -= 16;
          }
          while (v129);
          if ((v8 & 0xFFFFFFF0) == (unint64_t)v8)
            goto LABEL_73;
          v121 = v8 & 0xFFFFFFF0;
          v119 = v121;
          if ((v8 & 8) != 0)
            goto LABEL_83;
        }
        else
        {
          v119 = 0;
        }
      }
      else
      {
        v119 = 0;
      }
      do
      {
LABEL_86:
        v5.i8[0] = *v118;
        v5.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v5.f32)).u64[0];
        v5.f32[0] = (float)v5.i32[0];
        v117->f32[v119] = v117->f32[v119] / v5.f32[0];
        ++v119;
      }
      while (v8 != v119);
LABEL_73:
      ++v116;
      v117 = (float32x4_t *)((char *)v117 + 4 * v8);
      if (v116 == v7)
        goto LABEL_4;
    }
  }
}

void sub_19C21F6F8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 - 128);
  if (v3)
  {
    *(_QWORD *)(v1 - 120) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19C21F714(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *__src)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float v12;
  int v13;
  int *v14;
  unint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  int *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  _OWORD *v29;
  int *v30;
  uint64_t v31;
  __int128 v32;
  int v33;
  int v34;
  int *v35;
  unint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  int *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  _OWORD *v49;
  int *v50;
  uint64_t v51;
  __int128 v52;
  int v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _BYTE *v64;
  _QWORD *v65;
  char *v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _OWORD *v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  _BYTE *v90;
  _QWORD *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _OWORD *v97;
  char *v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _BYTE *v111;
  _QWORD *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  _OWORD *v118;
  __int128 *v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  void **v124;
  void **v125;
  char **v126;
  char **v127;
  _QWORD *v128;
  void *__p[2];
  uint64_t v130;
  int v131;
  int64x2_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v136 = *MEMORY[0x1E0C80C00];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_19C07C6E8(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v130 = *(_QWORD *)(a2 + 16);
  }
  sub_19C18E344(a1, (__int128 *)__p, a3, __src);
  if (SHIBYTE(v130) < 0)
    operator delete(__p[0]);
  *(_QWORD *)a1 = &unk_1E3D24468;
  *(_QWORD *)(a1 + 1016) = __src[7];
  v126 = (char **)(a1 + 1048);
  v127 = (char **)(a1 + 1024);
  v124 = (void **)(a1 + 1104);
  v125 = (void **)(a1 + 1080);
  *(_OWORD *)(a1 + 1056) = 0u;
  *(_OWORD *)(a1 + 1040) = 0u;
  *(_OWORD *)(a1 + 1024) = 0u;
  *(_OWORD *)(a1 + 1096) = 0u;
  *(_OWORD *)(a1 + 1112) = 0u;
  *(_OWORD *)(a1 + 1080) = 0u;
  v7 = *((int *)__src + 32);
  v131 = 1;
  v132 = vdupq_n_s64(1uLL);
  v134 = 0;
  v135 = 0;
  v133 = v7;
  sub_19C07C964(a1 + 16, &v131, (int *)&v136);
  v8 = *((int *)__src + 64);
  v131 = 9;
  v132 = vdupq_n_s64(1uLL);
  v134 = 0;
  v135 = 0;
  v133 = v8;
  sub_19C07C964(a1 + 40, &v131, (int *)&v136);
  LODWORD(v9) = *((_DWORD *)__src + 80);
  *(_DWORD *)(a1 + 1072) = v9;
  if ((int)v9 >= 1)
  {
    v10 = 0;
    while (1)
    {
      v12 = *(float *)(__src[71] + 4 * v10);
      v13 = (int)(*(float *)(__src[70] + 4 * v10) + 0.5);
      v14 = *(int **)(a1 + 1088);
      v15 = *(_QWORD *)(a1 + 1096);
      if ((unint64_t)v14 < v15)
      {
        *v14 = v13;
        v16 = (uint64_t)(v14 + 1);
        goto LABEL_31;
      }
      v17 = (int *)*v125;
      v18 = (char *)v14 - (_BYTE *)*v125;
      v19 = v18 >> 2;
      v20 = (v18 >> 2) + 1;
      if (v20 >> 62)
        sub_19C07DA0C();
      v21 = v15 - (_QWORD)v17;
      if (v21 >> 1 > v20)
        v20 = v21 >> 1;
      v22 = (unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL ? 0x3FFFFFFFFFFFFFFFLL : v20;
      if (v22)
        break;
      v23 = 0;
      v24 = (int *)(4 * v19);
      *(_DWORD *)(4 * v19) = v13;
      v16 = 4 * v19 + 4;
      if (v14 != v17)
        goto LABEL_23;
LABEL_29:
      *(_QWORD *)(a1 + 1080) = v24;
      *(_QWORD *)(a1 + 1088) = v16;
      *(_QWORD *)(a1 + 1096) = &v23[4 * v22];
      if (v17)
        operator delete(v17);
LABEL_31:
      *(_QWORD *)(a1 + 1088) = v16;
      v34 = (int)(v12 + 0.5);
      v35 = *(int **)(a1 + 1112);
      v36 = *(_QWORD *)(a1 + 1120);
      if ((unint64_t)v35 >= v36)
      {
        v37 = (int *)*v124;
        v38 = (char *)v35 - (_BYTE *)*v124;
        v39 = v38 >> 2;
        v40 = (v38 >> 2) + 1;
        if (v40 >> 62)
          sub_19C07DA0C();
        v41 = v36 - (_QWORD)v37;
        if (v41 >> 1 > v40)
          v40 = v41 >> 1;
        if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFFCLL)
          v42 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v42 = v40;
        if (v42)
        {
          if (v42 >> 62)
            sub_19C07C7FC();
          v43 = operator new(4 * v42);
          v44 = (int *)&v43[4 * v39];
          *v44 = v34;
          v11 = (uint64_t)(v44 + 1);
          if (v35 == v37)
            goto LABEL_49;
LABEL_43:
          v45 = (char *)(v35 - 1) - (char *)v37;
          if (v45 < 0x2C)
            goto LABEL_135;
          if ((unint64_t)((char *)v35 - &v43[v38]) < 0x20)
            goto LABEL_135;
          v46 = (v45 >> 2) + 1;
          v47 = 4 * (v46 & 0x7FFFFFFFFFFFFFF8);
          v48 = &v35[v47 / 0xFFFFFFFFFFFFFFFCLL];
          v44 = (int *)((char *)v44 - v47);
          v49 = &v43[4 * v39 - 16];
          v50 = v35 - 4;
          v51 = v46 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v52 = *(_OWORD *)v50;
            *(v49 - 1) = *((_OWORD *)v50 - 1);
            *v49 = v52;
            v49 -= 2;
            v50 -= 8;
            v51 -= 8;
          }
          while (v51);
          v35 = v48;
          if (v46 != (v46 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_135:
            do
            {
              v53 = *--v35;
              *--v44 = v53;
            }
            while (v35 != v37);
          }
        }
        else
        {
          v43 = 0;
          v44 = (int *)(4 * v39);
          *(_DWORD *)(4 * v39) = v34;
          v11 = 4 * v39 + 4;
          if (v35 != v37)
            goto LABEL_43;
        }
LABEL_49:
        *(_QWORD *)(a1 + 1104) = v44;
        *(_QWORD *)(a1 + 1112) = v11;
        *(_QWORD *)(a1 + 1120) = &v43[4 * v42];
        if (v37)
          operator delete(v37);
        goto LABEL_9;
      }
      *v35 = v34;
      v11 = (uint64_t)(v35 + 1);
LABEL_9:
      *(_QWORD *)(a1 + 1112) = v11;
      ++v10;
      v9 = *(int *)(a1 + 1072);
      if (v10 >= v9)
        goto LABEL_51;
    }
    if (v22 >> 62)
      sub_19C07C7FC();
    v23 = operator new(4 * v22);
    v24 = (int *)&v23[4 * v19];
    *v24 = v13;
    v16 = (uint64_t)(v24 + 1);
    if (v14 == v17)
      goto LABEL_29;
LABEL_23:
    v25 = (char *)(v14 - 1) - (char *)v17;
    if (v25 < 0x2C)
      goto LABEL_136;
    if ((unint64_t)((char *)v14 - &v23[v18]) < 0x20)
      goto LABEL_136;
    v26 = (v25 >> 2) + 1;
    v27 = 4 * (v26 & 0x7FFFFFFFFFFFFFF8);
    v28 = &v14[v27 / 0xFFFFFFFFFFFFFFFCLL];
    v24 = (int *)((char *)v24 - v27);
    v29 = &v23[4 * v19 - 16];
    v30 = v14 - 4;
    v31 = v26 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v32 = *(_OWORD *)v30;
      *(v29 - 1) = *((_OWORD *)v30 - 1);
      *v29 = v32;
      v29 -= 2;
      v30 -= 8;
      v31 -= 8;
    }
    while (v31);
    v14 = v28;
    if (v26 != (v26 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_136:
      do
      {
        v33 = *--v14;
        *--v24 = v33;
      }
      while (v14 != v17);
    }
    goto LABEL_29;
  }
LABEL_51:
  **(_DWORD **)(a1 + 1104) = v9 + **(_DWORD **)(a1 + 1104) - 1;
  v54 = __src[56];
  v55 = *(char **)(a1 + 1032);
  v56 = *(_QWORD *)(a1 + 1040);
  if ((unint64_t)v55 < v56)
  {
    *(_QWORD *)v55 = v54;
    v57 = (uint64_t)(v55 + 8);
    goto LABEL_73;
  }
  v58 = *v127;
  v59 = v55 - *v127;
  v60 = v59 >> 3;
  v61 = (v59 >> 3) + 1;
  if (v61 >> 61)
    sub_19C07DA0C();
  v62 = v56 - (_QWORD)v58;
  if (v62 >> 2 > v61)
    v61 = v62 >> 2;
  if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFF8)
    v63 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v63 = v61;
  if (!v63)
  {
    v64 = 0;
    v65 = (_QWORD *)(8 * v60);
    v66 = 0;
    *(_QWORD *)(8 * v60) = v54;
    v57 = 8 * v60 + 8;
    v67 = (char *)(v55 - v58);
    if (v55 != v58)
      goto LABEL_62;
LABEL_71:
    *(_QWORD *)(a1 + 1024) = v65;
    *(_QWORD *)(a1 + 1032) = v57;
    *(_QWORD *)(a1 + 1040) = v66;
    if (!v55)
      goto LABEL_73;
    goto LABEL_72;
  }
  if (v63 >> 61)
    sub_19C07C7FC();
  v64 = operator new(8 * v63);
  v65 = &v64[8 * v60];
  v66 = &v64[8 * v63];
  *v65 = v54;
  v57 = (uint64_t)(v65 + 1);
  v67 = (char *)(v55 - v58);
  if (v55 == v58)
    goto LABEL_71;
LABEL_62:
  v68 = (unint64_t)(v67 - 8);
  if (v68 < 0x58)
    goto LABEL_137;
  if ((unint64_t)(v55 - v64 - v59) < 0x20)
    goto LABEL_137;
  v69 = (v68 >> 3) + 1;
  v70 = 8 * (v69 & 0x3FFFFFFFFFFFFFFCLL);
  v71 = &v55[-v70];
  v65 = (_QWORD *)((char *)v65 - v70);
  v72 = &v64[8 * v60 - 16];
  v73 = v55 - 16;
  v74 = v69 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    v75 = *(_OWORD *)v73;
    *(v72 - 1) = *((_OWORD *)v73 - 1);
    *v72 = v75;
    v72 -= 2;
    v73 -= 32;
    v74 -= 4;
  }
  while (v74);
  v55 = v71;
  if (v69 != (v69 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_137:
    do
    {
      v76 = *((_QWORD *)v55 - 1);
      v55 -= 8;
      *--v65 = v76;
    }
    while (v55 != v58);
  }
  v55 = *v127;
  *(_QWORD *)(a1 + 1024) = v65;
  *(_QWORD *)(a1 + 1032) = v57;
  *(_QWORD *)(a1 + 1040) = v66;
  if (v55)
LABEL_72:
    operator delete(v55);
LABEL_73:
  *(_QWORD *)(a1 + 1032) = v57;
  if (*(int *)(a1 + 1072) >= 2)
  {
    v77 = 1;
    v128 = __src;
    do
    {
      v79 = (char *)&__src[v77];
      v80 = *((_QWORD *)v79 + 56);
      v81 = *(char **)(a1 + 1032);
      v82 = *(_QWORD *)(a1 + 1040);
      if ((unint64_t)v81 < v82)
      {
        *(_QWORD *)v81 = v80;
        v83 = (uint64_t)(v81 + 8);
        goto LABEL_100;
      }
      v84 = *v127;
      v85 = v81 - *v127;
      v86 = v85 >> 3;
      v87 = (v85 >> 3) + 1;
      if (v87 >> 61)
        sub_19C07DA0C();
      v88 = v82 - (_QWORD)v84;
      if (v88 >> 2 > v87)
        v87 = v88 >> 2;
      if ((unint64_t)v88 >= 0x7FFFFFFFFFFFFFF8)
        v89 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v89 = v87;
      if (v89)
      {
        if (v89 >> 61)
          sub_19C07C7FC();
        v90 = operator new(8 * v89);
        v91 = &v90[8 * v86];
        *v91 = v80;
        v83 = (uint64_t)(v91 + 1);
        if (v81 != v84)
        {
LABEL_88:
          v92 = v81 - 8 - v84;
          if (v92 < 0x58)
          {
            __src = v128;
            goto LABEL_97;
          }
          v93 = v81 - &v90[v85];
          __src = v128;
          if (v93 < 0x20)
            goto LABEL_138;
          v94 = (v92 >> 3) + 1;
          v95 = 8 * (v94 & 0x3FFFFFFFFFFFFFFCLL);
          v96 = &v81[-v95];
          v91 = (_QWORD *)((char *)v91 - v95);
          v97 = &v90[8 * v86 - 16];
          v98 = v81 - 16;
          v99 = v94 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v100 = *(_OWORD *)v98;
            *(v97 - 1) = *((_OWORD *)v98 - 1);
            *v97 = v100;
            v97 -= 2;
            v98 -= 32;
            v99 -= 4;
          }
          while (v99);
          v81 = v96;
          if (v94 != (v94 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_138:
            do
            {
LABEL_97:
              v101 = *((_QWORD *)v81 - 1);
              v81 -= 8;
              *--v91 = v101;
            }
            while (v81 != v84);
          }
          v81 = *v127;
          *(_QWORD *)(a1 + 1024) = v91;
          *(_QWORD *)(a1 + 1032) = v83;
          *(_QWORD *)(a1 + 1040) = &v90[8 * v89];
          if (!v81)
            goto LABEL_100;
LABEL_99:
          operator delete(v81);
          goto LABEL_100;
        }
      }
      else
      {
        v90 = 0;
        v91 = (_QWORD *)(8 * v86);
        *(_QWORD *)(8 * v86) = v80;
        v83 = 8 * v86 + 8;
        if (v81 != v84)
          goto LABEL_88;
      }
      __src = v128;
      *(_QWORD *)(a1 + 1024) = v91;
      *(_QWORD *)(a1 + 1032) = v83;
      *(_QWORD *)(a1 + 1040) = &v90[8 * v89];
      if (v81)
        goto LABEL_99;
LABEL_100:
      *(_QWORD *)(a1 + 1032) = v83;
      v102 = *((_QWORD *)v79 + 71);
      v103 = *(char **)(a1 + 1056);
      v104 = *(_QWORD *)(a1 + 1064);
      if ((unint64_t)v103 < v104)
      {
        *(_QWORD *)v103 = v102;
        v78 = (uint64_t)(v103 + 8);
        goto LABEL_76;
      }
      v105 = *v126;
      v106 = v103 - *v126;
      v107 = v106 >> 3;
      v108 = (v106 >> 3) + 1;
      if (v108 >> 61)
        sub_19C07DA0C();
      v109 = v104 - (_QWORD)v105;
      if (v109 >> 2 > v108)
        v108 = v109 >> 2;
      if ((unint64_t)v109 >= 0x7FFFFFFFFFFFFFF8)
        v110 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v110 = v108;
      if (v110)
      {
        if (v110 >> 61)
          sub_19C07C7FC();
        v111 = operator new(8 * v110);
        v112 = &v111[8 * v107];
        *v112 = v102;
        v78 = (uint64_t)(v112 + 1);
        if (v103 == v105)
        {
LABEL_113:
          __src = v128;
          *(_QWORD *)(a1 + 1048) = v112;
          *(_QWORD *)(a1 + 1056) = v78;
          *(_QWORD *)(a1 + 1064) = &v111[8 * v110];
          if (!v103)
            goto LABEL_76;
LABEL_121:
          operator delete(v103);
          goto LABEL_76;
        }
      }
      else
      {
        v111 = 0;
        v112 = (_QWORD *)(8 * v107);
        *(_QWORD *)(8 * v107) = v102;
        v78 = 8 * v107 + 8;
        if (v103 == v105)
          goto LABEL_113;
      }
      v113 = v103 - 8 - v105;
      if (v113 < 0x58)
      {
        __src = v128;
        do
        {
LABEL_119:
          v122 = *((_QWORD *)v103 - 1);
          v103 -= 8;
          *--v112 = v122;
        }
        while (v103 != v105);
        goto LABEL_120;
      }
      v114 = v103 - &v111[v106];
      __src = v128;
      if (v114 < 0x20)
        goto LABEL_119;
      v115 = (v113 >> 3) + 1;
      v116 = 8 * (v115 & 0x3FFFFFFFFFFFFFFCLL);
      v117 = &v103[-v116];
      v112 = (_QWORD *)((char *)v112 - v116);
      v118 = &v111[8 * v107 - 16];
      v119 = (__int128 *)(v103 - 16);
      v120 = v115 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v121 = *v119;
        *(v118 - 1) = *(v119 - 1);
        *v118 = v121;
        v118 -= 2;
        v119 -= 2;
        v120 -= 4;
      }
      while (v120);
      v103 = v117;
      if (v115 != (v115 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_119;
LABEL_120:
      v103 = *v126;
      *(_QWORD *)(a1 + 1048) = v112;
      *(_QWORD *)(a1 + 1056) = v78;
      *(_QWORD *)(a1 + 1064) = &v111[8 * v110];
      if (v103)
        goto LABEL_121;
LABEL_76:
      *(_QWORD *)(a1 + 1056) = v78;
      ++v77;
    }
    while (v77 < *(int *)(a1 + 1072));
  }
  return a1;
}

void sub_19C220038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, void **a11, void **a12, void **a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  _QWORD *v20;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  v22 = *a10;
  if (*a10)
  {
    v20[139] = v22;
    operator delete(v22);
    v23 = *a11;
    if (!*a11)
    {
LABEL_3:
      v24 = *a12;
      if (!*a12)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    v23 = *a11;
    if (!*a11)
      goto LABEL_3;
  }
  v20[136] = v23;
  operator delete(v23);
  v24 = *a12;
  if (!*a12)
  {
LABEL_4:
    v25 = *a13;
    if (!*a13)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  v20[132] = v24;
  operator delete(v24);
  v25 = *a13;
  if (!*a13)
  {
LABEL_5:
    sub_19C18E518((uint64_t)v20);
    _Unwind_Resume(a1);
  }
LABEL_9:
  v20[129] = v25;
  operator delete(v25);
  sub_19C18E518((uint64_t)v20);
  _Unwind_Resume(a1);
}

uint64_t sub_19C220118(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  v4 = (_QWORD *)a1[20];
  v5 = (_QWORD *)a1[21];
  if (v4 == v5)
  {
    a1[21] = v4;
    if (!a1[31])
      return (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 24))(a2, a1);
    goto LABEL_8;
  }
  do
  {
    if (*v4)
      (*(void (**)(_QWORD))(*(_QWORD *)*v4 + 8))(*v4);
    ++v4;
  }
  while (v4 != v5);
  a1[21] = a1[20];
  if (a1[31])
  {
LABEL_8:
    v7 = a1[29];
    v6 = (uint64_t *)a1[30];
    v8 = *v6;
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v7 + 8);
    **(_QWORD **)(v7 + 8) = v8;
    a1[31] = 0;
    if (v6 != a1 + 29)
    {
      do
      {
        v9 = (uint64_t *)v6[1];
        operator delete(v6);
        v6 = v9;
      }
      while (v9 != a1 + 29);
    }
  }
  return (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 24))(a2, a1);
}

int64x2_t sub_19C2201DC(uint64_t a1, int a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t **v7;
  uint64_t v8;
  char *v9;
  int v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  int64x2_t result;

  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 224))(a1);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 216))(a1, 1);
  v7 = (uint64_t **)(a1 + 48);
  v6 = *(char **)(a1 + 48);
  v8 = *(int *)(a1 + 568);
  if (v6)
  {
    while (1)
    {
      while (1)
      {
        v9 = v6;
        v10 = *((_DWORD *)v6 + 8);
        if (v10 <= a2)
          break;
        v6 = *(char **)v9;
        v7 = (uint64_t **)v9;
        if (!*(_QWORD *)v9)
          goto LABEL_8;
      }
      if (v10 >= a2)
        break;
      v6 = (char *)*((_QWORD *)v9 + 1);
      if (!v6)
      {
        v7 = (uint64_t **)(v9 + 8);
        goto LABEL_8;
      }
    }
  }
  else
  {
    v9 = (char *)(a1 + 48);
LABEL_8:
    v11 = v9;
    v9 = (char *)operator new(0x50uLL);
    *((_DWORD *)v9 + 8) = a2;
    *(_OWORD *)(v9 + 40) = 0u;
    *(_OWORD *)(v9 + 56) = 0u;
    *((_QWORD *)v9 + 9) = 0;
    *(_QWORD *)v9 = 0;
    *((_QWORD *)v9 + 1) = 0;
    *((_QWORD *)v9 + 2) = v11;
    *v7 = (uint64_t *)v9;
    v12 = **(_QWORD **)(a1 + 40);
    v13 = (uint64_t *)v9;
    if (v12)
    {
      *(_QWORD *)(a1 + 40) = v12;
      v13 = *v7;
    }
    sub_19C07CC40(*(uint64_t **)(a1 + 48), v13);
    ++*(_QWORD *)(a1 + 56);
  }
  result = vdupq_n_s64(1uLL);
  *(int64x2_t *)(v9 + 40) = result;
  *((_QWORD *)v9 + 7) = v8;
  *((_QWORD *)v9 + 8) = v4;
  *((_QWORD *)v9 + 9) = v5;
  return result;
}

uint64_t sub_19C2202F8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *__src)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float v12;
  int v13;
  int *v14;
  unint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  int *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  _OWORD *v29;
  int *v30;
  uint64_t v31;
  __int128 v32;
  int v33;
  int v34;
  int *v35;
  unint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  int *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  _OWORD *v49;
  int *v50;
  uint64_t v51;
  __int128 v52;
  int v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _BYTE *v64;
  _QWORD *v65;
  char *v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _OWORD *v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  _BYTE *v90;
  _QWORD *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _OWORD *v97;
  char *v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _BYTE *v111;
  _QWORD *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  _OWORD *v118;
  __int128 *v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  void **v124;
  void **v125;
  char **v126;
  char **v127;
  _QWORD *v128;
  void *__p[2];
  uint64_t v130;
  int v131;
  int64x2_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v136 = *MEMORY[0x1E0C80C00];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_19C07C6E8(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v130 = *(_QWORD *)(a2 + 16);
  }
  sub_19C19065C(a1, (__int128 *)__p, a3, __src);
  if (SHIBYTE(v130) < 0)
    operator delete(__p[0]);
  *(_QWORD *)a1 = &unk_1E3D242F8;
  *(_QWORD *)(a1 + 1016) = __src[7];
  v126 = (char **)(a1 + 1048);
  v127 = (char **)(a1 + 1024);
  v124 = (void **)(a1 + 1104);
  v125 = (void **)(a1 + 1080);
  *(_OWORD *)(a1 + 1056) = 0u;
  *(_OWORD *)(a1 + 1040) = 0u;
  *(_OWORD *)(a1 + 1024) = 0u;
  *(_OWORD *)(a1 + 1096) = 0u;
  *(_OWORD *)(a1 + 1112) = 0u;
  *(_OWORD *)(a1 + 1080) = 0u;
  v7 = *((int *)__src + 32);
  v131 = 1;
  v132 = vdupq_n_s64(1uLL);
  v134 = 0;
  v135 = 0;
  v133 = v7;
  sub_19C07C964(a1 + 16, &v131, (int *)&v136);
  v8 = *((int *)__src + 64);
  v131 = 9;
  v132 = vdupq_n_s64(1uLL);
  v134 = 0;
  v135 = 0;
  v133 = v8;
  sub_19C07C964(a1 + 40, &v131, (int *)&v136);
  LODWORD(v9) = *((_DWORD *)__src + 80);
  *(_DWORD *)(a1 + 1072) = v9;
  if ((int)v9 >= 1)
  {
    v10 = 0;
    while (1)
    {
      v12 = *(float *)(__src[71] + 4 * v10);
      v13 = (int)(*(float *)(__src[70] + 4 * v10) + 0.5);
      v14 = *(int **)(a1 + 1088);
      v15 = *(_QWORD *)(a1 + 1096);
      if ((unint64_t)v14 < v15)
      {
        *v14 = v13;
        v16 = (uint64_t)(v14 + 1);
        goto LABEL_31;
      }
      v17 = (int *)*v125;
      v18 = (char *)v14 - (_BYTE *)*v125;
      v19 = v18 >> 2;
      v20 = (v18 >> 2) + 1;
      if (v20 >> 62)
        sub_19C07DA0C();
      v21 = v15 - (_QWORD)v17;
      if (v21 >> 1 > v20)
        v20 = v21 >> 1;
      v22 = (unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL ? 0x3FFFFFFFFFFFFFFFLL : v20;
      if (v22)
        break;
      v23 = 0;
      v24 = (int *)(4 * v19);
      *(_DWORD *)(4 * v19) = v13;
      v16 = 4 * v19 + 4;
      if (v14 != v17)
        goto LABEL_23;
LABEL_29:
      *(_QWORD *)(a1 + 1080) = v24;
      *(_QWORD *)(a1 + 1088) = v16;
      *(_QWORD *)(a1 + 1096) = &v23[4 * v22];
      if (v17)
        operator delete(v17);
LABEL_31:
      *(_QWORD *)(a1 + 1088) = v16;
      v34 = (int)(v12 + 0.5);
      v35 = *(int **)(a1 + 1112);
      v36 = *(_QWORD *)(a1 + 1120);
      if ((unint64_t)v35 >= v36)
      {
        v37 = (int *)*v124;
        v38 = (char *)v35 - (_BYTE *)*v124;
        v39 = v38 >> 2;
        v40 = (v38 >> 2) + 1;
        if (v40 >> 62)
          sub_19C07DA0C();
        v41 = v36 - (_QWORD)v37;
        if (v41 >> 1 > v40)
          v40 = v41 >> 1;
        if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFFCLL)
          v42 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v42 = v40;
        if (v42)
        {
          if (v42 >> 62)
            sub_19C07C7FC();
          v43 = operator new(4 * v42);
          v44 = (int *)&v43[4 * v39];
          *v44 = v34;
          v11 = (uint64_t)(v44 + 1);
          if (v35 == v37)
            goto LABEL_49;
LABEL_43:
          v45 = (char *)(v35 - 1) - (char *)v37;
          if (v45 < 0x2C)
            goto LABEL_135;
          if ((unint64_t)((char *)v35 - &v43[v38]) < 0x20)
            goto LABEL_135;
          v46 = (v45 >> 2) + 1;
          v47 = 4 * (v46 & 0x7FFFFFFFFFFFFFF8);
          v48 = &v35[v47 / 0xFFFFFFFFFFFFFFFCLL];
          v44 = (int *)((char *)v44 - v47);
          v49 = &v43[4 * v39 - 16];
          v50 = v35 - 4;
          v51 = v46 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v52 = *(_OWORD *)v50;
            *(v49 - 1) = *((_OWORD *)v50 - 1);
            *v49 = v52;
            v49 -= 2;
            v50 -= 8;
            v51 -= 8;
          }
          while (v51);
          v35 = v48;
          if (v46 != (v46 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_135:
            do
            {
              v53 = *--v35;
              *--v44 = v53;
            }
            while (v35 != v37);
          }
        }
        else
        {
          v43 = 0;
          v44 = (int *)(4 * v39);
          *(_DWORD *)(4 * v39) = v34;
          v11 = 4 * v39 + 4;
          if (v35 != v37)
            goto LABEL_43;
        }
LABEL_49:
        *(_QWORD *)(a1 + 1104) = v44;
        *(_QWORD *)(a1 + 1112) = v11;
        *(_QWORD *)(a1 + 1120) = &v43[4 * v42];
        if (v37)
          operator delete(v37);
        goto LABEL_9;
      }
      *v35 = v34;
      v11 = (uint64_t)(v35 + 1);
LABEL_9:
      *(_QWORD *)(a1 + 1112) = v11;
      ++v10;
      v9 = *(int *)(a1 + 1072);
      if (v10 >= v9)
        goto LABEL_51;
    }
    if (v22 >> 62)
      sub_19C07C7FC();
    v23 = operator new(4 * v22);
    v24 = (int *)&v23[4 * v19];
    *v24 = v13;
    v16 = (uint64_t)(v24 + 1);
    if (v14 == v17)
      goto LABEL_29;
LABEL_23:
    v25 = (char *)(v14 - 1) - (char *)v17;
    if (v25 < 0x2C)
      goto LABEL_136;
    if ((unint64_t)((char *)v14 - &v23[v18]) < 0x20)
      goto LABEL_136;
    v26 = (v25 >> 2) + 1;
    v27 = 4 * (v26 & 0x7FFFFFFFFFFFFFF8);
    v28 = &v14[v27 / 0xFFFFFFFFFFFFFFFCLL];
    v24 = (int *)((char *)v24 - v27);
    v29 = &v23[4 * v19 - 16];
    v30 = v14 - 4;
    v31 = v26 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v32 = *(_OWORD *)v30;
      *(v29 - 1) = *((_OWORD *)v30 - 1);
      *v29 = v32;
      v29 -= 2;
      v30 -= 8;
      v31 -= 8;
    }
    while (v31);
    v14 = v28;
    if (v26 != (v26 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_136:
      do
      {
        v33 = *--v14;
        *--v24 = v33;
      }
      while (v14 != v17);
    }
    goto LABEL_29;
  }
LABEL_51:
  **(_DWORD **)(a1 + 1104) = v9 + **(_DWORD **)(a1 + 1104) - 1;
  v54 = __src[56];
  v55 = *(char **)(a1 + 1032);
  v56 = *(_QWORD *)(a1 + 1040);
  if ((unint64_t)v55 < v56)
  {
    *(_QWORD *)v55 = v54;
    v57 = (uint64_t)(v55 + 8);
    goto LABEL_73;
  }
  v58 = *v127;
  v59 = v55 - *v127;
  v60 = v59 >> 3;
  v61 = (v59 >> 3) + 1;
  if (v61 >> 61)
    sub_19C07DA0C();
  v62 = v56 - (_QWORD)v58;
  if (v62 >> 2 > v61)
    v61 = v62 >> 2;
  if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFF8)
    v63 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v63 = v61;
  if (!v63)
  {
    v64 = 0;
    v65 = (_QWORD *)(8 * v60);
    v66 = 0;
    *(_QWORD *)(8 * v60) = v54;
    v57 = 8 * v60 + 8;
    v67 = (char *)(v55 - v58);
    if (v55 != v58)
      goto LABEL_62;
LABEL_71:
    *(_QWORD *)(a1 + 1024) = v65;
    *(_QWORD *)(a1 + 1032) = v57;
    *(_QWORD *)(a1 + 1040) = v66;
    if (!v55)
      goto LABEL_73;
    goto LABEL_72;
  }
  if (v63 >> 61)
    sub_19C07C7FC();
  v64 = operator new(8 * v63);
  v65 = &v64[8 * v60];
  v66 = &v64[8 * v63];
  *v65 = v54;
  v57 = (uint64_t)(v65 + 1);
  v67 = (char *)(v55 - v58);
  if (v55 == v58)
    goto LABEL_71;
LABEL_62:
  v68 = (unint64_t)(v67 - 8);
  if (v68 < 0x58)
    goto LABEL_137;
  if ((unint64_t)(v55 - v64 - v59) < 0x20)
    goto LABEL_137;
  v69 = (v68 >> 3) + 1;
  v70 = 8 * (v69 & 0x3FFFFFFFFFFFFFFCLL);
  v71 = &v55[-v70];
  v65 = (_QWORD *)((char *)v65 - v70);
  v72 = &v64[8 * v60 - 16];
  v73 = v55 - 16;
  v74 = v69 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    v75 = *(_OWORD *)v73;
    *(v72 - 1) = *((_OWORD *)v73 - 1);
    *v72 = v75;
    v72 -= 2;
    v73 -= 32;
    v74 -= 4;
  }
  while (v74);
  v55 = v71;
  if (v69 != (v69 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_137:
    do
    {
      v76 = *((_QWORD *)v55 - 1);
      v55 -= 8;
      *--v65 = v76;
    }
    while (v55 != v58);
  }
  v55 = *v127;
  *(_QWORD *)(a1 + 1024) = v65;
  *(_QWORD *)(a1 + 1032) = v57;
  *(_QWORD *)(a1 + 1040) = v66;
  if (v55)
LABEL_72:
    operator delete(v55);
LABEL_73:
  *(_QWORD *)(a1 + 1032) = v57;
  if (*(int *)(a1 + 1072) >= 2)
  {
    v77 = 1;
    v128 = __src;
    do
    {
      v79 = (char *)&__src[v77];
      v80 = *((_QWORD *)v79 + 56);
      v81 = *(char **)(a1 + 1032);
      v82 = *(_QWORD *)(a1 + 1040);
      if ((unint64_t)v81 < v82)
      {
        *(_QWORD *)v81 = v80;
        v83 = (uint64_t)(v81 + 8);
        goto LABEL_100;
      }
      v84 = *v127;
      v85 = v81 - *v127;
      v86 = v85 >> 3;
      v87 = (v85 >> 3) + 1;
      if (v87 >> 61)
        sub_19C07DA0C();
      v88 = v82 - (_QWORD)v84;
      if (v88 >> 2 > v87)
        v87 = v88 >> 2;
      if ((unint64_t)v88 >= 0x7FFFFFFFFFFFFFF8)
        v89 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v89 = v87;
      if (v89)
      {
        if (v89 >> 61)
          sub_19C07C7FC();
        v90 = operator new(8 * v89);
        v91 = &v90[8 * v86];
        *v91 = v80;
        v83 = (uint64_t)(v91 + 1);
        if (v81 != v84)
        {
LABEL_88:
          v92 = v81 - 8 - v84;
          if (v92 < 0x58)
          {
            __src = v128;
            goto LABEL_97;
          }
          v93 = v81 - &v90[v85];
          __src = v128;
          if (v93 < 0x20)
            goto LABEL_138;
          v94 = (v92 >> 3) + 1;
          v95 = 8 * (v94 & 0x3FFFFFFFFFFFFFFCLL);
          v96 = &v81[-v95];
          v91 = (_QWORD *)((char *)v91 - v95);
          v97 = &v90[8 * v86 - 16];
          v98 = v81 - 16;
          v99 = v94 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v100 = *(_OWORD *)v98;
            *(v97 - 1) = *((_OWORD *)v98 - 1);
            *v97 = v100;
            v97 -= 2;
            v98 -= 32;
            v99 -= 4;
          }
          while (v99);
          v81 = v96;
          if (v94 != (v94 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_138:
            do
            {
LABEL_97:
              v101 = *((_QWORD *)v81 - 1);
              v81 -= 8;
              *--v91 = v101;
            }
            while (v81 != v84);
          }
          v81 = *v127;
          *(_QWORD *)(a1 + 1024) = v91;
          *(_QWORD *)(a1 + 1032) = v83;
          *(_QWORD *)(a1 + 1040) = &v90[8 * v89];
          if (!v81)
            goto LABEL_100;
LABEL_99:
          operator delete(v81);
          goto LABEL_100;
        }
      }
      else
      {
        v90 = 0;
        v91 = (_QWORD *)(8 * v86);
        *(_QWORD *)(8 * v86) = v80;
        v83 = 8 * v86 + 8;
        if (v81 != v84)
          goto LABEL_88;
      }
      __src = v128;
      *(_QWORD *)(a1 + 1024) = v91;
      *(_QWORD *)(a1 + 1032) = v83;
      *(_QWORD *)(a1 + 1040) = &v90[8 * v89];
      if (v81)
        goto LABEL_99;
LABEL_100:
      *(_QWORD *)(a1 + 1032) = v83;
      v102 = *((_QWORD *)v79 + 71);
      v103 = *(char **)(a1 + 1056);
      v104 = *(_QWORD *)(a1 + 1064);
      if ((unint64_t)v103 < v104)
      {
        *(_QWORD *)v103 = v102;
        v78 = (uint64_t)(v103 + 8);
        goto LABEL_76;
      }
      v105 = *v126;
      v106 = v103 - *v126;
      v107 = v106 >> 3;
      v108 = (v106 >> 3) + 1;
      if (v108 >> 61)
        sub_19C07DA0C();
      v109 = v104 - (_QWORD)v105;
      if (v109 >> 2 > v108)
        v108 = v109 >> 2;
      if ((unint64_t)v109 >= 0x7FFFFFFFFFFFFFF8)
        v110 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v110 = v108;
      if (v110)
      {
        if (v110 >> 61)
          sub_19C07C7FC();
        v111 = operator new(8 * v110);
        v112 = &v111[8 * v107];
        *v112 = v102;
        v78 = (uint64_t)(v112 + 1);
        if (v103 == v105)
        {
LABEL_113:
          __src = v128;
          *(_QWORD *)(a1 + 1048) = v112;
          *(_QWORD *)(a1 + 1056) = v78;
          *(_QWORD *)(a1 + 1064) = &v111[8 * v110];
          if (!v103)
            goto LABEL_76;
LABEL_121:
          operator delete(v103);
          goto LABEL_76;
        }
      }
      else
      {
        v111 = 0;
        v112 = (_QWORD *)(8 * v107);
        *(_QWORD *)(8 * v107) = v102;
        v78 = 8 * v107 + 8;
        if (v103 == v105)
          goto LABEL_113;
      }
      v113 = v103 - 8 - v105;
      if (v113 < 0x58)
      {
        __src = v128;
        do
        {
LABEL_119:
          v122 = *((_QWORD *)v103 - 1);
          v103 -= 8;
          *--v112 = v122;
        }
        while (v103 != v105);
        goto LABEL_120;
      }
      v114 = v103 - &v111[v106];
      __src = v128;
      if (v114 < 0x20)
        goto LABEL_119;
      v115 = (v113 >> 3) + 1;
      v116 = 8 * (v115 & 0x3FFFFFFFFFFFFFFCLL);
      v117 = &v103[-v116];
      v112 = (_QWORD *)((char *)v112 - v116);
      v118 = &v111[8 * v107 - 16];
      v119 = (__int128 *)(v103 - 16);
      v120 = v115 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v121 = *v119;
        *(v118 - 1) = *(v119 - 1);
        *v118 = v121;
        v118 -= 2;
        v119 -= 2;
        v120 -= 4;
      }
      while (v120);
      v103 = v117;
      if (v115 != (v115 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_119;
LABEL_120:
      v103 = *v126;
      *(_QWORD *)(a1 + 1048) = v112;
      *(_QWORD *)(a1 + 1056) = v78;
      *(_QWORD *)(a1 + 1064) = &v111[8 * v110];
      if (v103)
        goto LABEL_121;
LABEL_76:
      *(_QWORD *)(a1 + 1056) = v78;
      ++v77;
    }
    while (v77 < *(int *)(a1 + 1072));
  }
  return a1;
}

void sub_19C220C1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, void **a11, void **a12, void **a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  _QWORD *v20;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  v22 = *a10;
  if (*a10)
  {
    v20[139] = v22;
    operator delete(v22);
    v23 = *a11;
    if (!*a11)
    {
LABEL_3:
      v24 = *a12;
      if (!*a12)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    v23 = *a11;
    if (!*a11)
      goto LABEL_3;
  }
  v20[136] = v23;
  operator delete(v23);
  v24 = *a12;
  if (!*a12)
  {
LABEL_4:
    v25 = *a13;
    if (!*a13)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  v20[132] = v24;
  operator delete(v24);
  v25 = *a13;
  if (!*a13)
  {
LABEL_5:
    sub_19C190830((uint64_t)v20);
    _Unwind_Resume(a1);
  }
LABEL_9:
  v20[129] = v25;
  operator delete(v25);
  sub_19C190830((uint64_t)v20);
  _Unwind_Resume(a1);
}

uint64_t sub_19C220CFC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  v4 = (_QWORD *)a1[20];
  v5 = (_QWORD *)a1[21];
  if (v4 == v5)
  {
    a1[21] = v4;
    if (!a1[31])
      return (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 128))(a2, a1);
    goto LABEL_8;
  }
  do
  {
    if (*v4)
      (*(void (**)(_QWORD))(*(_QWORD *)*v4 + 8))(*v4);
    ++v4;
  }
  while (v4 != v5);
  a1[21] = a1[20];
  if (a1[31])
  {
LABEL_8:
    v7 = a1[29];
    v6 = (uint64_t *)a1[30];
    v8 = *v6;
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v7 + 8);
    **(_QWORD **)(v7 + 8) = v8;
    a1[31] = 0;
    if (v6 != a1 + 29)
    {
      do
      {
        v9 = (uint64_t *)v6[1];
        operator delete(v6);
        v6 = v9;
      }
      while (v9 != a1 + 29);
    }
  }
  return (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 128))(a2, a1);
}

int64x2_t sub_19C220DC0(uint64_t a1, int a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t **v7;
  uint64_t v8;
  char *v9;
  int v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  int64x2_t result;

  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 224))(a1);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 216))(a1, 1);
  v7 = (uint64_t **)(a1 + 48);
  v6 = *(char **)(a1 + 48);
  v8 = *(int *)(a1 + 568);
  if (v6)
  {
    while (1)
    {
      while (1)
      {
        v9 = v6;
        v10 = *((_DWORD *)v6 + 8);
        if (v10 <= a2)
          break;
        v6 = *(char **)v9;
        v7 = (uint64_t **)v9;
        if (!*(_QWORD *)v9)
          goto LABEL_8;
      }
      if (v10 >= a2)
        break;
      v6 = (char *)*((_QWORD *)v9 + 1);
      if (!v6)
      {
        v7 = (uint64_t **)(v9 + 8);
        goto LABEL_8;
      }
    }
  }
  else
  {
    v9 = (char *)(a1 + 48);
LABEL_8:
    v11 = v9;
    v9 = (char *)operator new(0x50uLL);
    *((_DWORD *)v9 + 8) = a2;
    *(_OWORD *)(v9 + 40) = 0u;
    *(_OWORD *)(v9 + 56) = 0u;
    *((_QWORD *)v9 + 9) = 0;
    *(_QWORD *)v9 = 0;
    *((_QWORD *)v9 + 1) = 0;
    *((_QWORD *)v9 + 2) = v11;
    *v7 = (uint64_t *)v9;
    v12 = **(_QWORD **)(a1 + 40);
    v13 = (uint64_t *)v9;
    if (v12)
    {
      *(_QWORD *)(a1 + 40) = v12;
      v13 = *v7;
    }
    sub_19C07CC40(*(uint64_t **)(a1 + 48), v13);
    ++*(_QWORD *)(a1 + 56);
  }
  result = vdupq_n_s64(1uLL);
  *(int64x2_t *)(v9 + 40) = result;
  *((_QWORD *)v9 + 7) = v8;
  *((_QWORD *)v9 + 8) = v4;
  *((_QWORD *)v9 + 9) = v5;
  return result;
}

uint64_t sub_19C220EDC(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  *a1 = &unk_1E3D24468;
  v2 = (void *)a1[138];
  if (v2)
  {
    a1[139] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[135];
  if (v3)
  {
    a1[136] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[131];
  if (v4)
  {
    a1[132] = v4;
    operator delete(v4);
  }
  v5 = (void *)a1[128];
  if (v5)
  {
    a1[129] = v5;
    operator delete(v5);
  }
  return sub_19C18E518((uint64_t)a1);
}

void sub_19C220F4C(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  *a1 = &unk_1E3D24468;
  v2 = (void *)a1[138];
  if (v2)
  {
    a1[139] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[135];
  if (v3)
  {
    a1[136] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[131];
  if (v4)
  {
    a1[132] = v4;
    operator delete(v4);
  }
  v5 = (void *)a1[128];
  if (v5)
  {
    a1[129] = v5;
    operator delete(v5);
  }
  v6 = (void *)sub_19C18E518((uint64_t)a1);
  operator delete(v6);
}

uint64_t sub_19C220FC0(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  *a1 = &unk_1E3D242F8;
  v2 = (void *)a1[138];
  if (v2)
  {
    a1[139] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[135];
  if (v3)
  {
    a1[136] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[131];
  if (v4)
  {
    a1[132] = v4;
    operator delete(v4);
  }
  v5 = (void *)a1[128];
  if (v5)
  {
    a1[129] = v5;
    operator delete(v5);
  }
  return sub_19C190830((uint64_t)a1);
}

void sub_19C221030(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  *a1 = &unk_1E3D242F8;
  v2 = (void *)a1[138];
  if (v2)
  {
    a1[139] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[135];
  if (v3)
  {
    a1[136] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[131];
  if (v4)
  {
    a1[132] = v4;
    operator delete(v4);
  }
  v5 = (void *)a1[128];
  if (v5)
  {
    a1[129] = v5;
    operator delete(v5);
  }
  v6 = (void *)sub_19C190830((uint64_t)a1);
  operator delete(v6);
}

uint64_t sub_19C2210A4()
{
  return 32;
}

uint64_t sub_19C2210AC()
{
  return 16;
}

uint64_t sub_19C2210B4()
{
  return 8;
}

float sub_19C2210BC()
{
  return 0.039062;
}

float sub_19C2210C8()
{
  return 0.00015259;
}

void sub_19C2210D4(int a1)
{
  _DWORD *exception;

  exception = __cxa_allocate_exception(4uLL);
  *exception = a1;
  __cxa_throw(exception, MEMORY[0x1E0DE4EF0], 0);
}

uint64_t sub_19C221100(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  _QWORD v9[11];
  char v10;
  uint64_t v11;
  unsigned int v12;

  v12 = 0;
  sub_19C0FF394((uint64_t)v8);
  v2 = *(char *)(a1 + 23);
  if (v2 >= 0)
    v3 = a1;
  else
    v3 = *(_QWORD *)a1;
  if (v2 >= 0)
    v4 = *(unsigned __int8 *)(a1 + 23);
  else
    v4 = *(_QWORD *)(a1 + 8);
  sub_19C07DCDC(v9, v3, v4);
  MEMORY[0x1A1AD1AB8](v8, &v12);
  v5 = v12;
  v8[0] = *MEMORY[0x1E0DE4F50];
  v6 = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 72);
  *(_QWORD *)((char *)v8 + *(_QWORD *)(v8[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 64);
  v9[0] = v6;
  v9[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v10 < 0)
    operator delete((void *)v9[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x1A1AD1C08](&v11);
  return v5;
}

void sub_19C2211D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C0FF6FC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

float sub_19C2211E8(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  float v5;
  uint64_t v6;
  _QWORD v8[2];
  _QWORD v9[11];
  char v10;
  uint64_t v11;
  float v12;

  v12 = 0.0;
  sub_19C0FF394((uint64_t)v8);
  v2 = *(char *)(a1 + 23);
  if (v2 >= 0)
    v3 = a1;
  else
    v3 = *(_QWORD *)a1;
  if (v2 >= 0)
    v4 = *(unsigned __int8 *)(a1 + 23);
  else
    v4 = *(_QWORD *)(a1 + 8);
  sub_19C07DCDC(v9, v3, v4);
  MEMORY[0x1A1AD1AAC](v8, &v12);
  v5 = v12;
  v8[0] = *MEMORY[0x1E0DE4F50];
  v6 = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 72);
  *(_QWORD *)((char *)v8 + *(_QWORD *)(v8[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 64);
  v9[0] = v6;
  v9[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v10 < 0)
    operator delete((void *)v9[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x1A1AD1C08](&v11);
  return v5;
}

void sub_19C2212C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_19C0FF6FC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

size_t sub_19C2212D8(FILE *__stream, int a2, void *__ptr)
{
  return fread(__ptr, 4uLL, 1uLL, __stream);
}

size_t sub_19C2212EC(FILE *__stream, uint64_t a2, uint64_t a3)
{
  size_t v5;
  void *v6;
  int __ptr;

  __ptr = -1;
  fread(&__ptr, 4uLL, 1uLL, __stream);
  v5 = __ptr;
  std::string::resize((std::string *)a3, __ptr, 0);
  if (*(char *)(a3 + 23) >= 0)
    v6 = (void *)a3;
  else
    v6 = *(void **)a3;
  return fread(v6, v5, 1uLL, __stream);
}

size_t sub_19C221368(FILE *__stream, _DWORD *a2, char a3)
{
  size_t result;
  char __ptr;

  __ptr = a3;
  result = fwrite(&__ptr, 1uLL, 1uLL, __stream);
  ++*a2;
  return result;
}

size_t sub_19C2213B0(FILE *__stream, _DWORD *a2, int a3)
{
  size_t result;
  int __ptr;

  __ptr = a3;
  result = fwrite(&__ptr, 4uLL, 1uLL, __stream);
  *a2 += 4;
  return result;
}

size_t sub_19C2213F8(size_t __stream, _DWORD *a2, char a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  FILE *v9;
  char __ptr;
  uint64_t v11;
  uint64_t v12;

  if (a4 >= 1)
  {
    v11 = v4;
    v12 = v5;
    v6 = a4;
    v9 = (FILE *)__stream;
    do
    {
      __ptr = a3;
      __stream = fwrite(&__ptr, 1uLL, 1uLL, v9);
      ++*a2;
      --v6;
    }
    while (v6);
  }
  return __stream;
}

size_t sub_19C221464(FILE *__stream, _DWORD *a2, int *a3)
{
  size_t result;
  int __ptr;

  __ptr = *a3;
  result = fwrite(&__ptr, 4uLL, 1uLL, __stream);
  *a2 += 4;
  return result;
}

size_t sub_19C2214B0(FILE *__stream, _DWORD *a2, void *__ptr, uint64_t a4, int a5)
{
  uint64_t v7;
  size_t result;

  v7 = a5;
  result = fwrite(__ptr, 4uLL, a5, __stream);
  if (result != v7)
    sub_19C2210D4(9);
  *a2 += 4 * a5;
  return result;
}

size_t sub_19C22150C(FILE *__stream, _DWORD *a2, float *a3, _WORD *__ptr, int a5)
{
  _WORD *v7;
  uint64_t v8;
  int v9;
  float v10;
  size_t result;

  if (a5 >= 1)
  {
    v7 = __ptr;
    v8 = a5;
    do
    {
      v10 = *a3;
      if (*a3 <= -5.0)
      {
        LOWORD(v9) = -32767;
      }
      else if (v10 < 5.0 && (v9 = llroundf(v10 * 6553.6), v9 < 0x8000))
      {
        if (v9 <= -32767)
          LOWORD(v9) = -32767;
      }
      else
      {
        LOWORD(v9) = 0x7FFF;
      }
      *v7++ = v9;
      ++a3;
      --v8;
    }
    while (v8);
  }
  result = fwrite(__ptr, 2uLL, a5, __stream);
  if (result != a5)
    sub_19C2210D4(9);
  *a2 += 2 * a5;
  return result;
}

size_t sub_19C2215E4(FILE *__stream, _DWORD *a2, float *a3, _BYTE *__ptr, int a5)
{
  _BYTE *v7;
  uint64_t v8;
  int v9;
  float v10;
  size_t result;

  if (a5 >= 1)
  {
    v7 = __ptr;
    v8 = a5;
    do
    {
      v10 = *a3;
      if (*a3 <= -5.0)
      {
        LOBYTE(v9) = -127;
      }
      else if (v10 < 5.0 && (v9 = llroundf(v10 * 25.6), v9 <= 127))
      {
        if (v9 <= -127)
          LOBYTE(v9) = -127;
      }
      else
      {
        LOBYTE(v9) = 127;
      }
      *v7++ = v9;
      ++a3;
      --v8;
    }
    while (v8);
  }
  result = fwrite(__ptr, 1uLL, a5, __stream);
  if (result != a5)
    sub_19C2210D4(9);
  *a2 += a5;
  return result;
}

size_t sub_19C2216BC(FILE *__stream, _DWORD *a2, unint64_t a3, int8x16_t *__ptr, unsigned int a5, double a6, double a7, double a8, double a9, double a10, int8x16_t a11, double a12, int8x16_t a13)
{
  uint64_t v15;
  char *v16;
  uint64_t v17;
  float *v18;
  int v19;
  int v20;
  float v21;
  unsigned __int32 *v22;
  int8x16_t *v23;
  float32x4_t v24;
  uint64_t v31;
  int16x4_t v32;
  int16x4_t v33;
  int16x4_t v34;
  int16x4_t v35;
  size_t result;

  if ((int)a5 >= 1)
  {
    if (a5 >= 8 && (a3 + a5 <= (unint64_t)__ptr || (unint64_t)__ptr + 4 * a5 <= a3))
    {
      v15 = a5 & 0xFFFFFFF8;
      v22 = (unsigned __int32 *)(a3 + 4);
      v23 = __ptr + 1;
      v24 = (float32x4_t)vdupq_n_s32(0x3D200000u);
      __asm
      {
        FMOV            V3.4S, #-5.0
        FMOV            V4.4S, #5.0
      }
      v31 = v15;
      do
      {
        a11.i32[0] = *(v22 - 1);
        a13.i32[0] = *v22;
        v32 = (int16x4_t)vmovl_u8(*(uint8x8_t *)a11.i8).u64[0];
        v33 = vshr_n_s16(vshl_n_s16(v32, 8uLL), 8uLL);
        v34 = (int16x4_t)vmovl_u8(*(uint8x8_t *)a13.i8).u64[0];
        v35 = vshr_n_s16(vshl_n_s16(v34, 8uLL), 8uLL);
        a13 = (int8x16_t)vmovl_s16(vceq_s16(v34, (int16x4_t)0x7F007F007F007FLL));
        a11 = vbslq_s8((int8x16_t)vmovl_s16(vceq_s16(v32, (int16x4_t)0x7F007F007F007FLL)), _Q4, vbslq_s8((int8x16_t)vmovl_s16(vcgt_s16(v33, (int16x4_t)0x7E007E007E007ELL)), (int8x16_t)vmulq_f32(vcvtq_f32_s32(vmovl_s16(v33)), v24), _Q3));
        v23[-1] = a11;
        *v23 = vbslq_s8(a13, _Q4, vbslq_s8((int8x16_t)vmovl_s16(vcgt_s16(v35, (int16x4_t)0x7E007E007E007ELL)), (int8x16_t)vmulq_f32(vcvtq_f32_s32(vmovl_s16(v35)), v24), _Q3));
        v22 += 2;
        v23 += 2;
        v31 -= 8;
      }
      while (v31);
      if (v15 == a5)
        goto LABEL_14;
    }
    else
    {
      v15 = 0;
    }
    v16 = (char *)(a3 + v15);
    v17 = a5 - v15;
    v18 = (float *)&__ptr->i32[v15];
    do
    {
      v20 = *v16++;
      v19 = v20;
      v21 = -5.0;
      if (v20 >= -126)
      {
        v21 = 5.0;
        if (v19 != 127)
          v21 = (float)v19 * 0.039062;
      }
      *v18++ = v21;
      --v17;
    }
    while (v17);
  }
LABEL_14:
  result = fwrite(__ptr, 4uLL, (int)a5, __stream);
  if (result != a5)
    sub_19C2210D4(9);
  *a2 += 4 * a5;
  return result;
}

size_t sub_19C221844(FILE *__stream, _DWORD *a2, int16x4_t *a3, int8x16_t *__ptr, int a5)
{
  uint64_t v7;
  int16x4_t *v8;
  int8x16_t *v9;
  int16x4_t v10;
  float32x4_t v11;
  uint64_t v18;
  int8x16_t v19;
  size_t result;
  uint64_t v21;
  float *v22;
  __int16 *v23;
  int v24;
  int v25;
  float v26;

  if (a5 >= 1)
  {
    if (a5 >= 8)
    {
      v7 = a5 & 0xFFFFFFF8;
      v8 = a3 + 1;
      v9 = __ptr + 1;
      v10 = vdup_n_s16(0x8001u);
      v11 = (float32x4_t)vdupq_n_s32(0x39200000u);
      __asm
      {
        FMOV            V3.4S, #-5.0
        FMOV            V4.4S, #5.0
      }
      v18 = v7;
      do
      {
        v19 = vbslq_s8((int8x16_t)vmovl_s16(vceq_s16(*v8, (int16x4_t)0x8000800080008000)), _Q4, vbslq_s8((int8x16_t)vmovl_s16(vcgt_s16(*v8, v10)), (int8x16_t)vmulq_f32(vcvtq_f32_s32(vmovl_s16(*v8)), v11), _Q3));
        v9[-1] = vbslq_s8((int8x16_t)vmovl_s16(vceq_s16(v8[-1], (int16x4_t)0x8000800080008000)), _Q4, vbslq_s8((int8x16_t)vmovl_s16(vcgt_s16(v8[-1], v10)), (int8x16_t)vmulq_f32(vcvtq_f32_s32(vmovl_s16(v8[-1])), v11), _Q3));
        *v9 = v19;
        v8 += 2;
        v9 += 2;
        v18 -= 8;
      }
      while (v18);
      if (v7 == a5)
        goto LABEL_7;
    }
    else
    {
      v7 = 0;
    }
    v21 = a5 - v7;
    v22 = (float *)&__ptr->i32[v7];
    v23 = (__int16 *)a3 + v7;
    do
    {
      v25 = *v23++;
      v24 = v25;
      v26 = -5.0;
      if (v25 >= -32766)
      {
        v26 = 5.0;
        if (v24 != 0x7FFF)
          v26 = (float)v24 * 0.00015259;
      }
      *v22++ = v26;
      --v21;
    }
    while (v21);
  }
LABEL_7:
  result = fwrite(__ptr, 4uLL, a5, __stream);
  if (result != a5)
    sub_19C2210D4(9);
  *a2 += 4 * a5;
  return result;
}

